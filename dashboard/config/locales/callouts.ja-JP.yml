---
ja-JP:
  data:
    callouts:
      2-3 Artist Debugging 1:
        2-3_Artist_Debugging_1_a: アーティストは「ステップ」実行（じっこう）ボタンを持っていませんが、スライダーを左にドラッグすれば、プログラムを、ゆっくり動（うご）かすことができます。
      2-3 Bee Conditionals 5:
        Bee_Cond_5_1a: ムラサキ色の花は、1 または 0 の、ミツをもっていますが、プログラムを動（うご）かすまでは、わからないんです！
      4-5 Artist Patterns Free Play:
        4-5_Artist_Patterns_Free_Play_1: ブロックが、種類ごとに分けられています。クリックすると、その種類に含まれるブロックがで出てきます。
      4-5 Bee Conditionals 2:
        4_5_Bee_Conditionals_2_1: すべてのくもの下で花があるか調べてね。ハチの巣か どうかは 調べなくていいよ。
      AppLab Intro 7 - Change Screen Color:
        applab_hoc_finish: '画面は緑に変わりましたか？もしそうならば「終了」を押してください。そうでなければ「リセット」を押して、プログラムを変更した後、もう一度「実行」を押してください。

'
      AppLab Intro 7 - thisOrThatAddButton:
        AppLabHoCFinal11: You're now in Design Mode.
      CSD U3 - conditionals - transition:
        CSD_U3_L8_S6_C1: Put the console log statement here
      CSD U3 - conditionals - transition_2018:
        CSD_U3_L8_S6_C1: Put the console log statement here
      CSD U3 - conditionals - transition_2019:
        CSD_U3_L8_S6_C1: Put the console log statement here
      CSD U3 Boolean Predict:
        '': This program will print out a result here
      CSD U3 Boolean Predict_2018:
        '': This program will print out a result here
      CSD U3 Boolean Predict_2019:
        '': This program will print out a result here
      CSD U3 Sprites anitab 1:
        '': Click this to open the Animation Tab
      CSD U3 Sprites anitab 1_2018:
        '': Click this to open the Animation Tab
      CSD U3 Sprites anitab 1_2019:
        '': Click this to open the Animation Tab
      CSD U3 Sprites intro sprites:
        '': Use this block to create a sprite
      CSD U3 Sprites intro sprites_2018:
        '': Use this block to create a sprite
      CSD U3 Sprites intro sprites_2019:
        '': Use this block to create a sprite
      CSD U3 Sprites text:
        '': Use this block to put text on the screen
      CSD U3 Sprites text_2018:
        '': Use this block to put text on the screen
      CSD U3 Sprites text_2019:
        '': Use this block to put text on the screen
      CSD U3 UP_ARROW:
        '': Add an if statement and place your movement code inside it
      CSD U3 UP_ARROW_2018:
        '': Add an if statement and place your movement code inside it
      CSD U3 UP_ARROW_2018_2019:
        '': Add an if statement and place your movement code inside it
      CSD U3 Variables Predict Where X:
        CSD_U3_variables: Change the number here
      CSD U3 Variables Predict Where XY:
        grid: Click here to show the grid.
      CSD U3 Variables Predict Where XY_2018:
        grid: Click here to show the grid.
      CSD U3 Variables Predict Where XY_2019:
        grid: Click here to show the grid.
      CSD U3 Variables Predict Where X_2018:
        CSD_U3_variables: Change the number here
      CSD U3 Variables Predict Where X_2019:
        CSD_U3_variables: Change the number here
      CSD U3 abstraction accelerateX:
        CSD_U3_L11_S6_C1: Add your code here.
      CSD U3 abstraction accelerateX_2018:
        CSD_U3_L11_S6_C1: Add your code here.
      CSD U3 abstraction accelerateX_2019:
        CSD_U3_L11_S6_C1: Add your code here.
      CSD U3 abstraction accelerateY:
        CSD_U3_L11_S7_C1: Add your code here.
      CSD U3 abstraction accelerateY_2018:
        CSD_U3_L11_S7_C1: Add your code here.
      CSD U3 abstraction accelerateY_2019:
        CSD_U3_L11_S7_C1: Add your code here.
      CSD U3 abstraction jump:
        CSD_U3_L11_S17_C1: Look at this if statement
        CSD_U3_L11_S17_C2: Send the frog back down here
      CSD U3 abstraction jump_2018:
        CSD_U3_L11_S17_C1: Look at this if statement
        CSD_U3_L11_S17_C2: Send the frog back down here
      CSD U3 abstraction jump_2018_2019:
        CSD_U3_L11_S17_C1: Look at this if statement
        CSD_U3_L11_S17_C2: Send the frog back down here
      CSD U3 abstraction jumping:
        CSD_U3_L13_S8_C1: Set the velocity here
      CSD U3 abstraction jumping_2018:
        CSD_U3_L13_S8_C1: Set the velocity here
      CSD U3 abstraction jumping_2019:
        CSD_U3_L13_S8_C1: Set the velocity here
      CSD U3 abstraction looping:
        CSD_U3_L11_S17_C1: Look at this if statement
      CSD U3 abstraction looping_2018:
        CSD_U3_L11_S17_C1: Look at this if statement
      CSD U3 abstraction looping_2019:
        CSD_U3_L11_S17_C1: Look at this if statement
      CSD U3 abstraction rotation:
        CSD_U3_L11_S4_C1: Use the rotationSpeed block here
      CSD U3 abstraction rotation control:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction rotation control_2018:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction rotation control_2019:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction rotation_2018:
        CSD_U3_L11_S4_C1: Use the rotationSpeed block here
      CSD U3 abstraction rotation_2019:
        CSD_U3_L11_S4_C1: Use the rotationSpeed block here
      CSD U3 abstraction tumbleweed:
        CSD_U3_L11_S17_C1: Look at this if statement
      CSD U3 abstraction tumbleweed_2018:
        CSD_U3_L11_S17_C1: Look at this if statement
      CSD U3 abstraction tumbleweed_2019:
        CSD_U3_L11_S17_C1: Look at this if statement
      CSD U3 abstraction velocityX:
        CSD_U3_L11_S4_C1: Add your block here.
      CSD U3 abstraction velocityX control:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction velocityX control_2018:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction velocityX control_2019:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction velocityX if-statements:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction velocityX if-statements_2018:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction velocityX if-statements_2019:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction velocityX_2018:
        CSD_U3_L11_S4_C1: Add your block here.
      CSD U3 abstraction velocityX_2019:
        CSD_U3_L11_S4_C1: Add your block here.
      CSD U3 abstraction velocityY:
        CSD_U3_L11_S5_C1: Add your block here.
      CSD U3 abstraction velocityY control:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction velocityY control_2018:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction velocityY control_2019:
        CSD_U3_L11_S5_C1: Look at this code.
      CSD U3 abstraction velocityY_2018:
        CSD_U3_L11_S5_C1: Add your block here.
      CSD U3 abstraction velocityY_2019:
        CSD_U3_L11_S5_C1: Add your block here.
      CSD U3 collisions isTouching intro:
        CSD_U3_L12_S2_C1: Add your block here.
      CSD U3 collisions isTouching intro_2018:
        CSD_U3_L12_S2_C1: Add your block here.
      CSD U3 collisions isTouching intro_2019:
        CSD_U3_L12_S2_C1: Add your block here.
      CSD U3 collisions scoreboard:
        CSD_U3_L12_S8_C1: These blocks display the score.
        CSD_U3_L12_S8_C2: The blocks that determine whether the bunny has caught the
          carrot go here.
      CSD U3 collisions scoreboard_2018:
        CSD_U3_L12_S8_C1: These blocks display the score.
        CSD_U3_L12_S8_C2: The blocks that determine whether the bunny has caught the
          carrot go here.
      CSD U3 collisions scoreboard_2019:
        CSD_U3_L12_S8_C1: These blocks display the score.
        CSD_U3_L12_S8_C2: The blocks that determine whether the bunny has caught the
          carrot go here.
      CSD U3 collisions try blocks:
        CSD_U3_L13_S6_C1: Change this block.
      CSD U3 collisions try blocks_2018:
        CSD_U3_L13_S6_C1: Change this block.
      CSD U3 collisions try blocks_2019:
        CSD_U3_L13_S6_C1: Change this block.
      CSD U3 collisions types:
        CSD_U3_L13_S6_C1: Add your code here.
      CSD U3 collisions types_2018:
        CSD_U3_L13_S6_C1: Add your code here.
      CSD U3 collisions types_2019:
        CSD_U3_L13_S6_C1: Add your code here.
      CSD U3 debug:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U3 debug_2018:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U3 debug_2019:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U3 ellipse:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U3 ellipse_2018:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U3 ellipse_2019:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U3 fill:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U3 fill_2018:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U3 fill_2019:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U3 game backgrounds:
        CSD_U3_S18_L4_C1: This block calls your function.
        CSD_U3_L18_S4_C2: Functions area
      CSD U3 game backgrounds_2018:
        CSD_U3_S18_L4_C1: This block calls your function.
        CSD_U3_L18_S4_C2: Functions area
      CSD U3 game backgrounds_2019:
        CSD_U3_S18_L4_C1: This block calls your function.
        CSD_U3_L18_S4_C2: Functions area
      CSD U3 game variables:
        CSD_U3_S18_L3_C1: This block creates a new variable.
        CSD_U3_L18_S3_C2: Variables area
      CSD U3 game variables_2018:
        CSD_U3_S18_L3_C1: This block creates a new variable.
        CSD_U3_L18_S3_C2: Variables area
      CSD U3 game variables_2019:
        CSD_U3_S18_L3_C1: This block creates a new variable.
        CSD_U3_L18_S3_C2: Variables area
      CSD U3 keydown conditional:
        '': Add your block inside this if statement
      CSD U3 keydown conditional_2018:
        '': Add your block inside this if statement
      CSD U3 keydown conditional_2018_2019:
        '': Add your block inside this if statement
      CSD U3 platform background1:
        CSD_U3_L16_S3_C1: the function that draws the background
        CSD_U3_L16_S3_C2: the code that calls the function
        CSD_U3_L16_S3_C3: Change this function.
      CSD U3 platform background1_2018:
        CSD_U3_L16_S3_C1: the function that draws the background
        CSD_U3_L16_S3_C2: the code that calls the function
        CSD_U3_L16_S3_C3: Change this function.
      CSD U3 platform background1_2019:
        CSD_U3_L16_S3_C1: the function that draws the background
        CSD_U3_L16_S3_C2: the code that calls the function
        CSD_U3_L16_S3_C3: Change this function.
      CSD U3 platform platform1:
        CSD_U3_S17_L8_C1: This block creates a new sprite.
      CSD U3 platform platform1_2018:
        CSD_U3_S17_L8_C1: This block creates a new sprite.
      CSD U3 platform platform1_2019:
        CSD_U3_S17_L8_C1: This block creates a new sprite.
      CSD U3 platform scoreboard:
        CSD_U3_L17_S7_C1: Score is printed here.
      CSD U3 platform scoreboard_2018:
        CSD_U3_L17_S7_C1: Score is printed here.
      CSD U3 platform scoreboard_2019:
        CSD_U3_L17_S7_C1: Score is printed here.
      CSD U3 platform variable1:
        callout: This block creates a variable.
      CSD U3 platform variable1_2018:
        callout: This block creates a variable.
      CSD U3 platform variable1_2019:
        callout: This block creates a variable.
      CSD U3 rect:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: "「実行」ボタンはここにあります。"
      CSD U3 rect_2018:
        CSD_U3_rect_c1: Here is the code
      CSD U3 rect_2019:
        CSD_U3_rect_c1: Here is the code
      CSD U3 sequence:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U3 sequence_2018:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U3 sequence_2019:
        CSD_U3_rect_c1: Here is the code
        CSD_U3_rect_c2: Drag this block into the code area.
      CSD U6 colorLeds intensity:
        CSDU6L10_rainbow: Add your code here
      CSD U6 colorLeds intensity_2018:
        CSDU6L10_rainbow: Add your code here
      CSD U6 colorLeds intensity_2019:
        CSDU6L10_rainbow: Add your code here
      CSD U6 getProperty input:
        CSD_U6L06P03: Add your block here.
      CSD U6 getProperty input_2018:
        CSD_U6L06P03: Add your block here.
      CSD U6 getProperty input_2019:
        CSD_U6L06P03: Add your block here.
      CSD U6 light show:
        CSDUDL03P09: What does this line do?
      CSD U6 light show_2018:
        CSDUDL03P09: What does this line do?
      CSD U6 light show_2019:
        CSDUDL03P09: What does this line do?
      CSD U6 tugowar variables 1:
        CSD_U6_startGame: Define startGame here
      CSD U6 tugowar variables 1_2018:
        CSD_U6_startGame: Define startGame here
      CSD U6 tugowar variables 1_2019:
        CSD_U6_startGame: Define startGame here
      CSD U6 tugowar variables 2:
        CSD_U6_movePlayer: Define movePlayer() here
      CSD U6 tugowar variables 2_2018:
        CSD_U6_movePlayer: Define movePlayer() here
      CSD U6 tugowar variables 2_2019:
        CSD_U6_movePlayer: Define movePlayer() here
      CSD U6 tugowar variables 3:
        CSD_U6_checkWin: Check if the player has won
      CSD U6 tugowar variables 3_2018:
        CSD_U6_checkWin: Check if the player has won
      CSD U6 tugowar variables 3_2019:
        CSD_U6_checkWin: Check if the player has won
      CSDU4 - Design Mode - 3:
        '': Use the setText block to change the text of titleLabel
      Course 4 Artist 4:
        repeat_full_circle: ゾンビが完璧な円を描くために移動する回数を入力してください。
      Course 4 Artist 7:
        repeat_blocks: ワークスペースのブロックたちを、「くりかえし」ブロックを使って、かこみます。
      Course 4 Artist For Loops 4:
        place_counter_variable: このブロック内にカウンター変数をドラッグしてください
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_1: Notice that we've sorted all of blocks
          and put them behind categories to keep things tidy.  Click here to find
          all of the blocks that you need.
      Course 4 Artist Vars 1:
        repeat_blocks: ワークスペースのブロックたちを、「くりかえし」ブロックを使って、かこみます。
      Course 4 Artist Vars 12:
        set_length: このブロックを使い、「長さ」を適切な値にセットします。
      Course 4 Artist Vars 2:
        set_length: このブロックを使い、「長さ」を適切な値にセットします。
      Course 4 Artist Vars 6:
        degrees_per_side: 360度を辺の数で割って、各角度の大きさを度で求めます。
      Course 4 Artist Vars 8:
        Course_4_Artist_Vars_8_a: もっとスペースが必要？このバーを引っ張れば、コーディングするエリアを広げることができます。
      Course 4 Bee 1:
        if_bee_nectar: '"if"ブロックを使用してミツバチが花の蜜をとるかどうかを決めます。'
      Course 4 Bee 3:
        if_else_bee: "「if/else」ブロックをつかって、はなからみつをとったり、はちみつをつくったりしましょう。"
      Course 4 Bee Params 2:
        edit_get_nectar: 関数を編集し、はちが みつを集めるために方向を変えるには、このボタンを使います。
      Course 4 Maze 4:
        repeat: コマンドを繰り返すには、ループ内にブロックを配置します。
      Course 4 Play Lab Params 2:
        Course_4 _Play_Lab_Params_2_1: Click "edit" to update this function so that
          it uses the height parameter.
      Course 4 Play Lab Params 3:
        edit_function: ここをクリックしてあなたの関数を編集します。
      Course 4 Play Lab Params 6:
        edit_add_parameter: 編集をクリックして関数にパラメーターを追加します
      Course 4 Play Lab Vars 1:
        arrows_move_actor: やじるしをつかって、キャラをうごかそう。
      Course 4 Play Lab Vars 9:
        Course_4_Play_Lab_Vars_9_1: All of your blocks are now organized behind categories!
          Click on a label to see the pieces inside.
      Course 4 Playlab For Loops 4b:
        Course_4_Playlab_For_Loops_4b_1: Notice that the `counter` variable has a
          different name for each character?  That's so each `for` loop can control
          its own counter.
        Course_4_Playlab_For_Loops_4b_2: In this puzzle, you are only allowed to change
          the "increment" of the `for` loops.
      Course 4 SCV 6:
        Course_4_SCV_6: This block allows you to customize your color to almost anything
          you want to see!  Play around with the numbers to see what happens!
      CourseD_Dance_Party_01:
        dance_callout_01: プログラムにこのブロックを追加！
      CourseD_Dance_Party_02:
        dance_callout_02: プログラムにこのブロックを追加！
      CourseD_Dance_Party_04:
        dance_callout_04: プログラムにこのブロックを追加！
      CourseD_Dance_Party_06:
        dance_callout_06: 新しいダンサーをここに追加
      CourseD_Dance_Party_11:
        dance_callout_11_a: 新しいブロック！
        dance_callout_11_b: 新しいブロック！
      CourseD_Dance_Party_11_5:
        dance_party_11_5_groups: "`すべてのアヒル`ブロックを探してください"
      Dance_2019_01:
        dance_callout_01: プログラムにこのブロックを追加！
      Dance_2019_02:
        dance_callout_11_a: このブロックをプログラムに追加します。
        arrow_buttons: 矢印ボタンを押してダンサーをコントロールします。
      Dance_2019_04:
        dance_callout_02: プログラムにこのブロックを追加！
      Dance_2019_05:
        dance_callout_05: プログラムに新しいイベントを追加します。
      Dance_2019_06:
        dance_party_11_5_groups: 新しいブロック！
      Dance_2019_07:
        setprop_hint: 新しいブロック！
      Dance_2019_09:
        new_block_3: 新しいブロック！
        new_block_4: 新しいブロック！
      Dance_Party_01:
        dance_callout_01: プログラムにこのブロックを追加！
      Dance_Party_02:
        dance_callout_02: プログラムにこのブロックを追加！
      Dance_Party_04:
        dance_callout_04: プログラムにこのブロックを追加！
      Dance_Party_06:
        dance_callout_06: 新しいダンサーをここに追加
      Dance_Party_11:
        dance_callout_11_a: 新しいブロック！
        dance_callout_11_b: 新しいブロック！
      Dance_Party_11_5:
        dance_party_11_5_groups: "`すべてのアヒル`ブロックを探してください"
      Fish Tank 3-validated_2019:
        spritelab_comment: このブロックを使って、プログラムがどのように動くか あなたや先生のメモを 残すことができます。
      Function intro Ryan:
        Function_intro_Ryan_1: このほんの小さな命令が、ワークスペースにある同じ名前をもったぼう大なコードを実行するようコンピューターに命令します。
      Function intro Ryan_2019:
        Function_intro_Ryan_1: このほんの小さな命令が、ワークスペースにある同じ名前をもったぼう大なコードを実行するようコンピューターに命令します。
      Geometric Sun:
        4-5_Artist_Patterns_Free_Play_1: ブロックが、種類ごとに分けられています。クリックすると、その種類に含まれるブロックがで出てきます。
      Geometric Sun_2018:
        4-5_Artist_Patterns_Free_Play_1: ブロックが、種類ごとに分けられています。クリックすると、その種類に含まれるブロックがで出てきます。
      Infinity_move_collide:
        Infinity_move_collide_callout: このイベントが起きたときに音を鳴らしてください。
      Infinity_move_directions:
        Infinity_move_directions_callout: どのブロックが上矢印を押したときにベイマックスを上に動かすでしょうか。
        Infinity_move_directions_callout_arrow: これらの矢印を使って操縦してください。
      Infinity_move_right:
        Infinity_move_right_runbutton: うごかすブロックをここに足してください。
      Infinity_repeat:
        Infinity_repeat_callout: 移動ブロックをこの中に置いてください
      InspirationalArtwork:
        InspirationalArtwork_1: プログラムにメモを入れるための`コメント`ブロックは、この中にあります。
      InspirationalArtwork_2018:
        InspirationalArtwork_1: プログラムにメモを入れるための`コメント`ブロックは、この中にあります。
      MC HOC 2016 Level 2-2:
        craft2_run_button_callout: 用意ができたら、「実行」をクリックして君のプログラムを試してみよう。
      MC HOC 2016 New Walk:
        MC_HOC_2016_New_Walk_callout2: "「実行」ボタンを押して動かしてください。"
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_1: これが「繰り返す」ループです!  ワークスペースにあるこれをクリックして、繰り返し実行したいコードを追加しましょう。
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_1: これが「繰り返す」ループです!  ワークスペースにあるこれをクリックして、繰り返し実行したいコードを追加しましょう。
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Agent は水の上に立つことができますが、プレイヤーはできません!
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Agent は水の上に立つことができますが、プレイヤーはできません!
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_1: これらのブロックは削除できませんが、変更することはできます!
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_1: これらのブロックは削除できませんが、変更することはできます!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_1: 'Agent は溶岩の上に立つことができますが、プレイヤーはできません!  '
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_1: 'Agent は溶岩の上に立つことができますが、プレイヤーはできません!  '
      NEW Course 4 Artist Functions 3:
        NEW_Course_4_Artist_Functions_3_1: Click here to edit the new function so
          that it creates a square.
      NEW Course 4 Artist Functions 7:
        edit_function: ここをクリックしてあなたの関数を編集します。
      NEW Course 4 Artist Functions 8:
        edit_function: ここをクリックしてあなたの関数を編集します。
      NEW Course 4 Artist Params 10:
        create_function: ここをクリックして「関数」ポップアップを開き、「関数の作成」ボタンをクリックします。
      NEW Course 4 Artist Params 9:
        edit_add_parameter: 編集をクリックして関数にパラメーターを追加します
        add_and_drag_parameter: ここにパラメーターの名前を書いて、追加をクリックし、関数定義内にドラッグしてください。
      NEW Course 4 Artist Vars 6:
        place_length_variable: 長さ変数をドラッグして"???"を置きかえてください。
      NEW Course 4 Bee For Loops 4:
        bee_for_loop: Enter the largest number of nectar you want the bee to collect
          here
      NEW Course 4 Bee For Loops 5:
        actions_category: ツール ボックスが新しくなりました！「アクション」ブロックがここにあります。
      New Artist Project:
        New Artist Project_callout1: Click the categories to see the blocks in your
          toolbox! Drag blocks to the workspace to add them to your program
        New Artist Project_callout2: Hit "Run" to save and run your program
        sign_in_to_save_project: Want to access your project later? Sign in to save
          this project to your account!
      New Frozen Project:
        snowflake_dropdown: このドロップダウンリストを使って異なる雪の結晶を作ってみましょう!
      New Play Lab Project:
        New Play Lab Project_callout1: Click the categories to see the blocks in your
          toolbox! Drag blocks to the workspace add them to your program
        New Play Lab Project_callout2: Hit "Run" to save and run your program
        sign_in_to_save_project: Want to access your project later? Sign in to save
          this project to your account!
      OPD-K5-forloops-5:
        courseF_bee_for4_1: "`まつ`は、ここにあります。"
      OPD-K5-projects-4:
        courseE_playLab_scaffold3_1: はたを目指して 主人公を動かそう。
      OPD-K5-spritelab-3:
        spritelab_comment: このブロックを使って、プログラムがどのように動くか あなたや先生のメモを 残すことができます。
      OPD-K5-variables-1:
        grade5_artist_variables_triangles1_1: 注意 数字を入れるだけのブロックがあります。数字のブロックは、他のブロックに入れて使います。
      OPD-K5-variables-5:
        courseF_artist_variables3_a: 変数`length`に 値をセットして使ってみよう。
      Overworld Chop Trees:
        craft_callout_preplaced: 用意されたブロックを使って始めましょう
      Overworld Chop Trees_2019:
        craft_callout_preplaced: 用意されたブロックを使って始めましょう
      Overworld House Frame Chosen:
        craft_callout_preplaced_house: このコードで家を建ててみましょう
      Overworld House Frame Chosen_2019:
        craft_callout_preplaced_house: このコードで家を建ててみましょう
      Overworld Move to Sheep:
        craft_run_button_callout: "「実行」ボタンをおして、プログラムを動かしてください。"
        craft_drag_block_callout: "`前に すすむ` の下に もうひとつ`前に すすむ`を引っ付けよう。"
      Overworld Move to Sheep_2019:
        craft_run_button_callout: "「実行」ボタンをおして、プログラムを動かしてください。"
        craft_drag_block_callout: "`前に すすむ` の下に もうひとつ`前に すすむ`を引っ付けよう。"
      Overworld Place Wall:
        craft_inside_repeat: ここにブロックを置いて繰り返しましょう
      Overworld Place Wall_2019:
        craft_inside_repeat: ここにブロックを置いて繰り返しましょう
      Robot Doodle:
        4-5_Artist_Patterns_Free_Play_2: プログラムにメモを入れるための`コメント`ブロックは、この中にあります。
      Robot Doodle_2018:
        4-5_Artist_Patterns_Free_Play_2: プログラムにメモを入れるための`コメント`ブロックは、この中にあります。
      Underground Avoiding Lava:
        craft_callout_moveforward: 溶岩を調べるコードに前進のコマンドを追加しましょう
      Underground Avoiding Lava_2019:
        craft_callout_moveforward: 溶岩を調べるコードに前進のコマンドを追加しましょう
      Underground Iron:
        craft_what_is_iron: 鉄を掘りましょう！
      Underground Iron_2019:
        craft_what_is_iron: 鉄を掘りましょう！
      Virtual Pet 2_2019:
        '': ここクリック！
      behaviors 1:
        behaviors_edit: クリックして どうなっているのか見てみよう。
      behaviors 3a:
        behavior_callout: 真ん中の星が、回らないのはなぜ？
        star2_callout: コスチュームブロックを外して、 代わりに "this sprite" を使います。
        this_sprite_callout: コスチュームブロックを これに変えてみよう。
      behaviors 4:
        behaviors_edit: クリックして どうなっているのか見てみよう。
      behaviors 5:
        behaviors_edit: この行動にコードを追加します。
      behaviors free play:
        behaviors_edit: この行動にコードを追加します。
      course2_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge2_1: 花（または、ハチの巣）のところで、すべてのミツを集める（または、ハチミツをつくる）には、これを使います。
      course3_artist_functions_challenge1:
        courseE_artist_functions_challenge1_callout1: この下にプログラムを書きたそう。
        courseE_artist_functions_challenge1_callout2: このデザインがイマイチなら、好きなデザインに変えてみよう。
      course3_artist_functions_challenge2:
        courseE_artist_functions_challenge2_callout1: この下にプログラムを書きたそう。
        courseE_artist_functions_challenge2_callout2: このデザインがイマイチなら、好きなデザインに変えてみよう。
      course3_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_callout1: ハチを後ろに進ませるコマンドを使おう。
      course3_bee_functions_challenge3:
        courseF_bee_functions_challenge1_1: 関数の中にどんなプログラムを入れますか？
        courseF_bee_functions_challenge1_2: ハチミツを何回も作るのに、 関数"ミツかハチミツか調べる" を使うことができます。
      course3_playLab_challenge1:
        courseC_PlayLab_events_challenge1_1: このブロックは、キャラを ほかの ばしょに いどうさせるのに つかいます。
      course4_artist_functions_challenge2:
        courseE_artist_functions_challenge2_callout1: この下にプログラムを書きたそう。
        courseE_artist_functions_challenge2_callout2: このデザインがイマイチなら、好きなデザインに変えてみよう。
      course4_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_callout1: 関数でトウモロコシをとることはできますが、他の作物はどうですか？
      courseA_artist_loops4:
        courseA_artist_loops4_1: ひだりうえのすうじは、このブロックが つかえる かいすう です。
      courseA_artist_loops4_2018:
        courseA_artist_loops4_1: ひだりうえのすうじは、このブロックが つかえる かいすう です。
      courseA_artist_loops4_2019:
        courseA_artist_loops4_1: ひだりうえのすうじは、このブロックが つかえる かいすう です。
      courseA_artist_loops7:
        courseA_artist_loops7_1: ブロックの左上のかずは このブロックをつかう かいすうです。
      courseA_artist_loops7_2018:
        courseA_artist_loops7_1: ブロックの左上のかずは このブロックをつかう かいすうです。
      courseA_artist_loops7_2019:
        courseA_artist_loops7_1: ブロックの左上のかずは このブロックをつかう かいすうです。
      courseA_artist_loops8:
        courseA_artist_loops8_1: ライン上を いったり きたりすることが できます。
      courseA_artist_loops8_2018:
        courseA_artist_loops8_1: ライン上を いったり きたりすることが できます。
      courseA_artist_loops8_2019:
        courseA_artist_loops8_1: ライン上を いったり きたりすることが できます。
      courseA_collector_loops1:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが あるよ。あとで せつめいを するので、まっててね。
      courseA_collector_loops1_2019:
        courseA_collector_loops1_1: このブロックで たからものを あつめます。
      courseA_collector_loops3:
        gradek_adventurer_loops2_1: ひだりうえのすうじは、このブロックが つかえる かいすう です。
      courseA_collector_loops3_2018:
        gradek_adventurer_loops2_1: ひだりうえのすうじは、このブロックが つかえる かいすう です。
      courseA_collector_loops3_2019:
        gradek_adventurer_loops2_1: ひだりうえのすうじは、このブロックが つかえる かいすう です。
      courseA_collector_preLoops1:
        courseA_collector_preLoops1_1: Click here to watch the code run!
      courseA_collector_preLoops2:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが あるよ。あとで せつめいを するので、まっててね。
      courseA_collector_preLoops3:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが あるよ。あとで せつめいを するので、まっててね。
      courseA_collector_preLoops4:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが あるよ。あとで せつめいを するので、まっててね。
      courseA_collector_preLoops5:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが あるよ。あとで せつめいを するので、まっててね。
      courseA_collector_preLoops6:
        courseA_collector_loops1_1: ツールボックスに あたらしい ブロックが あるよ。あとで せつめいを するので、まっててね。
      courseA_maze_ramp2_2019:
        courseC_maze_programming2_1: これはツールボックスで パズルをクリアするのに必要なブロックが入っています。
      courseA_maze_ramp3a_2018:
        courseC_maze_programming2_1: これはツールボックスで パズルをクリアするのに必要なブロックが入っています。
      courseA_maze_seq1:
        courseA_maze_seq1_1: ヒントが ほしいときは、でんきゅうを クリック！
      courseA_maze_seq1_2018:
        courseA_maze_seq1_1: ヒントが ほしいときは、でんきゅうを クリック！
      courseA_maze_seq1_2019:
        courseA_maze_seq1_1: ヒントが ほしいときは、でんきゅうを クリック！
      courseA_maze_seq2:
        courseA_maze_seqA_callout1: ステップ ボタンを つかうと プログラムが ひとつずつ うごきます。これで バグを みつけよう！
      courseA_maze_seq4:
        made_of_stone: このブロックは うごかす ことは できるけど、けす ことは できません！
      courseA_playLab_events4:
        courseA_playlab_events4_callout1: これは吹き出し
      courseA_playLab_events4_2018:
        courseA_playlab_events4_callout1: これは吹き出し
      courseA_playLab_events4_2019:
        courseA_playlab_events4_callout1: これは吹き出し
      courseA_playLab_events5:
        courseA_playLab_events5_1: やじるしのほうこうをかえるには、やじるしをおしてください。
      courseA_playLab_events5_2018:
        courseA_playLab_events5_1: やじるしのほうこうをかえるには、やじるしをおしてください。
      courseA_playLab_events5_2019:
        courseA_playLab_events5_1: やじるしのほうこうをかえるには、やじるしをおしてください。
      courseA_playLab_events6:
        courseA_playLab_events6_1: '"ランダム"をえらぶと おとが ランダムに かわります。'
      courseA_playLab_events6_2018:
        courseA_playLab_events6_1: '"ランダム"をえらぶと おとが ランダムに かわります。'
      courseA_playLab_events6_2019:
        courseA_playLab_events6_1: '"ランダム"をえらぶと おとが ランダムに かわります。'
      courseB_Scrat_ramp1_2018:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを実行してください。
      courseB_Scrat_ramp1_2019:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを実行してください。
      courseB_Scrat_ramp3a_2019:
        courseC_maze_programming2_1: これはツールボックスで パズルをクリアするのに必要なブロックが入っています。
      courseB_artist_loops3:
        courseB_artist_loops3_1: このブロックをつかえるのは、1回だけです。どうやって つかいますか？
      courseB_artist_loops3_2018:
        courseB_artist_loops3_1: このブロックをつかえるのは、1回だけです。どうやって つかいますか？
      courseB_artist_loops3_2019:
        courseB_artist_loops3_1: このブロックをつかえるのは、1回だけです。どうやって つかいますか？
      courseB_artist_loops5:
        courseB_artist_loops5_1: 数字は、このブロックを ツールボックスから とりだすことが できる回数です。
      courseB_collector_loops1:
        courseB_collector_loops1_1: ツールボックスに あたらしい ブロックが あるよ。あとで せつめいを するので、まっててね。
      courseB_collector_loops1_2018:
        courseB_collector_loops1_1: このブロックで たからものを あつめます。
      courseB_collector_loops1_2019:
        courseB_collector_loops1_1: このブロックで たからものを あつめます。
      courseB_maze_seq1:
        courseB_maze_seq1: ヒントが ほしいときは、でんきゅうを クリック！
      courseB_maze_seq1_2018:
        courseB_maze_seq1: ヒントが ほしいときは、でんきゅうを クリック！
      courseB_maze_seq1_2019:
        courseB_maze_seq1: ヒントが ほしいときは、でんきゅうを クリック！
      courseB_maze_seq2:
        courseB_maze_seq2_callout1: ステップ ボタンを つかうと プログラムが ひとつずつ うごきます。これで バグを みつけよう！
      courseB_maze_seq3:
        courseB_maze_seq3_1: 灰色のブロックは、消すことができません。
      courseB_playlab_events6:
        courseB_playlab_events6_a: やじるしのほうこう は、ドロップダウンで かわります。
      courseB_playlab_events6_2018:
        courseB_playlab_events6_a: やじるしのほうこう は、ドロップダウンで かわります。
      courseB_playlab_events6_2019:
        courseB_playlab_events6_a: やじるしのほうこう は、ドロップダウンで かわります。
      courseC19_playLab_EOC3:
        courseE_playLab_scaffold3_1: はたを目指して 主人公を動かそう。
      courseC_PlayLab_events8:
        courseC_PlayLab_events8_callout1: ペンギンが きょうりゅうに さわったとき につかうのは、このブロックです。
      courseC_PlayLab_events8_2018:
        courseC_PlayLab_events8_callout1: ペンギンが きょうりゅうに さわったとき につかうのは、このブロックです。
      courseC_PlayLab_events8_2019:
        courseC_PlayLab_events8_callout1: ペンギンが きょうりゅうに さわったとき につかうのは、このブロックです。
      courseC_PlayLab_events_challenge1:
        courseC_PlayLab_events_challenge1_1: このブロックは、キャラを ほかの ばしょに いどうさせるのに つかいます。
      courseC_PlayLab_events_challenge1_2018:
        courseC_PlayLab_events_challenge1_1: このブロックは、キャラを ほかの ばしょに いどうさせるのに つかいます。
      courseC_PlayLab_events_challenge1_2019:
        courseC_PlayLab_events_challenge1_1: このブロックは、キャラを ほかの ばしょに いどうさせるのに つかいます。
      courseC_artist_loops1a_2019:
        jumpto_callout: このブロックはたいせつです。かならず、これを使います。
      courseC_artist_loops1b_2019:
        sticker2: プログラムに これを ついかしよう。
      courseC_artist_loopsPrePre1a:
        courseC_artist_loopsPrePre1a_1: さいしょに このブロックを つかって、プレイエリアの まん中に 行きます。
      courseC_artist_loopsPrePre1a_2018:
        courseC_artist_loopsPrePre1a_1: さいしょに このブロックを つかって、プレイエリアの まん中に 行きます。
      courseC_artist_loopsPrePre1a_2019:
        courseC_artist_loopsPrePre1a_1: さいしょに このブロックを つかって、プレイエリアの まん中に 行きます。
      courseC_collector_prog1:
        courseC_collector_prog1_1: ツールボックスに あたらしい ブロックが あるよ。あとで せつめいを するので、まっててね。
      courseC_collector_prog1_2018:
        courseC_collector_prog1_1: ツールボックスに 新しいブロックが あるのが わかるかな？つかい方は、つぎの パズルで せつめいします。
      courseC_collector_prog1_2019:
        courseC_collector_prog1_1: ツールボックスに 新しいブロックが あるのが わかるかな？つかい方は、つぎの パズルで せつめいします。
      courseC_collector_prog7:
        courseC_collector_prog7_1: ひつようなブロックがあれば、ツールボックスからとり出そう。
      courseC_collector_prog7_2018:
        courseC_collector_prog7_1: ひつようなブロックがあれば、ツールボックスからとり出そう。
      courseC_collector_prog7_2019:
        courseC_collector_prog7_1: ひつようなブロックがあれば、ツールボックスからとり出そう。
      courseC_harvester_loops1:
        courseC_harvester_loops1_callout1: カボチャは、カボチャの右下に 書いてある数だけ あります。
      courseC_harvester_loops1_2018:
        courseC_harvester_loops1_callout1: カボチャは、カボチャの右下に 書いてある数だけ あります。
      courseC_harvester_loops1_2019:
        courseC_harvester_loops1_callout1: カボチャは、カボチャの右下に 書いてある数だけ あります。
      courseC_maze_debugging5:
        courseC_maze_debugging5_1: 灰色のブロックは消せません！
      courseC_maze_debugging5_2018:
        courseC_maze_debugging5_1: はい色のブロックは、けすことができません。
      courseC_maze_debugging5_2019:
        courseC_maze_debugging5_1: 灰色のブロックは、消すことができません。
      courseC_maze_debugging9_2019:
        courseC_maze_debugging9_2019_1: ブロックをドラックして、ツールボックスからワークスペースに持っていこう。
      courseC_maze_programming1:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを実行してください。
      courseC_maze_programming1_2018:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを実行してください。
      courseC_maze_programming1_2019:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを実行してください。
      courseC_maze_programming2:
        courseC_maze_programming2_1: これはツールボックスで パズルをクリアするのに必要なブロックが入っています。
      courseC_maze_programming2_2018:
        courseC_maze_programming2_1: これはツールボックスで パズルをクリアするのに必要なブロックが入っています。
      courseC_maze_programming2_2019:
        courseC_maze_programming2_1: これはツールボックスで パズルをクリアするのに必要なブロックが入っています。
      courseC_maze_programming3:
        courseC_maze_programming3_2: 余計なブロックを消すには、そのブロックをドラックしてツールボックスに持っていきます。
        courseC_maze_programming3_3: はい色のブロックは けすことが できません。
      courseC_maze_programming3_2018:
        courseC_maze_programming3_2: 余計なブロックを消すには、そのブロックをドラックしてツールボックスに持っていきます。
        courseC_maze_programming3_3: はい色のブロックは けすことが できません。
      courseC_maze_programming3_2019:
        courseC_maze_programming3_2: 余計なブロックを消すには、そのブロックをドラックしてツールボックスに持っていきます。
        courseC_maze_programming3_3: はい色のブロックは けすことが できません。
      courseC_maze_programming4:
        courseC_maze_programming4_1: ブロックの左上にある数字は、そのブロックを使用する回数です。
      courseC_maze_programming4_2018:
        courseC_maze_programming4_1: ブロックの左上にある数字は、そのブロックを使用する回数です。
      courseC_maze_programming4_2019:
        courseC_maze_programming4_1: ブロックの左上にある数字は、そのブロックを使用する回数です。
      courseC_maze_programming5:
        '': ブロックの左上に数字がないので、そのブロックは 何回でも 使えるよ！
      courseC_maze_programming5_2018:
        '': ブロックの左上に数字がないので、そのブロックは 何回でも 使えるよ！
      courseC_maze_programming5_2019:
        '': ブロックの左上に数字がないので、そのブロックは 何回でも 使えるよ！
      courseC_maze_programming7:
        courseC_maze_programming7_1: これが、パズルへの さいしょの チャレンジです。あきらめずに がんばろう。
        courseC_maze_programming7_2: はい色のブロックは、けすことが できません。
      courseC_maze_programming7_2018:
        courseC_maze_programming7_1: これが、パズルへの さいしょの チャレンジです。あきらめずに がんばろう。
        courseC_maze_programming7_2: はい色のブロックは、けすことが できません。
      courseC_maze_programming7_2019:
        courseC_maze_programming7_1: これが、パズルへの さいしょの チャレンジです。あきらめずに がんばろう。
        courseC_maze_programming7_2: はい色のブロックは、けすことが できません。
      courseC_starWars_loops2:
        courseC_starWars_loops2: １つだけブロックを入れます。
      courseC_starWars_loops2_2018:
        courseC_starWars_loops2: １つだけブロックを入れます。
      courseC_starWars_loops2_2019:
        courseC_starWars_loops2: １つだけブロックを入れます。
      courseC_starWars_loops2_copy:
        courseC_starWars_loops2: １つだけブロックを入れます。
      courseD_artist_nestedLoops1a:
        courseD_artist_nestedLoops1a_1: パズルをクリアするのに色を変えるひつようはないけど、見本みたいにするのなら、`てきとうな色`を使ってみよう。
      courseD_artist_nestedLoops1a_2018:
        courseD_artist_nestedLoops1a_1: パズルをクリアするのに色を変えるひつようはないけど、見本みたいにするのなら、`てきとうな色`を使ってみよう。
      courseD_artist_nestedLoops1a_2019:
        courseD_artist_nestedLoops1a_1: パズルをクリアするのに色を変えるひつようはないけど、見本みたいにするのなら、`てきとうな色`を使ってみよう。
      courseD_artist_ramp11:
        courseD_artist_ramp11_1: この数字は かえることができます。
        courseD_artist_ramp11_2: ここをクリックして、くりかえしの回数をかえてみよう。
      courseD_bee_conditionals2:
        4_5_Bee_Conditionals_2_1: すべてのくもの下で花があるか調べてね。ハチの巣か どうかは 調べなくていいよ。
        4_5_Bee_Conditionals_2_2: わからないときは、ここをクリックしてビデオを見てみよう。
      courseD_bee_conditionals2_2018:
        4_5_Bee_Conditionals_2_1: すべてのくもの下で花があるか調べてね。ハチの巣か どうかは 調べなくていいよ。
      courseD_bee_conditionals2_2019:
        4_5_Bee_Conditionals_2_1: すべてのくもの下で花があるか調べてね。ハチの巣か どうかは 調べなくていいよ。
      courseD_bee_conditionals2_copy:
        4_5_Bee_Conditionals_2_1: すべてのくもの下で花があるか調べてね。ハチの巣か どうかは 調べなくていいよ。
        4_5_Bee_Conditionals_2_2: わからないときは、ここをクリックしてビデオを見てみよう。
      courseD_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge2_1: 花（または、ハチの巣）のところで、すべてのミツを集める（または、ハチミツをつくる）には、これを使います。
      courseD_bee_conditionals_challenge2_2018:
        courseD_bee_conditionals_challenge2_1: 花（または、ハチの巣）のところで、すべてのミツを集める（または、ハチミツをつくる）には、これを使います。
      courseD_bee_conditionals_challenge2_2019:
        courseD_bee_conditionals_challenge2_1: 花（または、ハチの巣）のところで、すべてのミツを集める（または、ハチミツをつくる）には、これを使います。
      courseD_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_callout1: ハチを後ろに進ませるコマンドを使おう。
      courseD_bee_debugging_challenge1a:
        courseD_bee_debugging_challenge1_callout1: ハチを後ろに進ませるコマンドを使おう。
      courseD_collector_ramp8:
        courseD_collector_ramp8_1: 'このブロックを使えば、たからものを１つ集めることができます。  '
      courseD_farmer_while7_2018:
        courseD_farmer_while7_2018_PathAhead: このパズルでは、`前に道がある間` を使います。
      courseD_farmer_while7_2019:
        courseD_farmer_while7_2018_PathAhead: このパズルでは、`前に道がある間` を使います。
      courseD_maze_intro4_2019:
        courseC_maze_programming4_1: ブロックの左上にある数字は、そのブロックを使用する回数です。
      courseD_maze_intro5a_2019:
        '': ブロックの左上に数字がないので、そのブロックは 何回でも 使えるよ！
      courseD_maze_ramp1:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを実行してください。
      courseD_maze_ramp1_2018:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを実行してください。
      courseD_maze_ramp1_2019:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを実行してください。
      courseD_maze_ramp2:
        courseC_maze_programming2_1: これはツールボックスで パズルをクリアするのに必要なブロックが入っています。
      courseD_maze_ramp2_2018:
        courseC_maze_programming2_1: これはツールボックスで パズルをクリアするのに必要なブロックが入っています。
      courseD_maze_ramp2_2019:
        courseC_maze_programming2_1: これはツールボックスで パズルをクリアするのに必要なブロックが入っています。
      courseD_maze_ramp3:
        courseC_maze_programming3_2: 余計なブロックを消すには、そのブロックをドラックしてツールボックスに持っていきます。
        stone_block_2: 灰色のブロックは消せません。
      courseD_maze_ramp3_2018:
        courseC_maze_programming3_2: 余計なブロックを消すには、そのブロックをドラックしてツールボックスに持っていきます。
        stone_block_2: 灰色のブロックは消せません。
      courseD_maze_ramp3_2019:
        courseC_maze_programming3_2: 余計なブロックを消すには、そのブロックをドラックしてツールボックスに持っていきます。
        stone_block_2: 灰色のブロックは、消すことができません。
      courseD_maze_ramp4:
        courseC_maze_programming4_1: ブロックの左上にある数字は、そのブロックを使用する回数です。
      courseD_maze_ramp4_2018:
        courseC_maze_programming4_1: ブロックの左上にある数字は、そのブロックを使用する回数です。
      courseD_maze_ramp4_2019:
        courseC_maze_programming4_1: ブロックの左上にある数字は、そのブロックを使用する回数です。
      courseD_maze_ramp5:
        '': ブロックの左上に数字がないので、そのブロックは 何回でも 使えるよ！
      courseD_maze_ramp5_2018:
        '': ブロックの左上に数字がないので、そのブロックは 何回でも 使えるよ！
      courseD_maze_ramp5_2019:
        '': ブロックの左上に数字がないので、そのブロックは 何回でも 使えるよ！
      courseD_maze_ramp5a:
        '': ブロックの左上に数字がないので、そのブロックは 何回でも 使えるよ！
      courseD_maze_ramp5a_2018:
        '': ブロックの左上に数字がないので、そのブロックは 何回でも 使えるよ！
      courseD_maze_ramp5a_2019:
        '': ブロックの左上に数字がないので、そのブロックは 何回でも 使えるよ！
      courseD_maze_ramp6:
        courseD_maze_ramp6_1: ここに書いた回数だけ、中に書いた命令を実行してから、次の命令を実行します。
      courseD_playLab_condFP:
        courseD_playLab_condFP_1: 使えるブロックは やりたいことごとに まとまっています。クリックすれば、どんな命令があるか すべて見ることができます。
      courseD_playLab_condFP_2018:
        courseD_playLab_condFP_1: 使えるブロックは やりたいことごとに まとまっています。クリックすれば、どんな命令があるか すべて見ることができます。
      courseD_scrat_ramp1:
        grade2_CaringForNewPet_0_1: すべてのブロックをつなげたら「実行」を押してプログラムを実行してください。
      courseD_scrat_ramp2:
        courseC_maze_programming2_1: これはツールボックスで パズルをクリアするのに必要なブロックが入っています。
      courseD_scrat_ramp3:
        courseC_maze_programming3_2: 余計なブロックを消すには、そのブロックをドラックしてツールボックスに持っていきます。
      courseD_scrat_ramp4:
        courseC_maze_programming4_1: ブロックの左上にある数字は、そのブロックを使用する回数です。
      courseD_scrat_ramp5:
        '': ブロックの左上に数字がないので、そのブロックは 何回でも 使えるよ！
      courseD_scrat_ramp6:
        courseD_maze_ramp6_1: ここに書いた回数だけ、中に書いた命令を実行してから、次の命令を実行します。
      courseD_scrat_ramp7:
        courseD_maze_ramp6_1: ここに書いた回数だけ、中に書いた命令を実行してから、次の命令を実行します。
      courseD_scrat_ramp8:
        courseD_maze_ramp7_1: これが、パズルへの さいしょの チャレンジです。あきらめずに がんばろう。
      courseE_aboutme_2:
        '': ここクリック！
      courseE_artist_functions1:
        courseD_artist_functions1_1: この命令で正方形をかくことから始めよう。
      courseE_artist_functions1_copy:
        courseD_artist_functions1_1: この命令で正方形をかくことから始めよう。
      courseE_artist_functions2:
        courseD_artist_functions2_1: 緑色の関数ブロックが実行されると、関数の中のすべてのブロックが実行されます。最初の正方形をかいたら、アーティストはつぎに何をしますか？
      courseE_artist_functions2_2018:
        courseD_artist_functions2_1: 緑色の関数ブロックが実行されると、関数の中のすべてのブロックが実行されます。最初の正方形をかいたら、アーティストはつぎに何をしますか？
      courseE_artist_functions2_2019:
        courseD_artist_functions2_1: 緑色の関数ブロックが実行されると、関数の中のすべてのブロックが実行されます。最初の正方形をかいたら、アーティストはつぎに何をしますか？
      courseE_artist_functions2_copy:
        courseD_artist_functions2_1: 緑色の関数ブロックが実行されると、関数の中のすべてのブロックが実行されます。最初の正方形をかいたら、アーティストはつぎに何をしますか？
      courseE_artist_functions8:
        courseD_artist_functions8_1: 関数を作る命令は、ここをクリックすると出てきます。
      courseE_artist_functions8a_2018:
        courseD_artist_functions8_1: 関数を作る命令は、ここをクリックすると出てきます。
      courseE_artist_functions8a_2019:
        courseD_artist_functions8_1: 関数を作る命令は、ここをクリックすると出てきます。
      courseE_artist_functions_challenge1:
        courseE_artist_functions_challenge1_callout1: この下にプログラムを書きたそう。
        courseE_artist_functions_challenge1_callout2: このデザインがイマイチなら、好きなデザインに変えてみよう。
      courseE_artist_functions_challenge1_2018:
        courseE_artist_functions_challenge1_callout1: この下にプログラムを書きたそう。
        courseE_artist_functions_challenge1_callout2: このデザインがイマイチなら、好きなデザインに変えてみよう。
      courseE_artist_functions_challenge1_2019:
        courseE_artist_functions_challenge1_callout1: この下にプログラムを書きたそう。
        courseE_artist_functions_challenge1_callout2: このデザインがイマイチなら、好きなデザインに変えてみよう。
      courseE_artist_functions_challenge2:
        courseE_artist_functions_challenge2_callout1: この下にプログラムを書きたそう。
        courseE_artist_functions_challenge2_callout2: このデザインがイマイチなら、好きなデザインに変えてみよう。
      courseE_artist_functions_challenge2_2018:
        courseE_artist_functions_challenge2_callout1: この下にプログラムを書きたそう。
        courseE_artist_functions_challenge2_callout2: このデザインがイマイチなら、好きなデザインに変えてみよう。
      courseE_artist_functions_challenge2_2019:
        courseE_artist_functions_challenge2_callout1: この下にプログラムを書きたそう。
        courseE_artist_functions_challenge2_callout2: このデザインがイマイチなら、好きなデザインに変えてみよう。
      courseE_artist_ramp8:
        courseE_artist_ramp8_1: この数字は かえることができます。
        courseE_artist_ramp8_2: ここをクリックして、くりかえしの回数をかえてみよう。
      courseE_artist_ramp8_2:
        courseE_artist_ramp8_1: この数字は かえることができます。
        courseE_artist_ramp8_2: ここをクリックして、くりかえしの回数をかえてみよう。
      courseE_farmer_functions1:
        courseE_farmer_functions1_2: こんどのツールボックスは前とちょっとちがいます。クリックすると そのカテゴリに ある命令が
          出てきます。
      courseE_farmer_functions13_2018:
        courseE_farmer_functions1a_1: 作物は 何が なっているか わからないよ。プログラムが 実行される度に 変わります。
      courseE_farmer_functions13_2019:
        courseE_farmer_functions1a_1: 作物は 何が なっているか わからないよ。プログラムが 実行される度に 変わります。
      courseE_farmer_functions1_2018:
        courseE_farmer_functions1_2: こんどのツールボックスは前とちょっとちがいます。クリックすると そのカテゴリに ある命令が
          出てきます。
      courseE_farmer_functions1_2019:
        courseE_farmer_functions1_2: こんどのツールボックスは前とちょっとちがいます。クリックすると そのカテゴリに ある命令が
          出てきます。
      courseE_farmer_functions1a:
        courseE_farmer_functions1a_1: 作物は 何が なっているか わからないよ。プログラムが 実行される度に 変わります。
      courseE_farmer_functions1a_2018:
        courseE_farmer_functions1a_1: 作物は 何が なっているか わからないよ。プログラムが 実行される度に 変わります。
      courseE_farmer_functions1a_2019:
        courseE_farmer_functions1a_1: 作物は 何が なっているか わからないよ。プログラムが 実行される度に 変わります。
      courseE_farmer_functions2b:
        courseE_farmer_functions1a_1: 作物は 何が なっているか わからないよ。プログラムが 実行される度に 変わります。
      courseE_farmer_functions2b_2018:
        courseE_farmer_functions1a_1: 作物は 何が なっているか わからないよ。プログラムが 実行される度に 変わります。
      courseE_farmer_functions2b_2019:
        courseE_farmer_functions1a_1: 作物は 何が なっているか わからないよ。プログラムが 実行される度に 変わります。
      courseE_playLab_challenge1:
        courseC_PlayLab_events_challenge1_1: このブロックは、キャラを ほかの ばしょに いどうさせるのに つかいます。
      courseE_playLab_scaffold3:
        courseE_playLab_scaffold3_1: はたを目指して 主人公を動かそう。
      courseF_artist_for1:
        courseF_artist_for1_1: ツールボックスは、"カテゴリー"モードです。`まで` は、ここにあります。
      courseF_artist_for1_2018:
        courseF_artist_for1_1: ツールボックスは、"カテゴリー"モードです。`まで` は、ここにあります。
      courseF_artist_for1_2019:
        courseF_artist_for1_1: ツールボックスは、"カテゴリー"モードです。`まで` は、ここにあります。
      courseF_artist_fwp1:
        courseF_artist_fwp1_1: '"編集"ボタンをクリックすれば、関数の中身を編集することができます。'
      courseF_artist_fwp4:
        courseF_artist_fwp4_1: 多角形をかくには、曲がる角度を360 ÷ `角の数`にします。
      courseF_artist_fwp5:
        courseF_artist_fwp5_1: 多角形をかく関数は、ここにあります。
      courseF_artist_variables3:
        courseF_artist_variables3_a: 変数`length`に 値をセットして使ってみよう。
      courseF_artist_variables3_2018:
        courseF_artist_variables3_a: 変数`length`に 値をセットして使ってみよう。
      courseF_artist_variables3_2019:
        courseF_artist_variables3_a: 変数`length`に 値をセットして使ってみよう。
      courseF_artist_variables6:
        courseF_artist_variables6_1: 変数は、同じ値を 何回も 使うときに とても便利です。
      courseF_artist_variables6_2018:
        courseF_artist_variables6_1: 変数は、同じ値を 何回も 使うときに とても便利です。
      courseF_artist_variables6_2019:
        courseF_artist_variables6_1: 変数は、同じ値を 何回も 使うときに とても便利です。
      courseF_artist_variables6a:
        courseF_artist_variables6a_1: 変数は、同じ値を 何回も 使うときに とても便利です。
      courseF_artist_variables6a_2018:
        courseF_artist_variables6a_1: 変数は、同じ値を 何回も 使うときに とても便利です。
      courseF_artist_variables6a_2019:
        courseF_artist_variables6a_1: 変数は、同じ値を 何回も 使うときに とても便利です。
      courseF_bee_conditionals2:
        courseF_bee_conditionals2_2: ツールボックスはグルーピングされています。ラベルをクリックすれば、必要なブロックが出てきます。
      courseF_bee_conditionals5:
        courseF_bee_conditionals5_1: 長方形は辺の長さがちがっているので、このブロックを使います。
      courseF_bee_for4:
        courseF_bee_for4_1: "`まつ`は、ここにあります。"
      courseF_bee_for4_2018:
        courseF_bee_for4_1: "`まつ`は、ここにあります。"
      courseF_bee_for4_2019:
        courseF_bee_for4_1: "`まつ`は、ここにあります。"
      courseF_bee_for9:
        courseF_bee_for9_1: "`計算（けいさん）`ブロックは、ここにあります。"
      courseF_bee_for9_2018:
        courseF_bee_for9_1: "`計算（けいさん）`ブロックは、ここにあります。"
      courseF_bee_for9_2019:
        courseF_bee_for9_1: "`計算（けいさん）`ブロックは、ここにあります。"
      courseF_bee_functions2:
        courseF_bee_functions2_1: このブロックを関数と呼びます。中を見るのは、"編集"ボタンをクリックします！
      courseF_bee_functions6:
        courseF_bee_functions6_1: ここをクリックすれば簡単に必要な命令を見つけることができます。
      courseF_bee_functions_challenge1:
        courseF_bee_functions_challenge1_1: 関数の中にどんなプログラムを入れますか？
        courseF_bee_functions_challenge1_2: ハチミツを何回も作るのに、 関数"ミツかハチミツか調べる" を使うことができます。
      courseF_bee_fwp1:
        courseF_bee_fwp1_1: "`もし` はここにあります。"
      courseF_bee_fwp2:
        courseF_bee_fwp2_a: 関数はここにあります。
      courseF_bee_fwp3:
        courseF_bee_fwp3_1: くもとときに使った 下に何があるか調べる関数を 使います。
      courseF_bee_fwp4:
        courseF_bee_fwp4_1: '"編集"ボタンをクリックして、関数にパラメータを追加しよう。'
      courseF_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_callout1: 関数でトウモロコシをとることはできますが、他の作物はどうですか？
      courseF_bee_variables_1_2018:
        courseF_bee_functions_1_2018_1: 変数は、ここにあります。
      courseF_bee_variables_1_2019:
        courseF_bee_functions_1_2018_1: 変数は、ここにあります。
      courseF_playlab_variables1a:
        courseF_playlab_variables1a_1: ツールボックスは、必要なブロックを見つけやすいように まとめられています。
      courseF_playlab_variables5c:
        courseF_playlab_variables5c_1: 変数はここにあります。
      courseF_playlab_variables6c:
        courseF_playlab_variables5c_1: 変数はここにあります。
      courseF_playlab_variables7c:
        courseF_playlab_variables7c_1: "`しつもん`ブロックは、ここにあります。"
      coursea_maze_ramp1_2018:
        grade2_CaringForNewPet_0_1: すべてのブロックを つなげたら、"実行（じっこう）" を おしてみよう。
      coursea_maze_ramp1_2019:
        grade2_CaringForNewPet_0_1: すべてのブロックを つなげたら、"実行（じっこう）" を おしてみよう。
      express_maze_debugging9_2019:
        express_maze_debugging9_2019_1: ブロックをドラックして、ツールボックスからワークスペースに持っていこう。
      frozen circle function with parameter:
        frozen_circle_function_with_parameter_circle: '"円を描く"ブロックを使い、そして大きさを変えてください。'
      frozen cross:
        repeat_blocks_1: "(1)このブロックを使います。作業領域にある灰色のブロック達のあたりに置いてください"
        repeat_blocks_2: (2)"繰り返し"ブロックをここに移動させて、灰色のブロック達を内側に置いてください
      frozen cross rotate:
        replace_questions_degree: ドロップダウンを使って"???"を数字に変えてください
      frozen diamond:
        frozen_diamond_repeat: 繰り返しブロックを使ってこの形を作ってください
      frozen diamond snowflake:
        frozen_diamond_repeat: 繰り返しブロックを使ってこの形を作ってください
      frozen freeplay:
        snowflake_dropdown: このドロップダウンリストを使って異なる雪の結晶を作ってみましょう!
      frozen line:
        run: "「実行」ボタンを押してプログラムを試してみてください！"
        move_elsa_forward: エルサをまえにすすませるために、"まえにうごく"ブロックをドラッグして"実行時"ブロックにくっつけてください。
      frozen perpendicular:
        turn_elsa: '"回転"ブロックを使ってエルサの向きを変えてください。ドロップダウンの数字でどれくらいエルサを回転させるかを決めます。'
      frozen snowflake branch:
        frozen_snowflake_branch: '"雪の結晶の枝を描く"ブロックを使ってください'
      frozen square iterative:
        frozen_create_square: 四角形を描くためにもっとブロックをくっつけてください
      frozen square loop:
        replace_questions: ドロップダウンを使って"???"を数字に変えてください
      frozen square loop 3x:
        replace_questions: ドロップダウンを使って"???"を数字に変えてください
      frozen square snowflake:
        replace_questions: ドロップダウンを使って"???"を数字に変えてください
      grade5_artist_variables_triangles1:
        grade5_artist_variables_triangles1_1: 注意 数字を入れるだけのブロックがあります。数字のブロックは、他のブロックに入れて使います。
      grade5_artist_variables_triangles1_2018:
        grade5_artist_variables_triangles1_1: 注意 数字を入れるだけのブロックがあります。数字のブロックは、他のブロックに入れて使います。
      grade5_artist_variables_triangles1_2019:
        grade5_artist_variables_triangles1_1: 注意 数字を入れるだけのブロックがあります。数字のブロックは、他のブロックに入れて使います。
