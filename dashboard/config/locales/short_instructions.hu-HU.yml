---
hu-HU:
  data:
    short_instructions:
      2-3 Artist 1 new: Szia, én egy művész vagyok. Ha kódot írsz nekem, akkor szinte
        bármit le tudok rajzolni. Használj fel néhány blokkot, hogy a szürke vonalakat
        követve rajzoljak. (Minden vonal 100 pixel hosszú.)
      2-3 Artist 11: 'Készítsd el a stoptábla keretét egy olyan nyolcszög megrajzolásával,
        aminek minden oldala 100 képpont hosszú. '
      2-3 Artist 12: |-
        Készíts egy kört, hogy befejezd a szemgolyót!

        Ha a művész 1 fokot fordul minden ciklusban, hányszor kell ismételni a kódot a teljes körhöz? 180? 360? 500?
      2-3 Artist 2 new: 'Ennek a háznak csak félig van kész az egyik fala. Minden
        oldal 100 hosszúságú, de a félkész csak 50-es. Fejezd be a falat! '
      2-3 Artist 3.4: |-
        Az "ugrás" blokk vonalhúzás nélkül mozgatja a művészt.
        Rajzolj szaggatott vonalat az "ugrás" és a "menj" blokkok segítségével.
      2-3 Artist 3new: "A piros kalap 100 képpont magas. Fejezd be a fekete kalapot,
        ami 70 képponttal alacsonyabb. \n(A fekete kalap szélessége 50 képpont.)"
      2-3 Artist 4: Segíts befejezni a cica házát!
      2-3 Artist 6: 'A háznak tetőre van szüksége! Rajzold meg a háromszöget. Tipp:
        Mind a három oldal egyforma hosszú.'
      2-3 Artist 7: 'Segíts megrajzolni az iskola ablakainak utolsó részletét, hogy
        mindenki ki tudjon nézni az ablakon. Az ablakok minden oldala 25 pixel. '
      2-3 Artist 8: 'Fejezd be a szobák megrajzolását: az állatokat két, egyenlő méretű
        négyzetbe helyezzük el. A téglalap 200 képpont széles, és 100 képpont magas.
        Több megoldása is van a feladványnak!'
      2-3 Artist 9 NEW: Fejezd be a sárkányt
      2-3 Artist Assessment 1: 'Értékelés: Fejezd be az utolsó fog megrajzolását:
        25 képpont a szélessége és 25 képpont a magassága is.'
      2-3 Artist Debugging 1: Ennek a kalapnak 50 képpont szélesnek kell lennie. Meg
        tudod javítani a kódot?
      2-3 Artist Debugging 10: "The direction pad on my game controller is too narrow.
        \n\nCan you make it wider by 10 pixels?\n\nTry running the code first to see
        what's wrong."
      2-3 Artist Debugging 11: |-
        My snowflake is falling apart!

        Can you figure out what's going wrong?
      2-3 Artist Debugging 2: |-
        Ez a kód, ami a macska bajuszát rajzolná meg, hibás.

        Javítsd a kódon, hogy a ugyanolyan hosszú legyen mindegyik szál.
      2-3 Artist Debugging 3: |-
        Lyukas a csónakon!

        Mit kell kijavítanod, hogy a vonalak találkozzanak?
      2-3 Artist Debugging 5: |-
        A kód, amit a lábszárhoz és a lábfejhez kaptál, rossz.

        Ki tudod javítani?
      2-3 Artist Debugging 6: |-
        Looks like I'm sitting on a chair that’s missing a leg!

        Edit the code to draw the last leg.
      2-3 Artist Debugging 7: |-
        Looks like the C in code is drawn backwards!

        Can you make it look like a C again?
      2-3 Artist Debugging 8: |-
        My teacher says that I should finish what I start!

        Help me finish my pinwheel. Can you figure out what's wrong?
      2-3 Artist Debugging 9: |-
        Something is off!

        The code for this stem is wrong. Can you figure out how to get the artist to trace the stem the right way?
      2-3 Artist Debugging Assessment 1: "Assessment: Why does this square end up
        being 75 pixels too small on each side?  \n\nWhere does the code go wrong?"
      2-3 Artist Free Play: Szabad játék! Rajzolj, amit akarsz.
      2-3 Artist Functions 1: "\"Me zombie artist. Me love drawing!\"  \n\nHelp the
        zombie draw square glasses.  \n\nThe bridge between the glasses is 25 pixels
        shorter than the width of the squares, which is 100 pixels."
      2-3 Artist Functions 10: 'Freeplay: Here are two functions, one to draw a big
        gear and one to draw a small gear. Use them to draw the inside of a machine!'
      2-3 Artist Functions 11: "We've renamed the `draw a square` function to `draw
        a hexagon`, but it's still giving us squares! Can you modify the `draw a hexagon`
        function to draw a hexagon with 50 pixel sides? \n\nDraw the image using the
        new function!"
      2-3 Artist Functions 11.5: "Here's that same `draw a hexagon` function. \n\nWhat
        happens if you loop the main program 6 times, turning 60 degrees each time
        you loop?"
      2-3 Artist Functions 12: "Functions are really great for drawing complex things
        multiple times. \n\nCan you use the `draw a flower` function to fill the rest
        of the planter box?\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 2: "Functions let you define new blocks! \n\nWe've moved
        the blocks needed for drawing a square into a function called `draw a square`.
        This time, use the `draw a square` function to create the glasses. \n\nThe
        squares are 75 pixels apart."
      2-3 Artist Functions 3: "Edit the function to draw a square with a side length
        of 115 to draw the bigger glasses. \n\nThe squares are now 45 pixels apart."
      2-3 Artist Functions 4: Now, put the function inside of a loop to draw these
        three squares.
      2-3 Artist Functions 9: 'Freeplay: Here is a snowflake function. Experiment
        with it to create a winter scene! This is a free play level, so there is no
        puzzle to solve. Have fun!'
      2-3 Artist Loops New 1: Rajzoljuk meg a robot fejét! Tudnál rajzolni egy négyzetet,
        aminek az oldalai 100 képpont hosszúak?
      2-3 Artist Loops New 10: Most kössük össze ezt a sok V alakot egy ciklusban!
      2-3 Artist Loops New 11: Építsd újra a kódot a legutóbbi feladatból, és a legvégére
        tegyél még egy 30 fokos balra fordulást. Ezúttal 8 helyett 24 alkalommal ismételj.
      2-3 Artist Loops New 12: Rajzold meg a gyémántot 100 képpont hosszúságú oldalakkal.
      2-3 Artist Loops New 13: "Most megadjuk a kódot (szürkével), aminek a segítségével
        meg tudod rajzolni a gyémántot. \n\nTedd ciklusba a szürke kódot, és így remek
        minta készülhet!"
      2-3 Artist Loops New 14: Játsszunk kicsit a gyémánt kódjával, és nézzük meg,
        milyen minták készíthetők még belőle. Próbáld meg megváltoztatni az elfordulás
        szögét, és hogy hányszor ismételjünk.
      2-3 Artist Loops New 15: Rajzolj valami érdekeset.
      2-3 Artist Loops New 2: |-
        Ez ugyanaz a feladat, mint amit az előbb megoldottál, de most csak egyetlen `előrelépni blokkot és egyetlen`fordulj\` blokkot használhatsz.

        Tudod használni az `ismételd` ciklust, hogy megoldd a feladványt?
      2-3 Artist Loops New 9: Rajzolj egy egyszerű V betűt, aminek mind a két oldala
        50 képpont hosszú, hogy elkészüljön az nyíl.
      2-3 Artist Nested Loops 1: "Már használtál ciklusokat ezelőtt, de azt tudtad,
        hogy egymásba is lehet rakni a ciklusokat? \\\r\nRakd ciklusba ezt az egész
        kódot háromszor, hogy kirajzolódjon a minta."
      2-3 Artist Nested Loops 10: Ismételd a ciklust 12-szer, hogy elkészítsd a mintát!
      2-3 Artist Nested Loops 11: Ismételd 4-szer a kódot, hogy elkészítsd a mintát.
        Minden kör után fordulj 90 fokot.
      2-3 Artist Nested Loops 12: Ismételd a kódot 12-szer hogy elkészítsd a köröket.
      2-3 Artist Nested Loops 2: Ismételd a háromszög rajzolást 6-szor. Minden háromszög
        után el kell fordulnod 60 fokot, mielőtt nekikezdesz a következő rajzolásának.
      2-3 Artist Nested Loops 3: A háromszög rajzolását 12-szer kell ismételned ennek
        a mintának a megrajzolásához. Oszd el a teljes körfordulat fokszámát (360)
        a rajzolni kívánt formák számával (12), hogy kiszámold, hány fokot kell fordulni
        az egyes formák rajzolása után.
      2-3 Artist Nested Loops 4: 'Ismételd 12 alkalommal a gyémánt rajzolást a virág
        megrajzolásához. Tipp: a 12 gyémánt hasonló, mint a korábban rajzolt 12 háromszög
        - mennyit kell fordulni egy-egy forma megrajzolása után?'
      2-3 Artist Nested Loops 5: Rajzold meg ennek az épületnek az ablakait egymásba
        ágyazott ciklusokkal. Az alakok oldalai 20 pixel szélesek, és 20 pixel távolságra
        vannak egymástól.
      2-3 Artist Nested Loops 6: A dinoszaurusz hátán 8 tüske van. A tüskék oldalai
        30 pixel hosszúak. Ismételd a háromszög rajzolást 8-szor, de ne feledj el
        előre haladni minden egyes háromszög után!
      2-3 Artist Nested Loops 7: Ismételd 10-szer ezt a háromszöget a Nap megrajzolásához.
        Minden háromszög után el kell fordulnod. Kitalálhatod, hány fokkal kell elfordulni,
        ha elosztod a teljes fordulat fokszámát a Napot alkotó formák számával.
      2-3 Artist Nested Loops 8: Most rajzoljunk a képre füvet. A fűcsomók 50 képpont
        távolságra vannak egymástól.
      2-3 Artist Nested Loops 9: A kép egy virág rajzolásával lesz teljes. Ismételd
        a gyémánt rajzolását 12-szer, hogy megrajzold a virágot.
      2-3 Artist Nested Loops Free Play: Szabad játék! Rajzolj valami izgalmasat egymásba
        ágyazott ciklusokkal!
      2-3 Bee Conditionals 11: "I wonder what's out there!\n\nHelp me fly around the
        yard and collect nectar only from the flowers that have some. "
      2-3 Bee Conditionals 12: Használj ciklust, hogy ellenőrizd, és összegyűjtsd
        a nektárt minden virágból!
      2-3 Bee Conditionals 13: 'Gyűjts nektárt és készíts mézet! Tipp: mi történik,
        ha a piros virágra alkalmazod a "ha nektár" feltételt? Meg tudod csinálni
        ezt a feladatot egy ciklussal.'
      2-3 Bee Conditionals 14: Gyűjts nektárt és készíts mézet. Vigyázz, ne gyűjts
        nektárt a lila virágból, ha nincs benne nektár.
      2-3 Bee Conditionals 15: "This stair step pattern should look familiar.  \n\nCan
        you collect nectar only from the flowers that have some, using as few blocks
        as possible?"
      2-3 Bee Conditionals 2: "I'm a hungry bee! \nHelp me collect all of the nectar
        from the flowers using the fewest number of blocks."
      2-3 Bee Conditionals 3: "Look at all of that nectar!\n\nHelp me collect the
        nectar and make the honey using as few blocks as you can.  "
      2-3 Bee Conditionals 5: "Be careful not to collect nectar from a purple flower
        if it doesn't have any. \nYou must first check if the nectar is equal to 1
        using the `if nectar` block."
      2-3 Bee Conditionals 6: Ellenőrizd ezt a virágot a "ha" blokkal, hogy meglássuk,
        van-e benne nektár.
      2-3 Bee Conditionals 7: Gyűjtsd össze a nektárt az összes olyan virágból, amelyben
        van nektár.
      2-3 Bee Conditionals 8: This field has red and purple flowers. Red flowers have
        a known nectar amount, but purple flower nectar is unknown. Collect all the
        nectar.
      2-3 Bee Conditionals 9: Gyűjtsd össze az összes virág összes nektárját!
      2-3 Bee Conditionals Assessment 1: 'Assessment: Collect all of the nectar. Be
        careful not to try to collect nectar from a purple flower if it doesn''t have
        any.'
      2-3 Bee Debugging 1: Ezek a blokkok igazán bogarasak. Javítsd ki a kódot, hogy
        összegyűjtsük az összes nektárt és elkészítsük az összes mézet.
      2-3 Bee Debugging 10: |-
        Becsavarodok ettől a feladványtól!
        Javítsd ki a hibát, hogy minden nektárt be tudjunk gyűjteni és elkészüljön az összes méz is a végén.
      2-3 Bee Debugging 2: "Meg tudod találni itt a hibát? \nJavítsd ki, és gyűjtsd
        össze az összes nektárt!"
      2-3 Bee Debugging 3: |-
        Hú, ez kemény!

        Javítsd ki, és gyűjtsd össze az összes nektárt!
      2-3 Bee Debugging 4: Ezek a blokkok igazán bogarasak. Javítsd ki a kódot, hogy
        összegyűjtsük az összes nektárt és elkészítsük az összes mézet.
      2-3 Bee Debugging 5: "Az a virág szinte hívogat! \n\nJavítsd ki a kódot, hogy
        összegyűjtsük az összes nektárt. Ezúttal használhatod a futtatást és a lépést
        is."
      2-3 Bee Debugging 6: |-
        Milyen édes kihívás!

        Javítsd ki a hibákat, és gyűjtsd össze az összes nektárt!
      2-3 Bee Debugging 7: Javítsd ki a hibákat, hogy be tudd gyűjteni az összes nektárt,
        és mézet tudj készíteni mindből.
      2-3 Bee Debugging 8: "Mennyi gyönyörű virág! \n\nJavítsd a hibákat, hogy minden
        nektárt be tudjuk gyűjteni."
      2-3 Bee Debugging 9: |-
        Lássuk, ezzel mire "méz"!

        Néhány javítás után ez a program összegyűjti az összes nektárt és elkészíti az összes mézet.
      2-3 Bee Debugging Assessment 1: |-
        Értékelés: Most mutasd meg, hogy mit tudsz!

        Javítsd ki a hibákat, hogy begyűjtsd az összes nektárt és elkészítsd az összes mézet.
      2-3 Bee Functions 1: Functions are blocks of code that perform a task. Use the
        "get 2 nectar" function to collect the nectar from each flower.
      2-3 Bee Functions 10: "Purple flowers change between either 1 or 0 nectar each
        time you run the puzzle.   \n\nCreate a function that collects nectar only
        from purple flowers that have nectar."
      2-3 Bee Functions 2: "Functions are blocks of code that perform a task.  \n\nUse
        the `get 5` function to get 5 nectars at a time."
      2-3 Bee Functions 3: Gyűjtsd össze az összes virág összes nektárját!
      2-3 Bee Functions 4: "The `move and get nectar` function turns the bee, collects
        nectar, and then returns the bee to where it started.  \n\nUse the function
        to collect all of the nectar."
      2-3 Bee Functions 5: There is now more nectar at the flowers. Edit the given
        function so that it collects 4 nectars and use it to collect all of the nectar
        from the flowers.
      2-3 Bee Functions 6: Most használd ugyanazt a függvényt, hogy mindhárom virágból
        összegyűjtsd a nektárt.
      2-3 Bee Functions 8: Create your own function that gets 7 nectar, moves forward,
        and makes 7 honey. Use the function to collect nectar at each flower and make
        honey at each honeycomb.
      2-3 Bee Functions 9: Create your own function that goes down a path, gets nectar,
        makes honey, and then returns the bee to the top of the path.
      2-3 Bee Functions Assessment 1: 'Assessment: Use the given function to collect
        nectar from each flower.'
      2-3 Bee Functions Assessment 2: 'Assessment: Create a function to turn, move
        forward and make 3 honey, then return the bee to where it started and turn
        back.'
      2-3 Bee Loops 1: |-
        Ezek a virágok jól néznek ki!

        Gyűjts nektárt mindegyikről, a lehető legkevesebb blokk használatával.
      2-3 Bee Loops 10: Can you use a while loop inside of two other loops to collect
        all of the nectar?
      2-3 Bee Loops 13: 'Értékelés: Gyűjtsd össze az összes nektárt, a lehető legkevesebb
        blokk felhasználásával.'
      2-3 Bee Loops 1A: Szia! Ahogy látod, én egy méh vagyok. Segítesz nekem összegyűjteni
        a nektárt ezekről a virágokról?
      2-3 Bee Loops 2: Gyűjtsd be az összes nektárt és csinálj belőlük mézet, mindezt
        a lehető legkevesebb blokk használatával.
      2-3 Bee Loops 2A: Meg tudod csinálni ugyanezt a feladatot egyszerűbben, egy
        ciklussal?
      2-3 Bee Loops 3: Minden virágról gyűjtsd össze a nektárt, és minden méhsejtnél
        készíts mézet. Természetesen a lehető legkevesebb blokk használatával.
      2-3 Bee Loops 3A: Fel tudsz használni egy ciklust a nektár összegyűjtéséhez?
      2-3 Bee Loops 3B: Most használd az `ismételd` blokkot, hogy összegyűjtsd az
        összes nektárt, aztán csinálj belőlük mézet.
      2-3 Bee Loops 4: |-
        Elfoglalt méhecskénk van!

        Segíts neki összegyűjteni az összes nektárt és készítse el az összes mézet.
      2-3 Bee Loops 4A: "Hányszor segítenek a ciklusok megoldani ezt a feladványt?
        \n\nA ciklusok a barátaid! Használd őket, hogy a lehető legkevesebb blokkal
        juss el a megoldásig."
      2-3 Bee Loops 5: |-
        Ez az útvonal más, mint a többi.

        Össze tudod gyűjteni az összes nektárt a lehető legkevesebb blokk felhasználásával?
      2-3 Bee Loops 6: Megtalálod a leggyorsabb utat, hogy a méh összegyűjtse az összes
        nektárt és mindből mézet csináljon?
      2-3 Bee Loops 7: Micsoda csodás virágok! Segítsd a méhnek, hogy mindegyik virághoz
        eljusson. Megtalálod a módját kevesebb, mint 7 blokk használatával?
      2-3 Bee Loops 8: "These purple flowers have different amount of nectar each
        time you run the puzzle. \n\nUse the `while nectar` loop to collect all of
        the nectar. \n\nThis loop will run as long as the condition is true, in this
        case `nectar > 0`."
      2-3 Bee Loops Assessment 1: 'Assessment: Use a `while` loop to collect all of
        the nectar from these flowers.'
      2-3 Maze 1: 'Tudsz segíteni nekem elkapni a csintalan malacot? Rakj egymás alá
        néhány "előrelépni" blokkot, és kattints a "Futtatás"-ra. '
      2-3 Maze 10: Vezess el a zöld förtelemig! (Vigyázz a TNT-vel)
      2-3 Maze 12: El tudod kapni a malacot ciklus használatával, amiben egyetlen
        `előrelépni` blokk van az `ismételd` blokkon belül?
      2-3 Maze 13: Vigyél a malachoz! Most csak egyetlen `előrelépni` blokkot használhatsz
      2-3 Maze 15: Ebben a feladványban két `ismételd` ciklus fog segíteni neked,
        hogy eljuss a malacig a lehető legkevesebb blokk felhasználásával!
      2-3 Maze 16: A ciklusokba egynél több blokkot is tehetsz! Tudod úgy ismételni
        a sorozatot, hogy a zombit eljuttasd a napraforgóhoz?
      2-3 Maze 16 before: Megtalálod a leggyorsabb utat, ami a malachoz vezet?
      2-3 Maze 2: Ez a malac borzolja az idegeimet. Segíts elkapni!
      2-3 Maze 3: Tervezd meg az utat, és juttass el a buta malachoz. Kerüljük el
        a dinamitot, különben repülünk!
      2-3 Maze 4: Vezess el a zöld förtelemig! (Vigyázz a TNT-vel)
      2-3 Maze 6: Őrizd meg a nyugalmad, és segíts megkeresni a malacot. Egyébként
        lehet, hogy dühös leszek!
      2-3 Maze 7: Vezess el a zöld förtelemig! (Vigyázz a TNT-vel)
      2-3 Maze 8: Juttass el a malachoz!
      2-3 Maze 9: Vezess el a zöld förtelemig! (Vigyázz a TNT-vel)
      2-3 Maze Loops 1: El tudsz vinni a malacig 5 ugyanolyan blokk használatával?
      2-3 Maze Loops 17: Használd, amit eddig tanultál, hogy eljussak a napraforgóhoz!
      2-3 Maze Loops 18: "Vigyél a napraforgóhoz a lehető legkevesebb blokkal! \n\nPróbáld
        használni az `ismételd` ciklust egy másikon belül, így le tudod rövidíteni
        a szükséges kódot."
      2-3 Maze Loops 19: "Emeljük ezt egy másik szintre! \nHasználj ismétléseket,
        hogy eljussak a napraforgóhoz a lehető legkevesebb blokk felhasználásával."
      2-3 Maze Loops 20: Meg tudod oldani ezt a feladványt a lehető legkevesebb blokk
        felhasználásával?
      2-3 Maze Loops 21: Juttass el a napraforgóhoz a lehető legkevesebb blokk használatával!
      2-3 Maze Loops Assessment 1: 'Értékelés: juttass el a napraforgóhoz csak 5 blokk
        felhasználásával! '
      4-5 Artist 1: 'Help me finish drawing my box. (Each line is 300 pixels long) '
      4-5 Artist 11: Complete the green lines. The lines are 300 pixels long and 15
        pixels apart.
      4-5 Artist 2: Loop this code using the `repeat` block to complete the square.
      4-5 Artist 3: This rectangular flower bed has a perimeter of 600. The long side
        has a length of 200. Draw the rectangle using as few blocks as possible.
      4-5 Artist 3.5: Rendben, próbáld meg kitalálni, hogy mi történik, ha futtatod
        ez a kódot (vagy nyomd meg a "Futtatás" gombot, hogy kipróbáld). Majd ismételd
        meg, hogy legyen elég idő kitölteni a rajzot. A színek (valószínűleg) minden
        alkalommal mások lesznek.
      4-5 Artist 4: Hány fokos a kör? Ismételd a blokkokat hogy elkészüljön a színes
        kör!
      4-5 Artist 5: What can we replace "???" with to make sure that the zombie completes
        this drawing using the loop provided?
      4-5 Artist 6: This equilateral triangle has angles of 60, 60, and 60 degrees.
        Each side is 200 pixels. Complete the drawing.
      4-5 Artist 7: This right triangle has angles of 30, 60, and 90 degrees. The
        slanted side's length (length of the hypotenuse) is 200 pixels. Complete the
        drawing.
      4-5 Artist 8: "The halfway line on a soccer field is perpendicular to the sidelines.\\\nThis
        rectangle has a perimeter of 800 pixels total, and it is 240 pixels long.
        How tall is it?   \n\nDraw the bounds and the halfway line."
      4-5 Artist 9: Draw the right half of this image so that the design is symmetrical.
        The triangles are equilateral and have sides that are 50 pixels long.
      4-5 Artist Assessment 1: 'Értékelés: használj ciklust egy egyenlő oldalú háromszög
        rajzolásához! Minden oldal 300 képpont hosszú.'
      4-5 Artist Free Draw 1: Szabadon rajzolhatsz! Rajzolj bármit, amihez kedved
        van.
      4-5 Artist Patterns 1: |-
        Draw this square using a loop.

        Each side is 20 pixels long.
      4-5 Artist Patterns 10: 'Ez a kód két sor hatszöget rajzol – ismételd meg az
        egészet négyszer, hogy egy teljes méhsejtet rajzolj. Tipp: Vissza kell ugranod
        120 pixelt a legkülső ciklusban, hogy a művész ne menjen ki a képernyőből.'
      4-5 Artist Patterns 11: 'Hányszor kell megismételned a gyémántot, hogy a virágot
        lerajzold? '
      4-5 Artist Patterns 12: Hogyha lemásolod a ciklust és balra fordulsz jobb helyett,
        mi történik? Tudod úgy ismételni, hogy ezt a hullámot rajzolja le?
      4-5 Artist Patterns 13: Most ismételjük a ciklust négyszer, hogy elkészüljön
        ez a képkeret. Figyelj a sarkokra - nem fordulhatsz csak úgy 90 fokot! Ha
        egy 3 fokos fordulatot 60-szor ismételve egy félkört kapunk, melyik blokkal
        kapunk a sarkokhoz egy negyed kört?
      4-5 Artist Patterns 2: If you place your square loop inside another loop, we
        call that a nested loop. What do you need to add as an outer loop to make
        sure all 15 squares line up next to each other?
      4-5 Artist Patterns 3: Now let's go one level deeper! We've nested that whole
        block of code into another loop, but you need to get the artist back in place
        to draw the next line. Which of these code blocks can you place at the end
        of the outermost loop to draw the whole grid?
      4-5 Artist Patterns 4: This diamond has 50 pixel sides and angles of 120 and
        60 degrees. Use a loop to draw it.
      4-5 Artist Patterns 5: "Repeat this code to make a row of 6 diamonds. \n\nNotice
        that we changed our diamond code to repeat 3 times instead of 2 - why do you
        think that is?"
      4-5 Artist Patterns 6: How many times do you need to repeat this block to draw
        the full grid of diamonds?
      4-5 Artist Patterns 7: "Módosítsuk az előző feladvány kódját, és készítsünk
        egy még bonyolultabb mintát.\nFigyeld meg, hogyan fedik most egymást a gyémántok.
        Próbáld meg módosítani az \nelső \"ugrás hátra\" blokkot 100-ról 50-re (fele
        olyan messze) - most milyen messze kell \nugrania a művésznek a második \"ugrás
        hátra\" blokkban?"
      4-5 Artist Patterns 8: Use a loop to draw this hexagon with 40 pixel sides and
        60 degree angles.
      4-5 Artist Patterns 9: "Now repeat this code 3 times and draw the whole row.
        \n\nEach hexagon is 80 pixels wide from the furthest points left to right."
      4-5 Artist Patterns 9.5: Let's loop this code to draw two rows of hexagons.
        Notice how our second row is shifted to the right.
      4-5 Artist Patterns Free Play: Szabad játék! Rajzolj amit szeretnél!
      4-5 Bee Conditionals 1: This cloud is blocking my view! Check to see if there's
        a flower under the cloud, and only get nectar if there's a flower. Be careful,
        it can change!
      4-5 Bee Conditionals 2: "More clouds! \n\nCheck underneath every cloud to see
        if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds
        hide the same thing!"
      4-5 Bee Conditionals 3: Now I just want to make honey. Some of these clouds
        might have honeycombs under them. Be sure to check each cloud!
      4-5 Bee Conditionals 4: Sometimes this cloud covers a flower, and sometimes
        it covers a honeycomb! Use the if/else block to collect nectar if it is a
        flower, else to make honey (because it is a honeycomb).
      4-5 Bee Conditionals 5: |-
        There will be either a flower or a honeycomb under each of those clouds!

        Use the `if/else` block to collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      4-5 Bee Conditionals 6: "I am not sure how much nectar this flower has, but
        I know it has either 1, 2, or 3 nectar. \n\nCombine the conditional blocks
        (`if` and/or `if/else`) to only get as much nectar as the flower has. \n\nRemember,
        the amount of nectar can change each time you run the puzzle!"
      4-5 Bee Conditionals 7: "These flowers can have 3, 2, or 1 nectar. \n\nComplete
        the `check purple flower` function and use it to collect all of the nectar
        at the flowers."
      4-5 Bee Conditionals 8: "Write the function for `check flower make honey`. \n\nYour
        function should check if the purple flower has 3, 2, or 1 nectar and get all
        of the nectar. \nThen, move forward and make honey."
      4-5 Bee Conditionals Assessment 1: "**Assessment:** This cloud is either hiding
        a flower with one nectar or a honeycomb that needs one honey.  \n\nComplete
        the `get nectar or make honey` function, then call it to collect the nectar
        or honey. "
      4-5 Bee Debugging 1: "These blocks are really bugging me. \n\nCan you fix them?"
      4-5 Bee Debugging 10: Találd meg a hibát és javítsd ki.
      4-5 Bee Debugging 11: Helyesen számol?
      4-5 Bee Debugging 2: Segíts a méhnek nektárt gyűjteni és mézet készíteni.
      4-5 Bee Debugging 3: Találd meg a hibát és javítsd ki.
      4-5 Bee Debugging 4: Ez a kód nem működik. Mi a helyes mintázat?
      4-5 Bee Debugging 5: Valami nem stimmel...
      4-5 Bee Debugging 6: "The purple flower has a different amount of nectar each
        time you run the puzzle. \n\nFix the blocks to get all of the nectar from
        the flower each time."
      4-5 Bee Debugging 7: Valami hiányzik a függvényből...
      4-5 Bee Debugging 8: This function is fine, but it isn't used properly.
      4-5 Bee Debugging 9: Miért nem készít elég mézet a méh?
      4-5 Bee Debugging Assessment 1: 'Értékelés: javítsd ki a kódot.'
      4-5 Bee Nested Loops 1: Használj ciklust az összes nektár összegyűjtéséhez!
      4-5 Bee Nested Loops 2: 'Collect all of the nectar from each flower. Use a nested
        loop. '
      4-5 Bee Nested Loops 3: Collect all of the nectar by putting the starter code
        inside another loop.
      4-5 Bee Nested Loops 4: "Collect all of the nectar from each flower and make
        honey at the honeycomb. \n\nUse a nested loop. "
      4-5 Bee Nested Loops 5: Gyűjtasd össze az összes nektárt beágyazott ciklus készítésével.
      4-5 Bee Nested Loops 7: Put this loop inside another loop to create a nested
        loop and collect all of the nectar from the flowers.
      4-5 Bee Nested Loops 9: Collect all of the nectar from these flowers by nesting
        a while loop inside a repeat.
      4-5 Bee Nested Loops Assessment 1: "**Assessment:** Collect all of the nectar
        and make all of the honey using loops."
      4-5 Bee Nested Loops Rows: Gather nectar from the rows of flowers! Use a nested
        loop.
      4-5 Maze 1: Kedves személy. Én zombi. Kell... eljut... napraforgó.
      4-5 Maze 10: El tudunk jutni a napraforgóig csak négy blokk felhasználásával?
      4-5 Maze 11: El tudsz juttatni a napraforgóhoz csak hat blokk használatával?
      4-5 Maze 12: Rendben, ez egy kicsit más. Meg tudod csinálni csak hat blokkal?
      4-5 Maze 2: Juttass el a napraforgóhoz, de kerüljük el a húsevő virágot!
      4-5 Maze 3: Kell... eljut... napraforgó.
      4-5 Maze 4: Használd az "ismételd" blokkot, hogy gyorsan megoldd a feladványt...
      4-5 Maze 5: Meg tudod oldani ezt a feladványt a lehető legkevesebb blokk felhasználásával?
      4-5 Maze 6: Meg tudod oldani ezt a feladványt a lehető legkevesebb blokk felhasználásával?
      4-5 Maze 7: Vidd a zombit gyorsan a napraforgóhoz! Meg tudod oldani 11 blokknál
        kevesebbel?
      4-5 Maze 8: Használd az "ismételd" blokkot, hogy eljuttasd a zombit a napraforgóhoz.
        (Kerüld el a húsevő virágokat!)
      4-5 Maze 9: "Most van egy `ismételd amíg` ciklusunk.\\\nEz addig fogja ismételni
        az utasításokat, amíg el nem jut a zombi a napraforgóig.  \n\nHasználd az
        új `ismételd amíg` blokkot, hogy olyan kevés utasítással oldd meg a feladványt
        amennyivel csak lehet."
      4-5 Maze Assessment 1: 'Vizsga: juss el a napraforgóhoz a lehető legkevesebb
        blokk felhasználásával.'
      4-5 Maze Conditionals 1: Use the `repeat until` block to get the zombie to the
        sunflower.
      4-5 Maze Conditionals 10: "Can you add just 3 blocks to help the zombie solve
        a more complex maze? \n\nIf you do it right, he can walk any curvy path no
        matter the length!"
      4-5 Maze Conditionals 2: Use the `repeat until` block to get the zombie to the
        sunflower.
      4-5 Maze Conditionals 3: 'Use the `if` block to help me decide when to turn. '
      4-5 Maze Conditionals 4: Ok, solve this one just like the last puzzle, but you
        need to remember how you used the `if` and `repeat until` blocks together.
      4-5 Maze Conditionals 5: "\"Me want sunflower!\"  \n\nUse an `if` statement
        to get the zombie to the sunflower with the fewest number of blocks."
      4-5 Maze Conditionals 6: |-
        "Eat sunflower!"

        Use an `if` statement to get the zombie to the sunflower with the fewest number of blocks.
      4-5 Maze Conditionals 7: The solution to this puzzle isn't very different, but
        watch out for the chompers!
      4-5 Maze Conditionals 8: "The `if/else` block checks a condition, and then does
        one thing OR another. \n\nUse this new block to get me to the sunflower."
      4-5 Maze Conditionals 9: |-
        One more practice puzzle with the `if/else` block!

        Trace it with your finger to see if you can figure it out on your first try.
      4-5 Maze Conditionals Assessment 1: "**Assessment:** Use a `repeat until` and
        an `if/else` block to get me to the sunflower in as few blocks as possible."
      4-5 Nested Loops 1: 'Complete the code to draw these triangles.  The first one
        is done for you.  Hint:  3 triangles in a 360 degree rotation.'
      4-5 Nested Loops 11: Can you draw these 10 squares of this sidewalk using a
        nested loop? Each square is 30 pixels.
      4-5 Nested Loops 12: Meg tudod rajzolni ezt a 36 darab háromszöget egymásba
        ágyazott ciklusok segítségével?
      4-5 Nested Loops 2: 'Now nest this loop inside another loop to draw 10 triangles.  This
        is called a "nested" loop.  '
      4-5 Nested Loops 3: |-
        Create a sun by nesting the starter code in another loop.

        To get this cool design with a hollow center, you'll need to jump forward by the length of the triangle before turning.
      4-5 Nested Loops 5: Ismételd meg a megadott kódot annyiszor, hogy szélmalmot
        készíts.
      4-5 Nested Loops 6: Meg tudod rajzolni a hatszöget a háromszög rajzoló kód ciklusba
        ágyazásával?
      4-5 Nested Loops 7: "Loop this design 10 times. \n\nHow much do you have to
        turn each time you loop?"
      4-5 Nested Loops 8: "Loop this shape 6 times. \n\nHow much do you have to turn
        each time you loop? "
      4-5 Nested Loops 9: Rajzold meg az alligátor alsó fogsorát!
      4-5 Nested Loops Assessment 1: 'Assessment: Use a nested loop to complete the
        design.'
      4-5 While Loops 1: Move me to the hole and fill it with two shovelfuls of dirt,
        using the `fill` block.
      4-5 While Loops 2: Move me to the pile of dirt and remove it with 5 shovel scoops,
        using the `remove 1` block.
      4-5 While Loops 3: "Use as few blocks as possible to complete this puzzle!  \n\nMove
        me to the pile and remove all the dirt, then move to the hole and fill it
        completely."
      4-5 While Loops 4: "Wow, look at that! \n\nI don't know how many shovelfuls
        of dirt this hole needs.\\\nCan you write a program that keeps using the `fill`
        block until the ground is even?  "
      4-5 While Loops 5: Wow, now there are two deep holes! Can you write a program
        that fills them both until the ground is even?
      4-5 While Loops 6: Wow, now there is a large pile of dirt! Can you write a program
        that removes all of it so the ground is even?
      4-5 While Loops 7: Wow, now there are three piles of dirt! Can you write a program
        that removes each of them until the ground is even?
      4-5 While Loops 8: " There is a really deep hole and a really large pile of
        dirt.  How many shovelfuls of dirt need to be moved around to make the ground
        flat?"
      4-5 While Loops Assessment 1: There are a lot of holes and piles.  Help me to
        fill and remove them to make the ground flat.
      AB_Debug_PlayLab3: Move the knight to each of the flags. If something goes wrong,
        look for bugs!
      Alien Defender: 'Projekt ötlet: Készíts egy védekező játékot a Játéklaborban!'
      CDEF_debugging_flappy2: Why doesn't this game work?
      CSD U3 Boolean Modify: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Modify_2018: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Modify_2019: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Predict: What do you think this code will do when it is run?
        Predict what each console.log() command will print, then run the program to
        check your predictions.
      CSD U3 Boolean Predict_2018: What do you think this code will do when it is
        run? Predict what each console.log() command will print, then run the program
        to check your predictions.
      CSD U3 Boolean Predict_2019: What do you think this code will do when it is
        run? Predict what each console.log() command will print, then run the program
        to check your predictions.
      CSD U3 Keypress Boolean: Modify the code so that all of the console.log commands
        print true
      CSD U3 Keypress Boolean_2018: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Boolean_2018_2019: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers: Modify the code so that all of the console.log commands
        print true
      CSD U3 Keypress Watchers_2018: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers_2019: Modify the code so that all of the console.log
        commands print true
      CSD U3 L5 Freeplay: Change the value of petalSize multiple times. How does it
        change your drawing?
      CSD U3 L5 Freeplay_2018: Change the value of petalSize multiple times. How does
        it change your drawing?
      CSD U3 L5 Freeplay_2019: Change the value of petalSize multiple times. How does
        it change your drawing?
      CSD U3 Mouse Input Bee 2: Do this
      CSD U3 Mouse Input Bee 2_2018: Do this
      CSD U3 Mouse Input Bee 2_2019: Do this
      CSD U3 Sprites intro sprites: Csináld ezt
      CSD U3 Sprites intro sprites_2018: Csináld ezt
      CSD U3 Sprites intro sprites_2019: Csináld ezt
      CSD U3 Variables change circle size: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables change circle size_2018: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables change circle size_2019: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables naming rules v2: Change the value of petalSize multiple times.
        How does it change your drawing?
      CSD U3 Variables naming rules v2_2018: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables naming rules v2_2018_2019: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random with assignment: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random with assignment_2018: Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables random with assignment_2019: Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U5 black white images pixelation: Egészítsd ki az X alakot nullák és egyesek
        begépelésével
      CSD U5 black white images pixelation 2: Rajzolj egy mosolygós arcot (kattints
        ide a kép megtekintéséhez)
      CSD U5 black white images pixelation 2_2018: Rajzolj egy mosolygós arcot (kattints
        ide a kép megtekintéséhez)
      CSD U5 black white images pixelation 2_2019: Rajzolj egy mosolygós arcot (kattints
        ide a kép megtekintéséhez)
      CSD U5 black white images pixelation 3: Módosítsd a szélesség és magasság csúszkákat
        a kép megtalálásához (kattints ide, és tudj meg többet)
      CSD U5 black white images pixelation 3_2018: Módosítsd a szélesség és magasság
        csúszkákat a kép megtalálásához (kattints ide, és tudj meg többet)
      CSD U5 black white images pixelation 3_2019: Módosítsd a szélesség és magasság
        csúszkákat a kép megtalálásához (kattints ide, és tudj meg többet)
      CSD U5 black white images pixelation 4: Adj szemöldököt a mosolygós archoz (kattints
        ide a kép megtekintéséhez)
      CSD U5 black white images pixelation 4_2018: Adj szemöldököt a mosolygós archoz
        (kattints ide a kép megtekintéséhez)
      CSD U5 black white images pixelation 4_2019: Adj szemöldököt a mosolygós archoz
        (kattints ide a kép megtekintéséhez)
      CSD U5 black white images pixelation 5: Rajzold bármit, amit szeretnél
      CSD U5 black white images pixelation 5_2018: Rajzold bármit, amit szeretnél
      CSD U5 black white images pixelation 5_2019: Rajzold bármit, amit szeretnél
      CSD U5 black white images pixelation_2018: Egészítsd ki az X alakot nullák és
        egyesek begépelésével
      CSD U5 black white images pixelation_2019: Egészítsd ki az X alakot nullák és
        egyesek begépelésével
      CSD U6 params modify clouds: |-
        # Clouds

        This program makes the clouds move when you blow on the sound sensor, but it's not finished.

        # Do This

        -   Create a new function `moveCloud(name)` that will move any cloud.
            -   (Hint: you will use almost all the same code as the `moveCloud0` function)
        -   Call your new `moveCloud(name)` function inside the event block, once for each cloud name.
            -   (Hint: this is similar to how the `loopCloud(name)` function is called many times.
      CSD U6 params modify clouds_2018: |-
        # Clouds

        This program makes the clouds move when you blow on the sound sensor, but it's not finished.

        # Do This

        -   Create a new function `moveCloud(name)` that will move any cloud.
            -   (Hint: you will use almost all the same code as the `moveCloud0` function)
        -   Call your new `moveCloud(name)` function inside the event block, once for each cloud name.
            -   (Hint: this is similar to how the `loopCloud(name)` function is called many times.
      CSD U6 params modify planes: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSD U6 params modify planes_2018: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSD U6 params modify planes_2019: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSDU4 - Design Mode - 16: Add an event handler for the button using the "Insert
        and show" link in the Design Mode Events tab. (Click to see full instructions).
      CSDU4 - Design Mode - 17: Update the ID names and `console.log` messages to
        match the correct button. (Click to see full instructions.)
      CSDU4 - Design Mode - 18: Fix the layout of the bullseye game. (Click to see
        full instructions)
      CSDU4 - Design Mode - 4: Improve the button by choosing a descriptive and meaningful
        ID. (Click to see full instructions)
      CSDU6 arrays select rainbow: Írd ki a képernyőre a tömb tartalmát növekvő számsorrendben
        (kattints ide a bővebb információkhoz)
      CSDU6 arrays select rainbow_2018: Írd ki a képernyőre a tömb tartalmát növekvő
        számsorrendben (kattints ide a bővebb információkhoz)
      CSDU6 arrays select rainbow_2019: Írd ki a képernyőre a tömb tartalmát növekvő
        számsorrendben (kattints ide a bővebb információkhoz)
      CSDU6 arrays select random: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select random_2018: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select random_2019: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select variable: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select variable_2018: Write a program that displays a randomly
        chosen color from the array. (Click to see full instructions)
      CSDU6 arrays select variable_2019: Write a program that displays a randomly
        chosen color from the array. (Click to see full instructions)
      Choose Your Own Adventure: You can do whatever you want in play lab! Here's
        an example of choose your own adventure story in play lab.
      Course 4 Artist 1: 'Segíts nekem befejezni a dobozom rajzolását. (Minden vonal
        200 pixel hosszú) '
      Course 4 Artist 10: |-
        Click here to see the full instructions again!

        Here is the code for an interesting shape.  What happens when you repeat it multiple times, turning between each iteration?   Notice that the turns in this shape add up to 420 degrees, which means that when your artist is done drawing, it will be facing a different direction than when you started.  That new direction is exactly 60 degrees to the right of where you began.
      Course 4 Artist 11: És most egy kis kihívás! Ne félj próbálkozni. Nem kell elsőre
        tökéletes képet kapnod. Szeretnél további tippeket kapni? Kattints ide!
      Course 4 Artist 12: Szeretnéd még egyszer megnézni az ötletet adó ábrákat vagy
        a tippeket? Kattints ide! Ha nem, akkor rajzolj egy saját ábrát!
      Course 4 Artist 13: Még mindig játszol? Itt egy üres vászon, amire azt rajzolsz,
        amit csak akarsz!
      Course 4 Artist 2: Ciklusba tudnád rakni ezt a kód részletet, hogy a szürke
        négyzet kirajzolódjon?
      Course 4 Artist 20: Still playing?  Here is a blank canvas where you can create
        whatever you want!
      Course 4 Artist 3: Rendben, most próbáld meg kitalálni, hogy mi fog történni,
        ha futtatod ezt a kódot (vagy futtasd le). Aztán, ismételd meg a kódot annyiszor,
        hogy kirajzolódjon a teljes ábra.
      Course 4 Artist 4: Hány fokból áll egy kör? A hiányzó helyre írd be a helyes
        választ, hogy egy színes kört készíts.
      Course 4 Artist 5: Rajzold meg a minta másik oldalát, úgy hogy szimmetrikus
        legyen. A háromszögek szabályosak, és az oldalai 50 pixel hosszúak.
      Course 4 Artist 6: Egészítsd ki a kódot, hogy kirajzolódjon ez a három egyenlő
        oldalú háromszög.
      Course 4 Artist 7: 'Most helyezd be ezt a ciklust egy másik ciklus belsejébe,
        hogy 10 db háromszöget rajzoljon. Az ilyet egymásba ágyazott ciklusnak nevezik.
        Segítség: a 10 háromszög egy körön van egyenlően elosztva.  '
      Course 4 Artist 8: Rajzold meg ezt a napocskát egy ciklussal, ami 12 háromszöget
        rajzol.
      Course 4 Artist 8a: Emlékszel erre az alakzatra? Most megrajzolhatod úgy, hogy
        nincsenek kiinduló blokkok!
      Course 4 Artist 9: 'Ismételd ezt a mintát 10-szer, de minden minta kirajzolása
        után fordulj is el. '
      Course 4 Artist Binary 1: "Here's a function that takes a binary string of 1's
        and 0's and instructs the artist to follow them from left to right, top to
        bottom.  The artist will fill-in the squares when it sees a 1 and ignore the
        square when it sees a 0. \n\nRun this code to see how the artist uses binary
        to draw this pattern."
      Course 4 Artist Binary 2: Which of these binary strings could you loop 8 times
        to draw this image?
      Course 4 Artist Binary 3: Meg tudod rajzolni ezt a mintát mindössze három bináris
        számjegy (0 és 1) ismétlésével?
      Course 4 Artist Binary 4: |-
        Minden bináris sorozat egy sort jelöl ezen a képen.
        Át tudod rendezni a blokkokat úgy, hogy egy mosolygós fejet rajzoljanak a mogorva fej helyett?
      Course 4 Artist Binary 5: Melyik 6 jegyből álló bináris számsorozatot kell 11
        alkalommal ismételned ennek a képnek a megrajzolásához?
      Course 4 Artist Binary 6: Mi az a legrövidebb bináris karakterlánc, ami ha megismételed,
        kirajzolja ezt a képet?
      Course 4 Artist Binary 7: Fejezd be a rajzot.
      Course 4 Artist Binary Free Play 2: 'Szabad játék: itt egy üres vászon amire
        azt rajzolsz, amit csak akarsz. Jó játékot!'
      Course 4 Artist Binary Free Play 2a: |-
        Itt egy nagyobb felbontású vászon - 16 x 16 pixeles!

        Nézd meg, mi történik, amikor elkezdünk játszani a bitekkel!
      Course 4 Artist Binary Free Play 2b: Segítségért kattints ide.
      Course 4 Artist Binary pre1: "A bináris az információ ábrázolása mindössze 2
        állapot használatával. Most a \"ki\" (ezt a 0 számjegy jelöli) és a \"be\"
        (ezt az 1 számjegy jelöli) állapotokat használjuk.\\\r\n\\\r\nEgy \"képpontokból\"
        álló rácsot láthatsz most alul, amelyen végiglépkedhetsz és létrehozhatsz
        mintákat is, ha bizonyos négyzeteket bekapcsolsz. Meg tudod rajzoltatni a
        művésszel a \"01010101\" bináris sorozatot az első sorban?"
      Course 4 Artist For Loops 1: Use a repeat block to draw this triangle that is
        50 pixels wide.
      Course 4 Artist For Loops 11: 'Remember back in a previous stage when we used
        a variable to control the number of sides in a shape? We are going to do the
        same thing with the `counter` variable now. This pattern starts with a triangle
        and adds one side at a time until it draws a decagon (10 sides). Each side
        should be 100 pixels long. '
      Course 4 Artist For Loops 11a: |-
        Let's put it all together!  Using your knowledge of `for` loops and the `counter` variable, create this drawing where each shape has two more sides than the last.  Make sure that each side is 10 times as long as the number of sides in the polygon.

        Very little of the code has been provided for you.
      Course 4 Artist For Loops 14: If you turn a little bit more or less than you
        normally would for a shape, it creates a neat effect. Try using some of the
        code from the last level, but turning 89 degrees to create this twisted square
        spiral.
      Course 4 Artist For Loops 15: 'Free Play: Try making some drawings of your own
        using "for loops". We''ve added a few useful variables for you as well.'
      Course 4 Artist For Loops 2: 'I''ve put the code for drawing a triangle inside
        a for loop that counts from 50 to 100 by 10.  NOTE: Make sure you look at
        the code before you hit "Run".'
      Course 4 Artist For Loops 3: 'Ez a fejtörő hasonló az előzőhöz. A legkisebb
        háromszög oldala 20 képpont, a legnagyobb 200 képpont hosszúságú. Minden háromszög
        oldala 20 képponttal nagyobb, mint az előző háromszögé. '
      Course 4 Artist For Loops 4: 'How would you modify what you''ve learned to draw
        these squares? They start at 15 pixels long, the largest is 300 pixels long,
        and each square is 15 pixels larger than the last. '
      Course 4 Artist For Loops 6a: Végezz el három kis módosítást az előző kódon,
        hogy ezt kapd!
      Course 4 Artist For Loops 8: |-
        Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?

        Hint:  You need to remove something!
      Course 4 Artist For Loops Challenge: "**Challenge:** Can you figure out how
        to use all of the things you've learned to create this image of polygons,
        all with 40 pixel sides?"
      Course 4 Artist For Loops inspire: |-
        Free-Play Inspiration: You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own.

        Need a hint? Click here.
      Course 4 Artist Functions Inspiration: Click here to see the hints again.
      Course 4 Artist Functions challenge: Click here to see the hints again.
      Course 4 Artist Inspire: Szeretnéd még egyszer megnézni az ötletet adó ábrákat
        vagy a tippeket? Kattints ide! Ha nem, akkor rajzolj egy saját ábrát!
      Course 4 Artist Vars 1: |-
        Rajzoljunk egyenlő oldalú háromszöget.

        Minden oldala legyen 100 képpont hosszú.
      Course 4 Artist Vars 11: Ez egy bonyolultabb kód, ami az előző feladvány gondolatait
        viszi tovább. Milyen értéket kell beállítanod a "sides" (oldalak) változóban,
        hogy megrajzold a következő, négyzetekből álló képet?
      Course 4 Artist Vars 12: 'Állítsuk be a "sides" (oldalak) változó értékét 5-re.
        Minél több oldalt állítunk be ebben az algoritmusban, annál nagyobb lesz az
        egész minta. Vedd észre, hogy van még egy változó: "length" (hossz). Most
        már ezt is használhatjuk a "lépj előre" blokkban. Állítsd be a "length" (hossz)
        változó értékét 75-re az alakzat megrajzolásához.'
      Course 4 Artist Vars 13: Amikor egy alakzatnak sok oldala van, akkor minden
        oldalnak rövidebbnek kell lennie, hogy elférjen a képernyőn. Készítsük el
        ennek a lenyűgöző mintának az algoritmusát, de ahelyett, hogy kézzel állítanánk
        be a `length` (hossz) változó értékét, használjunk most egy matematikai blokkot
        a `sides` (oldalak) változó értékét felhasználva, hogy minden alakzat megfelelően
        elférjen. Minden sokszög kerülete legyen 300 képpont. Szükséged van tippekre?
        Kattints ide.
      Course 4 Artist Vars 14: |-
        Free Play: Check it out! Now your algorithm is nested within one more loop. Experiment with changing the values of your two variables to draw cool patterns.

        For even more effect, try playing with color!  Use random colors inside loops to see how it changes your design.
      Course 4 Artist Vars 2: A "lépj előre 150" használata helyett a "menj" blokk
        most egy "length" (hossz) nevű változót használ. Be tudod állítani a "length"
        változó értékét 150-re a következő háromszög megrajzolásához?
      Course 4 Artist Vars 4: Most egy olyan téglalapot szeretnék rajzolni, ami kétszer
        olyan magas, mint amilyen széles. Van egy "width" (szélesség) nevű változónk,
        amelynek értékét 100-ra kell beállítani. Ki tudod egészíteni a kódot matematikai
        blokk használatával?
      Course 4 Artist Vars 6: Az alábbi kóddal bármilyen szabályos sokszöget meg lehet
        rajzolni. Van benne egy új változó, aminek sides (oldalak) a neve, és az értéke
        4-re van beállítva. Tudod használni a sides változót (matematikai blokkal
        együtt) arra, hogy mindig megfelelőmennyiségűt fordulj függetlenül a sokszög
        oldalainak számától? Kattints ide a tipphez való visszatéréshez!
      Course 4 Artist Vars 7: Használd az előző feladványban szerzett tudásod, és
        hozd létre ezt a hatszöget a "sides" (oldalak) változó használatával. Nézd
        meg, hogy melyik egyetlen értéket kell megváltoztatnod ahhoz, hogy háromszöget,
        négyszöget, ötszöget vagy nyolcszöget rajzolj?
      Course 4 Artist Vars 8: 'Szabad játék: kísérletezz az alakzat oldalszámával.
        Tudod úgy módosítani az algoritmust, hogy az alakzat teljes mérete ugyanannyi
        maradjon függetlenül az oldalainak számától? Tipp: Ha elosztod a kezdeti hosszot
        az oldalak számával, az oldalak egyre rövidebbek lesznek, ahogy az oldalak
        száma nő.'
      Course 4 Bee 1: "A méh nem tudja, mi van a felhő alatt! \nHasználd a 'ha' blokkot,
        hogy megtudd, virág van-e a felhő alatt. \nCsak akkor gyűjts nektárt, ha tényleg
        virágot találsz."
      Course 4 Bee 2: Használd a "ha/különben" blokkot, és ellenőrizd, hogy egy virágnál
        vagy egy méhsejtnél állsz-e. Ha virágnál állsz, akkor gyűjts egy nektárt -
        ha nem, akkor készíts mézet!
      Course 4 Bee 3: Az ismeretlen objektum vagy virág vagy lép. Használd a ha/különben
        blokkot nektár gyűjtéséhez, ha ez virág, különben pedig készíts mézet (mert
        ez egy lép).
      Course 4 Bee Loops 5 NEW: Itt van három virág. Megtalálod a megfelelő utasításokat,
        amelyet háromszor ismételve begyűjtheted a nektárt úgy, hogy minél kevesebb
        blokkot használsz?
      Course 4 Bee Loops 5a NEW: Most használj ciklust, hogy a méh begyűjtse az összes
        nektárt a léphez vezető úton. Használj olyan kevés blokkot, amennyit csak
        lehetséges. Amikor odaérsz, ne felejts el mézet készíteni!
      Course 4 Bee Params 1: Write a sequence to collect all of the nectar using `get
        3 nectar` which turns, moves to collect the nectar, and then returns to the
        original location.
      Course 4 Bee Params 2: Modify the "get 3 nectar" function so it makes me turn
        right instead of left to the flowers.
      Course 4 Bee Params 3: 'Now there are flowers on both sides! We''ve added variables
        called "left" and "right" for you to use, and added a parameter called "direction"
        to "get 3 nectar". Edit "get 3 nectar" so that the bee turns the correct direction
        when the variables "left" or "right" are passed into the function.  '
      Course 4 Bee Params 4: Try using your new function to collect nectar from all
        of the flowers. Remember to use the left and right variables.
      Course 4 Bee Params 5: Kezdjük az alapoktól - el tudod készíteni az új "gyűjts
        5 nektárt" függvényt egy irány paraméterrel?
      Course 4 Bee Params 6: Wouldn't it be nice if we could collect all of these
        nectars with a single function? Try adding a new parameter to your function
        called "nectar units" to control the amount of nectar to collect. You'll probably
        want to rename the function too!
      Course 4 Bee Params 7: Try using your new function to collect all of this nectar.
      Course 4 Bee Params 8: 'Challenge: Now there''s honey to deal with too! Rewrite
        your function to use both the number of honey units and the number of nectar
        units.  How would you use those numbers to decide what you should do?'
      Course 4 EC 1a: Nincsenek szabályok. Nincsenek tippek. Csak a kihívás!
      Course 4 EC 1b: Nincsenek szabályok. Nincsenek tippek. Csak a kihívás!
      Course 4 EC 2a: Nincsenek szabályok. Nincsenek tippek. Csak a kihívás!
      Course 4 EC 2b: Nincsenek szabályok. Nincsenek tippek. Csak a kihívás!
      Course 4 EC 2c: Nincsenek szabályok. Nincsenek tippek. Csak a kihívás!
      Course 4 Maze 2: Kerüld el a TNT-t!
      Course 4 Maze 3: 'Programozd be a dühös madarat, hogy eljusson a malacig. '
      Course 4 Maze 4: Próbáld ki az "ismételd" blokkot, és használj kevesebb blokkot
        a feladvány megoldásához...
      Course 4 Maze 5: Meg tudod oldani ezt a feladványt a lehető legkevesebb blokk
        felhasználásával?
      Course 4 Play Lab Params 1: Here's a function called `jump` that causes your
        main character to jump up 100 pixels. Run the program and use the jump function
        to collect all of the flags by moving the dog with the arrow keys.
      Course 4 Play Lab Params 10: "We've added one last function for you. \n\nUse
        an \"if\" statement to program your game to call the \"level\\_up\" function
        only when \"player\\_score\" becomes greater than a certain number.\n\nFor
        example: \"player\\_score\" > 6\n\nPlay the game, and make it to level 3 to
        move to the next puzzle. "
      Course 4 Play Lab Params 2: "Now we've got flags that are too high for our current
        jump! Let's use both the \"up\" and \"down\" arrows so that we can have multiple
        jump heights.  \n\nWe need to add a parameter to our jump function called
        \"height\".  The up arrow should cause the dog to jump 200 pixels and the
        down arrow should make it jump only 100 pixels. "
      Course 4 Play Lab Params 3: 'We have added another parameter to the jump function
        so that we can use it with other actors. Each actor is represented by a number,
        starting from one. Edit the "jump" function so that it uses the "actor" parameter
        to make the correct character jump. '
      Course 4 Play Lab Params 4: "Itt van egy járőr nevű függvény. \n\nSzerkeszd
        a \"járőr\" függvényt úgy, hogy a macska 400 képpontot fel, majd 400 képpontot
        lefelé menjen."
      Course 4 Play Lab Params 5: Szerkeszd a "járőr" függvényt, és adj hozzá egy
        "szereplő" paramétert, hogy minden képernyőn megjelenő szereplőre meg tudjuk
        hívni. Ne felejtsd, hogy a szereplőket az 1, 2 és 3 számok jelölik.
      Course 4 Play Lab Params 6: Add hozzá még a "sebesség" paramétert a "járőr"
        függvényhez. Használd a "sebesség beállítása" blokkot az új "sebesség" paraméterrel,
        és segíts a Pingvinnek elérni mindkét zászlót, mielőtt a többi szereplő akárcsak
        egyet is elérne.
      Course 4 Play Lab Params 7: |-
        Let's have some fun! Look at the code provided to see if you can figure out what each block does.\
        When you're done, use the arrow keys to control Dog and collect all of the flags.
        NOTE: You don't need to make any changes to the program
      Course 4 Play Lab Params 8: Use the `when actor touches` block to send Dog back
        to the top-left ONLY if Dog touches any of the other actors.
      Course 4 Play Lab Params 9: "Here's our game from an earlier stage, but most
        of the code is hidden. There’s a new function `score_points.`\n\nEdit the
        function so that a new parameter called `points` can be added to `player_score`.
        \n\nThe variable `player_score` should increase each time Dog tags Cat with
        pie, and decrease each time that Cat tags Dog with a sandwich.\n\nNote: When
        you're done, click \"Run\" to play.  When Dog scores 6 points, you will move
        on to the next puzzle. "
      Course 4 Play Lab Vars 1: This time you don't have to write any code, just hit
        "Run" to play the game! In this game, you're the dog who is trying to collect
        more flags than the cat. Use the down arrow to control the dog. Press "Finish"
        when you're done playing.
      Course 4 Play Lab Vars 2: The race in that last puzzle wasn't very fair! Change
        the `dog_speed` variable to make sure you can collect more flags than Cat.
        The first to collect 10 flags wins!
      Course 4 Play Lab Vars 3: Use the left and right arrows to move, and the up
        arrow to jump. See if you can collect all of the flags.
      Course 4 Play Lab Vars 4: Now we're using a variable called "height" to control
        how high the dog can jump. Update the "height" variable so that the dog can
        jump high enough to reach all the flags.
      Course 4 Play Lab Vars 5: 'Let''s build a game! First we''ll need a score. Rebuild
        the code that you saw in the last level to set the score to 10. '
      Course 4 Play Lab Vars 6: |-
        Use the right arrow to throw pie.

        In our game, how should we score points? Add 1 to your "points" variable each time Dog hits Cat with a piece of pie. Use the "when actor 2 touches anything" event to trigger an update to your score. You can increment your variable by setting "points = points + 1." Get your score up to 10 (going one at a time!) to pass the level.
      Course 4 Play Lab Vars 7: Nice, now let's make sure this game isn't too easy
        to play. Any time Dog (actor 1) gets hit by a sandwich from Cat (actor 2),
        you should lose a point. Start with 10 points so it's not too hard. Let your
        score drop down from 10 to 0 to pass the level.
      Course 4 Play Lab Vars 9: "Free Play time! Here are all of the variables we've
        played with so far in this stage, as well as a few more in case you want them.
        \n\nNotice that there are now so many blocks in our toolbox that they need
        to be organized!  Here, we've put each piece into an appropriate category.
        \ Take some time to explore everything that is available. When you're done
        browsing, make a game or story using repeats, variables, and events.  \n\nHint:
        scroll down to see all the commands in the workspace."
      Course 4 Play Labs For Loops 1: Let's make the dog speak every number from 1
        to 100. Use a `for` loop and the counter block to speak the counter variable
        each time the loop is run.
      Course 4 Play Labs For Loops 2: This time, help Olive the Cat count only the
        odd numbers from 1 to 101.
      Course 4 Play Labs For Loops 3: If we count by larger numbers, we count even
        higher in the same amount of time. Try making Pirate Pegleg count from 10
        up to 1000, adding 10 at a time.
      Course 4 Playlab For Loop Freeplay: 'Freeplay: Use everything you''ve learned
        so far to make a game that includes a `for` loop!'
      Course 4 Playlab For Loops 4b: Can you change the **increment** in one of the
        loops so that the race is a tie?
      Course 4 Playlab For Loops 5b: Adjust the interval on these `for` loops so that
        the two characters end in the exact same place.
      Course 4 Playlab For Loops 6b: "Edit this `for` loop to create a game that's
        fun for you to play! \nPress \"Run\" and click Madame Unicorn as many times
        as you can.  Can you beat our score of 24? "
      Course 4 SCF 1: Use the suggested functions to draw four rows of hexagons. Notice
        how our even numbered rows are shifted to the right?
      Course 4 SCF 1a: Can you figure out how to collect all of this nectar with the
        fewest blocks possible?
      Course 4 SCF 1b: Can you figure out how to collect all of this honey with the
        fewest blocks possible?
      Course 4 SCF 2: 'Use what you learned in the previous level to draw an image
        like this. Note: The code becomes more simple if you incorporate parameters. '
      Course 4 SCF 3: 'Use what you learned in the previous level to draw an image
        like this. Note: The code becomes more simple if you incorporate parameters. '
      Course 4 SCFL 1: Oldd meg ezt a feladványt a lehető legkevesebb blokk felhasználásával.
      Course 4 SCFL 1a: Can you get Scrat to his acorn using as few blocks as possible?
      Course 4 SCFL 1b: Can you get Scrat to his acorn using as few blocks as possible?
      Course 4 SCFL 2: Oldd meg ezt a feladványt a lehető legkevesebb blokk felhasználásával.
      Course 4 SCFL 3: Ki tudod találni hogyan lehet elkészíteni a rajzot?
      Course 4 SCFL 4: Ki tudod találni hogyan lehet elkészíteni a rajzot?
      Course 4 SCFL 6: Ki tudod találni hogyan lehet elkészíteni a rajzot egy ciklussal?
      Course 4 SCFL 7: The artist wants to catch some waves! Can you figure out how
        to re-create this drawing?
      Course 4 SCV 1: Kattints ide az utasítások újbóli megtekintéséhez.
      Course 4 SCV 2: Kattints ide az utasítások újbóli megtekintéséhez.
      Course 4 SCV 3: |-
        Now for a game of tag!  Tag Cat to get 2 points. Tag Penguin to get 3 points.  Get exactly 10 points to win!
        But be careful, when Cat and Penguin tag each other, they take points away.

        Add the blocks necessary to make this game work the way it's been explained.  How will you get Dog to move in all directions using the arrow keys?  How will you add points when Dog tags Cat or Penguin?  How will you subtract points when Cat and Penguin touch?
      Course 4 SCV 4: Oldd meg ezt a feladványt a legkevesebb blokk felhasználásával!
      Course 4 SCV 5: Oldd meg ezt a feladványt a legkevesebb blokk felhasználásával!
      Course 4 SCV 6: Kattints ide az utasítások újbóli megtekintéséhez.
      CourseD_Dance_Party_01: Húzd az „új készítése“ blokkot a munkaterületre, és
        csatlakoztasd az „összeállítás“ blokkba.
      CourseD_Dance_Party_02: Állítsd be, hogy a jávorszarvas 4 ütem után új mozdulatot
        kezdjen!
      CourseD_Dance_Party_03: Most állítsd be, hogy a táncos 6 ütem után kezdjen új
        mozdulatot!
      CourseD_Dance_Party_04: Adj háttéreffektet a programodhoz.
      CourseD_Dance_Party_05: Egy másik új blokkal érd el, hogy a táncos 2 ütemenként
        változtasson a mozgásán.
      CourseD_Dance_Party_06: Hozz létre egy „backup\_dancer1“ nevű háttértáncost,
        hogy együtt táncoljon a macskával.
      CourseD_Dance_Party_08: Be tudod állítani mindkét háttértáncost ugyanolyan méretűre?
      CourseD_Dance_Party_09: Az „árnyalat beállítása“ blokkal módosítsd a táncos
        színét.
      CourseD_Dance_Party_10: A „követés megkezdése“ blokkal érd el, hogy a másik
        táncos is reagáljon a zenére.
      CourseD_Dance_Party_11: A „felfelé nyíl megnyomásakor“ blokkal a felfelé nyíl
        megnyomására tudsz kódot futtatni. Próbáld meg elérni, hogy a táncos egy gyors
        mozdulatot végezzen, amikor megnyomod a felfelé nyilat.
      CourseD_Dance_Party_11_5: Az „összes kacsa“ blokkokkal érd el, hogy a kacsák
        együtt táncoljanak.
      CourseD_Dance_Party_11b: Állítsd be, hogy a Robot egyszer „spárga“ mozdulatot
        tegyen, amikor megnyomod a jobbra nyilat, és egyszer „taps“ mozdulatot tegyen,
        amikor megnyomod a felfelé nyilat. Csináld a spárga-taps mozdulatokat olyan
        gyorsan, ahogyan csak tudod!
      CourseD_Dance_Party_12: Lássuk, te hogy táncolsz! Hozd létre a saját táncodat,
        és oszd meg az ismerőseiddel.
      CourseE_HOC 2018 Level_1: Vegyél ki egy csónakot a ládából.
      CourseE_HOC 2018 Level_10: Menj a Víz alatti templom bejáratához.
      CourseE_HOC 2018 Level_11: Prizmarinnal építs csatornát a Víz alatti templom
        belsejében.
      CourseE_HOC 2018 Level_2: Menj a móló végére.
      CourseE_HOC 2018 Level_3: Hajózz ki a nyílt vízre a tőkehalhoz.
      CourseE_HOC 2018 Level_4: Hurokkal kapd el a delfint.
      CourseE_HOC 2018 Level_5: Kutasd át az elsüllyedt hajót, és juss el a ládához.
      CourseE_HOC 2018 Level_6: Navigálj át a jégmezőn, és találd meg a lazacot.
      CourseE_HOC 2018 Level_7a: Kutasd át ezeket a víz alatti romokat, és keresd
        meg a ládát.
      CourseE_HOC 2018 Level_9b: Kincskeresés közben használd a korallokat útjelzőként.
      Crack Random Substitution: Utasítások
      Crack a Caesar Cipher: Utasítások
      Dance Party 1-validated: 'What do you think will happen when you click on the
        alien?  '
      Dance Party 2: Change the behavior inside the `___ begins ___` block to make
        the alien start spinning around.
      Dance Party 2_2019: Replace the behavior block in the `sprite begins` block
        to a different one that will make the alien start spinning!
      Dance Party 3: 'Create a new sprite called `alien2`, then make it do a different
        dance move when it''s clicked.  '
      Dance Party 3_2019: 'Create a new sprite that looks like a pink alien, then
        make it do a any move when it''s clicked.  '
      Dance Party 4: 'Create a third sprite called `alien3` and get all of your aliens
        to stand in a line. '
      Dance Party 4_2019: Create a third sprite that looks like a yellow alien, make
        it do a dance when clicked, and set all of your aliens to stand in a horizontal
        line.
      Dance Party 5: Add code to change the color of each alien when it gets clicked.
      Dance Party 5_2019: Create a single keypress event using the keypress event
        block. For this event, make it so that when a key is pressed, each of your
        aliens changes color!
      Dance Party 6: Use the `stops everything` block to make each alien stop moving
        when it is clicked.
      Dance Party 6_2019: Add a sprite that looks like a bell, then add an event that
        makes each alien stop dancing when it is clicked.
      Dance Party 7: Add a new bell sprite called `myBell` that makes all the aliens
        start doing the same dance move when it's clicked.
      Dance Party 7_2019: Make the blue alien begin a new dance when the pink alien
        touches it. Use the `when touches` event.
      Dance Party Freeplay: Now create your own alien disco!
      Dance Party Freeplay_2019: Now create your own alien disco!
      Dance Party Predict: 'What do you think will happen when you click on the alien?  '
      Dance Party Predict_2019: 'What do you think will happen when you click on the
        alien?  '
      Dance_2019_01: Húzd az „új készítése“ blokkot a munkaterületre, és csatlakoztasd
        az „összeállítás“ blokkba.
      Dance_2019_02: A `fel megnyomásakor` blokk segítségével a felfelé mutató nyíl
        megnyomásakor futtathatsz kódot. Érd el, hogy a táncos tapsoljon a felfelé
        gomb megnyomásakor, vagy próbálj ki egy másik mozdulatot!
      Dance_2019_03: Eljött a táncverseny ideje! Programozz be minden táncost, hogy
        mozogjon egyes gombok megnyomásakor. Válaszd ki a kedvenc mozdulatodat minden
        egyes táncoshoz, vagy használd a "(Véletlenszerű)" beállítást, ha valami teljesen
        kiszámíthatatlant szeretnél!
      Dance_2019_04: Érd el, hogy a táncosod új mozdulatba kezdjen a negyedik ütem
        után.
      Dance_2019_05: Most állítsd be, hogy a táncos 6 ütem után kezdjen új mozdulatot!
      Dance_2019_06: Állíts össze egy csoport háttértáncost a középen elhelyezkedő
        vezető táncos körül.
      Dance_2019_07: Változtasd meg a háttértáncosok csoportjának méretét.
      Dance_2019_08: Próbáld megváltoztatni az egyik táncosod (vagy egy egész csoport)
        színárnyalatát!
      Dance_2019_09: Légy kreatív ezekkel az új blokkokkal!
      Dance_2019_10: Lássuk, te hogy táncolsz! Hozd létre a saját táncodat, és oszd
        meg az ismerőseiddel.
      Dance_Party_01: Húzd az „új készítése“ blokkot a munkaterületre, és csatlakoztasd
        az „összeállítás“ blokkba.
      Dance_Party_02: Állítsd be, hogy a jávorszarvas 4 ütem után új mozdulatot kezdjen!
      Dance_Party_03: Most állítsd be, hogy a táncos 6 ütem után kezdjen új mozdulatot!
      Dance_Party_04: Adj háttéreffektet a programodhoz.
      Dance_Party_05: Egy másik új blokkal érd el, hogy a táncos 2 ütemenként változtasson
        a mozgásán.
      Dance_Party_06: Hozz létre egy „backup\_dancer1“ nevű háttértáncost, hogy együtt
        táncoljon a macskával.
      Dance_Party_08: Be tudod állítani mindkét háttértáncost ugyanolyan méretűre?
      Dance_Party_09: Az „árnyalat beállítása“ blokkal módosítsd a táncos színét.
      Dance_Party_10: A „követés megkezdése“ blokkal érd el, hogy a másik táncos is
        reagáljon a zenére.
      Dance_Party_11: A „felfelé nyíl megnyomásakor“ blokkal a felfelé nyíl megnyomására
        tudsz kódot futtatni. Próbáld meg elérni, hogy a táncos egy gyors mozdulatot
        végezzen, amikor megnyomod a felfelé nyilat.
      Dance_Party_11_5: Az „összes kacsa“ blokkokkal érd el, hogy a kacsák együtt
        táncoljanak.
      Dance_Party_11b: Állítsd be, hogy a Robot egyszer „spárga“ mozdulatot tegyen,
        amikor megnyomod a jobbra nyilat, és egyszer „taps“ mozdulatot tegyen, amikor
        megnyomod a felfelé nyilat. Csináld a spárga-taps mozdulatokat olyan gyorsan,
        ahogyan csak tudod!
      Dance_Party_12: Lássuk, te hogy táncolsz! Hozd létre a saját táncodat, és oszd
        meg az ismerőseiddel.
      Dance_Party_extras_alternate_2019: Előre és hátra! (Kattints a "Több" gombra
        a részletekért)
      Dance_Party_extras_battle: Dance Crews (A részletekért kattintson a „Tovább”
        gombra)
      Dance_Party_extras_battle_2019: Dance Crews (A részletekért kattintson a „Tovább”
        gombra)
      Dance_Party_extras_every_beat: Negyed jegyzetek (a részletekért kattintson a
        „Tovább” gombra)
      Dance_Party_extras_every_beat_2019: Negyed jegyzetek (a részletekért kattintson
        a „Tovább” gombra)
      Dance_Party_extras_layout: Befelé az alakzatba! (A részletekért kattintson a
        „Tovább” gombra)
      Dance_Party_extras_layout_2019: Befelé az alakzatba! (A részletekért kattintson
        a „Tovább” gombra)
      Dance_Party_extras_mixed_2019: Több gomb (Kattints a "Több" gombra a részletekért)
      Dance_Party_extras_on_beat: Basszus, középső és háromdimenziós (a részletekért
        kattintson a „Tovább” gombra)
      Dance_Party_extras_on_beat_2019: Basszus, középső és háromdimenziós (a részletekért
        kattintson a „Tovább” gombra)
      Dance_Party_extras_speed: Gyorsítsa fel, Lassítsa le (a részletekért kattintson
        a „Tovább” gombra)
      Dance_Party_extras_speed_2019: Gyorsítsa fel, Lassítsa le (a részletekért kattintson
        a „Tovább” gombra)
      Dance_Party_extras_visible: Hová mentek? (A részletekért kattintson a „Tovább”
        gombra)
      Dance_Party_extras_visible_2019: Hová mentek? (A részletekért kattintson a „Tovább”
        gombra)
      Find the Wizard: Csinálj bármit, amit szeretnél. Egy egy számkitalálós játékra
        példa!
      Fish Tank 2-validated: Change Dusty (the tumbleweed) to a fish.
      Fish Tank 2-validated_2019: Change the tumbleweed into any kind of fish!
      Fish Tank 3-validated: Change the fish's behavior so that it swims around the
        tank.
      Fish Tank 3-validated_2019: Change the fish's behavior so that it swims left
        and right.
      Fish Tank 4-validated: Use the `set background color` block to make the background
        blue.
      Fish Tank 4-validated_2019: Use the `set background color` block to make the
        background any color.
      Fish Tank 5-validated: Our fish is getting a little lonely. Add another sprite
        to the fish tank.
      Fish Tank 5-validated_2019: The fish is adventurous and wants to meet new creatures
        in the sea. Add another sprite to the fish tank. This sprite can have any
        costume other than the one you use for your fish!
      Fish Tank 6-validated: Add a behavior to the fish's new friend.
      Fish Tank 6-validated_2019: Add a behavior to the fish's new friend.
      Fish Tank 7-validated: Use some new blocks from the toolbox to make your fish
        tank special!
      Fish Tank 7-validated_2019: Use some new blocks from the toolbox to make your
        fish tank special!
      FoodFight: Ez egy példa játék, amit elkészíthetsz a játéklaborban.
      Frequency Analysis: Test
      Function intro Ryan: Hogy szabaddá váljon az út a fáklyához, használd kétszer
        az "építs hidat" függvényt.
      Function intro Ryan_2019: Hogy szabaddá váljon az út a fáklyához, használd kétszer
        az "építs hidat" függvényt.
      Geometric Sun: 'Project Idea: Create a pattern using geometric ideas like shapes.
        This requires persistence and planning!'
      Geometric Sun_2018: 'Project Idea: Create a pattern using geometric ideas like
        shapes. This requires persistence and planning!'
      Guess The Number: Csinálj bármit, amit szeretnél. Egy egy számkitalálós játékra
        példa!
      HOC 2018 Level_1: Vegyél ki egy csónakot a ládából.
      HOC 2018 Level_10: Menj a Víz alatti templom bejáratához.
      HOC 2018 Level_11: Prizmarinnal építs csatornát a Víz alatti templom belsejében.
      HOC 2018 Level_12: Alakítsd ki saját víz alatti világodat, ahogy neked tetszik!
      HOC 2018 Level_2: Menj a móló végére.
      HOC 2018 Level_3: Hajózz ki a nyílt vízre a tőkehalhoz.
      HOC 2018 Level_4: Hurokkal kapd el a delfint.
      HOC 2018 Level_5: Kutasd át az elsüllyedt hajót, és juss el a ládához.
      HOC 2018 Level_6: Navigálj át a jégmezőn, és találd meg a lazacot.
      HOC 2018 Level_7a: Kutasd át ezeket a víz alatti romokat, és keresd meg a ládát.
      HOC 2018 Level_9b: Kincskeresés közben használd a korallokat útjelzőként.
      Infinity_catch: Tudsz segíteni Elzának (2. szereplő) utolérni Annát a nyíl gombokat
        használva?
      Infinity_finale: Alkoss bármit, amit csak szeretnél, és oszd meg másokkal!
      Infinity_move_collide: Hiro az 1. szereplő. Mozgasd jobbra Baymaxhoz, és játsszunk
        le egy hangot, amikor találkoznak.
      Infinity_move_directions: Baymax a 2. szereplő. Adj hozzá Mozgasd blokkokat,
        és mozgasd Baymaxot a nyilak segítségével. Érintse meg a másik két szereplőt.
      Infinity_move_right: Hiro az 1. szereplő. Használd a mozgasd blokkot, hogy Hiro
        jobbra mozogva elérje Baymaxot.
      Infinity_repeat: Használd a végtelen ismétlés blokkot, hogy Anna föl és le mozogjon
        400 képpontnyit.
      Infinity_say: 'Használd a mondd blokkot, hogy Anna azt mondja: "Szia.".'
      Infinity_shoot: Baymax a 2. szereplő. Baymax lőjön ki egy rakétát Hiro-ra.
      Infinity_shoot_directions: Hiro a 3. szereplő. Hiro lőjön ki egy-egy lövedéket
        mind a négy másik szereplőre. Várjon egy másodpercet a lövedékek kilövése
        között.
      Infinity_touch_score: Állítsd be, hogy Anna pontot szerezzen, valahányszor megérint
        egy hópelyhet. Ezután kattints a Futtatásra, és vezesd oda Annát mindegyik
        hópehelyhez.
      InspirationalArtwork: Ha ez a kép inspirál téged, akkor csinálhatsz egy hasonlót.
        Ha nem, akkor csinálj valamit te magad.
      InspirationalArtwork_2018: Ha ez a kép inspirál téged, akkor csinálhatsz egy
        hasonlót. Ha nem, akkor csinálj valamit te magad.
      K-1 Artist Loops 1: Rajzold meg ezt a vonalat kelet felé haladva négyszer!
      K-1 Artist Loops 2: Meg tudnád rajzolni ugyanezt a vonalat egy ciklus használatával?
      K-1 Artist Loops 3: Bele tudod tenni ezeket az elemeket egy ciklusba, hogy 6
        vonalat rajzoljon?
      K-1 Artist Loops 4: Segíthet egy ciklus megrajzolni a vár tetejét?
      K-1 Artist Loops 5: Mit tudsz négyszer ismételni, hogy megrajzoljuk ezeket a
        lépcsőket?
      K-1 Artist Loops 6: 'This one needs two loops: one to go up the stairs and one
        to go down.'
      K-1 Artist Loops 7: Két ciklussal be tudod fejezni ezt a mintát?
      K-1 Artist Loops 8: Ezen a lépcsőn hosszabbak a lépcsőfokok.
      K-1 Artist Loops 9: Mi a legegyszerűbb mód, hogy megrajzold ezeket a lépcsőket?
      K-1 Artist Loops Free Play: Szabad játék, rajzolj valami mókásat!
      K-1 Artist1 1: Rajzold meg az emberke lábát egy vonallal
      K-1 Artist1 10: Draw and Jump to make the dashed path to the treasure X
      K-1 Artist1 2: Rajzold meg a cica bajszát két vonallal!
      K-1 Artist1 3: Draw two lines east and two lines north to finish the house!
      K-1 Artist1 4: Rajzolj vonalat előre, fel, tovább és le, hogy befejezd a várat!
      K-1 Artist1 5: Rajzold meg a virág szárát két vonallal!
      K-1 Artist1 6: Fejezd be a képet egy "ugrás" blokk használatával!
      K-1 Artist1 9: Rajzolj és ugorj, hogy szaggatott vonalat rajzolj
      K-1 Artist2 1: Rajzolj egy négyzetet a háromszög alá.
      K-1 Artist2 2: Ugorj és rajzolj egy négyzetet a ház mellé.
      K-1 Artist2 3: Rajzolj még egy négyzetet a másik mellé
      K-1 Artist2 4: Rajzolj téglalapot, hogy befejezd a hidat.
      K-1 Artist2 5: Rajzolj téglalapot, hogy befejezd a híd pillérét
      K-1 Artist2 6: Rajzolj két négyzetet, hogy egy téglalapot alkossanak!
      K-1 Artist2 Assessment1: 'Értékelés: rajzolj egy négyzetet a másik mellé.'
      K-1 Artist2 Free Draw: Rajzolj bármit!
      K-1 Artist2_7: Rajzolj egy téglalapot, hogy elkészüljön a fiókos szekrény legfölső
        fiókja!
      K-1 Bee 1: Move me to the flower, get the nectar, then move me to the honeycomb,
        and make honey
      K-1 Bee 11: Gyűjts három nektárt, majd készíts egy mézet
      K-1 Bee 13: Gyűjts három nektárt, majd készíts egy mézet!
      K-1 Bee 14: Get me to the nectar, pick it up, get me to the honey, and make
        honey!
      K-1 Bee 15: Gyűjts két nektárt, majd készíts két mézet!
      K-1 Bee 2: Move me to the flower, get the nectar, then move me to the honeycomb,
        and make honey
      K-1 Bee 3: Move me to the flower, get the nectar, then move me to the honeycomb,
        and make honey
      K-1 Bee 4: Gyűjts két nektárt, majd készíts két mézet!
      K-1 Bee 5: Gyűjts három nektárt, majd készíts három mézet!
      K-1 Bee 6: Gyűjts két nektárt, majd készíts két mézet!
      K-1 Bee 7: Gyűjts három nektárt, majd készíts két mézet!
      K-1 Bee 9: Gyűjts két nektárt, majd készíts két mézet!
      K-1 Bee Loops 1: Gyűjts nektárt a méz készítéshez!
      K-1 Bee Loops 10: Használj ciklusokat, hogy nektárt gyűjts, mézet készíts, és
        hogy mozogj!
      K-1 Bee Loops 11: 'Értékelés: használd a ciklusokat, hogy nektárt gyűjts és
        mézet készíts!'
      K-1 Bee Loops 12: 'Értékelés: használj ciklusokat, hogy nektárt gyűjts, mézet
        készíts, és hogy mozogj!'
      K-1 Bee Loops 2: Use a `repeat` loop to move and then get the nectar and make
        honey!
      K-1 Bee Loops 3: Use three `repeat` loops to get the nectar and make honey!
      K-1 Bee Loops 4: Use `repeat` loops to get the nectar, make honey, and to move!
      K-1 Bee Loops 5: Használj ciklusokat, hogy nektárt gyűjts és mézet készíts!
      K-1 Bee Loops 6: Use a `repeat` loop to get the nectar, get honey, and to move!
      K-1 Bee Loops 7: Get the nectar and make honey!
      K-1 Bee Loops 8: Get the nectar and make honey!
      K-1 Bee Loops 9: Get the all the nectar and make all of the honey.
      K-1 Bee Puzzle 12: Get three nectars and then make two honey
      K-1 Building a Foundation Assessment: Build a three level pyramid, there are
        no other directions, so just play with the pieces until you get it!
      K-1 Maze 10: 'Kerüljük el a TNT-t, hogy eljussak a malachoz! '
      K-1 Maze 11: "Tervezd meg az utat és juttass el a buta malachoz. \nKerüld el
        a dinamitot, különben repülünk! Tipp: délre van tőlem."
      K-1 Maze 2: Mozgass keletre, hogy elkapjam a malacot!
      K-1 Maze 3: Mozgass délre, hogy elkapjam a malacot!
      K-1 Maze 4: Mozgass északra, hogy elkapjam a malacot!
      K-1 Maze 5: Mozgass keletre, hogy elkapjam a malacot!
      K-1 Maze 6: Mozgass egy irányba, aztán egy másik irányba, hogy elkapjam a malacot!
      K-1 Maze 7: Mozgass egy irányba, aztán egy másik irányba, hogy elkapjam a malacot!
      K-1 Maze 8: Mozgass egy irányba, aztán egy másik irányba, hogy elkapjam a malacot!
      K-1 Maze 9: Mozgass egy irányba, aztán egy másik irányba, hogy elkapjam a malacot!
      K-1 Maze Loops 1: Juttass el a malachoz!
      K-1 Maze Loops 10: Get me to the pig! Using the `repeat` loop will make it much
        easier.
      K-1 Maze Loops 11: |-
        Get me to the pig!\
        The `repeat` loop will make this easier.
      K-1 Maze Loops 12: Get me to the pig! The `repeat` loop will make this easier.
      K-1 Maze Loops 2: Használd az Ismételd blokkot és juttass el a malachoz!
      K-1 Maze Loops 3: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 5: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 6: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 7: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 8: Use `repeat` loops to get me to the pig.
      K-1 Maze Loops Assessment 1: Look at all we've learned! Use a `repeat` loop
        to get me to the pig!
      K-1 Maze Loops Assessment 2: Use `repeat` loops to get me to the pig!
      K-1 Maze Sequence Assessment 1: Lássuk mit tanultál! Mozogj egy irányba, aztán
        egy másikba, hogy elérj a malacig.
      K-1 Maze Sequence Assessment 2: Mozgass egy irányba, aztán egy másik irányba,
        hogy elkapjam a malacot.
      K-1 artist 1 level 10: Rajzold meg a szaggatott vonalat az "ugrás" és a "menj"
        blokkok használatával.
      K-1 artist 1 level 9: Rajzold meg három vonallal
      K-1 maze debug 1: Változtasd meg a kódot, hogy elkapjam a malacot!
      K-1 maze debug 10: Keresd meg a hibát és javítsd ki! Változtass a megadott blokkokon
        úgy, hogy eljussak a malachoz!
      K-1 maze debug 11: |-
        Ez egy teszt!
        Keresd meg a hibát és javítsd ki! Változtass a megadott blokkokon úgy, hogy eljussak a malachoz
      K-1 maze debug 2: Találd ki, mi hiányzik, egészítsd ki a kódot, és juttass el
        a malachoz!
      K-1 maze debug 3: Valami nincs rendben. TÁVOLÍTS EL blokkokat, hogy elkapjam
        a malacot!
      K-1 maze debug 4: Nézd át a blokkokat és keresd meg a hibát! Azt hiszem, rossz
        irányba megyek.
      K-1 maze debug 5: Keresd meg a hibát és javítsd ki! Változtass a megadott blokkokon
        úgy, hogy eljussak a malachoz!
      K-1 maze debug 6: Keresd meg a hibát és javítsd ki! Változtass a megadott blokkokon
        úgy, hogy eljussak a malachoz!
      K-1 maze debug 7: Keresd meg a hibát és javítsd ki! Változtass a megadott blokkokon
        úgy, hogy eljussak a malachoz!
      K-1 maze debug 8: Keresd meg a hibát és javítsd ki! Adj blokkokat a megadott
        blokkokhoz úgy, hogy eljussak a malachoz!
      K-1 maze debug 9: Keresd meg a hibát és javítsd ki! Változtass a megadott blokkokon
        úgy, hogy eljussak a malachoz!
      MC HOC 2016 Level 10: Itt az ideje, hogy megalkosd a saját Minecraft világodat!
        Teremts lényeket és vedd rá őket, hogy azt csinálják, amit te szeretnél. Jó
        szórakozást!
      MC HOC 2016 Level 2-2: |-
        A csirke nem mozdul. Húzd az`előrelépni` és
        `fordulj` blokkokat a `születéskor` keretbe, hogy megmozduljon!
      MC HOC 2016 Level 3: |-
        Helyes, a csirke megmozdult. De aztán megállt. A játékokban a csirkék örökké mozognak.
        Használd a `mindig csináld` ciklust, hogy folyamatosan mozgasd a csirkét!
      MC HOC 2016 Level 4: Furcsa így a csirke, hogy mindig ugyanarra megy. A játékok
        véletlenszerű mozdulatokat használnak, hogy a dolgok valóságosnak tűnjenek.  Alkalmazd
        a csirkére a`véletlenszerűen elfordul`blokkot!
      MC HOC 2016 Level 5: Ezek a tehenek elvesztek! Vezesd őket a fűre úgy, hogy
        behúzod az`egy lépést tesz felé` blokkot a `mindig csináld` ciklusba!
      MC HOC 2016 Level 6: "Most teremtsd meg a zombikat! Használd a `születik`\nblokkot,
        hogy három zombi szülessen, amikor lemegy a nap! Vedd rá őket, hogy feléd
        mozogjanak! Éld túl az éjszakát! "
      MC HOC 2016 Level 8: A birkák útja el van torlaszolva egy kővel. Szerencsére
        itt egy creeper! A creeperek felrobbannak, ha megérinted őket. Vedd rá a creepert,
        hogy felrobbantsa a falat, és így elérd a birkád!
      MC HOC 2016 New Drop: |-
        A Minecraftban a birkák ledobják a gyapjút. Helyezd a
        `ledob` blokkot a `használatkor`blokkba, aztán menj oda, és használd a birkát, hogy ledobjon egy tárgyat!
      MC HOC 2016 New Spawn: 'Most telerakhatod a világot olyan dolgokkal, amikkel
        csak akarod! Húzd a `születik` blokkot a `futtatáskor` blokkba, hogy dolgok
        szülessenek, amikor a játék kezdődik. '
      MC HOC 2016 New Walk: Fedezzük fel a világunkat! Mozogj a nyilakkal, és nyomd
        le a space billentyűt vagy érintsd meg a játékmezőt, hogy használni tudj tárgyakat!
        Használd az ajtót, hogy belépj a házba!
      MC HOC 2016 SCORE LEVEL: 'Egyes játékokban pontokat szerezhetsz. Fogócskázz
        ezekkel a Vasgólemekkel, és használd az `adj hozzá` blokkot, hogy pontot adj
        magadnak, valahányszor elkapod őket. Szerezz 5 pontot a győzelemhez! '
      MC HOC 2016 Village Test: Jaj ne! A zombik bezártak! Programozd a Vasgólemet,
        hogy üldözze és támadja meg a zombikat!
      MC_HOC_2017_01_RETRY: 'Vidd az Agentet a nyomólapra, majd nyomd meg a "Futtatás"
        gombot, és a nyílgombokkal vidd ki a játékost a házból a láda felvevéséhez. '
      MC_HOC_2017_01_RETRY_2019: 'Vidd az Agentet a nyomólapra, majd nyomd meg a "Futtatás"
        gombot, és a nyílgombokkal vidd ki a játékost a házból a láda felvevéséhez. '
      MC_HOC_2017_02_Cole: 'Vidd az Agentet a nyomólapra, hogy {currentPlayerName}
        le tudjon menni a térképről. '
      MC_HOC_2017_02_Cole_2019: 'Vidd az Agentet a nyomólapra, hogy {currentPlayerName}
        le tudjon menni a térképről. '
      MC_HOC_2017_03_Cole: 'Programozd úgy az Agentet, hogy kinyissa a kaput. '
      MC_HOC_2017_03_Cole_2019: 'Programozd úgy az Agentet, hogy kinyissa a kaput. '
      MC_HOC_2017_04POINT5_RYAN: Vidd az Agentet a nyomólapra.
      MC_HOC_2017_04POINT5_RYAN_2019: Vidd az Agentet a nyomólapra.
      MC_HOC_2017_04_Cole: Vidd az Agentet a nyomólapra.
      MC_HOC_2017_04_Cole_2019: Vidd az Agentet a nyomólapra.
      MC_HOC_2017_05_Cole: Juttasd a játékost az ásóhoz.
      MC_HOC_2017_05_Cole_2019: Juttasd a játékost az ásóhoz.
      MC_HOC_2017_06_Cole: Javítsd ki ezt a kódot, hogy az Agent hidat építsen a folyóra.
      MC_HOC_2017_06_Cole_2019: Javítsd ki ezt a kódot, hogy az Agent hidat építsen
        a folyóra.
      MC_HOC_2017_07_Cole: Törd fel a jeget, és juttasd {currentPlayerName} játékost
        a csilléhez.
      MC_HOC_2017_07_Cole_2019: Törd fel a jeget, és juttasd {currentPlayerName} játékost
        a csilléhez.
      MC_HOC_2017_10_RETRY: Hozz létre egy függvényt, amellyel befejezheted ezt a
        csillét.
      MC_HOC_2017_10_RETRY_2019: Hozz létre egy függvényt, amellyel befejezheted ezt
        a csillét.
      MC_HOC_2017_Ali: Használd a függvényeket a láván átvezető út megtalálásához.
      MC_HOC_2017_Ali_2019: Használd a függvényeket a láván átvezető út megtalálásához.
      MC_HOC_2017_FP20x20: "**Szabad játék:**  Most szabadon barangolhatsz!"
      MC_HOC_2017_FP20x20_2019: "**Szabad játék:**  Most szabadon barangolhatsz!"
      NEW Course 4 Artist Functions 1: Can you draw a square that is 100 pixels in
        length, using a repeat loop?
      NEW Course 4 Artist Functions 11: Now we want to create a new function called
        `draw a line of squares` that draws six squares all in a row.  Can you build
        this function using this `draw a square 20` function that we created for you?
      NEW Course 4 Artist Functions 12: Use the `draw a line of squares` function
        from the last puzzle to draw this pattern.
      NEW Course 4 Artist Functions 13: 'Can you draw a star shape using the `draw
        a line of squares` function?  '
      NEW Course 4 Artist Functions 14: 'Szabad játék! '
      NEW Course 4 Artist Functions 2: Can you draw 3 squares 20 pixels apart from
        one another? Each square is 100 pixels in size.
      NEW Course 4 Artist Functions 3: Itt van egy új blokktípus. Ezt úgy hívják,
        hogy `függvény` blokk. Kattints a "szerkeszt" gombra, és töltsd ki olyan kóddal,
        ami egy 100 képpont oldalhosszúságú négyzetet rajzol. Amikor végeztél a függvény
        szerkesztésével, kattints a "Bezár" gombra a programhoz való visszatéréshez.
      NEW Course 4 Artist Functions 4: Use the `draw a square` function to draw this
        pattern.
      NEW Course 4 Artist Functions 7: 'Are you getting the hang of how to use function
        blocks? Let''s modify this square so that it is 200 pixels in size. Click
        on "edit" to enter the `draw a square` function editor. Remember to click
        on "Close" to get out of the function editor. '
      NEW Course 4 Artist Functions 8: We have created a new function for you called
        "draw a triangle".  Can you edit the function definition to draw a triangle
        with 100 pixel sides?
      NEW Course 4 Artist Functions 9: Can you solve this by adding only one block?
      NEW Course 4 Artist Params 1: Let's define this function to draw a square with
        50 pixel sides. Click "edit" to get started.
      NEW Course 4 Artist Params 10: 'Create a `draw a hexagon` function block with
        a length parameter. This hexagon has sides that are 100 pixels in length. '
      NEW Course 4 Artist Params 11: Can you figure out how to draw this shape? Edit
        the function to use the "sides" parameter.
      NEW Course 4 Artist Params 12: Can you complete this drawing? The sides of all
        the shapes are 100 pixels long.
      NEW Course 4 Artist Params 12a: This image is similar to the last. Can you use
        a `for` loop with your function to make this design?
      NEW Course 4 Artist Params 13: "Let's edit this \"draw a polygon\" function.
        It already has a \"sides\" parameter. Now, let's add a \"length\" parameter.
        \nThe perimeter of each shape is 200 pixels long. Do you remember the equation
        to make shapes the same size when they have a different number of sides?"
      NEW Course 4 Artist Params 14: Edit "draw a spiral edge" to use "length" and
        "sides" parameters, then recreate these shapes.
      NEW Course 4 Artist Params 15: |-
        Szabad játék: Itt vannak az általad írt függvények, és még néhány másik, amikkel játszhatsz. Rajzolj valami nagyszerűt!
        Játssz a tollvastagsággal, és nézd meg, hogyan néznek ki a különböző rajzok!
      NEW Course 4 Artist Params 2: Create a `draw triangle` function from scratch
        that makes a triangle with  50 pixel sides.
      NEW Course 4 Artist Params 3: Now let's use the function to draw 5 triangles
        in a row. Each triangle is 30 pixels apart.
      NEW Course 4 Artist Params 4: Észreveszel valami különbséget ezek között a függvények
        között? Kattints a "Futtatás"-ra, hogy lásd, mi történik.
      NEW Course 4 Artist Params 5: 'A `length` paraméterben cseréd le a bemeneti
        értéket, írj egy számot a `???` helyére. Az ötszög oldalai 100 pixel hosszúak. '
      NEW Course 4 Artist Params 6: Fill in the "length" parameter to draw these shapes
        by replacing the "???" with the right numbers. The square and triangle have
        100 pixels sides while each side of the hexagon is 75 pixels long.
      NEW Course 4 Artist Params 7: Can you complete this drawing? The sides of each
        triangle are 25 pixels larger than the last.  The first triangle has 25 pixel
        sides.
      NEW Course 4 Artist Params 8: The code for this triangle function is broken.
        Can you edit the function to fix it, and then make triangles of length 25,
        50, and 75?
      NEW Course 4 Artist Params 9: 'Kattints a "szerkeszt" gombra, majd adj hozzá
        a "rajzolj egy négyzetet" függvényhez egy paramétert. Legyen egy hossz paramétere,
        mint a háromszögnek. Ezúttal három négyzetet rajzolj: 25, 50 és 75 képpont
        oldalhosszal, és egymástól 100 képpont távolságra.'
      NEW Course 4 Artist Params inspire: "Free Play Inspiration: You've now learned
        everything you need to know to make a pattern like this! If this picture inspires
        you, try to make something similar. Otherwise, create something all your own.\n\nWant
        to know how our inspiration pattern was made? "
      NEW Course 4 Artist Vars 12: Most csináld meg újra az előző pálya fejtörőjét
        és rajzolj egy ötszöget 150 pixel széles oldalakkal.
      NEW Course 4 Artist Vars 2: 'Drag a number block to both the `set length` block
        and the `repeat _ times` block to draw a set of 50 pixel triangles. '
      NEW Course 4 Artist Vars 4: |-
        Próbáljuk meg újra!

        Be tudod állítani a `hossz` változó értékét 60-ra, hogy elkészítsd ezt a hatszögekből álló klassz mintát?
      NEW Course 4 Artist Vars 6: Rajzold meg ezt a 100 képpont oldalhosszúságú ötszögekből
        álló mintát úgy, hogy beállítod a `hossz` értékét, majd a megfelelő helyekre
        elhelyezed a `hossz` változót. Látod, hogy csak egyszer kell beállítanod a
        `hossz` változó értékét, és mindenhol a helyes értéket használ a kód?
      NEW Course 4 Bee For Loops 1: Használj ciklust, hogy minden virágból összegyűjtsük
        a nektárt.
      NEW Course 4 Bee For Loops 10a: 'Ready for a challenge?  Take what you''ve learned
        about loops and try to solve this problem. Remember: You may have to run through
        solutions multiple times before you figure out all of the steps.'
      NEW Course 4 Bee For Loops 2: Építsd fel a kódot, hogy az összes nektárt összegyűjtsd.
        Figyeld meg, hogy milyen hosszú kódra van szükség ennek a feladványnak a megoldásához!
        (A következő feladványnál tanulunk egy ennél egyszerűbb módszert.)
      NEW Course 4 Bee For Loops 3: 'Aha, így sokkal könnyebb! Itt van minden kód,
        amire szükséged van. Nézd meg, hogyan kell használni, majd kattints a "Futtatás"
        gombra, hogy működés közben is lásd. '
      NEW Course 4 Bee For Loops 4: 'A számláló ciklusban a ??? helyére írd a legtöbb
        nektár számát, amit a méhnek össze kell gyűjtenie. '
      NEW Course 4 Bee For Loops 4 4: Most "counter" alkalommal kell előre menni,
        aztán "counter" darab nektárt kell gyűjteni. Két "ismételd" blokkal meg tudod
        oldani a feladatot?
      NEW Course 4 Bee For Loops 5: You can also use a "for loop" to count down. Try
        gathering this nectar by counting down from 5 to 1 by 1.
      NEW Course 4 Bee For Loops 6: The last number in your for loop is called the
        "increment". Each time the loop is run, the counter variable changes by the
        value of the increment. Try collecting these flowers using an increment of
        2.
      NEW Course 4 Bee For Loops 7: "Nos, most kombináljuk a \"counter\" változót
        egy matematikai blokkal! Hogyan tudnád használni a \"counter\" változót, hogy
        a lehető legkevesebb blokk felhasználásával végigmenj ezen a kerten? Hogyan
        tudnál ez alkalommal 3,6,9,12,15 nektárt gyűjteni? A titok a \"counter\" változóban
        van! \n\nEmlékezz: ha a ciklusod fölfelé számol, a lépésköz mindig hozzáadódik
        a \"counter\" változóhoz."
      NEW Course 4 Bee For Loops 8: "Ha a ciklus felfelé számol, akkor minden ciklusban
        hozzáadódik a lépésköz a változóhoz. Mi legyen a lépésköz, hogy 3,6,9 nektárt
        gyűjtsünk?\\\r"
      NEW Course 4 Bee For Loops 9: If your loop is counting down, the increment is
        subtracted from your counter variable each loop. What should your increment
        be to collect 15, then 12, then 9, 6, 3 nectar?
      NEW Course 4 Play Lab Params 11: 'It''s free play time! Have fun with all the
        blocks in your tool box. '
      NetSim Standalone Automatic DNS: In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast: In this version of the Internet Simulator, you
        can connect to up to 5 other people in a room. When you send messages in the
        room, everyone receives them. What are some of the challenges of this system,
        and how might you solve them?
      NetSim Standalone Classroom Routers: In this version of the Internet Simulator,
        everyone connects to a router and has a specific address. To send messages,
        you have to address your message to the specific address of the recipient,
        and the router will take care of delivering it to the right computer. If there
        are other routers created in your class, ask for the address of one of your
        classmates and send them a message! View the Log Router to see the path the
        messages have taken through the network.
      NetSim Standalone Freeplay: In this configuration, most of the options are turned
        on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS: In this version of the simulator you can't see
        the other students' addresses.  Instead, one of you must act as a name service,
        to help share addresses with each other.
      NetSim Standalone Packets TCP: 'Messages on the Internet can take many paths
        to get to their destination, and sometimes along the way the message gets
        dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters. '
      NetSim Standalone SendAB: You and your partner share a single wire that can
        only be in state A or state B. You can set the wire to either state at any
        time, and you can read the state of the wire at any time. Can you figure out
        a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers: 'You and your partner can now reliably send
        messages back and forth without extra coordination! While you''re always sending
        bits back and forth, you can also represent those bits as decimal numbers.
        What kinds of information can you represent with this system? '
      NetSim Standalone Sending Numbers Ascii: 'Now that you''ve transmitted information
        represented as decimal numbers, you can map those numbers to text characters
        to send text-based information back and forth. With a text-based protocol,
        you can easily represent and communicate all kinds of information. '
      New Artist Project: Draw something awesome! Your code is saved as a project
        that you can return to at any time.
      New Basketball Project: Create your own Basketball game. You can change all
        the rules. When you're done, click Share to let friends try your game on their
        phones.
      New Bounce Project: Create your own Bounce game. You can change all the visuals
        and the rules. When you're done, click Share to let friends try your game
        on their phones.
      New Gumball Project: Alkoss bármit, amit csak szeretnél, és oszd meg másokkal!
      New Ice Age Project: Alkoss bármit, amit csak szeretnél, és oszd meg másokkal!
      New Infinity Project: Alkoss bármit, amit csak szeretnél, és oszd meg másokkal!
      New Minecraft Hero Project: "**Szabad játék:**  Most szabadon barangolhatsz!"
      New Sports Project: 'Hozza létre saját játékát! Itt van a felelősség: megváltoztathatja
        az összes szabályt, összekeverheti és illesztheti a sportokat, legyen kreatív!
        Ha elkészült, kattintson a Befejezés gombra, hogy a barátai kipróbálhassák
        a játékokat a telefonjukon.'
      OPD-K5 whats your plan: Take a moment now to consider how and when you will
        complete this online course to ensure you get the most benefit from the experience.
        When you've got a good plan sketched out, continue on to dive more deeply
        into Computer Science Fundamentals.
      OPD-K5-events-2: Attach the `flap normal amount` block to the `when click` event,
        then press "Run".    Click or tap on the play space to move Flappy to the
        target.
      OPD-K5-events-3: Try adding a block that sets the level speed when the "Run"
        button is pressed.  Play the game and flap to the target to continue.
      OPD-K5-events-4: Attach the `end game` block to the `when hit the ground` event.   Play
        the game and crash the bird into the ground to continue.
      OPD-K5-events-5: Attach a block to the `when hit an obstacle` event so that
        the game ends when Flappy crashes into the first set of pipes.
      OPD-K5-events-6: Add a block to the `when pass an obstacle` event, then press
        "Run" to score a point by flying Flappy through the first set of pipes.
      OPD-K5-forloops-1: Collect the nectar from each flower using the fewest blocks
        possible.
      OPD-K5-forloops-2: Write the code to help the bee collect all of the nectar.
      OPD-K5-forloops-5: Help the bee collect all of the nectar.
      OPD-K5-forloops-6: Try gathering this nectar by counting down from 5 to 1 by
        1.
      OPD-K5-forloops-7: Try collecting these flowers using an increment of 2.
      OPD-K5-projects-2: Choose a background and map, and pick an actor to be your
        game's hero.
      OPD-K5-projects-3: Use events and actions to make your hero move. Get to the
        targets.
      OPD-K5-projects-4: Add two or more additional actors to your game and make them
        move.
      OPD-K5-projects-5: Find some interesting ways to change the score in your game.
        Get the score to show something other than 0 to continue.
      OPD-K5-projects-6: Great job! You have all the basic components of a working
        game. Now spend some time making sure the game works the way you want.
      OPD-K5-projects-7: You've finished! Now you can play your game or share it with
        your friends and classmates!
      OPD-K5-spritelab-2: Change the tumbleweed into any kind of fish!
      OPD-K5-spritelab-3: Change the fish's behavior so that it swims left and right.
      OPD-K5-spritelab-4: Use the `set background color` block to make the background
        any color.
      OPD-K5-spritelab-6: The fish is adventurous and wants to meet new creatures
        in the sea. Add another sprite to the fish tank. This sprite can have any
        costume other than the one you use for your fish!
      OPD-K5-spritelab-7: Add a behavior to the fish's new friend.
      OPD-K5-variables-2: 'Now draw three of those triangles right next to each other.   '
      OPD-K5-variables-5: Move the length of 50 into a variable so we can use it in
        the next few puzzles.
      OPD-K5-variables-6: Now, use the `length` variable to have the artist jump forward
        and down by `length` pixels between triangles.
      OPD-K5-variables-7: Add another set of loops at the end of your code to add
        three more triangles. This time, move forward and up!
      Overworld Avoid Monsters: Nem jó ötlet nekimenni a Creepereknek. Óvatosan haladj
        el a Creeperek között, hogy épségben hazaérj.
      Overworld Avoid Monsters_2019: Nem jó ötlet nekimenni a Creepereknek. Óvatosan
        haladj el a Creeperek között, hogy épségben hazaérj.
      Overworld Chop Tree: A fa nagyon értékes erőforrás. Nagyon sok mindent készítünk
        belőle. Menj oda a fához és használd a elpusztítani parancsot, hogy kivágd
        a fát.
      Overworld Chop Tree_2019: A fa nagyon értékes erőforrás. Nagyon sok mindent
        készítünk belőle. Menj oda a fához és használd a elpusztítani parancsot, hogy
        kivágd a fát.
      Overworld Chop Trees: Házat kell építenünk, mielőtt lemegy a nap. Ehhez sok
        fára van szükségünk. Vágd ki mind a három fát.
      Overworld Chop Trees_2019: Házat kell építenünk, mielőtt lemegy a nap. Ehhez
        sok fára van szükségünk. Vágd ki mind a három fát.
      Overworld Free Play 20x20: Gratulálunk, minden feladványt megoldottál! Most
        bányássz, építs, alkoss valami egyedit! Használd mindazt, amit eddig tanultál.
      Overworld Free Play 20x20_2019: Gratulálunk, minden feladványt megoldottál!
        Most bányássz, építs, alkoss valami egyedit! Használd mindazt, amit eddig
        tanultál.
      Overworld House Frame Chosen: Építsd meg a ház többi részét olyan anyagból,
        amilyenből csak szeretnéd. Az ismételd parancs jól fog jönni.
      Overworld House Frame Chosen_2019: Építsd meg a ház többi részét olyan anyagból,
        amilyenből csak szeretnéd. Az ismételd parancs jól fog jönni.
      Overworld Move to Sheep: Adj hozzá egy második előrelépni parancsot, hogy elérd
        a bárányt.
      Overworld Move to Sheep_2019: Adj hozzá egy második előrelépni parancsot, hogy
        elérd a bárányt.
      Overworld Place Wall: Minden ház egy fallal kezdődik. Építsd meg az első részt
        úgy, hogy az ismételd blokkba egy elhelyez és egy előrelépni blokkot teszel.
      Overworld Place Wall_2019: Minden ház egy fallal kezdődik. Építsd meg az első
        részt úgy, hogy az ismételd blokkba egy elhelyez és egy előrelépni blokkot
        teszel.
      Overworld Plant Crops: Jó gondolat előre tervezni. Ültess növényeket a tó mindkét
        partján, hogy később ne legyél éhes.
      Overworld Plant Crops_2019: Jó gondolat előre tervezni. Ültess növényeket a
        tó mindkét partján, hogy később ne legyél éhes.
      Overworld Powered Minecart: Szép munka! Nagyon sok nyersanyagot gyűjtöttél,
        és építettél egy kis házat is. Most fektess le egy vasútvonalat a pálya szélétől
        a házad bejáratáig.
      Overworld Powered Minecart_2019: Szép munka! Nagyon sok nyersanyagot gyűjtöttél,
        és építettél egy kis házat is. Most fektess le egy vasútvonalat a pálya szélétől
        a házad bejáratáig.
      Overworld Shear Sheep: Itt a birkanyírás ideje! Használd a nyír parancsot, hogy
        gyapjút gyűjts a két báránytól.
      Overworld Shear Sheep_2019: Itt a birkanyírás ideje! Használd a nyír parancsot,
        hogy gyapjút gyűjts a két báránytól.
      Pixelation - Lesson 15 - Color Shades: We start you out with the row of shades
        of red that Maddie created in the video. Experiment with 6-bit color by filling
        in the bottom row of the image with shades of a different color. Here is an
        example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Color Shades 4x4: 'We start you out with the 4x4 image
        Maddie created in the video. Your task is to fill a 4x4 grid with colors using
        12-bits per pixel. Here are the requirements: Row 1 - fill with shades of
        red. Row 2 - shades of green. Row 3 - shades of blue. Row 4 - shades of gray.'
      Pixelation - Lesson 15 - Complete 3-bit color: We start you with the 4x2 image
        Maddie was creating, but we've left out the last two squares. Finish off the
        image by figuring out which two colors are missing and encode them.
      Pixelation 4x4 Empty: The width and height are now encoded in the pixel data.
        Can you figure out how to adjust the dimensions?
      Pixelation Bee: 'This larger image of a bee encodes color with 12 bits per pixel,
        but viewing in hex makes it easier to see the color of each pixel. If you
        switch to binary mode - hold on to your hat - it''s a lot of bits. Here''s
        another mind-blowing thing to try: slide the bits per pixel up to 24 bits
        per pixel. What happens? Can you explain this behavior?'
      Pixelation Flappy: Here is a bigger image at 9 bits per pixel. With 9 bits per
        pixel you can express 512 different colors. Click through to see the next
        image which is even more sophisticated, but easier to understand.
      Robot Doodle: 'Project Idea: Create a picture of something familiar from the
        real world. This requires persistence and planning!'
      Robot Doodle_2018: 'Project Idea: Create a picture of something familiar from
        the real world. This requires persistence and planning!'
      Standalone_Artist_1: Welcome to Artist! First off, let's try to make a simple
        square using the turn right block and move forward block. Each side should
        be 100 pixels long.
      Standalone_Artist_2: Draw this diamond with 120 and 60 degree angles and 150
        pixel long sides.
      Standalone_Artist_3: Can you draw this hexagon with 100 pixel sides and 60 degree
        turns?
      Standalone_Artist_4: Now you've got a new block to play with, the loop. This
        will repeat a set of commands. What happens if you loop these commands 6 times?
      Standalone_Artist_5: How many times do you need to loop this diamond to draw
        the flower?
      Standalone_Artist_5.5: 'Notice how we simplified the diamond code by turning
        it into a loop. You can loop that whole sequence 12 times to draw the flower.
        Hint: You''ll need to turn 30 degrees after your diamond loop so you don''t
        keep drawing over the same diamond.'
      Standalone_Artist_6: 'Loop this hexagon code 6 times to create the design. How
        many degrees will you need to turn each time? Hint: divide the number of degrees
        in a circle by the number of times you are looping.'
      Standalone_Artist_7: 'A function is another programming tool to help you avoid
        repeating yourself. This function draws a flower, so you can use it any time
        you want to draw a flower. Use this and the new jump block to draw these flowers.
        Hint: The flowers are 150 pixels apart'
      Standalone_Artist_8: Itt van a "Rajzolj egy alakzatot" függvény amit a hatszögek
        rajzolásához programoztunk. Futtasd a kódot, hogy lásd mit csinál, és aztán
        kísérletezz a függvénnyel, hogy lásd mi történik. Meg tudod csinálni hogy
        négyzeteket, háromszögeket vagy nyolcszögeket rajzoljon?
      Standalone_Artist_9: Now go ahead and make whatever picture you'd like! You've
        even got an empty function that you can make do whatever you want!
      U4 Model Design 1: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      U4 Model Design 1_2018: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      U4 Model Design 1_2019: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      Underground Avoiding Lava: Láva rejlik bizonyos blokkok alatt, amelyet le kell
        takarnod, mielőtt tovább mozogsz. A "ha" utasítás jól fog jönni. Használd
        az "előremenni" blokkot a megfelelő módon, hogy kibányászd ezeket a blokkokat.
      Underground Avoiding Lava_2019: Láva rejlik bizonyos blokkok alatt, amelyet
        le kell takarnod, mielőtt tovább mozogsz. A "ha" utasítás jól fog jönni. Használd
        az "előremenni" blokkot a megfelelő módon, hogy kibányászd ezeket a blokkokat.
      Underground If Statements: A dolgok kezdenek trükkösek lenni. Három vöröskő
        ércet bányássz ki, de közben ne ess bele a lávába! Használd a "ha" parancsot,
        hogy macskakővel takard le a lávát, ha lávával találkozol.
      Underground If Statements_2019: A dolgok kezdenek trükkösek lenni. Három vöröskő
        ércet bányássz ki, de közben ne ess bele a lávába! Használd a "ha" parancsot,
        hogy macskakővel takard le a lávát, ha lávával találkozol.
      Underground Iron: Nem jó ötlet belesétálni a folyékony lávába. Takard le macskakővel,
        és így készíts hidat. azután legalább két vasérc blokkot bányássz ki.
      Underground Iron_2019: Nem jó ötlet belesétálni a folyékony lávába. Takard le
        macskakővel, és így készíts hidat. azután legalább két vasérc blokkot bányássz
        ki.
      Underground Mining Coal: A legértékesebb nyersanyagok a föld alatt vannak, de
        sötét lehet. Legalább két fáklyát helyezz el és bányássz ki legalább két szenet.
      Underground Mining Coal_2019: A legértékesebb nyersanyagok a föld alatt vannak,
        de sötét lehet. Legalább két fáklyát helyezz el és bányássz ki legalább két
        szenet.
      Vigenere: Test
      Virtual Pet 1: What do you think will happen if you press "Run" and then click
        on her?
      Virtual Pet 1 Predict: 'What do you think will happen when you click on the
        alien?  '
      Virtual Pet 2: Create an **event** so that when Geraldine touches the puddle,
        her color changes to brown.
      Virtual Pet 3: Add a new soap sprite to the screen.  Can you make it so that
        when the giraffe and the soap touch, the giraffe goes back to its normal color?
      Virtual Pet 4: Add a behavior to your soap to make it draggable, then drag it
        over to clean the giraffe!
      Virtual Pet 5: Add actions to each event so that when the giraffe collides with
        each sprite, it shrinks by 5.
      Virtual Pet 6: Add an apple that returns the giraffe back to regular size when
        they touch.
      Virtual Pet 8_2019: "**Free Play:** What more can you make your pet do? Try
        anything you like!"
      Virtual Pet Freeplay: 'Freeplay: What more can you make your giraffe do? '
      'Widget: Text Compression': Look for patterns (repeated words or phrases) in
        the text. Enter the patterns you see into the dictionary on the right. As
        you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      behaviors 1: Make a prediction!
      behaviors 2: Fly the rocket to the stars!
      behaviors 3: Help the rover outrun the robot!
      behaviors 3a: 'Debug: Make all of the stars spin the same way!'
      behaviors 4: Make a prediction!
      behaviors 5: Move the astronaut diagonally.
      behaviors 6: Make the ball roll.
      behaviors 7: Drive off into the horizon!
      behaviors free play: 'Free play: Create your own outer space scene!'
      bounce_1: Csatolj egy blokkot a "balra nyíl esetén" blokkhoz, majd nyomd meg
        a "Futtatás" gombot. Mozgasd az ütőt a bal nyíllal, hogy elérd a célt.
      bounce_10: A kapu most fönt van. Kapcsold össze a  "pontszám" és a "pontot szerez
        az ellenfél" blokkokat a "ha a labda célba ér" és a "ha a labda nem találja
        el az ütőt" blokkal, hogy elkészüljön a játék. Próbáld ki, hány pontot gyűjtesz,
        mielőtt az ellenfél két pontot szerez.
      bounce_10_basketball: Most fenn van a cél! Húzd a "pontszám" és "pontot szerez
        az ellenfél" blokkokat a "ha a labda célba ér" és az "amikor a labda nem éri
        a kezet" blokkokhoz, hogy összeálljon a játék. Nézzük, hány pontot tudsz szeretni,
        mielőtt az ellenfél szerez két pontot.
      bounce_10_sports: Most fenn van a cél! Húzd a "pontszám" és "pontot szerez az
        ellenfél" blokkokat a "ha a labda célba ér" és az "amikor a labda nem éri
        a kezet" blokkokhoz, hogy összeálljon a játék. Nézzük, hány pontot tudsz szeretni,
        mielőtt az ellenfél szerez két pontot!
      bounce_11: Most csatolni tudsz blokkokat a "futtatáskor" blokkhoz. Csatolj "indíts
        új labdát" blokkot több helyen is. Próbáld meg módosítani a hátteret, vagy
        az ütő és a labda sebességét, és lássuk, hány pontod lesz, mielőtt az ellenfél
        két pontot szerez.
      bounce_11_basketball: Most csatolni tudsz blokkokat a "futtatáskor" blokkhoz.
        Csatolj "indíts új labdát" blokkot több helyen is. Próbáld meg módosítani
        a hátteret, vagy a kéz és a labda sebességét, és lássuk, hány pontod lesz,
        mielőtt az ellenfél két pontot szerez!
      bounce_11_sports: Most csatolni tudsz blokkokat a "futtatáskor" blokkhoz. Csatolj
        "indíts új labdát" blokkot több helyen is. Próbáld meg módosítani a hátteret,
        vagy a kéz és a labda sebességét, és lássuk, hány pontod lesz, mielőtt az
        ellenfél két pontot szerez!
      bounce_12: Hozd létre saját Visszapattanós játékodat. Módosíthatod a kinézetet
        és a szabályokat. Ha elkészültél, kattints a Kész gombra, hogy a barátaid
        is kipróbálhassák a játékodat a telefonjukon.
      bounce_12_basketball: Készítsd el a saját kosárlabda játékod! Változtathatsz
        a szabályokon. Ha elkészültél, nyomj a Kész-re, hogy a barátaid is kipróbálhassák
        a telefonjaikon.
      bounce_12_sports: 'Hozza létre saját játékát! Itt van a felelősség: megváltoztathatja
        az összes szabályt, összekeverheti és illesztheti a sportokat, legyen kreatív!
        Ha elkészült, kattintson a Befejezés gombra, hogy a barátai kipróbálhassák
        a játékokat a telefonjukon.'
      bounce_1_basketball: Adj egy blokkon a "ha van balra nyíl" blokkhoz, és kattints
        a "futtatás"-ra. Mozgasd a kezet a bal nyíllal, hogy elérd a célt.
      bounce_1_sports: Szerezd meg a zászlót! Csatlakoztass egy blokkot a "amikor
        balra nyíl" blokkhoz, és nyomd meg a "Futtatás" gombot, hogy a játékost a
        zászlóhoz mozgassa.
      bounce_2: Csatolj egy blokkot  a "jobbra nyíl esetén" és a "balra nyíl esetén"
        blokkokhoz. Mozgasd az ütőt, hogy mindkét célt elérd.
      bounce_2_basketball: Húzz egy-egy blokkot a "ha van balra nyíl" és a "ha van
        jobbra nyíl" blokkokhoz. Mozgasd a kezet, hogy mind a két célt elérd.
      bounce_2_sports: Most már két zászló van! Csatlakoztasson egy blokkot a "amikor
        balra nyíl" és az "amikor jobb nyíl" blokkokhoz, hogy a játékos két irányban
        mozogjon.
      bounce_3: Most próbálj meg valami hasonlót  a "felfelé nyílnál" blokkal.  Mozgasd
        az ütőt, hogy elérd a fenti célt.
      bounce_4: Itt az idő, hogy bevezessünk négy új blokkot. Mozgasd az ütőt mind
        a négy irányba, hogy megoldd ezt a feladatot.
      bounce_5: El fogjuk dobni a labdát az ütő felé. Csatoljunk egy blokkot az "ha
        a labda eltalálja az ütőt" blokkhoz, hogy a labda biztosan elérje a célját.
      bounce_5_basketball: A labda most repülni fog a kéz felé. Adj egy blokkot az
        "amikor a labda a kézhez ér" blokkhoz, hogy a labda végül elérje a zászlót.
      bounce_5_sports: A jégkorong korongja repülni fog a játékos felé! Csatlakoztasson
        egy blokkot a "amikor a labda eléri a játékos" blokkot, hogy elérje a zászlót.
      bounce_6: A cél most fönt van. Csatolj egy-egy blokkot mindkét "ha a labda..."
        blokkhoz, hogy megoldd a rejtvényt.
      bounce_6_basketball: Most a zászló fönt van. Mind a két "amikor a labda..."
        blokkhoz kell blokkot hozzáadnod, hogy megoldd a feladványt.
      bounce_6_sports: Most a zászló fönt van. Mind a két "amikor a labda..." blokkhoz
        kell blokkot hozzáadnod, hogy megoldd a feladványt.
      bounce_7: Csatolj blokkot minden "ha..." blokkhoz. Pattogtasd a labdát addig,
        amíg el nem éri a célját.
      bounce_7_basketball: Minden blokkhoz húzz további blokkokat. Pattogtasd a labdát,
        amíg eléri a zászlót.
      bounce_7_sports: Minden blokkhoz húzz további blokkokat. Pattogtasd a labdát,
        amíg eléri a zászlót.
      comment_intro_maze_2018: Use the new `comment` block to leave yourself quick
        reminders.
      course1_artist_loops_challenge1: |-
        You can use a loop to draw many lines in a row.

        Can you draw a house? Make it look just the way you like it!  Try looking for patterns that repeat!
      course1_artist_loops_challenge2: Let's play a game! Draw as many X's as you
        can! Can you get 3 in a row?
      course1_artist_loops_challenge3: '"Can you help me make two bird houses?"'
      course1_artist_loops_challenge4: '"It''s time to toss the dice! Can you help
        me draw these?"'
      course1_collector_loops_challenge1: '"Can you help me spot some bugs? I know
        which way I want to go, but I''m not sure how many steps to take."'
      course1_collector_loops_challenge2: 'This time you can only use one of each
        arrow block. Get all of the treasure! '
      course1_collector_loops_challenge3: 'This time you can only use one of each
        arrow block. Get all of the treasure! '
      course1_collector_loops_challenge4: Let's get the treasure! Help me across each
        row then come back to start the next row. Can you find a pattern?
      course1_maze_debugging_challenge1: Hibakeresés. Távolítsd el a felesleges blokkokat,
        egészítsd ki új blokkokkal úgy, hogy az Angry Bird elkapja a malacot!
      course1_maze_debugging_challenge2: Debug this level. These are the right blocks,
        but they're in the wrong order!
      course1_maze_seq_challenge1: '"Trace the path and lead me to the silly pig.
        Avoid TNT or the feathers will fly!"'
      course1_maze_seq_challenge2: You can only move up to four times in each direction.
        Can you find a path before you run out of blocks?
      course1_playlab_events_challenge1: '"Where are my friends hiding? Can you write
        code to show the rest of my friends?"'
      course1_playlab_events_challenge2: '"Let''s have a party! Give my friends something
        to do when you click or tap them."'
      course2_artist_nestedLoops_challenge1: Can you figure out how to make a picture
        like this?
      course2_artist_nestedLoops_challenge2: Can you figure out how to make a picture
        like this?
      course2_artist_prog_challenge1: Rajzold meg mindkét állat számára a vonalakat.
        Több módon is teljesítheted a feladványt. A legrövidebb megoldás 6 blokkot
        használ, de használj csak annyit, amennyit szeretnél!
      course2_artist_prog_challenge2: _Segíts nekem sárgával megrajzolni az utat!_
      course2_bee_conditionals_challenge1: Collect all of the nectar or make all the
        honey.
      course2_bee_conditionals_challenge2: Collect all of the nectar or make all the
        honey.
      course2_collector_loops_challenge2: Szerezd meg az összes kincset!
      course2_collector_prog_challenge1: Nézd meg alaposan! Össze tudod gyűjteni mind
        a _10_ kincset?
      course2_collector_prog_challenge2: 20 kincs található itt. Legalább a felét
        gyűjtsd össze, hogy végezz a küldetéssel!
      course2_harvester_loops_challenge1: Gyűjtsd be az összes kukoricát.
      course2_harvester_loops_challenge2: Gyűjtsd be az összes salátát. Ne menj neki
        a fáknak és ne lépj a zöld mezőkre se!
      course2_maze_loops_challenge1: 'A motkány ciklussal próbál most eljutni a makkhoz! '
      course2_maze_programming_challenge1: _"A malac elbújt! Tudsz segíteni nekem,
        hogy megtaláljam?"_
      course2_maze_programming_challenge2: Néha egynél több megoldása is lehet ugyanannak
        a feladatnak. Néha gyorsabb, ha hátrafelé mész, mintha előre mennél!
      course3_artist_functions_challenge1: Once you define a function, you can call
        it over and over again - whenever and wherever you want! Try this code to
        see how it works, then change it to make your own impressive design!
      course3_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      course3_bee_debugging_challenge1: Watch how the bee gets the nectar. Can you
        use the same kind of pattern to help the bee make all of the honey?
      course3_bee_functions_challenge1: You are on your own for this challenge. This
        could "bee" harder than it looks!
      course3_bee_functions_challenge2: You are on your own for this challenge!
      course3_bee_functions_challenge3: Create a new function to collect all the nectar
        and honey while there is a path ahead. Use it to complete the puzzle!
      course3_bee_functions_challenge4: Use everything you have learned to complete
        this puzzle!
      course3_collector_debugging_challenge2: Are you an expert of nested loops? Use
        what you have learned so far to collect all of the treasure!
      course3_farmer_condLoops_challenge1: Turn right at the pumpkins. Collect everything
        to complete the level. Each hidden crop has only one corn or lettuce.
      course3_farmer_condLoops_challenge2: Collect everything to complete the level.
      course3_farmer_until_challenge2: Use If/Else blocks to follow the curvy path.
        At each corner, use the `remove 1` command in a loop to clear the piles.
      course3_maze_debugging_challenge1: _"Am I just going around in circles?"_
      course3_maze_debugging_challenge2: _"A motkány szédülni fog, ha túl sokat forog!
        Segíts neki eljutni a makkig mindössze négy "fordulj" parancs használatával."_
      course3_maze_until_challenge1: No hints, just challenge. Get the zombie to the
        sunflower.
      course3_playLab_challenge1: "Something should happen when you get enough points
        or when you run out of points. Add some code to the `win game` and `lose game`
        functions to make the game work the way it should. \nClick the hints for ideas!"
      course4_artist_binary_challenge1: You can only use each binary value (0 or 1)
        once each in this puzzle. Try using nested loops to complete this drawing.
      course4_artist_binary_challenge2: Are you persistent enough to restore this
        logo back to normal?
      course4_artist_concept_challenge2: Create five pinwheel designs using the code
        below.
      course4_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      course4_artist_fwp_challenge1: Próbálja meg futtatni ezt a programot, és változtassa
        meg, hogy lássa, mi történik. Ki tudja kitalálni, hogyan fog működni? (Akár
        törölheti az egészet, és írhat helyette valami teljesen mást)
      course4_artist_variables_challenge1: You've now learned everything you need
        to know to make a pattern like this! This puzzle is meant to be difficult.  Can
        you stick with it until you figure out the solution?
      course4_bee_for_challenge1: Use this for loop to collect all of the nectar.
        There are a few actions that you will want to repeat 'counter' times.
      course4_bee_fwp_challenge1: Use one `for loop` in a function to collect all
        of the corn. The same `for loop` can count to different maximum values by
        using the `length` parameter.
      course4_bee_fwp_challenge2: Use one `for loop` in a function to collect all
        of the vegetables in the row. Make the `for loop` can count to different maximum
        values by using the `length` parameter. Make your program as short as possible
        by using a second `for loop` outside the function.
      course4_collector_nested_loops_challenge2: Help the collector reach at least
        two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      course4_harvester_nested_loops_challenge1: '"I need some help on the farm! Help
        me harvest this corn using only the blocks in your toolbox."'
      course4_playlab_variables_challenge1: Use these blocks to make the actors share
        a knock-knock joke. Change the setup and punchline to tell your own joke!
      courseA_artist_loops1: Ez egy új típusú feladvány, főhősünk a "Művész". Játssz
        egy kicsit, és rajzolj valami vidám dolgot.
      courseA_artist_loops10: Segíts nekem köveket letenni, hogy ne essek bele a vízbe!
      courseA_artist_loops10_2018: Segíts nekem köveket letenni, hogy ne essek bele
        a vízbe!
      courseA_artist_loops10_2019: Segíts nekem köveket letenni, hogy ne essek bele
        a vízbe!
      courseA_artist_loops11: Segíts nekem megépíteni a lépcsőt, így láthatom, ahogy
        a hajó elmegy.
      courseA_artist_loops11_2018: Segíts nekem megépíteni a lépcsőt, így láthatom,
        ahogy a hajó elmegy.
      courseA_artist_loops11_2019: Segíts nekem megépíteni a lépcsőt, így láthatom,
        ahogy a hajó elmegy.
      courseA_artist_loops12: A művész látott valami mókás dolgot a távolban. Rajzold
        le, hogy szerinted mit látott.
      courseA_artist_loops12_2018: A művész látott valami mókás dolgot a távolban.
        Rajzold le, hogy szerinted mit látott.
      courseA_artist_loops12_2019: A művész látott valami mókás dolgot a távolban.
        Rajzold le, hogy szerinted mit látott.
      courseA_artist_loops1_2018: Ez egy új típusú feladvány, főhősünk a "Művész".
        Játssz egy kicsit, és rajzolj valami vidám dolgot.
      courseA_artist_loops1_2019: Ez egy új típusú feladvány, főhősünk a "Művész".
        Játssz egy kicsit, és rajzolj valami vidám dolgot.
      courseA_artist_loops2: Segíts a művésznek megrajzolni ezt a vonalat kétszer
        egymás után.
      courseA_artist_loops2_2018: Segíts a művésznek megrajzolni ezt a vonalat kétszer
        egymás után.
      courseA_artist_loops2_2019: Segíts a művésznek megrajzolni ezt a vonalat kétszer
        egymás után.
      courseA_artist_loops3: Húzd meg a vonalat ötször egymás után.
      courseA_artist_loops3_2018: Húzd meg a vonalat ötször egymás után.
      courseA_artist_loops3_2019: Húzd meg a vonalat ötször egymás után.
      courseA_artist_loops4: Most egy ismétlés ciklust használj, hogy ötször rajzold
        meg ezt a vonalat!
      courseA_artist_loops4_2018: Most egy ismétlés ciklust használj, hogy ötször
        rajzold meg ezt a vonalat!
      courseA_artist_loops4_2019: Most egy ismétlés ciklust használj, hogy ötször
        rajzold meg ezt a vonalat!
      courseA_artist_loops5: Rajzolj egy hét lépés hosszú vonalat. Ez lesz a horizontunk.
      courseA_artist_loops5_2018: Rajzolj egy hét lépés hosszú vonalat. Ez lesz a
        horizontunk.
      courseA_artist_loops5_2019: Rajzolj egy hét lépés hosszú vonalat. Ez lesz a
        horizontunk.
      courseA_artist_loops6: Tegyünk a háttérbe egy szép hegyet.
      courseA_artist_loops6_2018: Tegyünk a háttérbe egy szép hegyet.
      courseA_artist_loops6_2019: Tegyünk a háttérbe egy szép hegyet.
      courseA_artist_loops7: Használd az "ismételd" ciklust, hogy hullámokat adj a
        vízhez.
      courseA_artist_loops7_2018: Használd az "ismételd" ciklust, hogy hullámokat
        adj a vízhez.
      courseA_artist_loops7_2019: Használd az "ismételd" ciklust, hogy hullámokat
        adj a vízhez.
      courseA_artist_loops8: Szükségünk van egy hajóra vezető létrára.
      courseA_artist_loops8_2018: Szükségünk van egy hajóra vezető létrára.
      courseA_artist_loops8_2019: Szükségünk van egy hajóra vezető létrára.
      courseA_artist_loops9: 'Kihívás: javítsd meg a lépcsőt.'
      courseA_artist_loops9_2018: 'Kihívás: javítsd meg a lépcsőt.'
      courseA_artist_loops9_2019: 'Kihívás: javítsd meg a lépcsőt.'
      courseA_artist_loops_challenge1: Tudsz házat rajzolni? Rajzold úgy, ahogy csak
        szeretnéd!
      courseA_artist_loops_challenge1_2018: Tudsz házat rajzolni? Rajzold úgy, ahogy
        csak szeretnéd!
      courseA_artist_loops_challenge1_2019: Tudsz házat rajzolni? Rajzold úgy, ahogy
        csak szeretnéd!
      courseA_artist_loops_challenge2a: _"Segíts nekem felállítani ezt a három sátrat!"_
      courseA_artist_loops_challenge2a_2018: _"Segíts nekem felállítani ezt a három
        sátrat!"_
      courseA_artist_loops_challenge2a_2019: _"Segíts nekem felállítani ezt a három
        sátrat!"_
      courseA_collector_loops1: Mozgasd Laurelt, és próbálj megszerezni annyi kincset,
        ammennyit csak tudsz!
      courseA_collector_loops10: Segít Laurelnek, hogy megszerezze az összes kincset
        útja során.
      courseA_collector_loops10_2018: Segít Laurelnek, hogy megszerezze az összes
        kincset útja során.
      courseA_collector_loops10_2019: Segít Laurelnek, hogy megszerezze az összes
        kincset útja során.
      courseA_collector_loops11: Segíts Laurelnek, hogy a barlang összes kincsét megszerezze.
      courseA_collector_loops11_2018: Segíts Laurelnek, hogy a barlang összes kincsét
        megszerezze.
      courseA_collector_loops11_2019: Segíts Laurelnek, hogy a barlang összes kincsét
        megszerezze.
      courseA_collector_loops12: _"Heuréka! Gyűjts össze annyi kincset, amennyit csak
        tudsz!"_
      courseA_collector_loops12_2018: _"Heuréka! Gyűjts össze annyi kincset, amennyit
        csak tudsz!"_
      courseA_collector_loops12_2019: _"Heuréka! Gyűjts össze annyi kincset, amennyit
        csak tudsz!"_
      courseA_collector_loops1_2018: Mozgasd Laurelt, és próbálj megszerezni annyi
        kincset, ammennyit csak tudsz!
      courseA_collector_loops1_2019: Mozgasd Laurelt, és próbálj megszerezni annyi
        kincset, ammennyit csak tudsz!
      courseA_collector_loops2: Mindhárom kincset szedd fel, hogy teljesítsd ezt a
        pályát.
      courseA_collector_loops2_2018: Mindhárom kincset szedd fel, hogy teljesítsd
        ezt a pályát.
      courseA_collector_loops2_2019: Szerezd meg mind a három cölöpöt! Mozgasd Laurel-t
        minden egyes kincses darabhoz, majd használd a gyűjtőblokkot.
      courseA_collector_loops4: Javítsd ki Laurel útját, hogy minden kincshez eljusson.
      courseA_collector_loops4_2018: Javítsd ki Laurel útját, hogy minden kincshez
        eljusson.
      courseA_collector_loops4_2019: Javítsd ki Laurel útját, hogy minden kincshez
        eljusson.
      courseA_collector_loops5: Használd, amit eddig tanultál, hogy megszerezd az
        összes kincset.
      courseA_collector_loops5_2018: Használd, amit eddig tanultál, hogy megszerezd
        az összes kincset.
      courseA_collector_loops5_2019: Használd, amit eddig tanultál, hogy megszerezd
        az összes kincset.
      courseA_collector_loops6: Adj blokkokat ehhez a kódhoz, hogy megszerezd az összes
        kincset.
      courseA_collector_loops6_2018: Adj blokkokat ehhez a kódhoz, hogy megszerezd
        az összes kincset.
      courseA_collector_loops6_2019: Adj blokkokat ehhez a kódhoz, hogy megszerezd
        az összes kincset.
      courseA_collector_loops7: Mit kellene hozzáadni ehhez a kódhoz, hogy megszerezd
        az összes kincset?
      courseA_collector_loops7_2018: Mit kellene hozzáadni ehhez a kódhoz, hogy megszerezd
        az összes kincset?
      courseA_collector_loops7_2019: Mit kellene hozzáadni ehhez a kódhoz, hogy megszerezd
        az összes kincset?
      courseA_collector_loops8: Írj kódot, hogy megszerezd az összes kincset.
      courseA_collector_loops8_2018: Írj kódot, hogy megszerezd az összes kincset.
      courseA_collector_loops8_2019: Írj kódot, hogy megszerezd az összes kincset.
      courseA_collector_loops9: "**Kihívás:** A kincsek úgy helyezkednek el, mint
        a lépcső fokai! Írj kódot, amivel segítesz Laurelnek, hogy mindet megszerezze."
      courseA_collector_loops9_2018: "**Kihívás:** A kincsek úgy helyezkednek el,
        mint a lépcső fokai! Írj kódot, amivel segítesz Laurelnek, hogy mindet megszerezze."
      courseA_collector_loops9_2019: "**Kihívás:** A kincsek úgy helyezkednek el,
        mint a lépcső fokai! Írj kódot, amivel segítesz Laurelnek, hogy mindet megszerezze."
      courseA_collector_loops_challenge1: _"Tudsz segíteni azzal, hogy rámutatsz a
        hibákra?"_
      courseA_collector_loops_challenge1_2018: _"Tudsz segíteni azzal, hogy rámutatsz
        a hibákra?"_
      courseA_collector_loops_challenge1_2019: _"Tudsz segíteni azzal, hogy rámutatsz
        a hibákra?"_
      courseA_collector_loops_challenge2: 'Get all of the treasure! '
      courseA_collector_loops_challenge2kp: Gyűjts össze legalább **3** kincset, hogy
        teljesítsd a pályát.
      courseA_collector_loops_challenge2kp_2018: Gyűjts össze legalább **3** kincset,
        hogy teljesítsd a pályát.
      courseA_collector_loops_challenge2kp_2019: Gyűjts össze legalább **3** kincset,
        hogy teljesítsd a pályát.
      courseA_collector_preLoops1: "This is Laurel the Adventurer! \n\nPress \"Run\"
        to see her walk up to the treasure and grab it."
      courseA_collector_preLoops2: "Great!  Now you get to add code yourself!  \n\nSnap
        a `get treasure` block to the bottom of the program and click \"Run\"."
      courseA_collector_preLoops3: Snap two `E -->` blocks and one `get treasure`
        block to the bottom of the program, then click "Run".
      courseA_collector_preLoops4: Can you figure out how to solve this puzzle?
      courseA_collector_preLoops5: Get 1 of these 2 gems to solve this puzzle.
      courseA_collector_preLoops6: Get both pieces of treasure to solve this puzzle.
      courseA_collector_preLoops7: Mindhárom kincset szedd fel, hogy teljesítsd ezt
        a pályát.
      courseA_harvester_loops1: Help the harvester pick all the corn!
      courseA_harvester_loops10: Help the harvester pick all five ears of corn!
      courseA_harvester_loops10_2019: Help the harvester pick all five ears of corn!
      courseA_harvester_loops11: 'Try one more on your own! '
      courseA_harvester_loops11_2019: 'Try one more on your own! '
      courseA_harvester_loops1_2019: Help the harvester pick all the corn!
      courseA_harvester_loops2: Make sure to pick all the corn!
      courseA_harvester_loops2_2019: Make sure to pick all the corn!
      courseA_harvester_loops3: Can you pick all the corn using only **one** move
        block?
      courseA_harvester_loops3_2019: Can you pick all the corn using only **one**
        move block?
      courseA_harvester_loops4: Can you help the harvester find the bug in her code?
      courseA_harvester_loops4_2019: Can you help the harvester find the bug in her
        code?
      courseA_harvester_loops5: Try it yourself! Can you pick the corn at the end
        too?
      courseA_harvester_loops5_2019: Try it yourself! Can you pick the corn at the
        end too?
      courseA_harvester_loops5a: Look at all this corn! Can you pick it all by yourself?
      courseA_harvester_loops5a_2019: Look at all this corn! Can you pick it all by
        yourself?
      courseA_harvester_loops5b: Can you change your code to make the harvester pick
        all the corn?
      courseA_harvester_loops5b_2019: Can you change your code to make the harvester
        pick all the corn?
      courseA_harvester_loops6: You will need **one** `Move West` block and **one**
        `Move North` block.
      courseA_harvester_loops6_2019: You will need **one** `Move South` block and
        **one** `Move West` block.
      courseA_harvester_loops7: 'Try it on your own! '
      courseA_harvester_loops7_2019: 'Try it on your own! '
      courseA_harvester_loops9: Can you figure out how to pick all the corn?
      courseA_harvester_loops9_2019: Can you figure out how to pick all the corn?
      courseA_harvester_seq1: Play with these blocks to help the harvester pick the
        piece of corn.
      courseA_harvester_seq10: Make sure to pick all the corn!
      courseA_harvester_seq10_2019: Make sure to pick all the corn!
      courseA_harvester_seq11: Try it by yourself! Pick all the corn.
      courseA_harvester_seq11_2019: Try it by yourself! Pick all the corn.
      courseA_harvester_seq12: Pick all the corn.
      courseA_harvester_seq12_2019: Pick all the corn.
      courseA_harvester_seq13: Play with these blocks to help the harvester pick corn.
      courseA_harvester_seq13_2019: Play with these blocks to help the harvester pick
        corn.
      courseA_harvester_seq1_2019: Play with these blocks to help the harvester pick
        the piece of corn.
      courseA_harvester_seq2: Use three `move west` blocks and one `pick corn` block
        to solve this puzzle.
      courseA_harvester_seq2_2019: Use three `move west` blocks and one `pick corn`
        block to solve this puzzle.
      courseA_harvester_seq3: Use three `Move North` blocks and one `Pick Corn` block.
      courseA_harvester_seq3_2019: Use three `Move North` blocks and one `Pick Corn`
        block.
      courseA_harvester_seq4: Add one block to help the harvester pick the corn.
      courseA_harvester_seq4_2019: Add one block to help the harvester pick the corn.
      courseA_harvester_seq5: Find the bug and fix it!
      courseA_harvester_seq5_2019: Find the bug and fix it!
      courseA_harvester_seq6: Try it yourself!
      courseA_harvester_seq6_2019: Try it yourself!
      courseA_harvester_seq7: Try it yourself!
      courseA_harvester_seq7_2019: Try it yourself!
      courseA_harvester_seq8: Now the harvester needs to pick corn two times!
      courseA_harvester_seq8_2019: Now the harvester needs to pick corn two times!
      courseA_harvester_seq9: Add two blocks to finish this puzzle!
      courseA_harvester_seq9_2019: Add two blocks to finish this puzzle!
      courseA_maze_ramp2_2018: Snap all blocks together to finish your code, then
        click "Run".
      courseA_maze_ramp2_2019: Snap all blocks together to finish your code, then
        click "Run".
      courseA_maze_ramp3a_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseA_maze_ramp3a_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseA_maze_ramp3b_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "Run".
      courseA_maze_ramp3b_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "Run".
      courseA_maze_ramp4a_2018: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseA_maze_ramp4a_2019: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseA_maze_ramp5a_2018: Get the bird to the pig!
      courseA_maze_ramp5a_2019: Get the bird to the pig!
      courseA_maze_seq1: Vidd a madarat a rossz malachoz!
      courseA_maze_seq10: 'Kihívás: Menj körbe a TNT körül, hogy a madár eljusson
        a malacig! '
      courseA_maze_seq10_2018: 'Challenge: Avoid the TNT to get the bird to the pig! '
      courseA_maze_seq10_2019: 'Challenge: Avoid the TNT to get the bird to the pig! '
      courseA_maze_seq10_copy: 'Kihívás: Menj körbe a TNT körül, hogy a madár eljusson
        a malacig! '
      courseA_maze_seq11: Mozogj az egyik irányba, aztán egy másikba, hogy a madár
        elérjen a malacig.
      courseA_maze_seq11_2018: Mozogj az egyik irányba, aztán egy másikba, hogy a
        madár elérjen a malacig.
      courseA_maze_seq11_2019: Mozogj az egyik irányba, aztán egy másikba, hogy a
        madár elérjen a malacig.
      courseA_maze_seq12: 'Kapd el azt a malacot! '
      courseA_maze_seq12_2018: 'Kapd el azt a malacot! '
      courseA_maze_seq12_2019: 'Kapd el azt a malacot! '
      courseA_maze_seq13: Kapd el a malacot, bármilyen módon!
      courseA_maze_seq13_2018: Kapd el a malacot, bármilyen módon!
      courseA_maze_seq13_2019: Kapd el a malacot, bármilyen módon!
      courseA_maze_seq1_2018: Vidd a madarat a rossz malachoz!
      courseA_maze_seq1_2019: Vidd a madarat a rossz malachoz!
      courseA_maze_seq2: Változtasd meg a kódot, hogy a madár elkapja a malacot.
      courseA_maze_seq3: Javítsd ki a kódot, hogy a madár elkapja a malacot!
      courseA_maze_seq4: Távolítsd el a blokkot, hogy a madár eljusson a malacig!
      courseA_maze_seq5: Próbáld ezt önállóan megoldani az elejétől.
      courseA_maze_seq5_2018: Give this one a try.
      courseA_maze_seq5_2019: Give this one a try.
      courseA_maze_seq5_copy: Próbáld ezt önállóan megoldani az elejétől.
      courseA_maze_seq5a_2018: What can you add to the end of this code to get the
        bird to the pig?
      courseA_maze_seq5a_2019: What can you add to the end of this code to get the
        bird to the pig?
      courseA_maze_seq6: Mozogj az egyik irányba, aztán egy másikba, hogy a madár
        elérjen a malacig!
      courseA_maze_seq6_2018: Mozogj az egyik irányba, aztán egy másikba, hogy a madár
        elérjen a malacig!
      courseA_maze_seq6_2019: Mozogj az egyik irányba, aztán egy másikba, hogy a madár
        elérjen a malacig!
      courseA_maze_seq6_copy: Mozogj az egyik irányba, aztán egy másikba, hogy a madár
        elérjen a malacig!
      courseA_maze_seq7: Találd ki, mi hiányzik, aztán adj hozzá blokkokat, hogy a
        madár eljusson a malacig!
      courseA_maze_seq7_copy: Találd ki, mi hiányzik, aztán adj hozzá blokkokat, hogy
        a madár eljusson a malacig!
      courseA_maze_seq8: 'Oldd meg ezt a szintet is: a madár jusson el a malacig!'
      courseA_maze_seq8_2018: 'Oldd meg ezt a szintet is: a madár jusson el a malacig!'
      courseA_maze_seq8_2019: 'Oldd meg ezt a szintet is: a madár jusson el a malacig!'
      courseA_maze_seq8_copy: 'Oldd meg ezt a szintet is: a madár jusson el a malacig!'
      courseA_maze_seq9: Javítsd ki ezt a kódot azzal, hogy blokkokat adsz hozzá.
        A cél, hogy a madár eljusson a malacig!
      courseA_maze_seq_challenge1: Valami nem jó itt. Segíts kijavítani a kódot, hogy
        a madár eljusson a malacig!
      courseA_maze_seq_challenge1_2018: Valami nem jó itt. Segíts kijavítani a kódot,
        hogy a madár eljusson a malacig!
      courseA_maze_seq_challenge1_2019: Valami nem jó itt. Segíts kijavítani a kódot,
        hogy a madár eljusson a malacig!
      courseA_maze_seq_challenge2: Tervezd meg az utat, hogy a madarat a malahoz vezesd.
        Óvakodj a TNT-től, különben a tollak fognak elszállni!
      courseA_maze_seq_challenge2_2018: Tervezd meg az utat, hogy a madarat a malahoz
        vezesd. Óvakodj a TNT-től, különben a tollak fognak elszállni!
      courseA_maze_seq_challenge2_2019: Tervezd meg az utat, hogy a madarat a malahoz
        vezesd. Óvakodj a TNT-től, különben a tollak fognak elszállni!
      courseA_playLab_events1: Ez egy Play Lab szint. A blokkokat húzd a munkaterületre,
        és nézd meg, mi történik!
      courseA_playLab_events1_2018: Ez egy Play Lab szint. A blokkokat húzd a munkaterületre,
        és nézd meg, mi történik!
      courseA_playLab_events1_2019: Ez egy Play Lab szint. A blokkokat húzd a munkaterületre,
        és nézd meg, mi történik!
      courseA_playLab_events2: Jorge, a kutya azt szeretné mondani, hogy "Hi there".
        Tudsz segíteni neki?
      courseA_playLab_events2_2018: Jorge, a kutya azt szeretné mondani, hogy "Hi
        there". Tudsz segíteni neki?
      courseA_playLab_events2_2019: Jorge, a kutya azt szeretné mondani, hogy "Hi
        there". Tudsz segíteni neki?
      courseA_playLab_events3: Csatolj egy "menj balra" blokkot az "amikor balra"
        esemény blokkjához, ami már eleve ott van a munkaterületen.
      courseA_playLab_events3_2018: Csatolj egy "menj balra" blokkot az "amikor balra"
        esemény blokkjához, ami már eleve ott van a munkaterületen.
      courseA_playLab_events3_2019: Connect the `move left` block to the `when left`
        event block that is already in the workspace. Use the arrow keys or press
        the arrow buttons to move Jorge to the flag and finish the level!
      courseA_playLab_events4: Adj blokkokat a jobbra mozgáshoz.
      courseA_playLab_events4_2018: Add another event block to get Jorge to move right
        when the `right` button is clicked.
      courseA_playLab_events4_2019: Now, add another event block to get Jorge to move
        right when the right arrow button is clicked. Use the arrow keys or press
        the arrow buttons to move Jorge to both flags and finish the level!
      courseA_playLab_events5: Adj eseményeket, hogy Jorge a "fel" és a "le" gombok
        hatására felfelé, illetve lefelé mozduljon.
      courseA_playLab_events5_2018: Adj eseményeket, hogy Jorge a "fel" és a "le"
        gombok hatására felfelé, illetve lefelé mozduljon.
      courseA_playLab_events5_2019: Add events to have Jorge move up and down when
        the `up` and `down` buttons are pressed. Make Jorge get the flags to finish
        the level!
      courseA_playLab_events6: Tegyük érdekesebbé mindezt azzal, hogy megváltoztatod
        a hátteret és egy véletlen hangot lejátszol, amikor rákattintasz Jorgéra.
      courseA_playLab_events6_2018: Tegyük érdekesebbé mindezt azzal, hogy megváltoztatod
        a hátteret és egy véletlen hangot lejátszol, amikor rákattintasz Jorgéra.
      courseA_playLab_events6_2019: Make this more interesting by changing the background
        and playing a random sound when Jorge is clicked. When your code is ready,
        click on Jorge to try it out!
      courseA_playLab_events7: Adj hozzá a játékhoz, amit csak szeretnél. Meg tudod
        oldani, hogy a dinoszauruszt eltűnjön, amikor Jorge utoléri?
      courseA_playLab_events7_2018: _Freeplay:_ Add anything you want to this game.
      courseA_playLab_events7_2019: _Freeplay:_ Add anything you want to this game.
      courseA_playlab_events_challenge1: Tudsz kódot írni, ami megmutassa a többi
        barátomat? A tippek segítenek ebben a projektben lépésről lépésre.
      courseA_playlab_events_challenge1_2018: Tudsz kódot írni, ami megmutassa a többi
        barátomat? A tippek segítenek ebben a projektben lépésről lépésre.
      courseA_playlab_events_challenge1_2019: Tudsz kódot írni, ami megmutassa a többi
        barátomat? A tippek segítenek ebben a projektben lépésről lépésre.
      courseA_playlab_events_challenge2: Mindenki csináljon valamit, amikor rákattintasz.
      courseA_playlab_events_challenge2_2018: Mindenki csináljon valamit, amikor rákattintasz.
      courseA_playlab_events_challenge2_2019: Mindenki csináljon valamit, amikor rákattintasz.
      courseA_video_events: Kell egy jobb játéklabor/esemény kombináció
      courseA_video_events_2018: Kell egy jobb játéklabor/esemény kombináció
      courseA_video_events_2019: Kell egy jobb játéklabor/esemény kombináció
      courseB_Scrat_ramp1_2018: For this puzzle, snap the blocks together and press
        "▶ Run"!
      courseB_Scrat_ramp1_2019: For this puzzle, snap the blocks together and press
        "▶ Run"!
      courseB_Scrat_ramp2_2018: Snap all blocks together to finish your code, then
        click "▶ Run".
      courseB_Scrat_ramp2_2019: Snap all blocks together to finish your code, then
        click "▶ Run".
      courseB_Scrat_ramp3a_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseB_Scrat_ramp3a_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseB_Scrat_ramp3b_2018: Drag the extra block back to the toolbox to throw
        it away.
      courseB_Scrat_ramp3b_2019: Drag the extra block back to the toolbox to throw
        it away.
      courseB_Scrat_ramp4a_2018: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseB_Scrat_ramp4a_2019: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseB_Scrat_ramp5a_2018: Try this one all by yourself!
      courseB_Scrat_ramp5a_2019: Try this one all by yourself!
      courseB_artist_loops1: Ez egy új típusú feladvány, főhősünk a "Művész". Játssz
        egy kicsit, és rajzolj valami vidám dolgot.
      courseB_artist_loops10: Use what you have learned to draw a picture of what
        you think the artist saw when he got home.
      courseB_artist_loops10_2018: Use what you have learned to draw a picture of
        what you think the artist saw when he got home.
      courseB_artist_loops10_2019: Use what you have learned to draw a picture of
        what you think the artist saw when he got home.
      courseB_artist_loops1_2018: Ez egy új típusú feladvány, főhősünk a "Művész".
        Játssz egy kicsit, és rajzolj valami vidám dolgot.
      courseB_artist_loops1_2019: Ez egy új típusú feladvány, főhősünk a "Művész".
        Játssz egy kicsit, és rajzolj valami vidám dolgot.
      courseB_artist_loops2: The Artist is trying to draw a line **6** times, but
        can't get it right.  Can you help?
      courseB_artist_loops2_2018: The Artist is trying to draw a line **6** times,
        but can't get it right.  Can you help?
      courseB_artist_loops2_2019: The Artist is trying to draw a line **6** times,
        but can't get it right.  Can you help?
      courseB_artist_loops3: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops3_2018: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops3_2019: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops4: 'Now we need to get the soil ready to plant. Find the
        bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops4_2018: 'Now we need to get the soil ready to plant. Find
        the bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops4_2019: 'Now we need to get the soil ready to plant. Find
        the bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops5: Time to fix the stairs!  Repeat this pattern **5** times
        so the artist can reach the top of the bushes.
      courseB_artist_loops5_2018: Time to fix the stairs!  Repeat this pattern **5**
        times so the artist can reach the top of the bushes.
      courseB_artist_loops5_2019: Time to fix the stairs!  Repeat this pattern **5**
        times so the artist can reach the top of the bushes.
      courseB_artist_loops6: Climb the vine and see where it goes?
      courseB_artist_loops6_2018: Climb the vine and see where it goes?
      courseB_artist_loops6_2019: Climb the vine and see where it goes?
      courseB_artist_loops7: "**Challenge:**  It's a hidden garden! Let's walk around."
      courseB_artist_loops7_2018: "**Challenge:**  It's a hidden garden! Let's walk
        around."
      courseB_artist_loops7_2019: "**Challenge:**  It's a hidden garden! Let's walk
        around."
      courseB_artist_loops8: Time to head home. Can you fix this ladder using only
        one block to help the artist get down?
      courseB_artist_loops8_2018: Time to head home. Can you fix this ladder using
        only one block to help the artist get down?
      courseB_artist_loops8_2019: Time to head home. Can you fix this ladder using
        only one block to help the artist get down?
      courseB_artist_loops9: Let's take the short way home, over the pond. Can you
        help the artist stay on the stones?
      courseB_artist_loops9_2018: Let's take the short way home, over the pond. Can
        you help the artist stay on the stones?
      courseB_artist_loops9_2019: Let's take the short way home, over the pond. Can
        you help the artist stay on the stones?
      courseB_artist_loops_challenge1: '"It''s time to toss the dice! Can you help
        me draw these?"'
      courseB_artist_loops_challenge1_2018: '"It''s time to toss the dice! Can you
        help me draw these?"'
      courseB_artist_loops_challenge1_2019: '"It''s time to toss the dice! Can you
        help me draw these?"'
      courseB_artist_loops_challenge2: Draw as many X's as you can. Can you get 3
        in a row?
      courseB_artist_loops_challenge2_2018: Draw as many X's as you can. Can you get
        3 in a row?
      courseB_artist_loops_challenge2_2019: Draw as many X's as you can. Can you get
        3 in a row?
      courseB_collector_loops1: This is Laurel the Adventurer!  Can you move her around
        and get treasure?
      courseB_collector_loops10: Segíts Laurelnek, hogy a barlang összes kincsét megszerezze.
      courseB_collector_loops10_2018: Segíts Laurelnek, hogy a barlang összes kincsét
        megszerezze.
      courseB_collector_loops10_2019: Segíts Laurelnek, hogy a barlang összes kincsét
        megszerezze.
      courseB_collector_loops11: Eureka!  Get as much treasure as you can!
      courseB_collector_loops11_2018: Eureka!  Get as much treasure as you can!
      courseB_collector_loops11_2019: Eureka!  Get as much treasure as you can!
      courseB_collector_loops1_2018: Get at least one piece of treasure without mistakes
        to pass!
      courseB_collector_loops1_2019: Get at least one piece of treasure without mistakes
        to pass!
      courseB_collector_loops2: Get all four piles to pass this level.
      courseB_collector_loops2_2018: Get all four piles to pass this level.
      courseB_collector_loops2_2019: Get all four piles to pass this level.
      courseB_collector_loops3: How can Laurel get all five piles of treasure using
        only one `E -->` block?
      courseB_collector_loops3_2018: How can Laurel get all five piles of treasure
        using only one `E -->` block?
      courseB_collector_loops3_2019: How can Laurel get all five piles of treasure
        using only one `E -->` block?
      courseB_collector_loops4: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops4_2018: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops4_2019: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops5: 'Add to the code from the last puzzle to get all of
        the treasure. '
      courseB_collector_loops5_2018: 'Add to the code from the last puzzle to get
        all of the treasure. '
      courseB_collector_loops5_2019: 'Add to the code from the last puzzle to get
        all of the treasure. '
      courseB_collector_loops6: Figure out the code to help Laurel get all of the
        treasure!
      courseB_collector_loops6_2018: Figure out the code to help Laurel get all of
        the treasure!
      courseB_collector_loops6_2019: Figure out the code to help Laurel get all of
        the treasure!
      courseB_collector_loops7: Write the code to get all of this treasure.
      courseB_collector_loops7_2018: Write the code to get all of this treasure.
      courseB_collector_loops7_2019: Write the code to get all of this treasure.
      courseB_collector_loops8: "**Challenge:** The treasure goes all the way down
        these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops8_2018: "**Challenge:** The treasure goes all the way
        down these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops8_2019: "**Challenge:** The treasure goes all the way
        down these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops9: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops9_2018: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops9_2019: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops_challenge1: 'This time you have limited blocks. Get
        all of the treasure! '
      courseB_collector_loops_challenge1_2018: 'This time you have limited blocks.
        Get all of the treasure! '
      courseB_collector_loops_challenge1_2019: 'This time you have limited blocks.
        Get all of the treasure! '
      courseB_collector_loops_challenge2: Let's get the treasure! Help me across each
        row then come back to start the next row. Can you find a pattern?
      courseB_collector_loops_challenge2a: Segítsd Laurelnek, hogy legalább **5**
        kincset összegyűjtsön.
      courseB_collector_loops_challenge2a_2018: Segítsd Laurelnek, hogy legalább **5**
        kincset összegyűjtsön.
      courseB_collector_loops_challenge2a_2019: Segítsd Laurelnek, hogy legalább **5**
        kincset összegyűjtsön.
      courseB_iceage_loops1: Help Scrat across the ice to get to the acorn!
      courseB_iceage_loops10: Help Scrat get all the way over to the acorn!
      courseB_iceage_loops10_2019: Help Scrat get all the way over to the acorn!
      courseB_iceage_loops11: Help Scrat get to the acorn!
      courseB_iceage_loops11_2019: Help Scrat get to the acorn!
      courseB_iceage_loops12: Get to the acorn any way you can!
      courseB_iceage_loops12_2019: Get to the acorn any way you can!
      courseB_iceage_loops1_2019: Help Scrat across the ice to get to the acorn!
      courseB_iceage_loops2: Use two different move blocks to get to the acorn!
      courseB_iceage_loops2_2019: Use two different move blocks to get to the acorn!
      courseB_iceage_loops3: Can you get to the acorn with just one `W` block?
      courseB_iceage_loops3_2019: Can you get to the acorn with just one `W` block?
      courseB_iceage_loops4: Add one more block to get Scrat all the way to the acorn!
      courseB_iceage_loops4_2019: Add one more block to get Scrat all the way to the
        acorn!
      courseB_iceage_loops6: Can you add a loop to get to the acorn?
      courseB_iceage_loops6_2019: Can you add a loop to get to the acorn?
      courseB_iceage_loops7: 'Scrat really wants that acorn! '
      courseB_iceage_loops7_2019: 'Scrat really wants that acorn! '
      courseB_iceage_loops8: 'Can you fix this code? '
      courseB_iceage_loops8_2019: 'Can you fix this code? '
      courseB_iceage_loops9: The acorn is so far away! Can you use loops to help Scrat
        get there?
      courseB_iceage_loops9_2019: The acorn is so far away! Can you use loops to help
        Scrat get there?
      courseB_maze_seq1: "Play with these blocks to see what they make the bird do!
        \n\nGet the bird to the pig to complete the level."
      courseB_maze_seq10: Fix the bugs to get the bird to the pig.
      courseB_maze_seq10_2018: Fix the bugs to get Scrat to the acorn.
      courseB_maze_seq10_2019: Fix the bugs to get Scrat to the acorn.
      courseB_maze_seq11: It's all you!  Get the bird to the pig.
      courseB_maze_seq11_2018: It's all you!  Get Scrat to the acorn.
      courseB_maze_seq11_2019: It's all you!  Get Scrat to the acorn.
      courseB_maze_seq12: Now get that pig any way you can!
      courseB_maze_seq12_2018: Now get that acorn any way you can!
      courseB_maze_seq12_2019: Now get that acorn any way you can!
      courseB_maze_seq1_2018: "Play with these blocks to see what they make Scrat
        do! \n\nGet Scrat to the acorn to complete the level."
      courseB_maze_seq1_2019: "Play with these blocks to see what they make Scrat
        do! \n\nGet Scrat to the acorn to complete the level."
      courseB_maze_seq2: _"A bug! Fix the code to get me to the pig."_
      courseB_maze_seq3: '"Fix the code to get me to the pig!"'
      courseB_maze_seq4: Add 2 blocks to get the bird to the pig.
      courseB_maze_seq4_2018: Use **2** movement blocks to get the Scrat to the acorn.
      courseB_maze_seq4_2019: Use **2** movement blocks to get the Scrat to the acorn.
      courseB_maze_seq5: Now try this puzzle from the start!
      courseB_maze_seq5_2018: This puzzle is a little tricky!
      courseB_maze_seq5_2019: This puzzle is a little tricky!
      courseB_maze_seq6: Mozogj az egyik irányba, aztán egy másikba, hogy a madár
        elérjen a malacig!
      courseB_maze_seq6_2018: Move one way, then another to get Scrat to the acorn!
      courseB_maze_seq6_2019: Move one way, then another to get Scrat to the acorn!
      courseB_maze_seq7: Találd ki, mi hiányzik, aztán adj hozzá blokkokat, hogy a
        madár eljusson a malacig!
      courseB_maze_seq7_2018: Figure out what is missing and then add blocks to get
        Scrat to the acorn!
      courseB_maze_seq7_2019: Figure out what is missing and then add blocks to get
        Scrat to the acorn!
      courseB_maze_seq8: Your turn!  What do you need to do to get the bird to the
        pig?
      courseB_maze_seq8_2018: Your turn!  What do you need to do to get Scrat to the
        acorn?
      courseB_maze_seq8_2019: Your turn!  What do you need to do to get Scrat to the
        acorn?
      courseB_maze_seq9: 'Challenge: Move around the TNT to get the bird to the pig.'
      courseB_maze_seq9_2018: 'Challenge: Move around the broken ice to get Scrat
        to the acorn.'
      courseB_maze_seq9_2019: 'Challenge: Move around the broken ice to get Scrat
        to the acorn.'
      courseB_maze_seq_challenge1: Can you find a path before you run out of blocks?
      courseB_maze_seq_challenge1_2018: Can you find a path before you run out of
        blocks?
      courseB_maze_seq_challenge1_2019: Can you find a path before you run out of
        blocks?
      courseB_maze_seq_challenge2: Debug this level. These are the right blocks, but
        they're in the wrong order!
      courseB_maze_seq_challenge2_2018: Debug this level. These are the right blocks,
        but they're in the wrong order!
      courseB_maze_seq_challenge2_2019: Debug this level. These are the right blocks,
        but they're in the wrong order!
      courseB_playLab_events1: See if you can figure out what each block does.
      courseB_playLab_events1_2018: See if you can figure out what each block does.
      courseB_playLab_events1_2019: See if you can figure out what each block does.
      courseB_playlab_events2: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events2_2018: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events2_2019: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events3: Use an event to make Daisy the Dragon switch to a random
        mood when you click on her.
      courseB_playlab_events3_2018: Use an event to make Daisy the Dragon switch to
        a random mood when you click on her.
      courseB_playlab_events3_2019: Use an event to make Daisy the Dragon switch to
        a random mood when you click on her.
      courseB_playlab_events4: Knight time!  Add an event so that the knight moves
        toward the dragon when the left arrow is clicked.
      courseB_playlab_events4_2018: Get the dragon to finish this level!
      courseB_playlab_events4_2019: Get the dragon to finish this level!
      courseB_playlab_events5: Now add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events5_2018: Add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events5_2019: Add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events6: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events6_2018: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events6_2019: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events7: Make this game fun by setting the knight to vanish
        when he runs into the dragon on his way to get the flags!  Play a sound when
        they collide to make it feel more real.
      courseB_playlab_events7_2018: "1.  Set the knight to vanish when he runs into
        the dragon.    \n2.  Play a sound when they collide to make it feel more real.
        \ "
      courseB_playlab_events7_2019: "1.  Set the knight to vanish when he runs into
        the dragon.    \n2.  Play a sound when they collide to make it feel more real.
        \ "
      courseB_playlab_eventsFP: Use your imagination. What can you do to make this
        game more fun?
      courseB_playlab_eventsFP_2018: "**Free play:** Use your imagination. What can
        you do to make this game more fun?"
      courseB_playlab_eventsFP_2019: "**Free play:** Use your imagination. What can
        you do to make this game more fun?"
      courseB_playlab_events_challenge1: 'Make the animals move down when you press
        ▼. '
      courseB_playlab_events_challenge1_2018: 'Make the animals move down when you
        press ▼. '
      courseB_playlab_events_challenge1_2019: 'Make the animals move down when you
        press ▼. '
      courseB_playlab_events_challenge2: Make the animals disappear when you click
        on them.
      courseB_playlab_events_challenge2_2018: Make the animals disappear when you
        click on them.
      courseB_playlab_events_challenge2_2019: Make the animals disappear when you
        click on them.
      courseB_starWars_prog1: '"Gyűjtsd be a fémdarabokat, BB-8!"'
      courseB_starWars_prog10: Segíts BB-8-nek összeszedni a fénylő fémdarabokat
      courseB_starWars_prog10_2018: Segíts BB-8-nek összeszedni a fénylő fémdarabokat
      courseB_starWars_prog10_2019: Segíts BB-8-nek összeszedni a fénylő fémdarabokat
      courseB_starWars_prog11: Segíts BB-8-nek összeszedni a fénylő fémdarabokat
      courseB_starWars_prog11_2018: Segíts BB-8-nek összeszedni a fénylő fémdarabokat
      courseB_starWars_prog11_2019: Segíts BB-8-nek összeszedni a fénylő fémdarabokat
      courseB_starWars_prog1_2018: '"Gyűjtsd be a fémdarabokat, BB-8!"'
      courseB_starWars_prog1_2019: '"Gyűjtsd be a fémdarabokat, BB-8!"'
      courseB_starWars_prog2: Get all the metal.
      courseB_starWars_prog2_2018: Get all the metal.
      courseB_starWars_prog2_2019: Get all the metal.
      courseB_starWars_prog3: Get all the scrap metal
      courseB_starWars_prog3_2018: Get all the scrap metal
      courseB_starWars_prog3_2019: Get all the scrap metal
      courseB_starWars_prog4: Get all the scrap metal
      courseB_starWars_prog4_2018: Get all the scrap metal
      courseB_starWars_prog4_2019: Get all the scrap metal
      courseB_starWars_prog5: Get the scrap metal
      courseB_starWars_prog5_2018: Get the scrap metal
      courseB_starWars_prog5_2019: Get the scrap metal
      courseB_starWars_prog6: Get all the scrap metal
      courseB_starWars_prog6_2018: Get all the scrap metal
      courseB_starWars_prog6_2019: Get all the scrap metal
      courseB_starWars_prog7: Go get it!
      courseB_starWars_prog7_2018: Go get it!
      courseB_starWars_prog7_2019: Go get it!
      courseB_starWars_prog8: "**Kihívás:** Segíts BB-8-nek összeszedni a fénylő fémdarabokat"
      courseB_starWars_prog8_2018: "**Kihívás:** Segíts BB-8-nek összeszedni a fénylő
        fémdarabokat"
      courseB_starWars_prog8_2019: "**Kihívás:** Segíts BB-8-nek összeszedni a fénylő
        fémdarabokat"
      courseB_starWars_prog9: Segíts BB-8-nek összeszedni a fénylő fémdarabokat
      courseB_starWars_prog9_2018: Segíts BB-8-nek összeszedni a fénylő fémdarabokat
      courseB_starWars_prog9_2019: Segíts BB-8-nek összeszedni a fénylő fémdarabokat
      courseC19_playLab_EOC1: Choose a background and map, and pick an actor to be
        your game's hero.
      courseC19_playLab_EOC2: Use events and actions to make your hero move. Get to
        the targets.
      courseC19_playLab_EOC3: Add two or more additional actors to your game and make
        them move.
      courseC19_playLab_EOC4: Find some interesting ways to change the score in your
        game. Get the score to show something other than 0 to continue.
      courseC19_playLab_EOC5: Great job! You have all the basic components of a working
        game. Now spend some time making sure the game works the way you want.
      courseC19_playLab_EOC6: You've finished! Now you can play your game or share
        it with your friends and classmates!
      courseC_PlayLab_events1: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events1_2018: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events1_2019: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events2: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events2_2018: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events2_2019: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events3: Can you write a program to make Jorge (actor 1) move
        toward Olive the Cat?
      courseC_PlayLab_events3_2018: Can you write a program to make Jorge (actor 1)
        move toward Olive the Cat?
      courseC_PlayLab_events3_2019: Can you write a program to make Jorge (actor 1)
        move toward Olive the Cat?
      courseC_PlayLab_events4: Can you write a program that makes Jorge (actor 1)
        move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches her?
      courseC_PlayLab_events4_2018: Can you write a program that makes Jorge (actor
        1) move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches
        her?
      courseC_PlayLab_events4_2019: Can you write a program that makes Jorge (actor
        1) move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches
        her?
      courseC_PlayLab_events5: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events5_2018: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events5_2019: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events6: Now, write a program to make Waddles the Penguin move
        around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events6_2018: Now, write a program to make Waddles the Penguin
        move around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events6_2019: Now, write a program to make Waddles the Penguin
        move around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events7: The `repeat forever` block allows you to run code over
        and over forever.  Use this block to move Chomp the Dino (actor 2) up and
        down by 400 pixels forever.
      courseC_PlayLab_events7_2018: The `repeat forever` block allows you to run code
        over and over forever.  Use this block to move Chomp the Dino (actor 2) up
        and down by 400 pixels forever.
      courseC_PlayLab_events7_2019: The `repeat forever` block allows you to run code
        over and over forever.  Use this block to move Chomp the Dino (actor 2) up
        and down by 400 pixels forever.
      courseC_PlayLab_events8: "Can you have Waddles (actor 1) play a \"hit\" sound
        and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the game
        to make that happen."
      courseC_PlayLab_events8_2018: "Can you have Waddles (actor 1) play a \"hit\"
        sound and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the
        game to make that happen."
      courseC_PlayLab_events8_2019: "Can you have Waddles (actor 1) play a \"hit\"
        sound and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the
        game to make that happen."
      courseC_PlayLab_events9: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_events9_2018: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_events9_2019: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_eventsA: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_2018: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_2019: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_embed_2019: Let's play a game. Score 5 points by moving
        the Penguin to the Octopus!
      courseC_PlayLab_eventsFP: Create your own story. When you're done, click "Finish"
        to share with friends. See story ideas in the hints.
      courseC_PlayLab_eventsFP_2018: Create your own story. When you're done, click
        "Finish" to share with friends. See story ideas in the hints.
      courseC_PlayLab_eventsFP_2019: Create your own story. When you're done, click
        "Finish" to share with friends. See story ideas in the hints.
      courseC_PlayLab_events_challenge1: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_PlayLab_events_challenge1_2018: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_PlayLab_events_challenge1_2019: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_artist_loop1: Let's add some pizazz!
      courseC_artist_loop1_2018: Let's add some pizazz with a `set pattern` block.
      courseC_artist_loop1_2019: Let's add some pizazz with a `set pattern` block.
      courseC_artist_loops1a: 'Vidd a művészt a játéktér közepére, aztán rajzolj egy
        madarat egy matrica segítségével. '
      courseC_artist_loops1a_2018: 'Vidd a művészt a játéktér közepére, aztán rajzolj
        egy madarat egy matrica segítségével. '
      courseC_artist_loops1a_2019: 'Hozd a művészet a játéktér közepére, majd rajzolj
        egy matricát. '
      courseC_artist_loops1b_2019: 'Change the direction your sticker is facing by
        adding a `turn` command to your code. '
      courseC_artist_loops2a: És most használj ismétlést, hogy teljesen körbe forduljon
        a madár. 12-szer kell 30 fokot fordulni.
      courseC_artist_loops2a_2018: És most használj ismétlést, hogy teljesen körbe
        forduljon a madár. 12-szer kell 30 fokot fordulni.
      courseC_artist_loops2a_2019: Now, use a loop to make more copies of your sticker.
        Try changing the numbers in the turn and repeat blocks to make different patterns.
      courseC_artist_loops3a: Most adj hozzá egy denevért!
      courseC_artist_loops3a_2018: Most adj hozzá egy denevért!
      courseC_artist_loops3a_2019: Now add a second sticker!
      courseC_artist_loops4a: Try jumping forward by 75 pixels.
      courseC_artist_loops4a_2018: Try jumping forward by 75 pixels.
      courseC_artist_loops4a_2019: Edit your code so that you jump forward between
        drawing the two stickers.
      courseC_artist_loops5a: Try new stickers!
      courseC_artist_loops5a_2018: Try new stickers!
      courseC_artist_loops5a_2019: Try new stickers!
      courseC_artist_loops5b: Try adding lines!
      courseC_artist_loops5b_2018: Try adding lines!
      courseC_artist_loops5b_2019: Try adding lines!
      courseC_artist_loops6a: Add another sticker!
      courseC_artist_loops6a_2018: Add another sticker!
      courseC_artist_loops6a_2019: Add another sticker!
      courseC_artist_loops7a: Play with the loops and angles.
      courseC_artist_loops7a_2018: Play with the loops and angles.
      courseC_artist_loops7a_2019: Play with the loops and angles.
      courseC_artist_loops8a: Now try something on your own!
      courseC_artist_loops8a_2018: Now try something on your own!
      courseC_artist_loops8a_2019: Now try something on your own!
      courseC_artist_loopsPre1a: Time to spin that line around!
      courseC_artist_loopsPre1a_2018: Time to spin that line around!
      courseC_artist_loopsPre1a_2019: Time to spin that line around!
      courseC_artist_loopsPrePre1a: 'Get the artist to the center of the play area,
        then draw a line. '
      courseC_artist_loopsPrePre1a_2018: 'Get the artist to the center of the play
        area, then draw a line. '
      courseC_artist_loopsPrePre1a_2019: 'Get the artist to the center of the play
        area, then draw a line. '
      courseC_artist_prog1: Play with the blocks in the toolbox to see what they do!
      courseC_artist_prog1_2018: Play with the blocks in the toolbox to see what they
        do!
      courseC_artist_prog1_2019: Play with the blocks in the toolbox to see what they
        do!
      courseC_artist_prog2: Drag blocks onto the screen to have the artist draw over
        the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog2_2018: Drag blocks onto the screen to have the artist draw
        over the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog2_2019: Drag blocks onto the screen to have the artist draw
        over the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog3: Each side of the inner square is 100 pixels and all of
        the angles are 90 degrees.
      courseC_artist_prog3_2018: Each side of the inner square is 100 pixels and all
        of the angles are 90 degrees.
      courseC_artist_prog3_2019: Each side of the inner square is 100 pixels and all
        of the angles are 90 degrees.
      courseC_artist_prog4: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog4_2018: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog4_2019: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog5: 'A háznak tetőre van szüksége! Rajzold meg a háromszöget.
        Tipp: Mind a három oldal egyforma hosszú.'
      courseC_artist_prog5_2018: 'A háznak tetőre van szüksége! Rajzold meg a háromszöget.
        Tipp: Mind a három oldal egyforma hosszú.'
      courseC_artist_prog5_2019: 'A háznak tetőre van szüksége! Rajzold meg a háromszöget.
        Tipp: Mind a három oldal egyforma hosszú.'
      courseC_artist_prog6: Draw this diamond with 200 pixel sides.
      courseC_artist_prog6_2018: Draw this diamond with 200 pixel sides.
      courseC_artist_prog6_2019: Draw this diamond with 200 pixel sides.
      courseC_artist_prog7: "**Challenge:** This tag is a special one!  Can you figure
        out how to draw the outline?"
      courseC_artist_prog7_2018: "**Challenge:** This tag is a special one!  Can you
        figure out how to draw the outline?"
      courseC_artist_prog7_2019: "**Challenge:** This tag is a special one!  Can you
        figure out how to draw the outline?"
      courseC_artist_prog8: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog8_2018: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog8_2019: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog_challenge1: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge1_2018: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge1_2019: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge2a: _"Help me paint the yellow lines on this road!"_
      courseC_artist_prog_challenge2a_2018: _"Help me paint the yellow lines on this
        road!"_
      courseC_artist_prog_challenge2a_2019: _"Help me paint the yellow lines on this
        road!"_
      courseC_collector_loops_challenge2: Get at least **5** pieces of treasure!
      courseC_collector_loops_challenge2_2018: Get at least **5** pieces of treasure!
      courseC_collector_loops_challenge2_2019: Get at least **5** pieces of treasure!
      courseC_collector_prog1: Play around with the blocks to see if you can help
        Laurel collect some treasure.
      courseC_collector_prog1_2018: Play around with the blocks to see if you can
        help Laurel collect some treasure.
      courseC_collector_prog1_2019: Play around with the blocks to see if you can
        help Laurel collect some treasure.
      courseC_collector_prog2: Move Laurel to the treasure, then use `collect` to
        pick it up.
      courseC_collector_prog2_2018: Move Laurel to the treasure, then use `collect`
        to pick it up.
      courseC_collector_prog2_2019: Move Laurel to the treasure, then use `collect`
        to pick it up.
      courseC_collector_prog3: Order these blocks to collect the treasure and solve
        the puzzle.
      courseC_collector_prog3_2018: Order these blocks to collect the treasure and
        solve the puzzle.
      courseC_collector_prog3_2019: Order these blocks to collect the treasure and
        solve the puzzle.
      courseC_collector_prog4: Put these blocks in order to collect all of the treasure
        and solve the puzzle.
      courseC_collector_prog4_2018: Put these blocks in order to collect all of the
        treasure and solve the puzzle.
      courseC_collector_prog4_2019: Put these blocks in order to collect all of the
        treasure and solve the puzzle.
      courseC_collector_prog5: These blocks are in the wrong order. Can you fix them?
      courseC_collector_prog5_2018: These blocks are in the wrong order. Can you fix
        them?
      courseC_collector_prog5_2019: These blocks are in the wrong order. Can you fix
        them?
      courseC_collector_prog6: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog6_2018: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog6_2019: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog7: Use blocks from the toolbox to collect all of the treasure.
      courseC_collector_prog7_2018: Use blocks from the toolbox to collect all of
        the treasure.
      courseC_collector_prog7_2019: Use blocks from the toolbox to collect all of
        the treasure.
      courseC_collector_prog8: _"Keep up the good work! Help me collect all of the
        treasure."_
      courseC_collector_prog8_2018: _"Keep up the good work! Help me collect all of
        the treasure."_
      courseC_collector_prog8_2019: _"Keep up the good work! Help me collect all of
        the treasure."_
      courseC_collector_prog9: _"Let's get all of the treasure!"_
      courseC_collector_prog9_2018: _"Let's get all of the treasure!"_
      courseC_collector_prog9_2019: _"Let's get all of the treasure!"_
      courseC_collector_prog_challenge1: Look carefully! Can you collect all **10**
        pieces of treasure?
      courseC_collector_prog_challenge1_2018: Look carefully! Can you collect all
        **10** pieces of treasure?
      courseC_collector_prog_challenge1_2019: Look carefully! Can you collect all
        **10** pieces of treasure?
      courseC_collector_prog_challenge2: Collect at least **10** pieces of treasure
        to finish this challenge!
      courseC_collector_prog_challenge2_2018: Collect at least **10** pieces of treasure
        to finish this challenge!
      courseC_collector_prog_challenge2_2019: Collect at least **10** pieces of treasure
        to finish this challenge!
      courseC_data wizard: "Press Run. \nThe wizard will make animals appear. \n\nCount
        them. \nWhat do you notice?"
      courseC_flappy_events1: Attach the `flap normal amount` block to the `when click`
        event, then press "Run".    Click or tap on the play space to move Flappy
        to the target.
      courseC_flappy_events10: 'Create your own Flappy game! '
      courseC_flappy_events10_2018: 'Create your own Flappy game! '
      courseC_flappy_events10_2019: 'Create your own Flappy game! '
      courseC_flappy_events1_2018: Attach the `flap normal amount` block to the `when
        click` event, then press "Run".    Click or tap on the play space to move
        Flappy to the target.
      courseC_flappy_events1_2019: Attach the `flap normal amount` block to the `when
        click` event, then press "Run".    Click or tap on the play space to move
        Flappy to the target.
      courseC_flappy_events2: Try adding a block that sets the level speed when the
        "Run" button is pressed.  Play the game and flap to the target to continue.
      courseC_flappy_events2_2018: Try adding a block that sets the level speed when
        the "Run" button is pressed.  Play the game and flap to the target to continue.
      courseC_flappy_events2_2019: Try adding a block that sets the level speed when
        the "Run" button is pressed.  Play the game and flap to the target to continue.
      courseC_flappy_events3: Attach the `end game` block to the `when hit the ground`
        event.   Play the game and crash the bird into the ground to continue.
      courseC_flappy_events3_2018: Attach the `end game` block to the `when hit the
        ground` event.   Play the game and crash the bird into the ground to continue.
      courseC_flappy_events3_2019: Attach the `end game` block to the `when hit the
        ground` event.   Play the game and crash the bird into the ground to continue.
      courseC_flappy_events4: Attach a block to the `when hit an obstacle` event so
        that the game ends when Flappy crashes into the first set of pipes.
      courseC_flappy_events4_2018: Attach a block to the `when hit an obstacle` event
        so that the game ends when Flappy crashes into the first set of pipes.
      courseC_flappy_events4_2019: Attach a block to the `when hit an obstacle` event
        so that the game ends when Flappy crashes into the first set of pipes.
      courseC_flappy_events5: Add a block to the `when pass an obstacle` event, then
        press "Run" to score a point by flying Flappy through the first set of pipes.
      courseC_flappy_events5_2018: Add a block to the `when pass an obstacle` event,
        then press "Run" to score a point by flying Flappy through the first set of
        pipes.
      courseC_flappy_events5_2019: Add a block to the `when pass an obstacle` event,
        then press "Run" to score a point by flying Flappy through the first set of
        pipes.
      courseC_flappy_events6: See if you can still score a point after making Flappy
        flap either a smaller or larger amount each time you click.
      courseC_flappy_events6_2018: See if you can still score a point after making
        Flappy flap either a smaller or larger amount each time you click.
      courseC_flappy_events6_2019: See if you can still score a point after making
        Flappy flap either a smaller or larger amount each time you click.
      courseC_flappy_events7: Next, try changing the scene by attaching a block to
        the `when run` event.
      courseC_flappy_events7_2018: Next, try changing the scene by attaching a block
        to the `when run` event.
      courseC_flappy_events7_2019: Next, try changing the scene by attaching a block
        to the `when run` event.
      courseC_flappy_events8: Try setting a **random** scene when other events happen...for
        example, when passing an obstacle.
      courseC_flappy_events8_2018: Try setting a **random** scene when other events
        happen...for example, when passing an obstacle.
      courseC_flappy_events8_2019: Try setting a **random** scene when other events
        happen...for example, when passing an obstacle.
      courseC_flappy_events9: To mix things up, instead of ending the game when Flappy
        hits an obstacle, try setting the score back to 0.
      courseC_flappy_events9_2018: To mix things up, instead of ending the game when
        Flappy hits an obstacle, try setting the score back to 0.
      courseC_flappy_events9_2019: To mix things up, instead of ending the game when
        Flappy hits an obstacle, try setting the score back to 0.
      courseC_harvester_loops1: Use loops to pick all of the pumpkins.
      courseC_harvester_loops10: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops10_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops10_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops11: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops11_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops11_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops1_2018: Use loops to pick all of the pumpkins.
      courseC_harvester_loops1_2019: Use loops to pick all of the pumpkins.
      courseC_harvester_loops2: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops2_2018: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops2_2019: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops3: Collect all of the pumpkins.
      courseC_harvester_loops3_2018: Collect all of the pumpkins.
      courseC_harvester_loops3_2019: Collect all of the pumpkins.
      courseC_harvester_loops4: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops4_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops4_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops5: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops5_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops5_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops6: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops6_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops6_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops7: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops7_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops7_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops8: "**Challenge:** Collect all of the corn and all of
        the pumpkins."
      courseC_harvester_loops8_2018: "**Challenge:** Collect all of the corn and all
        of the pumpkins."
      courseC_harvester_loops8_2019: "**Challenge:** Collect all of the corn and all
        of the pumpkins."
      courseC_harvester_loops9: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops9_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops9_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops_challenge1a: Collect all of the corn.
      courseC_harvester_loops_challenge1a_2018: Collect all of the corn.
      courseC_harvester_loops_challenge1a_2019: Collect all of the corn.
      courseC_harvester_loops_challenge2: Collect all of the lettuce. Avoid the trees
        and fields!
      courseC_harvester_loops_challenge2_2018: Collect all of the lettuce. Avoid the
        trees and fields!
      courseC_harvester_loops_challenge2_2019: Collect all of the lettuce. Avoid the
        trees and fields!
      courseC_maze_debugging1: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging1_2018: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging1_2019: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging2: Use your debugging skills to get Scrat to the acorn.
      courseC_maze_debugging2_2018: Use your debugging skills to get Scrat to the
        acorn.
      courseC_maze_debugging2_2019: Use your debugging skills to get Scrat to the
        acorn.
      courseC_maze_debugging3: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging3_2018: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging3_2019: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging4: Someone has their directions mixed up! Can you help?
      courseC_maze_debugging4_2018: Someone has their directions mixed up! Can you
        help?
      courseC_maze_debugging4_2019: Someone has their directions mixed up! Can you
        help?
      courseC_maze_debugging5: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging5_2018: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging5_2019: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging6: Figure out what is wrong and get Scrat to the acorn.
      courseC_maze_debugging6_2018: Figure out what is wrong and get Scrat to the
        acorn.
      courseC_maze_debugging6_2019: Figure out what is wrong and get Scrat to the
        acorn.
      courseC_maze_debugging7: "**Challenge:** Debug this level by rearranging, adding,
        and deleting blocks."
      courseC_maze_debugging7_2018: "**Challenge:** Debug this level by rearranging,
        adding, and deleting blocks."
      courseC_maze_debugging7_2019: "**Challenge:** Debug this level by rearranging,
        adding, and deleting blocks."
      courseC_maze_debugging9: Debug this level to get Scrat to the acorn.
      courseC_maze_debugging9_2018: Debug this level to get Scrat to the acorn.
      courseC_maze_debugging9_2019: A program létrehozásához használja az eszköztár
        blokkjait. Vidd a madarat a disznóhoz.
      courseC_maze_debugging_challenge1: Segíts a motkánynak kiválasztani, hogy melyik
        úton induljon el, hogy elérjen a makkhoz.
      courseC_maze_debugging_challenge1_2018: Segíts a motkánynak kiválasztani, hogy
        melyik úton induljon el, hogy elérjen a makkhoz.
      courseC_maze_debugging_challenge1_2019: Segíts a motkánynak kiválasztani, hogy
        melyik úton induljon el, hogy elérjen a makkhoz.
      courseC_maze_debugging_challenge2: Segíts a motkánynak, hogy elérjen a makkig.
        Csak a "fordulj" parancsokat használhatod.
      courseC_maze_debugging_challenge2_2018: Segíts a motkánynak, hogy elérjen a
        makkig. Csak a "fordulj" parancsokat használhatod.
      courseC_maze_debugging_challenge2_2019: Segíts a motkánynak, hogy elérjen a
        makkig. Csak a "fordulj" parancsokat használhatod.
      courseC_maze_loops_challenge1a: 'Now Scrat wants to try using loops to find
        his acorn! '
      courseC_maze_loops_challenge1a_2018: 'Now Scrat wants to try using loops to
        find his acorn! '
      courseC_maze_loops_challenge1a_2019: 'Now Scrat wants to try using loops to
        find his acorn! '
      courseC_maze_programming1: For this puzzle, drag all of the blocks together
        and click "Run" to watch it go!
      courseC_maze_programming1_2018: For this puzzle, drag all of the blocks together
        and click "Run" to watch it go!
      courseC_maze_programming1_2019: For this puzzle, drag all of the blocks together
        and click "Run" to watch it go!
      courseC_maze_programming2: Drag an extra `move forward` block out of the toolbox
        to finish your code.
      courseC_maze_programming2_2018: Drag an extra `move forward` block out of the
        toolbox to finish your code.
      courseC_maze_programming2_2019: Drag an extra `move forward` block out of the
        toolbox to finish your code.
      courseC_maze_programming3: There is one extra block that is going to cause the
        bird to crash. Throw it away by dragging it back to the toolbox.
      courseC_maze_programming3_2018: There is one extra block that is going to cause
        the bird to crash. Throw it away by dragging it back to the toolbox.
      courseC_maze_programming3_2019: There is one extra block that is going to cause
        the bird to crash. Throw it away by dragging it back to the toolbox.
      courseC_maze_programming4: Avoid TNT or feathers will fly!
      courseC_maze_programming4_2018: Avoid TNT or feathers will fly!
      courseC_maze_programming4_2019: Avoid TNT or feathers will fly!
      courseC_maze_programming5: Avoid the TNT.
      courseC_maze_programming5_2018: Avoid the TNT.
      courseC_maze_programming5_2019: Avoid the TNT.
      courseC_maze_programming6: '"Keep calm and help me find the bad pig. Otherwise
        I might get angry!"'
      courseC_maze_programming6_2018: '"Keep calm and help me find the bad pig. Otherwise
        I might get angry!"'
      courseC_maze_programming6_2019: '"Keep calm and help me find the bad pig. Otherwise
        I might get angry!"'
      courseC_maze_programming7: "**Challenge:** This code has a lot of bugs. You'll
        need to remove some blocks and add others."
      courseC_maze_programming7_2018: "**Challenge:** This code has a lot of bugs.
        You'll need to remove some blocks and add others."
      courseC_maze_programming7_2019: "**Challenge:** This code has a lot of bugs.
        You'll need to remove some blocks and add others."
      courseC_maze_programming8: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_2018: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_2019: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_predict1: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_predict1_2018: _"Keep calm and help me find the bad
        pig."_
      courseC_maze_programming8_predict1_2019: _"Keep calm and help me find the bad
        pig."_
      courseC_maze_programming9: _"Now, help me sneak up on the pig any way you want
        to!"_
      courseC_maze_programming9_2018: _"Now, help me sneak up on the pig any way you
        want to!"_
      courseC_maze_programming9_2019: _"Now, help me sneak up on the pig any way you
        want to!"_
      courseC_maze_programming_challenge1: 'The pig is hiding, and the goal is to
        find it. '
      courseC_maze_programming_challenge1_2018: 'The pig is hiding, and the goal is
        to find it. '
      courseC_maze_programming_challenge1_2019: 'The pig is hiding, and the goal is
        to find it. '
      courseC_maze_programming_challenge2: Sometimes there is more than one way to
        solve the same problem. Sometimes it's faster to go backwards than it is to
        go forwards!
      courseC_maze_programming_challenge2_2018: Sometimes there is more than one way
        to solve the same problem. Sometimes it's faster to go backwards than it is
        to go forwards!
      courseC_maze_programming_challenge2_2019: Sometimes there is more than one way
        to solve the same problem. Sometimes it's faster to go backwards than it is
        to go forwards!
      courseC_starWars_loops1: BB-8 fel fog venni valamennyi fémdarabot az útja során.
        Használj ötöt ugyanabból a blokkból, hogy BB-8 felvegye az összes fémdarabot
        a játéktéren.
      courseC_starWars_loops10: You are doing great! Keep it up!
      courseC_starWars_loops10_2018: You are doing great! Keep it up!
      courseC_starWars_loops10_2019: You are doing great! Keep it up!
      courseC_starWars_loops10_predict2: You are doing great! Keep it up!
      courseC_starWars_loops10_predict2_2018: You are doing great! Keep it up!
      courseC_starWars_loops10_predict2_2019: You are doing great! Keep it up!
      courseC_starWars_loops11: You are almost there! This time, choose any path you
        like!
      courseC_starWars_loops11_2018: You are almost there! This time, choose any path
        you like!
      courseC_starWars_loops11_2019: You are almost there! This time, choose any path
        you like!
      courseC_starWars_loops1_2018: BB-8 fel fog venni valamennyi fémdarabot az útja
        során. Használj ötöt ugyanabból a blokkból, hogy BB-8 felvegye az összes fémdarabot
        a játéktéren.
      courseC_starWars_loops1_2019: BB-8 fel fog venni valamennyi fémdarabot az útja
        során. Használj ötöt ugyanabból a blokkból, hogy BB-8 felvegye az összes fémdarabot
        a játéktéren.
      courseC_starWars_loops1_predict1: BB-8 fel fog venni valamennyi fémdarabot az
        útja során. Használj ötöt ugyanabból a blokkból, hogy BB-8 felvegye az összes
        fémdarabot a játéktéren.
      courseC_starWars_loops1_predict1_2018: BB-8 fel fog venni valamennyi fémdarabot
        az útja során. Használj ötöt ugyanabból a blokkból, hogy BB-8 felvegye az
        összes fémdarabot a játéktéren.
      courseC_starWars_loops1_predict1_2019: BB-8 fel fog venni valamennyi fémdarabot
        az útja során. Használj ötöt ugyanabból a blokkból, hogy BB-8 felvegye az
        összes fémdarabot a játéktéren.
      courseC_starWars_loops2: To get all the scrap metal, try creating a loop that
        uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_2018: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_2019: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_copy: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops4: Ebben a feladványban két 'ismételd' ciklus segíteni
        fog, hogy BB-8 minden fémdarabot megszerezze, miközben a lehető legkevesebb
        blokkot használod fel!
      courseC_starWars_loops4_2018: Ebben a feladványban két 'ismételd' ciklus segíteni
        fog, hogy BB-8 minden fémdarabot megszerezze, miközben a lehető legkevesebb
        blokkot használod fel!
      courseC_starWars_loops4_2019: Ebben a feladványban két 'ismételd' ciklus segíteni
        fog, hogy BB-8 minden fémdarabot megszerezze, miközben a lehető legkevesebb
        blokkot használod fel!
      courseC_starWars_loops4_copy: Ebben a feladványban két 'ismételd' ciklus segíteni
        fog, hogy BB-8 minden fémdarabot megszerezze, miközben a lehető legkevesebb
        blokkot használod fel!
      courseC_starWars_loops5: BB-8 szedje fel az összes fémdarabot a lehető leggyorsabban!
      courseC_starWars_loops5_2018: BB-8 szedje fel az összes fémdarabot a lehető
        leggyorsabban!
      courseC_starWars_loops5_2019: BB-8 szedje fel az összes fémdarabot a lehető
        leggyorsabban!
      courseC_starWars_loops5_copy: BB-8 szedje fel az összes fémdarabot a lehető
        leggyorsabban!
      courseC_starWars_loops6: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_2018: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_2019: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_copy: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops7: Can you try to get all the scrap metal using just one
        loop? Try programming it all out then finding the repeating code to put in
        a loop.
      courseC_starWars_loops7_2018: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops7_2019: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops7_copy: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops9: Use what you have learned to pick up all of the scrap
        metal!
      courseC_starWars_loops9_2018: Use what you have learned to pick up all of the
        scrap metal!
      courseC_starWars_loops9_2019: Use what you have learned to pick up all of the
        scrap metal!
      courseD_artist_1_2018: 'Draw a hexagon with **50** pixel long sides.  '
      courseD_artist_1_2018_2019: 'Draw a hexagon with **50** pixel long sides.  '
      courseD_artist_2_2018: Now, turn right by **60** degrees, then draw a straight
        line **150** pixels long and jump back to the center of the play area.
      courseD_artist_2_2018_2019: Now, turn right by **60** degrees, then draw a straight
        line **150** pixels long and jump back to the center of the play area.
      courseD_artist_3_2018: 'Nest all of the code inside of another `repeat` loop
        and run it a total of **6** times. '
      courseD_artist_3_2018_2019: 'Nest all of the code inside of another `repeat`
        loop and run it a total of **6** times. '
      courseD_artist_4_2018: Add a tiny shape to the end of your line!
      courseD_artist_4_2018_2019: Add a tiny shape to the end of your line!
      courseD_artist_5_2018: Play with the snowflakes!
      courseD_artist_5_2018_2019: Play with the snowflakes!
      courseD_artist_6_2018: Try changing your long 150 pixel line into 6 short lines
        of **25** pixels, with little turns at the end.
      courseD_artist_6_2018_2019: Try changing your long 150 pixel line into 6 short
        lines of **25** pixels, with little turns at the end.
      courseD_artist_binary1: "A bináris az információ ábrázolása mindössze 2 állapot
        használatával. Most a \"ki\" (ezt a 0 számjegy jelöli) és a \"be\" (ezt az
        1 számjegy jelöli) állapotokat használjuk.\\\r\n\\\r\nEgy \"képpontokból\"
        álló rácsot láthatsz most alul, amelyen végiglépkedhetsz és létrehozhatsz
        mintákat is, ha bizonyos négyzeteket bekapcsolsz. Meg tudod rajzoltatni a
        művésszel a \"01010101\" bináris sorozatot az első sorban?"
      courseD_artist_binary1_2018: "A bináris az információ ábrázolása mindössze 2
        állapot használatával. Most a \"ki\" (ezt a 0 számjegy jelöli) és a \"be\"
        (ezt az 1 számjegy jelöli) állapotokat használjuk.\\\r\n\\\r\nEgy \"képpontokból\"
        álló rácsot láthatsz most alul, amelyen végiglépkedhetsz és létrehozhatsz
        mintákat is, ha bizonyos négyzeteket bekapcsolsz. Meg tudod rajzoltatni a
        művésszel a \"01010101\" bináris sorozatot az első sorban?"
      courseD_artist_binary1_2019: "A bináris az információ ábrázolása mindössze 2
        állapot használatával. Most a \"ki\" (ezt a 0 számjegy jelöli) és a \"be\"
        (ezt az 1 számjegy jelöli) állapotokat használjuk.\\\r\n\\\r\nEgy \"képpontokból\"
        álló rácsot láthatsz most alul, amelyen végiglépkedhetsz és létrehozhatsz
        mintákat is, ha bizonyos négyzeteket bekapcsolsz. Meg tudod rajzoltatni a
        művésszel a \"01010101\" bináris sorozatot az első sorban?"
      courseD_artist_binary2: Run this code to see how the artist uses binary to draw
        this pattern.
      courseD_artist_binary2_2018: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_artist_binary2_2019: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_artist_binary3: Which of the binary strings below could you loop 8 times
        to draw this image?
      courseD_artist_binary3_2018: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_artist_binary3_2019: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_artist_binary4: Meg tudod rajzolni ezt a mintát mindössze három bináris
        számjegy (0 és 1) ismétlésével?
      courseD_artist_binary4_2018: Meg tudod rajzolni ezt a mintát mindössze három
        bináris számjegy (0 és 1) ismétlésével?
      courseD_artist_binary4_2019: Meg tudod rajzolni ezt a mintát mindössze három
        bináris számjegy (0 és 1) ismétlésével?
      courseD_artist_binary5: "Each binary string below represents one row of this
        picture. \n\nCan you rearrange them so it draws a smiley face instead of a
        frown?"
      courseD_artist_binary5_2018: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_artist_binary5_2019: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_artist_binary6: Melyik 6 jegyből álló bináris számsorozatot kell 11
        alkalommal ismételned ennek a képnek a megrajzolásához?
      courseD_artist_binary6_2018: Melyik 6 jegyből álló bináris számsorozatot kell
        11 alkalommal ismételned ennek a képnek a megrajzolásához?
      courseD_artist_binary6_2019: Melyik 6 jegyből álló bináris számsorozatot kell
        11 alkalommal ismételned ennek a képnek a megrajzolásához?
      courseD_artist_binary7: Mi az a legrövidebb bináris karakterlánc, ami ha megismételed,
        kirajzolja ezt a képet?
      courseD_artist_binary7_2018: Mi az a legrövidebb bináris karakterlánc, ami ha
        megismételed, kirajzolja ezt a képet?
      courseD_artist_binary7_2019: Mi az a legrövidebb bináris karakterlánc, ami ha
        megismételed, kirajzolja ezt a képet?
      courseD_artist_binary8: Finish the code to create this drawing.
      courseD_artist_binary8_2018: Finish the code to create this drawing.
      courseD_artist_binary8_2019: Finish the code to create this drawing.
      courseD_artist_binary8_predict1: Finish the code to create this drawing.
      courseD_artist_binary8_predict1_2018: Finish the code to create this drawing.
      courseD_artist_binary8_predict1_2019: Finish the code to create this drawing.
      courseD_artist_binaryFP: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binaryFP8: "**Free Play:**  Draw whatever you want in binary! "
      courseD_artist_binaryFP_2018: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binaryFP_2019: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binary_challenge1_2018: You can only use each binary value (0
        or 1) once each in this puzzle. Try using nested loops to complete this drawing.
      courseD_artist_binary_challenge1_2019: You can only use each binary value (0
        or 1) once each in this puzzle. Try using nested loops to complete this drawing.
      courseD_artist_binary_challenge2_2018: Are you persistent enough to restore
        this logo back to normal?
      courseD_artist_binary_challenge2_2019: Are you persistent enough to restore
        this logo back to normal?
      courseD_artist_nestedLoops1: |-
        Draw a triangle to kickstart this stage.\
        (Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)
      courseD_artist_nestedLoops10: Take the squares from before, but this time only
        make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops10_2018: Take the squares from before, but this time
        only make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops10_2019: Take the squares from before, but this time
        only make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops1_2018: |-
        Draw a triangle to kickstart this stage.\
        (Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)
      courseD_artist_nestedLoops1_2019: |-
        Draw a triangle to kickstart this stage.\
        (Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)
      courseD_artist_nestedLoops1a: 'Now loop the triangle 6 times. '
      courseD_artist_nestedLoops1a_2018: 'Now loop the triangle 6 times. '
      courseD_artist_nestedLoops1a_2019: 'Now loop the triangle 6 times. '
      courseD_artist_nestedLoops2: This time, complete the puzzle with the fewest
        number of blocks possible.
      courseD_artist_nestedLoops2_2018: This time, complete the puzzle with the fewest
        number of blocks possible.
      courseD_artist_nestedLoops2_2019: This time, complete the puzzle with the fewest
        number of blocks possible.
      courseD_artist_nestedLoops3: |-
        Use your new skills to quickly draw the last row of windows for this building.

        The windows are 20 pixel squares, each 20 pixels apart.
      courseD_artist_nestedLoops3_2018: |-
        Use your new skills to quickly draw the last row of windows for this building.

        The windows are 20 pixel squares, each 20 pixels apart.
      courseD_artist_nestedLoops3_2019: |-
        Use your new skills to quickly draw the last row of windows for this building.

        The windows are 20 pixel squares, each 20 pixels apart.
      courseD_artist_nestedLoops4: Great!  Do the same thing with these circles.
      courseD_artist_nestedLoops4_2018: Great!  Do the same thing with these circles.
      courseD_artist_nestedLoops4_2019: Great!  Do the same thing with these circles.
      courseD_artist_nestedLoops5: What happens if you also turn 90 degrees between
        circles?
      courseD_artist_nestedLoops5_2018: What happens if you also turn 90 degrees between
        circles?
      courseD_artist_nestedLoops5_2019: What happens if you also turn 90 degrees between
        circles?
      courseD_artist_nestedLoops7: Use what you've learned to make this drawing.
      courseD_artist_nestedLoops7_2018: Use what you've learned to make this drawing.
      courseD_artist_nestedLoops7_2019: Use what you've learned to make this drawing.
      courseD_artist_nestedLoops8: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops8_2018: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops8_2019: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops9: "**Challenge:** Can you figure out how to make
        a picture like this?"
      courseD_artist_nestedLoops9_2018: "**Challenge:** Can you figure out how to
        make a picture like this?"
      courseD_artist_nestedLoops9_2019: "**Challenge:** Can you figure out how to
        make a picture like this?"
      courseD_artist_nestedLoops9_predict1: "**Challenge:** Can you figure out how
        to make a picture like this?"
      courseD_artist_nestedLoops9_predict1_2018: "**Challenge:** Can you figure out
        how to make a picture like this?"
      courseD_artist_nestedLoops9_predict1_2019: "**Challenge:** Can you figure out
        how to make a picture like this?"
      courseD_artist_nestedLoopsFP: Now it's your turn.  Take the skills you have
        learned and make something that you love!
      courseD_artist_nestedLoopsFP_2018: Now it's your turn.  Take the skills you
        have learned and make something that you love!
      courseD_artist_nestedLoopsFP_2019: Now it's your turn.  Take the skills you
        have learned and make something that you love!
      courseD_artist_nestedLoops_challenge1: Can you figure out how to make a picture
        like this?
      courseD_artist_nestedLoops_challenge1_2018: Can you figure out how to make a
        picture like this?
      courseD_artist_nestedLoops_challenge1_2019: Can you figure out how to make a
        picture like this?
      courseD_artist_nestedLoops_challenge2: Fix the code to make this picture!
      courseD_artist_nestedLoops_challenge2_2018: Fix the code to make this picture!
      courseD_artist_nestedLoops_challenge2_2019: Fix the code to make this picture!
      courseD_artist_project1: 'Draw a small shape, between **20 and 50** pixels wide.  It
        can be any shape that you like.  '
      courseD_artist_project1_2018: 'Draw a small shape, between **20 and 50** pixels
        wide.  It can be any shape that you like.  '
      courseD_artist_project1_2019: 'Draw a small shape, between **20 and 50** pixels
        wide.  It can be any shape that you like.  '
      courseD_artist_project1a: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project1a_2018: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project1a_2019: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project2: Now take your shape and draw two or three in a row!
      courseD_artist_project2_2018: Now take your shape and draw two or three in a
        row!
      courseD_artist_project2_2019: Now take your shape and draw two or three in a
        row!
      courseD_artist_project2a: Now, turn around 180 degrees and draw the stair pattern
        again!
      courseD_artist_project2a_2018: Now, turn around 180 degrees and draw the stair
        pattern again!
      courseD_artist_project2a_2019: Now, turn around 180 degrees and draw the stair
        pattern again!
      courseD_artist_project3: Let's spin that line of shapes around!
      courseD_artist_project3_2018: Let's spin that line of shapes around!
      courseD_artist_project3_2019: Let's spin that line of shapes around!
      courseD_artist_project3a: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project3a_2018: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project3a_2019: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project4: Time to layer those shapes!
      courseD_artist_project4_2018: Time to layer those shapes!
      courseD_artist_project4_2019: Time to layer those shapes!
      courseD_artist_project4a: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project4a_2018: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project4a_2019: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project5: Play with the snowflakes!
      courseD_artist_project5_2018: Play with the snowflakes!
      courseD_artist_project5_2019: Play with the snowflakes!
      courseD_artist_ramp11: Now make a square using Artist!
      courseD_artist_ramp12: Use what you've learned to draw this triangle inside
        of a square.
      courseD_autorun_binary2_2019: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_autorun_binary3_2019: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_autorun_binary4_2019: Meg tudod rajzolni ezt a mintát mindössze három
        bináris számjegy (0 és 1) ismétlésével?
      courseD_autorun_binary5_2019: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_autorun_binary6_2019: Melyik 6 jegyből álló bináris számsorozatot kell
        11 alkalommal ismételned ennek a képnek a megrajzolásához?
      courseD_autorun_binary7_2019: Mi az a legrövidebb bináris karakterlánc, ami
        ha megismételed, kirajzolja ezt a képet?
      courseD_autorun_binary8_2019: Finish the code to create this drawing.
      courseD_autorun_binary8_predict1_2019: Finish the code to create this drawing.
      courseD_bee_conditionals10: Collect all of the nectar and make all of the honey.
      courseD_bee_conditionals10_2018: Collect all of the nectar and make all of the
        honey.
      courseD_bee_conditionals10_2019: Collect all of the nectar and make all of the
        honey.
      courseD_bee_conditionals1_predict1: Check to see if there's a flower under the
        cloud. If there's a flower, get nectar.
      courseD_bee_conditionals1_predict1_2018: Check to see if there's a flower under
        the cloud. If there's a flower, get nectar.
      courseD_bee_conditionals1_predict1_2019: Check to see if there's a flower under
        the cloud. If there's a flower, get nectar.
      courseD_bee_conditionals1_predict1_copy: Check to see if there's a flower under
        the cloud. If there's a flower, get nectar.
      courseD_bee_conditionals2: 'Check underneath every cloud to see if it is hiding
        a flower before you get nectar.  '
      courseD_bee_conditionals2_2018: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals2_2019: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals2_copy: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals3: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_2018: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_2019: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_copy: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals4: Get all of the nectar using as few blocks as possible.
      courseD_bee_conditionals4_2018: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals4_2019: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals4_copy: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals5: Collect all of the nectar using as few blocks as
        possible
      courseD_bee_conditionals5_2018: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals5_2019: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals5_copy: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals6: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals6_2018: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals6_2019: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals7: Use the `if/else` block to collect nectar at flowers
        and make honey at honeycomb.
      courseD_bee_conditionals7_2018: Use the `if/else` block to collect nectar at
        flowers and make honey at honeycomb.
      courseD_bee_conditionals7_2019: Use the `if/else` block to collect nectar at
        flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2: Use the `if/else` block to collect nectar
        at flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2_2018: Use the `if/else` block to collect
        nectar at flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2_2019: Use the `if/else` block to collect
        nectar at flowers and make honey at honeycomb.
      courseD_bee_conditionals8: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseD_bee_conditionals8_2018: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseD_bee_conditionals8_2019: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseD_bee_conditionals9: Collect all of the nectar or make all the honey.
      courseD_bee_conditionals9_2018: Collect all of the nectar or make all the honey.
      courseD_bee_conditionals9_2019: Collect all of the nectar or make all the honey.
      courseD_bee_conditionals_challenge1: Collect all the nectar and make all the
        honey.
      courseD_bee_conditionals_challenge1_2018: Collect all the nectar and make all
        the honey.
      courseD_bee_conditionals_challenge1_2019: Collect all the nectar and make all
        the honey.
      courseD_bee_conditionals_challenge2: Collect all of the nectar and make all
        the honey.
      courseD_bee_conditionals_challenge2_2018: Collect all of the nectar and make
        all the honey.
      courseD_bee_conditionals_challenge2_2019: Collect all of the nectar and make
        all the honey.
      courseD_bee_debugging_challenge1: Nézd meg, hogyan gyűjti össze a méh az összes
        nektárt. Tudnád használni ezt a módszert, hogy segíts a méhnek elkészíteni
        az összes mézet?
      courseD_bee_debugging_challenge1a: Watch how the bee gets the nectar. Use the
        same pattern to help the bee make all the honey.
      courseD_bee_nestedLoops1: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1_2018: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1_2019: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1a: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1a_2018: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1a_2019: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops2: This time, help the bee collect all of the nectar
        using as few blocks as possible.
      courseD_bee_nestedLoops2_2018: This time, help the bee collect all of the nectar
        using as few blocks as possible.
      courseD_bee_nestedLoops2_2019: This time, help the bee collect all of the nectar
        using as few blocks as possible.
      courseD_bee_nestedLoops2_predict1: This time, help the bee collect all of the
        nectar using as few blocks as possible.
      courseD_bee_nestedLoops2_predict1_2018: This time, help the bee collect all
        of the nectar using as few blocks as possible.
      courseD_bee_nestedLoops2_predict1_2019: This time, help the bee collect all
        of the nectar using as few blocks as possible.
      courseD_bee_nestedLoops7: 'Challenge: Figure out how to get all of the nectar
        using only the blocks available.'
      courseD_bee_nestedLoops7_2018: 'Challenge: Figure out how to get all of the
        nectar using only the blocks available.'
      courseD_bee_nestedLoops7_2019: 'Challenge: Figure out how to get all of the
        nectar using only the blocks available.'
      courseD_bee_nestedLoops8: 'Gyűjtsd össze az összes nektárt az összes virágról,
        és készíts mézet minden méhsejtbe. '
      courseD_bee_nestedLoops8_2018: 'Gyűjtsd össze az összes nektárt az összes virágról,
        és készíts mézet minden méhsejtbe. '
      courseD_bee_nestedLoops8_2019: 'Gyűjtsd össze az összes nektárt az összes virágról,
        és készíts mézet minden méhsejtbe. '
      courseD_bee_nestedLoops9: Készítsd el az összes mézet.
      courseD_bee_nestedLoops9_2018: Készítsd el az összes mézet.
      courseD_bee_nestedLoops9_2019: Készítsd el az összes mézet.
      courseD_bee_nestedLoops9_predict2: Készítsd el az összes mézet.
      courseD_bee_nestedLoops9_predict2_2018: Készítsd el az összes mézet.
      courseD_bee_nestedLoops9_predict2_2019: Készítsd el az összes mézet.
      courseD_bounce_events10s_2018: 'Attach the `score point` block to the `when
        ball in goal` event and the `score opponent point` block to the `when ball
        misses hand` event to make a game. '
      courseD_bounce_events10s_2019: 'Attach the `score point` block to the `when
        ball in goal` event and the `score opponent point` block to the `when ball
        misses hand` event to make a game. '
      courseD_bounce_events11s_2018: 'Attach the `throw new ball` block in all of
        the places where the game needs a new ball. '
      courseD_bounce_events11s_2019: 'Attach the `throw new ball` block in all of
        the places where the game needs a new ball. '
      courseD_bounce_events12s_2018: Make this game your own. You can change all the
        visuals and the rules. When you're done, click "Finish" to let friends try
        your game on their phones.
      courseD_bounce_events12s_2019: Make this game your own. You can change all the
        visuals and the rules. When you're done, click "Finish" to let friends try
        your game on their phones.
      courseD_bounce_events1s_2018: Attach a block to the "when left arrow" block
        and press "Run" to move the player to the net.
      courseD_bounce_events1s_2019: Attach a block to the "when left arrow" block
        and press "Run" to move the player to the net.
      courseD_bounce_events2s_2018: Now, attach a block to the `when right event`
        so that the hand can get to both baskets.
      courseD_bounce_events2s_2019: Now, attach a block to the `when right event`
        so that the hand can get to both baskets.
      courseD_bounce_events5s_2018: Attach a block to the `when ball hits hand` event
        to ensure the ball reaches the basket.
      courseD_bounce_events5s_2019: Attach a block to the `when ball hits hand` event
        to ensure the ball reaches the basket.
      courseD_bounce_events6s_2018: Attach code to make the ball bounce when it hits
        the wall so you can solve this puzzle.
      courseD_bounce_events6s_2019: Attach code to make the ball bounce when it hits
        the wall so you can solve this puzzle.
      courseD_bounce_events7s_2018: Attach sound blocks to make the net swish when
        you hit the basket and have the whistle blow when the ball misses your hand.
        Bounce the ball until it hits the finish target.
      courseD_bounce_events7s_2019: Attach sound blocks to make the net swish when
        you hit the basket and have the whistle blow when the ball misses your hand.
        Bounce the ball until it hits the finish target.
      courseD_collector_debugging1: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging1a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging1a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging2: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging2a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging2a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging3: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging3a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging3a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging4: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging4a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging4a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging5: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging5a_2018: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging5a_2019: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging6: 'Challenge: Use your debugging skills to fix the
        errors and collect all of the treasure.'
      courseD_collector_debugging6a_2018: 'Challenge: Use the code in the work area
        to get at least **6** pieces of treasure!'
      courseD_collector_debugging6a_2019: 'Challenge: Use the code in the work area
        to get at least **6** pieces of treasure!'
      courseD_collector_debugging_challenge2: Profi vagy az egymásba ágyazott ciklusokban?
        Használd azt, amit megtanultál eddig, hogy összegyűjtsd az összes kincset!
      courseD_collector_nested_loops_challenge2: Help the collector reach at least
        two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2_2018: Help the collector reach at
        least two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2_2019: Help the collector reach at
        least two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2a: Help Laurel collect at least two
        piles of treasure.
      courseD_collector_ramp10: Help Laurel collect all of the treasure.
      courseD_collector_ramp8: Help Laurel collect all of the treasure.
      courseD_collector_ramp9: Help Laurel collect all of the treasure.
      courseD_farmer_condLoops1: Use conditionals to make sure that you pick corn
        only when it's there.
      courseD_farmer_condLoops1_2018: Use conditionals to make sure that you pick
        corn only when it's there.
      courseD_farmer_condLoops1_2019: Use conditionals to make sure that you pick
        corn only when it's there.
      courseD_farmer_condLoops2: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops2_2018: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops2_2019: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops3: _"Corn, lettuce, AND pumpkins! Help me harvest them
        all."_
      courseD_farmer_condLoops3_2018: _"Corn, lettuce, AND pumpkins! Help me harvest
        them all."_
      courseD_farmer_condLoops3_2019: _"Corn, lettuce, AND pumpkins! Help me harvest
        them all."_
      courseD_farmer_condLoops4: Help the harvester pick all of the lettuce in each
        cluster before moving on to the next bunch.
      courseD_farmer_condLoops4_2018: Help the harvester pick all of the lettuce in
        each cluster before moving on to the next bunch.
      courseD_farmer_condLoops4_2019: Help the harvester pick all of the lettuce in
        each cluster before moving on to the next bunch.
      courseD_farmer_condLoops5: Collect all of the corn and lettuce, then grab the
        pumpkin at the end.
      courseD_farmer_condLoops5_2018: Collect all of the corn and lettuce, then grab
        the pumpkin at the end.
      courseD_farmer_condLoops5_2019: Collect all of the corn and lettuce, then grab
        the pumpkin at the end.
      courseD_farmer_condLoops6: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops6_2018: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops6_2019: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops7: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops7_2018: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops7_2019: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops8: Collect all of the corn and lettuce, then pick the
        pumpkin.
      courseD_farmer_condLoops8_2018: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops8_2019: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9: Collect all of the corn and lettuce, then pick the
        pumpkin.
      courseD_farmer_condLoops9_2018: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9_2019: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9_predict1: Collect all of the corn and lettuce, then
        pick the pumpkin.
      courseD_farmer_condLoops9_predict1_2018: Collect all of the corn and lettuce,
        then pick the pumpkin.
      courseD_farmer_condLoops9_predict1_2019: Collect all of the corn and lettuce,
        then pick the pumpkin.
      courseD_farmer_condLoops_challenge1: Collect everything to complete the level.
        Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge1_2018: Collect everything to complete the
        level. Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge1_2019: Collect everything to complete the
        level. Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge2: Collect everything to complete the level.
      courseD_farmer_condLoops_challenge2_2018: Collect everything to complete the
        level.
      courseD_farmer_condLoops_challenge2_2019: Collect everything to complete the
        level.
      courseD_farmer_until_challenge2: Use If/Else blocks to follow the curvy path.
        At each corner, use the `remove 1` command in a loop to clear the piles.
      courseD_farmer_while1: Move to the pile of dirt and use the `remove` block to
        remove it.
      courseD_farmer_while10: 'Flatten all of these piles using as few blocks as possible. '
      courseD_farmer_while10_2018: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_2019: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_predict2: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_predict2_2018: 'Flatten all of these piles using as few
        blocks as possible. '
      courseD_farmer_while10_predict2_2019: 'Flatten all of these piles using as few
        blocks as possible. '
      courseD_farmer_while1_2018: Move to the pile of dirt and use the `remove` block
        to remove it.
      courseD_farmer_while1_2019: Move to the pile of dirt and use the `remove` block
        to remove it.
      courseD_farmer_while2: Move to the hole and fill it with six shovelfuls of dirt,
        using the `fill` block.
      courseD_farmer_while2_2018: Move to the hole and fill it with six shovelfuls
        of dirt, using the `fill` block.
      courseD_farmer_while2_2019: Move to the hole and fill it with six shovelfuls
        of dirt, using the `fill` block.
      courseD_farmer_while3: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while3_2018: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while3_2019: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while4: Help the farmer remove this entire pile using a `while`
        loop.
      courseD_farmer_while4_2018: Help the farmer remove this entire pile using a
        `while` loop.
      courseD_farmer_while4_2019: Help the farmer remove this entire pile using a
        `while` loop.
      courseD_farmer_while4_predict1: Help the farmer remove this entire pile using
        a `while` loop.
      courseD_farmer_while4_predict1_2018: Help the farmer remove this entire pile
        using a `while` loop.
      courseD_farmer_while4_predict1_2019: Help the farmer remove this entire pile
        using a `while` loop.
      courseD_farmer_while5: 'Help me remove all of this dirt. '
      courseD_farmer_while5_2018: 'Help me remove all of this dirt. '
      courseD_farmer_while5_2019: 'Help me remove all of this dirt. '
      courseD_farmer_while6: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while6_2018: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while6_2019: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while7: Fill in the hole at the end of each of these paths.
      courseD_farmer_while7_2018: Fill in the hole at the end of each of these paths.
      courseD_farmer_while7_2019: Fill in the hole at the end of each of these paths.
      courseD_farmer_while8: 'Challenge: Fill all of these holes using as few blocks
        as possible. '
      courseD_farmer_while8_2018: 'Challenge: Fill all of these holes using as few
        blocks as possible. '
      courseD_farmer_while8_2019: 'Challenge: Fill all of these holes using as few
        blocks as possible. '
      courseD_farmer_while9: 'Flatten all of these piles using as few blocks as possible. '
      courseD_farmer_while9_2018: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while9_2019: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while_challenge1: Fill all of the holes and remove all of the
        piles.
      courseD_farmer_while_challenge1_2018: Fill all of the holes and remove all of
        the piles.
      courseD_farmer_while_challenge1_2019: Fill all of the holes and remove all of
        the piles.
      courseD_farmer_while_challenge2: Fill all of the holes and remove all of the
        piles.
      courseD_harvester_nested_loops_challenge1: '"I need some help on the farm! Help
        me harvest this corn using only the blocks in your toolbox."'
      courseD_harvester_nested_loops_challenge1_2018: '"I need some help on the farm!
        Help me harvest this corn using only the blocks in your toolbox."'
      courseD_harvester_nested_loops_challenge1_2019: '"I need some help on the farm!
        Help me harvest this corn using only the blocks in your toolbox."'
      courseD_iceage_loops1: Help Scrat across the ice to get to the acorn!
      courseD_iceage_loops10: Help Scrat get all the way over to the acorn!
      courseD_iceage_loops10_2019: Help Scrat get all the way over to the acorn!
      courseD_iceage_loops11: Help Scrat get to the acorn!
      courseD_iceage_loops11_2019: Help Scrat get to the acorn!
      courseD_iceage_loops12: Get to the acorn any way you can!
      courseD_iceage_loops12_2019: Get to the acorn any way you can!
      courseD_iceage_loops1_2019: Help Scrat across the ice to get to the acorn!
      courseD_iceage_loops2: Use a `turn left` block to get to the acorn!
      courseD_iceage_loops2_2019: Use a `turn left` block to get to the acorn!
      courseD_iceage_loops3: Can you get to the acorn with just one `move forward`
        block?
      courseD_iceage_loops3_2019: Can you get to the acorn with just one `move forward`
        block?
      courseD_iceage_loops4: Add one more block to get Scrat all the way to the acorn!
      courseD_iceage_loops4_2019: Add one more block to get Scrat all the way to the
        acorn!
      courseD_iceage_loops6: Can you add a loop to get to the acorn?
      courseD_iceage_loops6_2019: Can you add a loop to get to the acorn?
      courseD_iceage_loops7: 'Scrat really wants that acorn! '
      courseD_iceage_loops7_2019: 'Scrat really wants that acorn! '
      courseD_iceage_loops8: 'Can you fix this code? '
      courseD_iceage_loops8_2019: 'Can you fix this code? '
      courseD_iceage_loops9: The acorn is so far away! Can you use loops to help Scrat
        get there?
      courseD_iceage_loops9_2019: The acorn is so far away! Can you use loops to help
        Scrat get there?
      courseD_maze_intro4_2019: Help Red reach the pig.
      courseD_maze_intro5a_2019: Count the spaces on the grid carefully!
      courseD_maze_intro5c_2019: Watch out for TNT! Help Red get to the pig.
      courseD_maze_nestedLoops3: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops3_2018: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops3_2019: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops4: 'Juttass el a napraforgóhoz a lehető legkevesebb
        blokk használatával!  '
      courseD_maze_nestedLoops4_2018: 'Juttass el a napraforgóhoz a lehető legkevesebb
        blokk használatával!  '
      courseD_maze_nestedLoops4_2019: 'Juttass el a napraforgóhoz a lehető legkevesebb
        blokk használatával!  '
      courseD_maze_nestedLoops5: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops5_2018: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops5_2019: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops6: Juttass el a napraforgóhoz csak az elérhető blokkok
        használatával.
      courseD_maze_nestedLoops6_2018: Juttass el a napraforgóhoz csak az elérhető
        blokkok használatával.
      courseD_maze_nestedLoops6_2019: Juttass el a napraforgóhoz csak az elérhető
        blokkok használatával.
      courseD_maze_ramp1: For this puzzle, snap all of the blocks together and click
        "Run" to watch it go!
      courseD_maze_ramp1_2018: For this puzzle, snap all of the blocks together and
        click "Run" to watch it go!
      courseD_maze_ramp1_2019: For this puzzle, snap all of the blocks together and
        click "Run" to watch it go!
      courseD_maze_ramp2: Húzz egy további "menj előre" blokkot a programhoz, és csatold
        a blokkokat a "futtatáskor" részhez, hogy befejezd a kódodat.
      courseD_maze_ramp2_2018: Húzz egy további "menj előre" blokkot a programhoz,
        és csatold a blokkokat a "futtatáskor" részhez, hogy befejezd a kódodat.
      courseD_maze_ramp2_2019: Húzz egy további "menj előre" blokkot a programhoz,
        és csatold a blokkokat a "futtatáskor" részhez, hogy befejezd a kódodat.
      courseD_maze_ramp3: There is one extra block that is going to cause the bird
        to crash. Throw it away by dragging it back to the toolbox.
      courseD_maze_ramp3_2018: There is one extra block that is going to cause the
        bird to crash. Throw it away by dragging it back to the toolbox.
      courseD_maze_ramp3_2019: Throw away the extra "move forward" block.
      courseD_maze_ramp4: Avoid TNT or feathers will fly!
      courseD_maze_ramp4_2018: Avoid TNT or feathers will fly!
      courseD_maze_ramp4_2019: Help Scrat reach the acorn.
      courseD_maze_ramp5: Avoid the TNT.
      courseD_maze_ramp5_2018: Avoid the TNT.
      courseD_maze_ramp5_2019: Avoid the TNT.
      courseD_maze_ramp5a: Pay attention to the sequence and see if you can figure
        out how to get to that pig!
      courseD_maze_ramp5a_2018: Pay attention to the sequence and see if you can figure
        out how to get to that pig!
      courseD_maze_ramp5a_2019: Count the spaces on the grid carefully!
      courseD_maze_ramp5b: Navigate this maze to help the bird find the pig!
      courseD_maze_ramp5b_2018: Navigate this maze to help the bird find the pig!
      courseD_maze_ramp5b_2019: Navigate this maze to help the bird find the pig!
      courseD_maze_ramp5c: Help the bird get to the pig.
      courseD_maze_ramp5c_2018: Help the bird get to the pig.
      courseD_maze_ramp5c_2019: Watch out for cracking ice! Help Scrat get to the
        acorn.
      courseD_maze_ramp5d: Get the bird to the pig.
      courseD_maze_ramp5d_2018: Get the bird to the pig.
      courseD_maze_ramp5d_2019: Get the bird to the pig.
      courseD_maze_ramp6: '"Keep calm and help me find the bad pig. Otherwise I might
        get angry!"'
      courseD_maze_ramp7: Get the bird to the pig!
      courseD_maze_until1: Get the angry bird to the pig.
      courseD_maze_until10: Help the zombie get to the sunflower.
      courseD_maze_until10_2018: Help the zombie get to the sunflower.
      courseD_maze_until10_2019: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2_2018: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2_2019: Help the zombie get to the sunflower.
      courseD_maze_until1_2018: Get the angry bird to the pig.
      courseD_maze_until1_2019: Get the angry bird to the pig.
      courseD_maze_until3: Get the bird to the pig.
      courseD_maze_until3_2018: Get the bird to the pig.
      courseD_maze_until3_2019: Get the bird to the pig.
      courseD_maze_until4: Can you get the zombie to the sunflower using only the
        blocks that are available?
      courseD_maze_until4_2018: Can you get the zombie to the sunflower using only
        the blocks that are available?
      courseD_maze_until4_2019: Can you get the zombie to the sunflower using only
        the blocks that are available?
      courseD_maze_until5: Use the `if` block to help the zombie decide when to turn,
        then get the zombie to the sunflower.
      courseD_maze_until5_2018: Use the `if` block to help the zombie decide when
        to turn, then get the zombie to the sunflower.
      courseD_maze_until5_2019: Use the `if` block to help the zombie decide when
        to turn, then get the zombie to the sunflower.
      courseD_maze_until6: Help the zombie get to the sunflower.
      courseD_maze_until6_2018: Help the zombie get to the sunflower.
      courseD_maze_until6_2019: Help the zombie get to the sunflower.
      courseD_maze_until7: Help the zombie get to the sunflower.
      courseD_maze_until7_2018: Help the zombie get to the sunflower.
      courseD_maze_until7_2019: Help the zombie get to the sunflower.
      courseD_maze_until8: Help the zombie get to the sunflower.
      courseD_maze_until9: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until9_2018: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until9_2019: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until_challenge1: No hints, just challenge. Get the zombie to the
        sunflower.
      courseD_playLab_cond1: Get Pegleg to the flags to solve this puzzle.
      courseD_playLab_cond1_2018: Get Pegleg to the flags to solve this puzzle.
      courseD_playLab_cond2: 'Give Pegleg a point every time he makes it to the dragon. '
      courseD_playLab_cond2_2018: 'Give Pegleg a point every time he makes it to the
        dragon. '
      courseD_playLab_cond3: 'Make the dragon change between random emotions every
        second.  '
      courseD_playLab_cond3_2018: 'Make the dragon change between random emotions
        every second.  '
      courseD_playLab_cond3a: Make it so when Pegleg gets to the dragon, he gets 2
        points if the dragon is happy and 1 otherwise.
      courseD_playLab_cond3a_2018: Make it so when Pegleg gets to the dragon, he gets
        2 points if the dragon is happy and 1 otherwise.
      courseD_playLab_cond4: Add some code so that the ninja (actor 3) starts chasing
        Pegleg as soon as the game begins.  End the game as a loss if the ninja catches
        him.
      courseD_playLab_cond4_2018: Add some code so that the ninja (actor 3) starts
        chasing Pegleg as soon as the game begins.  End the game as a loss if the
        ninja catches him.
      courseD_playLab_cond5: Add a `repeat forever` loop that continuously checks
        if the score is greater than 5, then ends the game as a win when it is.
      courseD_playLab_cond5_2018: Add a `repeat forever` loop that continuously checks
        if the score is greater than 5, then ends the game as a win when it is.
      courseD_playLab_cond6: "1.  Slow the ninja (actor 3) down before you set him
        to chase the pirate.  \n2.  If the pirate is greater than 225 pixels down,
        set the ninja to **flee** the pirate.  Otherwise, set the ninja to **chase**
        the pirate.  "
      courseD_playLab_cond6_2018: "1.  Slow the ninja (actor 3) down before you set
        him to chase the pirate.  \n2.  If the pirate is greater than 225 pixels down,
        set the ninja to **flee** the pirate.  Otherwise, set the ninja to **chase**
        the pirate.  "
      courseD_playLab_cond6a: If the pirate (actor 1) is in the safe zone, wait one
        second, then deduct a point as long as he stays beneath the octopus line.
      courseD_playLab_cond6a_2018: If the pirate (actor 1) is in the safe zone, wait
        one second, then deduct a point as long as he stays beneath the octopus line.
      courseD_playLab_condFP: Now, build your own game to show off to your friends!
      courseD_playLab_condFP_2018: Now, build your own game to show off to your friends!
      courseD_scrat_ramp1: For this puzzle, snap all of the blocks together and click
        "Run" to watch it go!
      courseD_scrat_ramp2: Húzz egy további "menj előre" blokkot a programhoz, és
        csatold a blokkokat a "futtatáskor" részhez, hogy befejezd a kódodat.
      courseD_scrat_ramp3: Van egy extra blokk, ami szegény motkány vesztét okozza.
        Dobd ki innen úgy, hogy a toolboxba (szerszámosládába) húzod.
      courseD_scrat_ramp4: Óvakodj a megrepedt jégtől a motkány biztonsága érdekében!
      courseD_scrat_ramp5: Óvakodj a megrepedt jégtől.
      courseD_scrat_ramp6: Segíts a motkánynak, hogy megszerezze a makkot! Használj
        ciklust!
      courseD_scrat_ramp7: Help Scrat get to the acorn!
      courseD_scrat_ramp8: Use what you've learned to get Scrat to the acorn!
      courseE_aboutme_6: 'Keep going! Try adding more features to your poster to make
        it even better. '
      courseE_artist_concept1: 'Recreate this image. '
      courseE_artist_concept1_2018: 'Recreate this image. '
      courseE_artist_concept4: Recreate this drawing.
      courseE_artist_concept4_2018: Recreate this drawing.
      courseE_artist_concept_challenge1: 'Help the artist draw this unique shape. '
      courseE_artist_concept_challenge1_2018: 'Help the artist draw this unique shape. '
      courseE_artist_concept_challenge2: Create five pinwheel designs using the code
        below.
      courseE_artist_concept_challenge2_2018: Create five pinwheel designs using the
        code below.
      courseE_artist_functions1: 'Helló! Zombi művész vagyok. Szeretek rajzolni. Segíts
        nekem szögletes szemüveget rajzolni. Tipp: a két üveg közti összekötő 25 pixellel
        rövidebb, mint a négyzet oldala.'
      courseE_artist_functions10: This time, use lines of 8 hexagons with 25 pixel
        sides.
      courseE_artist_functions10_2018: This time, use lines of 8 hexagons with 25
        pixel sides.
      courseE_artist_functions10_2019: This time, use lines of 8 hexagons with 25
        pixel sides.
      courseE_artist_functions1_copy: 'Helló! Zombi művész vagyok. Szeretek rajzolni.
        Segíts nekem szögletes szemüveget rajzolni. Tipp: a két üveg közti összekötő
        25 pixellel rövidebb, mint a négyzet oldala.'
      courseE_artist_functions2: 'This time, use the `draw a square` function to create
        the glasses. '
      courseE_artist_functions2_2018: 'Use the `draw a square` function to create
        the glasses. '
      courseE_artist_functions2_2019: 'Use the `draw a square` function to create
        the glasses. '
      courseE_artist_functions2_copy: 'This time, use the `draw a square` function
        to create the glasses. '
      courseE_artist_functions3: You can make this drawing by adding a repeat block.
      courseE_artist_functions3_2018: Build a function that will create this star.
      courseE_artist_functions3_2019: Build a function that will create this star.
      courseE_artist_functions3_copy: You can make this drawing by adding a repeat
        block.
      courseE_artist_functions4: Now that you can draw a star, try drawing four stars!
      courseE_artist_functions4_copy: Now that you can draw a star, try drawing four
        stars!
      courseE_artist_functions5: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_2018: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_2019: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_copy: Draw only those three stars to finish this puzzle.
      courseE_artist_functions6: Make this window by drawing a square, then turning
        90 degrees before drawing another, and so on.
      courseE_artist_functions7: Try solving this puzzle by creating `draw a window`
        and calling it five times. Watch out for the door!
      courseE_artist_functions7_2018: Try solving this puzzle by creating `draw a
        window` and calling it five times. Watch out for the door!
      courseE_artist_functions7_2019: Try solving this puzzle by creating `draw a
        window` and calling it five times. Watch out for the door!
      courseE_artist_functions8: 'Challenge: Create as many functions as you think
        you need to make this drawing of 50 pixel squares.'
      courseE_artist_functions8_2018: Use everything you've learned so far to recreate
        this design.
      courseE_artist_functions8_2019: Use everything you've learned so far to recreate
        this design.
      courseE_artist_functions8a_2018: Create a function for a single square.
      courseE_artist_functions8a_2019: Create a function for a single square.
      courseE_artist_functions8b_2018: Call the `draw a square` function from inside
        your `draw a line of squares` function to make this even easier!
      courseE_artist_functions8b_2019: Call the `draw a square` function from inside
        your `draw a line of squares` function to make this even easier!
      courseE_artist_functions8c_2018: Add one more function that creates this stack
        of staggered squares.
      courseE_artist_functions8c_2019: Add one more function that creates this stack
        of staggered squares.
      courseE_artist_functions9: Create this image using only the blocks provided.
      courseE_artist_functions9_2018: "**Challenge:** Create this image using only
        the blocks provided."
      courseE_artist_functions9_2019: "**Challenge:** Create this image using only
        the blocks provided."
      courseE_artist_functionsProj_2018: "**Inspiration:** Use what you've learned
        to make whatever you want!"
      courseE_artist_functionsProj_2019: "**Inspiration:** Use what you've learned
        to make whatever you want!"
      courseE_artist_functions_challenge1: Once you define a function, you can call
        it over and over again - whenever and wherever you want! Try this code to
        see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge1_2018: Once you define a function, you can
        call it over and over again - whenever and wherever you want! Try this code
        to see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge1_2019: Once you define a function, you can
        call it over and over again - whenever and wherever you want! Try this code
        to see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      courseE_artist_functions_challenge2_2018: Try this code to see how it works,
        then make the program your own!
      courseE_artist_functions_challenge2_2019: Try this code to see how it works,
        then make the program your own!
      courseE_artist_ramp8: Now make a square using Artist!
      courseE_artist_ramp8_2: Now make a square using Artist!
      courseE_artist_ramp9: Use what you've learned to draw this triangle.
      courseE_artist_ramp9_2: Use what you've learned to draw this triangle.
      courseE_bee_concept1: Gyűjtsd össze az összes nektárt az összes virágról! Használj
        egymásba ágyazott ciklusokat!
      courseE_bee_concept1_2018: Gyűjtsd össze az összes nektárt az összes virágról!
        Használj egymásba ágyazott ciklusokat!
      courseE_bee_concept2: 'Help the bee make all of the honey. '
      courseE_bee_concept2_2018: 'Help the bee make all of the honey. '
      courseE_bee_concept3: Collect all of the nectar using  as few blocks as possible.
      courseE_bee_concept3_2018: Collect all of the nectar using  as few blocks as
        possible.
      courseE_bee_concept4: Uh oh! The bee is not sure if he should collect nectar
        or make honey. Can you help him out?
      courseE_bee_concept4_2018: Uh oh! The bee is not sure if he should collect nectar
        or make honey. Can you help him out?
      courseE_bee_concept5: Help the bee collect the nectar from the flowers?
      courseE_bee_concept5_2018: Help the bee collect the nectar from the flowers?
      courseE_bee_functions1: Gyűjtsd össze az összes virág összes nektárját!
      courseE_bee_functions10: Solve this puzzle by creating a function that helps
        the bee go get all of the honey before returning back to the main path.
      courseE_bee_functions2: Use the `get 2 nectar` function to collect the nectar
        from each flower.
      courseE_bee_functions3: A függvények olyan kódot tartalmazó blokkok, amelyek
        elvégeznek egy feladatot.  Használd a "gyűjts 5" függvényt, hogy egyszerre
        5 egység nektárt össze tudj gyűjteni. Ne felejts el ciklust használni és ügyelj
        a számlálóra is.
      courseE_bee_functions4: A "menj és gyűjts nektárt" függvény hatására a méh elfordul,
        nektárt gyűjt, majd visszatér a kiindulási pontra. Használd a függvényt, hogy
        az összes nektárt összegyűjtsd.
      courseE_bee_functions5: Now write the function to collect nectar from the flowers.
      courseE_bee_functions6: Create a function and call it to collect nectar at each
        flower and make honey at each honeycomb.
      courseE_bee_functions7: Create your own function that goes down a path, gets
        nectar, makes honey, and then returns the bee to the top of the path. Collect
        all the nectar and make all the honey!
      courseE_bee_functions8: Create a function that collects all of the nectar from
        each flower.
      courseE_bee_functions9: Create a function to collect all of the nectar from
        each flower.
      courseE_bee_functions_challenge1: You are on your own for this challenge. This
        could "bee" harder than it looks!
      courseE_bee_functions_challenge2: You are on your own for this challenge. Sweet!
      courseE_farmer_concept1: Can you write a program that fills these holes until
        the ground is even?
      courseE_farmer_concept1_2018: Can you write a program that fills these holes
        until the ground is even?
      courseE_farmer_concept2: Collect all of the pumpkins.
      courseE_farmer_concept2_2018: Collect all of the pumpkins.
      courseE_farmer_concept3: Fill in the hole at the end of each of these paths.
      courseE_farmer_concept3_2018: Fill in the hole at the end of each of these paths.
      courseE_farmer_functions1: Help the harvester get to the pumpkin and pick it.
      courseE_farmer_functions10a1_2018: Use everything that you've learned so far
        to solve this puzzle!
      courseE_farmer_functions10a1_2019: Use everything that you've learned so far
        to solve this puzzle!
      courseE_farmer_functions10b: Use your new function twice to solve this puzzle.
      courseE_farmer_functions13_2018: Solve this puzzle in 23 blocks or less.
      courseE_farmer_functions13_2019: Solve this puzzle in 23 blocks or less.
      courseE_farmer_functions1_2018: Help the harvester get to the pumpkin and pick
        it.
      courseE_farmer_functions1_2019: Help the harvester get to the pumpkin and pick
        it.
      courseE_farmer_functions1a: Now help the harvester pick the corn, lettuce, **and**
        pumpkin.
      courseE_farmer_functions1a_2018: Help the harvester pick all of the corn, then
        the pumpkin.
      courseE_farmer_functions1a_2019: Help the harvester pick all of the corn, then
        the pumpkin.
      courseE_farmer_functions2b: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2b_2018: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2b_2019: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2ba: Help the farmer pick the corn and pumpkins using
        the `corn and pumpkin` function.
      courseE_farmer_functions2ba_2018: Use the functions below to help the farmer
        pick the corn and pumpkins.
      courseE_farmer_functions2ba_2019: Help the farmer pick the corn and pumpkins
        using the `corn and pumpkin` function.
      courseE_farmer_functions3c: Now, fill-in the function yourself by pulling the
        blocks from the code and dropping them into the **function definition**.
      courseE_farmer_functions3c1_2018: This function calls other functions!
      courseE_farmer_functions3c1_2019: This function calls other functions!
      courseE_farmer_functions3c_2018: Try on a longer path.
      courseE_farmer_functions3c_2019: Try on a longer path.
      courseE_farmer_functions4b: Use your new function to solve this puzzle.
      courseE_farmer_functions5c: Your function will come in handy here.
      courseE_farmer_functions6c: What do you need to add this program to check whether
        a sprout is corn or lettuce?
      courseE_farmer_functions7a1_2018: Create a function that sends the harvester
        down a square path to pick a single head of lettuce from the middle of each
        row.
      courseE_farmer_functions7a1_2019: Create a function that sends the harvester
        down a square path to pick a single head of lettuce from the middle of each
        row.
      courseE_farmer_functions7b: Help the harvester find her way down this confusing
        path and to the pumpkin by turning left at the corn and right at the lettuce.
      courseE_farmer_functions8a1_2018: Is your function still helpful?
      courseE_farmer_functions8a1_2019: Is your function still helpful?
      courseE_farmer_functions8b: "**Challenge:** Collect all of the pumpkins using
        the method from the last puzzle. "
      courseE_farmer_functions9a1_2018: Is your function still helpful?
      courseE_farmer_functions9a1_2019: Is your function still helpful?
      courseE_farmer_functions9b: Can you figure out the pattern that you need to
        solve this puzzle?
      courseE_farmer_ramp11a: While there is a pile, remove dirt.
      courseE_farmer_ramp11a_2018: While there is a pile, remove dirt.
      courseE_farmer_ramp11a_2019: While there is a pile, remove dirt.
      courseE_farmer_ramp11b: While there is a pile, remove dirt.
      courseE_farmer_ramp11b_2018: While there is a pile, remove dirt.
      courseE_farmer_ramp11b_2019: While there is a pile, remove dirt.
      courseE_farmer_ramp12_forswap: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12_forswap_2018: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12_forswap_2019: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12b: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12b_2018: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12b_2019: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12c: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12c_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12c_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12d: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12d_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12d_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12e: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12e_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12e_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12f: Move forward until you reach the lettuce, then turn
        left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12f_2018: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12f_2019: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g: Move forward until you reach the lettuce, then turn
        left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g_2018: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g_2019: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_playLab_challenge1: "Something should happen when you get enough points
        or when you run out of points. Add some code to the `win game` and `lose game`
        functions to make the game work the way it should. \nClick the hints for ideas!"
      courseE_playLab_scaffold1: Choose a background and map, and pick an actor to
        be your game's hero.
      courseE_playLab_scaffold2: Use event handlers and actions to make your hero
        move.
      courseE_playLab_scaffold3: Add two or more additional actors to your game and
        make them move.
      courseE_playLab_scaffold4: Find some interesting ways to change the score in
        your game. Get the score to show something other than 0 to continue.
      courseE_playLab_scaffold5: Now spend some time making sure the game works the
        way you want. Include a way to win or lose your game, then play until you
        meet one of those conditions.
      courseE_playLab_scaffold6: You've finished! Now you can play your game or share
        it with your friends and classmates!
      courseE_video_createFunctions: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2_2018: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2_2019: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseF_artist_for1: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for10: 'Free Play: Try using the `counter` variable with other
        drawing elements to make magical images like this one.'
      courseF_artist_for10_2018: 'Free Play: Try using the `counter` variable with
        other drawing elements to make magical images like this one.'
      courseF_artist_for10_2019: 'Free Play: Try using the `counter` variable with
        other drawing elements to make magical images like this one.'
      courseF_artist_for1_2018: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for1_2019: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for2: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for2_2018: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for2_2019: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for3: 'These triangles go from 20 pixel sides to 200 pixel sides,
        and each triangle is 20 pixels larger than the last. '
      courseF_artist_for3_2018: 'These triangles go from 20 pixel sides to 200 pixel
        sides, and each triangle is 20 pixels larger than the last. '
      courseF_artist_for3_2019: 'These triangles go from 20 pixel sides to 200 pixel
        sides, and each triangle is 20 pixels larger than the last. '
      courseF_artist_for4: 'These squares start at 15 pixels long. The largest is
        300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for4_2018: 'These squares start at 15 pixels long. The largest
        is 300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for4_2019: 'These squares start at 15 pixels long. The largest
        is 300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for5: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for5_2018: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for5_2019: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for6: Recreate your code from the last level, but turn 89 degrees
        to create this twisted square spiral.
      courseF_artist_for6_2018: Recreate your code from the last level, but turn 89
        degrees to create this twisted square spiral.
      courseF_artist_for6_2019: Recreate your code from the last level, but turn 89
        degrees to create this twisted square spiral.
      courseF_artist_for7: Végezz el három kis módosítást az előző kódon, hogy ezt
        kapd!
      courseF_artist_for7_2018: Végezz el három kis módosítást az előző kódon, hogy
        ezt kapd!
      courseF_artist_for7_2019: Végezz el három kis módosítást az előző kódon, hogy
        ezt kapd!
      courseF_artist_for8: Take the angle down to 72 degrees to get a spiraled pentagon.
      courseF_artist_for8_2018: Take the angle down to 72 degrees to get a spiraled
        pentagon.
      courseF_artist_for8_2019: Take the angle down to 72 degrees to get a spiraled
        pentagon.
      courseF_artist_for9: "**Inspiration:**  Use the counter inside the `set alpha`
        block to get this faded center."
      courseF_artist_for9_2018: "**Inspiration:**  Use the counter inside the `set
        alpha` block to get this faded center."
      courseF_artist_for9_2019: "**Inspiration:**  Use the counter inside the `set
        alpha` block to get this faded center."
      courseF_artist_for_challenge1: Ki tudod találni hogyan lehet elkészíteni a rajzot?
      courseF_artist_for_challenge1_2018: Ki tudod találni hogyan lehet elkészíteni
        a rajzot?
      courseF_artist_for_challenge1_2019: Ki tudod találni hogyan lehet elkészíteni
        a rajzot?
      courseF_artist_for_challenge2: Ki tudod találni hogyan lehet elkészíteni a rajzot
        egy ciklussal?
      courseF_artist_for_challenge2_2018: Ki tudod találni hogyan lehet elkészíteni
        a rajzot egy ciklussal?
      courseF_artist_for_challenge2_2019: Ki tudod találni hogyan lehet elkészíteni
        a rajzot egy ciklussal?
      courseF_artist_fwp1: Edit the function 'draw a square' to find bugs.
      courseF_artist_fwp2: Edit the function to accept a parameter called `length`.
      courseF_artist_fwp2_predict1: Edit the function to accept a parameter called
        `length`.
      courseF_artist_fwp3: Create a function called 'draw a square' and use it to
        outline these four boxes using parameters.
      courseF_artist_fwp4: Edit this function to add a parameter for the number of
        sides in your polygon.
      courseF_artist_fwp5: 'Use the function from the last puzzle to draw this series
        of shapes.  '
      courseF_artist_fwp6: 'Challenge: Edit `draw a spiral edge` to use `length` and
        `sides` parameters, then recreate these shapes.'
      courseF_artist_fwp7: Finish off the `draw a spiral edge` function to also ask
        for a minimum length for the center of the spiral.
      courseF_artist_fwp8: Can you figure out how to make this drawing using the function
        that you just created?
      courseF_artist_fwp9: 'Freeplay: Draw something awesome! Play with the pen width
        to see how different your drawings look!'
      courseF_artist_fwp_challenge1: Can you figure out how this program works?
      courseF_artist_fwp_challenge2: Use what you learned in the previous level to
        draw an image like this.
      courseF_artist_variables10: 'Here''s your code from the last puzzle.  Try editing
        the variable in other ways.  '
      courseF_artist_variables10_2018: 'Here''s your code from the last puzzle.  Try
        editing the variable in other ways.  '
      courseF_artist_variables10_2019: 'Here''s your code from the last puzzle.  Try
        editing the variable in other ways.  '
      courseF_artist_variables2: 'Now draw three of those triangles right next to
        each other.   '
      courseF_artist_variables2_2018: 'Now draw three of those triangles right next
        to each other.   '
      courseF_artist_variables2_2019: 'Now draw three of those triangles right next
        to each other.   '
      courseF_artist_variables3: Move the length of 50 into a variable so we can use
        it in the next few puzzles.
      courseF_artist_variables3_2018: Move the length of 50 into a variable so we
        can use it in the next few puzzles.
      courseF_artist_variables3_2019: Move the length of 50 into a variable so we
        can use it in the next few puzzles.
      courseF_artist_variables4: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables4_2018: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables4_2019: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables5: Add another set of loops at the end of your code
        to add three more triangles. This time, move forward and up!
      courseF_artist_variables5_2018: Add another set of loops at the end of your
        code to add three more triangles. This time, move forward and up!
      courseF_artist_variables5_2019: Add another set of loops at the end of your
        code to add three more triangles. This time, move forward and up!
      courseF_artist_variables6: 'Now make the triangles to be 60 pixels wide, with
        60 pixel jumps.  '
      courseF_artist_variables6_2018: 'Now make the triangles to be 60 pixels wide,
        with 60 pixel jumps.  '
      courseF_artist_variables6_2019: 'Now make the triangles to be 60 pixels wide,
        with 60 pixel jumps.  '
      courseF_artist_variables6a: Build this design where the squares have 80 pixel
        sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables6a_2018: Build this design where the squares have 80
        pixel sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables6a_2019: Build this design where the squares have 80
        pixel sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables7: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables7_2018: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables7_2019: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables8: Rebuild the triangle code from the last puzzle, but
        this time use the `set length to` block to reset the `length` variable to
        `length`+10 at the end of each loop iteration.
      courseF_artist_variables8_2018: Rebuild the triangle code from the last puzzle,
        but this time use the `set length to` block to reset the `length` variable
        to `length`+10 at the end of each loop iteration.
      courseF_artist_variables8_2019: Rebuild the triangle code from the last puzzle,
        but this time use the `set length to` block to reset the `length` variable
        to `length`+10 at the end of each loop iteration.
      courseF_artist_variables9: See what happens when you repeat the code from the
        last puzzle 30 times instead of only 3!  Feel free to make your lines any
        color or pattern for some extra zest.
      courseF_artist_variables9_2018: See what happens when you repeat the code from
        the last puzzle 30 times instead of only 3!  Feel free to make your lines
        any color or pattern for some extra zest.
      courseF_artist_variables9_2019: See what happens when you repeat the code from
        the last puzzle 30 times instead of only 3!  Feel free to make your lines
        any color or pattern for some extra zest.
      courseF_artist_variablesFP: "**Freeplay:** Take what you've learned and make
        your own drawing. "
      courseF_artist_variablesFP_2018: "**Freeplay:** Take what you've learned and
        make your own drawing. "
      courseF_artist_variablesFP_2019: "**Freeplay:** Take what you've learned and
        make your own drawing. "
      courseF_artist_variables_challenge1: Can you create a `length` variable and
        use it to create this pattern?
      courseF_artist_variables_challenge1_2018: Can you create a `length` variable
        and use it to create this pattern?
      courseF_artist_variables_challenge1_2019: Can you create a `length` variable
        and use it to create this pattern?
      courseF_artist_variables_challenge2: You've now learned everything you need
        to know to make a pattern like this!
      courseF_artist_variables_challenge2_2018: You've now learned everything you
        need to know to make a pattern like this!
      courseF_artist_variables_challenge2_2019: You've now learned everything you
        need to know to make a pattern like this!
      courseF_bee_conditionals10: Collect all of the nectar and make all of the honey.
      courseF_bee_conditionals1_predict1: Check to see if there's a flower under the
        cloud. If there's a flower, get nectar.
      courseF_bee_conditionals2: 'Check underneath each cloud to see if it is hiding
        a flower before you get nectar.  '
      courseF_bee_conditionals3: 'Help the bee collect all of the nectar. '
      courseF_bee_conditionals4: Get all of the nectar using as few blocks as possible.
      courseF_bee_conditionals5: Collect all of the nectar using as few blocks as
        possible
      courseF_bee_conditionals7_predict2: Use the `if/else` block to collect nectar
        at flowers and make honey at honeycomb.
      courseF_bee_conditionals8: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseF_bee_for1: Collect the nectar from each flower using the fewest blocks
        possible.
      courseF_bee_for10: "**Challenge:** Take what you've learned about `for` loops
        and try to solve this problem. "
      courseF_bee_for10_2018: "**Challenge:** Take what you've learned about `for`
        loops and try to solve this problem. "
      courseF_bee_for10_2019: "**Challenge:** Take what you've learned about `for`
        loops and try to solve this problem. "
      courseF_bee_for11: What should your increment be to collect 15, then 12, then
        9, 6, 3 nectar?
      courseF_bee_for11_2018: What should your increment be to collect 15, then 12,
        then 9, 6, 3 nectar?
      courseF_bee_for11_2019: What should your increment be to collect 15, then 12,
        then 9, 6, 3 nectar?
      courseF_bee_for1_2018: Collect the nectar from each flower using the fewest
        blocks possible.
      courseF_bee_for1_2019: Collect the nectar from each flower using the fewest
        blocks possible.
      courseF_bee_for2: Write the code to help the bee collect all of the nectar.
      courseF_bee_for2_2018: Write the code to help the bee collect all of the nectar.
      courseF_bee_for2_2019: Write the code to help the bee collect all of the nectar.
      courseF_bee_for4: Help the bee collect all of the nectar.
      courseF_bee_for4_2018: Help the bee collect all of the nectar.
      courseF_bee_for4_2019: Help the bee collect all of the nectar.
      courseF_bee_for5: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for5_2018: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for5_2019: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for6: Try gathering this nectar by counting down from 5 to 1 by
        1.
      courseF_bee_for6_2018: Try gathering this nectar by counting down from 5 to
        1 by 1.
      courseF_bee_for6_2019: Try gathering this nectar by counting down from 5 to
        1 by 1.
      courseF_bee_for7: Try collecting these flowers using an increment of 2.
      courseF_bee_for7_2018: Try collecting these flowers using an increment of 2.
      courseF_bee_for7_2019: Try collecting these flowers using an increment of 2.
      courseF_bee_for8: "Ha a ciklus felfelé számol, akkor minden ciklusban hozzáadódik
        a lépésköz a változóhoz. Mi legyen a lépésköz, hogy 3,6,9 nektárt gyűjtsünk?\\\r"
      courseF_bee_for8_2018: "Ha a ciklus felfelé számol, akkor minden ciklusban hozzáadódik
        a lépésköz a változóhoz. Mi legyen a lépésköz, hogy 3,6,9 nektárt gyűjtsünk?\\\r"
      courseF_bee_for8_2019: "Ha a ciklus felfelé számol, akkor minden ciklusban hozzáadódik
        a lépésköz a változóhoz. Mi legyen a lépésköz, hogy 3,6,9 nektárt gyűjtsünk?\\\r"
      courseF_bee_for9: Use the `counter` variable to navigate this garden with the
        fewest number of blocks possible.
      courseF_bee_for9_2018: Use the `counter` variable to navigate this garden with
        the fewest number of blocks possible.
      courseF_bee_for9_2019: Use the `counter` variable to navigate this garden with
        the fewest number of blocks possible.
      courseF_bee_for_challenge1: 'Use this `for loop` to collect all of the nectar. '
      courseF_bee_for_challenge1_2018: 'Use this `for loop` to collect all of the
        nectar. '
      courseF_bee_for_challenge1_2019: 'Use this `for loop` to collect all of the
        nectar. '
      courseF_bee_for_challenge2: Oldd meg ezt a feladványt a lehető legkevesebb blokk
        felhasználásával.
      courseF_bee_for_challenge2_2018: Oldd meg ezt a feladványt a lehető legkevesebb
        blokk felhasználásával.
      courseF_bee_for_challenge2_2019: Oldd meg ezt a feladványt a lehető legkevesebb
        blokk felhasználásával.
      courseF_bee_functions2: Use the `get only nectar` function to collect the nectar
        from each flower.
      courseF_bee_functions3: Click "edit" to put code inside the `only make honey`
        function, then use it to solve this puzzle.
      courseF_bee_functions3a: Write a function that gets nectar if the bee is at
        a flower, otherwise it gets honey.  Use your function to solve the puzzle!
      courseF_bee_functions4: A "menj és gyűjts nektárt" függvény hatására a méh elfordul,
        nektárt gyűjt, majd visszatér a kiindulási pontra. Használd a függvényt, hogy
        az összes nektárt összegyűjtsd.
      courseF_bee_functions5a: Use the `move and check` function to collect all of
        the nectar.
      courseF_bee_functions6: Help the bee through the maze by turning left at flowers
        and right at honeycomb.
      courseF_bee_functions7: Rebuild your function from the last puzzle to solve
        this maze.
      courseF_bee_functions8a: Collect all the nectar or make all of the honey!
      courseF_bee_functionsPre7: Now try building a function to solve this maze.  How
        is it different from last time?
      courseF_bee_functions_challenge1: Create a new function to collect all the nectar
        and honey while there is a path ahead.
      courseF_bee_functions_challenge2: Use everything you have learned to complete
        this puzzle!
      courseF_bee_fwp2: Pull this code into a function, then call the function to
        check this row for nectar.
      courseF_bee_fwp3: Let's see if the function makes collecting these three rows
        of nectar any easier.
      courseF_bee_fwp4: Add a `length` parameter to the function so that it will still
        work when the row is a different length.
      courseF_bee_fwp5: Use this function to collect the nectar.
      courseF_bee_fwp6: Build a short and sweet solution to this puzzle.
      courseF_bee_fwp7: "**Challenge:** Modify your function to make honey as well."
      courseF_bee_fwp8: Use your new function to solve this spiral.
      courseF_bee_fwp9_predict1: Use your new function to solve this puzzle.
      courseF_bee_fwp_challenge1: Use one `for loop` in a function with a `length`
        parameter to collect all of the corn.
      courseF_bee_fwp_challenge2: 'Use one `for loop` in a function with a `length`
        parameter to collect all of the vegetables in each row. '
      courseF_bee_variables_1_2018: Finish this code so that the bee can collect all
        of the honey and nectar.
      courseF_bee_variables_1_2019: Finish this code so that the bee can collect all
        of the honey and nectar.
      courseF_bee_variables_2_2018: Edit your solution in one place so that the bee
        can collect all of the honey and nectar.
      courseF_bee_variables_2_2019: Edit your solution in one place so that the bee
        can collect all of the honey and nectar.
      courseF_bee_variables_3_2018: Subtract one from the variable each time through
        the loop if you want to use the same function to solve this level.
      courseF_bee_variables_3_2019: Subtract one from the variable each time through
        the loop if you want to use the same function to solve this level.
      courseF_bee_variables_4_2018: Edit the code to work for this puzzle.
      courseF_bee_variables_4_2019: Edit the code to work for this puzzle.
      courseF_bee_variables_5_2018: Create your own code to solve this puzzle
      courseF_bee_variables_5_2019: Create your own code to solve this puzzle
      courseF_bee_variables_6_2018: "**Challenge** Now give this puzzle a try!"
      courseF_bee_variables_6_2019: "**Challenge** Now give this puzzle a try!"
      courseF_bee_variables_7_2018: This puzzle is a little different.  What do you
        need to do to solve it?
      courseF_bee_variables_7_2019: This puzzle is a little different.  What do you
        need to do to solve it?
      courseF_bee_variables_8_2018: How many nectar will the bee collect from this
        flower?
      courseF_bee_variables_8_2019: How many nectar will the bee collect from this
        flower?
      courseF_playlab_variables1a: Variables can be used to store text that you want
        to use later.  Have Kiki, the soccer player,  scream "Goal!" by assigning
        that text to the `shout` variable.
      courseF_playlab_variables2b: Insert the variable `color` into the middle of
        a sentence by putting it into the empty slot in the `join` block.
      courseF_playlab_variables3b_josh: 'Help Kiki have a conversation with Brian
        by using the variable `age` in all of the places where age `12` should be
        used. '
      courseF_playlab_variables4b: Put the variables in the correct places to create
        this conversation.
      courseF_playlab_variables5c: Let's combine the `ask` block with an `if/else`
        statement to have some fun!
      courseF_playlab_variables6c: In the rest of this stage, we're going to build
        a game that you control!
      courseF_playlab_variables7b: Create some questions and weave the answers together
        into your very own story.
      courseF_playlab_variables7c: Make the game do something by asking the user to
        guess a color.
      courseF_playlab_variables8c: Use the variables to make the game more personal.
      courseF_playlab_variables_challenge1: 'Use these blocks to make the actors share
        a knock-knock joke. '
      courseF_playlab_variables_challenge2: This game will use variables to keep track
        of points.  Tag Cat to get 2 points. Tag Penguin to get 3 points.  When Cat
        and Penguin touch, take points away. Get exactly 10 points to win!
      courseF_video_createFunctions: We don't have a video for creating functions,
        yet. This is a placeholder.
      coursea_maze_ramp1_2018: For this puzzle, snap the blocks together and click
        "▶ Run"!
      coursea_maze_ramp1_2019: For this puzzle, snap the blocks together and click
        "▶ Run"!
      express_maze_debugging9_2019: Használd az eszköztár blokkjait a programhoz.
        Vidd a madarat a malachoz.
      flappy_1: Csatolj egy blokkot a "kattintáskor" blokkhoz, majd nyomd meg a "Futtatás"-t.
        Kattints vagy érintsd meg a képernyőt, hogy Flappy-t a célba segítsd.
      flappy_11: Hozz létre egy saját Flappy játékot! Meg tudod változtatni a kinézetet
        és az összes szabályt, sőt még a gravitációt is. Ha elkészültél, kattints
        a Kész gombra, hogy a barátaid is kipróbálhassák a játékodat a telefonjaikon.
      flappy_2: Nos mi hozzáadtuk a talajt. Csatolj egy blokkot a "ha becsapódik a
        talajba" blokkhoz. Ha Flappy ütközik, itt a "VÉGE A JÁTÉKNAK".
      flappy_3: A "futtatáskor" blokk segítségével fut végig a programod, amikor a
        játék elindul. Próbálj különböző sebességeket beállítani és elrepülni a célig.
      flappy_4: Flappy keresztül fog repülni az akadályokon, hacsak te nem írsz egy
        olyan parancsot, amitől nekik ütközik. Csatolj egy blokkot a "amikor akadálynak
        ütközik" blokkhoz. Ha Flappy nekiütközik az első csöveknek, akkor itt a "VÉGE
        A JÁTÉKNAK".
      flappy_5: Használjunk eredményjelzőt, és nőjön eggyel a pontszám, amikor Flappy
        áthalad egy akadályon. Add hozzá a "ha átjut egy akadályon" blokkhoz, és azután
        szerezz pontot Flappy-vel átrepülve az első csövek között.
      flappy_6: Lássuk, hogy át tudsz-e menni az első akadályon, ha átállítod Flappy
        csapásait kisebbre vagy nagyobbra!
      flappy_7: A következőkben próbáld megváltoztatni a jelenetet úgy, hogy a "futtatáskor"
        blokkhoz egy újabb blokkot csatolsz.
      flappy_8: Bármikor átállíthatod a játék környezetét, nem csak akkor, amikor
        elkezdődik. Próbáld ki a VÉLETLEN hátteret különböző eseményekhez párosítani,
        például ahhoz, ha Flappy átjut egy akadályon.
      flappy_9: Változtassuk meg úgy a dolgokat, hogy amikor leüt egy akadályt, ahelyett
        hogy véget érne a játék, inkább állítsa vissza a pontokat 0-ra.
      frozen circle: A kör egy különleges forma. Ki tudod találni, mit kell beírni
        a kérdőjelek helyére, hogy meg tudjunk rajzolni egy kört?
      frozen circle function: Használd a "készíts kört" blokkot, hogy 10 egymást átfedő
        kör készüljön. Ne felejts el ugrani a körök között!
      frozen circle function in circle: Most rajzoljunk 20 egymást átfedő kört! 18
        fokot kell fordulni minden kör rajzolása után.
      frozen circle function with parameter: Van itt egy olyan "készíts kört" blokk,
        ami különböző méretű köröket tud készíteni. Fel tudod használni arra, hogy
        készíts egy kicsi, 5 képpont méretű, és egy nagyobb, 10 képpont méretű kört?
      frozen cross: Ágyazd be az "ismételd" blokkot az utasítások közé egy plusz jel
        elkészítéséhez. Észrevetted, hogy Elza előre és hátra is tud mozogni?
      frozen cross rotate: Most próbáld meg 10 alkalommal ismételni. Hány fokos szögben
        kell elfordulnod a vonalak rajzolása közben?
      frozen cross rotate dense: 'Most ismételjük meg 90-szer! Hányszor fér bele a
        90 a 360-be? Tipp: egy igazán kis számra gondolok.'
      frozen diamond: |-
        Rajzolj paralelogrammát! Használj ismétlést a blokkok körül!
        A paralelogramma olyan, mint a téglalap, de nem csak 90 fokos szögei lehetnek. Ennek például 120 és 60 fokos szögei vannak.
      frozen diamond mini snowflake: 'Tudtad, hogy minden hópehelynek másmilyen a
        formája? Készítsünk most egy hópelyhet egy második "ismételd" blokkal: rajzoljuk
        meg a parallelogrammát négyszer, a parallelogrammák között pedig mindig forduljunk
        el 90 fokot.'
      frozen diamond snowflake: Most készítsünk hópelyhet úgy, hogy 10 parallelogrammát
        rajzolunk, és mindegyik után 36 fokot fordulunk jobbra.
      frozen freeplay: |-
        Hivatalosan is egy mester művész lettél!
        Hozz létre egy téli csodaországot!
      frozen line: Szia! Elza vagyok Arendelle-ből. Segíts nekem létrehozni egy vonalat.
      frozen perpendicular: Most lássuk, sikerül-e két olyan vonalat létrehozni, amelyek
        90 fokos szöget zárnak be? Használnod kell majd a fordulj és a mozgasd blokkokat.
      frozen snowflake branch: Próbáld használni a "hozz létre egy hópehely ágat"
        blokkot, hogy létrehozz három ágat. Ez már kezd úgy kinézni, mint egy hópehely.
      frozen snowflake full: Most ismételjük meg 8-szor, hogy egy gyönyörű hópelyhet
        készítsünk!
      frozen snowflower: Egészen összetett hópihe mintákat is tudunk készíteni egyszerű
        formákból. Meg tudod rajzolni ezt a mintát 5 darab 5 képpont méretű és 5 darab
        10 képpont méretű kör felhasználásával?
      frozen square iterative: Úgy tűnik, fél úton járunk ahhoz, hogy elkészüljön
        egy négyzet. Rajzoljunk meg négy vonalat, hogy létrehozzuk a négyzetet.
      frozen square loop: Szia! Anna vagyok Arendelle-ből! Készítsünk négyzetet az
        ismételd blokkal, így kevesebb blokkot kell felhasználnunk. Hányszor (???)
        kell az ismételd blokknak lejátszania a benne lévő blokkokat, hogy elkészüljön
        a négyzet?
      frozen square loop 3x: Most készítsünk három négyzetet, és minden négyzet megrajzolása
        után forduljunk el. Gondoskodj róla, hogy minden négyzet után 120 fokot forduljunk.
      frozen square snowflake: Tudsz készíteni egy hópelyhet az ismételd blokkal?
        rajzoljunk négyzetet 10 alkalommal, és közben használjuk a fordulj blokkot
        36 fokos elfordulásokkal minden négyzet után.
      grade2_collector_10: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_10_2018: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_10_2019: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_A: Help Laurel collect all of the treasure.
      grade2_collector_A_2018: Help Laurel collect all of the treasure.
      grade2_collector_A_2019: Help Laurel collect all of the treasure.
      grade5_artist_binary11: 'Szabad játék: itt egy üres vászon amire azt rajzolsz,
        amit csak akarsz. Jó játékot!'
      grade5_artist_binary4: Meg tudod rajzolni ezt a mintát mindössze három bináris
        számjegy (0 és 1) ismétlésével?
      grade5_artist_binary5: |-
        Minden bináris sorozat egy sort jelöl ezen a képen.
        Át tudod rendezni a blokkokat úgy, hogy egy mosolygós fejet rajzoljanak a mogorva fej helyett?
      grade5_artist_binary8: Fejezd be a rajzot.
      grade5_artist_binary9: |-
        Itt egy nagyobb felbontású vászon - 16 x 16 pixeles!

        Nézd meg, mi történik, amikor elkezdünk játszani a bitekkel!
      grade5_pixelation: Encode an image of anything you like using binary. The binary
        language will be represented with '0' and '1' only.
      iceage_click_hello: 'Can you help Sid call for his friends when you click on
        him? '
      iceage_free_play: 'Time to create your own game or story! '
      iceage_hello1: Help Sid say "Hello!" by dragging the `say` block out and connecting
        it to the bottom of the `when run` event.
      iceage_hello2: Help Manny and Sid greet each other by using the the `actor ___
        say` block twice.
      iceage_move_events: Write the code to help Scrat get all of the acorns!
      iceage_move_to_actor: Connect a block to the `when actor touches` event to play
        a sound when Diego finds Manny.
      iceage_move_to_flag: Scrat is looking for his acorn! Can you help him move the
        last 200 pixels?
      iceage_repeat: Help Granny get some exercise by moving left and right repeatedly.
      iceage_sound_and_points: 'Can you finish this program to make it so that you
        both **play a sound** and **score a point** when Sid and Granny collide? '
      iceage_throw_hearts: Use the `actor __ throw` command to have Sid (actor 1)
        throw hearts at Granny (actor 2) and set Granny's mood to happy when she gets
        hit with them.
      iceage_warn_ice_age: Change the scene to an icy background and set Sid’s (actor
        1) speed to fast.
      k-1 maze 1: El tudsz juttatni nyugatra, hogy elkapjam a malacot?
      mike3bit: We start you with the 4x2 image Maddie was creating, but we've left
        out the last few pixels. Finish off the image by figuring out which colors
        are missing and encoding them.
      mike3bitbird: Here's an example of an image made with 3-bit color. Try changing
        it to understand how it works. If you want to reset the image, press "Start
        Over".
      mike3bitfreeplay: Make something awesome and share it with your classmates!
        You can copy and paste the value of a pixel to use it repeatedly.
      mike3bitmario: "A careless binary coder typed in ONE extra 0 or 1 somewhere
        within this image's data. The extra bit that is causing Mario to glitch out!
        \n\nDelete the extra bit to restore Mario back to normal!"
      ramp_artist_loops1: Lépj előre 60 képpontot, hogy teljesítsd ezt a feladványt.
      ramp_artist_loops1_2018: Lépj előre 60 képpontot, hogy teljesítsd ezt a feladványt.
      ramp_artist_loops1_2019: Lépj előre 60 képpontot, hogy teljesítsd ezt a feladványt.
      ramp_artist_loops2: Lépj előre ötször és készítsd el ezeket a színes vonalakat.
      ramp_artist_loops2_2018: Lépj előre ötször és készítsd el ezeket a színes vonalakat.
      ramp_artist_loops2_2019: Lépj előre ötször és készítsd el ezeket a színes vonalakat.
      ramp_artist_loops3: Használj egy "ismétlés" ciklust hogy öt színes gondolatjelet
        rajzolj.
      ramp_artist_loops3_2018: Használj egy "ismétlés" ciklust hogy öt színes gondolatjelet
        rajzolj.
      ramp_artist_loops3_2019: Használj egy "ismétlés" ciklust hogy öt színes gondolatjelet
        rajzolj.
      ramp_artist_loops4: Mi történik, ha 72 fokot jobbra fordulsz mindezek után a
        cikluson belül?
      ramp_artist_loops4_2018: Mi történik, ha 72 fokot jobbra fordulsz mindezek után
        a cikluson belül?
      ramp_artist_loops4_2019: Create this star pattern by looping a sequence of "move
        forward" and "turn right by 144 degrees" blocks.
      ramp_artist_loops5: Használj ciklusokat, hogy megrajzold a lépcsőt.
      ramp_artist_loops5_2018: Használj ciklusokat, hogy megrajzold a lépcsőt.
      ramp_artist_loops5_2019: Használj ciklusokat, hogy megrajzold a lépcsőt.
      ramp_artist_loops6: Szerkeszd át a ciklust, hogy megrajzold ezt a lépcsőt.
      ramp_artist_loops6_2018: Szerkeszd át a ciklust, hogy megrajzold ezt a lépcsőt.
      ramp_artist_loops6_2019: Szerkeszd át a ciklust, hogy megrajzold ezt a lépcsőt.
      ramp_artist_loops7: Keress egy mintát, és rövidítsd le ezt a kódot ciklusok
        használatával!
      ramp_artist_loops7_2018: Keress egy mintát, és rövidítsd le ezt a kódot ciklusok
        használatával!
      ramp_artist_loops7_2019: Keress egy mintát, és rövidítsd le ezt a kódot ciklusok
        használatával!
      ramp_artist_loops8: Keress egy mintát, és rövidítsd le ezt a kódot ciklusok
        használatával.
      ramp_artist_loops8_2018: Keress egy mintát, és rövidítsd le ezt a kódot ciklusok
        használatával.
      ramp_artist_loops8_2019: Keress egy mintát, és rövidítsd le ezt a kódot ciklusok
        használatával.
      ramp_artist_loops9: Oldd meg ezt a feladványt egy négyzet megrajzolásával.
      ramp_artist_loops9_2018: Oldd meg ezt a feladványt egy négyzet megrajzolásával.
      ramp_artist_loops9_2019: Oldd meg ezt a feladványt egy négyzet megrajzolásával.
