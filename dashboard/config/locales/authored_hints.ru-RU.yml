---
ru-RU:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: Если ты воспользуешься блоком "двигаться вперёд на 100
          пикселей", то я нарисую линию автоматически.
        2-3_Artist_1_new_b: Сложности с поворотами на углах? Используй блок "повернуть
          направо на 90 градусов".
      2-3 Artist 11:
        2-3_Artist_11_a: 'Возникли проблемы с углами? Тебе нужно пройти 360 градусов
          за 8 ходов. Сколько будет 360 разделить на 8? '
      2-3 Artist 12:
        2-3_Artist_12_a: Всего в круге 360 градусов, так что если художник во время
          цикла будет поворачиваться на 1 градус, то ему надо сделать это 360 раз.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: Кажется, художник смотрит не в ту сторону. Поверни его
          перед тем, как он начнёт рисовать.
      2-3 Artist 3new:
        2-3_Artist_3new_a: Сколько будет 100 - 70? По условию задачи, это и есть высота
          шляпы!
        2-3_Artist_3new_b: Кажется, художник смотрит не в ту сторону. Поверни его
          перед тем, как он начнёт рисовать.
      2-3 Artist 4:
        2-3_Artist_4_a: Чтобы закончить дом, всё, что нам нужно, это нарисовать квадрат!
      2-3 Artist 6:
        2-3_Artist_6_a: 'Чтобы рисовать острые углы, тебе нужно поворачивать _больше_,
          чем при рисовании квадрата.   '
        2-3_Artist_6_b: Поскольку я уже повёрнут направо, лучше всего двигаться вперёд,
          а затем повернуться налево, чтобы создать треугольник.
        2-3_Artist_6_c: Каждая сторона треугольника имеет ту же длину, что и каждая
          сторона квадрата, а именно... 100 пикселей!
      2-3 Artist 7:
        2-3_Artist_7_a: Простейший способ решить эту головоломку - нарисовать первый
          квадрат и закончить направлением художника вниз, прежде чем он начнёт свой
          второй квадрат.
      2-3 Artist 8:
        2-3_Artist_8_a: Если ты поделишь 200 пополам, то сколько пикселей в ширину
          нужно каждому квадрату?
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: Этот ромб на самом деле - обычный квадрат
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_a: Помни, что тебе нужна крестовина на 10 пикселей
          _шире_... Так что убедись что **добавил** 10 к числу, которое ты меняешь.
        2-3_Artist_Debugging_10_b: "**Реши это методом проб и ошибок!**\nИзменяй только
          одно число за раз. \nВыясни, что делает каждое из чисел в коде. \nЕсли запутаешься,
          просто нажми на \"Начать сначала\", и все изменения сотрутся."
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'Подсказка: длина каждого уса 75 пикселей.'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: Один из поворотов меньше, чем нужно, на 15 градусов.
        2-3_Artist_Debugging_3_b: Если программа выполняется слишком быстро, то чтобы
          посмотреть, что произошло, попробуй замедлить её с помощью ползунка.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: Что будет, если художник пройдёт или прыгнет назад
          после того, как он нарисовал первую линию?
      2-3 Artist Debugging 8:
        2-3_Artist_Debugging_8_a: |-
          Сколько раз моя фигура повторилась?

          Сколько раз она _должна_ повториться?

          Где ты можешь изменить это в программе?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: Художник должен повернуться на 60 градусов влево,
          прежде чем начинать рисовать!
        2-3_Artist_Debugging_9_b: Тебе не нужно добавлять другой блок, чтобы правильно
          повернуть, просто добавь 60 градусов имеющемуся блоку 'повернуть налево'!
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: Каждый квадрат имеет стороны в 100 пикселей, и это
          значит, что тебе надо двинуться вперёд на 175 пикселей, прежде чем рисовать
          второй квадрат.
        2-3_Artist_Functions_1_b: Не волнуйся рисовать перекрывающие линии, чтобы
          сделать стёкла.
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: Тебе нужно поменять не только длину сторон функции,
          но ещё и угол, на который художник поворачивается между каждой стороной.
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: Попробуй сперва воспроизвести код, чтобы увидеть,
          что нужно добавить.
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: |-
          Твоя программа может быть такой:

          -   Используй функцию
          -   Двигайся вперёд на 100 + 75 пикселей
          -   Используй функцию
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: Художник должен повернуться на 120 градусов между
          каждым квадратом, чтобы завершить эту задачу.
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_a: "Вспомни код из прошлой задачи: \n\n<xml>\n  <block
          type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">8</title>\n        <statement
          name=\"DO\">\n          <block type=\"draw_colour\" inline=\"true\">\n            <value
          name=\"COLOUR\">\n              <block type=\"colour_random\"/>\n            </value>\n
          \           <next>\n              <block type=\"draw_turn_by_constant_dropdown\">\n
          \               <title name=\"DIR\">turnRight</title>\n                <title
          name=\"VALUE\" config=\"45,60,90,120,180\">45</title>\n                <next>\n
          \                 <block type=\"draw_move_by_constant\">\n                    <title
          name=\"DIR\">moveForward</title>\n                    <title name=\"VALUE\">50</title>\n
          \                   <next>\n                      <block type=\"draw_turn_by_constant_dropdown\">\n
          \                       <title name=\"DIR\">turnLeft</title>\n                        <title
          name=\"VALUE\" config=\"45,60,90,120,180\">90</title>\n                        <next>\n
          \                         <block type=\"draw_move_by_constant\">\n                            <title
          name=\"DIR\">moveForward</title>\n                            <title name=\"VALUE\">50</title>\n
          \                         </block>\n                        </next>\n                      </block>\n
          \                   </next>\n                  </block>\n                </next>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
        2-3_Artist_Loops_New_11_b: Твой новое действие должно быть в **конце** кода
          внутри цикла.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: Перед началом рисования художник должен повернуться
          налево на 60 градусов.
        2-3_Artist Loops_New_12_b: После того, как художник пройдёт 100 пикселей прямо,
          он должен повернуть направо на 120 градусов, чтобы нарисовать острый угол.
        2-3_Artist Loops_New_12_c: Художнику надо повернуть только на 60 градусов,
          чтобы нарисовать тупой угол.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: "В конце каждого ромба, художник уже смотрит в
          нужную сторону и готов рисовать следующий. \n\nТак что тебе не нужно добавлять
          лишний блок `повернуть влево` перед следующей итерацией."
        2-3_Artist_Loops_New_13_b: "Чтобы нарисовать каждый алмаз, художник должен:
          \n\n-   двигаться\n-   повернуть вправо на 120 градусов\n-   двигаться\n-
          \  повернуть вправо на 60 градусов\n\nЗатем всё это повторить!"
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: Художнику необходимо повернуть направо на 45 градусов,
          прежде чем он начнет рисовать.
        2-3_Artist_Loops_New_9_b: Эта "V" - половина квадрата. Какой код должен быть
          что-бы нарисовать такую фигуру?
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: Не забудь поместить все серые блоки внутрь своего
          цикла.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: "Нужна помощь с углами? \n**360/12 = 30**"
        2-3_Artist_Nested_Loops_3_b: Не забудь вставить весь "серый код" и блок поворота
          внутрь цикла.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: "Нужна помощь с углами? \n**360/12 = 30**"
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: |-
          Попробуй использовать блок "прыжок вперед" что-бы оказаться в верхней части одного квадрата где ты начнешь следующий.

          Если твои квадраты 20 пикселей в высоту и находятся на растоянии в 20 пикселей друг от друга, как далеко тебе нужно прыгнуть?
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: |-
          На сколько тебе нужно повернуть в каждом проходе?

          Сколько будет 360 разделить на 10?
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          Не находишь нужный угол?

          **360 / 12 = 30**
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: Усердно пытаешься понять, как разместить блоки?
          Попробуй взаимодействовать с красным цветком точно так, как с фиолетовым!
        2-3_Bee_Conditionals_14_b: Если бы вместо красного цветка был фиолетовый,
          смог бы ты понять, как использовать дополнительный цикл `повторить`, чтобы
          сократить количество кода?
        2-3_Bee_Conditionals_14_c: |-
          Попробуй разделить задачу на две отдельные:

          ![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)

          1.  Собери нектар 3 раза
              -   Двигаться вперёд 5 раз
              -   Проверь, есть ли в клетке нектар, если да: собери его
              -   Повернуть влево
          2.  Приготовь мёд
              -   Двигайся вперёд один раз
                  Приготовь два мёда
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 'Помни: У фиолетовых цветов есть только 0 или 1
          нектар, и они могут меняться с каждым запуском программы.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: Код будет короче всего, если ты будешь использовать
          один цикл для движения вперёд, другой для сбора нектара, а третий для приготовления
          мёда.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 'Помни: Фиолетовые цветы случайно принимают значения
          между 0 и 1 нектаром после запуска программы!'
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: Если ты нашёл и исправил неправильный блок, ты заметил,
          что некоторые шаблоны можно упросить, используя блок "повторить"?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: Если ты нашёл и исправил неправильный блок, ты заметил,
          что некоторые шаблоны можно упросить, используя блок "повторить"?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: Есть ли место, в котором пчела делает что-то бессмысленное?
          Что будет, если поменять этот блок?
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: Вы не должны использовать цикл с функцией. Попробуйте
          переместиться, используя функцию, затем ещё раз переместиться при помощи
          функции снова.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: Вы не должны использовать цикл с функцией. Попробуйте
          переместиться, используя функцию, затем ещё раз переместиться при помощи
          функции снова.
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: "Если головоломка кажется сложной, то попробуйте построить
          немного функцию в то время.\nДобавьте некоторые блоки, а затем попробуйте
          его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте это
          задание! \n ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: |-
          Если головоломка покажется сложной, попробуй создавать свою функцию понемногу.

          Добавь несколько блоков, а затем испытай их. Добавь еще блоки и испытай еще раз.  Скоро у тебя все получится!
        2-3_Bee_Functions_8_b: |-
          Помните, что надо строить ваш код внутри зелёного блока функции.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: В конце должно быть четыре блока внутри цикла.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: В цикле должно быть 6 блоков.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: Тебе нужно взять два отдельных блока"повторить", один
          после другого.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: В конце должно быть 5 блоков внутри цикла.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: Первое действие - это поворот, а не шаг.
        2-3_Bee_Loops_4A_b: Последняя часть программы может быть вне цикла.
        2-3_Bee_Loops_4A_c: Если ты ещё не определил, где должны быть циклы, попробуй
          написать программу без них, а затем посмотри, что можно поместить в блок
          `повторить`.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: Если ты не видишь блоки, которые нужно поставить внутрь
          блока "повторить" сразу, напиши код без циклов, а затем найди закономерность.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: Если ты не видишь блоки, которые нужно поставить внутрь
          блока "повторить" сразу, напиши код без циклов, а затем найди закономерность.
        2-3_Bee_Loops_6_b: Когда ты закончишь, внутри блока"повторить" должно быть
          6 блоков.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: Первое действие - это поворот, а не шаг.
        2-3_Bee_Loops_7_b: 'Если ты не можешь представить цикл с самого начала, то
          попробуй написать сначала всю программу линейно, а затем найди закономерность.  '
      2-3 Maze 1:
        2-3_Maze_1_a: Чтобы использовать блок `двигаться вперёд`, перетяни его из
          панели в рабочую область и соедини его с блоком `при запуске`.
      2-3 Maze 16:
        2-3_Maze_16_a: Если сложно увидеть закономерность, то попробуй закодировать
          сначала всё без циклов и посмотри, какие что будет всё время время повторяться.
        2-3_Maze_16_b: "Чтобы поставить много блоков внутрь цикла \"повторить\", нужно
          перетащить цикл в рабочую область, затем перетащить все блоки из старой
          программы в него. \n\nПодключи всё к блоку \"при запуске\", и всё получится!"
      2-3 Maze 6:
        2-3_Maze_6_a: Эту головоломку можно решить двумя способами!
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: Если сложно увидеть закономерность, то попробуй закодировать
          сначала всё без циклов и посмотри, какие что будет всё время время повторяться.
        2-3_Maze_Loops_17_b: Не удалён ли стартовый код? Нажми "начать заново", чтобы
          вернуть его!
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: Если сложно увидеть закономерность, то попробуй закодировать
          сначала всё без циклов и посмотри, какие что будет всё время время повторяться.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: Если ты застрял, попробуй создать код без циклов и найди
          закономерность.
        2-3_Maze_Loops_19_b: Вложение одного цикла внутрь другого может помочь уменьшить
          количество используемых блоков.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: Найдите закономерность лестничного шага в лабиринте,
          чтобы понять, как использовать цикл.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: Если не видишь закономерность лестничного шага, попробуй
          закрыть блокированные пути пальцами.
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: Убедитесь, что в вашем цикле художник прыгает вверх и вниз
          после каждой линии.
      4-5 Artist 3:
        4-5_Artist_3_a: |-
          Если клумба имеет 600 пикселей в периметре, и две стороны длиной в 200 пикселей, то вот что надо сделать, чтобы получить короткие стороны:

          **600 - 200 - 200 = 200**

          Это значит, что к коротким сторонам нужно прибавить 200 пикселей.

          \*\* Сколько будет 200 \* 2?\*\*
        4-5_Artist_3_b: Если вы не видите, где должен быть цикл повтора, попробуйте
          создать сначала всё решение, а затем найти шаблон.
      4-5 Artist 4:
        4-5_Artist_4_a: |-
          В круге 360 градусов!

          Столько раз надо повторить этот код(за раз поворачиваясь на 1 градус), чтобы получить круг!
      4-5 Artist 5:
        4-5_Artist_5_a: |-
          Метод проб и ошибок хорош, но вы можете решить задачу, разделив 90-градусный угол на трети.

          **90 / 3 = **\_****
      4-5 Artist 7:
        4-5_Artist_7_a: 'Который угол наименьший? С какого угла должен начать художник? '
      4-5 Artist 8:
        4-5_Artist_8_a: "Длинные стороны по 240 пикселей. Значит, что две короткие
          стороны длиной:\n\n**800 - 240 - 240 = 320**\n\nСколько будет **320/2**
          ? "
        4-5_Artist_8_b: "Рисунок можно сделать двумя способами! \n\n-   Нарисуйте
          два прямоугольника длиной **120** и шириной **160** с общей стороной;\n
          \   или\n-   Нарисуйте один прямоугольник длиной **240** и шириной **160**,
          а затем добавьте линию посередине."
      4-5 Artist 9:
        4-5_Artist_9_a: Когда треугольник равносторонний, то все углы и стороны равны.
        4-5_Artist_9_b: Вам надо нарисовать три треугольника одного размера. Не забудьте
          прыгать на новую позицию после каждого треугольника.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: Вам нужно только нарисовать треугольник снаружи,
          чтобы выполнить задание.
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: Если у круга 360 градусов, и каждый цикл поворачивается
          на 3 градуса, то сколько циклов нужно, чтобы нарисовать полкруга?
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: Поскольку квадраты стороной по 20 пикселей, то нужно
          прыгнуть на 20 пикселей, прежде чем приступить к следующему квадрату.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: Осторожнее с вытаскиванием всего кода из панели всякий
          раз, когда вы пытаетесь сделать новый.
        4-5_Artist_Patterns_3_b: Если ваш код стал слишком запутанным, то вы всегда
          можете кликнуть "Начать Сначала" и попытаться ещё раз!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: "Когда художник завершил каждый алмаз, то он направлен
          в противоположную сторону от туда, откуда он начнёт следующую фигуру. \n\nНа
          сколько градусов ему надо повернуться, чтобы он был направлен прямо?"
      4-5 Bee Conditionals 4:
        remember_quantum: "\\*\\* Помни: \\*\\* эта головоломка меняется при каждом
          запуске.  \n\nДля выполнения этого задания тебе потребуется блок условной
          инструкции («если» или «если/или же»)."
      4-5 Bee Conditionals 5:
        remember_quantum: "\\*\\* Помни: \\*\\* эта головоломка меняется при каждом
          запуске.  \n\nДля выполнения этого задания тебе потребуется блок условной
          инструкции («если» или «если/или же»)."
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: Вы можете решить задачу, используя только блоки
          в рабочей области. В каком порядки они должны быть?
        4-5 Bee Conditionals 6_b: Убедитесь, что вы проверяете то, что у цветка более
          **0** нектаров хотя бы **3** раза, чтобы решить задачу.
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: Если вы не можете выяснить ошибку, попробуйте запустить
          код, чтобы посмотреть, что идёт не так.
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: Попробуйте рассмотреть задачу как длинный прямоугольник,
          где пчеле надо двигаться вперёд, затем повернуть налево несколько раз, чтобы
          пройти путь.
      4-5 Maze 10:
        4-5_Maze_10_a: |-
          Если вы не видите, как решить задачу при помощи циклов, попробуйте сначала решить её "в лоб", а затем найти шаблон.

          Что надо положить в "повторить", чтобы укоротить код?
      4-5 Maze 4:
        4-5_Maze_4_a: Если у вас есть проблемы с постановкой повтора, попробуйте закодировать
          всё сразу и найти затем шаблон.
      4-5 Maze 5:
        4-5_Maze_5_a: Попробуйте использовать цикл повтора, если нужно более двух
          "двигаться вперёд" подряд.
        4-5_Maze_5_b: Вы можете использовать более одного цикла повтора здесь.
      4-5 Maze 6:
        4-5_Maze_6_a: "Попробуйте проложить путь своим пальцем. \nНайдёте ли вы кратчайший
          путь?"
      4-5 Maze 7:
        4-5_Maze_7_a: "**Хотите укоротить код как можно больше?** \n\nИщите шаблоны
          в блоках. Видите что-то повторяющееся? Попробуйте заменить это циклом!"
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: "\\*\\* 360 / 36 =? \\*\\*"
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: |-
          Не забудьте сделать поворот поворот внутреннего цикла.

          Вам надо зациклить 6 треугольников на 360 градусах.

          **360 / 6 = ?**
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: |-
          Эта конструкция повторится 10 раз на 360 градусах.

          **360 / 10 = ?**
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: |-
          Вам надо повторить фигуру 6 раз на 360 градусах.

          **360 / 6 = ?**
      4-5 While Loops 8:
        4-5_While_Loops_8_a: У каждого элемента должен быть свой цикл "пока".
      Course 4 Artist 11:
        Course_4_Artist_11_a: 'Половина шестиугольника имеет **длину в 30 п.** и поворачивает
          направо на **60 градусов**.  '
        Course_4_Artist_11_b: '2/3 треугольника имеет **длину в 80 п.** и поворачивает
          направо на **120 градусов**. '
      Course 4 Artist 12:
        Course_4_Artist_12_a: 'Каждая повторяемая фигура - комбинация **половины шестиугольника**,
          а затем **2/3 треугольника**. '
        Course_4_Artist_12_b: 'Форма блока почти такая же, что и в последней задаче,
          но половина шестиугольника стала немного больше. '
        Course_4_Artist_12_c: |-
          1.  The first three lines are 60 pixels long and you need to turn 60 degrees.

          2.  The next two lines are 80 pixels long and you need to turn 120 degrees
        Course_4_Artist_12_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#843179</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat">
                      <title name="TIMES">6</title>
                      <statement name="DO">
                        <block type="controls_repeat">
                          <title name="TIMES">3</title>
                          <statement name="DO">
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">60</title>
                              <next>
                                <block type="draw_turn_by_constant">
                                  <title name="DIR">turnRight</title>
                                  <title name="VALUE">60</title>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="controls_repeat">
                              <title name="TIMES">2</title>
                              <statement name="DO">
                                <block type="draw_move_by_constant">
                                  <title name="DIR">moveForward</title>
                                  <title name="VALUE">80</title>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">120</title>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 Artist 6:
        Course_4_Artist_6_a: Здесь 3 треугольника в пределах 360 градусов...сколько
          раз 3 входит в 360?
      Course 4 Artist 8a:
        Course_4_Artist_8a: |-
          Хотите знать, насколько надо повернуться?

          Здесь 3 треугольника в пределах 360 градусов.

          Сколько раз 3 входит в 360?
      Course 4 Artist 9:
        Course_4_Artist_9_a: "Хотите знать то, насколько повернуться? \n\nЧто будет,
          если 360 разделить на 10?"
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_a: Этот код использует два цикла. Один
          из них считает от 1 до 8, другой - от 8 до 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Каждый 'пока цикл' имеет три повтора.
          Первый рисует левый набор единиц, второй рисует нули посередине и третий
          рисует единицы справа.
        Course_4_Artist_Binary_Free_Play_2b_c: В каждом повторе нужен 'счётчик' для
          единиц и '16-(2\*счётчик)' для нулей.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Решение:**

          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops 11:
        Course_4_Artist_For_Loops_11_a: "С каждой фигурой угол поворота будет меняться!
          \n\nИспользуйте математический блок для ввода 360, разделённого на число
          сторон фигуры, чтобы получить текущий угол. "
      Course 4 Artist For Loops 11a:
        Course_4_Artist_For_Loops_11a_a: '360, разделённое на число сторон фигуры,
          есть число градусов, на которое нужно повернуть. '
        Course_4_Artist_For_Loops_11a_b: 'Каждый раз вам надо идти вперёд на длину
          числа сторон, взятой 10 раз. '
      Course 4 Artist For Loops 3:
        Course_4_Artist_For_Loops_3_a: Убедитесь, что используете `counter` в качестве
          расстояния, чтобы цикл `for` управлял движением.
      Course 4 Artist For Loops 4:
        Course_4_Artist_For_Loops_4_a: "\\*\\* Какое наименьшее число вам понадобиться?\\\nКакое
          наибольшее число?\\\nНасколько большим является увеличение каждый раз?\\*\\*
          \n\nТакие вопросы вам нужно спрашивать чтобы заполнить пробелы цикла «для»."
      Course 4 Artist For Loops Challenge:
        Course_4_Artist_For_Loops_Challenge_a: Крупнейшая фигура имеет 19 Сторон.
          Самая маленькая имеет только две стороны.
        Course_4_Artist_For_Loops_Challenge_b: Цикл `for` каждый раз идёт через 2.
      Course 4 Artist For Loops inspire:
        Course_4_Artist_For_Loops_inspire_a: Решение предыдущей задачи является основой
          для этого кода... с несколькими изменениями.
        Course_4_Artist_For_Loops_inspire_b: Попробуй цикл `for`, идущий от 3 до 10
          с инкрементом 1.
        Course_4_Artist_For_Loops_inspire_c: Внутри цикла "for" есть два повторения
          цикла "repeat", но второй repeat идет в обратном направлении.
        Course_4_Artist_For_Loops_inspire_d: "**Solution:**  \n\n<xml>\n  <block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\"
          inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n
          \       <value name=\"FROM\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">3</title>\n          </block>\n        </value>\n
          \       <value name=\"TO\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value
          name=\"BY\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement
          name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n
          \           <value name=\"TIMES\">\n              <block type=\"math_arithmetic\"
          inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value
          name=\"A\">\n                  <block type=\"variables_get\">\n                    <title
          name=\"VAR\">counter</title>\n                  </block>\n                </value>\n
          \               <value name=\"B\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">1</title>\n                  </block>\n
          \               </value>\n              </block>\n            </value>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move\"
          inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n
          \               <value name=\"VALUE\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">40</title>\n                  </block>\n
          \               </value>\n                <next>\n                  <block
          type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n
          \                   <value name=\"VALUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">360</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n            <next>\n              <block
          type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n
          \                 <block type=\"math_arithmetic\" inline=\"true\">\n                    <title
          name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block
          type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n
          \                     </block>\n                    </value>\n                    <value
          name=\"B\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">1</title>\n                      </block>\n                    </value>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">40</title>\n                      </block>\n                    </value>\n
          \                   <next>\n                      <block type=\"draw_turn\"
          inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">360</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_a: Начни с кода из последней задачи
          и добавь дополнительный "поворот направо" на три градуса внутри цикла repeat.
        Course_4_Artist_Functions_Inspiration_b: Попробуй повернуть более чем на 90
          градусов снаружи цикла repeat, но все еще внутри цикла for.
        Course_4_Artist_Functions_Inspiration_c: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">14</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_random"/>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="procedures_callnoreturn">
                            <mutation name="draw a square 20"></mutation>
                              <next>
                                <block type="jump_by_constant">
                                  <title name="DIR">jumpForward</title>
                                  <title name="VALUE">20</title>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">3</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="draw_turn_by_constant">
                              <title name="DIR">turnLeft</title>
                              <title name="VALUE">100</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            </xml>
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: Частью понимания того, как использовать
          функции, является выяснение того, какие тебе нужны, а какие нет.
        Course_4_Artist_Functions_challenge_b: Используй цикл for, затем используй
          переменную-счетчик внутри вложенного цикла repeat.
        Course_4_Artist_Functions_challenge_c: На каждой итерации тебе нужно нарисовать
          квадрат, а затем прыгнуть вперед.
        Course_4_Artist_Functions_challenge_d: Тебе потребуется повернуть влево на
          90 градусов снаружи твоего repeat, но все еще внутри цикла for.
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_a: После завершения одного квадрата попробуй прыгнуть
          вперед на половину его длины до того, как повернуть и сделать еще один.
        Course_4_Artist_Inspire_b: Каждый квадрат и прыжок повторяется четыре раза
          (используя левый поворот в промежутках) чтобы сделать полный блок типа "вертушка".
        Course_4_Artist_Inspire_c: Каждая вертушка также повторяется четыре раза с
          правым поворотом на 360/сторон.
        Course_4_Artist_Inspire_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#843179</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">sides</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">4</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">length</title>
                          <value name="VALUE">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">sides</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">sides</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="draw_move" inline="true">
                                          <title name="DIR">moveForward</title>
                                          <value name="VALUE">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </statement>
                                      <next>
                                        <block type="jump" inline="true">
                                          <title name="DIR">jumpForward</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">length</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="math_number">
                                                  <title name="NUM">2</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnLeft</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="math_number">
                                                  <title name="NUM">360</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 Artist Vars 13:
        Course_4_Artist_Vars_13_a: Тебе нужно два цикла repeat (один внутри другого),
          оба повторяющиеся `sides` раз.
        Course_4_Artist_Vars_13_b: |-
          Внутренний цикл repeat рисует восьмиугольник (поворачиваясь налево).

          Затем тебе нужно двигаться вперед и поворачивать направо только во внешнем цикле.
        Course_4_Artist_Vars_13_c: Чтобы настроить фигуру сохранять размер когда количество
          сторон изменяется, используй блок math чтобы разделить длину в пикселях
          на количество сторон.
      Course 4 Artist Vars 6:
        Course_4_Artist_Vars_6_a: Чтобы нарисовать обычный многоугольник, поворачивайся
          на **360/количество сторон** каждый раз.
      Course 4 Artist Vars 8:
        Course_4_Artist_Vars_8_a: Если ты разделишь начальную длину на количество
          сторон, длина каждой стороны будет становиться меньше по мере роста количества
          сторон.
      Course 4 Bee Params 7:
        notice_pattern: 'Ты видишь шаблон в том, как меняется количество нектара? '
        count_with_for: Обрати внимание что нектар растет по шагам. Блок какого типа
          ты можешь использовать, чтобы сделать ту же действие много раз и считать
          в то же время?
      Course 4 Bee Params 8:
        Course_4_Bee_Params_8_a: Можно спрашивать о количестве меда и нектара каждый
          раз. Если чего-то не будет, число может быть 0.
      Course 4 Play Lab Params 2:
        Course_4_Play_Lab_Params_2_a: Тебе будет нужно кликнуть на "edit" на функции
          пражка и изменить ее так, чтобы она использовала параметр `height`.
      Course 4 Play Lab Vars 2:
        Course_4_Play_Lab_Vars_2_a: Убедись, что задаешь значение `dog_speed` больше
          чем `cat_speed`.
      Course 4 Play Labs For Loops 2:
        Course_4_Play_Labs_For_Loops_2_a: Чтобы бы ты добавил к своему циклу `for`
          каждый раз, чтобы пропустить четные числа?
      Course 4 Playlab For Loops 4b:
        Course_4_Playlab_For_Loops_4b_a: Флаги находятся на расстоянии примерно 330
          точек от героев.
        Course_4_Playlab_For_Loops_4b_b: Как ты можешь сделать так, чтобы каждый герой
          достиг 330 точек за одинаковое количество ходов, но с разными начальными
          и конечными числами?
        Course_4_Playlab_For_Loops_4b_c: Запомни, не важно как далеко герой проходит
          мимо флага на последнем шаге, пока все герои делают одинаковое количество
          шагов чтобы добраться до флага.
      Course 4 Playlab For Loops 5b:
        Course_4_Playlab_For_Loops_5b_a: Символы находятся примерно в 175 пикселях
          от центра.
        Course_4_Playlab_For_Loops_5b_b: Запомни, следующий шаг героя будет длиннее
          предыдущего, потому что счетчик продолжает увеличиваться.
      Course 4 SCF 1:
        Course_4_SCF_1_a: У каждого шестиугольника сторона 40 пикселей.
        Course_4_SCF_1_b: Между каждым шестиугольником в каждой горизонтальной линии
          есть прыжок в 120 точек.
        Course_4_SCF_1_c: |-
          До того как рисовать второй ряд шестиугольников, тебе нужно повернуться направо на 60 градусов и прыгнуть вперед на 40 точек.

          Когда ты в нужной позиции по вертикали, тебе нужно повернуть художника снова назад и прыгнуть назад на 320 точек.
        Course_4_SCF_1_d: "До того как рисовать третий ряд шестиугольников, тебе нужно
          повернуться направо на 60 градусов и прыгнуть вперед на 40 точек.\n\nКогда
          ты в нужной позиции по вертикали, тебе нужно повернуть художника снова назад
          и прыгнуть назад на 440 точек (на 120 точек дальше, чем твоя функция `shift
          down/forward`). "
        Course_4_SCF_1_e: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw a line of hexagons"></mutation>
                      <next>
                        <block type="procedures_callnoreturn">
                        <mutation name="shift down/forward"></mutation>
                          <next>
                            <block type="procedures_callnoreturn">
                            <mutation name="draw a line of hexagons"></mutation>
                              <next>
                                <block type="procedures_callnoreturn">
                                <mutation name="shift down/backward"></mutation>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">draw a hexagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">6</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">shift down/backward</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">60</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">440</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">draw a line of hexagons</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw a hexagon"></mutation>
                      <next>
                        <block type="jump" inline="true">
                          <title name="DIR">jumpForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">120</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">shift down/forward</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">60</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">320</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: Вспомните ваши функций из 16го задания.
        Course_4_SCF_1a_b: "Look at this path as your main route:  \n\n![](https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)"
        Course_4_SCF_1a_c: Тебе стоит попробовать использовать цикл for. Не для шагов,
          а как параметр функции.
        Course_4_SCF_1a_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false" uservisible="false" y="14">
              <next>
                <block type="variables_set" inline="false" uservisible="false">
                  <title name="VAR">left</title>
                  <value name="VALUE">
                    <block type="math_number" uservisible="false">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false" uservisible="false">
                      <title name="VAR">right</title>
                      <value name="VALUE">
                        <block type="math_number" uservisible="false">
                          <title name="NUM">0</title>
                        </block>
                      </value>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">21</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_if">
                          <title name="DIR">isPathLeft</title>
                          <statement name="DO">
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="get nectar">
                              <arg name="dir"></arg>
                              <arg name="counter"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="variables_get">
                                  <title name="VAR">left</title>
                                </block>
                              </value>
                              <value name="ARG1">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_if">
                                          <title name="DIR">isPathRight</title>
                                          <statement name="DO">
                                            <block type="procedures_callnoreturn" inline="false">
                                              <mutation name="get nectar">
                                              <arg name="dir"></arg>
                                              <arg name="counter"></arg>
                                              </mutation>
                                              <value name="ARG0">
                                                <block type="variables_get">
                                                  <title name="VAR">right</title>
                                                </block>
                                              </value>
                                              <value name="ARG1">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation>
              <arg name="dir"></arg>
              <arg name="counter"></arg>
              </mutation>
              <title name="NAME">get nectar</title>
              <statement name="STACK">
                <block type="controls_if" inline="false">
                <mutation else="1"></mutation>
                  <value name="IF0">
                    <block type="logic_compare" inline="true" movable="false">
                      <title name="OP">EQ</title>
                      <value name="A">
                        <block type="parameters_get">
                          <title name="VAR">dir</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="variables_get">
                          <title name="VAR">left</title>
                        </block>
                      </value>
                    </block>
                  </value>
                  <statement name="DO0">
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                          <block type="maze_nectar"></block>
                          </statement>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveBackward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="controls_if" inline="false">
                                <mutation else="1"></mutation>
                                  <value name="IF0">
                                    <block type="logic_compare" inline="true" movable="false">
                                      <title name="OP">EQ</title>
                                      <value name="A">
                                        <block type="parameters_get">
                                          <title name="VAR">dir</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">left</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <statement name="DO0">
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </statement>
                                  <statement name="ELSE">
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                    </block>
                                  </statement>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: |-
          Обрати внимание, что форма все медовых точек похожа.

          Хорошее место для функции!
        Course_4_SCF_1b_b: "Look at this idea for how the bee might travel:  \n\n![](https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)"
        Course_4_SCF_1b_c: Тебе стоит попробовать использовать цикл for для расстояния
          на которое пчела путешествует.
        Course_4_SCF_1b_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="make honey up and over"></mutation>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_move">
                                          <title name="DIR">moveForward</title>
                                        </block>
                                      </statement>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
            <mutation></mutation>
              <title name="NAME">make honey up and over</title>
              <statement name="STACK">
                <block type="maze_move">
                  <title name="DIR">moveForward</title>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_honey">
                              <next>
                                <block type="maze_honey">
                                  <next>
                                    <block type="maze_move">
                                      <title name="DIR">moveBackward</title>
                                      <next>
                                        <block type="maze_turn">
                                          <title name="DIR">turnLeft</title>
                                          <next>
                                            <block type="maze_move">
                                              <title name="DIR">moveBackward</title>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 2:
        Course_4_SCF_2_a: У каждого восьмиугольника сторона 40 пикселей.
        Course_4_SCF_2_b: Между каждым восьмиугольником в каждой горизонтальной линии
          прыжок в 136 точек.
        Course_4_SCF_2_c: "До того как рисовать вторую линию восьмиугольников, ты
          должен повернуться на 45 градусов и пригнуть вперед на 96 точек.\n\nКогда
          ты в нужной позиции по вертикали, тебе нужно повернуть художника снова назад
          и прыгнуть на 408 точек в обратном направлении. "
        Course_4_SCF_2_d: "Notice that because there are fewer octagons in the even
          rows, you don't have to jump back any further to get to the starting place
          for the odd rows.  \n\nThis means you can use the same function for all
          rows."
        Course_4_SCF_2_e: |-
          **Решение:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn" inline="false">
                      <mutation name="draw octagons">
                      <arg name="numOctagons"></arg>
                      </mutation>
                      <value name="ARG0">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <next>
                        <block type="procedures_callnoreturn">
                        <mutation name="shift down"></mutation>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="draw octagons">
                              <arg name="numOctagons"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <next>
                                <block type="procedures_callnoreturn">
                                <mutation name="shift down"></mutation>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="procedures_callnoreturn" inline="false">
                      <mutation name="draw octagons">
                      <arg name="numOctagons"></arg>
                      </mutation>
                      <value name="ARG0">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false">
              <mutation>
              <arg name="numOctagons"></arg>
              </mutation>
              <title name="NAME">draw octagons</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="parameters_get">
                      <title name="VAR">numOctagons</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw an octagon"></mutation>
                      <next>
                        <block type="jump" inline="true">
                          <title name="DIR">jumpForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">136</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">draw an octagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">8</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">shift down</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">45</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">96</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">408</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_b: Это ряд восьмиугольников со сторонами, равными (в точках)
          значению счетчика.
        Course_4_SCF_3_c: 'Каждый восьмиугольник вызывается изнутри цикла, значение
          в котором меняется от 200 до 2, с шагом 2. '
        Course_4_SCF_3_d: 'Не забудь поворачивать на 22,5 градуса в конце каждой итерации. '
        Course_4_SCF_3_e: Как цвет каждого восьмиугольника, так и ширина пера управляются
          переменной «счетчик».
        Course_4_SCF_3_f: |-
          **Решение:**

          <xml>
            <block type="procedures_defnoreturn" editable="false">
              <mutation>
              <arg name="length"></arg>
              </mutation>
              <title name="NAME">draw an octagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">8</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">200</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_rgb" inline="false">
                          <value name="RED">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">MINUS</title>
                              <value name="A">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <value name="GREEN">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <value name="BLUE">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">MULTIPLY</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                            </block>
                          </value>
                        </block>
                      </value>
                      <next>
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">4</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="draw an octagon">
                              <arg name="length"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">22.5</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1:
        Course_4_SCFL_1_a: "Взгляни на эту возможность перемещения:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        Course_4_SCFL_1_b: 'Попробуй использовать два цикла for: один, чтобы пчела
          залезала на цветок и собирала нектар, а другой – чтобы слезала с него и
          делала мед.'
        Course_4_SCFL_1_c: "Обрати внимание, что один цикл for должен содержать несколько
          регулярных циклов, количество повторов которых определяется «счетчиком»,
          чтобы создавалась схема лестницы. \n\nДругой цикл for должен содержать один
          регулярный цикл для выработки количества меда, определяемого «счетчиком»."
        Course_4_SCFL_1_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_a: You may have to travel farther overall to use the smallest
          number of blocks.
        Course_4_SCFL_1a_b: "Взгляни на эту возможность перемещения:  \n\n![](https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)"
        Course_4_SCFL_1a_c: A `for loop` will help you execute the same pattern, but
          with a changing number of steps.  Notice that the number of steps needed
          decreases from 7 to 5 by 1.
        Course_4_SCFL_1a_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">7</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">5</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnLeft</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="math_number">
                                          <title name="NUM">2</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_moveForward"/>
                                      </statement>
                                      <next>
                                        <block type="maze_turn">
                                          <title name="DIR">turnLeft</title>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_a: Попробуйте «предопределённый цикл».
        Course_4_SCFL_1b_b: "Взгляни на эту возможность перемещения:  \n\n![](https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)"
        Course_4_SCFL_1b_c: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 2:
        Course_4_SCFL_2_a: "Взгляни на эту возможность перемещения:  \n\n![](https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)"
        Course_4_SCFL_2_b: Обратите внимание, что во время каждой итерации цикла `for`
          есть три точки, где вы перестаете взаимодействовать с объектами.
        Course_4_SCFL_2_c: During each iteration of the `for` loop, the number for
          each object relates to the `counter` variable in some way.
        Course_4_SCFL_2_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_moveForward">
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_moveForward">
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">MULTIPLY</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="math_number">
                                                  <title name="NUM">3</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="maze_honey"/>
                                          </statement>
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnLeft</title>
                                              <next>
                                                <block type="maze_moveForward">
                                                  <next>
                                                    <block type="maze_moveForward">
                                                      <next>
                                                        <block type="maze_turn">
                                                          <title name="DIR">turnRight</title>
                                                          <next>
                                                            <block type="controls_repeat_ext" inline="true">
                                                              <value name="TIMES">
                                                                <block type="math_arithmetic" inline="true">
                                                                  <title name="OP">POWER</title>
                                                                  <value name="A">
                                                                    <block type="math_number">
                                                                      <title name="NUM">2</title>
                                                                    </block>
                                                                  </value>
                                                                  <value name="B">
                                                                    <block type="variables_get">
                                                                      <title name="VAR">counter</title>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </value>
                                                              <statement name="DO">
                                                                <block type="maze_nectar"/>
                                                              </statement>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 3:
        Course_4_SCFL_3_a: "«Ширина ручки» составляет 1. У первого квадрата сторона
          50 точек, и каждый квадрат на 50 точек шире, чем предыдущий."
        Course_4_SCFL_3_b: Прозрачность на кисти всегда составляет «счетчик»/2.
        Course_4_SCFL_3_c: Нарисовав каждый квадрат, не забудь прыгнуть назад, повернуть,
          прыгнуть снова, а затем повернуть назад!
        Course_4_SCFL_3_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 4:
        Course_4_SCFL_4_a: The color change happens using the `set color with red,
          green, blue` block.  Red is always the value of `counter`, green is always
          `255 - counter`, and blue remains constant at 255 exactly.
        Course_4_SCFL_4_b: Each shape is a square with sides that are `counter` pixels
          long, starting with 5px, and increasing by 5px all the way up to 200px.
        Course_4_SCFL_4_c: The artist turns 15 degrees between each square.
        Course_4_SCFL_4_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">200</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">4</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">90</title>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">15</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 6:
        Course_4_SCFL_6_a: Изменение цвета происходит в результате использования блока
          «установить цвет красным, зеленым, синим».  Прозрачность красного устанавливается
          постоянно на 255, прозрачность зеленого всегда определяется значением «счетчика»,
          а прозрачность синего всегда определяется по формуле «255 – значение счетчика».
        Course_4_SCFL_6_b: The code for this is much more simple than you might think.  Just
          set the color inside the `for loop`, move forward, then turn.
        Course_4_SCFL_6_c: 'Цикл for считает от 5 до 250 с шагом 2. '
        Course_4_SCFL_6_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 7:
        Course_4_SCFL_7_a: The color change happens using the `set color with red,
          green, blue` block.  Red is set to `counter`. Green is  `255 - counter`,
          and blue is set constant at 255.
        Course_4_SCFL_7_b: 'This drawing is made using two similar `for loops`.  One
          goes from 5 to 200 by 2, the other goes from 200 to 5 by 2. '
        Course_4_SCFL_7_c: Inside each `for loop` you move forward 5 pixels before
          you turn by `360 / counter`. Don't forget to set your brush to width `counter`
          before you do!
        Course_4_SCFL_7_d: You'll need to turn left by 225 degrees between the two
          `for loops`.
        Course_4_SCFL_7_e: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="alpha" inline="true" id="alpha">
                  <value name="VALUE">
                    <block type="math_number_dropdown">
                      <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">200</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_colour" inline="true" id="draw-color">
                              <value name="COLOUR">
                                <block type="colour_rgb" inline="false">
                                  <value name="RED">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="GREEN">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">MINUS</title>
                                      <value name="A">
                                        <block type="math_number">
                                          <title name="NUM">255</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <value name="BLUE">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">5</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnLeft</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">DIVIDE</title>
                                          <value name="A">
                                            <block type="math_number">
                                              <title name="NUM">360</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="variables_get">
                                              <title name="VAR">counter</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">225</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_for_counter" inline="true">
                            <mutation counter="counter"></mutation>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">5</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_width" inline="false">
                                  <value name="WIDTH">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_colour" inline="true" id="draw-color">
                                      <value name="COLOUR">
                                        <block type="colour_rgb" inline="false">
                                          <value name="RED">
                                            <block type="variables_get">
                                              <title name="VAR">counter</title>
                                            </block>
                                          </value>
                                          <value name="GREEN">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">MINUS</title>
                                              <value name="A">
                                                <block type="math_number">
                                                  <title name="NUM">255</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <value name="BLUE">
                                            <block type="math_number">
                                              <title name="NUM">255</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_move" inline="true">
                                          <title name="DIR">moveForward</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">5</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 1:
        Course_4_SCV_1_a: 'Variables are helpful because you can add to them each
          time through a loop. '
        Course_4_SCV_1_b: This puzzle has one loop that creates the polygon, one loop
          that repeats the polygon `sides` times, then another loop that does it all
          again after adding 5 to `sides`.
        Course_4_SCV_1_c: Using a variable for `sides` and one for `length` makes
          the code cleaner because you can loop the same code multiple times, instead
          of creating a new copy for each set of numbers.
        Course_4_SCV_1_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">length</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">500</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">sides</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">0</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_colour" inline="true" id="draw-color">
                                  <value name="COLOUR">
                                    <block type="colour_random"/>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">sides</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">5</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="controls_repeat_ext" inline="true">
                                              <value name="TIMES">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                              <statement name="DO">
                                                <block type="draw_move" inline="true">
                                                  <title name="DIR">moveForward</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_turn" inline="true">
                                                      <title name="DIR">turnLeft</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">DIVIDE</title>
                                                          <value name="A">
                                                            <block type="math_number">
                                                              <title name="NUM">360</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </statement>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnRight</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="math_number">
                                                          <title name="NUM">360</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 2:
        Course_4_SCV_2_a: |-
          The completed image is made up of 10 of these "flowers":\
          ![](https://images.code.org/bac2a606dfa59c00409294499540267d-image-1469641972385.png)

          ...which are made up of 10 of these decagons:\
          ![](https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4-image-1469642051512.png)
        Course_4_SCV_2_b: 'This design uses nested loops (three deep). All loops run
          `sides` times. '
        Course_4_SCV_2_c: The artist turns to the left when creating each decagon,
          but turns to the right in both of the other loops.
        Course_4_SCV_2_d: To prevent all of your 10 petal "flowers" from getting drawn
          in the same place, make sure to jump forward by `length`/`sides` before
          you turn 360/`sides` degrees as part of your outermost loop.
        Course_4_SCV_2_e: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">length</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">400</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">sides</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_colour" inline="true" id="draw-color">
                                  <value name="COLOUR">
                                    <block type="colour_picker">
                                      <title name="COLOUR">#ff0000</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">sides</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="variables_get">
                                                      <title name="VAR">length</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="math_number">
                                                          <title name="NUM">360</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </statement>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </statement>
                                      <next>
                                        <block type="jump" inline="true">
                                          <title name="DIR">jumpForward</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">length</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 3:
        Course_4_SCV_3_a: 'Use your math block to add and subtract points to the `points`
          variable when sprites collide. '
        Course_4_SCV_3_b: You can change the parameter for how far you move your sprite
          each time one of the arrow keys is pressed.
        Course_4_SCV_3_c: |-
          **Решение:**

          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">up</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">down</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">left</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">right</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">points</title>
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">points</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 4:
        Course_4_SCV_4_a: Three variables will help you out here.  One for units of
          nectar, one for units of honey, and one for how far the bee should move
          each iteration.
        Course_4_SCV_4_b: 'It will be very helpful to use three loops inside of your
          main loop.  One for moving forward, one for collecting nectar and one for
          making honey. '
        Course_4_SCV_4_c: "Взгляни на эту возможность перемещения:  \n\n![](https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)"
        Course_4_SCV_4_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">honey</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">nectar</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">6</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">5</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">nectar</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">1</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">nectar</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_nectar"/>
                                  </statement>
                                  <next>
                                    <block type="maze_moveForward">
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">honey</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="maze_honey"/>
                                          </statement>
                                          <next>
                                            <block type="maze_moveForward">
                                              <next>
                                                <block type="maze_turn">
                                                  <title name="DIR">turnRight</title>
                                                  <next>
                                                    <block type="variables_set" inline="false">
                                                      <title name="VAR">honey</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">ADD</title>
                                                          <value name="A">
                                                            <block type="variables_get">
                                                              <title name="VAR">honey</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="math_number">
                                                              <title name="NUM">1</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">nectar</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">MINUS</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">nectar</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">1</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 5:
        Course_4_SCV_5_a: |-
          Take a look at this option for movement:

          ![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_b: Each time through the loop, the flowers have two less nectar
          and the bee needs to make one more honey.
        Course_4_SCV_5_c: Notice that at the beginning of the outside loop, the bee
          moves as many times as there is nectar in the next flower.
        Course_4_SCV_5_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">honey</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">nectar</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">nectar</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">nectar</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_nectar"/>
                                      </statement>
                                      <next>
                                        <block type="maze_move">
                                          <title name="DIR">moveForward</title>
                                          <next>
                                            <block type="controls_repeat_ext" inline="true">
                                              <value name="TIMES">
                                                <block type="variables_get">
                                                  <title name="VAR">honey</title>
                                                </block>
                                              </value>
                                              <statement name="DO">
                                                <block type="maze_honey"/>
                                              </statement>
                                              <next>
                                                <block type="variables_set" inline="false">
                                                  <title name="VAR">honey</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">honey</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="variables_set" inline="false">
                                                      <title name="VAR">nectar</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">nectar</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 6:
        Course_4_SCV_6_a: |-
          Take a look at what a single completed shape looks like

          ![](https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)
        Course_4_SCV_6_b: 'You will benefit from creating 8 variables: red1, green1,
          blue1, red2, green2, blue2, length, and sides.'
        Course_4_SCV_6_c: Each of the shape's 5 sides is broken up into pieces of
          `length`/`sides` where the zig is teal (rgb = 0,175,200) and the zag is
          purple (rgb = 100, 50, 150).
        Course_4_SCV_6_d: 'To zig, turn left by `360`/`sides`.  To zag, turn right
          by `360`/`sides`. '
        Course_4_SCV_6_e: 'The rest of the program is very standard for making a full
          360 degree rotation from a shape, except that we are overlapping the shapes
          by half, so we have to turn right by `180`/`sides`, which means that we
          need twice as many of them as usual (`sides`\*`2` repetitions). '
        Course_4_SCV_6_f: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">red1</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">0</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">green1</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">175</title>
                            </block>
                          </value>
                          <next>
                            <block type="variables_set" inline="false">
                              <title name="VAR">blue1</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <next>
                                <block type="variables_set" inline="false">
                                  <title name="VAR">red2</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">100</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">green2</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">50</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="variables_set" inline="false">
                                          <title name="VAR">blue2</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">150</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="variables_set" inline="false">
                                              <title name="VAR">length</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">70</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="variables_set" inline="false">
                                                  <title name="VAR">sides</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">5</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="controls_repeat_ext" inline="true">
                                                      <value name="TIMES">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">MULTIPLY</title>
                                                          <value name="A">
                                                            <block type="math_number">
                                                              <title name="NUM">2</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                      <statement name="DO">
                                                        <block type="controls_repeat_ext" inline="true">
                                                          <value name="TIMES">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                          <statement name="DO">
                                                            <block type="controls_repeat_ext" inline="true">
                                                              <value name="TIMES">
                                                                <block type="variables_get">
                                                                  <title name="VAR">sides</title>
                                                                </block>
                                                              </value>
                                                              <statement name="DO">
                                                                <block type="draw_colour" inline="true" id="draw-color">
                                                                  <value name="COLOUR">
                                                                    <block type="colour_rgb" inline="false">
                                                                      <value name="RED">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">red1</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="GREEN">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">green1</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="BLUE">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">blue1</title>
                                                                      </block>
                                                                      </value>
                                                                    </block>
                                                                  </value>
                                                                  <next>
                                                                    <block type="draw_move" inline="true">
                                                                      <title name="DIR">moveForward</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">length</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_turn" inline="true">
                                                                      <title name="DIR">turnLeft</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_colour" inline="true" id="draw-color">
                                                                      <value name="COLOUR">
                                                                      <block type="colour_rgb" inline="false">
                                                                      <value name="RED">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">red2</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="GREEN">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">green2</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="BLUE">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">blue2</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_move" inline="true">
                                                                      <title name="DIR">moveForward</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">length</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_turn" inline="true">
                                                                      <title name="DIR">turnRight</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                    </block>
                                                                  </next>
                                                                </block>
                                                              </statement>
                                                              <next>
                                                                <block type="draw_turn" inline="true">
                                                                  <title name="DIR">turnRight</title>
                                                                  <value name="VALUE">
                                                                    <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </next>
                                                            </block>
                                                          </statement>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_arithmetic" inline="true">
                                                                  <title name="OP">DIVIDE</title>
                                                                  <value name="A">
                                                                    <block type="math_number">
                                                                      <title name="NUM">180</title>
                                                                    </block>
                                                                  </value>
                                                                  <value name="B">
                                                                    <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </statement>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      CourseD_Dance_Party_01:
        validation: |-
          **Как пройти этот уровень?**

          -   Убедитесь, что танцор появляется на экране.

          _Этот уровень заканчивается после 4 тактов._
        challenges: |-
          **Дополнительные задания**

          -   Выберите другую песню для воспроизведения.
          -   Выберите другого, который будет выглядеть как лось!
          -   Переименуйте танцора.
      CourseD_Dance_Party_02:
        validation: |-
          **Как пройти этот уровень?**

          -   Танцор должен начать новое движение через 4 такта.

          _Уровень заканчивается после 8 тактов._
      CourseD_Dance_Party_03:
        validation: |-
          **Как пройти этот уровень?**

          -   После 6 тактов ваш танцор должен исполнять другой танец, чем после 4 тактов.

          _Уровень заканчивается после 12 тактов._
      CourseD_Dance_Party_04:
        validation: |-
          **Как пройти этот уровень?**

          -   Необходимо изменять фоновый эффект в любой момент после седьмого такта песни.

          _Этот уровень заканчивается после 10 тактов._
        challenges: |-
          **Дополнительное задание**

          Изменяйте фоновый эффект в разные моменты песни, подключив новый блок под событиями <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"тактов"</title></block></xml>.
      CourseD_Dance_Party_06:
        validation: |-
          **Как пройти этот уровень?**

          -   Необходимо иметь минимум 2 танцоров.

          _Этот уровень заканчивается после 6 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Добавить третьего танцора (или сколько угодно!)
          -   Сделайте так, чтобы все танцоры выполняли различные движения в разные моменты песни.
      CourseD_Dance_Party_08:
        validation: |-
          **Как пройти этот уровень?**

          -   Два танцора должны иметь размер, отличный от 100.

          _Этот уровень заканчивается после 6 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Экспериментируйте, изменяя другие свойства (ширина, высота, поворот и т. д.)
      CourseD_Dance_Party_09:
        validation: |-
          **Как пройти этот уровень?**

          -   Измените оттенок по крайней мере одного танцора.

          _Этот уровень заканчивается после 8 тактов._
      CourseD_Dance_Party_10:
        validation: |-
          **Как пройти этот уровень?**

          -   Свойства двух и более танцоров должны измениться.

          _Этот уровень заканчивается после 8 тактов._
      CourseD_Dance_Party_11:
        validation: |-
          **Как пройти этот уровень?**

          -   Включите креативность!

          _Этот уровень заканчивается после 8 тактов._
      CourseD_Dance_Party_11_5:
        validation: |-
          **Как пройти этот уровень?**

          -   Включите креативность!

          _Этот уровень заканчивается после 8 тактов._
      CourseD_Dance_Party_11b:
        validation: |-
          **Как пройти этот уровень?**

          -   Используйте блок «когда нажата стрелка влево» (when left arrow pressed), чтобы робот делал танцевальное движение по нажатию этой клавиши.

          _Этот уровень заканчивается после 8 тактов._
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: Видите **морские фонари** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Окажется ли блок условия в связке с ними полезным для того, чтобы пробраться
          через океанский памятник?
      CourseE_HOC 2018 Level_7a:
        aquatic7: Вам нужно использовать блок "Если путь", чтобы выполнить правильные
          повороты.
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: Какой чудесный коралловый риф! Здесь вам на помощь придут
          **синие** кораллы, однако не забывайте и о **красных**!
      Dance_2019_01:
        validation: |-
          **Как пройти этот уровень?**

          -   Убедитесь, что танцор появляется на экране.

          _Этот уровень заканчивается после 4 тактов._
        challenges: |-
          **Дополнительные задания**

          -   Выберите другую песню для воспроизведения.
          -   Переставьте танцора на другое место.
          -   Создайте несколько танцоров.
      Dance_2019_02:
        validation: |-
          **Как пройти этот уровень?**

          -   Танцор должен выполнить движение.
          -   Вы должны нажать на клавишу со стрелкой.

          \_Этот уровень кончается через 4 такта.
        challenges: |-
          **Дополнительное задание**

          -   Используйте несколько <xml><block type="Dancelab_whenKey"><title name="KEY"></title></block></xml> блоков.
      Dance_2019_03:
        validation: |-
          **Как пройти этот уровень?**

          -   Оба танцора должны выполнить движение.
          -   Вы должны нажимать на клавиши со стрелкой.

          \_Этот уровень кончается через 4 такта.
        challenges: |-
          **Дополнительное задание**

          -   Заставьте танцора реагировать на клавиши «стрелка вправо» и «стрелка влево».
      Dance_2019_04:
        validation: |-
          **Как пройти этот уровень?**

          -   Танцор должен начать новое движение через 4 такта.

          _Уровень заканчивается после 8 тактов._
      Dance_2019_05:
        validation: |-
          **Как пройти этот уровень?**

          -   После 6 тактов ваш танцор должен исполнять другой танец, чем после 4 тактов.

          _Уровень заканчивается после 12 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Меняйте фон при каждой смене движений танцоров.
      Dance_2019_06:
        validation: |-
          **Как пройти этот уровень?**

          -   Создайте одного ведущего танцора и группу подтанцовки.

          _Этот уровень кончается через 7 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Создайте несколько групп подтанцовки.
      Dance_2019_07:
        validation: |-
          **Как пройти этот уровень?**

          -   Измените размер, как минимум, одного танцора после начала музыки.

          _Этот уровень кончается через 6 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Экспериментируйте, изменяя другие свойства (ширина, высота, поворот и т. д.)
      Dance_2019_08:
        validation: |-
          **Как пройти этот уровень?**

          -   Измените оттенок, как минимум, одного танцора.

          _Этот уровень кончается через 6 тактов._
        tint_hint: Вы заметили, что цвет танцоров поменялся не на тот, что вы выбрали?
          Это объясняется тем, что выбранный вами **оттенок** смешался с цветом танцора.
      Dance_2019_09:
        validation: |-
          **Как пройти этот уровень?**

          -   Просто нажмите на кнопку "Закончить"!
        repeat_every_ideas: |-
          **Подбросить пару идей?**

          -   Чтобы танцор увеличился, измените его размер несколько раз.
          -   Чтобы танцор начал вращаться, измените его вращение несколько раз.
          -   Чтобы танцор переместился по экрану, измените его горизонтальное или вертикальное положение несколько раз.

          _Хотите получить обратный эффект – используйте отрицательные числа!_
        next_previous: |-
          **Дополнительное задание**

          -   Этот новый блок событий можно использовать и для того, чтобы постоянно повторять список танцевальных движений путем установления движения на «случайное» (Random), «следующее» (Next) или «предыдущее» (Previous).
              <xml><block type="Dancelab_changeMoveEachLR">
              <title name="GROUP" config="sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DOG&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;ROBOT&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;">???</title>
              <title name="MOVE">"rand"</title>
              <title name="DIR">-1</title>
              </block></xml>
      Dance_Party_01:
        validation: |-
          **Как пройти этот уровень?**

          -   Убедитесь, что танцор появляется на экране.

          _Этот уровень заканчивается после 4 тактов._
        challenges: |-
          **Дополнительные задания**

          -   Выберите другую песню для воспроизведения.
          -   Выберите другого, который будет выглядеть как лось!
          -   Переименуйте танцора.
      Dance_Party_02:
        validation: |-
          **Как пройти этот уровень?**

          -   Танцор должен начать новое движение через 4 такта.

          _Уровень заканчивается после 8 тактов._
      Dance_Party_03:
        validation: |-
          **Как пройти этот уровень?**

          -   После 6 тактов ваш танцор должен исполнять другой танец, чем после 4 тактов.

          _Уровень заканчивается после 12 тактов._
      Dance_Party_04:
        validation: |-
          **Как пройти этот уровень?**

          -   Необходимо изменять фоновый эффект в любой момент после седьмого такта песни.

          _Этот уровень заканчивается после 10 тактов._
        challenges: |-
          "**Дополнительное задание**

          Добейтесь изменения фонового эффекта в разные моменты песни, присоединив новый блок под блоком событий <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml>.
      Dance_Party_05:
        validation: |-
          "**Как пройти этот уровень?**

          -   Вашему танцору необходимо выполнить до окончания уровня 4 различных танцевальных движения.

          _Этот уровень заканчивается через 12 тактов._
      Dance_Party_06:
        validation: |-
          **Как пройти этот уровень?**

          -   Необходимо иметь минимум 2 танцоров.

          _Этот уровень заканчивается после 6 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Добавить третьего танцора (или сколько угодно!)
          -   Сделайте так, чтобы все танцоры выполняли различные движения в разные моменты песни.
      Dance_Party_08:
        validation: |-
          **Как пройти этот уровень?**

          -   Два танцора должны иметь размер, отличный от 100.

          _Этот уровень заканчивается после 6 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Экспериментируйте, изменяя другие свойства (ширина, высота, поворот и т. д.)
      Dance_Party_09:
        validation: |-
          **Как пройти этот уровень?**

          -   Измените оттенок по крайней мере одного танцора.

          _Этот уровень заканчивается после 8 тактов._
      Dance_Party_10:
        validation: |-
          **Как пройти этот уровень?**

          -   Свойства двух и более танцоров должны измениться.

          _Этот уровень заканчивается после 8 тактов._
      Dance_Party_11:
        validation: |-
          **Как пройти этот уровень?**

          -   Включите креативность!

          _Этот уровень заканчивается после 8 тактов._
      Dance_Party_11_5:
        validation: |-
          **Как пройти этот уровень?**

          -   Включите креативность!

          _Этот уровень заканчивается после 8 тактов._
      Dance_Party_11b:
        validation: |-
          **Как пройти этот уровень?**

          -   Используйте блок «когда нажата стрелка влево» (when left arrow pressed), чтобы робот делал танцевальное движение по нажатию этой клавиши.

          _Этот уровень заканчивается после 8 тактов._
      Dance_Party_extras_alternate_2019:
        alternate: Альтернативный блок находится в категории "танцоры".
      Function intro Ryan:
        Function_intro_Ryan_b: Если ты вызовешь функции правильно, вот путь, по которому
          ты пройдешь...
        Function_intro_Ryan_a: Вы можете вызвать функцию в своей программе много раз!  Попробуйте
          дважды вызвать функцию, чтобы решить эту задачу.
      Function intro Ryan_2019:
        Function_intro_Ryan_b: Если ты вызовешь функции правильно, вот путь, по которому
          ты пройдешь...
        Function_intro_Ryan_a: Вы можете вызвать функцию в своей программе много раз!  Попробуйте
          дважды вызвать функцию, чтобы решить эту задачу.
      HOC 2018 Level_10:
        voyage_aquatic_10a: Видите **морские фонари** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Окажется ли блок условия в связке с ними полезным для того, чтобы пробраться
          через океанский памятник?
      HOC 2018 Level_7a:
        aquatic7: Вам нужно использовать блок "Если путь", чтобы выполнить правильные
          повороты.
      HOC 2018 Level_9b:
        voyage_aquatic_9a: Какой чудесный коралловый риф! Здесь вам на помощь придут
          **синие** кораллы, однако не забывайте и о **красных**!
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: Перетащите один блок «двигаться вперед» с панели элементов
          в рабочую область и прикрепите его под блоком «при запуске».
        MC_HOC_2017_01_RETRY_b: Не забудьте нажать кнопку «Выполнить», чтобы выполнить
          код для исполнителя.
        MC_HOC_2017_01_RETRY_c: Как только исполнитель выполнит весь составленный
          для него код, вы сможете переместить игрока с помощью клавиш со стрелками!
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: Перетащите один блок «двигаться вперед» с панели элементов
          в рабочую область и прикрепите его под блоком «при запуске».
        MC_HOC_2017_01_RETRY_b: Не забудьте нажать кнопку «Выполнить», чтобы выполнить
          код для исполнителя.
        MC_HOC_2017_01_RETRY_c: Как только исполнитель выполнит весь составленный
          для него код, вы сможете переместить игрока с помощью клавиш со стрелками!
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Переместите исполнителя на два хода вперед, чтобы он
          стоял на нажимной пластине.  Так вы сможете открыть дверь для игрока.
        MC_HOC_2017_02_Cole_b: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_02_Cole_c: Как только исполнитель откроет дверь, используйте клавиши
          со стрелками, чтобы переместить игрока к карте!
        MC_HOC_2017_02_Cole_d: Убедитесь, что исполнитель следует по пути, указанному
          на карте!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Переместите исполнителя на два хода вперед, чтобы он
          стоял на нажимной пластине.  Так вы сможете открыть дверь для игрока.
        MC_HOC_2017_02_Cole_b: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_02_Cole_c: Как только исполнитель откроет дверь, используйте клавиши
          со стрелками, чтобы переместить игрока к карте!
        MC_HOC_2017_02_Cole_d: Убедитесь, что исполнитель следует по пути, указанному
          на карте!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Как только исполнитель наступит на нажимную пластину,
          используйте клавиши со стрелками, чтобы подвести игрока к компасу!
        MC_HOC_2017_03_Cole_b: Код выглядит слишком длинным?  Попробуйте использовать
          цикл «повторить» и посмотрите, удастся ли сократить код!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Как только исполнитель наступит на нажимную пластину,
          используйте клавиши со стрелками, чтобы подвести игрока к компасу!
        MC_HOC_2017_03_Cole_b: Код выглядит слишком длинным?  Попробуйте использовать
          цикл «повторить» и посмотрите, удастся ли сократить код!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: 'Используйте блок «повернуть направо», чтобы
          изменить направление движения исполнителя '
        MC_HOC_2017_04POINT5_RYAN_a: Чтобы Алекс или Стив смогли добраться до топора,
          Исполнителю достаточно достаточно дойти только до первой нажимной пластины.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: 'Используйте блок «повернуть направо», чтобы
          изменить направление движения исполнителя '
        MC_HOC_2017_04POINT5_RYAN_a: Чтобы Алекс или Стив смогли добраться до топора,
          Исполнителю достаточно достаточно дойти только до первой нажимной пластины.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Исполнителю нужно «двигаться вперед» 7 раз.  Как для
          этого воспользоваться циклом «повторить»?
        MC_HOC_2017_04_Cole_c: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_04_Cole_b: Как только исполнитель доберется до нажимной пластины,
          он откроет дверь для игрока.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Исполнителю нужно «двигаться вперед» 7 раз.  Как для
          этого воспользоваться циклом «повторить»?
        MC_HOC_2017_04_Cole_c: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_04_Cole_b: Как только исполнитель доберется до нажимной пластины,
          он откроет дверь для игрока.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: А вы знали, что в цикл можно помещать более одного
          фрагмента кода?  Попробуйте двигаться вперед **и** разместить доску внутри
          цикла «повторить», чтобы решить эту задачу.
        MC_HOC_2017_05_Cole_b: Переведите исполнителя через реку, построив мост по
          дороге.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: А вы знали, что в цикл можно помещать более одного
          фрагмента кода?  Попробуйте двигаться вперед **и** разместить доску внутри
          цикла «повторить», чтобы решить эту задачу.
        MC_HOC_2017_05_Cole_b: Переведите исполнителя через реку, построив мост по
          дороге.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: Сколько раз выполняется этот цикл?  Сколько раз он
          _должен_ быть выполнен?
        MC_HOC_2017_06_Cole_b: 'Помогите исполнителю построить мост! '
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: Сколько раз выполняется этот цикл?  Сколько раз он
          _должен_ быть выполнен?
        MC_HOC_2017_06_Cole_b: 'Помогите исполнителю построить мост! '
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Все, что вам нужно от исполнителя, - это чтобы он расчистил
          путь к Майнкрафт.
        MC_HOC_2017_07_Cole_a: Чтобы решить эту задачу, выясните, что делает функция
          «расчистить путь» и используйте ее столько раз, сколько потребуется, с помощью
          маленького зеленого блока «расчистить путь», расположенного на панели элементов.
        MC_HOC_2017_07_Cole_b: Чтобы справиться с этой задачей, попробуйте комбинировать
          блоки функций с другими блоками, размещенными на панели элементов.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Все, что вам нужно от исполнителя, - это чтобы он расчистил
          путь к Майнкрафт.
        MC_HOC_2017_07_Cole_a: Чтобы решить эту задачу, выясните, что делает функция
          «расчистить путь» и используйте ее столько раз, сколько потребуется, с помощью
          маленького зеленого блока «расчистить путь», расположенного на панели элементов.
        MC_HOC_2017_07_Cole_b: Чтобы справиться с этой задачей, попробуйте комбинировать
          блоки функций с другими блоками, размещенными на панели элементов.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: Не знаете, куда идти?  Постарайтесь найти пунктирную
          линию!
        MC_HOC_2017_10_Cole_a: Используйте функции, чтобы упростить решение этой задачи!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: Не знаете, куда идти?  Постарайтесь найти пунктирную
          линию!
        MC_HOC_2017_10_Cole_a: Используйте функции, чтобы упростить решение этой задачи!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_08_RY_b: Есть МНОГО способов решения этой задачи.  Попробуйте
          несколько!
        MC_HOC_2017_08_RY_c: Попробуйте следовать по пунктирной линии, чтобы пройти
          через лаву.
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_08_RY_b: Есть МНОГО способов решения этой задачи.  Попробуйте
          несколько!
        MC_HOC_2017_08_RY_c: Попробуйте следовать по пунктирной линии, чтобы пройти
          через лаву.
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Попробуйте возвести с помощью Agent мосты, чтобы Алекс
          или Стив смогли обогнуть края карты.
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Попробуйте возвести с помощью Agent мосты, чтобы Алекс
          или Стив смогли обогнуть края карты.
      NEW Course 4 Artist Functions 13:
        NEW_Course_4_Artist_Functions_13_a: Try editing the `draw a line of squares`
          function so that you don't have to call it twice.
        NEW_Course_4_Artist_Functions_13_c: Какой код вам понадобится, чтобы сделать
          звезду, используя обычные линии вместо прямоугольников?
      NEW Course 4 Artist Functions 4:
        NEW_Course_4_Artist_Functions_4_a: You will have to use a `turn right by 120
          degrees` block after each square.
      NEW Course 4 Artist Functions 9:
        NEW_Course_4_Artist_Functions_9_a: Try running the code before you add any
          blocks.   What makes the drawing look a little off?
        NEW_Course_4_Artist_Functions_9_b: If you can't quite put your finger on what's
          going wrong, try slowing down the artist's by moving the slider to the left.
      NEW Course 4 Artist Params 11:
        NEW_Course_4_Artist_Params_11_a: There is more than one number that needs
          to be replaced by a variable inside the function.
      NEW Course 4 Artist Params 13:
        NEW_Course_4_Artist_Params_13_a: 'You will need to divide the _perimeter_
          by the number of sides in order to keep the shapes the same size overall. '
      NEW Course 4 Artist Params 14:
        NEW_Course_4_Artist_Params_14_a: Запусти программу несколько раз, чтобы сообразить,
          как функция работает с разными параметрами.
      NEW Course 4 Artist Params inspire:
        brush_width: Мы установили ширину кисти на 1, а цвет - на синий, прежде чем
          начать делать что-то.
        double_loop: Попробуйте, «переопределённый цикл» внутри цикла «повторить».
        specifics: |-
          'Для цикла' проходит от трёх до семнадцати раз для каждого из шести "лепестков" перед рисованием нового, рисуя фигуры только с нечётным количеством сторон.

          Блок 'присвоить альфа' использует деление для постепенного выцветания цвета, если счётчик будет выше.
        after: Когда вы закончите с каждым лепестком, будьте уверены, что вы использовали
          'двигаться вперед на 20 пикселей' до поворота на 60 градусов.
        solution: |-
          **Solution**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">6</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_for_counter" inline="true">
                            <mutation counter="counter"></mutation>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">17</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="alpha" inline="true" id="alpha">
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">DIVIDE</title>
                                      <value name="A">
                                        <block type="math_number">
                                          <title name="NUM">500</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="procedures_callnoreturn" inline="false">
                                      <mutation name="draw a polygon">
                                      <arg name="length"></arg>
                                      <arg name="sides"></arg>
                                      </mutation>
                                      <value name="ARG0">
                                        <block type="math_number">
                                          <title name="NUM">30</title>
                                        </block>
                                      </value>
                                      <value name="ARG1">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">20</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">60</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            </xml>
      NEW Course 4 Bee For Loops 10a:
        NEW_Course_4_Bee_For_Loops_10a_a: Сможешь ли ты найти связь между количеством
          шагов, которые нужно выполнить, и количеством нектара, которое нужно собрать?
        NEW_Course_4_Bee_For_Loops_10a_b: Тебе понадобятся 2 цикла повтора, в одном
          из которых будет использоваться блок «математика».
      NEW Course 4 Bee For Loops 7:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Попробуй проделать кое-какие расчеты с переменной «счетчик».

          Что нужно сделать со счетчиком у каждого цветка, чтобы уравнять количество нектара, которое необходимо собрать?
      NEW Course 4 Bee For Loops 8:
        NEW_Course_4_Bee_For_Loops_8_a: "If your loop is counting up, the increment
          is added to your counter variable each time through. \n\nWhat do you need
          to add to each number to get the number after it?"
      New Minecraft Hero Project:
        MC_HOC_2017_13_Cole_a: Try having the Agent build some bridges so that Alex
          or Steve can walk around beyond the edges of the map.
      OPD-K5-events-2:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      OPD-K5-events-3:
        courseC_flappy_events2_a: 'The block you need to add is called `set speed`. '
        courseC_flappy_events2_b: Connect the `set speed` block to the `when run`
          block to solve this puzzle.
      OPD-K5-events-4:
        courseC_flappy_events3_a: If something isn't working correctly, make sure
          your blocks are connected to the correct events in the workspace.
      OPD-K5-events-5:
        courseC_flappy_events4_a: Connect the `end game` block to `when hit an obstacle`
          to solve this puzzle.
      OPD-K5-events-6:
        courseC_flappy_events5_a: You will need to use the `score a point` block to
          pass this level.
      OPD-K5-forloops-1:
        courseF_bee_for1_a: Перетащи лиловый блок с числом на пусто место в цикле
          «повторить», чтобы сказать ему, сколько должно быть повторов.
        courseF_bee_for1_b: Тебе потребуются два блока в цикле «повторить», чтобы
          собрать весь нектар.
      OPD-K5-forloops-2:
        courseF_bee_for2_a: Если запутаешься, работай над цветками поочередно и тестируй
          программу почаще.
        courseF_bee_for2_b: Не забывай перемещаться вперед между всеми циклами, чтобы
          добраться до каждого цветка.
      OPD-K5-forloops-5:
        courseF_bee_for4_a: Используй цикл for, значение в котором меняется от 1 до
          7 с шагом 1, чтобы решить эту головоломку.
        courseF_bee_for4_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for4_c: Обязательно используй переменную «счетчик» в своем вложенном
          цикле «повторить», чтобы получить достаточно нектара!
      OPD-K5-forloops-6:
        courseF_bee_for6_a: Не забудь использовать переменную «счетчик» в своем цикле
          «повторить».
        courseF_bee_for6_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for6_c: Твой цикл должен считать **от 5 до 1**.
      OPD-K5-forloops-7:
        courseF_bee_for7_a: Нужно, чтобы твой цикл for считал от 1 до 7 с шагом 2.
        courseF_bee_for7_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for7_c: Не забудь использовать переменную «счетчик» в своем цикле
          «повторить».
      OPD-K5-projects-2:
        courseE_playLab_scaffold1_a: The `set actor 1 to ??? image` block can be used
          to add an actor to the stage.
        courseE_playLab_scaffold1_b: Put the `set actor` block under `when run` to
          make your actor appear at the beginning of the program.
        courseE_playLab_scaffold1_c: Use `set ??? background` to choose a background
          for your scene.
      OPD-K5-projects-3:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow`
          event to change the direction the block controls.
        courseE_playLab_scaffold1_b: You should have four `when arrow` event blocks,
          with a direction to move underneath each.
        courseE_playLab_scaffold1_c: When you are done, you should be able to move
          your hero with the arrow keys!
      OPD-K5-projects-5:
        courseE_playLab_scaffold4_a: Use `score point` to add a point, and `remove
          point` to subtract one.
      OPD-K5-variables-1:
        grade5_artist_variables_triangles1_a: Чтобы у этого треугольника был внутренний
          угол 60 градусов, не забудь повернуть художника на 120 градусов.
        grade5_artist_variables_triangles1_b: Используй цикл «повторить», чтобы сделать
          свой код короче.
        grade5_artist_variables_triangles1_c: Внутри цикла тебе потребуется переместиться
          вперед на 50 точек, а затем повернуть налево на 120 градусов.
      OPD-K5-variables-2:
        courseF_artist_variables2_a: Не забудь перемещаться вперед после рисования
          каждого треугольника.
        courseF_artist_variables2_b: Твой новый цикл будет содержать цикл для твоего
          треугольника, а также команду «двигаться вперед».
      OPD-K5-variables-5:
        courseF_artist_variables3_a: 'Переменная «длина» будет использована в двух
          местах кода: в длине стороны треугольника и в расстоянии для перемещения
          между треугольниками.'
        courseF_artist_variables3_b: 'Блок номеров со значением 50 должен находиться
          только в одном месте: после блока "установить длину".'
      OPD-K5-variables-6:
        courseF_artist_variables4_a: Your code won't be much different than it was
          in the last puzzle, except that you will need to turn the artist to jump
          down, then turn him back to get ready to draw the next triangle.
        courseF_artist_variables4_c: |-
          Художник будет двигаться по следующей схеме:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: |-
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">50</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="controls_repeat_ext">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">120</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="jump">
                              <title name="DIR">jumpForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">90</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="jump">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      OPD-K5-variables-7:
        courseF_artist_variables5_a: Вторая половина кода должна выглядеть почти так
          же, как первая, за исключением того, что ты будешь поворачивать _налево_,
          прыгать, а затем поворачивать _направо_.
        courseF_artist_variables5_b: Первая половина кода нарисует три треугольника,
          а вторая половина нарисует еще три.
        courseF_artist_variables5_c: Начни с копирования кода первой половины своей
          программы, а затем измени его, чтобы он рисовал показанный рисунок.
        courseF_artist_variables5_d: |-
          Художник будет двигаться по следующей схеме:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      Overworld Avoid Monsters:
        mc_8_a: Можно пройти всего несколькими путями. Какой из них самый короткий?
        mc_8_b: Используй цикл «повторить», чтобы упростить свой код.
        mc_8_c: Твоя цель – добраться до входной двери дома наверху экрана.
      Overworld Avoid Monsters_2019:
        mc_8_a: Можно пройти всего несколькими путями. Какой из них самый короткий?
        mc_8_b: Используй цикл «повторить», чтобы упростить свой код.
        mc_8_c: Твоя цель – добраться до входной двери дома наверху экрана.
      Overworld Chop Tree:
        mc_2_a: Тебе потребуется переместиться вперед дважды, чтобы оказаться перед
          деревом.
        mc_2_b: Команда блока «уничтожить» позволяет срубить дерево перед тобой.
      Overworld Chop Tree_2019:
        mc_2_a: Тебе потребуется переместиться вперед дважды, чтобы оказаться перед
          деревом.
        mc_2_b: Команда блока «уничтожить» позволяет срубить дерево перед тобой.
      Overworld Chop Trees:
        mc_4_a: Рубить деревья можно в любом порядке. Движение по какому пути потребует
          меньше всего блоков?
        mc_4_b: Команда блока «уничтожить» позволяет срубить дерево перед тобой.
      Overworld Chop Trees_2019:
        mc_4_a: Рубить деревья можно в любом порядке. Движение по какому пути потребует
          меньше всего блоков?
        mc_4_b: Команда блока «уничтожить» позволяет срубить дерево перед тобой.
      Overworld House Frame Chosen:
        mc_6_a: Нажми на стрелку на блоке «поместить» для выбора того, что хочешь
          поместить.
        mc_6_b: Не бойся допустить ошибку! Запусти код и посмотри, что получится,
          даже если не уверен, что уже решил головоломку.
        mc_6_c: В цикл повтора можно вставить не один, а несколько блоков.
      Overworld House Frame Chosen_2019:
        mc_6_a: Нажми на стрелку на блоке «поместить» для выбора того, что хочешь
          поместить.
        mc_6_b: Не бойся допустить ошибку! Запусти код и посмотри, что получится,
          даже если не уверен, что уже решил головоломку.
        mc_6_c: В цикл повтора можно вставить не один, а несколько блоков.
      Overworld Move to Sheep:
        mc_1_a: Блок «двигаться вперед» находится вверху набора инструментов.
        mc_1_b: Обязательно присоедини оба блока «двигаться вперед» к блоку «при запуске».
      Overworld Move to Sheep_2019:
        mc_1_a: Блок «двигаться вперед» находится вверху набора инструментов.
        mc_1_b: Обязательно присоедини оба блока «двигаться вперед» к блоку «при запуске».
      Overworld Place Wall:
        mc_5_a: Используй сначала блок «поместить», а затем блок «двигаться».
        mc_5_b: Проследи за тем, чтобы оба блока были вставлены в цикл «повторить»,
          чтобы использовать код более одного раза.
        mc_5_c: Не бойся допустить ошибку! Запусти код и посмотри, что получится,
          даже если не уверен, что уже решил головоломку.
      Overworld Place Wall_2019:
        mc_5_a: Используй сначала блок «поместить», а затем блок «двигаться».
        mc_5_b: Проследи за тем, чтобы оба блока были вставлены в цикл «повторить»,
          чтобы использовать код более одного раза.
        mc_5_c: Не бойся допустить ошибку! Запусти код и посмотри, что получится,
          даже если не уверен, что уже решил головоломку.
      Overworld Plant Crops:
        mc_7_a: Используй блок «посадить растение», чтобы посадить растение там, где
          стоишь.
        mc_7_b: Обе полоски темно-коричневой земли у воды необходимо засадить растениями.
        mc_7_c: В цикл повтора можно вставить не один, а несколько блоков.
      Overworld Plant Crops_2019:
        mc_7_a: Используй блок «посадить растение», чтобы посадить растение там, где
          стоишь.
        mc_7_b: Обе полоски темно-коричневой земли у воды необходимо засадить растениями.
        mc_7_c: В цикл повтора можно вставить не один, а несколько блоков.
      Overworld Powered Minecart:
        mc_13_a: Используй «поместить рельс», чтобы положить рельс на квадрат, в котором
          стоишь.
        mc_13_b: Используй циклы «повторить», чтобы сделать свой код короче.
      Overworld Powered Minecart_2019:
        mc_13_a: Используй «поместить рельс», чтобы положить рельс на квадрат, в котором
          стоишь.
        mc_13_b: Используй циклы «повторить», чтобы сделать свой код короче.
      Overworld Shear Sheep:
        mc_3_a: Блок «стричь» позволяет постричь овцу перед тобой. Ты стоишь лицом
          к овце?
        mc_3_b: Для поворота лицом в другую сторону используй блок «повернуть».
        mc_3_c: Не бойся допустить ошибку! Запусти код и посмотри, что получится,
          даже если не уверен, что уже решил головоломку.
      Overworld Shear Sheep_2019:
        mc_3_a: Блок «стричь» позволяет постричь овцу перед тобой. Ты стоишь лицом
          к овце?
        mc_3_b: Для поворота лицом в другую сторону используй блок «повернуть».
        mc_3_c: Не бойся допустить ошибку! Запусти код и посмотри, что получится,
          даже если не уверен, что уже решил головоломку.
      Underground Avoiding Lava:
        mc_11_a: Весь код, требуемый для проверки на наличие лавы и защиту от нее,
          уже имеется. Все, что тебе нужно – это добавить блок «двигаться».
        mc_11_b: Должна ли твоя команда «двигаться вперед» находиться внутри или после
          оператора «если»?
      Underground Avoiding Lava_2019:
        mc_11_a: Весь код, требуемый для проверки на наличие лавы и защиту от нее,
          уже имеется. Все, что тебе нужно – это добавить блок «двигаться».
        mc_11_b: Должна ли твоя команда «двигаться вперед» находиться внутри или после
          оператора «если»?
      Underground If Statements:
        mc_12_a: Ищи красный камень в местах с красными вкраплениями.
        mc_12_b: Сможешь ли ты использовать цикл «повторить», чтобы сделать свой код
          короче?
        mc_12_c: 'Используй оператор «если» для проверки на наличие лавы, а затем
          клади булыжники. '
      Underground If Statements_2019:
        mc_12_a: Ищи красный камень в местах с красными вкраплениями.
        mc_12_b: Сможешь ли ты использовать цикл «повторить», чтобы сделать свой код
          короче?
        mc_12_c: 'Используй оператор «если» для проверки на наличие лавы, а затем
          клади булыжники. '
      Underground Iron:
        mc_10_a: Железные блоки – блоки с вкраплениями за факелом! Как ты собираешься
          туда добраться?
        mc_10_b: Когда ты окажешься на краю лавы, используй команду «поместить булыжник
          впереди», чтобы обезопасить свой путь. Тогда ты сможешь по нему пройти!
        mc_10_c: Не бойся допустить ошибку! Запусти код и посмотри, что получится,
          даже если не уверен, что уже решил головоломку.
      Underground Iron_2019:
        mc_10_a: Железные блоки – блоки с вкраплениями за факелом! Как ты собираешься
          туда добраться?
        mc_10_b: Когда ты окажешься на краю лавы, используй команду «поместить булыжник
          впереди», чтобы обезопасить свой путь. Тогда ты сможешь по нему пройти!
        mc_10_c: Не бойся допустить ошибку! Запусти код и посмотри, что получится,
          даже если не уверен, что уже решил головоломку.
      Underground Mining Coal:
        mc_9_a: Ты стоишь лицом правильно? Блок «уничтожить» позволяет добыть блок,
          который находится прямо перед тобой.
        mc_9_b: Черные вкрапления в стене – это уголь! Примени к ним команду «уничтожить
          блок», чтобы добыть уголь.
        mc_9_c: Используй блок «поместить факел», чтобы поместить факел там, где стоишь.
      Underground Mining Coal_2019:
        mc_9_a: Ты стоишь лицом правильно? Блок «уничтожить» позволяет добыть блок,
          который находится прямо перед тобой.
        mc_9_b: Черные вкрапления в стене – это уголь! Примени к ним команду «уничтожить
          блок», чтобы добыть уголь.
        mc_9_c: Используй блок «поместить факел», чтобы поместить факел там, где стоишь.
      behaviors 2:
        behavior hint: "Попробуй изменить поведение! \n\n-   В каком направлении должна
          двигаться ракета?"
      behaviors 3:
        behavior hint: "Попробуй изменить поведение! \n\n-   От какого значения зависит
          скорость движения каждого спрайта?"
      behaviors 3a:
        behavior hint: "Попробуй изменить поведение! \n\n-   От какого значения зависит
          скорость движения каждого спрайта?"
      behaviors 5:
        target hint: Можешь выбрать любой из четырех кораблей. Какой из них понравится
          космонавту?
        behavior hint: Измени поведение, чтобы решить эту головоломку. Спрайту-космонавту
          потребуется двигаться в двух разных направлениях, чтобы в итоге двигаться
          по диагонали.
      behaviors 6:
        behavior hint: "Попробуй изменить поведение! \n\n-   От какого значения зависит
          скорость движения каждого спрайта?"
      behaviors 7:
        behaviors_hint1: You can create a new behavior that uses two different actions
          or combine two existing behaviors.
        sprites_idea1: |-
          For fun, you can use a similar behavior to make a ship fly off into space or a character run to the foreground. Try changing the background and sprite costumes in your scene!

          ![](<https://images.code.org/7070e44239b53f4b33a5b4fe054bb61c-image-1567714335486.2019-09-05 16_05_19.gif>)

          ![](<https://images.code.org/278494432d56f1f5d41e345a51223695-image-1567714335485.2019-09-05 16_11_12.gif>)
      comment_intro_maze_2018:
        courseC_maze_programming4_a: Comments are also helpful when other people try
          to read your code.
        courseC_maze_programming4_b: Add a comment when you change directions- what
          would have happened if you turned the other way?
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_a: |-
          Ты можешь использовать циклы, чтобы создать стены и крышу. Попробуй повторить с разными блоками.

          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          Создай свой собственный дом или нажми ![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png), чтобы подсмотреть некоторые идеи!
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge2:
        harvey_tictactoe: Ты можешь использовать блоки `прыжок` для перемещения в
          другие места.
      course1_artist_loops_challenge3:
        courseA_artist_loops_challenge2_a: 'Блоки, как этот: <xml>  <block type="simple_move_up_left"/></xml>,
          позволят художнику двигаться под углом!'
        courseA_artist_loops_challenge2_b: Когда ты закончишь один птичник, прыгай
          на следующий!
        courseA_artist_loops_challenge2_c: Для этой задачи тебе понадобится МНОГО
          блоков внутри цикла.
      course1_artist_loops_challenge4:
        courseB_artist_loops_challenge1_a: 'Блоки, как этот: <xml>  <block type="simple_move_up_right"/></xml>,
          позволят художнику двигаться под углом!'
        courseB_artist_loops_challenge1_b: Когда закончишь одну из костей, «прыгни»
          к следующей!
        courseB_artist_loops_challenge1_c: 'Тебе потребуется «двигаться» или «прыгать»
          через некоторые линии дважды. '
      course1_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Попробуй изменить цифру в каждом цикле,
          если что-то пойдет не так.
        courseA_collector_loops_challenge1_b: You don't need to use a loop if you
          are only doing something one time.
        courseA_collector_loops_challenge1_c: На правой стороне пещеры 6 драгоценных
          камней, но тебе нужно только подойти и собрать их, 5 раз. Ты знаешь почему?
      course1_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: Тебе нужно использовать только один
          блок ![](<https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png>), чтобы решить эту задачу.
        courseA_collector_loops_challenge2_a: |-
          Ты можешь двигаться назад и вернуться на дорожку во второй раз, прежде чем идти на юг.

          ![](<https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png>)
      course1_collector_loops_challenge3:
        courseB_collector_loops_challenge1_b: |-
          Начни с цикла команд 'идти на юг' и `взять сокровище`.

          <xml>
            <block type="maze_moveSouth"/><next>
            <block type="collector_collect"/></next>
            </xml>
        courseB_collector_loops_challenge1_a: |-
          Северный шаблон немного отличается от южного.

          <xml>
            <block type="collector_collect"/><next>
            <block type="maze_moveNorth"/></next>next>
            </xml>
        courseB_collector_loops_challenge1_c: "Переместиться между путями на восток
          дважды.\n\n<xml>\n  <block type=\"maze_moveEast\"/><next>\n  <block type=\"maze_moveEast\"/></next>next>\n
          \ </xml>\n\nЭто можно сделать всего с 14 блоками. Нажми, чтобы получить
          еще одну подсказку и увидеть решение. "
        courseB_collector_loops_challenge1_d: |-
          Попробуй это!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course1_collector_loops_challenge4:
        courseB_collector_loops_challenge2_a: Если что-то идет не так, не бойся начать
          сначала. Не сдавайся!
        courseB_collector_loops_challenge2_b: |-
          Если повторишь эту схему, Лорел не наткнется на стену на дне пещеры!

          <xml><block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block></xml>
        courseB_collector_loops_challenge2_c: Попробуй использовать блок «повторить»,
          чтобы собрать сокровища из последней груды!
        courseB_collector_loops_challenge2_d: |-
          Попробуй это решение:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified_dropdown">
                  <title name="TIMES" config="3-10">4</title>
                  <statement name="DO">
                    <block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_simplified_dropdown">
                      <title name="TIMES" config="3-10">6</title>
                      <statement name="DO">
                        <block type="collector_collect"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course1_maze_debugging_challenge1:
        courseA_maze_seq_challenge1_a: Некоторые пути приведут к взрывчатке, если
          ты уйдешь далеко.
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_a: Тебе не потребуется добавлять или удалять блоки,
          чтобы решить эту головоломку.
        courseB_maze_seq_challenge2_b: Переставь блоки и пройди путь посередине.
      course1_maze_seq_challenge1:
        courseA_maze_seq_challenge2_a: Try counting the spaces with your finger. Remember
          not to count the space where you start!
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_a: На этот раз кратчайший путь может и не привести
          к цели.
        courseB_maze_seq_challenge1_b: Для начала попробуй переместиться на запад.
      course1_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you
          click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click
          Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when
          you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click
          the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Наконец, открой Волшебника Уэндела,
          после того как нажмёшь на Спиффа!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "You can make a bird sing.\n\n<xml> \n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "You can make a robot beep.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          You can make an angry monster growl.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      course2_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: Start by making a nested loop to
          create four octagons. Turn 45 degrees to make the octagon. Jump, then turn
          90 degrees after each one.
        courseD_artist_nestedLoops_challenge1_b: Add code to draw a triangle inside
          of your nested loop. Use 120 degree turns for your triangle.
        courseD_artist_nestedLoops_challenge1_c: |-
          Use a nested loop:

          -   Repeat 8 times
              -   draw an octagon
              -   draw a triangle
              -   jump forward 50 pixels
              -   turn right by 90 degrees
      course2_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: To draw a regular octagon, the artist
          needs to turn 45 degrees 8 times.
        courseD_artist_nestedLoops_challenge2_b: To draw a square, the artist needs
          to turn 90 degrees 4 times.
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: 'Ширина прямоугольника 200 пикселей, длина
          - 100 пикселей. '
      course2_artist_prog_challenge2:
        courseC_artist_prog_challenge2_a: "Ты можешь вставлять команды внутрь блока
          `повторить`, чтобы выполнять их снова и снова. Попробуй!\n\n<xml>\n  \n
          \         <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <title name=\"DIR\">moveForward</title>\n                <title
          name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n
          \                 <block type=\"jump_by_constant_dropdown\">\n                    <title
          name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n
          \               </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: |-
          Найдёшь путь, который проходит через каждый цветок и соту, не врезаясь деревья? Лучший путь - по спирали.

          **Ты можешь решить эту головоломку даже не поворачивая влево!**
        courseD_bee_conditionals_challenge1_b: In this puzzle, each space could have
          a flower, a honey comb, or nothing.  That means you can repeat your `if/else`
          conditional at each square.
      course2_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          Как и в блоке `если на цветке` код внутри `пока нектар > 0` будет выполняться только если пчёлка на цветке. Основное отличие в том, что код внутри будет повторяться пока не останется нектара. Попробуй этот пример:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      course2_collector_loops_challenge2:
        courseC_maze_loops_challenge2_a: Исходный код работает отлично - если в клетке
          всего одно сокровище!
        courseC_maze_loops_challenge2_b: Use loops so you don't run out of `collect`
          blocks!
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Ты можешь использовать команду `собрать`
          несколько раз, чтобы собрать больше сокровищ.
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Ты можешь использовать команду `собрать`
          несколько раз, чтобы собрать больше сокровищ.
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: Не вздумай решать это без циклов!
        courseC_harvester_loops_challenge1_b: Повтори блоки `двигаться вперёд` и `собрать
          кукурузу` сколько потребуется, затем `повернуть вправо` в каждом углу.
        courseC_harvester_loops_challenge1_c: |-
          Лучший способ собрать первые четыре пучка - использовать один блок `повторить` внутри другого. Ты можешь использовать этот подход и для остальной головоломки!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">2</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></next></block></xml>
      course2_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: One way to solve this looks like a zig-zag.
          Another way looks like a spiral! There are lots of different solutions to
          a puzzle like this. Be persistent!
        courseC_harvester_loops_challenge2_b: You can repeat `move forward` and `pick
          lettuce` as many times as you need to, then turn at each corner.
        courseC_harvester_loops_challenge2_c: |-
          This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          This spiral pattern can be coded with just 18 blocks!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: Мысленно раздели весь путь на три этапа.
          У каждого из них есть закономерность, который ты можешь описать в цикле.
        courseC_maze_loops_challenge1_b: Во всех промежутках между циклами нужно `повернуть
          налево` или `повернуть направо`, чтобы подготовить Скрэта к следующему циклу.
        courseC_maze_loops_challenge1_c: |-
          Если ты зашёл так далеко, осталось лишь `повернуть налево`, а затем `двигаться вперёд` несколько раз. Не сдавайся!

          ![](<https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png>)
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _Если отправишь меня назад, будь очень
          внимателен, выбирая направление поворота!_
        courseC_maze_programming_challenge2_b: Кратчайший путь использует всего 5
          блоков, но там используется блок "повторить"!
      course3_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: If you call the function one more time,
          you can create the same design in the final corner. You can also `jump to`
          other positions or change the whole thing around however you want!
      course3_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          This `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      course3_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_a: Почему первая половина этой программы
          работает? Подумай, почему пчеле приходится двигаться назад. Сколько нектара
          собирает пчела всякий раз, как переползает через цветок?
        courseD_bee_debugging_challenge1_b: Заставь пчелу использовать ту же схему
          на пути назад. Сколько меда ей необходимо сделать всякий раз, как она переползает
          через соту?
        courseD_bee_debugging_challenge1_c: |-
          Когда пчела доберется до нижнего ряда, заставь ее повторить следующие команды:

          -   повторить 2 раза:
              -   двигаться вперед
              -   сделать 3 единицы меда
          -   двигаться назад
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          Если головоломка покажется сложной, попробуй создавать свою функцию понемногу.

          Добавь несколько блоков, а затем испытай их. Добавь еще блоки и испытай еще раз.  Скоро у тебя все получится!
        courseE_bee_functions_challenge1_b: Remember to build your code inside of
          the green function block.
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          Если головоломка покажется сложной, попробуй создавать свою функцию понемногу.

          Добавь несколько блоков, а затем испытай их. Добавь еще блоки и испытай еще раз.  Скоро у тебя все получится!
        courseE_bee_functions_challenge1_b: Remember to build your code inside of
          the green function block.
      course3_bee_functions_challenge3:
        courseF_bee_functions_challenge1_a: Можешь воспользоваться функциями из набора
          инструментов. Функцию можно вызвать внутри определения другой функции!
      course3_bee_functions_challenge4:
        courseF_bee_functions_challenge2_a: |-
          Если имеется путь направо, тебе нужно сделать следующее:

          -   добыть любой нектар или сделать любой мед.
          -   свернуть направо на боковую дорожку.
          -   переместится к концу боковой дорожку.
          -   повернуть направо.

          Если ты повторишь эти действия дважды, то будешь готов к перемещению назад и вниз по главной дороге.

          **Хочешь увидеть все решение – просто нажми и получи еще одну подсказку!**
        courseF_bee_functions_challenge2_b: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_if">
                              <title name="DIR">isPathRight</title>
                              <statement name="DO">
                                <block type="procedures_callnoreturn" id="function">
                                  <mutation name="move and check"/>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation/>
              <title name="NAME">check nectar or honey</title>
              <statement name="STACK">
                <block type="bee_ifElseFlower">
                  <title name="LOC">atFlower</title>
                  <statement name="DO">
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">nectarRemaining</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_nectar"/>
                      </statement>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">honeyAvailable</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_honey"/>
                      </statement>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
              <mutation/>
              <title name="NAME">move and check</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                      <mutation name="check nectar or honey"/>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_untilBlocked">
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
          </xml>
      course3_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_a: "Start by focusing on collect TWO
          gems from each of the first two piles.\n\n![](<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png>)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Затем собери оставшиеся жемчужины
          в этом ряду.\n\n![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png>)\nДобавь эти блоки к своей программе.\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Наконец, собери остальные сокровища.
          Добавь эти блоки к своей программе.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">turnRight</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Вот полное решение этой головоломки.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">4</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="controls_repeat">
                          <title name="TIMES">2</title>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveForward</title>
                              <next>
                                <block type="controls_repeat">
                                  <title name="TIMES">2</title>
                                  <statement name="DO">
                                    <block type="collector_collect"/>
                                  </statement>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      course3_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: The `STEP` button could be very helpful
          in this challenge.
        courseD_farmer_condLoops_challenge1_b: В обычной ситуации ты просто «соберешь
          тыкву», когда окажешься около тыквы. Что еще тебе потребуется сделать, когда
          ты окажешься около тыквы?
      course3_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: The amount of each vegetable in each
          space varies. Use `while` loops for these.
      course3_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: Налево или направо? Решать тебе!
        courseC_maze_debugging_challenge1_b: Scrat's path is the shape of a rectangle!
          He needs to turn the same way each time!
        courseC_maze_debugging_challenge1_c: If you are getting stuck, you can always
          start over, or remove all the code and find your own way!
      course3_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_a: One way to solve this is to add more
          steps forward in between the turns.
        courseC_maze_debugging_challenge2_b: If you are getting stuck, you can always
          start over or remove all the code and find your own way!
        courseC_maze_debugging_challenge2_c: |-
          There are two different paths you can follow just using `move forward`, and only four turns. If you find a way to use the `repeat` block, there may be even more!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      course3_playLab_challenge1:
        courseE_playLab_challenge1_a: |-
          Here are some things you could do when the player wins the game:

          -   Make the dinosaur vanish.
          -   Stop the squirrels.
          -   Make the squirrels and knight happy.
          -   Set a new background.
          -   Make the knight thank the player for helping.
          -   Make all of the actors vanish and show a "You Win!" message.
        courseE_playLab_challenge1_b: |-
          Here are some things you could do when the player loses the game:

          -   Make the knight vanish.
          -   Make the squirrels sad.
          -   Make the dinosaur say something.
          -   Set a new background.
          -   Make all of the actors vanish and show a "Game Over" message.
      course4_artist_binary_challenge2:
        courseD_artist_binary_challenge2_a: |-
          The best tip I have for you is to press `⟲ Start Over` if it starts to get really messy.

          There are only few lines wrong in the original program. If one approach fails, back up and try again. There is a solution!
      course4_artist_concept_challenge2:
        courseE_artist_concept_challenge2_a: Once you define a function, you can call
          it over and over again - whenever and wherever you want!
        courseE_artist_concept_challenge2_b: |-
          You can jump to different positions on the canvas using this command:

          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      course4_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          This `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      course4_artist_variables_challenge1:
        courseF_artist_variables_challenge1_a: Длина каждой вертикальной линии – «10».
          Длина каждой горизонтальной линии определяется переменной «длина».
        courseF_artist_variables_challenge1_b: Тебе потребуется увеличить значение
          «длины» на 10 **дважды** внутри цикла.
        courseF_artist_variables_challenge1_c: Для выполнения этой схемы тебе потребуется
          дважды повернуть налево, дважды повернуть направо и переместиться вперед
          в общей сложности четыре раза.
        courseF_artist_variables_challenge1_d: |-
          В этой головоломке используется всего один цикл. Безо всяких переменных аналогичный путь мог бы быть просто зигзагообразным.

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          Если столкнешься с проблемой, начни создавать это изображение, а затем постарайся понять, где можно использовать переменные для изменения длины горизонтальных линий.
        courseF_artist_variables_challenge1_e: |-
          А вот и решение.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course4_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_a: |-
          Основная программа должна выглядеть примерно так:

          <xml>
          <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="procedures_callnoreturn" inline="false">
                  <mutation name="pick row">
                    <arg name="length"/>
                  </mutation>
                  <value name="ARG0">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <next>
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="pick row">
                                <arg name="length"/>
                              </mutation>
                              <value name="ARG0">
                                <block type="math_number">
                                  <title name="NUM">5</title>
                                </block>
                              </value>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                      <next>
                                        <block type="procedures_callnoreturn" inline="false">
                                          <mutation name="pick row">
                                            <arg name="length"/>
                                          </mutation>
                                          <value name="ARG0">
                                            <block type="math_number">
                                              <title name="NUM">6</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                              <next>
                                                <block type="maze_move">
                                                  <title name="DIR">moveForward</title>
                                                  <next>
                                                    <block type="procedures_callnoreturn" inline="false">
                                                      <mutation name="pick row">
                                                        <arg name="length"/>
                                                      </mutation>
                                                      <value name="ARG0">
                                                        <block type="math_number">
                                                          <title name="NUM">4</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
        courseF_bee_fwp_challenge1_b: |-
          Look at how much corn is available to harvest in each space. Do you see the counter pattern? The `length` parameter should be used to set the maximum value in the `for loop`.

          Don't forget to have the farmer move back to the main path after harvesting!
        courseF_bee_fwp_challenge1_c: |-
          Помести цикл for внутрь функции и установи его на счет с 1 до значения «длины» с шагом 1.
          Внутри этого цикла ты должен двигаться вперед и собирать всю кукурузу.

          <xml>
          <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                      </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: |-
          Inside the `for loop` you will want to `move forward` then `get nectar` **counter times**.
          After the `for loop` you can just `move backward` **length times**.

          You may need to read this hint several times to understand it. The part in **bold** is a hint about how to use the two `repeat` loops you will need.
        courseF_bee_fwp_challenge1_e: |-
          **А вот и решение:**

          <xml>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_corn"/>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
              </block></xml>
      course4_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_a: |-
          Начни с того, чтобы убедиться, что ты понимаешь, как _должна_ работать эта функция. Двигаясь по каждой дорожке, фермерша будет стараться собирать только кукурузу. Как можно заставить ее проверять вместо этого на наличие каждого из 3 овощей и собирать только тот, что она найдет?

          Добавь к функции условные операторы, чтобы фермерша проверяла на наличие кукурузы, тыкв и салата.
        courseF_bee_fwp_challenge2_b: "Are you running out of `move forward` blocks?\nTry
          using a _second_ `for loop` in your main program. \n\n**Note:** Be careful
          not to confuse `counter` with `counter2` in your code."
        courseF_bee_fwp_challenge2_c: |-
          **Вот как должна выглядеть твоя функция:**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_ifHasCrop">
                                  <title name="LOC">Corn</title>
                                  <statement name="DO">
                                    <block type="harvester_corn"/>
                                  </statement>
                                  <next>
                                    <block type="harvester_ifHasCrop">
                                      <title name="LOC">Pumpkin</title>
                                      <statement name="DO">
                                        <block type="harvester_pumpkin"/>
                                      </statement>
                                      <next>
                                        <block type="harvester_ifHasCrop">
                                          <title name="LOC">Lettuce</title>
                                          <statement name="DO">
                                            <block type="harvester_lettuce"/>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |-
          **Вот как должна выглядеть твоя основная программа:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter2</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">6</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="procedures_callnoreturn" inline="false">
                          <mutation name="pick row">
                            <arg name="length"/>
                          </mutation>
                          <value name="ARG0">
                            <block type="variables_get">
                              <title name="VAR">counter2</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
              </block></xml>
      course4_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: Не забудь о возможности «повторить»
          одну команду или целую схему. Можно «повторить» даже блок «повторить»!
        courseD_bee_nested_loops_challenge2_b: Чтобы получить все 4 жемчужины, используй
          сначала цикл, чтобы уйти из центра. Поверни налево или направо, а затем
          используй вложенный цикл для перехода от первой груды сокровищ ко второй.
          Если повторить вложенный цикл достаточное количество раз, собиратель обойдет
          _всю_ пещеру!
        courseD_bee_nested_loops_challenge2_c: В самой короткой программе, собирающей
          все сокровища, используются всего один блок «собрать» и два поворота.
        courseD_bee_nested_loops_challenge2_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course4_harvester_nested_loops_challenge1:
        courseD_harvester_nested_loops_challenge1_a: You have probably already used
          a loop to create a zig-zag pattern. If you remember that algorithm, you
          can make a few additions to it here.
      course4_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          Чтобы заставить актеров говорить, тебе потребуются дополнительные блоки из набора инструментов.

          <xml><block type="studio_saySpriteParamsTime" inline="true">
                <value name="SPRITE">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                                <value name="TEXT">
                            <block type="text">
                              <title name="TEXT">Knock knock.</title>
                            </block>
                          </value>
                <value name="TIME">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                </block></xml>
      courseA_artist_loops2:
        courseA_artist_loops2_a: Can't figure out how to draw a line?  Start attaching
          blocks to the <xml><block type="when_run"/></xml> block to see what happens.
        courseA_artist_loops2_b: Use this block <xml><block type="simple_move_right"/></xml>
          to solve this puzzle.
      courseA_artist_loops2_2018:
        courseA_artist_loops2_a: Can't figure out how to draw a line?  Start attaching
          blocks to the <xml><block type="when_run"/></xml> block to see what happens.
        courseA_artist_loops2_b: Use this block <xml><block type="simple_move_right"/></xml>
          to solve this puzzle.
      courseA_artist_loops2_2019:
        courseA_artist_loops2_a: Can't figure out how to draw a line?  Start attaching
          blocks to the <xml><block type="when_run"/></xml> block to see what happens.
        courseA_artist_loops2_b: Use this block <xml><block type="simple_move_right"/></xml>
          to solve this puzzle.
      courseA_artist_loops3:
        courseA_artist_loops3_a: Trace slowly through the program with your finger
          to see where it goes wrong.
        courseA_artist_loops3_b: |-
          You will want to use a block like this to solve this puzzle.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2018:
        courseA_artist_loops3_a: Trace slowly through the program with your finger
          to see where it goes wrong.
        courseA_artist_loops3_b: |-
          You will want to use a block like this to solve this puzzle.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2019:
        courseA_artist_loops3_a: Trace slowly through the program with your finger
          to see where it goes wrong.
        courseA_artist_loops3_b: |-
          You will want to use a block like this to solve this puzzle.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops4:
        courseA_artist_loops4_a: If you want the loop to repeat more than 4 times,
          you can change the number at the top of the block.
        courseA_artist_loops4_b: |-
          Since you can only use one <xml><block type="simple_move_right"/></xml>

          block, try putting it inside of the <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> loop.
      courseA_artist_loops4_2018:
        courseA_artist_loops4_a: If you want the loop to repeat more than 4 times,
          you can change the number at the top of the block.
        courseA_artist_loops4_b: |-
          Since you can only use one <xml><block type="simple_move_right"/></xml>

          block, try putting it inside of the <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> loop.
      courseA_artist_loops4_2019:
        courseA_artist_loops4_a: If you want the loop to repeat more than 4 times,
          you can change the number at the top of the block.
        courseA_artist_loops4_b: |-
          Since you can only use one <xml><block type="simple_move_right"/></xml>

          block, try putting it inside of the <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> loop.
      courseA_artist_loops5:
        courseA_artist_loops5_a: Try using what you've learned about <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> blocks to complete
          this puzzle!
        courseA_artist_loops5_b: If you want the loop to repeat more than 4 times,
          you can change the number at the top of the block.
        courseA_artist_loops5_c: "Since you can only use one <xml><block type=\"simple_move_right\"/></xml>
          block, try putting it inside of the \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\nloop."
      courseA_artist_loops5_2018:
        courseA_artist_loops5_a: Try using what you've learned about <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> blocks to complete
          this puzzle!
        courseA_artist_loops5_b: If you want the loop to repeat more than 4 times,
          you can change the number at the top of the block.
        courseA_artist_loops5_c: "Since you can only use one <xml><block type=\"simple_move_right\"/></xml>
          block, try putting it inside of the \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\nloop."
      courseA_artist_loops5_2019:
        courseA_artist_loops5_a: Try using what you've learned about <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> blocks to complete
          this puzzle!
        courseA_artist_loops5_b: If you want the loop to repeat more than 4 times,
          you can change the number at the top of the block.
        courseA_artist_loops5_c: "Since you can only use one <xml><block type=\"simple_move_right\"/></xml>
          block, try putting it inside of the \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\nloop."
      courseA_artist_loops6:
        courseA_artist_loops6_a: Can't figure out how to make the hill?  Try playing
          with the blocks a bit to see what each one draws.
        courseA_artist_loops6_b: You will need 2 blocks in 2 directions to solve this
          puzzle.
      courseA_artist_loops6_2018:
        courseA_artist_loops6_a: Can't figure out how to make the hill?  Try playing
          with the blocks a bit to see what each one draws.
        courseA_artist_loops6_b: You will need 2 blocks in 2 directions to solve this
          puzzle.
      courseA_artist_loops6_2019:
        courseA_artist_loops6_a: Can't figure out how to make the hill?  Try playing
          with the blocks a bit to see what each one draws.
        courseA_artist_loops6_b: You will need 2 blocks in 2 directions to solve this
          puzzle.
      courseA_artist_loops7:
        courseA_artist_loops7_a: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
        courseA_artist_loops7_b: Write the code for one wave first, then repeat that
          to draw the other two.
        courseA_artist_loops7_c: Remember you can put more than one block in a <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          loop.
      courseA_artist_loops7_2018:
        courseA_artist_loops7_a: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
        courseA_artist_loops7_b: Write the code for one wave first, then repeat that
          to draw the other two.
        courseA_artist_loops7_c: |-
          Remember you can put more than one block in a <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> loop.
      courseA_artist_loops7_2019:
        courseA_artist_loops7_a: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
        courseA_artist_loops7_b: Write the code for one wave first, then repeat that
          to draw the other two.
        courseA_artist_loops7_c: |-
          Remember you can put more than one block in a <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> loop.
      courseA_artist_loops8:
        courseA_artist_loops8_a: Try running the code to see what has been written
          for you.
        courseA_artist_loops8_b: How would you loop the code that has been given to
          you?
        courseA_artist_loops8_c: |-
          What does the code do?\
          What is it supposed to do?\
          What does that tell you?
      courseA_artist_loops8_2018:
        courseA_artist_loops8_a: Try running the code to see what has been written
          for you.
        courseA_artist_loops8_b: How would you loop the code that has been given to
          you?
        courseA_artist_loops8_c: |-
          What does the code do?\
          What is it supposed to do?\
          What does that tell you?
      courseA_artist_loops8_2019:
        courseA_artist_loops8_a: Try running the code to see what has been written
          for you.
        courseA_artist_loops8_b: How would you loop the code that has been given to
          you?
        courseA_artist_loops8_c: |-
          What does the code do?\
          What is it supposed to do?\
          What does that tell you?
      courseA_artist_loops9:
        courseA_artist_loops9_a: Add another block to the code you are given to draw
          the rest of the stairs.
        courseA_artist_loops9_b: "The block you add should go inside of the \n\n<xml><block
          type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>\n\n
          loop."
        courseA_artist_loops9_c: If you can't figure out where to put the loop, try
          writing your code step-by-step and look for patterns.
      courseA_artist_loops9_2018:
        courseA_artist_loops9_a: Add another block to the code you are given to draw
          the rest of the stairs.
        courseA_artist_loops9_b: |-
          The block you add should go inside of the <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml> loop.
        courseA_artist_loops9_c: If you can't figure out where to put the loop, try
          writing your code step-by-step and look for patterns.
      courseA_artist_loops9_2019:
        courseA_artist_loops9_a: Add another block to the code you are given to draw
          the rest of the stairs.
        courseA_artist_loops9_b: "The block you add should go inside of the \n\n<xml><block
          type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>\n\n
          loop."
        courseA_artist_loops9_c: If you can't figure out where to put the loop, try
          writing your code step-by-step and look for patterns.
      courseA_artist_loops_challenge2a:
        courseA_artist_loops_challenge2_a: Blocks like this <xml>  <block type="simple_move_up_left"/></xml>
          will let your artist move at a slant!
        courseA_artist_loops_challenge2_b: When you finish one tent, `jump` up twice
          to get to the next!
        courseA_artist_loops_challenge2_c: All of your blocks will need to be inside
          of a loop to finish this puzzle.
      courseA_artist_loops_challenge2a_2018:
        courseA_artist_loops_challenge2_a: Blocks like this <xml>  <block type="simple_move_up_left"/></xml>
          will let your artist move at a slant!
        courseA_artist_loops_challenge2_b: When you finish one tent, `jump` up twice
          to get to the next!
        courseA_artist_loops_challenge2_c: All of your blocks will need to be inside
          of a loop to finish this puzzle.
      courseA_artist_loops_challenge2a_2019:
        courseA_artist_loops_challenge2_a: Blocks like this <xml>  <block type="simple_move_up_left"/></xml>
          will let your artist move at a slant!
        courseA_artist_loops_challenge2_b: When you finish one tent, `jump` up twice
          to get to the next!
        courseA_artist_loops_challenge2_c: All of your blocks will need to be inside
          of a loop to finish this puzzle.
      courseA_collector_loops1:
        courseA_collector_loops1_a: |-
          After you have moved to a square with treasure, use this block to pick it up.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: A simple solution would be to move East 2 times,
          then get the treasure.
      courseA_collector_loops1_2018:
        courseA_collector_loops1_a: |-
          After you have moved to a square with treasure, use this block to pick it up.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: A simple solution would be to move East 2 times,
          then get the treasure.
      courseA_collector_loops1_2019:
        courseA_collector_loops1_a: |-
          After you have moved to a square with treasure, use this block to pick it up.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: A simple solution would be to move East 2 times,
          then get the treasure.
      courseA_collector_loops2:
        courseA_collector_loops2_a: You'll have to move before you can collect any
          treasure.
        courseA_collector_loops2_b: |-
          After you have moved to a square with treasure, use this block to pick it up.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018:
        courseA_collector_loops2_a: You'll have to move before you can collect any
          treasure.
        courseA_collector_loops2_b: |-
          After you have moved to a square with treasure, use this block to pick it up.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2019:
        courseA_collector_loops2_a: You'll have to move before you can collect any
          treasure.
        courseA_collector_loops2_b: |-
          After you have moved to a square with treasure, use this block to pick it up.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3:
        courseA_collector_loops3_a: Try using a <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loop!
        courseA_collector_loops3_b: Remember, you can put more than 1 block inside
          a <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> loop.
      courseA_collector_loops3_2018:
        courseA_collector_loops3_a: Try using a <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loop!
        courseA_collector_loops3_b: Remember, you can put more than 1 block inside
          a <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> loop.
      courseA_collector_loops3_2019:
        courseA_collector_loops3_a: "Try using a \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\n loop!"
        courseA_collector_loops3_b: Remember, you can put more than 1 block inside
          a <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> loop.
      courseA_collector_loops4:
        courseA_collector_loops4_a: To change how far Laurel goes, change the number
          of times that the loop runs.
        courseA_collector_loops4_b: Don't forget that Laurel needs to walk down and
          collect the treasure after she finishes the <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loop!
      courseA_collector_loops4_2018:
        courseA_collector_loops4_a: To change how far Laurel goes, change the number
          of times that the loop runs.
        courseA_collector_loops4_b: Don't forget that Laurel needs to walk down and
          collect the treasure after she finishes the <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loop!
      courseA_collector_loops4_2019:
        courseA_collector_loops4_a: To change how far Laurel goes, change the number
          of times that the loop runs.
        courseA_collector_loops4_b: Don't forget that Laurel needs to walk down and
          collect the treasure after she finishes the <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loop!
      courseA_collector_loops5:
        courseA_collector_loops5_a: If you can't figure out the answer right away,
          try using a piece of paper to figure out what arrows you will need and look
          for a pattern.
        courseA_collector_loops5_b: Try splitting the problem into 2 parts, moving
          sideways and then down.
        courseA_collector_loops5_c: You'll want to start with a <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loop that moves Laurel
          west and collects treasure.
      courseA_collector_loops5_2018:
        courseA_collector_loops5_a: If you can't figure out the answer right away,
          try using a piece of paper to figure out what arrows you will need and look
          for a pattern.
        courseA_collector_loops5_b: Try splitting the problem into 2 parts, moving
          sideways and then down.
        courseA_collector_loops5_c: You'll want to start with a <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loop that moves Laurel
          west and collects treasure.
      courseA_collector_loops5_2019:
        courseA_collector_loops5_a: If you can't figure out the answer right away,
          try using a piece of paper to figure out what arrows you will need and look
          for a pattern.
        courseA_collector_loops5_b: Try splitting the problem into 2 parts, moving
          sideways and then down.
        courseA_collector_loops5_c: You'll want to start with a <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loop that moves Laurel
          west and collects treasure.
      courseA_collector_loops6:
        courseA_collector_loops6_a: Не можешь догадаться, что не так? Попробуй прогнать
          код пару раз и посмотреть, что получится.
        courseA_collector_loops6_b: The shortest solution has 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loops, one after the
          other.
      courseA_collector_loops6_2018:
        courseA_collector_loops6_a: Не можешь догадаться, что не так? Попробуй прогнать
          код пару раз и посмотреть, что получится.
        courseA_collector_loops6_b: The shortest solution has 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loops, one after the
          other.
      courseA_collector_loops6_2019:
        courseA_collector_loops6_a: Не можешь догадаться, что не так? Попробуй прогнать
          код пару раз и посмотреть, что получится.
        courseA_collector_loops6_b: The shortest solution has 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loops, one after the
          other.
      courseA_collector_loops7:
        courseA_collector_loops7_a: If you can't figure out what comes next, try running
          the code to see where Laurel ends up.
      courseA_collector_loops7_2018:
        courseA_collector_loops7_a: If you can't figure out what comes next, try running
          the code to see where Laurel ends up.
      courseA_collector_loops7_2019:
        courseA_collector_loops7_a: If you can't figure out what comes next, try running
          the code to see where Laurel ends up.
      courseA_collector_loops8:
        courseA_collector_loops8_a: If you are having trouble figuring this puzzle
          out, try writing the moves down on a piece of paper and looking for a pattern.
        courseA_collector_loops8_b: Try breaking this puzzle into 3 separate problems,
          and writing loops for each.
        courseA_collector_loops8_c: Remember you can write one piece of the code at
          a time, then press "Run" to figure out where you need to go from there.
      courseA_collector_loops8_2018:
        courseA_collector_loops8_a: If you are having trouble figuring this puzzle
          out, try writing the moves down on a piece of paper and looking for a pattern.
        courseA_collector_loops8_b: Try breaking this puzzle into 3 separate problems,
          and writing loops for each.
        courseA_collector_loops8_c: Remember you can write one piece of the code at
          a time, then press "Run" to figure out where you need to go from there.
      courseA_collector_loops8_2019:
        courseA_collector_loops8_a: If you are having trouble figuring this puzzle
          out, try writing the moves down on a piece of paper and looking for a pattern.
        courseA_collector_loops8_b: Try breaking this puzzle into 3 separate problems,
          and writing loops for each.
        courseA_collector_loops8_c: Remember you can write one piece of the code at
          a time, then press "Run" to figure out where you need to go from there.
      courseA_collector_loops9:
        courseA_collector_loops9_a: 'If you can''t spot the best places to use loops,
          try coding it out step-by-step and look for a pattern. '
        courseA_collector_loops9_b: Try putting 2 of your <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loops inside of another
          loop to make your code shorter!
      courseA_collector_loops9_2018:
        courseA_collector_loops9_a: 'If you can''t spot the best places to use loops,
          try coding it out step-by-step and look for a pattern. '
        courseA_collector_loops9_b: Try putting 2 of your <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loops inside of another
          loop to make your code shorter!
      courseA_collector_loops9_2019:
        courseA_collector_loops9_a: 'If you can''t spot the best places to use loops,
          try coding it out step-by-step and look for a pattern. '
        courseA_collector_loops9_b: Try putting 2 of your <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> loops inside of another
          loop to make your code shorter!
      courseA_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Try changing the numbers in each loop
          if something seems wrong.
        courseA_collector_loops_challenge1_b: You don't need to use a loop if you
          are only doing something one time.
        courseA_collector_loops_challenge1_c: There are 6 gems on the right side of
          the cave when you start, but you only need to get treasure 5 times moving
          South. Do you know why?
        courseA_collector_loops_challenge1_d: |-
          The starting program doesn't collect the last 2 gems. Try adding this code at the very end:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2018:
        courseA_collector_loops_challenge1_a: Try changing the numbers in each loop
          if something seems wrong.
        courseA_collector_loops_challenge1_b: You don't need to use a loop if you
          are only doing something one time.
        courseA_collector_loops_challenge1_c: There are 6 gems on the right side of
          the cave when you start, but you only need to get treasure 5 times moving
          South. Do you know why?
        courseA_collector_loops_challenge1_d: |-
          The starting program doesn't collect the last 2 gems. Try adding this code at the very end:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2019:
        courseA_collector_loops_challenge1_a: Try changing the numbers in each loop
          if something seems wrong.
        courseA_collector_loops_challenge1_b: You don't need to use a loop if you
          are only doing something one time.
        courseA_collector_loops_challenge1_c: There are 6 gems on the right side of
          the cave when you start, but you only need to get treasure 5 times moving
          South. Do you know why?
        courseA_collector_loops_challenge1_d: |-
          The starting program doesn't collect the last 2 gems. Try adding this code at the very end:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: You only need to use 1 block to solve
          this.
        courseA_collector_loops_challenge2_a: You can move back over the path a second
          time before moving south.
      courseA_collector_loops_challenge2kp:
        courseA_collector_loops_challenge2kp_b: Try this path to get you to a solution.
        courseA_collector_loops_challenge2kp_a: Can you use loops to solve this puzzle?
      courseA_collector_loops_challenge2kp_2018:
        courseA_collector_loops_challenge2kp_b: Try this path to get you to a solution.
        courseA_collector_loops_challenge2kp_a: Can you use loops to solve this puzzle?
      courseA_collector_loops_challenge2kp_2019:
        courseA_collector_loops_challenge2kp_b: Try this path to get you to a solution.
        courseA_collector_loops_challenge2kp_a: Can you use loops to solve this puzzle?
      courseA_collector_preLoops4:
        courseA_collector_preLoops4_a: To grab the treasure, snap two ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png)
          blocks and one ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          block to the bottom of the program and click "Run"!
      courseA_collector_preLoops5:
        courseA_collector_preLoops5_a: You'll need to go two different directions
          to get even one gem!
      courseA_collector_preLoops6:
        courseA_collector_preLoops6_a: You will need to use two ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          blocks to solve this puzzle.
      courseA_collector_preLoops7:
        courseA_collector_loops2_b: |-
          After you have moved to a square with treasure, use this block to pick it up.

          <xml>  <block type="collector_collect"/></xml>
      courseA_harvester_loops1:
        courseA_harvester_loops1_a: |-
          Once you move to some corn, use this block to pick it!

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops1_2019:
        courseA_harvester_loops1_a: |-
          Once you move to some corn, use this block to pick it!

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops2:
        courseA_harvester_loops2_a: |-
          Your code will have **four** `move west` <xml><block type="maze_moveWest"/></xml> blocks

          and **four** `pick corn` <xml><block type="harvester_corn"/></xml> blocks.
        courseA_harvester_loops2_b: 'If you''re still having trouble, try saying the
          steps out loud. '
      courseA_harvester_loops2_2019:
        courseA_harvester_loops2_a: "Your code will have **four** `move west`\n\n<xml><block
          type=\"maze_moveWest\"/></xml>\n\nblocks and **four** <xml>\n`pick corn`\n
          \ <block type=\"harvester_corn\"/>\n</xml> blocks. "
        courseA_harvester_loops2_b: 'If you''re still having trouble, try saying the
          steps out loud. '
      courseA_harvester_loops3:
        courseA_harvester_loops3_a: |-
          Use a `repeat` block like this to help you!

          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">4</title>
            </block></xml>
        courseA_harvester_loops3_b: "To repeat code, drag out a `repeat` (<xml><block
          type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\"
          config=\"2-10\">4</title>\n  </block></xml> )loop, then put the block you
          want inside of it. "
      courseA_harvester_loops3_2019:
        courseA_harvester_loops3_a: |-
          Use a `repeat` block like this to help you!

          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">4</title>
            </block></xml>
        courseA_harvester_loops3_b: "To repeat code, drag out a `repeat` (<xml><block
          type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\"
          config=\"2-10\">4</title>\n  </block></xml> )loop, then put the block you
          want inside of it. "
      courseA_harvester_loops4:
        courseA_harvester_loops4_a: Don't be afraid to press `Run` to see what happens!
        courseA_harvester_loops4_b: How many pieces of corn are there? How many times
          does your code repeat?
      courseA_harvester_loops4_2019:
        courseA_harvester_loops4_a: Don't be afraid to press `Run` to see what happens!
        courseA_harvester_loops4_b: How many pieces of corn are there? How many times
          does your code repeat?
      courseA_harvester_loops5:
        courseA_harvester_loops5_a: If you get stuck, try solving the puzzle in 2
          parts, one part before the corner and one part after the corner.
        courseA_harvester_loops5_b: |-
          Your final code will have **one** `repeat`  <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
              </block></xml> loop, **one** `move South`   <xml><block type="maze_moveSouth" limit="1"/></xml> block, and **one** `move East`   <xml><block type="maze_moveEast" limit="1"/> </xml>block.
        courseA_harvester_loops5_c: Use this path to pick all the corn!
      courseA_harvester_loops5_2019:
        courseA_harvester_loops5_a: If you get stuck, try solving the puzzle in 2
          parts, one part before the corner and one part after the corner.
        courseA_harvester_loops5_b: |-
          Your final code will have **one** `repeat`  <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
              </block></xml> loop, **one** `move South`   <xml><block type="maze_moveSouth" limit="1"/></xml> block, and **one** `move East`   <xml><block type="maze_moveEast" limit="1"/> </xml>block.
        courseA_harvester_loops5_c: Use this path to pick all the corn!
      courseA_harvester_loops5a:
        courseA_harvester_loops5a_a: |-
          You will need one `repeat` <xml> <block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
            </block></xml> loop after another.
        courseA_harvester_loops5a_b: One loop will repeat `move South`<xml><block
          type="maze_moveSouth" limit="1"/></xml>, and the other will repeat `move
          East` <xml><block type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Use this path to move one way, and then the other.
      courseA_harvester_loops5a_2019:
        courseA_harvester_loops5a_a: |-
          You will need one `repeat` <xml> <block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
            </block></xml> loop after another.
        courseA_harvester_loops5a_b: One loop will repeat `move South`<xml><block
          type="maze_moveSouth" limit="1"/></xml>, and the other will repeat `move
          East` <xml><block type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Use this path to move one way, and then the other.
      courseA_harvester_loops5b:
        courseA_harvester_loops5b_a: Press `Run` and see what happens!
        courseA_harvester_loops5b_b: Are your loops repeating the right number of
          times?
        courseA_harvester_loops5b_c: Move one way, then the other with this path.
      courseA_harvester_loops5b_2019:
        courseA_harvester_loops5b_a: Press `Run` and see what happens!
        courseA_harvester_loops5b_b: Are your loops repeating the right number of
          times?
        courseA_harvester_loops5b_c: Move one way, then the other with this path.
      courseA_harvester_loops6:
        courseA_harvester_loops6_a: If you get stuck, try writing the steps on paper
          and looking for repeating patterns.
        courseA_harvester_loops6_b: This is the path you should take to pick all the
          corn.
      courseA_harvester_loops6_2019:
        courseA_harvester_loops6_a: If you get stuck, try writing the steps on paper
          and looking for repeating patterns.
        courseA_harvester_loops6_b: This is the path you should take to pick all the
          corn.
      courseA_harvester_loops7:
        courseA_harvester_loops7_a: |-
          You will need two `repeat` <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>loops after each other!
        courseA_harvester_loops7_b: Use two loops to follow this path.
      courseA_harvester_loops7_2019:
        courseA_harvester_loops7_a: |-
          You will need two `repeat` <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>loops after each other!
        courseA_harvester_loops7_b: Use two loops to follow this path.
      courseA_harvester_loops9:
        courseA_harvester_loops9_a: Break this puzzle up into three different parts.
          One part to the first corner, one part to the second corner, and one part
          to the end.
        courseA_harvester_loops9_b: Don't be afraid to run your code after every part
          to see what happens!
        courseA_harvester_loops9_c: Follow this path to pick all the corn.
      courseA_harvester_loops9_2019:
        courseA_harvester_loops9_a: Break this puzzle up into three different parts.
          One part to the first corner, one part to the second corner, and one part
          to the end.
        courseA_harvester_loops9_b: Don't be afraid to run your code after every part
          to see what happens!
        courseA_harvester_loops9_c: Follow this path to pick all the corn.
      courseA_harvester_seq1:
        courseA_harvester_seq1_a: |-
          Use this block to pick the corn when the harvester finds it!

          <xml>
            <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          The harvester will need to move East three times to get to the corn. Use this block:

          <xml>
            <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10:
        courseA_harvester_seq10_a: Are you stuck? Try writing down the steps on a
          piece of paper first.
        courseA_harvester_seq10_b: You need to `Move East`, then `Move North`. Do
          this two times. Don't forget to get all the corn too!
        courseA_harvester_seq10_c: Try using this path to pick all the corn.
      courseA_harvester_seq10_2019:
        courseA_harvester_seq10_a: Are you stuck? Try writing down the steps on a
          piece of paper first.
        courseA_harvester_seq10_b: You need to `Move East`, then `Move North`. Do
          this two times. Don't forget to get all the corn too!
        courseA_harvester_seq10_c: Try using this path to pick all the corn.
      courseA_harvester_seq13:
        courseA_bee_seq1_a: |-
          Use this block to pick corn once the harvester gets to it.

          <xml>
            <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq13_2019:
        courseA_bee_seq1_a: |-
          Use this block to pick corn once the harvester gets to it.

          <xml>
            <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq1_2019:
        courseA_harvester_seq1_a: |-
          Use this block to pick the corn when the harvester finds it!

          <xml>
            <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          The harvester will need to move East three times to get to the corn. Use this block:

          <xml>
            <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq2:
        courseA_harvester_seq2_a: Don't forget to use <xml><block type="harvester_corn"/></xml>
          to pick the corn!
        courseA_harvester_seq2_b: Try writing down the steps on paper to find a solution!
      courseA_harvester_seq2_2019:
        courseA_harvester_seq2_a: Don't forget to use <xml><block type="harvester_corn"/></xml>
          to pick the corn!
        courseA_harvester_seq2_b: Try writing down the steps on paper to find a solution!
      courseA_harvester_seq3:
        courseA_harvester_seq3_a: |-
          Did you remember to use this block?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Say the steps out loud and see if it helps you figure
          out the answer.
      courseA_harvester_seq3_2019:
        courseA_harvester_seq3_a: |-
          Did you remember to use this block?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Say the steps out loud and see if it helps you figure
          out the answer.
      courseA_harvester_seq4:
        courseA_harvester_seq4_a: How many spaces are between the Harvester and the
          corn? How many blocks are already in your workspace?
        courseA_harvester_seq4_b: |-
          You will need five `Move East` blocks and one `Pick Corn` block:

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq4_2019:
        courseA_harvester_seq4_a: How many spaces are between the Harvester and the
          corn? How many blocks are already in your workspace?
        courseA_harvester_seq4_b: |-
          You will need five `Move East` blocks and one `Pick Corn` block:

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5:
        courseA_harvester_seq5_a: Which block moves the harvester the wrong way?
        courseA_harvester_seq5_b: You need to remove one block.
        courseA_harvester_seq5_c: |-
          Throw this block in the trash!

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq5_2019:
        courseA_harvester_seq5_a: Which block moves the harvester the wrong way?
        courseA_harvester_seq5_b: You need to remove one block.
        courseA_harvester_seq5_c: |-
          Throw this block in the trash!

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6:
        courseA_harvester_seq6_a: If you're stuck, try saying the steps out loud.
          It could help you figure out the right path.
      courseA_harvester_seq6_2019:
        courseA_harvester_seq6_a: If you're stuck, try saying the steps out loud.
          It could help you figure out the right path.
      courseA_harvester_seq7:
        courseA_harvester_seq7_a: Try solving the puzzle in 2 parts, one part before
          the corner and one part after the corner.
        courseA_harvester_seq7_b: Having trouble? This is the path the harvester should
          take.
      courseA_harvester_seq7_2019:
        courseA_harvester_seq7_a: Try solving the puzzle in 2 parts, one part before
          the corner and one part after the corner.
        courseA_harvester_seq7_b: Having trouble? This is the path the harvester should
          take.
      courseA_harvester_seq8:
        courseA_harvester_seq8_a: Your final code should have **4** movement blocks
          and **2** pick blocks.
      courseA_harvester_seq8_2019:
        courseA_harvester_seq8_a: Your final code should have **4** movement blocks
          and **2** pick blocks.
      courseA_harvester_seq9:
        courseA_harvester_seq9_a: Run the code a few times to see what happens. Where
          does the harvester stop?
        courseA_harvester_seq9_b: Don't forget to pick all the corn! You will need
          **3** pick corn blocks.
        courseA_harvester_seq9_c: You should take this path to pick all the corn.
      courseA_harvester_seq9_2019:
        courseA_harvester_seq9_a: Run the code a few times to see what happens. Where
          does the harvester stop?
        courseA_harvester_seq9_b: Don't forget to pick all the corn! You will need
          **3** pick corn blocks.
        courseA_harvester_seq9_c: You should take this path to pick all the corn.
      courseA_maze_ramp2_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp2_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3b_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveWest">
                      <next>
                        <block type="maze_moveWest"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3b_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveWest">
                      <next>
                        <block type="maze_moveWest"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp4a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp4a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp5a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp5a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_seq1:
        courseA_maze_seq1_a: |-
          If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>
            <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          The bird will need to move West 3 times to get to the pig. Use this block:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10:
        courseA_maze_seq10_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
        courseA_maze_seq10_b: You will need to go 3 directions to solve this puzzle.
      courseA_maze_seq10_2018:
        courseA_maze_seq10_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
        courseA_maze_seq10_b: You will need to go 3 different directions to solve
          this puzzle.
      courseA_maze_seq10_2019:
        courseA_maze_seq10_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
        courseA_maze_seq10_b: You will need to go 3 different directions to solve
          this puzzle.
      courseA_maze_seq10_copy:
        courseA_maze_seq10_a: If you're having trouble, try writing down the steps
          on a piece of paper first.
        courseA_maze_seq10_b: You will need to go 3 directions to solve this puzzle.
      courseA_maze_seq13:
        courseA_maze_seq13_a: If the path you need is unclear, use your finger to
          trace your way from the bird to the pig.
        courseA_maze_seq13_b: Don't be afraid to make a mistake! Try adding blocks
          and running the code to see what will happen.
        courseA_maze_seq13_c: These <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> blocks will help you move closer to the pig.
      courseA_maze_seq13_2018:
        courseA_maze_seq13_a: If the path you need is unclear, use your finger to
          trace your way from the bird to the pig.
        courseA_maze_seq13_b: Don't be afraid to make a mistake! Try adding blocks
          and running the code to see what will happen.
        courseA_maze_seq13_c: These <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> blocks will help you move closer to the pig.
      courseA_maze_seq13_2019:
        courseA_maze_seq13_a: If the path you need is unclear, use your finger to
          trace your way from the bird to the pig.
        courseA_maze_seq13_b: Don't be afraid to make a mistake! Try adding blocks
          and running the code to see what will happen.
        courseA_maze_seq13_c: |-
          These <xml><block type="maze_moveNorth"/></xml>

          <xml><block type="maze_moveEast"/></xml>

           blocks will help you move closer to the pig.
      courseA_maze_seq1_2018:
        courseA_maze_seq1_a: |-
          If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>
            <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          The bird will need to move West 3 times to get to the pig. Use this block:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq1_2019:
        courseA_maze_seq1_a: |-
          If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>
            <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          The bird will need to move West 3 times to get to the pig. Use this block:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2:
        courseA_maze_seq2_a: This program is missing 1 block. Can you figure out which
          one?
        courseA_maze_seq2_b: Try running the code first to see where the bird ends
          up. Where do you need to go from there?
      courseA_maze_seq3:
        courseA_maze_seq3_a: 1 of the blocks is moving the bird in the wrong direction.
          Can you figure out which one and replace it with the correct block?
        courseA_maze_seq3_b: Try using the step button to find where the program goes
          wrong. Is it the 1st step? The 2nd?
        courseA_maze_seq3_c: This <xml><block type="maze_moveNorth"/></xml> block
          doesn't seem to be moving the bird in the right direction. Can you replace
          it with a different block?
      courseA_maze_seq4:
        courseA_maze_seq4_a: If you are having trouble, try to figure out what the
          correct path is and then remove the block that doesn't fit.
        courseA_maze_seq4_b: Try running the code as it is. Does something go wrong?
          Which block can you remove? How can you fix it?
      courseA_maze_seq5:
        courseA_maze_seq5_a: Try writing down the steps on paper to find a solution!
        courseA_maze_seq5_b: You will need 2 blocks, pointing in 2 directions.
      courseA_maze_seq5_2018:
        '1': Try writing down the steps on paper to find a solution!
        '2': |-
          You will need to use this block:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5_2019:
        '1': Try writing down the steps on paper to find a solution!
        '2': |-
          You will need to use this block:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5_copy:
        courseA_maze_seq5_a: Try writing down the steps on paper to find a solution!
        courseA_maze_seq5_b: You will need 2 blocks, pointing in 2 directions.
      courseA_maze_seq5a_2018:
        '1': Say the steps out loud and see if it helps you figure out the answer.
      courseA_maze_seq5a_2019:
        '1': Say the steps out loud and see if it helps you figure out the answer.
      courseA_maze_seq6:
        courseA_maze_seq6_a: Your final code should have 3 movement blocks.
        courseA_maze_seq6_b: If you get stuck, try solving the puzzle in 2 parts,
          one part before the corner and one part after the corner.
      courseA_maze_seq6_2018:
        courseA_maze_seq6_a: Your final code should have 3 movement blocks.
        courseA_maze_seq6_b: If you get stuck, try solving the puzzle in 2 parts,
          one part before the corner and one part after the corner.
      courseA_maze_seq6_2019:
        courseA_maze_seq6_a: Your final code should have 3 movement blocks.
        courseA_maze_seq6_b: If you get stuck, try solving the puzzle in 2 parts,
          one part before the corner and one part after the corner.
      courseA_maze_seq6_copy:
        courseA_maze_seq6_a: Your final code should have 3 movement blocks.
        courseA_maze_seq6_b: If you get stuck, try solving the puzzle in 2 parts,
          one part before the corner and one part after the corner.
      courseA_maze_seq7:
        courseA_maze_seq7_a: There is 1 block that you need to add to move the bird
          to the pig.
        courseA_maze_seq7_b: If you can't figure out what to do, try drawing the puzzle
          on paper and use your finger to figure out which way to move.
      courseA_maze_seq7_copy:
        courseA_maze_seq7_a: There is 1 block that you need to add to move the bird
          to the pig.
        courseA_maze_seq7_b: If you can't figure out what to do, try drawing the puzzle
          on paper and use your finger to figure out which way to move.
      courseA_maze_seq8:
        courseA_maze_seq8_a: If you're stuck, try drawing the image on paper to see
          how the bird should move.
      courseA_maze_seq8_2018:
        courseA_maze_seq8_a: If you're stuck, try drawing the image on paper to see
          how the bird should move.
      courseA_maze_seq8_2019:
        courseA_maze_seq8_a: If you're stuck, try drawing the image on paper to see
          how the bird should move.
      courseA_maze_seq8_copy:
        courseA_maze_seq8_a: If you're stuck, try drawing the image on paper to see
          how the bird should move.
      courseA_maze_seq9:
        courseA_maze_seq9_a: Stuck? Try tracing the bird's path with your finger.
        courseA_maze_seq9_b: If you're not sure what to do, try pressing "Start over"
          and running the code to see what goes wrong.
        courseA_maze_seq9_c: You will need to move in 3 directions to solve this puzzle.
      courseA_maze_seq_challenge1:
        courseA_maze_seq_challenge1_a: There are two solutions to this puzzle.
      courseA_maze_seq_challenge1_2018:
        courseA_maze_seq_challenge1_a: There are two solutions to this puzzle.
      courseA_maze_seq_challenge1_2019:
        courseA_maze_seq_challenge1_a: There are two solutions to this puzzle.
      courseA_maze_seq_challenge2:
        courseA_maze_seq_challenge2_a: Try counting the spaces with your finger. Remember
          not to count the space where you start!
      courseA_maze_seq_challenge2_2018:
        courseA_maze_seq_challenge2_a: Try counting the spaces with your finger. Remember
          not to count the space where you start!
      courseA_maze_seq_challenge2_2019:
        courseA_maze_seq_challenge2_a: Try counting the spaces with your finger. Remember
          not to count the space where you start!
      courseA_playLab_events2:
        courseA_playLab_events2_a: Look for a block that makes the dog say something.
        courseA_playLab_events2_b: |-
          This is the code you need to complete this puzzle:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018:
        courseA_playLab_events2_a: Look for a block that makes the dog say something.
        courseA_playLab_events2_b: |-
          This is the code you need to complete this puzzle:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2019:
        courseA_playLab_events2_a: Look for a block that makes the dog say something.
        courseA_playLab_events2_b: |-
          This is the code you need to complete this puzzle:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3:
        courseA_playLab_events3_a: |-
          Drag this block  <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> out and snap it to the bottom of <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml>
        courseA_playLab_events3_b: Remember to use the left arrow key to move Jorge
          to the flag once you have written your program. When the flag turns green,
          you've finished!
      courseA_playLab_events3_2018:
        courseA_playLab_events3_a: |-
          Drag this block  <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> out and snap it to the bottom of <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml>
        courseA_playLab_events3_b: Remember to use the left arrow key to move Jorge
          to the flag once you have written your program. When the flag turns green,
          you've finished!
      courseA_playLab_events3_2019:
        courseA_playLab_events3_a: |-
          Drag this block  <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> out and snap it to the bottom of <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml>
        courseA_playLab_events3_b: Remember to use the left arrow key to move Jorge
          to the flag once you have written your program. When the flag turns green,
          you've finished!
      courseA_playLab_events4:
        courseA_playLab_events4_a: |-
          Here is the event block that you will need to get Jorge to move right:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          This is the code you will need to complete this puzzle:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events4_2018:
        courseA_playLab_events4_a: |-
          Here is the event block that you will need to get Jorge to move right:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          This is the code you will need to complete this puzzle:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events4_2019:
        courseA_playLab_events4_a: |-
          Here is the event block that you will need to get Jorge to move right:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          This is the code you will need to complete this puzzle:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events5:
        courseA_playLab_events5_a: "Here are the event blocks that you will need to
          use to move Jorge up and down:\n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">up</title>\n  </block></xml>\n\nand \n\n<xml><block
          type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          Did you know that you can change the key for  the event arrow by clicking on the picture in the block and choosing a new key?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018:
        courseA_playLab_events5_a: "Here are the event blocks that you will need to
          use to move Jorge up and down:\n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">up</title>\n  </block></xml>\n\nand \n\n<xml><block
          type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          Did you know that you can change the key for  the event arrow by clicking on the picture in the block and choosing a new key?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2019:
        courseA_playLab_events5_a: "Here are the event blocks that you will need to
          use to move Jorge up and down:\n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">up</title>\n  </block></xml>\n\nand \n\n<xml><block
          type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          Did you know that you can change the key for  the event arrow by clicking on the picture in the block and choosing a new key?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6:
        courseA_playLab_events6_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          Here is the block you would use to change the background:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          Here is the block you would use to play a random sound:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events6_2018:
        courseA_playLab_events6_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          Here is the block you would use to change the background:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          Here is the block you would use to play a random sound:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events6_2019:
        courseA_playLab_events6_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          Here is the block you would use to change the background:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          Here is the block you would use to play a random sound:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events7:
        courseA_playLab_events7_a: |-
          Use this block to control what happens when the actors collide.

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playLab_events7_2018:
        courseA_playLab_events7_a: |-
          Use this block to control what happens when the actors collide.

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playLab_events7_2019:
        courseA_playLab_events7_a: |-
          Use this block to control what happens when the actors collide.

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you
          click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click
          Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when
          you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click
          the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finally, make Wendel the Wizard show
          when you click Spiff!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2018:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you
          click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click
          Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when
          you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click
          the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finally, make Wendel the Wizard show
          when you click Spiff!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2019:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you
          click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click
          Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when
          you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click
          the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finally, make Wendel the Wizard show
          when you click Spiff!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "You can make a bird sing.\n\n<xml> \n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "You can make a robot beep.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          You can make an angry monster growl.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseA_playlab_events_challenge2_2018:
        courseA_playlab_events_challenge2_a: "You can make a bird sing.\n\n<xml> \n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "You can make a robot beep.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          You can make an angry monster growl.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseA_playlab_events_challenge2_2019:
        courseA_playlab_events_challenge2_a: "You can make a bird sing.\n\n<xml> \n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "You can make a robot beep.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          You can make an angry monster growl.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseB_Scrat_ramp1_2018:
        '1': If Scrat isn't doing what you want, make sure both of the blocks have
          been fully clicked together, then click "Run" again.
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work,
          try something else!
      courseB_Scrat_ramp1_2019:
        '1': If Scrat isn't doing what you want, make sure both of the blocks have
          been fully clicked together, then click "Run" again.
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work,
          try something else!
      courseB_Scrat_ramp2_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp2_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3b_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3b_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp4a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp4a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp5a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp5a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_artist_loops2:
        courseB_artist_loops2_a: If you want the loop to repeat more than 4 times,
          you can change the number at the top of the block.
        courseB_artist_loops2_b: Попробуй запустить сначала код, чтобы посмотреть,
          где в итоге окажется художник.
      courseB_artist_loops2_2018:
        courseB_artist_loops2_a: If you want the loop to repeat more than 4 times,
          you can change the number at the top of the block.
        courseB_artist_loops2_b: Попробуй запустить сначала код, чтобы посмотреть,
          где в итоге окажется художник.
      courseB_artist_loops2_2019:
        courseB_artist_loops2_a: If you want the loop to repeat more than 4 times,
          you can change the number at the top of the block.
        courseB_artist_loops2_b: Попробуй запустить сначала код, чтобы посмотреть,
          где в итоге окажется художник.
      courseB_artist_loops3:
        courseB_artist_loops3_a: Не забудь использовать блок «повторить», чтобы твой
          код стал лучше!
        courseB_artist_loops3_b: Художнику потребуется переместиться на юг (вниз),
          чтобы нарисовать эту линию.
      courseB_artist_loops3_2018:
        courseB_artist_loops3_a: |-
          Remember to use a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loop for better code!
        courseB_artist_loops3_b: Художнику потребуется переместиться на юг (вниз),
          чтобы нарисовать эту линию.
      courseB_artist_loops3_2019:
        courseB_artist_loops3_a: |-
          Remember to use a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loop for better code!
        courseB_artist_loops3_b: Художнику потребуется переместиться на юг (вниз),
          чтобы нарисовать эту линию.
      courseB_artist_loops4:
        courseB_artist_loops4_a: Блок прыжка позволяет перемещаться вперед без рисования
          линии.
        courseB_artist_loops4_b: Тебе потребуется добавить блок внутрь цикла повтора,
          чтобы решить эту головолому.
        courseB_artist_loops4_c: Не забудь изменить количество раз повтора цикла.
      courseB_artist_loops4_2018:
        courseB_artist_loops4_a: Блок прыжка позволяет перемещаться вперед без рисования
          линии.
        courseB_artist_loops4_b: Тебе потребуется добавить блок внутрь цикла повтора,
          чтобы решить эту головолому.
        courseB_artist_loops4_c: Не забудь изменить количество раз повтора цикла.
      courseB_artist_loops4_2019:
        courseB_artist_loops4_a: Блок прыжка позволяет перемещаться вперед без рисования
          линии.
        courseB_artist_loops4_b: Тебе потребуется добавить блок внутрь цикла повтора,
          чтобы решить эту головолому.
        courseB_artist_loops4_c: Не забудь изменить количество раз повтора цикла.
      courseB_artist_loops5:
        courseB_artist_loops5_a: Вытащи цикл «повторить», а затем помести в него другие
          блоки. Сколько повторов тебе потребуется?
      courseB_artist_loops5_2018:
        courseB_artist_loops5_a: |-
          Drag out a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loop, then put the other blocks inside of it. How many times do you need to repeat?
      courseB_artist_loops5_2019:
        courseB_artist_loops5_a: |-
          Drag out a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loop, then put the other blocks inside of it. How many times do you need to repeat?
      courseB_artist_loops6:
        courseB_artist_loops6_b: Попробуй записать движения на листе бумаги и найти
          схему.
      courseB_artist_loops6_2018:
        courseB_artist_loops6_b: Попробуй записать движения на листе бумаги и найти
          схему.
      courseB_artist_loops6_2019:
        courseB_artist_loops6_b: Попробуй записать движения на листе бумаги и найти
          схему.
      courseB_artist_loops7:
        courseB_artist_loops7_a: В этом задании используются **4** цикла, один сразу
          после другого!
        courseB_artist_loops7_b: |-
          Обрати внимание, что каждый цикл представляет собой схему лестницы с движением в другом направлении.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: |-
          Эти циклы должны делать следующее:

          -   Цикл 1
              -   Направо
              -   Вниз

          -   Цикл 2
              -   Направо
              -   Вверх

          -   Цикл 3
              -   Налево
              -   Вверх

          -   Цикл 4
              -   Налево
              -   Вниз
      courseB_artist_loops7_2018:
        courseB_artist_loops7_a: В этом задании используются **4** цикла, один сразу
          после другого!
        courseB_artist_loops7_b: |-
          Обрати внимание, что каждый цикл представляет собой схему лестницы с движением в другом направлении.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: |-
          Эти циклы должны делать следующее:

          -   Цикл 1
              -   Направо
              -   Вниз

          -   Цикл 2
              -   Направо
              -   Вверх

          -   Цикл 3
              -   Налево
              -   Вверх

          -   Цикл 4
              -   Налево
              -   Вниз
      courseB_artist_loops7_2019:
        courseB_artist_loops7_a: В этом задании используются **4** цикла, один сразу
          после другого!
        courseB_artist_loops7_b: |-
          Обрати внимание, что каждый цикл представляет собой схему лестницы с движением в другом направлении.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: |-
          Эти циклы должны делать следующее:

          -   Цикл 1
              -   Направо
              -   Вниз

          -   Цикл 2
              -   Направо
              -   Вверх

          -   Цикл 3
              -   Налево
              -   Вверх

          -   Цикл 4
              -   Налево
              -   Вниз
      courseB_artist_loops8:
        courseB_artist_loops8_a: Сколько раз тебе следует повторить эту схему, чтобы
          сделать лестницу?
        courseB_artist_loops8_b: Попробуй запустить код, который тебе дали, чтобы
          узнать его назначение.
      courseB_artist_loops8_2018:
        courseB_artist_loops8_a: Сколько раз тебе следует повторить эту схему, чтобы
          сделать лестницу?
        courseB_artist_loops8_b: Попробуй запустить код, который тебе дали, чтобы
          узнать его назначение.
      courseB_artist_loops8_2019:
        courseB_artist_loops8_a: Сколько раз тебе следует повторить эту схему, чтобы
          сделать лестницу?
        courseB_artist_loops8_b: Попробуй запустить код, который тебе дали, чтобы
          узнать его назначение.
      courseB_artist_loops9:
        courseB_artist_loops9_a: Помни, что блоки прыжка позволяет перемещаться без
          рисования линии.
        courseB_artist_loops9_b: Тебе потребуется использовать блок «запад» (налево)
          для решения этой головоломки.
        courseB_artist_loops9_c: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
      courseB_artist_loops9_2018:
        courseB_artist_loops9_a: Помни, что блоки прыжка позволяет перемещаться без
          рисования линии.
        courseB_artist_loops9_b: Тебе потребуется использовать блок «запад» (налево)
          для решения этой головоломки.
        courseB_artist_loops9_c: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
      courseB_artist_loops9_2019:
        courseB_artist_loops9_a: Помни, что блоки прыжка позволяет перемещаться без
          рисования линии.
        courseB_artist_loops9_b: Тебе потребуется использовать блок «запад» (налево)
          для решения этой головоломки.
        courseB_artist_loops9_c: Can't figure out where to put the loop? Try writing
          the code step-by-step and look for a pattern.
      courseB_artist_loops_challenge1:
        courseB_artist_loops_challenge1_a: 'Блоки, как этот: <xml>  <block type="simple_move_up_right"/></xml>,
          позволят художнику двигаться под углом!'
        courseB_artist_loops_challenge1_b: Когда закончишь одну из костей, «прыгни»
          к следующей!
        courseB_artist_loops_challenge1_c: 'Тебе потребуется «двигаться» или «прыгать»
          через некоторые линии дважды. '
      courseB_artist_loops_challenge1_2018:
        courseB_artist_loops_challenge1_a: 'Блоки, как этот: <xml>  <block type="simple_move_up_right"/></xml>,
          позволят художнику двигаться под углом!'
        courseB_artist_loops_challenge1_b: Когда закончишь одну из костей, «прыгни»
          к следующей!
        courseB_artist_loops_challenge1_c: 'Тебе потребуется «двигаться» или «прыгать»
          через некоторые линии дважды. '
      courseB_artist_loops_challenge1_2019:
        courseB_artist_loops_challenge1_a: 'Блоки, как этот: <xml>  <block type="simple_move_up_right"/></xml>,
          позволят художнику двигаться под углом!'
        courseB_artist_loops_challenge1_b: Когда закончишь одну из костей, «прыгни»
          к следующей!
        courseB_artist_loops_challenge1_c: 'Тебе потребуется «двигаться» или «прыгать»
          через некоторые линии дважды. '
      courseB_artist_loops_challenge2:
        courseB_artist_loops_challenge2_a: Код для рисования крестика тебе уже дали.
          Все, что нужно – повторить крестик и «прыгнуть» на следующее место.
        courseB_artist_loops_challenge2_b: Блоки «прыгнуть» позволяют перемещаться
          в другие места без рисования.
      courseB_artist_loops_challenge2_2018:
        courseB_artist_loops_challenge2_a: Код для рисования крестика тебе уже дали.
          Все, что нужно – повторить крестик и «прыгнуть» на следующее место.
        courseB_artist_loops_challenge2_b: Блоки «прыгнуть» позволяют перемещаться
          в другие места без рисования.
      courseB_artist_loops_challenge2_2019:
        courseB_artist_loops_challenge2_a: Код для рисования крестика тебе уже дали.
          Все, что нужно – повторить крестик и «прыгнуть» на следующее место.
        courseB_artist_loops_challenge2_b: Блоки «прыгнуть» позволяют перемещаться
          в другие места без рисования.
      courseB_collector_loops1:
        courseB_collector_loops1_a: Блок <xml><block type="collector_collect_simplified"/></xml>
          можно использовать для сбора сокровищ, когда ты будешь стоять на вершине
          груды сокровищ.
      courseB_collector_loops10:
        courseB_collector_loops10_a: Если не сможешь сообразить, куда поместить циклы
          «повторить», пиши код по частям и ищи схему.
        courseB_collector_loops10_b: Попробуй записать движения на листе бумаги и
          найти схему.
      courseB_collector_loops10_2018:
        courseB_collector_loops10_a: Если не сможешь сообразить, куда поместить циклы
          «повторить», пиши код по частям и ищи схему.
        courseB_collector_loops10_b: Попробуй записать движения на листе бумаги и
          найти схему.
      courseB_collector_loops10_2019:
        courseB_collector_loops10_a: Если не сможешь сообразить, куда поместить циклы
          «повторить», пиши код по частям и ищи схему.
        courseB_collector_loops10_b: Попробуй записать движения на листе бумаги и
          найти схему.
      courseB_collector_loops1_2018:
        courseB_collector_loops1_a: Блок <xml><block type="collector_collect_simplified"/></xml>
          можно использовать для сбора сокровищ, когда ты будешь стоять на вершине
          груды сокровищ.
      courseB_collector_loops1_2019:
        courseB_collector_loops1_a: Блок <xml><block type="collector_collect_simplified"/></xml>
          можно использовать для сбора сокровищ, когда ты будешь стоять на вершине
          груды сокровищ.
      courseB_collector_loops2:
        courseB_collector_loops2_a: You'll have to move before you can collect any
          treasure.
        courseB_collector_loops2_b: Когда доберешься до места с сокровищами, используй
          блок <xml><block type="collector_collect"/></xml>, чтобы его собрать.
      courseB_collector_loops2_2018:
        courseB_collector_loops2_a: You'll have to move before you can collect any
          treasure.
        courseB_collector_loops2_b: Когда доберешься до места с сокровищами, используй
          блок <xml><block type="collector_collect"/></xml>, чтобы его собрать.
      courseB_collector_loops2_2019:
        courseB_collector_loops2_a: You'll have to move before you can collect any
          treasure.
        courseB_collector_loops2_b: Когда доберешься до места с сокровищами, используй
          блок <xml><block type="collector_collect"/></xml>, чтобы его собрать.
      courseB_collector_loops3:
        courseB_collector_prog3_a: Попробуй использовать блок <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml>, чтобы собрать сокровища.
        courseB_collector_prog3_b: Помни, что в цикл повтора можно поместить не один,
          а несколько блоков.
      courseB_collector_loops3_2018:
        courseB_collector_prog3_a: Попробуй использовать блок <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml>, чтобы собрать сокровища.
        courseB_collector_prog3_b: Помни, что в цикл повтора можно поместить не один,
          а несколько блоков.
      courseB_collector_loops3_2019:
        courseB_collector_prog3_a: Попробуй использовать блок <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml>, чтобы собрать сокровища.
        courseB_collector_prog3_b: Помни, что в цикл повтора можно поместить не один,
          а несколько блоков.
      courseB_collector_loops4:
        courseB_collector_loops4_a: Попробуй использовать кнопку «Шаг», чтобы понять,
          где программа работает не так.
        courseB_collector_loops4_b: To change how far Laurel goes, change the number
          of times that the loop runs.
        courseB_collector_loops4_c: Лорел нужно пройти вниз и собрать сокровища по
          окончании цикла «повторить»!
      courseB_collector_loops4_2018:
        courseB_collector_loops4_a: Попробуй использовать кнопку «Шаг», чтобы понять,
          где программа работает не так.
        courseB_collector_loops4_b: To change how far Laurel goes, change the number
          of times that the loop runs.
        courseB_collector_loops4_c: |-
          Laurel needs to walk down and collect the treasure after she finishes the `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml>loop!
      courseB_collector_loops4_2019:
        courseB_collector_loops4_a: Попробуй использовать кнопку «Шаг», чтобы понять,
          где программа работает не так.
        courseB_collector_loops4_b: To change how far Laurel goes, change the number
          of times that the loop runs.
        courseB_collector_loops4_c: |-
          Laurel needs to walk down and collect the treasure after she finishes the `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml>loop!
      courseB_collector_loops5:
        courseB_collector_loops5_a: Используй несколько циклов для достижения своей
          цели.
        courseB_collector_loops5_b: Попробуй запустить код пару раз и посмотреть,
          что получится.
      courseB_collector_loops5_2018:
        courseB_collector_loops5_a: Используй несколько циклов для достижения своей
          цели.
        courseB_collector_loops5_b: Попробуй запустить код пару раз и посмотреть,
          что получится.
      courseB_collector_loops5_2019:
        courseB_collector_loops5_a: Используй несколько циклов для достижения своей
          цели.
        courseB_collector_loops5_b: Попробуй запустить код пару раз и посмотреть,
          что получится.
      courseB_collector_loops6:
        courseB_collector_loops6_a: Не можешь понять, где программа начинает работать
          не так? Используй кнопку «Шаг» для запуска программы по одному блоку.
        courseB_collector_loops6_b: Количество раз запуска цикла повтора можно изменить,
          если нажать на цифру "3" и выбрать другую цифру.
        courseB_collector_loops6_c: Тебе потребуется использовать 3 цикла «повторить»,
          чтобы решить эту головоломку.
        courseB_collector_loops6_d: Если запутаешься, попробуй разбить эту головоломку
          на 3.
      courseB_collector_loops6_2018:
        courseB_collector_loops6_a: Не можешь понять, где программа начинает работать
          не так? Используй кнопку «Шаг» для запуска программы по одному блоку.
        courseB_collector_loops6_b: Количество раз запуска цикла повтора можно изменить,
          если нажать на цифру "3" и выбрать другую цифру.
        courseB_collector_loops6_c: |-
          You will want to use 3 `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loops to solve this puzzle.
        courseB_collector_loops6_d: Если запутаешься, попробуй разбить эту головоломку
          на 3.
      courseB_collector_loops6_2019:
        courseB_collector_loops6_a: Не можешь понять, где программа начинает работать
          не так? Используй кнопку «Шаг» для запуска программы по одному блоку.
        courseB_collector_loops6_b: Количество раз запуска цикла повтора можно изменить,
          если нажать на цифру "3" и выбрать другую цифру.
        courseB_collector_loops6_c: |-
          You will want to use 3 `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loops to solve this puzzle.
        courseB_collector_loops6_d: Если запутаешься, попробуй разбить эту головоломку
          на 3.
      courseB_collector_loops7:
        courseB_collector_loops7_a: Если головоломка покажется тебе сложной, попробуй
          нарисовать ее на бумаге, чтобы облегчить ее решение.
        courseB_collector_loops7_b: Для решения этой головоломки тебе понадобятся
          3 цикла повтора, и не забудь о дополнительных сокровищах в конце!
      courseB_collector_loops7_2018:
        courseB_collector_loops7_a: Если головоломка покажется тебе сложной, попробуй
          нарисовать ее на бумаге, чтобы облегчить ее решение.
        courseB_collector_loops7_b: Для решения этой головоломки тебе понадобятся
          3 цикла повтора, и не забудь о дополнительных сокровищах в конце!
      courseB_collector_loops7_2019:
        courseB_collector_loops7_a: Если головоломка покажется тебе сложной, попробуй
          нарисовать ее на бумаге, чтобы облегчить ее решение.
        courseB_collector_loops7_b: Для решения этой головоломки тебе понадобятся
          3 цикла повтора, и не забудь о дополнительных сокровищах в конце!
      courseB_collector_loops8:
        courseB_collector_loops8_challenge_a: Если не сможешь сообразить, куда поместить
          циклы повтора, пиши код по частям и ищи схему.
      courseB_collector_loops8_2018:
        courseB_collector_loops8_challenge_a: Если не сможешь сообразить, куда поместить
          циклы повтора, пиши код по частям и ищи схему.
      courseB_collector_loops8_2019:
        courseB_collector_loops8_challenge_a: Если не сможешь сообразить, куда поместить
          циклы повтора, пиши код по частям и ищи схему.
      courseB_collector_loops9:
        courseB_collector_loops9_a: Головоломка кажется слишком сложной?  Разбей ее
          на 3 задачи, и она станет проще.
        courseB_collector_loops9_b: Для этого решения тебе понадобятся 3 цикла повтора,
          один за другим.
      courseB_collector_loops9_2018:
        courseB_collector_loops9_a: Головоломка кажется слишком сложной?  Разбей ее
          на 3 задачи, и она станет проще.
        courseB_collector_loops9_b: Для этого решения тебе понадобятся 3 цикла повтора,
          один за другим.
      courseB_collector_loops9_2019:
        courseB_collector_loops9_a: Головоломка кажется слишком сложной?  Разбей ее
          на 3 задачи, и она станет проще.
        courseB_collector_loops9_b: Для этого решения тебе понадобятся 3 цикла повтора,
          один за другим.
      courseB_collector_loops_challenge1:
        courseB_collector_loops_challenge1_b: |-
          Начни путем зацикливания следующих команд:

          <xml>
            <block type="maze_moveSouth">
              <next>
              <block type="collector_collect"></block>
              </next>
              </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Переместиться между путями на восток
          дважды.\n\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n
          \ </xml>\n\nЭто можно сделать всего с 14 блоками. Нажми, чтобы получить
          еще одну подсказку и увидеть решение. "
        courseB_collector_loops_challenge1_d: |-
          Попробуй это!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge1_2018:
        courseB_collector_loops_challenge1_b: |-
          Начни путем зацикливания следующих команд:

          <xml>
            <block type="maze_moveSouth">
              <next>
              <block type="collector_collect"></block>
              </next>
              </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Переместиться между путями на восток
          дважды.\n\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n
          \ </xml>\n\nЭто можно сделать всего с 14 блоками. Нажми, чтобы получить
          еще одну подсказку и увидеть решение. "
        courseB_collector_loops_challenge1_d: |-
          Попробуй это!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge1_2019:
        courseB_collector_loops_challenge1_b: |-
          Начни путем зацикливания следующих команд:

          <xml>
            <block type="maze_moveSouth">
              <next>
              <block type="collector_collect"></block>
              </next>
              </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Переместиться между путями на восток
          дважды.\n\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n
          \ </xml>\n\nЭто можно сделать всего с 14 блоками. Нажми, чтобы получить
          еще одну подсказку и увидеть решение. "
        courseB_collector_loops_challenge1_d: |-
          Попробуй это!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge2:
        courseB_collector_loops_challenge2_a: Если что-то идет не так, не бойся начать
          сначала. Не сдавайся!
        courseB_collector_loops_challenge2_b: |-
          Если повторишь эту схему, Лорел не наткнется на стену на дне пещеры!

          <xml><block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block></xml>
        courseB_collector_loops_challenge2_c: Попробуй использовать блок «повторить»,
          чтобы собрать сокровища из последней груды!
        courseB_collector_loops_challenge2_d: |-
          Попробуй это решение:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified_dropdown">
                  <title name="TIMES" config="3-10">4</title>
                  <statement name="DO">
                    <block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_simplified_dropdown">
                      <title name="TIMES" config="3-10">6</title>
                      <statement name="DO">
                        <block type="collector_collect"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge2a:
        courseB_collector_loops_challenge2a_a: Если у вас что-то не получается, попробуйте
          ещё раз. Не сдавайтесь!
        courseB_collector_loops_challenge2a_b: Посмотрите на этот вариант прохождения
          лабиринта. Видите ли вы способ, который вы можете повторить?
        courseB_collector_loops_challenge2a_c: Чтобы собрать все сокровища, вам нужно
          будет либо добавить два блока <xml> <block type="collector_collect"/></xml>
          внутри вашего цикла, либо поместить блок внутри своего собственного блока
          "repeat".
      courseB_collector_loops_challenge2a_2018:
        courseB_collector_loops_challenge2a_a: Если у вас что-то не получается, попробуйте
          ещё раз. Не сдавайтесь!
        courseB_collector_loops_challenge2a_b: Посмотрите на этот вариант прохождения
          лабиринта. Видите ли вы способ, который вы можете повторить?
        courseB_collector_loops_challenge2a_c: Чтобы собрать все сокровища, вам нужно
          будет либо добавить два блока <xml> <block type="collector_collect"/></xml>
          внутри вашего цикла, либо поместить блок внутри своего собственного блока
          "repeat".
      courseB_collector_loops_challenge2a_2019:
        courseB_collector_loops_challenge2a_a: Если у вас что-то не получается, попробуйте
          ещё раз. Не сдавайтесь!
        courseB_collector_loops_challenge2a_b: Посмотрите на этот вариант прохождения
          лабиринта. Видите ли вы способ, который вы можете повторить?
        courseB_collector_loops_challenge2a_c: Чтобы собрать все сокровища, вам нужно
          будет либо добавить два блока <xml> <block type="collector_collect"/></xml>
          внутри вашего цикла, либо поместить блок внутри своего собственного блока
          "repeat".
      courseB_iceage_loops1:
        courseB_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseB_iceage_loops1_b: |-
          You will have to use this block:

          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops10:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the
          water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down
          on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseB_iceage_loops10_2019:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the
          water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down
          on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseB_iceage_loops1_2019:
        courseB_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseB_iceage_loops1_b: |-
          You will have to use this block:

          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops2:
        courseB_iceage_loops2_a: Break this puzzle into two pieces, one before the
          corner, and one after the corner.
        courseB_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseB_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseB_iceage_loops2_2019:
        courseB_iceage_loops2_a: Break this puzzle into two pieces, one before the
          corner, and one after the corner.
        courseB_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseB_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseB_iceage_loops3:
        courseB_iceage_loops3_a: |-
          Use this new block! <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">5</title>
              </block></xml>
        courseB_iceage_loops3_b: |-
          To repeat code, drag out a `repeat` loop,

          <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml>

          then put the block you want inside of it.
      courseB_iceage_loops3_2019:
        courseB_iceage_loops3_a: |-
          Use this new block!
           <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">5</title>
              </block></xml>
        courseB_iceage_loops3_b: |-
          To repeat code, drag out a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml>loop, then put the block you want inside of it.
      courseB_iceage_loops4:
        courseB_iceage_loops4_a: Try writing down the steps Scrat would take to get
          to the acorn. Do you see a pattern?
        courseB_iceage_loops4_b: Don't be afraid to run your code and see what happens!
        courseB_iceage_loops4_c: This is the path Scrat should take.
      courseB_iceage_loops4_2019:
        courseB_iceage_loops4_a: Try writing down the steps Scrat would take to get
          to the acorn. Do you see a pattern?
        courseB_iceage_loops4_b: Don't be afraid to run your code and see what happens!
        courseB_iceage_loops4_c: This is the path Scrat should take.
      courseB_iceage_loops6:
        courseB_iceage_loops6_a: Your final code will have **three** movement blocks.
        courseB_iceage_loops6_b: You only need to add **one** more loop!
        courseB_iceage_loops6_c: Your final path should look like this.
      courseB_iceage_loops6_2019:
        courseB_iceage_loops6_a: Your final code will have **three** movement blocks.
        courseB_iceage_loops6_b: You only need to add **one** more loop!
        courseB_iceage_loops6_c: Your final path should look like this.
      courseB_iceage_loops7:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece
          of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the
          acorn.
      courseB_iceage_loops7_2019:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece
          of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the
          acorn.
      courseB_iceage_loops8:
        courseB_iceage_loops8_a: Are the movement blocks right? What else can you
          change?
        courseB_iceage_loops8_b: The first loop should repeat **3** times, the second
          should repeat **5** times, the third loop should repeat **4** times, and
          the last loop should repeat **4** times.
        courseB_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseB_iceage_loops8_2019:
        courseB_iceage_loops8_a: Are the movement blocks right? What else can you
          change?
        courseB_iceage_loops8_b: The first loop should repeat **3** times, the second
          should repeat **5** times, the third loop should repeat **4** times, and
          the last loop should repeat **4** times.
        courseB_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseB_iceage_loops9:
        courseB_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller
          pieces. Don't be afraid to run your puzzle as you code!
        courseB_iceage_loops9_b: Your final code should have **4** loops.
        courseB_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseB_iceage_loops9_2019:
        courseB_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller
          pieces. Don't be afraid to run your puzzle as you code!
        courseB_iceage_loops9_b: Your final code should have **4** loops.
        courseB_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseB_maze_seq1:
        courseB_maze_seq1_a: Присоедини блоки к блоку <xml><block type="when_run"/></xml>,
          чтобы заставить птичку двигаться!
        courseB_maze_seq1_b: Вытащи три из этих стрелок <xml><block type="maze_moveSouth"/></xml>
          и присоедини их к блоку <xml><block type="when_run"/></xml>, чтобы подвести
          птичку к свинке.
      courseB_maze_seq10:
        courseB_maze_seq10_a: Попробуй сначала записать эти шаги на листе бумаги.
        courseB_maze_seq10_b: Чтобы добраться до свинки, тебе потребуется двигаться
          в двух разных направлениях.
      courseB_maze_seq11:
        courseB_maze_seq11_a: Попробуй сначала записать эти шаги на листе бумаги.
        courseB_maze_seq11_b: 'Реши эту головоломку по частям: одна часть до угла,
          а вторая – после.'
      courseB_maze_seq1_2018:
        courseB_maze_seq1_a: Connect blocks to the <xml><block type="when_run"/></xml>
          block to make Scrat move!
        courseB_maze_seq1_b: Drag three of these <xml><block type="maze_moveSouth"/></xml>
          arrows out and connect them to the <xml><block type="when_run"/></xml> block
          to get Scrat to the acorn.
      courseB_maze_seq1_2019:
        courseB_maze_seq1_a: Connect blocks to the <xml><block type="when_run"/></xml>
          block to make Scrat move!
        courseB_maze_seq1_b: Drag three of these <xml><block type="maze_moveSouth"/></xml>
          arrows out and connect them to the <xml><block type="when_run"/></xml> block
          to get Scrat to the acorn.
      courseB_maze_seq2:
        courseB_maze_seq2_a: В этой программе не хватает одного блока. Сможешь догадаться,
          какого?
        courseB_maze_seq2_b: Попробуй запустить код, который тебе дали, чтобы посмотреть,
          что птичка обязана сделать дальше.
      courseB_maze_seq3:
        courseB_maze_seq3_a: Один из блоков перемещает птичку не в том направлении.
          Сможешь догадаться, какой, и заменить его правильным блоком?
        courseB_maze_seq3_b: Попробуй использовать кнопку «Шаг», чтобы найти, где
          программа работает не так. Это первый шаг? А, может, второй?
        courseB_maze_seq3_c: Похоже, что блок <xml><block type="maze_moveWest"/></xml>
          перемещает птичку не в том направлении.
      courseB_maze_seq4:
        courseB_maze_seq4_a: Попробуй добавлять по одной инструкции до тех пор, пока
          не доберешься до свинки.
        courseB_maze_seq4_b: Решая этой головоломку, ты захочешь использовать блок
          <xml><block type="maze_moveEast"/></xml>.
      courseB_maze_seq4_2018:
        courseB_maze_seq4_a: Try adding one instruction at a time until you get to
          the acorn.
        courseB_maze_seq4_b: Решая этой головоломку, ты захочешь использовать блок
          <xml><block type="maze_moveEast"/></xml>.
      courseB_maze_seq4_2019:
        courseB_maze_seq4_a: Try adding one instruction at a time until you get to
          the acorn.
        courseB_maze_seq4_b: Решая этой головоломку, ты захочешь использовать блок
          <xml><block type="maze_moveEast"/></xml>.
      courseB_maze_seq5:
        courseB_maze_seq5_a: Если застрянешь, попробуй нарисовать этот путь на бумаге.
        courseB_maze_seq5_b: Эту головоломку можно решить 2 способами!
        courseB_maze_seq5_c: Не знаешь, как добраться до свинки?  Попробуй этот путь.
      courseB_maze_seq5_2018:
        courseB_maze_seq5_a: Если застрянешь, попробуй нарисовать этот путь на бумаге.
        courseB_maze_seq5_b: Эту головоломку можно решить 2 способами!
        courseB_maze_seq5_c: Not sure how to get to the acorn?  Try this path.
      courseB_maze_seq5_2019:
        courseB_maze_seq5_a: Если застрянешь, попробуй нарисовать этот путь на бумаге.
        courseB_maze_seq5_b: Эту головоломку можно решить 2 способами!
        courseB_maze_seq5_c: Not sure how to get to the acorn?  Try this path.
      courseB_maze_seq6:
        courseB_maze_seq6_a: В твоем окончательном коде должны быть три блока движения.
        courseB_maze_seq6_b: 'Если застрянешь, попробуй решить головоломку по частям:
          сначала двигайся вбок, а потом вверх и вниз.'
        courseB_maze_seq5_c: Эту головоломку можно решить двумя способами.
        courseB_maze_seq5_d: Не знаешь, как добраться до свинки? Попробуй этот путь!
      courseB_maze_seq6_2018:
        courseB_maze_seq6_a: В твоем окончательном коде должны быть три блока движения.
        courseB_maze_seq6_b: 'Если застрянешь, попробуй решить головоломку по частям:
          сначала двигайся вбок, а потом вверх и вниз.'
        courseB_maze_seq5_c: Эту головоломку можно решить двумя способами.
        courseB_maze_seq5_d: Not sure how to get to the acorn? Try this path!
      courseB_maze_seq6_2019:
        courseB_maze_seq6_a: В твоем окончательном коде должны быть три блока движения.
        courseB_maze_seq6_b: 'Если застрянешь, попробуй решить головоломку по частям:
          сначала двигайся вбок, а потом вверх и вниз.'
        courseB_maze_seq5_c: Эту головоломку можно решить двумя способами.
        courseB_maze_seq5_d: Not sure how to get to the acorn? Try this path!
      courseB_maze_seq7:
        courseB_maze_seq7_a: Добавь 1 блок, чтобы переместить птичку к свинке.
        courseB_maze_seq7_b: Попробуй запустить код, который тебе дали, и посмотри,
          что у тебя получится в итоге.
        courseB_maze_seq7_c: Не можешь добраться до свинки?  Попробуй этот путь!
      courseB_maze_seq7_2018:
        courseB_maze_seq7_a: Add 1 block to move Scrat to the acorn.
        courseB_maze_seq7_b: Попробуй запустить код, который тебе дали, и посмотри,
          что у тебя получится в итоге.
        courseB_maze_seq7_c: Can't get to the acorn?  Try this path!
      courseB_maze_seq7_2019:
        courseB_maze_seq7_a: Add 1 block to move Scrat to the acorn.
        courseB_maze_seq7_b: Попробуй запустить код, который тебе дали, и посмотри,
          что у тебя получится в итоге.
        courseB_maze_seq7_c: Can't get to the acorn?  Try this path!
      courseB_maze_seq8:
        courseB_maze_seq8_a: Попробуй добавлять по одному блоку, пока не решишь головоломку.
        courseB_maze_seq8_b: Эту головоломку можно решить двумя способами!
        courseB_maze_seq8_c: Не знаешь, каким путем пойти? Попробуй этот путь!
      courseB_maze_seq8_2018:
        courseB_maze_seq8_a: Попробуй добавлять по одному блоку, пока не решишь головоломку.
        courseB_maze_seq8_b: Существует два способа для решения этой головоломки!
        courseB_maze_seq8_c: Не знаешь, каким путем пойти? Попробуй этот путь!
      courseB_maze_seq8_2019:
        courseB_maze_seq8_a: Попробуй добавлять по одному блоку, пока не решишь головоломку.
        courseB_maze_seq8_b: Существует два способа для решения этой головоломки!
        courseB_maze_seq8_c: Не знаешь, каким путем пойти? Попробуй этот путь!
      courseB_maze_seq9:
        courseB_maze_seq9_a: Попробуй сначала записать все шаги на листе бумаги.
        courseB_maze_seq9_b: Создавай программу по одному блоку и тестируй ее по мере
          создания.
        courseB_maze_seq9_c: Эту головоломку можно решить двумя способами.
        courseB_maze_seq9_d: Застрял?  Попробуй этот путь!
      courseB_maze_seq9_2018:
        courseB_maze_seq9_a: Попробуй сначала записать все шаги на листе бумаги.
        courseB_maze_seq9_b: Создавай программу по одному блоку и тестируй ее по мере
          создания.
        courseB_maze_seq9_c: Эту головоломку можно решить двумя способами.
        courseB_maze_seq9_d: Застрял?  Попробуй этот путь!
      courseB_maze_seq9_2019:
        courseB_maze_seq9_a: Попробуй сначала записать все шаги на листе бумаги.
        courseB_maze_seq9_b: Создавай программу по одному блоку и тестируй ее по мере
          создания.
        courseB_maze_seq9_c: Эту головоломку можно решить двумя способами.
        courseB_maze_seq9_d: Застрял?  Попробуй этот путь!
      courseB_maze_seq_challenge1:
        courseB_maze_seq_challenge1_a: На этот раз кратчайший путь может и не привести
          к цели.
        courseB_maze_seq_challenge1_b: Попробуй использовать для начала блок <xml><block
          type="maze_moveWest"/></xml>.
      courseB_maze_seq_challenge1_2018:
        courseB_maze_seq_challenge1_a: На этот раз кратчайший путь может и не привести
          к цели.
        courseB_maze_seq_challenge1_b: Попробуй использовать для начала блок <xml><block
          type="maze_moveWest"/></xml>.
      courseB_maze_seq_challenge1_2019:
        courseB_maze_seq_challenge1_a: На этот раз кратчайший путь может и не привести
          к цели.
        courseB_maze_seq_challenge1_b: Попробуй использовать для начала блок <xml><block
          type="maze_moveWest"/></xml>.
      courseB_maze_seq_challenge2:
        courseB_maze_seq_challenge2_a: Тебе не потребуется добавлять или удалять блоки,
          чтобы решить эту головоломку.
        courseB_maze_seq_challenge2_b: Измени расстановку блоков и используй схему
          лестницы.
      courseB_maze_seq_challenge2_2018:
        courseB_maze_seq_challenge2_a: Тебе не потребуется добавлять или удалять блоки,
          чтобы решить эту головоломку.
        courseB_maze_seq_challenge2_b: Измени расстановку блоков и используй схему
          лестницы.
      courseB_maze_seq_challenge2_2019:
        courseB_maze_seq_challenge2_a: Тебе не потребуется добавлять или удалять блоки,
          чтобы решить эту головоломку.
        courseB_maze_seq_challenge2_b: Измени расстановку блоков и используй схему
          лестницы.
      courseB_playlab_events2:
        courseB_playlab_events2_a: |-
          Это блок, который заставит дракончика Дейзи говорить:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
            </xml>
      courseB_playlab_events2_2018:
        courseB_playlab_events2_a: |-
          Это блок, который заставит дракончика Дейзи говорить:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
            </xml>
      courseB_playlab_events2_2019:
        courseB_playlab_events2_a: |-
          Это блок, который заставит дракончика Дейзи говорить:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
            </xml>
      courseB_playlab_events3:
        courseB_playlab_events3_a: |-
          Это блок, который тебе следует использовать для добавления события:

          <xml>
          <block type="studio_whenSpriteClicked">
              <title name="SPRITE">0</title>
            </block>
            </xml>
        courseB_playlab_events3_b: |-
          Это блок, который тебе потребуется для изменения настроения Дейзи:

          <xml>
          <block type="studio_setSpriteEmotion">
              <title name="SPRITE">0</title>
              <title name="VALUE">random</title>
            </block>
            </xml>
      courseB_playlab_events3_2018:
        courseB_playlab_events3_a: |-
          Это блок, который тебе следует использовать для добавления события:

          <xml>
          <block type="studio_whenSpriteClicked">
              <title name="SPRITE">0</title>
            </block>
            </xml>
        courseB_playlab_events3_b: |-
          Это блок, который тебе потребуется для изменения настроения Дейзи:

          <xml>
          <block type="studio_setSpriteEmotion">
              <title name="SPRITE">0</title>
              <title name="VALUE">random</title>
            </block>
            </xml>
      courseB_playlab_events3_2019:
        courseB_playlab_events3_a: |-
          Это блок, который тебе следует использовать для добавления события:

          <xml>
          <block type="studio_whenSpriteClicked">
              <title name="SPRITE">0</title>
            </block>
            </xml>
        courseB_playlab_events3_b: |-
          Это блок, который тебе потребуется для изменения настроения Дейзи:

          <xml>
          <block type="studio_setSpriteEmotion">
              <title name="SPRITE">0</title>
              <title name="VALUE">random</title>
            </block>
            </xml>
      courseB_playlab_events4:
        courseB_playlab_events4_a: |-
          Это событие, которое управляет левой стрелкой:

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block>
            </xml>
        courseB_playlab_events4_b: |-
          Это блок, который заставляет рыцаря двигаться влево.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block>
            </xml>
      courseB_playlab_events4_2018:
        courseB_playlab_events4_a: |-
          Это событие, которое управляет левой стрелкой:

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block>
            </xml>
        courseB_playlab_events4_b: |-
          Это блок, который заставляет рыцаря двигаться влево.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block>
            </xml>
      courseB_playlab_events4_2019:
        courseB_playlab_events4_a: |-
          Это событие, которое управляет левой стрелкой:

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block>
            </xml>
        courseB_playlab_events4_b: |-
          Это блок, который заставляет рыцаря двигаться влево.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block>
            </xml>
      courseB_playlab_events5:
        courseB_playlab_events5_a: |-
          Это блок события, который управляет правой стрелкой:

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
            </block>
            </xml>
        courseB_playlab_events5_b: |-
          Это блок, который заставляет рыцаря бежать прочь.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block>
          </xml>
      courseB_playlab_events5_2018:
        courseB_playlab_events5_a: |-
          Это блок события, который управляет правой стрелкой:

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
            </block>
            </xml>
        courseB_playlab_events5_b: |-
          Это блок, который заставляет рыцаря бежать прочь.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block>
          </xml>
      courseB_playlab_events5_2019:
        courseB_playlab_events5_a: |-
          Это блок события, который управляет правой стрелкой:

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
            </block>
            </xml>
        courseB_playlab_events5_b: |-
          Это блок, который заставляет рыцаря бежать прочь.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block>
          </xml>
      courseB_playlab_events6:
        courseB_playlab_events6_a: |-
          Тебе потребуются следующие блоки событий:

          <xml>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">up</title>
            </block>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">down</title>
            </block>
            </xml>
        courseB_playlab_events6_b: |-
          Используй выпадающие стрелки на зеленых блоках событий «при нажатии стрелки \_\_\_» для выбора различных направлений.

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Доберись до всех флагов, чтобы пройти уровень!
      courseB_playlab_events6_2018:
        courseB_playlab_events6_a: |-
          Тебе потребуются следующие блоки событий:

          <xml>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">up</title>
            </block>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">down</title>
            </block>
            </xml>
        courseB_playlab_events6_b: |-
          Используй выпадающие стрелки на зеленых блоках событий «при нажатии стрелки \_\_\_» для выбора различных направлений.

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Доберись до всех флагов, чтобы пройти уровень!
      courseB_playlab_events6_2019:
        courseB_playlab_events6_a: |-
          Тебе потребуются следующие блоки событий:

          <xml>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">up</title>
            </block>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">down</title>
            </block>
            </xml>
        courseB_playlab_events6_b: |-
          Используй выпадающие стрелки на зеленых блоках событий «при нажатии стрелки \_\_\_» для выбора различных направлений.

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Доберись до всех флагов, чтобы пройти уровень!
      courseB_playlab_events7:
        courseB_playlab_events7_a: |-
          Это блок события, который тебе потребуется:

          <xml>
          <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">1</title>
            </block>
          </xml>
        courseB_playlab_events7_b: |-
          Это блок, который потребуется для воспроизведения звука:

          <xml>
          <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
          </xml>
        courseB_playlab_events7_c: |-
          Это блок, который тебе потребуется, чтобы заставить рыцаря исчезнуть:

          <xml>
          <block type="studio_vanish">
              <title name="SPRITE">1</title>
            </block>
          </xml>
      courseB_playlab_events7_2018:
        courseB_playlab_events7_a: |-
          Это блок события, который тебе потребуется:

          <xml>
          <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">1</title>
            </block>
          </xml>
        courseB_playlab_events7_b: |-
          Это блок, который потребуется для воспроизведения звука:

          <xml>
          <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
          </xml>
        courseB_playlab_events7_c: |-
          Это блок, который тебе потребуется, чтобы заставить рыцаря исчезнуть:

          <xml>
          <block type="studio_vanish">
              <title name="SPRITE">1</title>
            </block>
          </xml>
      courseB_playlab_events7_2019:
        courseB_playlab_events7_a: |-
          Это блок события, который тебе потребуется:

          <xml>
          <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">1</title>
            </block>
          </xml>
        courseB_playlab_events7_b: |-
          Это блок, который потребуется для воспроизведения звука:

          <xml>
          <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
          </xml>
        courseB_playlab_events7_c: |-
          Это блок, который тебе потребуется, чтобы заставить рыцаря исчезнуть:

          <xml>
          <block type="studio_vanish">
              <title name="SPRITE">1</title>
            </block>
          </xml>
      courseB_playlab_events_challenge1:
        courseB_playlab_events_challenge1_a: "Заставь других животных двигаться вниз
          при нажатии «▼». \n\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n
          \   <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Измени скорость животных с помощью этого блока:

          <xml>
            <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
            </block></xml>
        courseB_playlab_events_challenge1_c: |-
          Что каждое животное скажет по окончании забега? Заставь их говорить с помощью этого блока события:

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">2</title>
              <next>
                <block type="studio_saySpriteChoices">
                  <title name="SPRITE">2</title>
                  <title name="VALUE">Woo hoo!</title>
                </block>
              </next>
            </block>
          </xml>
      courseB_playlab_events_challenge1_2018:
        courseB_playlab_events_challenge1_a: "Заставь других животных двигаться вниз
          при нажатии «▼». \n\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n
          \   <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Измени скорость животных с помощью этого блока:

          <xml>
            <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
            </block></xml>
        courseB_playlab_events_challenge1_c: |-
          Что каждое животное скажет по окончании забега? Заставь их говорить с помощью этого блока события:

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">2</title>
              <next>
                <block type="studio_saySpriteChoices">
                  <title name="SPRITE">2</title>
                  <title name="VALUE">Woo hoo!</title>
                </block>
              </next>
            </block>
          </xml>
      courseB_playlab_events_challenge1_2019:
        courseB_playlab_events_challenge1_a: "Заставь других животных двигаться вниз
          при нажатии «▼». \n\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n
          \   <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Измени скорость животных с помощью этого блока:

          <xml>
            <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
            </block></xml>
        courseB_playlab_events_challenge1_c: |-
          Что каждое животное скажет по окончании забега? Заставь их говорить с помощью этого блока события:

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">2</title>
              <next>
                <block type="studio_saySpriteChoices">
                  <title name="SPRITE">2</title>
                  <title name="VALUE">Woo hoo!</title>
                </block>
              </next>
            </block>
          </xml>
      courseB_playlab_events_challenge2:
        courseB_playlab_events_challenge2_a: Каждое животное в этой игре должно исчезать
          при нажатии. Также оно должно появляться опять через секунду-другую!
        courseB_playlab_events_challenge2_b: |-
          Используй другие блоки событий, чтобы заставить исчезать других животных !

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block>
            </xml>
        courseB_playlab_events_challenge2_c: |-
          Используй дополнительные команды для воспроизведения звуков или подсчета очков при нажатии на животных!

          <xml>
            <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
            <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Внеси разнообразие!

          Сделай так, чтобы некоторые животных приносили больше очков, чем другие.
          Используй различные звуки.
          Меняй настроения животных!
      courseB_playlab_events_challenge2_2018:
        courseB_playlab_events_challenge2_a: Каждое животное в этой игре должно исчезать
          при нажатии. Также оно должно появляться опять через секунду-другую!
        courseB_playlab_events_challenge2_b: |-
          Используй другие блоки событий, чтобы заставить исчезать других животных !

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block>
            </xml>
        courseB_playlab_events_challenge2_c: |-
          Используй дополнительные команды для воспроизведения звуков или подсчета очков при нажатии на животных!

          <xml>
            <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
            <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Внеси разнообразие!

          Сделай так, чтобы некоторые животных приносили больше очков, чем другие.
          Используй различные звуки.
          Меняй настроения животных!
      courseB_playlab_events_challenge2_2019:
        courseB_playlab_events_challenge2_a: Каждое животное в этой игре должно исчезать
          при нажатии. Также оно должно появляться опять через секунду-другую!
        courseB_playlab_events_challenge2_b: |-
          Используй другие блоки событий, чтобы заставить исчезать других животных !

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block>
            </xml>
        courseB_playlab_events_challenge2_c: |-
          Используй дополнительные команды для воспроизведения звуков или подсчета очков при нажатии на животных!

          <xml>
            <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
            <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Внеси разнообразие!

          Сделай так, чтобы некоторые животных приносили больше очков, чем другие.
          Используй различные звуки.
          Меняй настроения животных!
      courseB_starWars_prog1:
        courseB_starWars_prog1_a: Попробуй добавлять по одному блоку, а затем нажми
          на кнопку «Выполнить» и посмотри, что получится.
        courseB_starWars_prog1_b: |-
          Тебе потребуется двигаться на восток (вправо), чтобы решить эту головоломку. На какое расстояние тебе потребуется переместиться?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2018:
        courseB_starWars_prog1_a: Попробуй добавлять по одному блоку, а затем нажми
          на кнопку «Выполнить» и посмотри, что получится.
        courseB_starWars_prog1_b: |-
          Тебе потребуется двигаться на восток (вправо), чтобы решить эту головоломку. На какое расстояние тебе потребуется переместиться?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2019:
        courseB_starWars_prog1_a: Попробуй добавлять по одному блоку, а затем нажми
          на кнопку «Выполнить» и посмотри, что получится.
        courseB_starWars_prog1_b: |-
          Тебе потребуется двигаться на восток (вправо), чтобы решить эту головоломку. На какое расстояние тебе потребуется переместиться?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog2:
        courseB_starWars_prog2_a: Разбей эту проблему на две. Собери одну груду металлолома,
          а затем придумай, как собрать другую.
      courseB_starWars_prog2_2018:
        courseB_starWars_prog2_a: Split this problem into two parts. Get one pile
          of scrap metal, then figure out how to get to the other one.
      courseB_starWars_prog2_2019:
        courseB_starWars_prog2_a: Разбей эту проблему на две. Собери одну груду металлолома,
          а затем придумай, как собрать другую.
      courseB_starWars_prog3:
        courseB_starWars_prog3_a: 'Тебе потребуется двигаться 3 способами, чтобы решить
          эту головоломку. '
        courseB_starWars_prog3_b: Создавай программу по частям. Запускай каждую часть,
          чтобы сообразить, куда отправиться дальше.
      courseB_starWars_prog3_2018:
        courseB_starWars_prog3_a: 'Тебе потребуется двигаться 3 способами, чтобы решить
          эту головоломку. '
        courseB_starWars_prog3_b: Создавай программу по частям. Запускай каждую часть,
          чтобы сообразить, куда отправиться дальше.
      courseB_starWars_prog3_2019:
        courseB_starWars_prog3_a: 'Тебе потребуется двигаться 3 способами, чтобы решить
          эту головоломку. '
        courseB_starWars_prog3_b: Создавай программу по частям. Запускай каждую часть,
          чтобы сообразить, куда отправиться дальше.
      courseB_starWars_prog4:
        courseB_starWars_prog4_a: Создавай программу по частям. Запускай каждую часть,
          чтобы сообразить, куда отправиться дальше.
        courseB_starWars_prog4_b: |-
          Попробуй использовать блок «повторить», чтобы код был короче.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog4_2018:
        courseB_starWars_prog4_a: Создавай программу по частям. Запускай каждую часть,
          чтобы сообразить, куда отправиться дальше.
        courseB_starWars_prog4_b: |-
          Попробуй использовать блок «повторить», чтобы код был короче.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog4_2019:
        courseB_starWars_prog4_a: Создавай программу по частям. Запускай каждую часть,
          чтобы сообразить, куда отправиться дальше.
        courseB_starWars_prog4_b: |-
          Попробуй использовать блок «повторить», чтобы код был короче.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog5:
        courseB_starWars_prog5_a: Напоминает ли эта схема схему из прошлой головоломки?
        courseB_starWars_prog5_b: Робот BB-8 будет собирать металлолом, перекатываясь
          по грудам металлолома.
        courseB_starWars_prog5_c: Нарисуй эту схему пальцем. Считай куски металла,
          пока движешься.
        courseB_starWars_prog5_da: |-
          Посмотри, что получится, если использовать то же решение, что и в головоломке со ступеньками лестницы:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2018:
        courseB_starWars_prog5_a: Напоминает ли эта схема схему из прошлой головоломки?
        courseB_starWars_prog5_b: Робот BB-8 будет собирать металлолом, перекатываясь
          по грудам металлолома.
        courseB_starWars_prog5_c: Нарисуй эту схему пальцем. Считай куски металла,
          пока движешься.
        courseB_starWars_prog5_da: |-
          Посмотри, что получится, если использовать то же решение, что и в головоломке со ступеньками лестницы:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2019:
        courseB_starWars_prog5_a: Напоминает ли эта схема схему из прошлой головоломки?
        courseB_starWars_prog5_b: Робот BB-8 будет собирать металлолом, перекатываясь
          по грудам металлолома.
        courseB_starWars_prog5_c: Нарисуй эту схему пальцем. Считай куски металла,
          пока движешься.
        courseB_starWars_prog5_da: |-
          Посмотри, что получится, если использовать то же решение, что и в головоломке со ступеньками лестницы:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog6:
        courseB_starWars_prog6_a: Эта схема – простая ступенька лестницы с двумя движениями
          в каждом направлении!
        courseB_starWars_prog6_b: |-
          Попробуй использовать блок «повторить», чтобы код был короче.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog6_2018:
        courseB_starWars_prog6_a: Эта схема – простая ступенька лестницы с двумя движениями
          в каждом направлении!
        courseB_starWars_prog6_b: |-
          Попробуй использовать блок «повторить», чтобы код был короче.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog6_2019:
        courseB_starWars_prog6_a: Эта схема – простая ступенька лестницы с двумя движениями
          в каждом направлении!
        courseB_starWars_prog6_b: |-
          Попробуй использовать блок «повторить», чтобы код был короче.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog7:
        courseB_starWars_prog7_a: Напоминает ли эта схема схему из прошлой головоломки?
        courseB_starWars_prog7_b: Робот BB-8 будет собирать металлолом, перекатываясь
          по грудам металлолома.
        courseB_starWars_prog7_c: Попробуй нарисовать поверх этой головоломки схему
          ступеньки большой лестницы. Охватывает ли она весь металлолом?
      courseB_starWars_prog7_2018:
        courseB_starWars_prog7_a: Напоминает ли эта схема схему из прошлой головоломки?
        courseB_starWars_prog7_b: Робот BB-8 будет собирать металлолом, перекатываясь
          по грудам металлолома.
        courseB_starWars_prog7_c: Попробуй нарисовать поверх этой головоломки схему
          ступеньки большой лестницы. Охватывает ли она весь металлолом?
      courseB_starWars_prog7_2019:
        courseB_starWars_prog7_a: Напоминает ли эта схема схему из прошлой головоломки?
        courseB_starWars_prog7_b: Робот BB-8 будет собирать металлолом, перекатываясь
          по грудам металлолома.
        courseB_starWars_prog7_c: Попробуй нарисовать поверх этой головоломки схему
          ступеньки большой лестницы. Охватывает ли она весь металлолом?
      courseB_starWars_prog8:
        courseB_starWars_prog8_a: Возвращаться туда, где уже побывал, не запрещено.
        courseB_starWars_prog8_b: |-
          Попробуй использовать блок «повторить» и посмотреть, что произойдет с вкладываемым тобой кодом.

          <xml>
            <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog8_2018:
        courseB_starWars_prog8_a: Возвращаться туда, где уже побывал, не запрещено.
        courseB_starWars_prog8_b: |-
          Попробуй использовать блок «повторить» и посмотреть, что произойдет с вкладываемым тобой кодом.

          <xml>
            <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog8_2019:
        courseB_starWars_prog8_a: Возвращаться туда, где уже побывал, не запрещено.
        courseB_starWars_prog8_b: |-
          Попробуй использовать блок «повторить» и посмотреть, что произойдет с вкладываемым тобой кодом.

          <xml>
            <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog9:
        courseB_starWars_prog9_a: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
        courseB_starWars_prog9_b: Существует много способов решения этой головоломки.
        courseB_starWars_prog9_c: Не пригодится ли здесь цикл «повторить»?
      courseB_starWars_prog9_2018:
        courseB_starWars_prog9_a: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
        courseB_starWars_prog9_b: Существует много способов решения этой головоломки.
        courseB_starWars_prog9_c: |-
          Could a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block></xml>loop help out here?
      courseB_starWars_prog9_2019:
        courseB_starWars_prog9_a: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
        courseB_starWars_prog9_b: Существует много способов решения этой головоломки.
        courseB_starWars_prog9_c: |-
          Could a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block></xml>loop help out here?
      courseC19_playLab_EOC1:
        courseE_playLab_scaffold1_a: The `set actor 1 to ??? image` block can be used
          to add an actor to the stage.
        courseE_playLab_scaffold1_b: Put the `set actor` block under `when run` to
          make your actor appear at the beginning of the program.
        courseE_playLab_scaffold1_c: Use `set ??? background` to choose a background
          for your scene.
      courseC19_playLab_EOC2:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow`
          event to change the direction the block controls.
        courseE_playLab_scaffold1_b: You should have four `when arrow` event blocks,
          with a direction to move underneath each.
        courseE_playLab_scaffold1_c: When you are done, you should be able to move
          your hero with the arrow keys!
      courseC19_playLab_EOC4:
        courseE_playLab_scaffold4_a: Use `score point` to add a point, and `remove
          point` to subtract one.
      courseC_PlayLab_events1:
        courseC_PlayLab_events1_a: |-
          Attach this block to the `when run` block:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events1_2018:
        courseC_PlayLab_events1_a: |-
          Attach this block to the `when run` block:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events1_2019:
        courseC_PlayLab_events1_a: |-
          Attach this block to the `when run` block:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events2:
        courseC_PlayLab_events2_a: |-
          Attach two of these blocks to the `when run` block:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: Use the dropdown menu on the second `actor __ say`
          block to change which actor speaks.
      courseC_PlayLab_events2_2018:
        courseC_PlayLab_events2_a: |-
          Attach two of these blocks to the `when run` block:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: Use the dropdown menu on the second `actor __ say`
          block to change which actor speaks.
      courseC_PlayLab_events2_2019:
        courseC_PlayLab_events2_a: |-
          Attach two of these blocks to the `when run` block:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: Use the dropdown menu on the second `actor __ say`
          block to change which actor speaks.
      courseC_PlayLab_events3:
        courseC_PlayLab_events3_a: You only need to move Jorge to the right by about
          25 pixels to solve this puzzle.
        courseC_PlayLab_events3_b: Is there a block in the toolbox that looks like
          it would move an actor?
        courseC_PlayLab_events3_c: |-
          Attach this block to the `when run` block:

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events3_2018:
        courseC_PlayLab_events3_a: You only need to move Jorge to the right by about
          25 pixels to solve this puzzle.
        courseC_PlayLab_events3_b: Is there a block in the toolbox that looks like
          it would move an actor?
        courseC_PlayLab_events3_c: |-
          Attach this block to the `when run` block:

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events3_2019:
        courseC_PlayLab_events3_a: You only need to move Jorge to the right by about
          25 pixels to solve this puzzle.
        courseC_PlayLab_events3_b: Is there a block in the toolbox that looks like
          it would move an actor?
        courseC_PlayLab_events3_c: |-
          Attach this block to the `when run` block:

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events4:
        courseC_PlayLab_events4_b: When the "Run" button is clicked, Jorge needs to
          move right **100** pixels to reach Olive the Cat.
        courseC_PlayLab_events4_a: You will need to attach an `actor __ say` block
          to the `when actor touches` event to solve this puzzle.
      courseC_PlayLab_events4_2018:
        courseC_PlayLab_events4_b: When the "Run" button is clicked, Jorge needs to
          move right **100** pixels to reach Olive the Cat.
        courseC_PlayLab_events4_a: You will need to attach an `actor __ say` block
          to the `when actor touches` event to solve this puzzle.
      courseC_PlayLab_events4_2019:
        courseC_PlayLab_events4_b: When the "Run" button is clicked, Jorge needs to
          move right **100** pixels to reach Olive the Cat.
        courseC_PlayLab_events4_a: You will need to attach an `actor __ say` block
          to the `when actor touches` event to solve this puzzle.
      courseC_PlayLab_events5:
        courseC_PlayLab_events5_a: You will need to click the dropdown menu in the
          `actor say` block to find the text "What's new?"
        courseC_PlayLab_events5_b: Click on Octavia when you run your program to check
          that it works!
      courseC_PlayLab_events5_2018:
        courseC_PlayLab_events5_a: You will need to click the dropdown menu in the
          `actor say` block to find the text "What's new?"
        courseC_PlayLab_events5_b: Click on Octavia when you run your program to check
          that it works!
      courseC_PlayLab_events5_2019:
        courseC_PlayLab_events5_a: You will need to click the dropdown menu in the
          `actor say` block to find the text "What's new?"
        courseC_PlayLab_events5_b: Click on Octavia when you run your program to check
          that it works!
      courseC_PlayLab_events6:
        courseC_PlayLab_events6_a: Each green `when arrow` block should have one action
          below it.
        courseC_PlayLab_events6_b: Use the drop down menu on the `move actor 1` block
          to change which direction Waddles moves.
        courseC_PlayLab_events6_c: When you're done, you should be able to move Waddles
          around using the arrow keys on your computer!
      courseC_PlayLab_events6_2018:
        courseC_PlayLab_events6_a: Each green `when arrow` block should have one action
          below it.
        courseC_PlayLab_events6_b: Use the drop down menu on the `move actor 1` block
          to change which direction Waddles moves.
        courseC_PlayLab_events6_c: When you're done, you should be able to move Waddles
          around using the arrow keys on your computer!
      courseC_PlayLab_events6_2019:
        courseC_PlayLab_events6_a: Each green `when arrow` block should have one action
          below it.
        courseC_PlayLab_events6_b: Use the drop down menu on the `move actor 1` block
          to change which direction Waddles moves.
        courseC_PlayLab_events6_c: When you're done, you should be able to move Waddles
          around using the arrow keys on your computer!
      courseC_PlayLab_events7:
        courseC_PlayLab_events7_a: 'Use both the `move actor 2 up 400 pixels` block
          and the `move actor 2 down 400 pixels` block inside the `repeat forever`
          loop to solve this puzzle. '
        courseC_PlayLab_events7_b: The `repeat forever` loop does not need to be connected
          to any other event blocks; it will run on its own.
      courseC_PlayLab_events7_2018:
        courseC_PlayLab_events7_a: 'Use both the `move actor 2 up 400 pixels` block
          and the `move actor 2 down 400 pixels` block inside the `repeat forever`
          loop to solve this puzzle. '
        courseC_PlayLab_events7_b: The `repeat forever` loop does not need to be connected
          to any other event blocks; it will run on its own.
      courseC_PlayLab_events7_2019:
        courseC_PlayLab_events7_a: 'Use both the `move actor 2 up 400 pixels` block
          and the `move actor 2 down 400 pixels` block inside the `repeat forever`
          loop to solve this puzzle. '
        courseC_PlayLab_events7_b: The `repeat forever` loop does not need to be connected
          to any other event blocks; it will run on its own.
      courseC_PlayLab_events8:
        courseC_PlayLab_events8_a: You will need to connect blocks to the `when actor
          touches` block to make this happen correctly.
        courseC_PlayLab_events8_b: The `actor say` and `play sound` blocks in the
          toolbox should help you out!
      courseC_PlayLab_events8_2018:
        courseC_PlayLab_events8_a: You will need to connect blocks to the `when actor
          touches` block to make this happen correctly.
        courseC_PlayLab_events8_b: The `actor say` and `play sound` blocks in the
          toolbox should help you out!
      courseC_PlayLab_events8_2019:
        courseC_PlayLab_events8_a: You will need to connect blocks to the `when actor
          touches` block to make this happen correctly.
        courseC_PlayLab_events8_b: The `actor say` and `play sound` blocks in the
          toolbox should help you out!
      courseC_PlayLab_events9:
        courseC_PlayLab_events9_a: The `score point` block will help you to solve
          this puzzle.
        courseC_PlayLab_events9_b: Make sure that your new `when actor touches` block
          says actor **1** and actor **3**.
        courseC_PlayLab_events9_c: You can have more than one `when actor touches`
          event in your workspace at the same time, so you don't have to delete the
          first one!
      courseC_PlayLab_events9_2018:
        courseC_PlayLab_events9_a: The `score point` block will help you to solve
          this puzzle.
        courseC_PlayLab_events9_b: Make sure that your new `when actor touches` block
          says actor **1** and actor **3**.
        courseC_PlayLab_events9_c: You can have more than one `when actor touches`
          event in your workspace at the same time, so you don't have to delete the
          first one!
      courseC_PlayLab_events9_2019:
        courseC_PlayLab_events9_a: The `score point` block will help you to solve
          this puzzle.
        courseC_PlayLab_events9_b: Make sure that your new `when actor touches` block
          says actor **1** and actor **3**.
        courseC_PlayLab_events9_c: You can have more than one `when actor touches`
          event in your workspace at the same time, so you don't have to delete the
          first one!
      courseC_PlayLab_eventsA:
        courseC_PlayLab_eventsA_a: Use the `set background` block and the `set actor
          to a ____ speed` block to solve this puzzle.
        courseC_PlayLab_eventsA_b: You will need to specifically drag a `when run`
          event block into the workspace to solve this puzzle.
      courseC_PlayLab_eventsA_2018:
        courseC_PlayLab_eventsA_a: Use the `set background` block and the `set actor
          to a ____ speed` block to solve this puzzle.
        courseC_PlayLab_eventsA_b: You will need to specifically drag a `when run`
          event block into the workspace to solve this puzzle.
      courseC_PlayLab_eventsA_2019:
        courseC_PlayLab_eventsA_a: Use the `set background` block and the `set actor
          to a ____ speed` block to solve this puzzle.
        courseC_PlayLab_eventsA_b: You will need to specifically drag a `when run`
          event block into the workspace to solve this puzzle.
      courseC_PlayLab_eventsA_embed_2019:
        courseC_PlayLab_eventsA_a: Use the arrow keys to move the penguin. You do
          not need to write any code to finish this level.
      courseC_PlayLab_eventsFP:
        idea1: |-
          _Need an idea?_

          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _Need an idea?_

          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _Need an idea?_

          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      courseC_PlayLab_eventsFP_2018:
        idea1: |-
          _Need an idea?_

          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _Need an idea?_

          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _Need an idea?_

          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      courseC_PlayLab_eventsFP_2019:
        idea1: |-
          _Need an idea?_

          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.

          <img src= "https://images.code.org/dbd6ece9d0fb213039ea5dccb91fc425-image-1563577859889.gif" style="width: 200px">
        idea2: |-
          _Need an idea?_

          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.

          <img src= "https://images.code.org/a7f740d73074deb128cdc2826abda9e6-image-1563576781779.gif" style="width: 200px">
        idea3: |-
          _Need an idea?_

          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      courseC_PlayLab_events_challenge1:
        courseC_PlayLab_events_challenge_a: |-
          You can use this block to move actors to different places on the game space.

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: Try using `set actor 1 to the middle left
          position` when it touches either of the other actors. This will reset the
          game so the player can keep trying!
        courseC_PlayLab_events_challenge_c: |-
          You might also want to try changing the speed of the different actors to make the game easier or more challenging!

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_PlayLab_events_challenge1_2018:
        courseC_PlayLab_events_challenge_a: |-
          You can use this block to move actors to different places on the game space.

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: Try using `set actor 1 to the middle left
          position` when it touches either of the other actors. This will reset the
          game so the player can keep trying!
        courseC_PlayLab_events_challenge_c: |-
          You might also want to try changing the speed of the different actors to make the game easier or more challenging!

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_PlayLab_events_challenge1_2019:
        courseC_PlayLab_events_challenge_a: |-
          You can use this block to move actors to different places on the game space.

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: Try using `set actor 1 to the middle left
          position` when it touches either of the other actors. This will reset the
          game so the player can keep trying!
        courseC_PlayLab_events_challenge_c: |-
          You might also want to try changing the speed of the different actors to make the game easier or more challenging!

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_artist_loop1:
        courseC_artist_loop1_a: You don't need to make any changes to the loop, just
          put one block above it.
        courseC_artist_loop1_b: |-
          This is the block you will need to set a pattern:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          Choose any pattern you like!
      courseC_artist_loop1_2018:
        courseC_artist_loop1_a: You don't need to make any changes to the loop, just
          put one block above it.
        courseC_artist_loop1_b: |-
          This is the block you will need to set a pattern:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          Choose any pattern you like!
      courseC_artist_loop1_2019:
        courseC_artist_loop1_a: You don't need to make any changes to the loop, just
          put one block above it.
        courseC_artist_loop1_b: |-
          This is the block you will need to set a pattern:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          Choose any pattern you like!
      courseC_artist_loops1a:
        courseC_artist_loops1a_a: |-
          Это первый блок, который тебе понадобится:

          <xml>
          <block type="jump_to_xy">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Используй этот блок, чтобы нарисовать стикер!

          <xml>
          <block type="sticker">
              <title name="VALUE">Bird</title>
            </block>
          </xml>
      courseC_artist_loops1a_2018:
        courseC_artist_loops1a_a: |-
          Это первый блок, который тебе понадобится:

          <xml>
          <block type="jump_to_xy">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Используй этот блок, чтобы нарисовать стикер!

          <xml>
          <block type="sticker">
              <title name="VALUE">Bird</title>
            </block>
          </xml>
      courseC_artist_loops1a_2019:
        courseC_artist_loops1a_a: |-
          Это первый блок, который тебе понадобится:

          <xml>
            <block type="jump_to">
              <title name="VALUE">13</title>
            </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Используй этот блок, чтобы нарисовать стикер!

          <xml>
          <block type="sticker">
              <title name="VALUE">Bird</title>
            </block>
          </xml>
      courseC_artist_loops1b_2019:
        courseC_artist_loops1b_a: "Первым тебе потребуется следующий блок: \n\n<xml>\n
          \ <block type=\"draw_turn_by_constant_dropdown\">\n    <title name=\"DIR\">???</title>\n
          \   <title name=\"VALUE\" config=\"45,60,90,120,180\">???</title>\n  </block>\n</xml>
          \n\nМожешь выбрать поворот налево или направо и любое количество градусов."
      courseC_artist_loops2a:
        courseC_artist_loops2a_a: Внутри цикла тебе потребуется прыгнуть на 200 точек
          вперед и 200 точек вниз, а затем нарисовать птичку и поворачивать ее на
          30 градусов.
        courseC_artist_loops2a_b: Захочешь изменить количество повторов – нажми на
          число наверху цикла «повторить».
      courseC_artist_loops2a_2018:
        courseC_artist_loops2a_a: Внутри цикла тебе потребуется прыгнуть на 200 точек
          вперед и 200 точек вниз, а затем нарисовать птичку и поворачивать ее на
          30 градусов.
        courseC_artist_loops2a_b: Захочешь изменить количество повторов – нажми на
          число наверху цикла «повторить».
      courseC_artist_loops2a_2019:
        courseC_artist_loops2a_a: Измени свой код так, чтобы прыгать вперед между
          рисованием двух стикеров.
        courseC_artist_loops2a_b: Захочешь изменить количество повторов – нажми на
          число наверху цикла «повторить».
      courseC_artist_loops3a:
        courseC_artist_loops3a_a: После стикера с птичкой тебе потребуется вставить
          в свой цикл только один блок.
        courseC_artist_loops3a_b: Для поиска стикера с летучей мышью используй выпадающее
          меню блока «нарисовать стикер».
      courseC_artist_loops3a_2018:
        courseC_artist_loops3a_a: После стикера с птичкой тебе потребуется вставить
          в свой цикл только один блок.
        courseC_artist_loops3a_b: Для поиска стикера с летучей мышью используй выпадающее
          меню блока «нарисовать стикер».
      courseC_artist_loops3a_2019:
        courseC_artist_loops3a_a: Тебе потребуется вставить в свой цикл после первого
          стикера всего один блок.
        courseC_artist_loops3a_b: |-
          Твоя программа должна выглядеть так!

           <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">???</title>
                  <statement name="DO">
                    <block type="jump_to">
                      <title name="VALUE">13</title>
                      <next>
                        <block type="draw_turn_by_constant_dropdown">
                          <title name="DIR">???</title>
                          <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
                          <next>
                            <block type="sticker">
                              <title name="VALUE">Cat</title>
                              <next>
                                <block type="sticker">
                                  <title name="VALUE">Dog</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      courseC_artist_loops4a:
        courseC_artist_loops4a_a: |-
          Используй этот блок для прыжка вперед:

          <xml>
          <block type="jump_by_constant">
              <title name="DIR">jumpForward</title>
              <title name="VALUE">100</title>
            </block>
          </xml>

          Не забудь изменить расстояние прыжка!
      courseC_artist_loops4a_2018:
        courseC_artist_loops4a_a: |-
          Используй этот блок для прыжка вперед:

          <xml>
          <block type="jump_by_constant">
              <title name="DIR">jumpForward</title>
              <title name="VALUE">100</title>
            </block>
          </xml>

          Не забудь изменить расстояние прыжка!
      courseC_artist_loops4a_2019:
        courseC_artist_loops4a_a: |-
          Используй этот блок для прыжка вперед:

          <xml>
          <block type="jump_by_constant">
              <title name="DIR">jumpForward</title>
              <title name="VALUE">???</title>
            </block>
          </xml>

          Не забудь изменить расстояние прыжка!
        courseC_artist_loops4a_b: "Твоя программа должна выглядеть так! \n\n<xml>\n
          \ <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">???</title>\n
          \       <statement name=\"DO\">\n          <block type=\"jump_to\">\n            <title
          name=\"VALUE\">13</title>\n            <next>\n              <block type=\"draw_turn_by_constant_dropdown\">\n
          \               <title name=\"DIR\">???</title>\n                <title
          name=\"VALUE\" config=\"1,2,5,10,12,20,30,45,60,90,120,180\">???</title>\n
          \               <next>\n                  <block type=\"sticker\">\n                    <title
          name=\"VALUE\">Cat</title>\n                    <next>\n                      <block
          type=\"jump_by_constant\">\n                        <title name=\"DIR\">jumpForward</title>\n
          \                       <title name=\"VALUE\">???</title>\n                        <next>\n
          \                         <block type=\"sticker\">\n                            <title
          name=\"VALUE\">Dog</title>\n                          </block>\n                        </next>\n
          \                     </block>\n                    </next>\n                  </block>\n
          \               </next>\n              </block>\n            </next>\n          </block>\n
          \       </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
      courseC_artist_loops5a:
        courseC_artist_loops5a_a: Use the drop down menus on the `draw sticker` blocks
          to change their images.
      courseC_artist_loops5a_2018:
        courseC_artist_loops5a_a: Use the drop down menus on the `draw sticker` blocks
          to change their images.
      courseC_artist_loops5a_2019:
        courseC_artist_loops5a_a: Use the drop down menus on the `draw sticker` blocks
          to change their images.
      courseC_artist_loops5b:
        courseC_artist_loops5b_a: |-
          Используй этот блок, чтобы задать схему рисования своих линий:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>
        courseC_artist_loops5b_b: Для создания рисунка, подобного приведенному выше,
          тебе потребуется перемещаться назад на такое же расстояние, как и вперед.
      courseC_artist_loops5b_2018:
        courseC_artist_loops5b_a: |-
          Используй этот блок, чтобы задать схему рисования своих линий:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>
        courseC_artist_loops5b_b: Для создания рисунка, подобного приведенному выше,
          тебе потребуется перемещаться назад на такое же расстояние, как и вперед.
      courseC_artist_loops5b_2019:
        courseC_artist_loops5b_a: |-
          Используй этот блок, чтобы задать схему рисования своих линий:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>
        courseC_artist_loops5b_b: Для создания рисунка, подобного приведенному выше,
          тебе потребуется перемещаться назад на такое же расстояние, как и вперед.
        courseC_artist_loops5b_c: "Твоя программа должна выглядеть так! \n\n<xml>\n
          \ <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n
          \     <block type=\"draw_line_style_pattern\">\n        <title name=\"VALUE\">rainbowLine</title>\n
          \       <next>\n          <block type=\"controls_repeat\">\n            <title
          name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block
          type=\"jump_to\">\n                <title name=\"VALUE\">13</title>\n                <next>\n
          \                 <block type=\"draw_move_by_constant\">\n                    <title
          name=\"DIR\">moveForward</title>\n                    <title name=\"VALUE\">???</title>\n
          \                   <next>\n                      <block type=\"draw_move_by_constant\">\n
          \                       <title name=\"DIR\">moveBackward</title>\n                        <title
          name=\"VALUE\">???</title>\n                        <next>\n                          <block
          type=\"draw_turn_by_constant_dropdown\">\n                            <title
          name=\"DIR\">???</title>\n                            <title name=\"VALUE\"
          config=\"1,2,5,10,12,20,30,45,60,90,120,180\">???</title>\n                            <next>\n
          \                             <block type=\"sticker\">\n                                <title
          name=\"VALUE\">Cat</title>\n                                <next>\n                                  <block
          type=\"jump_by_constant\">\n                                    <title name=\"DIR\">jumpForward</title>\n
          \                                   <title name=\"VALUE\">???</title>\n
          \                                   <next>\n                                      <block
          type=\"sticker\">\n                                        <title name=\"VALUE\">Dog</title>\n
          \                                     </block>\n                                    </next>\n
          \                                 </block>\n                                </next>\n
          \                             </block>\n                            </next>\n
          \                         </block>\n                        </next>\n                      </block>\n
          \                   </next>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n          </block>\n        </next>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      courseC_artist_loops6a:
        courseC_artist_loops6a_a: To make a design like the one above, jump forward
          less than 75 pixels between each sticker.
      courseC_artist_loops6a_2018:
        courseC_artist_loops6a_a: To make a design like the one above, jump forward
          less than 75 pixels between each sticker.
      courseC_artist_loops6a_2019:
        courseC_artist_loops6a_a: To make a design like the one above, jump forward
          less than 75 pixels between each sticker.
      courseC_artist_loops7a:
        courseC_artist_loops7a_a: |-
          A circle has 360 degrees. Multiply the degrees in your turn times the number of times you repeat. Does it equal 360?
          Check the suggested rotations to see that this works!
      courseC_artist_loops7a_2018:
        courseC_artist_loops7a_a: |-
          A circle has 360 degrees. Multiply the degrees in your turn times the number of times you repeat. Does it equal 360?
          Check the suggested rotations to see that this works!
      courseC_artist_loops7a_2019:
        courseC_artist_loops7a_a: |-
          A circle has 360 degrees. Multiply the degrees in your turn times the number of times you repeat. Does it equal 360?
          Check the suggested rotations to see that this works!
      courseC_artist_loopsPre1a:
        courseC_artist_loopsPre1a_a: Remember to put the `turn` block inside of the
          loop.
        courseC_artist_loopsPre1a_b: 'Your `repeat` loop should have 3 blocks inside
          of it: `jump to 200 over 200 down`, `move forward by 50 pixels`, and `turn
          right by 60 degrees`.'
      courseC_artist_loopsPre1a_2018:
        courseC_artist_loopsPre1a_a: Remember to put the `turn` block inside of the
          loop.
        courseC_artist_loopsPre1a_b: 'Your `repeat` loop should have 3 blocks inside
          of it: `jump to 200 over 200 down`, `move forward by 50 pixels`, and `turn
          right by 60 degrees`.'
      courseC_artist_loopsPre1a_2019:
        courseC_artist_loopsPre1a_a: Remember to put the `turn` block inside of the
          loop.
        courseC_artist_loopsPre1a_b: 'Your `repeat` loop should have 3 blocks inside
          of it: `jump to 200 over 200 down`, `move forward by 50 pixels`, and `turn
          right by 60 degrees`.'
      courseC_artist_loopsPrePre1a:
        courseC_artist_loopsPrePre1a_a: |-
          The first block you will need is:

          ![](<https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png>)
        courseC_artist_loopsPrePre1a_b: |-
          To move forward 50 pixels, use this block:

          ![](<https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png>)
      courseC_artist_loopsPrePre1a_2018:
        courseC_artist_loopsPrePre1a_a: |-
          Первым тебе потребуется следующий блок: <xml>  <block type="jump_to_xy" id="callMe">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block></xml>
        courseC_artist_loopsPrePre1a_b: |-
          Для перемещения вперед на 50 точек используй следующий блок: <xml><block type="draw_move_by_constant">
              <title name="DIR">moveForward</title>
              <title name="VALUE">50</title>
            </block></xml>
      courseC_artist_loopsPrePre1a_2019:
        courseC_artist_loopsPrePre1a_a: |-
          Первым тебе потребуется следующий блок: <xml>  <block type="jump_to_xy" id="callMe">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block></xml>
        courseC_artist_loopsPrePre1a_b: |-
          Для перемещения вперед на 50 точек используй следующий блок: <xml><block type="draw_move_by_constant">
              <title name="DIR">moveForward</title>
              <title name="VALUE">50</title>
            </block></xml>
      courseC_artist_prog2:
        courseC_artist_prog2_a: Если ты воспользуешься блоком "двигаться вперёд на
          100 пикселей" на меня, то я нарисую линию автоматически.
        courseC_artist_prog2_b: Сложности с поворотами на углах? Используй блок "повернуть
          направо на 90 градусов".
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: Если ты воспользуешься блоком "двигаться вперёд на
          100 пикселей" на меня, то я нарисую линию автоматически.
        courseC_artist_prog2_b: Сложности с поворотами на углах? Используй блок "повернуть
          направо на 90 градусов".
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: Если ты воспользуешься блоком "двигаться вперёд на
          100 пикселей" на меня, то я нарисую линию автоматически.
        courseC_artist_prog2_b: Сложности с поворотами на углах? Используй блок "повернуть
          направо на 90 градусов".
      courseC_artist_prog3:
        courseC_artist_prog3_a: |-
          Чтобы создать это окно, нарисуй простой квадрат со стороной 100 точек.

          -   переместись вперед
          -   поверни
          -   переместись вперед
          -   поверни
          -   переместись вперед
          -   поверни
          -   переместись вперед
        courseC_artist_prog3_b: Хочешь сделать код покороче? Попробуй использовать
          в этой головоломке цикл.
      courseC_artist_prog3_2018:
        courseC_artist_prog3_a: |-
          Чтобы создать это окно, нарисуй простой квадрат со стороной 100 точек.

          -   переместись вперед
          -   поверни
          -   переместись вперед
          -   поверни
          -   переместись вперед
          -   поверни
          -   переместись вперед
        courseC_artist_prog3_b: Хочешь сделать код покороче? Попробуй использовать
          в этой головоломке цикл.
      courseC_artist_prog3_2019:
        courseC_artist_prog3_a: |-
          Чтобы создать это окно, нарисуй простой квадрат со стороной 100 точек.

          -   переместись вперед
          -   поверни
          -   переместись вперед
          -   поверни
          -   переместись вперед
          -   поверни
          -   переместись вперед
        courseC_artist_prog3_b: Хочешь сделать код покороче? Попробуй использовать
          в этой головоломке цикл.
      courseC_artist_prog4:
        courseC_artist_prog4_a: Чтобы закончить ракету, просто нарисуй сверху треугольник!
        courseC_artist_prog4_b: Чтобы понять, какой угол тебе нужен, открой выпадающее
          меню на блоках ""повернуть""!
        courseC_artist_prog4_c: |-
          Чтобы нарисовать треугольник, тебе потребуется:

          -   переместиться вперед
          -   повернуть налево на 120 градусов
          -   переместиться вперед
          -   повернуть налево на 120 градусов
          -   переместиться вперед
      courseC_artist_prog4_2018:
        courseC_artist_prog4_a: Чтобы закончить ракету, просто нарисуй сверху треугольник!
        courseC_artist_prog4_b: Чтобы понять, какой угол тебе нужен, открой выпадающее
          меню на блоках ""повернуть""!
        courseC_artist_prog4_c: |-
          Чтобы нарисовать треугольник, тебе потребуется:

          -   переместиться вперед
          -   повернуть налево на 120 градусов
          -   переместиться вперед
          -   повернуть налево на 120 градусов
          -   переместиться вперед
      courseC_artist_prog4_2019:
        courseC_artist_prog4_a: Чтобы закончить ракету, просто нарисуй сверху треугольник!
        courseC_artist_prog4_b: Чтобы понять, какой угол тебе нужен, открой выпадающее
          меню на блоках ""повернуть""!
        courseC_artist_prog4_c: |-
          Чтобы нарисовать треугольник, тебе потребуется:

          -   переместиться вперед
          -   повернуть налево на 120 градусов
          -   переместиться вперед
          -   повернуть налево на 120 градусов
          -   переместиться вперед
      courseC_artist_prog5:
        courseC_artist_prog5_a: Замедляй ползунок постоянно до тех пор, пока не сможешь
          прогнать код построчно, чтобы понять, где допущена ошибка.
        courseC_artist_prog5_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
        courseC_artist_prog5_c: Чтобы понять, какой угол тебе нужен, открой выпадающее
          меню на блоках ""повернуть""!
        courseC_artist_prog5_d: Все повороты – повороты направо на 90 градусов.
      courseC_artist_prog5_2018:
        courseC_artist_prog5_a: Замедляй ползунок постоянно до тех пор, пока не сможешь
          прогнать код построчно, чтобы понять, где допущена ошибка.
        courseC_artist_prog5_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
        courseC_artist_prog5_c: You can use the drop down menus in the blocks to change
          what they do!
        courseC_artist_prog5_d: Все повороты – повороты направо на 90 градусов.
      courseC_artist_prog5_2019:
        courseC_artist_prog5_a: Замедляй ползунок постоянно до тех пор, пока не сможешь
          прогнать код построчно, чтобы понять, где допущена ошибка.
        courseC_artist_prog5_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
        courseC_artist_prog5_c: You can use the drop down menus in the blocks to change
          what they do!
        courseC_artist_prog5_d: Все повороты – повороты направо на 90 градусов.
      courseC_artist_prog6:
        courseC_artist_prog6_a: Художник уже смотрит в сторону, требуемую для рисования
          первой линии.
        courseC_artist_prog6_b: Этот бриллиант на самом деле просто квадрат, поставленный
          на угол.
        courseC_artist_prog6_c: Поскольку этот бриллиант тот же квадрат, обязательно
          поворачивай на всех углах на 90 градусов.
      courseC_artist_prog6_2018:
        courseC_artist_prog6_a: Художник уже смотрит в сторону, требуемую для рисования
          первой линии.
        courseC_artist_prog6_b: Этот бриллиант на самом деле просто квадрат, поставленный
          на угол.
        courseC_artist_prog6_c: Поскольку этот бриллиант тот же квадрат, обязательно
          поворачивай на всех углах на 90 градусов.
      courseC_artist_prog6_2019:
        courseC_artist_prog6_a: Художник уже смотрит в сторону, требуемую для рисования
          первой линии.
        courseC_artist_prog6_b: Этот бриллиант на самом деле просто квадрат, поставленный
          на угол.
        courseC_artist_prog6_c: Поскольку этот бриллиант тот же квадрат, обязательно
          поворачивай на всех углах на 90 градусов.
      courseC_artist_prog7:
        courseC_artist_prog7_a: Каждый угол составляет либо 45, либо 90 градусов.
        courseC_artist_prog7_b: |-
          Работает ли она на первом шаге?\
          А на втором?\
          Где именно допущена ошибка?
        courseC_artist_prog7_c: Чтобы понять, какой угол тебе нужен, открой выпадающее
          меню на блоках поворота!
        courseC_artist_prog7_d: |-
          Тебе потребуется:

          -   переместиться вперед
          -   повернуть направо на 45 градусов
          -   переместиться вперед
          -   повернуть направо на 90 градусов
          -   переместиться вперед
          -   повернуть направо на 45 градусов

          Повтори эту схему 2 раза!
        courseC_artist_prog7_e: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseC_artist_prog7_2018:
        courseC_artist_prog7_a: Каждый угол составляет либо 45, либо 90 градусов.
        courseC_artist_prog7_b: |-
          Работает ли она на первом шаге?\
          А на втором?\
          Где именно допущена ошибка?
        courseC_artist_prog7_c: Чтобы понять, какой угол тебе нужен, открой выпадающее
          меню на блоках поворота!
        courseC_artist_prog7_d: |-
          Тебе потребуется:

          -   переместиться вперед
          -   повернуть направо на 45 градусов
          -   переместиться вперед
          -   повернуть направо на 90 градусов
          -   переместиться вперед
          -   повернуть направо на 45 градусов

          Повтори эту схему 2 раза!
        courseC_artist_prog7_e: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseC_artist_prog7_2019:
        courseC_artist_prog7_a: Каждый угол составляет либо 45, либо 90 градусов.
        courseC_artist_prog7_b: |-
          Работает ли она на первом шаге?\
          А на втором?\
          Где именно допущена ошибка?
        courseC_artist_prog7_c: Чтобы понять, какой угол тебе нужен, открой выпадающее
          меню на блоках поворота!
        courseC_artist_prog7_d: |-
          Тебе потребуется:

          -   переместиться вперед
          -   повернуть направо на 45 градусов
          -   переместиться вперед
          -   повернуть направо на 90 градусов
          -   переместиться вперед
          -   повернуть направо на 45 градусов

          Повтори эту схему 2 раза!
        courseC_artist_prog7_e: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseC_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: You can draw this as a rectangle with a
          line in the middle or two different squares!
      courseC_artist_prog_challenge1_2018:
        courseC_artist_prog_challenge1_a: You can draw this as a rectangle with a
          line in the middle or two different squares!
      courseC_artist_prog_challenge1_2019:
        courseC_artist_prog_challenge1_a: You can draw this as a rectangle with a
          line in the middle or two different squares!
      courseC_artist_prog_challenge2a:
        courseC_artist_prog_challenge2_a: After you draw the first line, turn left
          before you draw your second line.
        courseC_artist_prog_challenge2_b: After you draw the second line, turn right
          before you draw your third line.
      courseC_artist_prog_challenge2a_2018:
        courseC_artist_prog_challenge2_a: After you draw the first line, turn left
          before you draw your second line.
        courseC_artist_prog_challenge2_b: After you draw the second line, turn right
          before you draw your third line.
      courseC_artist_prog_challenge2a_2019:
        courseC_artist_prog_challenge2_a: After you draw the first line, turn left
          before you draw your second line.
        courseC_artist_prog_challenge2_b: After you draw the second line, turn right
          before you draw your third line.
      courseC_collector_loops_challenge2:
        courseC_maze_loops_challenge2_b: Use loops so you don't run out of `collect`
          blocks!
      courseC_collector_loops_challenge2_2018:
        courseC_maze_loops_challenge2_b: Use loops so you don't run out of `collect`
          blocks!
      courseC_collector_loops_challenge2_2019:
        courseC_maze_loops_challenge2_b: Use loops so you don't run out of `collect`
          blocks!
      courseC_collector_prog1:
        courseC_collector_prog1_a: Оказавшись на месте с сокровищами, используй для
          их сбора блок <xml><block type="collector_collect"/></xml>.
        courseC_collector_prog1_b: Простейшим решением было бы переместиться один
          раз вперед,а затем собрать сокровища.
      courseC_collector_prog1_2018:
        courseC_collector_prog1_a: Оказавшись на месте с сокровищами, используй для
          их сбора блок <xml><block type="collector_collect"/></xml>.
        courseC_collector_prog1_b: Простейшим решением было бы переместиться один
          раз вперед,а затем собрать сокровища.
      courseC_collector_prog1_2019:
        courseC_collector_prog1_a: Оказавшись на месте с сокровищами, используй для
          их сбора блок <xml><block type="collector_collect"/></xml>.
        courseC_collector_prog1_b: Простейшим решением было бы переместиться один
          раз вперед,а затем собрать сокровища.
      courseC_collector_prog2:
        courseC_collector_prog2_a: Можешь использовать четыре блока <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> или использовать блок <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          чтобы сделать программу короче.
        courseC_collector_prog2_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseC_collector_prog2_2018:
        courseC_collector_prog2_a: Можешь использовать четыре блока <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> или использовать блок <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          чтобы сделать программу короче.
        courseC_collector_prog2_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseC_collector_prog2_2019:
        courseC_collector_prog2_a: Можешь использовать четыре блока <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> или использовать блок <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          чтобы сделать программу короче.
        courseC_collector_prog2_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseC_collector_prog3:
        courseC_collector_prog3_a: Программа выполнит только блоки, соединенные с
          блоком <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Попробуй использовать кнопку "Шаг" для построчного
          выполнения кода. Догадался, где допущена ошибка?
        courseC_collector_prog3_c: Если у тебя возникнут сложности с этой головоломкой,
          попробуй записать свои шаги на листе бумаги.
      courseC_collector_prog3_2018:
        courseC_collector_prog3_a: Программа выполнит только блоки, соединенные с
          блоком <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Попробуй использовать кнопку "Шаг" для построчного
          выполнения кода. Догадался, где допущена ошибка?
        courseC_collector_prog3_c: Если у тебя возникнут сложности с этой головоломкой,
          попробуй записать свои шаги на листе бумаги.
      courseC_collector_prog3_2019:
        courseC_collector_prog3_a: Программа выполнит только блоки, соединенные с
          блоком <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Попробуй использовать кнопку "Шаг" для построчного
          выполнения кода. Догадался, где допущена ошибка?
        courseC_collector_prog3_c: Если у тебя возникнут сложности с этой головоломкой,
          попробуй записать свои шаги на листе бумаги.
      courseC_collector_prog4:
        courseC_collector_prog4_a: Если застрянешь, попробуй записать свои шаги на
          листе бумаги.
        courseC_collector_prog4_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
        courseC_collector_prog4_c: Попробуй этот вариант пути.
      courseC_collector_prog4_2018:
        courseC_collector_prog4_a: Если застрянешь, попробуй записать свои шаги на
          листе бумаги.
        courseC_collector_prog4_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
        courseC_collector_prog4_c: Попробуй этот вариант пути.
      courseC_collector_prog4_2019:
        courseC_collector_prog4_a: Если застрянешь, попробуй записать свои шаги на
          листе бумаги.
        courseC_collector_prog4_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
        courseC_collector_prog4_c: Попробуй этот вариант пути.
      courseC_collector_prog5:
        courseC_collector_prog5_a: "\"Работает ли она на первом шаге?\nРаботает ли
          она на втором шаге? \nГде именно допущена ошибка?\""
        courseC_collector_prog5_b: Если ты исправил одну ошибку, а программа все равно
          не работает, используй вышеприведенные вопросы для поиска других ошибок.
        courseC_collector_prog5_c: Если застрянешь, попробуй записать свои шаги на
          листе бумаги.
        courseC_collector_prog5_d: Пройди по этому пути, чтобы собрать сокровища.
      courseC_collector_prog5_2018:
        courseC_collector_prog5_a: "\"Работает ли она на первом шаге?\nРаботает ли
          она на втором шаге? \nГде именно допущена ошибка?\""
        courseC_collector_prog5_b: Если ты исправил одну ошибку, а программа все равно
          не работает, используй вышеприведенные вопросы для поиска других ошибок.
        courseC_collector_prog5_c: Если застрянешь, попробуй записать свои шаги на
          листе бумаги.
        courseC_collector_prog5_d: Пройди по этому пути, чтобы собрать сокровища.
      courseC_collector_prog5_2019:
        courseC_collector_prog5_a: "\"Работает ли она на первом шаге?\nРаботает ли
          она на втором шаге? \nГде именно допущена ошибка?\""
        courseC_collector_prog5_b: Если ты исправил одну ошибку, а программа все равно
          не работает, используй вышеприведенные вопросы для поиска других ошибок.
        courseC_collector_prog5_c: Если застрянешь, попробуй записать свои шаги на
          листе бумаги.
        courseC_collector_prog5_d: Пройди по этому пути, чтобы собрать сокровища.
      courseC_collector_prog6:
        courseC_collector_prog6_a: "Сможешь догадаться, что идет не так? \n\nПопробуй
          использовать кнопку \"Шаг\"для поиска ошибок путем построчного прогона кода."
        courseC_collector_prog6_b: Застрял? Попробуй этот путь, чтобы собрать сокровища.
      courseC_collector_prog6_2018:
        courseC_collector_prog6_a: "Сможешь догадаться, что идет не так? \n\nПопробуй
          использовать кнопку \"Шаг\"для поиска ошибок путем построчного прогона кода."
        courseC_collector_prog6_b: Застрял? Попробуй этот путь, чтобы собрать сокровища.
      courseC_collector_prog6_2019:
        courseC_collector_prog6_a: "Сможешь догадаться, что идет не так? \n\nПопробуй
          использовать кнопку \"Шаг\"для поиска ошибок путем построчного прогона кода."
        courseC_collector_prog6_b: Застрял? Попробуй этот путь, чтобы собрать сокровища.
      courseC_collector_prog7:
        courseC_collector_prog7_a: В рабочей области уже немало отличного кода. Тебе
          не нужно удалять его части, чтобы решить эту головоломку.
        courseC_collector_prog7_b: Не видишь блока, нужного, чтобы заставить Лорел
          двигаться в нужном направлении? Вытащи его из набора инструментов.
        courseC_collector_prog7_c: Не видишь маршрут, позволяющий собрать все сокровища?
          Попробуй этот путь!
      courseC_collector_prog7_2018:
        courseC_collector_prog7_a: В рабочей области уже немало отличного кода. Тебе
          не нужно удалять его части, чтобы решить эту головоломку.
        courseC_collector_prog7_b: Не видишь блока, нужного, чтобы заставить Лорел
          двигаться в нужном направлении? Вытащи его из набора инструментов.
        courseC_collector_prog7_c: Не видишь маршрут, позволяющий собрать все сокровища?
          Попробуй этот путь!
      courseC_collector_prog7_2019:
        courseC_collector_prog7_a: В рабочей области уже немало отличного кода. Тебе
          не нужно удалять его части, чтобы решить эту головоломку.
        courseC_collector_prog7_b: Не видишь блока, нужного, чтобы заставить Лорел
          двигаться в нужном направлении? Вытащи его из набора инструментов.
        courseC_collector_prog7_c: Не видишь маршрут, позволяющий собрать все сокровища?
          Попробуй этот путь!
      courseC_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: You can use the `collect` block many
          times to collect the extra treasure.
      courseC_collector_prog_challenge1_2018:
        courseC_collector_prog_challenge1_a: You can use the `collect` block many
          times to collect the extra treasure.
      courseC_collector_prog_challenge1_2019:
        courseC_collector_prog_challenge1_a: You can use the `collect` block many
          times to collect the extra treasure.
      courseC_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: You can use more than one `collect` block
          at each space.
        courseC_collector_prog_challenge1_b: Lost your way?  Try this path to solve
          the puzzle!
      courseC_collector_prog_challenge2_2018:
        courseC_collector_prog_challenge1_a: You can use more than one `collect` block
          at each space.
        courseC_collector_prog_challenge1_b: Lost your way?  Try this path to solve
          the puzzle!
      courseC_collector_prog_challenge2_2019:
        courseC_collector_prog_challenge1_a: You can use more than one `collect` block
          at each space.
        courseC_collector_prog_challenge1_b: Lost your way?  Try this path to solve
          the puzzle!
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events2:
        courseC_flappy_events2_a: 'The block you need to add is called `set speed`. '
        courseC_flappy_events2_b: Connect the `set speed` block to the `when run`
          block to solve this puzzle.
      courseC_flappy_events2_2018:
        courseC_flappy_events2_a: 'The block you need to add is called `set speed`. '
        courseC_flappy_events2_b: Connect the `set speed` block to the `when run`
          block to solve this puzzle.
      courseC_flappy_events2_2019:
        courseC_flappy_events2_a: 'The block you need to add is called `set speed`. '
        courseC_flappy_events2_b: Connect the `set speed` block to the `when run`
          block to solve this puzzle.
      courseC_flappy_events3:
        courseC_flappy_events3_a: If something isn't working correctly, make sure
          your blocks are connected to the correct events in the workspace.
      courseC_flappy_events3_2018:
        courseC_flappy_events3_a: If something isn't working correctly, make sure
          your blocks are connected to the correct events in the workspace.
      courseC_flappy_events3_2019:
        courseC_flappy_events3_a: If something isn't working correctly, make sure
          your blocks are connected to the correct events in the workspace.
      courseC_flappy_events4:
        courseC_flappy_events4_a: Connect the `end game` block to `when hit an obstacle`
          to solve this puzzle.
      courseC_flappy_events4_2018:
        courseC_flappy_events4_a: Connect the `end game` block to `when hit an obstacle`
          to solve this puzzle.
      courseC_flappy_events4_2019:
        courseC_flappy_events4_a: Connect the `end game` block to `when hit an obstacle`
          to solve this puzzle.
      courseC_flappy_events5:
        courseC_flappy_events5_a: You will need to use the `score a point` block to
          pass this level.
      courseC_flappy_events5_2018:
        courseC_flappy_events5_a: You will need to use the `score a point` block to
          pass this level.
      courseC_flappy_events5_2019:
        courseC_flappy_events5_a: You will need to use the `score a point` block to
          pass this level.
      courseC_flappy_events6:
        courseC_flappy_events6_a: Try connecting the `flap a ____ amount` block to
          the `when click` event.
      courseC_flappy_events6_2018:
        courseC_flappy_events6_a: Try connecting the `flap a ____ amount` block to
          the `when click` event.
      courseC_flappy_events6_2019:
        courseC_flappy_events6_a: Try connecting the `flap a ____ amount` block to
          the `when click` event.
      courseC_flappy_events7:
        courseC_flappy_events7_a: 'You can change the background using the `set scene`
          block. '
      courseC_flappy_events7_2018:
        courseC_flappy_events7_a: 'You can change the background using the `set scene`
          block. '
      courseC_flappy_events7_2019:
        courseC_flappy_events7_a: 'You can change the background using the `set scene`
          block. '
      courseC_flappy_events8:
        courseC_flappy_events8_a: Try connecting a second `set scene` block under
          the `when pass obstacle` event to pass this level.
      courseC_flappy_events8_2018:
        courseC_flappy_events8_a: Try connecting a second `set scene` block under
          the `when pass obstacle` event to pass this level.
      courseC_flappy_events8_2019:
        courseC_flappy_events8_a: Try connecting a second `set scene` block under
          the `when pass obstacle` event to pass this level.
      courseC_flappy_events9:
        courseC_flappy_events9_a: Connect the `set score 0` block to the `when hit
          an obstacle` event to pass this level.
      courseC_flappy_events9_2018:
        courseC_flappy_events9_a: Connect the `set score 0` block to the `when hit
          an obstacle` event to pass this level.
      courseC_flappy_events9_2019:
        courseC_flappy_events9_a: Connect the `set score 0` block to the `when hit
          an obstacle` event to pass this level.
      courseC_harvester_loops1:
        courseC_harvester_loops1_a: Once you have moved to a pumpkin, use <xml><block
          type="harvester_pumpkin"/></xml> to collect it.
        courseC_harvester_loops1_b: You can use a loop with the <xml><block type="harvester_pumpkin"/></xml>
          block to pick more than one pumpkin from a square.
      courseC_harvester_loops1_2018:
        courseC_harvester_loops1_a: Once you have moved to a pumpkin, use <xml><block
          type="harvester_pumpkin"/></xml> to collect it.
        courseC_harvester_loops1_b: You can use a loop with the <xml><block type="harvester_pumpkin"/></xml>
          block to pick more than one pumpkin from a square.
      courseC_harvester_loops1_2019:
        courseC_harvester_loops1_a: Once you have moved to a pumpkin, use <xml><block
          type="harvester_pumpkin"/></xml> to collect it.
        courseC_harvester_loops1_b: You can use a loop with the <xml><block type="harvester_pumpkin"/></xml>
          block to pick more than one pumpkin from a square.
      courseC_harvester_loops2:
        courseC_harvester_loops2_a: If you get stuck, try writing the steps on paper
          and looking for repeating patterns.
        courseC_harvester_loops2_b: You will need one `repeat` loop after another.
        courseC_harvester_loops2_c: One loop will repeat the `move forward` command,
          and the other will repeat the `pick pumpkin` command.
      courseC_harvester_loops2_2018:
        courseC_harvester_loops2_a: If you get stuck, try writing the steps on paper
          and looking for repeating patterns.
        courseC_harvester_loops2_b: You will need one `repeat` loop after another.
        courseC_harvester_loops2_c: One loop will repeat the `move forward` command,
          and the other will repeat the `pick pumpkin` command.
      courseC_harvester_loops2_2019:
        courseC_harvester_loops2_a: If you get stuck, try writing the steps on paper
          and looking for repeating patterns.
        courseC_harvester_loops2_b: You will need one `repeat` loop after another.
        courseC_harvester_loops2_c: One loop will repeat the `move forward` command,
          and the other will repeat the `pick pumpkin` command.
      courseC_harvester_loops3:
        courseC_harvester_loops3_a: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
        courseC_harvester_loops3_b: For the first pumpkins, you can use code very
          similar to the last puzzle. Which way do you need to turn afterwards?
        courseC_harvester_loops3_c: If you want to simplify your code, you can actually
          put one loop inside of another! This is called a **nested loop**.
      courseC_harvester_loops3_2018:
        courseC_harvester_loops3_a: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
        courseC_harvester_loops3_b: For the first pumpkins, you can use code very
          similar to the last puzzle. Which way do you need to turn afterwards?
        courseC_harvester_loops3_c: If you want to simplify your code, you can actually
          put one loop inside of another! This is called a **nested loop**.
      courseC_harvester_loops3_2019:
        courseC_harvester_loops3_a: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
        courseC_harvester_loops3_b: For the first pumpkins, you can use code very
          similar to the last puzzle. Which way do you need to turn afterwards?
        courseC_harvester_loops3_c: If you want to simplify your code, you can actually
          put one loop inside of another! This is called a **nested loop**.
      courseC_harvester_loops4:
        courseC_harvester_loops4_a: Use the new `pick corn` block to collect the corn.
        courseC_harvester_loops4_b: You can use multiple repeat loops in your code,
          some to pick corn and some to pick pumpkins.
        courseC_harvester_loops4_c: If you want to simplify your code, you can actually
          put one loop inside of another! This is called a **nested loop**.
      courseC_harvester_loops4_2018:
        courseC_harvester_loops4_a: Use the new `pick corn` block to collect the corn.
        courseC_harvester_loops4_b: You can use multiple repeat loops in your code,
          some to pick corn and some to pick pumpkins.
        courseC_harvester_loops4_c: If you want to simplify your code, you can actually
          put one loop inside of another! This is called a **nested loop**.
      courseC_harvester_loops4_2019:
        courseC_harvester_loops4_a: Use the new `pick corn` block to collect the corn.
        courseC_harvester_loops4_b: You can use multiple repeat loops in your code,
          some to pick corn and some to pick pumpkins.
        courseC_harvester_loops4_c: If you want to simplify your code, you can actually
          put one loop inside of another! This is called a **nested loop**.
      courseC_harvester_loops5:
        courseC_harvester_loops5_a: If you get stuck, try drawing the entire program
          and then looking for repeating patterns.
        courseC_harvester_loops5_b: Does this stair step look familiar from other
          puzzles? The movements should be similar, just remember to collect crops
          along the way.
      courseC_harvester_loops5_2018:
        courseC_harvester_loops5_a: If you get stuck, try drawing the entire program
          and then looking for repeating patterns.
        courseC_harvester_loops5_b: Does this stair step look familiar from other
          puzzles? The movements should be similar, just remember to collect crops
          along the way.
      courseC_harvester_loops5_2019:
        courseC_harvester_loops5_a: If you get stuck, try drawing the entire program
          and then looking for repeating patterns.
        courseC_harvester_loops5_b: Does this stair step look familiar from other
          puzzles? The movements should be similar, just remember to collect crops
          along the way.
      courseC_harvester_loops6:
        courseC_harvester_loops6_a: Remember you can put multiple blocks in one repeat
          loop.
        courseC_harvester_loops6_b: Don’t forget to turn at the end of the row of
          corn.
      courseC_harvester_loops6_2018:
        courseC_harvester_loops6_a: Remember you can put multiple blocks in one repeat
          loop.
        courseC_harvester_loops6_b: Don’t forget to turn at the end of the row of
          corn.
      courseC_harvester_loops6_2019:
        courseC_harvester_loops6_a: Remember you can put multiple blocks in one repeat
          loop.
        courseC_harvester_loops6_b: Don’t forget to turn at the end of the row of
          corn.
      courseC_harvester_loops7:
        courseC_harvester_loops7_a: You can solve this puzzle two ways, either get
          the corn or the pumpkins first.
        courseC_harvester_loops7_b: You will need multiple `repeat` loops to solve
          this puzzle.
      courseC_harvester_loops7_2018:
        courseC_harvester_loops7_a: You can solve this puzzle two ways, either get
          the corn or the pumpkins first.
        courseC_harvester_loops7_b: You will need multiple `repeat` loops to solve
          this puzzle.
      courseC_harvester_loops7_2019:
        courseC_harvester_loops7_a: You can solve this puzzle two ways, either get
          the corn or the pumpkins first.
        courseC_harvester_loops7_b: You will need multiple `repeat` loops to solve
          this puzzle.
      courseC_harvester_loops8:
        courseC_harvester_loops8_a: Does this stair step look familiar from the previous
          puzzle? The movements should be similar, just remember to collect crops
          along the way.
        courseC_harvester_loops8_b: If you want to simplify your code more, you can
          actually put one `repeat` loop inside of another! This is called a **nested
          loop**.
      courseC_harvester_loops8_2018:
        courseC_harvester_loops8_a: Does this stair step look familiar from the previous
          puzzle? The movements should be similar, just remember to collect crops
          along the way.
        courseC_harvester_loops8_b: If you want to simplify your code more, you can
          actually put one `repeat` loop inside of another! This is called a **nested
          loop**.
      courseC_harvester_loops8_2019:
        courseC_harvester_loops8_a: Does this stair step look familiar from the previous
          puzzle? The movements should be similar, just remember to collect crops
          along the way.
        courseC_harvester_loops8_b: If you want to simplify your code more, you can
          actually put one `repeat` loop inside of another! This is called a **nested
          loop**.
      courseC_harvester_loops_challenge1a:
        courseC_harvester_loops_challenge1_a: This is too hard without loops!
        courseC_harvester_loops_challenge1_b: Ты можешь повторить `двигаться вперёд`
          и `собрать кукурузу` сколько потребуется, затем `повернуть вправо` в каждом
          углу.
        courseC_harvester_loops_challenge1_c: |-
          The best way to collect the corn in the middle uses a `repeat` block inside of another `repeat` block.

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge1a_2018:
        courseC_harvester_loops_challenge1_a: This is too hard without loops!
        courseC_harvester_loops_challenge1_b: Ты можешь повторить `двигаться вперёд`
          и `собрать кукурузу` сколько потребуется, затем `повернуть вправо` в каждом
          углу.
        courseC_harvester_loops_challenge1_c: |-
          After picking corn the first two times, you can use a nested loop to pick the next eight pieces.

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge1a_2019:
        courseC_harvester_loops_challenge1_a: This is too hard without loops!
        courseC_harvester_loops_challenge1_b: Ты можешь повторить `двигаться вперёд`
          и `собрать кукурузу` сколько потребуется, затем `повернуть вправо` в каждом
          углу.
        courseC_harvester_loops_challenge1_c: |-
          The best way to collect the corn in the middle uses a `repeat` block inside of another `repeat` block.

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: One way to solve this looks like a zig-zag.
          Another way looks like a spiral! There are lots of different solutions to
          a puzzle like this. Be persistent!
        courseC_harvester_loops_challenge2_b: You can repeat `move forward` and `pick
          lettuce` as many times as you need to, then turn at each corner.
        courseC_harvester_loops_challenge2_c: |-
          This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          This spiral pattern can be coded with just 18 blocks!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2018:
        courseC_harvester_loops_challenge2_a: One way to solve this looks like a zig-zag.
          Another way looks like a spiral! There are lots of different solutions to
          a puzzle like this. Be persistent!
        courseC_harvester_loops_challenge2_b: You can repeat `move forward` and `pick
          lettuce` as many times as you need to, then turn at each corner.
        courseC_harvester_loops_challenge2_c: |-
          This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          This spiral pattern can be coded with just 18 blocks!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2019:
        courseC_harvester_loops_challenge2_a: One way to solve this looks like a zig-zag.
          Another way looks like a spiral! There are lots of different solutions to
          a puzzle like this. Be persistent!
        courseC_harvester_loops_challenge2_b: You can repeat `move forward` and `pick
          lettuce` as many times as you need to, then turn at each corner.
        courseC_harvester_loops_challenge2_c: |-
          This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          This spiral pattern can be coded with just 18 blocks!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_maze_debugging1:
        courseC_maze_debugging1_a: |-
          -   Все ли работает после первого шага?
          -   Работает ли код по-прежнему после второго шага?
          -   Где именно происходит сбой?
        courseC_maze_debugging1_b: Чтобы решить эту головоломку, тебе потребуется
          добавить 1 блок.
      courseC_maze_debugging1_2018:
        courseC_maze_debugging1_a: |-
          -   Все ли работает после первого шага?
          -   Работает ли код по-прежнему после второго шага?
          -   Где именно происходит сбой?
        courseC_maze_debugging1_b: Чтобы решить эту головоломку, тебе потребуется
          добавить 1 блок.
      courseC_maze_debugging1_2019:
        courseC_maze_debugging1_a: |-
          -   Все ли работает после первого шага?
          -   Работает ли код по-прежнему после второго шага?
          -   Где именно происходит сбой?
        courseC_maze_debugging1_b: Чтобы решить эту головоломку, тебе потребуется
          добавить 1 блок.
      courseC_maze_debugging2:
        courseC_maze_debugging2_a: В рабочей области уже достаточно полезного кода.
          Не стоит удалять его весь и начинать все сначала!
        courseC_maze_debugging2_b: |-
          -   Все ли работает после первого шага?
          -   Работает ли код по-прежнему после второго шага?
          -   Где именно происходит сбой?
        courseC_maze_debugging2_c: Не можешь догадаться, что не так? Попробуй прогнать
          код пару раз и посмотреть, что получится.
      courseC_maze_debugging2_2018:
        courseC_maze_debugging2_a: В рабочей области уже достаточно полезного кода.
          Не стоит удалять его весь и начинать все сначала!
        courseC_maze_debugging2_b: |-
          -   Все ли работает после первого шага?
          -   Работает ли код по-прежнему после второго шага?
          -   Где именно происходит сбой?
        courseC_maze_debugging2_c: Не можешь догадаться, что не так? Попробуй прогнать
          код пару раз и посмотреть, что получится.
      courseC_maze_debugging2_2019:
        courseC_maze_debugging2_a: В рабочей области уже достаточно полезного кода.
          Не стоит удалять его весь и начинать все сначала!
        courseC_maze_debugging2_b: |-
          -   Все ли работает после первого шага?
          -   Работает ли код по-прежнему после второго шага?
          -   Где именно происходит сбой?
        courseC_maze_debugging2_c: Не можешь догадаться, что не так? Попробуй прогнать
          код пару раз и посмотреть, что получится.
      courseC_maze_debugging3:
        courseC_maze_debugging3_a: |-
          Для удаления блока из середины кода перетащи все блоки на другую сторону рабочей области.

          Перетащи блок, который хочешь удалить, обратно в набор инструментов.

          Наконец, помести другие блоки обратно туда, где они были.

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Не можешь догадаться, что не так? Попробуй прогнать
          код пару раз и посмотреть, что получится.
      courseC_maze_debugging3_2018:
        courseC_maze_debugging3_a: |-
          Для удаления блока из середины кода перетащи все блоки на другую сторону рабочей области.

          Перетащи блок, который хочешь удалить, обратно в набор инструментов.

          Наконец, помести другие блоки обратно туда, где они были.

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Не можешь догадаться, что не так? Попробуй прогнать
          код пару раз и посмотреть, что получится.
      courseC_maze_debugging3_2019:
        courseC_maze_debugging3_a: |-
          Для удаления блока из середины кода перетащи все блоки на другую сторону рабочей области.

          Перетащи блок, который хочешь удалить, обратно в набор инструментов.

          Наконец, помести другие блоки обратно туда, где они были.

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Не можешь догадаться, что не так? Попробуй прогнать
          код пару раз и посмотреть, что получится.
      courseC_maze_debugging4:
        courseC_maze_debugging4_a: Используй кнопку "Шаг" для поочередного выполнения
          всех команд. Помогло ли это тебе найти строчку, в которой происходит сбой?
        courseC_maze_debugging4_b: Один из поворотов заставляет Скрата идти не в том
          направлении. Сможешь ли ты догадаться, какой?
      courseC_maze_debugging4_2018:
        courseC_maze_debugging4_a: Используй кнопку "Шаг" для поочередного выполнения
          всех команд. Помогло ли это тебе найти строчку, в которой происходит сбой?
        courseC_maze_debugging4_b: Один из поворотов заставляет Скрата идти не в том
          направлении. Сможешь ли ты догадаться, какой?
      courseC_maze_debugging4_2019:
        courseC_maze_debugging4_a: Используй кнопку "Шаг" для поочередного выполнения
          всех команд. Помогло ли это тебе найти строчку, в которой происходит сбой?
        courseC_maze_debugging4_b: Один из поворотов заставляет Скрата идти не в том
          направлении. Сможешь ли ты догадаться, какой?
      courseC_maze_debugging5:
        courseC_maze_debugging5_a: "В рабочей области уже достаточно полезных блоков.
          Не удаляй их всех! \n\nИспользуй кнопку \"Шаг\" для прогона всего кода и
          определения того, где в коде происходит сбой."
        courseC_maze_debugging5_b: Попробуй перечислить вслух действия, которые должен
          выполнить Скрат. Совпадают ли они с командами кода в рабочей области? Что
          не так?
      courseC_maze_debugging5_2018:
        courseC_maze_debugging5_a: "В рабочей области уже достаточно полезных блоков.
          Не удаляй их всех! \n\nИспользуй кнопку \"Шаг\" для прогона всего кода и
          определения того, где в коде происходит сбой."
        courseC_maze_debugging5_c: You can change the direction of the turn block
          by clicking on the dropdown.
        courseC_maze_debugging5_b: Попробуй перечислить вслух действия, которые должен
          выполнить Скрат. Совпадают ли они с командами кода в рабочей области? Что
          не так?
      courseC_maze_debugging5_2019:
        courseC_maze_debugging5_a: "В рабочей области уже достаточно полезных блоков.
          Не удаляй их всех! \n\nИспользуй кнопку \"Шаг\" для прогона всего кода и
          определения того, где в коде происходит сбой."
        courseC_maze_debugging5_c: You can change the direction of the turn block
          by clicking on the dropdown.
        courseC_maze_debugging5_b: Попробуй перечислить вслух действия, которые должен
          выполнить Скрат. Совпадают ли они с командами кода в рабочей области? Что
          не так?
      courseC_maze_debugging6:
        courseC_maze_debugging6_a: |-
          -   Какие действия должен выполнить Скрат?
          -   Какие действия он выполняет?
          -   О чем это тебе говорит?
        courseC_maze_debugging6_b: |-
          Когда найдешь и исправишь первую ошибку, выполни процедуру отладки еще раз и найди вторую.

          Повторяй эту процедуру, пока программа не заработает!
      courseC_maze_debugging6_2018:
        courseC_maze_debugging6_a: |-
          -   Какие действия должен выполнить Скрат?
          -   Какие действия он выполняет?
          -   О чем это тебе говорит?
        courseC_maze_debugging6_b: |-
          Когда найдешь и исправишь первую ошибку, выполни процедуру отладки еще раз и найди вторую.

          Повторяй эту процедуру, пока программа не заработает!
      courseC_maze_debugging6_2019:
        courseC_maze_debugging6_a: |-
          -   Какие действия должен выполнить Скрат?
          -   Какие действия он выполняет?
          -   О чем это тебе говорит?
        courseC_maze_debugging6_b: |-
          Когда найдешь и исправишь первую ошибку, выполни процедуру отладки еще раз и найди вторую.

          Повторяй эту процедуру, пока программа не заработает!
      courseC_maze_debugging7:
        courseC_maze_debugging7_a: |-
          -   Все ли работает после первого шага?
          -   Работает ли код по-прежнему после второго шага?
          -   Где именно происходит сбой?
        courseC_maze_debugging7_b: Не забудь использовать кнопку "Шаг", чтобы проверить
          программу построчно!
        courseC_maze_debugging7_c: |-
          Когда найдешь и исправишь первую ошибку, обязательно выполни процедуру отладки еще раз и найди следующую.

          Повторяй процедуру отладки, пока программа не заработает!
      courseC_maze_debugging7_2018:
        courseC_maze_debugging7_a: |-
          -   Все ли работает после первого шага?
          -   Работает ли код по-прежнему после второго шага?
          -   Где именно происходит сбой?
        courseC_maze_debugging7_b: Не забудь использовать кнопку "Шаг", чтобы проверить
          программу построчно!
        courseC_maze_debugging7_c: |-
          Когда найдешь и исправишь первую ошибку, обязательно выполни процедуру отладки еще раз и найди следующую.

          Повторяй процедуру отладки, пока программа не заработает!
      courseC_maze_debugging7_2019:
        courseC_maze_debugging7_a: |-
          -   Все ли работает после первого шага?
          -   Работает ли код по-прежнему после второго шага?
          -   Где именно происходит сбой?
        courseC_maze_debugging7_b: Не забудь использовать кнопку "Шаг", чтобы проверить
          программу построчно!
        courseC_maze_debugging7_c: |-
          Когда найдешь и исправишь первую ошибку, обязательно выполни процедуру отладки еще раз и найди следующую.

          Повторяй процедуру отладки, пока программа не заработает!
      courseC_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: Налево или направо? Решать тебе!
        courseC_maze_debugging_challenge1_b: Скрат движется по прямоугольной траектории!
          Он должен поворачивать всякий раз одинаково.
        courseC_maze_debugging_challenge1_c: Если застрянешь, то всегда сможешь начать
          сначала и найти новый путь!
      courseC_maze_debugging_challenge1_2018:
        courseC_maze_debugging_challenge1_a: Налево или направо? Решать тебе!
        courseC_maze_debugging_challenge1_b: Скрат движется по прямоугольной траектории!
          Он должен поворачивать всякий раз одинаково.
        courseC_maze_debugging_challenge1_c: Если застрянешь, то всегда сможешь начать
          сначала и найти новый путь!
      courseC_maze_debugging_challenge1_2019:
        courseC_maze_debugging_challenge1_a: Налево или направо? Решать тебе!
        courseC_maze_debugging_challenge1_b: Скрат движется по прямоугольной траектории!
          Он должен поворачивать всякий раз одинаково.
        courseC_maze_debugging_challenge1_c: Если застрянешь, то всегда сможешь начать
          сначала и найти новый путь!
      courseC_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_b: Если застрянешь, попробуй отладить свой
          код.  Где он не работает?
        courseC_maze_debugging_challenge2_c: |-
          Добраться до цели, двигаясь только вперед и сделав четыре поворота, можно двумя различными путями. Сумеешь использовать цикл – появятся и другие пути!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2018:
        courseC_maze_debugging_challenge2_b: Если застрянешь, попробуй отладить свой
          код.  Где он не работает?
        courseC_maze_debugging_challenge2_c: |-
          Добраться до цели, двигаясь только вперед и сделав четыре поворота, можно двумя различными путями. Сумеешь использовать цикл – появятся и другие пути!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2019:
        courseC_maze_debugging_challenge2_b: Если застрянешь, попробуй отладить свой
          код.  Где он не работает?
        courseC_maze_debugging_challenge2_c: |-
          Добраться до цели, двигаясь только вперед и сделав четыре поворота, можно двумя различными путями. Сумеешь использовать цикл – появятся и другие пути!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_loops_challenge1a:
        courseC_maze_loops_challenge1_a: Мысленно раздели весь путь на три этапа.
          У каждого из них есть закономерность, который ты можешь описать в цикле.
        courseC_maze_loops_challenge1_b: Can you remember how to use loops to repeat
          a staircase pattern?
      courseC_maze_loops_challenge1a_2018:
        courseC_maze_loops_challenge1_a: Мысленно раздели весь путь на три этапа.
          У каждого из них есть закономерность, который ты можешь описать в цикле.
        courseC_maze_loops_challenge1_b: Can you remember how to use loops to repeat
          a staircase pattern?
      courseC_maze_loops_challenge1a_2019:
        courseC_maze_loops_challenge1_a: Мысленно раздели весь путь на три этапа.
          У каждого из них есть закономерность, который ты можешь описать в цикле.
        courseC_maze_loops_challenge1_b: Can you remember how to use loops to repeat
          a staircase pattern?
      courseC_maze_programming1:
        courseC_maze_programming1_0: ' Убедись, что все блоки хорошо соединены друг
          с другом, а затем нажми на ""Выполнить"".'
      courseC_maze_programming1_2018:
        courseC_maze_programming1_0: ' Убедись, что все блоки хорошо соединены друг
          с другом, а затем нажми на ""Выполнить"".'
      courseC_maze_programming1_2019:
        courseC_maze_programming1_0: ' Убедись, что все блоки хорошо соединены друг
          с другом, а затем нажми на ""Выполнить"".'
      courseC_maze_programming2:
        courseC_maze_programming2_a: Чтобы использовать блок <xml><block type="maze_moveForward"/></xml>,
          вытащи его из набора инструментов и прицепи к блоку <xml><block type="when_run"/></xml>.
        courseC_maze_programming2_b: ' Убедись, что все блоки хорошо соединены друг
          с другом, а затем нажми на ""Выполнить"".'
      courseC_maze_programming2_2018:
        courseC_maze_programming2_a: Чтобы использовать блок <xml><block type="maze_moveForward"/></xml>,
          вытащи его из набора инструментов и прицепи к блоку <xml><block type="when_run"/></xml>.
        courseC_maze_programming2_b: ' Убедись, что все блоки хорошо соединены друг
          с другом, а затем нажми на ""Выполнить"".'
      courseC_maze_programming2_2019:
        courseC_maze_programming2_a: Чтобы использовать блок <xml><block type="maze_moveForward"/></xml>,
          вытащи его из набора инструментов и прицепи к блоку <xml><block type="when_run"/></xml>.
        courseC_maze_programming2_b: ' Убедись, что все блоки хорошо соединены друг
          с другом, а затем нажми на ""Выполнить"".'
      courseC_maze_programming3:
        courseC_maze_programming3_a: Попробуй сначала выполнить код, чтобы понять,
          где допущена ошибка.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Для удаления блока из середины кода перетащи все блоки на другую сторону рабочей области.

          Перетащи блок, который хочешь удалить, обратно в набор инструментов.

          Наконец, помести другие блоки обратно туда, где они были.
      courseC_maze_programming3_2018:
        courseC_maze_programming3_a: Попробуй сначала выполнить код, чтобы понять,
          где допущена ошибка.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Для удаления блока из середины кода перетащи все блоки на другую сторону рабочей области.

          Перетащи блок, который хочешь удалить, обратно в набор инструментов.

          Наконец, помести другие блоки обратно туда, где они были.
      courseC_maze_programming3_2019:
        courseC_maze_programming3_a: Попробуй сначала выполнить код, чтобы понять,
          где допущена ошибка.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Для удаления блока из середины кода перетащи все блоки на другую сторону рабочей области.

          Перетащи блок, который хочешь удалить, обратно в набор инструментов.

          Наконец, помести другие блоки обратно туда, где они были.
      courseC_maze_programming4:
        courseC_maze_programming4_a: Помни, что поворачивая, ты поворачиваешь с точки
          зрения _птицы_.  Если ты повернешь направо, птица опустится вниз.
        courseC_maze_programming4_b: |-
          Для продвижения по пути:

          -   переместись вперед
          -   поверни в одну сторону
          -   переместись вперед
          -   поверни в другую сторону
          -   переместись вперед
      courseC_maze_programming4_2018:
        courseC_maze_programming4_a: Помни, что поворачивая, ты поворачиваешь с точки
          зрения _птицы_.  Если ты повернешь направо, птица опустится вниз.
        courseC_maze_programming4_b: |-
          Для продвижения по пути:

          -   переместись вперед
          -   поверни в одну сторону
          -   переместись вперед
          -   поверни в другую сторону
          -   переместись вперед
      courseC_maze_programming4_2019:
        courseC_maze_programming4_a: Помни, что поворачивая, ты поворачиваешь с точки
          зрения _птицы_.  Если ты повернешь направо, птица опустится вниз.
        courseC_maze_programming4_b: |-
          Для продвижения по пути:

          -   переместись вперед
          -   поверни в одну сторону
          -   переместись вперед
          -   поверни в другую сторону
          -   переместись вперед
      courseC_maze_programming5:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Для решения этой головоломки птичке потребуется
          сделать один поворот. Сможешь догадаться, в какую сторону?
        courseC_maze_programming5_c: Код будет состоять из двух блоков «двигаться
          вперед», поворота и еще двух блоков «двигаться вперед».
      courseC_maze_programming5_2018:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Для решения этой головоломки птичке потребуется
          сделать один поворот. Сможешь догадаться, в какую сторону?
        courseC_maze_programming5_c: Код будет состоять из двух блоков «двигаться
          вперед», поворота и еще двух блоков «двигаться вперед».
      courseC_maze_programming5_2019:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Для решения этой головоломки птичке потребуется
          сделать один поворот. Сможешь догадаться, в какую сторону?
        courseC_maze_programming5_c: Код будет состоять из двух блоков «двигаться
          вперед», поворота и еще двух блоков «двигаться вперед».
      courseC_maze_programming6:
        courseC_maze_programming6_a: Эту головоломку можно решить двумя способами!
        courseC_maze_programming6_b: Проведи пальцем по возможному пути от птичке
          к свинке. Из каких этапов он состоит?
        courseC_maze_programming6_c: Не забудь прежде всего повернуть, иначе птичка
          упрется в стену.
        courseC_maze_programming6_d: Чувствуешь, что застрял?  Попробуй этот путь!
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: Эту головоломку можно решить двумя способами!
        courseC_maze_programming6_b: Проведи пальцем по возможному пути от птичке
          к свинке. Из каких этапов он состоит?
        courseC_maze_programming6_c: Не забудь прежде всего повернуть, иначе птичка
          упрется в стену.
        courseC_maze_programming6_d: Чувствуешь, что застрял?  Попробуй этот путь!
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: Эту головоломку можно решить двумя способами!
        courseC_maze_programming6_b: Проведи пальцем по возможному пути от птичке
          к свинке. Из каких этапов он состоит?
        courseC_maze_programming6_c: Не забудь прежде всего повернуть, иначе птичка
          упрется в стену.
        courseC_maze_programming6_d: Чувствуешь, что застрял?  Попробуй этот путь!
      courseC_maze_programming7:
        courseC_maze_programming7_a: Не забудь использовать кнопку ""Шаг"", чтобы
          проверить программу блок за блоком и найти ошибки.
        courseC_maze_programming7_b: Если у тебя возникнут сложности с этой головоломкой,
          попробуй записать свои шаги на листе бумаги.
      courseC_maze_programming7_2018:
        courseC_maze_programming7_a: Не забудь использовать кнопку ""Шаг"", чтобы
          проверить программу блок за блоком и найти ошибки.
        courseC_maze_programming7_b: Если у тебя возникнут сложности с этой головоломкой,
          попробуй записать свои шаги на листе бумаги.
      courseC_maze_programming7_2019:
        courseC_maze_programming7_a: Не забудь использовать кнопку ""Шаг"", чтобы
          проверить программу блок за блоком и найти ошибки.
        courseC_maze_programming7_b: Если у тебя возникнут сложности с этой головоломкой,
          попробуй записать свои шаги на листе бумаги.
      courseC_maze_programming8:
        courseC_maze_programming8_a: Не забудь воспользоваться кнопкой ""Шаг"" для
          построчной проверки кода, если застрянешь.
        courseC_maze_programming8_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseC_maze_programming8_2018:
        courseC_maze_programming8_a: Не забудь воспользоваться кнопкой ""Шаг"" для
          построчной проверки кода, если застрянешь.
        courseC_maze_programming8_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseC_maze_programming8_2019:
        courseC_maze_programming8_a: Не забудь воспользоваться кнопкой ""Шаг"" для
          построчной проверки кода, если застрянешь.
        courseC_maze_programming8_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseC_maze_programming_challenge1:
        courseC_maze_programming_challenge1_a: There are many ways to get to the pig.
          Use your finger to find a path and then program it!
      courseC_maze_programming_challenge1_2018:
        courseC_maze_programming_challenge1_a: There are many ways to get to the pig.
          Use your finger to find a path and then program it!
      courseC_maze_programming_challenge1_2019:
        courseC_maze_programming_challenge1_a: There are many ways to get to the pig.
          Use your finger to find a path and then program it!
      courseC_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _Если отправишь меня назад, будь очень
          внимателен, выбирая направление поворота!_
        courseC_maze_programming_challenge2_b: |-
          The shortest solution uses only 5 blocks, but it uses this block:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018:
        courseC_maze_programming_challenge2_a: _Если отправишь меня назад, будь очень
          внимателен, выбирая направление поворота!_
        courseC_maze_programming_challenge2_b: |-
          The shortest solution uses only 5 blocks, but it uses this block:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2019:
        courseC_maze_programming_challenge2_a: _Если отправишь меня назад, будь очень
          внимателен, выбирая направление поворота!_
        courseC_maze_programming_challenge2_b: |-
          The shortest solution uses only 5 blocks, but it uses this block:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_starWars_loops1:
        courseC_starWars_loops1_a: Когда BB-8 приблизится к металлолому, он соберет
          его автоматически.
        courseC_starWars_loops1_b: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
        courseC_starWars_loops1_c: Для решения этой головоломки тебе потребуется переместиться
          вперед пять раз.
      courseC_starWars_loops10:
        courseC_starWars_loops10_a: Эта схема похожа на множество ступенек, не так
          ли? Посмотрим, сможешь ли ты использовать то, чему научился на прошлых головоломках,
          чтобы сделать все повороты.
        courseC_starWars_loops10_b: Если хочешь, чтобы код был короче, вставь один
          цикл повтора в другой!\\ Это называется \*\*вложенным циклом".
        courseC_starWars_loops10_c: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
      courseC_starWars_loops10_2018:
        courseC_starWars_loops10_a: Эта схема похожа на множество ступенек, не так
          ли? Посмотрим, сможешь ли ты использовать то, чему научился на прошлых головоломках,
          чтобы сделать все повороты.
        courseC_starWars_loops10_b: Если хочешь, чтобы код был короче, вставь один
          цикл повтора в другой!\\ Это называется \*\*вложенным циклом".
        courseC_starWars_loops10_c: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
      courseC_starWars_loops10_2019:
        courseC_starWars_loops10_a: Эта схема похожа на множество ступенек, не так
          ли? Посмотрим, сможешь ли ты использовать то, чему научился на прошлых головоломках,
          чтобы сделать все повороты.
        courseC_starWars_loops10_b: Если хочешь, чтобы код был короче, вставь один
          цикл повтора в другой!\\ Это называется \*\*вложенным циклом".
        courseC_starWars_loops10_c: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
      courseC_starWars_loops1_2018:
        courseC_starWars_loops1_a: Когда BB-8 приблизится к металлолому, он соберет
          его автоматически.
        courseC_starWars_loops1_b: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
        courseC_starWars_loops1_c: Для решения этой головоломки тебе потребуется переместиться
          вперед пять раз.
      courseC_starWars_loops1_2019:
        courseC_starWars_loops1_a: Когда BB-8 приблизится к металлолому, он соберет
          его автоматически.
        courseC_starWars_loops1_b: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
        courseC_starWars_loops1_c: Для решения этой головоломки тебе потребуется переместиться
          вперед пять раз.
      courseC_starWars_loops2:
        courseC_starWars_loops2_a: Для повтора кода вытащи цикл "повторить", а затем
          помести в него нужный блок.
      courseC_starWars_loops2_2018:
        courseC_starWars_loops2_a: Для повтора кода вытащи цикл "повторить", а затем
          помести в него нужный блок.
      courseC_starWars_loops2_2019:
        courseC_starWars_loops2_a: Для повтора кода вытащи цикл "повторить", а затем
          помести в него нужный блок.
      courseC_starWars_loops2_copy:
        courseC_starWars_loops2_a: Для повтора кода вытащи цикл "повторить", а затем
          помести в него нужный блок.
      courseC_starWars_loops4:
        courseC_starWars_loops4_c: Если нажать на маленькую стрелку рядом со словом
          "налево" на блоке поворота, то оно изменится на "направо".
        courseC_starWars_loops4_a: Используй два блока "повторить".
        courseC_starWars_loops4_b: 'У каждого цикла "повторить" будет внутри всего
          одна команда: "двигаться вперед".'
      courseC_starWars_loops4_2018:
        courseC_starWars_loops4_c: Если нажать на маленькую стрелку рядом со словом
          "налево" на блоке поворота, то оно изменится на "направо".
        courseC_starWars_loops4_a: Используй два блока "повторить".
        courseC_starWars_loops4_b: 'У каждого цикла "повторить" будет внутри всего
          одна команда: "двигаться вперед".'
      courseC_starWars_loops4_2019:
        courseC_starWars_loops4_c: Если нажать на маленькую стрелку рядом со словом
          "налево" на блоке поворота, то оно изменится на "направо".
        courseC_starWars_loops4_a: Используй два блока "повторить".
        courseC_starWars_loops4_b: 'У каждого цикла "повторить" будет внутри всего
          одна команда: "двигаться вперед".'
      courseC_starWars_loops4_copy:
        courseC_starWars_loops4_c: Если нажать на маленькую стрелку рядом со словом
          "налево" на блоке поворота, то оно изменится на "направо".
        courseC_starWars_loops4_a: Используй два блока "повторить".
        courseC_starWars_loops4_b: 'У каждого цикла "повторить" будет внутри всего
          одна команда: "двигаться вперед".'
      courseC_starWars_loops5:
        courseC_starWars_loops5_b: Для перемещения вниз тебе придется повернуть, а
          затем переместиться вперед.
        courseC_starWars_loops5_a: Лучший вариант кода начинается с поворота, за которым
          следуют перемещение вперед, еще один поворот и цикл.
      courseC_starWars_loops5_2018:
        courseC_starWars_loops5_a: The best solution uses a single `move forward`,
          then a turn, then a loop.
      courseC_starWars_loops5_2019:
        courseC_starWars_loops5_a: The best solution uses a single `move forward`,
          then a turn, then a loop.
      courseC_starWars_loops5_copy:
        courseC_starWars_loops5_b: Для перемещения вниз тебе придется повернуть, а
          затем переместиться вперед.
        courseC_starWars_loops5_a: Лучший вариант кода начинается с поворота, за которым
          следуют перемещение вперед, еще один поворот и цикл.
      courseC_starWars_loops6:
        courseC_starWars_loops6_a: Попробуй записать все шаги на листе бумаге и найти
          схему.
        courseC_starWars_loops6_b: Если хочешь, чтобы код был короче, вставь один
          цикл повтора в другой!\\ Это называется \*\*вложенным циклом".
      courseC_starWars_loops6_2018:
        courseC_starWars_loops6_a: Попробуй записать все шаги на листе бумаге и найти
          схему.
        courseC_starWars_loops6_b: Если хочешь, чтобы код был короче, вставь один
          цикл повтора в другой!\\ Это называется \*\*вложенным циклом".
      courseC_starWars_loops6_2019:
        courseC_starWars_loops6_a: Попробуй записать все шаги на листе бумаге и найти
          схему.
        courseC_starWars_loops6_b: Если хочешь, чтобы код был короче, вставь один
          цикл повтора в другой!\\ Это называется \*\*вложенным циклом".
      courseC_starWars_loops6_copy:
        courseC_starWars_loops6_a: Попробуй записать все шаги на листе бумаге и найти
          схему.
        courseC_starWars_loops6_b: Если хочешь, чтобы код был короче, вставь один
          цикл повтора в другой!\\ Это называется \*\*вложенным циклом".
      courseC_starWars_loops7:
        courseC_starWars_loops7_a: Эта схема проще, чем кажется! Начни с простой ступеньки
          лестницы. Позволяет ли эта схема собрать весь металлолом?
        courseC_starWars_loops7_b: Если у тебя возникнут сложности с этим заданием,
          попробуй записать все шаги на листе бумаги и найти схему.
        courseC_starWars_loops7_c: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
      courseC_starWars_loops7_2018:
        courseC_starWars_loops7_a: Эта схема проще, чем кажется! Начни с простой ступеньки
          лестницы. Позволяет ли эта схема собрать весь металлолом?
        courseC_starWars_loops7_b: Если у тебя возникнут сложности с этим заданием,
          попробуй записать все шаги на листе бумаги и найти схему.
        courseC_starWars_loops7_c: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
      courseC_starWars_loops7_2019:
        courseC_starWars_loops7_a: Эта схема проще, чем кажется! Начни с простой ступеньки
          лестницы. Позволяет ли эта схема собрать весь металлолом?
        courseC_starWars_loops7_b: Если у тебя возникнут сложности с этим заданием,
          попробуй записать все шаги на листе бумаги и найти схему.
        courseC_starWars_loops7_c: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
      courseC_starWars_loops7_copy:
        courseC_starWars_loops7_a: Эта схема проще, чем кажется! Начни с простой ступеньки
          лестницы. Позволяет ли эта схема собрать весь металлолом?
        courseC_starWars_loops7_b: Если у тебя возникнут сложности с этим заданием,
          попробуй записать все шаги на листе бумаги и найти схему.
        courseC_starWars_loops7_c: Не бойся допустить ошибку! Запусти код и посмотри,
          что получится, даже если не уверен, что уже решил головоломку.
      courseC_starWars_loops8:
        course_starWars_loops8_a: Попробуй разбить эту задачу на части. Не торопись.
          Не пытайся решить ее с первой попытки!
        course_starWars_loops8_b: Представь, что первая часть этой задачи – задача
          со ступенькой лестницы. Как ты решал ее раньше?
        course_starWars_loops8_c: Взгляни на этот путь. ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2018:
        course_starWars_loops8_a: Попробуй разбить эту задачу на части. Не торопись.
          Не пытайся решить ее с первой попытки!
        course_starWars_loops8_b: Представь, что первая часть этой задачи – задача
          со ступенькой лестницы. Как ты решал ее раньше?
        course_starWars_loops8_c: Взгляни на этот путь. ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2019:
        course_starWars_loops8_a: Попробуй разбить эту задачу на части. Не торопись.
          Не пытайся решить ее с первой попытки!
        course_starWars_loops8_b: Представь, что первая часть этой задачи – задача
          со ступенькой лестницы. Как ты решал ее раньше?
        course_starWars_loops8_c: Взгляни на этот путь. ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_copy:
        course_starWars_loops8_a: Попробуй разбить эту задачу на части. Не торопись.
          Не пытайся решить ее с первой попытки!
        course_starWars_loops8_b: Представь, что первая часть этой задачи – задача
          со ступенькой лестницы. Как ты решал ее раньше?
        course_starWars_loops8_c: Взгляни на этот путь. ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops9:
        course_starWars_loops9_b: В цикл "повторить" можно вложить не один блок, а
          несколько.
        course_starWars_loops9_c: Поворачивать налево для решения этой головоломки
          не требуется. Все повороты могут быть только направо. ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2018:
        course_starWars_loops9_b: В цикл "повторить" можно вложить не один блок, а
          несколько.
        course_starWars_loops9_c: Поворачивать налево для решения этой головоломки
          не требуется. Все повороты могут быть только направо. ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2019:
        course_starWars_loops9_b: В цикл "повторить" можно вложить не один блок, а
          несколько.
        course_starWars_loops9_c: Поворачивать налево для решения этой головоломки
          не требуется. Все повороты могут быть только направо. ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseD_artist_1_2018:
        courseD_artist_project1_a: Используй выпадающее меню на блоках «повернуть»
          для выбора требуемого угла!
        courseD_artist_project1_b: Помни, что команда «двигаться вперед» рисует линию,
          а команда «прыгнуть вперед» – нет.
      courseD_artist_1_2018_2019:
        courseD_artist_project1_a: Используй выпадающее меню на блоках «повернуть»
          для выбора требуемого угла!
        courseD_artist_project1_b: Помни, что команда «двигаться вперед» рисует линию,
          а команда «прыгнуть вперед» – нет.
      courseD_artist_2_2018:
        courseD_artist_project1_b: Не забудь, что когда ты двигаешься, ты рисуешь
          линию, а когда прыгаешь – нет.
        courseD_artist_project1_a: Используй выпадающее меню на блоках «повернуть»
          для выбора требуемого угла!
      courseD_artist_2_2018_2019:
        courseD_artist_project1_b: Не забудь, что когда ты двигаешься, ты рисуешь
          линию, а когда прыгаешь – нет.
        courseD_artist_project1_a: Используй выпадающее меню на блоках «повернуть»
          для выбора требуемого угла!
      courseD_artist_5_2018:
        '1': Если будешь менять фигуры, не забудь, что тебе потребуется изменить и
          углы!
      courseD_artist_5_2018_2019:
        '1': Если будешь менять фигуры, не забудь, что тебе потребуется изменить и
          углы!
      courseD_artist_binary1:
        courseD_artist_binary1_a: Replace the "???" in the text block with the binary
          image you want, in zeroes and ones.
        courseD_artist_binary1_b: The artist will draw a white space for every 1 and
          a black space for every 0.
        courseD_artist_binary1_c: |-
          This is how you can input your binary code:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2018:
        courseD_artist_binary1_a: Replace the "???" in the text block with the binary
          image you want, in zeroes and ones.
        courseD_artist_binary1_b: The artist will draw a white space for every 1 and
          a black space for every 0.
        courseD_artist_binary1_c: |-
          This is how you can input your binary code:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2019:
        courseD_artist_binary1_a: Replace the "???" in the text block with the binary
          image you want, in zeroes and ones.
        courseD_artist_binary1_b: The artist will draw a white space for every 1 and
          a black space for every 0.
        courseD_artist_binary1_c: |-
          This is how you can input your binary code:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary2:
        courseD_artist_binary2_a: Just click `Run` to see this program in action!
      courseD_artist_binary2_2018:
        courseD_artist_binary2_a: Just click `Run` to see this program in action!
      courseD_artist_binary2_2019:
        courseD_artist_binary2_a: Just click `Run` to see this program in action!
      courseD_artist_binary3:
        courseD_artist_binary3_a: One of the four binary patterns in the toolbox will
          solve this puzzle!
        courseD_artist_binary3_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you haven't solved
          the puzzle yet.
      courseD_artist_binary3_2018:
        courseD_artist_binary3_a: One of the four binary patterns in the toolbox will
          solve this puzzle!
        courseD_artist_binary3_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you haven't solved
          the puzzle yet.
      courseD_artist_binary3_2019:
        courseD_artist_binary3_a: One of the four binary patterns in the toolbox will
          solve this puzzle!
        courseD_artist_binary3_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you haven't solved
          the puzzle yet.
      courseD_artist_binary4:
        courseD_artist_binary4_a: Look at the first three squares on the top row.
          Could you repeat these three to get the whole pattern?
        courseD_artist_binary4_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you don't think you've
          solved the puzzle yet.
      courseD_artist_binary4_2018:
        courseD_artist_binary4_a: Look at the first three squares on the top row.
          Could you repeat these three to get the whole pattern?
        courseD_artist_binary4_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you don't think you've
          solved the puzzle yet.
      courseD_artist_binary4_2019:
        courseD_artist_binary4_a: Look at the first three squares on the top row.
          Could you repeat these three to get the whole pattern?
        courseD_artist_binary4_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you don't think you've
          solved the puzzle yet.
      courseD_artist_binary5:
        courseD_artist_binary5_a: Try running the code first to see what you have
          to work with.
        courseD_artist_binary5_b: You only need to switch two rows to make a smile.
        courseD_artist_binary5_c: If you are having trouble figuring this puzzle out,
          try writing the binary lines down on a piece of paper and looking for a
          pattern.
      courseD_artist_binary5_2018:
        courseD_artist_binary5_a: Try running the code first to see what you have
          to work with.
        courseD_artist_binary5_b: You only need to switch two rows to make a smile.
        courseD_artist_binary5_c: If you are having trouble figuring this puzzle out,
          try writing the binary lines down on a piece of paper and looking for a
          pattern.
      courseD_artist_binary5_2019:
        courseD_artist_binary5_a: Try running the code first to see what you have
          to work with.
        courseD_artist_binary5_b: You only need to switch two rows to make a smile.
        courseD_artist_binary5_c: If you are having trouble figuring this puzzle out,
          try writing the binary lines down on a piece of paper and looking for a
          pattern.
      courseD_artist_binary6:
        courseD_artist_binary6_a: Start at the top left. How far do you have to read
          before the pattern starts to repeat?
        courseD_artist_binary6_b: You can build your binary string a bit at a time,
          and keep testing!
      courseD_artist_binary6_2018:
        courseD_artist_binary6_a: Start at the top left. How far do you have to read
          before the pattern starts to repeat?
        courseD_artist_binary6_b: You can build your binary string a bit at a time,
          and keep testing!
      courseD_artist_binary6_2019:
        courseD_artist_binary6_a: Start at the top left. How far do you have to read
          before the pattern starts to repeat?
        courseD_artist_binary6_b: You can build your binary string a bit at a time,
          and keep testing!
      courseD_artist_binary7:
        courseD_artist_binary7_a: Start at the top left. How far do you have to read
          before the pattern starts to repeat?
        courseD_artist_binary7_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you don't think you've
          solved the puzzle yet.
      courseD_artist_binary7_2018:
        courseD_artist_binary7_a: Start at the top left. How far do you have to read
          before the pattern starts to repeat?
        courseD_artist_binary7_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you don't think you've
          solved the puzzle yet.
      courseD_artist_binary7_2019:
        courseD_artist_binary7_a: Start at the top left. How far do you have to read
          before the pattern starts to repeat?
        courseD_artist_binary7_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you don't think you've
          solved the puzzle yet.
      courseD_artist_binary8:
        courseD_artist_binary8_a: The spiral can be confusing sometimes. Isolate each
          horizontal line in your mind as you create this design.
        courseD_artist_binary8_b: Try running the code first to see what you have
          to work with.
        courseD_artist_binary8_c: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you haven't solved
          the puzzle yet.
      courseD_artist_binary8_2018:
        courseD_artist_binary8_a: The spiral can be confusing sometimes. Isolate each
          horizontal line in your mind as you create this design.
        courseD_artist_binary8_b: Try running the code first to see what you have
          to work with.
        courseD_artist_binary8_c: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you haven't solved
          the puzzle yet.
      courseD_artist_binary8_2019:
        courseD_artist_binary8_a: The spiral can be confusing sometimes. Isolate each
          horizontal line in your mind as you create this design.
        courseD_artist_binary8_b: Try running the code first to see what you have
          to work with.
        courseD_artist_binary8_c: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you haven't solved
          the puzzle yet.
      courseD_artist_binary_challenge2_2018:
        courseD_artist_binary_challenge2_a: There are only few lines wrong in the
          original program.
      courseD_artist_binary_challenge2_2019:
        courseD_artist_binary_challenge2_a: There are only few lines wrong in the
          original program.
      courseD_artist_nestedLoops1:
        courseD_artist_nestedLoops1_a: The easiest way to draw this is to move forward
          and use right turns.
        courseD_artist_nestedLoops1_b: You can draw this triangle with a `repeat`
          loop with two blocks inside. Which blocks do you need?
        courseD_artist_nestedLoops1_c: Try writing the steps on paper and looking
          for patterns that can be simplified with loops.
      courseD_artist_nestedLoops1_2018:
        courseD_artist_nestedLoops1_a: The easiest way to draw this is to move forward
          and use right turns.
        courseD_artist_nestedLoops1_b: You can draw this triangle with a `repeat`
          loop with two blocks inside. Which blocks do you need?
        courseD_artist_nestedLoops1_c: Try writing the steps on paper and looking
          for patterns that can be simplified with loops.
      courseD_artist_nestedLoops1_2019:
        courseD_artist_nestedLoops1_a: The easiest way to draw this is to move forward
          and use right turns.
        courseD_artist_nestedLoops1_b: You can draw this triangle with a `repeat`
          loop with two blocks inside. Which blocks do you need?
        courseD_artist_nestedLoops1_c: Try writing the steps on paper and looking
          for patterns that can be simplified with loops.
      courseD_artist_nestedLoops1a:
        courseD_artist_nestedLoops1a_a: |-
          You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: If you create your triangle with a loop, the
          artist should be facing the same way as they started. This will make the
          60 degree turns a lot easier.
        courseD_artist_nestedLoops1a_c: If you want colors, use the `set color` block
          in your code. You don't have to match the colors in the template image.
      courseD_artist_nestedLoops1a_2018:
        courseD_artist_nestedLoops1a_a: |-
          You will need to draw a total of 6 triangles (tip: use your code from the last puzzle to get started). After finishing each triangle, rotate 60 degrees and move to start the next triangle.

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: If you create your triangle with a loop, the
          artist should be facing the same way as they started. This will make the
          60 degree turns a lot easier.
        courseD_artist_nestedLoops1a_c: If you want colors, use the `set color` block
          in your code. You don't have to match the colors in the template image.
      courseD_artist_nestedLoops1a_2019:
        courseD_artist_nestedLoops1a_a: |-
          You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: If you create your triangle with a loop, the
          artist should be facing the same way as they started. This will make the
          60 degree turns a lot easier.
        courseD_artist_nestedLoops1a_c: If you want colors, use the `set color` block
          in your code. You don't have to match the colors in the template image.
      courseD_artist_nestedLoops2:
        courseD_artist_nestedLoops2_a: Nest your loops by surrounding your triangle
          code with another `repeat` loop.
        courseD_artist_nestedLoops2_b: Remember to put the `turn` block inside of
          the loop so that the artist turns after each triangle.
      courseD_artist_nestedLoops2_2018:
        courseD_artist_nestedLoops2_a: Nest your loops by surrounding your triangle
          code with another `repeat` loop.
        courseD_artist_nestedLoops2_b: Remember to put the `turn` block inside of
          the loop so that the artist turns after each triangle.
      courseD_artist_nestedLoops2_2019:
        courseD_artist_nestedLoops2_a: Nest your loops by surrounding your triangle
          code with another `repeat` loop.
        courseD_artist_nestedLoops2_b: Remember to put the `turn` block inside of
          the loop so that the artist turns after each triangle.
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: |-
          Попробуй использовать блок "прыжок вперед" что-бы оказаться в верхней части одного квадрата где ты начнешь следующий.

          Если твои квадраты 20 пикселей в высоту и находятся на растоянии в 20 пикселей друг от друга, как далеко тебе нужно прыгнуть?
        courseD_artist_nestedLoops3_b: 'Don''t forget to use a nested loop to solve
          this puzzle quickly. '
        courseD_artist_nestedLoops3_c: 'Start by using a `repeat` loop to make one
          square.  Next, repeat that square 8 times, jumping 40 pixels in between. '
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: |-
          Попробуй использовать блок "прыжок вперед" что-бы оказаться в верхней части одного квадрата где ты начнешь следующий.

          Если твои квадраты 20 пикселей в высоту и находятся на растоянии в 20 пикселей друг от друга, как далеко тебе нужно прыгнуть?
        courseD_artist_nestedLoops3_b: 'Don''t forget to use a nested loop to solve
          this puzzle quickly. '
        courseD_artist_nestedLoops3_c: 'Start by using a `repeat` loop to make one
          square.  Next, repeat that square 8 times, jumping 40 pixels in between. '
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: |-
          Попробуй использовать блок "прыжок вперед" что-бы оказаться в верхней части одного квадрата где ты начнешь следующий.

          Если твои квадраты 20 пикселей в высоту и находятся на растоянии в 20 пикселей друг от друга, как далеко тебе нужно прыгнуть?
        courseD_artist_nestedLoops3_b: 'Don''t forget to use a nested loop to solve
          this puzzle quickly. '
        courseD_artist_nestedLoops3_c: 'Start by using a `repeat` loop to make one
          square.  Next, repeat that square 8 times, jumping 40 pixels in between. '
      courseD_artist_nestedLoops4:
        courseD_artist_nestedLoops4_d: To solve this correctly, you'll need to move
          **before** you turn, or else your circles will be off by the tiniest little
          amount!
        courseD_artist_nestedLoops4_a: |-
          To make a circle:

          -   Repeat 360 times
              -   Move forward 1 pixel
              -   Turn left 1 degree
        courseD_artist_nestedLoops4_b: Don't forget to jump forward by 50 pixels between
          circles.
        courseD_artist_nestedLoops4_c: Use a nested loop to draw your circles 4 times.
      courseD_artist_nestedLoops4_2018:
        courseD_artist_nestedLoops4_d: To solve this correctly, you'll need to move
          **before** you turn, or else your circles will be off by the tiniest little
          amount!
        courseD_artist_nestedLoops4_a: |-
          To make a circle:

          -   Repeat 360 times
              -   Move forward 1 pixel
              -   Turn left 1 degree
        courseD_artist_nestedLoops4_b: Don't forget to jump forward by 50 pixels between
          circles.
        courseD_artist_nestedLoops4_c: Use a nested loop to draw your circles 4 times.
      courseD_artist_nestedLoops4_2019:
        courseD_artist_nestedLoops4_d: To solve this correctly, you'll need to move
          **before** you turn, or else your circles will be off by the tiniest little
          amount!
        courseD_artist_nestedLoops4_a: |-
          To make a circle:

          -   Repeat 360 times
              -   Move forward 1 pixel
              -   Turn left 1 degree
        courseD_artist_nestedLoops4_b: Don't forget to jump forward by 50 pixels between
          circles.
        courseD_artist_nestedLoops4_c: Use a nested loop to draw your circles 4 times.
      courseD_artist_nestedLoops5:
        courseD_artist_nestedLoops5_a: |-
          To do this easily:

          -   repeat 4 times
              -   make a circle
              -   jump forward 50 pixels
              -   turn right 90 degrees
        courseD_artist_nestedLoops5_b: To make a circle you'll need to set a repeat
          loop to repeat 360 times. Inside the loop, move forward 1 pixel and turn
          by 1 degree.
      courseD_artist_nestedLoops5_2018:
        courseD_artist_nestedLoops5_a: |-
          To do this easily:

          -   repeat 4 times
              -   make a circle
              -   jump forward 50 pixels
              -   turn right 90 degrees
        courseD_artist_nestedLoops5_b: To make a circle you'll need to set a repeat
          loop to repeat 360 times. Inside the loop, move forward 1 pixel and turn
          by 1 degree.
      courseD_artist_nestedLoops5_2019:
        courseD_artist_nestedLoops5_a: |-
          To do this easily:

          -   repeat 4 times
              -   make a circle
              -   jump forward 50 pixels
              -   turn right 90 degrees
        courseD_artist_nestedLoops5_b: To make a circle you'll need to set a repeat
          loop to repeat 360 times. Inside the loop, move forward 1 pixel and turn
          by 1 degree.
      courseD_artist_nestedLoops7:
        courseD_artist_nestedLoops7_a: You'll need to use nested loops here. First,
          use a loop to draw a square. What will the outer loop do if the inner loop
          draws a square?
        courseD_artist_nestedLoops7_b: |-
          Use a nested loop, where the inner loop is the code for a square.

          -   repeat 6 times
              -   make square
              -   jump forward by **50 pixels**
              -   turn **60 degrees**
      courseD_artist_nestedLoops7_2018:
        courseD_artist_nestedLoops7_a: You'll need to use nested loops here. First,
          use a loop to draw a square. What will the outer loop do if the inner loop
          draws a square?
        courseD_artist_nestedLoops7_b: |-
          Use a nested loop, where the inner loop is the code for a square.

          -   repeat 6 times
              -   make square
              -   jump forward by **50 pixels**
              -   turn **60 degrees**
      courseD_artist_nestedLoops7_2019:
        courseD_artist_nestedLoops7_a: You'll need to use nested loops here. First,
          use a loop to draw a square. What will the outer loop do if the inner loop
          draws a square?
        courseD_artist_nestedLoops7_b: |-
          Use a nested loop, where the inner loop is the code for a square.

          -   repeat 6 times
              -   make square
              -   jump forward by **50 pixels**
              -   turn **60 degrees**
      courseD_artist_nestedLoops8:
        courseD_artist_nestedLoops8_a: To have 8 hexagons in your drawing, you'll
          need to turn **45 degrees** between each of them. Why? Because 360 degrees
          (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.
        courseD_artist_nestedLoops8_b: If you're stuck, start by looking at the last
          puzzle, then change the things that are different.
        courseD_artist_nestedLoops8_c: |-
          Use a nested loop:

          -   Repeat 8 times
              -   draw a hexagon
              -   jump forward 50 pixels
              -   turn right 45 degrees
      courseD_artist_nestedLoops8_2018:
        courseD_artist_nestedLoops8_a: To have 8 hexagons in your drawing, you'll
          need to turn **45 degrees** between each of them. Why? Because 360 degrees
          (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.
        courseD_artist_nestedLoops8_b: If you're stuck, start by looking at the last
          puzzle, then change the things that are different.
        courseD_artist_nestedLoops8_c: |-
          Use a nested loop:

          -   Repeat 8 times
              -   draw a hexagon
              -   jump forward 50 pixels
              -   turn right 45 degrees
      courseD_artist_nestedLoops8_2019:
        courseD_artist_nestedLoops8_a: To have 8 hexagons in your drawing, you'll
          need to turn **45 degrees** between each of them. Why? Because 360 degrees
          (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.
        courseD_artist_nestedLoops8_b: If you're stuck, start by looking at the last
          puzzle, then change the things that are different.
        courseD_artist_nestedLoops8_c: |-
          Use a nested loop:

          -   Repeat 8 times
              -   draw a hexagon
              -   jump forward 50 pixels
              -   turn right 45 degrees
      courseD_artist_nestedLoops9:
        courseD_artist_nestedLoops9_a: Start by using a nested loop like you had before,
          but this time, make it with squares.
        courseD_artist_nestedLoops9_b: Add a second set of nested loops to the end
          of the first set, but this time use triangles.
        courseD_artist_nestedLoops9_c: |-
          Use two nested loops:

          -   Repeat 8 times
              -   draw a square
              -   jump forward 50 pixels
              -   turn right by 45 degrees
          -   Repeat 8 times
              -   draw a triangle
              -   jump forward 50 pixels
              -   turn right by 45 degrees
      courseD_artist_nestedLoops9_2018:
        courseD_artist_nestedLoops9_a: Start by using a nested loop like you had before,
          but this time, make it with squares.
        courseD_artist_nestedLoops9_b: Add a second set of nested loops to the end
          of the first set, but this time use triangles.
        courseD_artist_nestedLoops9_c: |-
          Use two nested loops:

          -   Repeat 8 times
              -   draw a square
              -   jump forward 50 pixels
              -   turn right by 45 degrees
          -   Repeat 8 times
              -   draw a triangle
              -   jump forward 50 pixels
              -   turn right by 45 degrees
      courseD_artist_nestedLoops9_2019:
        courseD_artist_nestedLoops9_a: Start by using a nested loop like you had before,
          but this time, make it with squares.
        courseD_artist_nestedLoops9_b: Add a second set of nested loops to the end
          of the first set, but this time use triangles.
        courseD_artist_nestedLoops9_c: |-
          Use two nested loops:

          -   Repeat 8 times
              -   draw a square
              -   jump forward 50 pixels
              -   turn right by 45 degrees
          -   Repeat 8 times
              -   draw a triangle
              -   jump forward 50 pixels
              -   turn right by 45 degrees
      courseD_artist_nestedLoopsFP:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          This image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>

          This image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>

          This image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn.
      courseD_artist_nestedLoopsFP_2018:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          This image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>

          This image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>

          This image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn.
      courseD_artist_nestedLoopsFP_2019:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          This image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>

          This image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>

          This image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn.
      courseD_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: Start by changing the color to blue,
          then create an octagon with 50 pixel sides and 45 degree left turns.
        courseD_artist_nestedLoops_challenge1_b: Add the code to change the color
          to green, and make a triangle with 50 pixel sides and 120 degree left turns.
        courseD_artist_nestedLoops_challenge1_c: After you've drawn both shapes, you
          will need to jump forward by 50 pixels before you turn right by 90 degrees.
        courseD_artist_nestedLoops_challenge1_d: Put all of your code inside of a
          `repeat 4 times` loop to finish it off.
      courseD_artist_nestedLoops_challenge1_2018:
        courseD_artist_nestedLoops_challenge1_a: Start by changing the color to blue,
          then create an octagon with 50 pixel sides and 45 degree left turns.
        courseD_artist_nestedLoops_challenge1_b: Add the code to change the color
          to green, and make a triangle with 50 pixel sides and 120 degree left turns.
        courseD_artist_nestedLoops_challenge1_c: After you've drawn both shapes, you
          will need to jump forward by 50 pixels before you turn right by 90 degrees.
        courseD_artist_nestedLoops_challenge1_d: Put all of your code inside of a
          `repeat 4 times` loop to finish it off.
      courseD_artist_nestedLoops_challenge1_2019:
        courseD_artist_nestedLoops_challenge1_a: Start by changing the color to blue,
          then create an octagon with 50 pixel sides and 45 degree left turns.
        courseD_artist_nestedLoops_challenge1_b: Add the code to change the color
          to green, and make a triangle with 50 pixel sides and 120 degree left turns.
        courseD_artist_nestedLoops_challenge1_c: After you've drawn both shapes, you
          will need to jump forward by 50 pixels before you turn right by 90 degrees.
        courseD_artist_nestedLoops_challenge1_d: Put all of your code inside of a
          `repeat 4 times` loop to finish it off.
      courseD_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: To draw a regular octagon, the artist
          needs to turn 45 degrees 8 times.
        courseD_artist_nestedLoops_challenge2_b: To draw a square, the artist needs
          to turn 90 degrees 4 times.
      courseD_artist_nestedLoops_challenge2_2018:
        courseD_artist_nestedLoops_challenge2_a: To draw a regular octagon, the artist
          needs to turn 45 degrees 8 times.
        courseD_artist_nestedLoops_challenge2_b: To draw a square, the artist needs
          to turn 90 degrees 4 times.
      courseD_artist_nestedLoops_challenge2_2019:
        courseD_artist_nestedLoops_challenge2_a: To draw a regular octagon, the artist
          needs to turn 45 degrees 8 times.
        courseD_artist_nestedLoops_challenge2_b: To draw a square, the artist needs
          to turn 90 degrees 4 times.
      courseD_artist_project1:
        courseD_artist_project1_a: Используй выпадающее меню на блоках «повернуть»
          для выбора требуемого угла!
        courseD_artist_project1_b: Помни, что команда «двигаться вперед» рисует линию,
          а команда «прыгнуть вперед» – нет.
      courseD_artist_project1_2018:
        courseD_artist_project1_a: Используй выпадающее меню на блоках «повернуть»
          для выбора требуемого угла!
        courseD_artist_project1_b: Помни, что команда «двигаться вперед» рисует линию,
          а команда «прыгнуть вперед» – нет.
      courseD_artist_project1_2019:
        courseD_artist_project1_a: Используй выпадающее меню на блоках «повернуть»
          для выбора требуемого угла!
        courseD_artist_project1_b: Помни, что команда «двигаться вперед» рисует линию,
          а команда «прыгнуть вперед» – нет.
      courseD_artist_project1a:
        courseD_artist_project1a_a: |-
          В этой лестничной ступеньке используется поворот на 76 градусов. Он повторяется 4 раза.

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Эти схемы очень похожи на лестничные ступеньки
          из других головоломок, но используется другой угол.
      courseD_artist_project1a_2018:
        courseD_artist_project1a_a: |-
          В этой лестничной ступеньке используется поворот на 76 градусов. Он повторяется 4 раза.

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Эти схемы очень похожи на лестничные ступеньки
          из других головоломок, но используется другой угол.
      courseD_artist_project1a_2019:
        courseD_artist_project1a_a: |-
          В этой лестничной ступеньке используется поворот на 76 градусов. Он повторяется 4 раза.

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Эти схемы очень похожи на лестничные ступеньки
          из других головоломок, но используется другой угол.
      courseD_artist_project2:
        courseD_artist_project2_a: Помни, что команда «двигаться вперед» рисует линию,
          а команда «прыгнуть вперед» – нет.
        courseD_artist_project2_b: Нарисовав и переместившись в первый раз, можно
          повторить код, добавив цикл снаружи.
      courseD_artist_project2_2018:
        courseD_artist_project2_a: Помни, что команда «двигаться вперед» рисует линию,
          а команда «прыгнуть вперед» – нет.
        courseD_artist_project2_b: Нарисовав и переместившись в первый раз, можно
          повторить код, добавив цикл снаружи.
      courseD_artist_project2_2019:
        courseD_artist_project2_a: Помни, что команда «двигаться вперед» рисует линию,
          а команда «прыгнуть вперед» – нет.
        courseD_artist_project2_b: Нарисовав и переместившись в первый раз, можно
          повторить код, добавив цикл снаружи.
      courseD_artist_project2a:
        courseD_artist_project2a_a: |-
          Этот рисунок был сделан путем вставки цикла из 4 лестниц и блока «повернуть направо на 180 градусов» в блок «повторить 2 раза».

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2018:
        courseD_artist_project2a_a: |-
          Этот рисунок был сделан путем вставки цикла из 4 лестниц и блока «повернуть направо на 180 градусов» в блок «повторить 2 раза».

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2019:
        courseD_artist_project2a_a: |-
          Этот рисунок был сделан путем вставки цикла из 4 лестниц и блока «повернуть направо на 180 градусов» в блок «повторить 2 раза».

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project3:
        courseD_artist_project3_a: Используй выпадающее меню на блоках «повернуть»
          для выбора требуемого угла!
        courseD_artist_project3_b: "Попробуй вложенные циклы!\n\nИспользуй созданный
          тобой код, чтобы нарисовать серию фигур, и вложить его внутрь другого цикла.
          Добавь внизу, перед концом внешнего цикла, блок, который заставит Эльзу
          повернуться кругом.  \n\n-   Попробуй 72 градуса, если повторяешь внешний
          цикл 5 раз\n-   Попробуй 60 градусов, если повторяешь внешний цикл 6 раз"
      courseD_artist_project3_2018:
        courseD_artist_project3_a: Используй выпадающее меню на блоках «повернуть»
          для выбора требуемого угла!
        courseD_artist_project3_b: "Попробуй вложенные циклы!\n\nИспользуй созданный
          тобой код, чтобы нарисовать серию фигур, и вложить его внутрь другого цикла.
          Добавь внизу, перед концом внешнего цикла, блок, который заставит Эльзу
          повернуться кругом.  \n\n-   Попробуй 72 градуса, если повторяешь внешний
          цикл 5 раз\n-   Попробуй 60 градусов, если повторяешь внешний цикл 6 раз"
      courseD_artist_project3_2019:
        courseD_artist_project3_a: Используй выпадающее меню на блоках «повернуть»
          для выбора требуемого угла!
        courseD_artist_project3_b: "Попробуй вложенные циклы!\n\nИспользуй созданный
          тобой код, чтобы нарисовать серию фигур, и вложить его внутрь другого цикла.
          Добавь внизу, перед концом внешнего цикла, блок, который заставит Эльзу
          повернуться кругом.  \n\n-   Попробуй 72 градуса, если повторяешь внешний
          цикл 5 раз\n-   Попробуй 60 градусов, если повторяешь внешний цикл 6 раз"
      courseD_artist_project3a:
        courseD_artist_project3a_a: Можешь выбрать другое количество оборотов фигуры!
          Как насчет 18 оборотов с поворотом между ними на 20 градусов?
      courseD_artist_project3a_2018:
        courseD_artist_project3a_a: Можешь выбрать другое количество оборотов фигуры!
          Как насчет 18 оборотов с поворотом между ними на 20 градусов?
      courseD_artist_project3a_2019:
        courseD_artist_project3a_a: Можешь выбрать другое количество оборотов фигуры!
          Как насчет 18 оборотов с поворотом между ними на 20 градусов?
      courseD_artist_project4:
        courseD_artist_project4_a: |-
          Вот пятиугольная снежинка, совмещенная с треугольной с поворотом в 36 градусов:

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          Вот несколько шестиугольников с квадратами:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Чтобы это попробовать, нарисуй первую снежинку,
          поверни ее, а затем нарисуй вторую снежинку.
      courseD_artist_project4_2018:
        courseD_artist_project4_a: |-
          Вот пятиугольная снежинка, совмещенная с треугольной с поворотом в 36 градусов:

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          Вот несколько шестиугольников с квадратами:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Чтобы это попробовать, нарисуй первую снежинку,
          поверни ее, а затем нарисуй вторую снежинку.
      courseD_artist_project4_2019:
        courseD_artist_project4_a: |-
          Вот пятиугольная снежинка, совмещенная с треугольной с поворотом в 36 градусов:

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          Вот несколько шестиугольников с квадратами:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Чтобы это попробовать, нарисуй первую снежинку,
          поверни ее, а затем нарисуй вторую снежинку.
      courseD_artist_project4a:
        courseD_artist_project4a_a: |-
          Вот две снежинки разной длины, нарисованные одна за другой (с поворотом между ними на 30 градусов.)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2018:
        courseD_artist_project4a_a: |-
          Вот две снежинки разной длины, нарисованные одна за другой (с поворотом между ними на 30 градусов.)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2019:
        courseD_artist_project4a_a: |-
          Вот две снежинки разной длины, нарисованные одна за другой (с поворотом между ними на 30 градусов.)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project5:
        courseD_artist_project4_a: |-
          Cерии из 2 шестиугольников и 4 треугольников:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2018:
        courseD_artist_project4_a: |-
          Cерии из 2 шестиугольников и 4 треугольников:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2019:
        courseD_artist_project4_a: |-
          Cерии из 2 шестиугольников и 4 треугольников:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_ramp11:
        courseD_artist_ramp11a: To draw a side, use the `move forward by 100 pixels`
          block, and change the 100 to a 200.
        courseD_artist_ramp11b: |-
          To draw 4 sides, put a `move forward by 200 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.

          Don't forget to turn afterward!
        courseD_artist_ramp11_c: Remember to put the `turn` block inside of your loop!
      courseD_artist_ramp12:
        courseD_artist_ramp12_a: You can either draw the square first, then the triangle,
          or do it the other way around!
        courseD_artist_ramp12_b: Try splitting the problem into 2 parts, and using
          2 loops.
        courseD_artist_ramp12_c: Чтобы понять, какой угол тебе нужен, открой выпадающее
          меню на блоках ""повернуть""!
      courseD_autorun_binary2_2019:
        courseD_artist_binary2_a: Just click `Run` to see this program in action!
      courseD_autorun_binary3_2019:
        courseD_artist_binary3_a: One of the four binary patterns in the toolbox will
          solve this puzzle!
        courseD_artist_binary3_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you haven't solved
          the puzzle yet.
      courseD_autorun_binary4_2019:
        courseD_artist_binary4_a: Look at the first three squares on the top row.
          Could you repeat these three to get the whole pattern?
        courseD_artist_binary4_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you don't think you've
          solved the puzzle yet.
      courseD_autorun_binary5_2019:
        courseD_artist_binary5_a: Try running the code first to see what you have
          to work with.
        courseD_artist_binary5_b: You only need to switch two rows to make a smile.
        courseD_artist_binary5_c: If you are having trouble figuring this puzzle out,
          try writing the binary lines down on a piece of paper and looking for a
          pattern.
      courseD_autorun_binary6_2019:
        courseD_artist_binary6_a: Start at the top left. How far do you have to read
          before the pattern starts to repeat?
        courseD_artist_binary6_b: You can build your binary string a bit at a time,
          and keep testing!
      courseD_autorun_binary7_2019:
        courseD_artist_binary7_a: Start at the top left. How far do you have to read
          before the pattern starts to repeat?
        courseD_artist_binary7_b: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you don't think you've
          solved the puzzle yet.
      courseD_autorun_binary8_2019:
        courseD_artist_binary8_a: The spiral can be confusing sometimes. Isolate each
          horizontal line in your mind as you create this design.
        courseD_artist_binary8_b: Try running the code first to see what you have
          to work with.
        courseD_artist_binary8_c: Don't be afraid to make a mistake! Try writing binary
          and running the code to see what will happen, even if you haven't solved
          the puzzle yet.
      courseD_bee_conditionals1_predict1:
        courseD_bee_conditionals1_a: Тебе потребуется использовать блок "если", чтобы
          проверять, скрывается ли под облачком цветок, прежде, чем пытаться собрать
          нектар.
      courseD_bee_conditionals1_predict1_2018:
        courseD_bee_conditionals1_a: Тебе потребуется использовать блок "если", чтобы
          проверять, скрывается ли под облачком цветок, прежде, чем пытаться собрать
          нектар.
      courseD_bee_conditionals1_predict1_2019:
        courseD_bee_conditionals1_a: Тебе потребуется использовать блок "если", чтобы
          проверять, скрывается ли под облачком цветок, прежде, чем пытаться собрать
          нектар.
      courseD_bee_conditionals1_predict1_copy:
        courseD_bee_conditionals1_a: Тебе потребуется использовать блок "если", чтобы
          проверять, скрывается ли под облачком цветок, прежде, чем пытаться собрать
          нектар.
      courseD_bee_conditionals2:
        courseD_bee_conditionals2_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals2_a: Иногда под облачком будет цветок, иногда нет.  Чтобы
          твой код работал в обоих случаях, обязательно используй оператор «если».
        courseD_bee_conditionals2_b: Чтобы выйти из лабиринта, можно использовать
          цикл "повторить" или блок "пока путь впереди".
        courseD_bee_conditionals2_c: Проверять на наличие сот не нужно, под облачком
          может быть только цветок или пустое место.
        courseD_bee_conditionals2_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals2_2018:
        courseD_bee_conditionals2_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals2_a: Иногда под облачком будет цветок, иногда нет.  Чтобы
          твой код работал в обоих случаях, обязательно используй оператор «если».
        courseD_bee_conditionals2_b: Чтобы выйти из лабиринта, можно использовать
          цикл "повторить" или блок "пока путь впереди".
        courseD_bee_conditionals2_c: Проверять на наличие сот не нужно, под облачком
          может быть только цветок или пустое место.
        courseD_bee_conditionals2_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals2_2019:
        courseD_bee_conditionals2_a: Иногда под облачком будет цветок, иногда нет.  Чтобы
          твой код работал в обоих случаях, обязательно используй оператор «если».
        courseD_bee_conditionals2_c: Проверять на наличие сот не нужно, под облачком
          может быть только цветок или пустое место.
      courseD_bee_conditionals2_copy:
        courseD_bee_conditionals2_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals2_a: Иногда под облачком будет цветок, иногда нет.  Чтобы
          твой код работал в обоих случаях, обязательно используй оператор «если».
        courseD_bee_conditionals2_b: Чтобы выйти из лабиринта, можно использовать
          цикл "повторить" или блок "пока путь впереди".
        courseD_bee_conditionals2_c: Проверять на наличие сот не нужно, под облачком
          может быть только цветок или пустое место.
        courseD_bee_conditionals2_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals3:
        courseD_bee_conditionals3_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals3_a: Обязательно используй оператор «если» для проверки
          каждого места и выяснения, что там – цветок или ничего.
        courseD_bee_conditionals3_b: Заставить пчелу двигаться вперед можно с помощью
          цикла "повторить" или цикла "пока". Используй из них любой, какой захочешь!
        courseD_bee_conditionals3_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
        courseD_bee_conditionals3_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals3_2018:
        courseD_bee_conditionals3_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals3_a: Обязательно используй оператор «если» для проверки
          каждого места и выяснения, что там – цветок или ничего.
        courseD_bee_conditionals3_b: Заставить пчелу двигаться вперед можно с помощью
          цикла "повторить" или цикла "пока". Используй из них любой, какой захочешь!
        courseD_bee_conditionals3_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
        courseD_bee_conditionals3_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals3_2019:
        courseD_bee_conditionals3_a: Обязательно используй оператор «если» для проверки
          каждого места и выяснения, что там – цветок или ничего.
        courseD_bee_conditionals3_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
      courseD_bee_conditionals3_copy:
        courseD_bee_conditionals3_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals3_a: Обязательно используй оператор «если» для проверки
          каждого места и выяснения, что там – цветок или ничего.
        courseD_bee_conditionals3_b: Заставить пчелу двигаться вперед можно с помощью
          цикла "повторить" или цикла "пока". Используй из них любой, какой захочешь!
        courseD_bee_conditionals3_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
        courseD_bee_conditionals3_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals4:
        courseD_bee_conditionals4_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals4_a: Ты можешь по-прежнему исходить из того, что облачко
          имеется над каждым местом, хотя ты и можешь видеть весь путь.
        courseD_bee_conditionals4_b: Используй оператор «если» внутри своего цикла
          для проверки каждого места на наличие нектара.
        courseD_bee_conditionals4_c: Используя блок <xml><block type="maze_untilBlocked"/></xml>,
          ты должен перемещаться вперед и проверять на наличие цветка. Если цветок
          есть, что обязана сделать пчела?
        courseD_bee_conditionals4_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals4_2018:
        courseD_bee_conditionals4_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals4_a: Ты можешь по-прежнему исходить из того, что облачко
          имеется над каждым местом, хотя ты и можешь видеть весь путь.
        courseD_bee_conditionals4_b: Используй оператор «если» внутри своего цикла
          для проверки каждого места на наличие нектара.
        courseD_bee_conditionals4_c: Используя блок <xml><block type="maze_untilBlocked"/></xml>,
          ты должен перемещаться вперед и проверять на наличие цветка. Если цветок
          есть, что обязана сделать пчела?
        courseD_bee_conditionals4_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals4_2019:
        courseD_bee_conditionals4_a: Ты можешь по-прежнему исходить из того, что облачко
          имеется над каждым местом, хотя ты и можешь видеть весь путь.
        courseD_bee_conditionals4_b: Используй оператор «если» внутри своего цикла
          для проверки каждого места на наличие нектара.
      courseD_bee_conditionals4_copy:
        courseD_bee_conditionals4_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals4_a: Ты можешь по-прежнему исходить из того, что облачко
          имеется над каждым местом, хотя ты и можешь видеть весь путь.
        courseD_bee_conditionals4_b: Используй оператор «если» внутри своего цикла
          для проверки каждого места на наличие нектара.
        courseD_bee_conditionals4_c: Используя блок <xml><block type="maze_untilBlocked"/></xml>,
          ты должен перемещаться вперед и проверять на наличие цветка. Если цветок
          есть, что обязана сделать пчела?
        courseD_bee_conditionals4_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals5:
        courseD_bee_conditionals5_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals5_a: Представь себе, что каждая сторона прямоугольной
          дорожки сама является дорожкой. Создай вложенный цикл с блоком "повторить"
          на внешней дорожке и цикл "пока путь впереди" – на внутренней. По скольким
          дорожкам придется перемещаться пчеле, если ей потребуется переместиться
          по каждой стороне с цветком?
        courseD_bee_conditionals5_c: У прямоугольника 3 стороны с цветами, поэтому
          код должен повториться 3 раза. При каждом повторе пчела должна будет двигаться
          по дорожке, "пока путь впереди".  Для продолжения движения по дорожке пчеле
          придется "двигаться вперед". Находясь на дорожке, пчела должна будет проверять
          на наличие цветка. "Если цветок есть", пчела должна будет "собрать нектар".
        courseD_bee_conditionals5_b: Внутри блока "пока путь впереди" тебе потребуется
          двигаться вперед и проверять на наличие цветка. Как проверить, нет ли под
          облачком цветка? Что нужно сделать, если под облачком скрывается цветок?
        courseD_bee_conditionals5_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals5_2018:
        courseD_bee_conditionals5_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals5_a: Think of every side of the rectangular path as
          a path by itself. Set up a nested loop with a `repeat` block on the outside
          and a `while path ahead` loop on the inside. How many paths does the bee
          need to buzz down if the bee needs to buzz down every side with a flower?
        courseD_bee_conditionals5_c: There are 3 sides of the rectangle with flowers,
          so the code needs to `repeat 3 times`. In every repeat, the bee will need
          to continue along the path, `while path ahead`. To continue down the path,
          the bee will need to `move forward`. While on the path, the bee needs to
          check for a flower. `if there is a flower`, the bee should `get nectar`.
        courseD_bee_conditionals5_b: Inside the `while path ahead` block you will
          need to move forward and check for a flower. How do you check if there is
          a flower? What do you do if there is a flower?
        courseD_bee_conditionals5_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals5_2019:
        courseD_bee_conditionals5_a: Если ты используешь блок "если у цветка", то
          сможешь решить эту задачу с помощью вложенного цикла. Напиши программу для
          левой и нижней дорожек, а затем повтори все дважды!
        courseD_bee_conditionals5_c: Для продолжения движения по дорожке пчеле потребуется
          "двигаться вперед". В процессе движения пчела должна будет проверять на
          наличие цветка. "Если цветок есть", пчела должна будет "собрать нектар".
      courseD_bee_conditionals5_copy:
        courseD_bee_conditionals5_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals5_a: Представь себе, что каждая сторона прямоугольной
          дорожки сама является дорожкой. Создай вложенный цикл с блоком "повторить"
          на внешней дорожке и цикл "пока путь впереди" – на внутренней. По скольким
          дорожкам придется перемещаться пчеле, если ей потребуется переместиться
          по каждой стороне с цветком?
        courseD_bee_conditionals5_c: У прямоугольника 3 стороны с цветами, поэтому
          код должен повториться 3 раза. При каждом повторе пчела должна будет двигаться
          по дорожке, "пока путь впереди".  Для продолжения движения по дорожке пчеле
          придется "двигаться вперед". Находясь на дорожке, пчела должна будет проверять
          на наличие цветка. "Если цветок есть", пчела должна будет "собрать нектар".
        courseD_bee_conditionals5_b: Внутри блока "пока путь впереди" тебе потребуется
          двигаться вперед и проверять на наличие цветка. Как проверить, нет ли под
          облачком цветка? Что нужно сделать, если под облачком скрывается цветок?
        courseD_bee_conditionals5_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals6:
        courseD_bee_conditionals6_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals6_a: Обязательно используй условный оператор для проверки
          наличия соты под каждым облачком.
        courseD_bee_conditionals6_b: В этом случае тебе не потребуется проверять,
          имеются ли цветы под облаками.
        courseD_bee_conditionals6_c: Можно ли сделать твой код короче с помощью какого-нибудь
          цикла?
        courseD_bee_conditionals6_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals6_2018:
        courseD_bee_conditionals6_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals6_a: Обязательно используй условный оператор для проверки
          наличия соты под каждым облачком.
        courseD_bee_conditionals6_b: В этом случае тебе не потребуется проверять,
          имеются ли цветы под облаками.
        courseD_bee_conditionals6_c: Можно ли сделать твой код короче с помощью какого-нибудь
          цикла?
        courseD_bee_conditionals6_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals6_2019:
        courseD_bee_conditionals6_a: Обязательно используй условный оператор для проверки
          наличия соты под каждым облачком.
        courseD_bee_conditionals6_b: В этом случае тебе не потребуется проверять,
          имеются ли цветы под облаками.
        courseD_bee_conditionals6_c: Можно ли сделать твой код короче с помощью какого-нибудь
          цикла?
      courseD_bee_conditionals7:
        courseD_bee_conditionals7_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals7_a: \*Помни:\*\* эта головоломка меняется всякий
          раз, как она выполняется. Тебе потребуется использовать условный блок ("если/или
          же") для решения этой задачи.
        courseD_bee_conditionals7_b: Если под облачком нет цветка, то под ним должна
          быть сота, поэтому о случае пустого места тебе думать не нужно.
        courseD_bee_conditionals7_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals7_2018:
        courseD_bee_conditionals7_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals7_a: \*Помни:\*\* эта головоломка меняется всякий
          раз, как она выполняется. Тебе потребуется использовать условный блок ("если/или
          же") для решения этой задачи.
        courseD_bee_conditionals7_b: Если под облачком нет цветка, то под ним должна
          быть сота, поэтому о случае пустого места тебе думать не нужно.
        courseD_bee_conditionals7_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals7_2019:
        courseD_bee_conditionals7_a: \*Помни:\*\* эта головоломка меняется всякий
          раз, как она выполняется. Тебе потребуется использовать условный блок ("если/или
          же") для решения этой задачи.
        courseD_bee_conditionals7_b: Если под облачком нет цветка, то под ним должна
          быть сота, поэтому о случае пустого места тебе думать не нужно.
      courseD_bee_conditionals7_predict2:
        courseD_bee_conditionals7_a: \*Помни:\*\* эта головоломка меняется всякий
          раз, как она выполняется. Тебе потребуется использовать условный блок ("если/или
          же") для решения этой задачи.
      courseD_bee_conditionals7_predict2_2018:
        courseD_bee_conditionals7_a: \*Помни:\*\* эта головоломка меняется всякий
          раз, как она выполняется. Тебе потребуется использовать условный блок ("если/или
          же") для решения этой задачи.
      courseD_bee_conditionals7_predict2_2019:
        courseD_bee_conditionals7_a: \*Помни:\*\* эта головоломка меняется всякий
          раз, как она выполняется. Тебе потребуется использовать условный блок ("если/или
          же") для решения этой задачи.
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals8_a: "\\*\\* Помни: \\*\\* эта головоломка меняется
          при каждом запуске.  \n\nДля выполнения этого задания тебе потребуется блок
          условной инструкции («если» или «если/или же»)."
        courseD_bee_conditionals8_b: |-
          Эта головоломка сложна, потому что невозможно проверить пустые квадраты, нектар _и_ мед с помощью всего одной условной инструкции.

          Проверь на наличие нектара и меда только в конце пути.
        courseD_bee_conditionals8_c: Как тебе гарантированно дойти до конца каждой
          дорожки, какой бы длинной она ни была?
        courseD_bee_conditionals8_d: Необязательно начинать с облачка, которое находится
          прямо перед тобой. Попробуй начать с облачка в нижнем правому углу квадрата.
          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_hintVid1: Нуждаешься в помощи, чтобы начать работать?
          Посмотри видео!
        courseD_bee_conditionals8_a: "\\*\\* Помни: \\*\\* эта головоломка меняется
          при каждом запуске.  \n\nДля выполнения этого задания тебе потребуется блок
          условной инструкции («если» или «если/или же»)."
        courseD_bee_conditionals8_b: |-
          Эта головоломка сложна, потому что невозможно проверить пустые квадраты, нектар _и_ мед с помощью всего одной условной инструкции.

          Проверь на наличие нектара и меда только в конце пути.
        courseD_bee_conditionals8_c: Как тебе гарантированно дойти до конца каждой
          дорожки, какой бы длинной она ни была?
        courseD_bee_conditionals8_d: Необязательно начинать с облачка, которое находится
          прямо перед тобой. Попробуй начать с облачка в нижнем правому углу квадрата.
          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: Посмотри видео с советами по решению головоломки.
      courseD_bee_conditionals8_2019:
        courseD_bee_conditionals8_a: "\\*\\* Помни: \\*\\* эта головоломка меняется
          при каждом запуске.  \n\nДля выполнения этого задания тебе потребуется блок
          условной инструкции («если» или «если/или же»)."
        courseD_bee_conditionals8_b: |-
          Эта головоломка сложна, потому что невозможно проверить пустые квадраты, нектар _и_ мед с помощью всего одной условной инструкции.

          Проверь на наличие нектара и меда только в конце пути.
      courseD_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: Can you find a path that reaches every
          flower and honeycomb without hitting any trees? The best path is a spiral.
        courseD_bee_conditionals_challenge1_b: In this puzzle, each space could have
          a flower, a honey comb, or nothing.  That means you can repeat your `if/else`
          conditional at each square.
      courseD_bee_conditionals_challenge1_2018:
        courseD_bee_conditionals_challenge1_a: Can you find a path that reaches every
          flower and honeycomb without hitting any trees? The best path is a spiral.
        courseD_bee_conditionals_challenge1_b: In this puzzle, each space could have
          a flower, a honey comb, or nothing.  That means you can repeat your `if/else`
          conditional at each square.
      courseD_bee_conditionals_challenge1_2019:
        courseD_bee_conditionals_challenge1_a: Can you find a path that reaches every
          flower and honeycomb without hitting any trees? The best path is a spiral.
        courseD_bee_conditionals_challenge1_b: In this puzzle, each space could have
          a flower, a honey comb, or nothing.  That means you can repeat your `if/else`
          conditional at each square.
      courseD_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_conditionals_challenge2_2018:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_conditionals_challenge2_2019:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_a: Почему первая половина этой программы
          работает? Подумай, почему пчеле приходится двигаться назад. Сколько нектара
          собирает пчела всякий раз, как переползает через цветок?
        courseD_bee_debugging_challenge1_b: Заставь пчелу использовать ту же схему
          на пути назад. Сколько меда ей необходимо сделать всякий раз, как она переползает
          через соту?
        courseD_bee_debugging_challenge1_c: |-
          Когда пчела доберется до нижнего ряда, заставь ее повторить следующие команды:

          -   повторить 2 раза:
              -   двигаться вперед
              -   сделать 3 единицы меда
          -   двигаться назад
      courseD_bee_debugging_challenge1a:
        courseD_bee_debugging_challenge1_a: Почему первая половина этой программы
          работает? Подумай, почему пчеле приходится двигаться назад. Сколько нектара
          собирает пчела всякий раз, как переползает через цветок?
        courseD_bee_debugging_challenge1_b: To solve this puzzle, have the bee follow
          the same pattern to make honey that it does when collecting nectar.
        courseD_bee_debugging_challenge1_c: |-
          After the bee makes it to the bottom row, have it repeat these commands:

          <xml><block type="controls_repeat">
                              <title name="TIMES">2</title>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_honey"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveBackward</title>
                                </block>
                              </next>
                            </block></xml>
      courseD_bee_nestedLoops1:
        courseD_bee_nestedLoops1_a: Не работает?  Попробуй использовать кнопку «Шаг»,
          чтобы увидеть, что происходит на каждом этапе.
        courseD_bee_nestedLoops1_b: Попробуй написать сначала код для одной стороны
          квадрата. Сможешь ли ты использовать цикл, чтобы собрать весь нектар?
        courseD_bee_nestedLoops1_c: Не забудь использовать блок «добыть нектар», когда
          окажешься на квадрате с цветком.
      courseD_bee_nestedLoops1_2018:
        courseD_bee_nestedLoops1_a: Не работает?  Попробуй использовать кнопку «Шаг»,
          чтобы увидеть, что происходит на каждом этапе.
        courseD_bee_nestedLoops1_b: Попробуй написать сначала код для одной стороны
          квадрата. Сможешь ли ты использовать цикл, чтобы собрать весь нектар?
        courseD_bee_nestedLoops1_c: Не забудь использовать блок «добыть нектар», когда
          окажешься на квадрате с цветком.
      courseD_bee_nestedLoops1_2019:
        courseD_bee_nestedLoops1_a: Не работает?  Попробуй использовать кнопку «Шаг»,
          чтобы увидеть, что происходит на каждом этапе.
        courseD_bee_nestedLoops1_b: Попробуй написать сначала код для одной стороны
          квадрата. Сможешь ли ты использовать цикл, чтобы собрать весь нектар?
        courseD_bee_nestedLoops1_c: Не забудь использовать блок «добыть нектар», когда
          окажешься на квадрате с цветком.
      courseD_bee_nestedLoops1a:
        courseD_bee_nestedLoops1_a: Не работает?  Попробуй использовать кнопку «Шаг»,
          чтобы увидеть, что происходит на каждом этапе.
        courseD_bee_nestedLoops1_c: Не забудь использовать блок «добыть нектар», когда
          окажешься на квадрате с цветком.
      courseD_bee_nestedLoops1a_2018:
        courseD_bee_nestedLoops1_a: Не работает?  Попробуй использовать кнопку «Шаг»,
          чтобы увидеть, что происходит на каждом этапе.
        courseD_bee_nestedLoops1_c: Не забудь использовать блок «добыть нектар», когда
          окажешься на квадрате с цветком.
      courseD_bee_nestedLoops1a_2019:
        courseD_bee_nestedLoops1_a: Не работает?  Попробуй использовать кнопку «Шаг»,
          чтобы увидеть, что происходит на каждом этапе.
        courseD_bee_nestedLoops1_c: Не забудь использовать блок «добыть нектар», когда
          окажешься на квадрате с цветком.
      courseD_bee_nestedLoops2:
        courseD_bee_nestedLoops2_a: Для решения этой головоломки тебе потребуется
          вложить один цикл «повторить» в другой цикл «повторить».
        courseD_bee_nestedLoops2_b: Не можешь сообразить, куда поместить циклы? Попробуй
          записать код на бумаге шаг за шагом и найти схему.
        courseD_bee_nestedLoops2_c: Помни, что в цикл можно вставить не один, а несколько
          блоков.
      courseD_bee_nestedLoops2_2018:
        courseD_bee_nestedLoops2_a: Для решения этой головоломки тебе потребуется
          вложить один цикл «повторить» в другой цикл «повторить».
        courseD_bee_nestedLoops2_b: Не можешь сообразить, куда поместить циклы? Попробуй
          записать код на бумаге шаг за шагом и найти схему.
        courseD_bee_nestedLoops2_c: Помни, что в цикл можно вставить не один, а несколько
          блоков.
      courseD_bee_nestedLoops2_2019:
        courseD_bee_nestedLoops2_a: Для решения этой головоломки тебе потребуется
          вложить один цикл «повторить» в другой цикл «повторить».
        courseD_bee_nestedLoops2_b: Не можешь сообразить, куда поместить циклы? Попробуй
          записать код на бумаге шаг за шагом и найти схему.
        courseD_bee_nestedLoops2_c: Помни, что в цикл можно вставить не один, а несколько
          блоков.
      courseD_bee_nestedLoops7:
        courseD_bee_nestedLoops7_a: Тебе потребуется повторить «собрать нектар» внутри
          другого цикла «повторить», внутри которого имеется и блок «двигаться вперед».
        courseD_bee_nestedLoops7_b: Для решения этой головоломки тебе потребуется
          использовать все три имеющихся блока «повторить».
        courseD_bee_nestedLoops7_c: |-
          Вложи три своих блока следующим образом:

          -   повторить 4
              -   повторить 3
                  -   повторить 12
                      -   собрать нектар
                  -   двигаться вперед
              -   повернуть направо
      courseD_bee_nestedLoops7_2018:
        courseD_bee_nestedLoops7_a: Тебе потребуется повторить «собрать нектар» внутри
          другого цикла «повторить», внутри которого имеется и блок «двигаться вперед».
        courseD_bee_nestedLoops7_b: Для решения этой головоломки тебе потребуется
          использовать все три имеющихся блока «повторить».
        courseD_bee_nestedLoops7_c: |-
          Вложи три своих блока следующим образом:

          -   повторить 4
              -   повторить 3
                  -   повторить 12
                      -   собрать нектар
                  -   двигаться вперед
              -   повернуть направо
      courseD_bee_nestedLoops7_2019:
        courseD_bee_nestedLoops7_a: Тебе потребуется повторить «собрать нектар» внутри
          другого цикла «повторить», внутри которого имеется и блок «двигаться вперед».
        courseD_bee_nestedLoops7_b: Для решения этой головоломки тебе потребуется
          использовать все три имеющихся блока «повторить».
        courseD_bee_nestedLoops7_c: |-
          Вложи три своих блока следующим образом:

          -   повторить 4
              -   повторить 3
                  -   повторить 12
                      -   собрать нектар
                  -   двигаться вперед
              -   повернуть направо
      courseD_bounce_events10s_2018:
        courseD_bounce_events10s_a: |-
          You should have both of these events in your code:

          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">swish</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">whistle</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block></xml>
      courseD_bounce_events10s_2019:
        courseD_bounce_events10s_a: |-
          You should have both of these events in your code:

          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">swish</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">whistle</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block></xml>
      courseD_bounce_events11s_2018:
        courseD_bounce_events11s_a: You will need to throw a ball when the game starts,
          when you hit the basket, and when the hand misses the ball.
      courseD_bounce_events11s_2019:
        courseD_bounce_events11s_a: You will need to throw a ball when the game starts,
          when you hit the basket, and when the hand misses the ball.
      courseD_bounce_events12s_2018:
        courseD_bounce_events12s_a: You can speed up the basketball or the hand by
          attaching those blocks to the `when run` event.
        courseD_bounce_events12s_b: Try making each shot worth 2 points and changing
          the team logo to the one from your home town!
      courseD_bounce_events12s_2019:
        courseD_bounce_events12s_a: You can speed up the basketball or the hand by
          attaching those blocks to the `when run` event.
        courseD_bounce_events12s_b: Try making each shot worth 2 points and changing
          the team logo to the one from your home town!
      courseD_bounce_events1s_2018:
        courseD_bounce_events1s_a: |-
          You need to add the `move left` block to the `when left arrow` event to make this game work:

           <xml> <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>

             </xml>
        courseD_bounce_events1s_b: Don't forget to press "Run" and get the hand to
          the basket in order to solve this puzzle.
      courseD_bounce_events1s_2019:
        courseD_bounce_events1s_a: |-
          You need to add the `move left` block to the `when left arrow` event to make this game work:

           <xml> <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>

             </xml>
        courseD_bounce_events1s_b: Don't forget to press "Run" and get the hand to
          the basket in order to solve this puzzle.
      courseD_bounce_events2s_2018:
        courseD_bounce_events2s_a: |-
          You will need to have two sets of `move` events coded for this to work:

          <xml>
            <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>
            <block type="bounce_whenRight" deletable="false" x="180" y="20">
              <next>
                <block type="bounce_moveRight"/>
              </next>
            </block>
          </xml>
      courseD_bounce_events2s_2019:
        courseD_bounce_events2s_a: |-
          You will need to have two sets of `move` events coded for this to work:

          <xml>
            <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>
            <block type="bounce_whenRight" deletable="false" x="180" y="20">
              <next>
                <block type="bounce_moveRight"/>
              </next>
            </block>
          </xml>
      courseD_bounce_events5s_2018:
        courseD_bounce_events5s_a: You do not need to move the hand to solve this
          puzzle.
        courseD_bounce_events5s_b: |-
          Make sure you have added this code to your workspace:

          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events5s_2019:
        courseD_bounce_events5s_a: You do not need to move the hand to solve this
          puzzle.
        courseD_bounce_events5s_b: |-
          Make sure you have added this code to your workspace:

          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events6s_2018:
        courseD_bounce_events6s_a: |-
          Do you have an event that looks like this?

          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: If you've written the code correctly, you don't
          have to move the hand to win.
      courseD_bounce_events6s_2019:
        courseD_bounce_events6s_a: |-
          Do you have an event that looks like this?

          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: If you've written the code correctly, you don't
          have to move the hand to win.
      courseD_bounce_events7s_2018:
        courseD_bounce_events7s_a: You can add sounds in more places if you feel like
          it!
      courseD_bounce_events7s_2019:
        courseD_bounce_events7s_a: You can add sounds in more places if you feel like
          it!
      courseD_collector_debugging1:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging1_b: Do you see any patterns that could be made
          more simple using a `repeat` loop?
        courseD_collector_debugging1_c: Remember to use the `collect` block to pick
          up treasure once you have moved to it.
      courseD_collector_debugging10_predict1:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but
          they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle,
          then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging1a_2018:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging1_c: Remember to use the `collect` block to pick
          up treasure once you have moved to it.
      courseD_collector_debugging1a_2019:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging1_c: Remember to use the `collect` block to pick
          up treasure once you have moved to it.
      courseD_collector_debugging2:
        courseD_collector_debugging2_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging2_b: Do you see any patterns that could be made
          more simple using a `repeat` loop?
        courseD_collector_debugging2_c: Try collecting treasure for one side of this
          pattern. Can you repeat this to collect treasure on the other two sides?
      courseD_collector_debugging2a_2018:
        courseD_collector_debugging2a_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging2a_c: |-
          What happens?

          What is supposed to happen?

          What does that tell you?
      courseD_collector_debugging2a_2019:
        courseD_collector_debugging2a_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging2a_c: |-
          What happens?

          What is supposed to happen?

          What does that tell you?
      courseD_collector_debugging3:
        courseD_collector_debugging3_a: Is there any place where Laurel does something
          that doesn't make sense? What happens when you change those blocks?
        courseD_collector_debugging3_b: Try simplifying the code using nested loops.
      courseD_collector_debugging3a_2018:
        courseD_collector_debugging3_a: Is there any place where Laurel does something
          that doesn't make sense? What happens when you change those blocks?
      courseD_collector_debugging3a_2019:
        courseD_collector_debugging3_a: Is there any place where Laurel does something
          that doesn't make sense? What happens when you change those blocks?
      courseD_collector_debugging4:
        courseD_collector_debugging4_a: "Try using the debugging process a couple
          of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem
          is fixed, what goes wrong?"
        courseD_collector_debugging4_b: "If you're having a hard time figuring out
          how to make the stair step pattern, try tracing it with your finger and
          saying the commands out loud. \n\nDon't forget to point out the direction
          of the turns!"
        courseD_collector_debugging4_c: This loop is only missing one block. Can you
          figure out which one?
      courseD_collector_debugging4a_2018:
        courseD_collector_debugging4_a: "Try using the debugging process a couple
          of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem
          is fixed, what goes wrong?"
        courseD_collector_debugging4_b: "If you're having a hard time figuring out
          how to make the stair step pattern, try tracing it with your finger and
          saying the commands out loud. \n\nDon't forget to point out the direction
          of the turns!"
      courseD_collector_debugging4a_2019:
        courseD_collector_debugging4_a: "Try using the debugging process a couple
          of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem
          is fixed, what goes wrong?"
        courseD_collector_debugging4_b: "If you're having a hard time figuring out
          how to make the stair step pattern, try tracing it with your finger and
          saying the commands out loud. \n\nDon't forget to point out the direction
          of the turns!"
      courseD_collector_debugging5:
        courseD_collector_debugging5_a: |-
          Start by looking at just the first loop.

          What does it do?

          What is it supposed to do?

          What does that tell you?
        courseD_collector_debugging5_b: Once you have the first loop the way you want
          it, what is left over in your code?
      courseD_collector_debugging5a_2018:
        courseD_collector_debugging5a_a: |-
          What does it do?

          What is it supposed to do?

          What does that tell you?
        courseD_collector_debugging5a_b: Once you have the first line of treasure
          collected, what is left over in your code?
      courseD_collector_debugging5a_2019:
        courseD_collector_debugging5a_a: |-
          What does it do?

          What is it supposed to do?

          What does that tell you?
        courseD_collector_debugging5a_b: Once you have the first line of treasure
          collected, what is left over in your code?
      courseD_collector_debugging6:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_collector_debugging6_b: It looks like all of the right steps are here,
          you just need more of them.  How can you repeat the `collect` action multiple
          times?
      courseD_collector_debugging6a_2018:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_collector_debugging6_b: It looks like all of the blocks you need are
          in the workspace. Try clicking "start over" if things get too confusing.
      courseD_collector_debugging6a_2019:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_collector_debugging6_b: It looks like all of the blocks you need are
          in the workspace. Try clicking "start over" if things get too confusing.
      courseD_collector_debugging8:
        courseD_collector_debugging8_a: Do you see a pattern that you can simplify
          with a loop?
        courseD_collector_debugging8_b: Try using a nested loop to make this code
          shorter.
      courseD_collector_debugging9:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but
          they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle,
          then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_a: "Начни с того, чтобы собрать всего
          **две** жемчужины из каждой из первых **двух** груд.\n\n![](<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png>)\nИспользуй эти блоки.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Затем собери оставшиеся жемчужины
          в этом ряду.\n\n![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png>)\nДобавь эти блоки к своей программе.\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Наконец, собери остальные сокровища.
          Добавь эти блоки к своей программе.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">turnRight</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Вот полное решение этой головоломки.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">4</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="controls_repeat">
                          <title name="TIMES">2</title>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveForward</title>
                              <next>
                                <block type="controls_repeat">
                                  <title name="TIMES">2</title>
                                  <statement name="DO">
                                    <block type="collector_collect"/>
                                  </statement>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: Не забудь о возможности «повторить»
          одну команду или целую схему. Можно «повторить» даже блок «повторить»!
        courseD_bee_nested_loops_challenge2_b: Чтобы получить все 4 жемчужины, используй
          сначала цикл, чтобы уйти из центра. Поверни налево или направо, а затем
          используй вложенный цикл для перехода от первой груды сокровищ ко второй.
          Если повторить вложенный цикл достаточное количество раз, собиратель обойдет
          _всю_ пещеру!
        courseD_bee_nested_loops_challenge2_c: В самой короткой программе, собирающей
          все сокровища, используются всего один блок «собрать» и два поворота.
        courseD_bee_nested_loops_challenge2_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018:
        courseD_bee_nested_loops_challenge2_a: Не забудь о возможности «повторить»
          одну команду или целую схему. Можно «повторить» даже блок «повторить»!
        courseD_bee_nested_loops_challenge2_b: Чтобы получить все 4 жемчужины, используй
          сначала цикл, чтобы уйти из центра. Поверни налево или направо, а затем
          используй вложенный цикл для перехода от первой груды сокровищ ко второй.
          Если повторить вложенный цикл достаточное количество раз, собиратель обойдет
          _всю_ пещеру!
        courseD_bee_nested_loops_challenge2_c: В самой короткой программе, собирающей
          все сокровища, используются всего один блок «собрать» и два поворота.
        courseD_bee_nested_loops_challenge2_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2019:
        courseD_bee_nested_loops_challenge2_a: Не забудь о возможности «повторить»
          одну команду или целую схему. Можно «повторить» даже блок «повторить»!
        courseD_bee_nested_loops_challenge2_b: Чтобы получить все 4 жемчужины, используй
          сначала цикл, чтобы уйти из центра. Поверни налево или направо, а затем
          используй вложенный цикл для перехода от первой груды сокровищ ко второй.
          Если повторить вложенный цикл достаточное количество раз, собиратель обойдет
          _всю_ пещеру!
        courseD_bee_nested_loops_challenge2_c: В самой короткой программе, собирающей
          все сокровища, используются всего один блок «собрать» и два поворота.
        courseD_bee_nested_loops_challenge2_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2a:
        courseD_collector_nested_loops_challenge2a_a: Не забудь о возможности «повторить»
          одну команду или целую схему. Можно «повторить» даже блок «повторить»!
        courseD_collector_nested_loops_challenge2a_b: Can you figure out how to get
          all four gems without using any more blocks than it takes to get two?
      courseD_collector_ramp10:
        courseD_artist_ramp10_a: |-
          Instead of using four `move forward` blocks for each side, try putting one `move forward` block inside of a `repeat` loop, like this:

          <xml><block type="controls_repeat">
                                                      <title name="TIMES">4</title>
                                                      <statement name="DO">
                                                        <block type="maze_moveForward"/>
                                                      </statement>
                                                    </block></xml>
        courseD_artist_ramp10_b: Don't forget to collect one piece of treasure, then
          turn to start on a new side of the square!
        courseD_artist_ramp10_c: If you want to simplify your code, you can put one
          loop inside of another! This is called a **nested loop**.
      courseD_collector_ramp8:
        courseD_collector_ramp8_a: When you get to a square with treasure, use `collect`
          to pick it up. For this puzzle, you'll need to collect treasure more than
          once!
        courseD_collector_ramp8_b: If you want to simplify your code more, you can
          actually put one `repeat` loop inside of another! This is called a **nested
          loop**.
      courseD_collector_ramp9:
        courseD_collector_ramp9_a: Start by moving Laurel to the first treasure, then
          collecting it. Can you repeat this sequence to get the second pile?
        courseD_collector_ramp9_b: If you want to simplify your code, you can put
          one repeat loop inside of another! This is called a **nested loop**.
      courseD_farmer_condLoops1:
        courseD_farmer_condLoops1_a: Тебе потребуется проверить кукурузу 5 раз, используя
          цикл повтора.
        courseD_farmer_condLoops1_b: Обязательно используй блок «если у кукурузы»,
          или ты можешь попытаться собрать то, чего нет!
      courseD_farmer_condLoops1_2018:
        courseD_farmer_condLoops1_a: Тебе потребуется проверить кукурузу 5 раз, используя
          цикл повтора.
        courseD_farmer_condLoops1_b: Обязательно используй блок «если у кукурузы»,
          или ты можешь попытаться собрать то, чего нет!
      courseD_farmer_condLoops1_2019:
        courseD_farmer_condLoops1_a: Тебе потребуется проверить кукурузу 5 раз, используя
          цикл повтора.
        courseD_farmer_condLoops1_b: Обязательно используй блок «если у кукурузы»,
          или ты можешь попытаться собрать то, чего нет!
      courseD_farmer_condLoops2:
        courseD_farmer_condLoops2_a: 'Лучший способ это сделать – вложить операторы
          «если», поместив один в другой.  '
        courseD_farmer_condLoops2_b: Для этой головоломки у тебя должны быть один
          оператор «если/или же» и один оператор «если».
        courseD_farmer_condLoops2_c: |-
          Твой оператор «если» мог бы выглядеть примерно так:

          -   если у кукурузы
              -   собрать кукурузу
          -   или же
              -   если у салата
                  -   собрать салат

          Если там ничего нет, ты не соберешь ничего!
      courseD_farmer_condLoops2_2018:
        courseD_farmer_condLoops2_a: 'Лучший способ это сделать – вложить операторы
          «если», поместив один в другой.  '
        courseD_farmer_condLoops2_b: Для этой головоломки у тебя должны быть один
          оператор «если/или же» и один оператор «если».
        courseD_farmer_condLoops2_c: |-
          Твой оператор «если» мог бы выглядеть примерно так:

          -   если у кукурузы
              -   собрать кукурузу
          -   или же
              -   если у салата
                  -   собрать салат

          Если там ничего нет, ты не соберешь ничего!
      courseD_farmer_condLoops2_2019:
        courseD_farmer_condLoops2_a: 'Лучший способ это сделать – вложить операторы
          «если», поместив один в другой.  '
        courseD_farmer_condLoops2_b: Для этой головоломки у тебя должны быть один
          оператор «если/или же» и один оператор «если».
        courseD_farmer_condLoops2_c: |-
          Твой оператор «если» мог бы выглядеть примерно так:

          -   если у кукурузы
              -   собрать кукурузу
          -   или же
              -   если у салата
                  -   собрать салат

          Если там ничего нет, ты не соберешь ничего!
      courseD_farmer_condLoops3:
        courseD_farmer_condLoops3_a: |-
          Чтобы убрать урожай со всех растений, попробуй вложить три оператора «если» друг в друга.

          Это означает, что тебе следует вложить один оператор «если» в другой, а затем вложить третий оператор «если» во второй.
        courseD_farmer_condLoops3_b: Для этой головоломки у тебя должны быть два оператора
          «если/или же» и один оператор «если».
      courseD_farmer_condLoops3_2018:
        courseD_farmer_condLoops3_a: |-
          Чтобы убрать урожай со всех растений, попробуй вложить три оператора «если» друг в друга.

          Это означает, что тебе следует вложить один оператор «если» в другой, а затем вложить третий оператор «если» во второй.
        courseD_farmer_condLoops3_b: Для этой головоломки у тебя должны быть два оператора
          «если/или же» и один оператор «если».
      courseD_farmer_condLoops3_2019:
        courseD_farmer_condLoops3_a: |-
          Чтобы убрать урожай со всех растений, попробуй вложить три оператора «если» друг в друга.

          Это означает, что тебе следует вложить один оператор «если» в другой, а затем вложить третий оператор «если» во второй.
        courseD_farmer_condLoops3_b: Для этой головоломки у тебя должны быть два оператора
          «если/или же» и один оператор «если».
      courseD_farmer_condLoops4:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Никто не знает, сколько голов салат вырастет из каждого ростка.

          Используй цикл «пока имеется салат», чтобы продолжать уборку, пока не будут собраны все головы салата.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: Цикл «пока» решит и проблему
          пустых мест! Поскольку на этих местах салата нет, он собираться не будет,
          а будет выполнена следующая команда программы.
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: Для передвижения по всему
          полю можно использовать либо цикл «пока путь впереди», либо цикл «повторить».
      courseD_farmer_condLoops4_2018:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Никто не знает, сколько голов салат вырастет из каждого ростка.

          Используй цикл «пока имеется салат», чтобы продолжать уборку, пока не будут собраны все головы салата.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: Цикл «пока» решит и проблему
          пустых мест! Поскольку на этих местах салата нет, он собираться не будет,
          а будет выполнена следующая команда программы.
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: Для передвижения по всему
          полю можно использовать либо цикл «пока путь впереди», либо цикл «повторить».
      courseD_farmer_condLoops4_2019:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Никто не знает, сколько голов салат вырастет из каждого ростка.

          Используй цикл «пока имеется салат», чтобы продолжать уборку, пока не будут собраны все головы салата.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: Цикл «пока» решит и проблему
          пустых мест! Поскольку на этих местах салата нет, он собираться не будет,
          а будет выполнена следующая команда программы.
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: Для передвижения по всему
          полю можно использовать либо цикл «пока путь впереди», либо цикл «повторить».
      courseD_farmer_condLoops5:
        courseD_farmer_condLoops5_a: 'Появился новый цикл: «повторять до тыквы». Сможешь
          догадаться, как использовать его в этой головоломке?'
        courseD_farmer_condLoops5_b: На каждом месте может расти не одно, а несколько
          растений кукурузы или салата. Используй цикл «пока», чтобы собрать их все!
      courseD_farmer_condLoops5_2018:
        courseD_farmer_condLoops5_a: 'Появился новый цикл: «повторять до тыквы». Сможешь
          догадаться, как использовать его в этой головоломке?'
        courseD_farmer_condLoops5_b: На каждом месте может расти не одно, а несколько
          растений кукурузы или салата. Используй цикл «пока», чтобы собрать их все!
      courseD_farmer_condLoops5_2019:
        courseD_farmer_condLoops5_a: 'There is a new loop: `repeat until there are
          pumpkins`. Can you see how to use it in this puzzle?'
        courseD_farmer_condLoops5_b: На каждом месте может расти не одно, а несколько
          растений кукурузы или салата. Используй цикл «пока», чтобы собрать их все!
      courseD_farmer_condLoops6:
        courseD_farmer_condLoops6_a: Используй цикл «пока есть кукуруза», чтобы гарантированно
          собрать по дороге всю кукурузу. Если кукурузы для сбора нет, этот блок ничего
          не сделает.
        courseD_farmer_condLoops6_b: Не забудь проверить, имеется ли путь впереди,
          прежде чем сделать следующий шаг!
      courseD_farmer_condLoops6_2018:
        courseD_farmer_condLoops6_a: Используй цикл "пока путь впереди" или блок "если
          путь впереди/или же" для перемещения фермерши вниз по каждому фрагменту
          спирали.
        courseD_farmer_condLoops6_b: В ходе почти всей уборки урожая тебе придется
          проверять только на наличие кукурузы. Просто собери одну тыкву в самом конце
          своей программы.
      courseD_farmer_condLoops6_2019:
        courseD_farmer_condLoops6_a: Используй цикл "пока путь впереди" или блок "если
          путь впереди/или же" для перемещения фермерши вниз по каждому фрагменту
          спирали.
        courseD_farmer_condLoops6_b: В ходе почти всей уборки урожая тебе придется
          проверять только на наличие кукурузы. Просто собери одну тыкву в самом конце
          своей программы.
      courseD_farmer_condLoops7:
        courseD_farmer_condLoops7_a: |-
          Обрати внимание, что проще всего добраться до всех растений, двигаясь по спирали.

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Попробуй использовать «когда путь впереди», чтобы
          сборщица постоянно делала нужное количество шагов.
      courseD_farmer_condLoops7_2018:
        courseD_farmer_condLoops7_a: |-
          Обрати внимание, что проще всего добраться до всех растений, двигаясь по спирали.

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Попробуй использовать «когда путь впереди», чтобы
          сборщица постоянно делала нужное количество шагов.
      courseD_farmer_condLoops7_2019:
        courseD_farmer_condLoops7_a: |-
          Обрати внимание, что проще всего добраться до всех растений, двигаясь по спирали.

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Try using `while path ahead` to keep the harvester
          moving the right number of steps.
      courseD_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: В этом задании может очень пригодится
          кнопка «Шаг».
        courseD_farmer_condLoops_challenge1_b: В обычной ситуации ты просто «соберешь
          тыкву», когда окажешься около тыквы. Что еще тебе потребуется сделать, когда
          ты окажешься около тыквы?
      courseD_farmer_condLoops_challenge1_2018:
        courseD_farmer_condLoops_challenge1_a: В этом задании может очень пригодится
          кнопка «Шаг».
        courseD_farmer_condLoops_challenge1_b: В обычной ситуации ты просто «соберешь
          тыкву», когда окажешься около тыквы. Что еще тебе потребуется сделать, когда
          ты окажешься около тыквы?
      courseD_farmer_condLoops_challenge1_2019:
        courseD_farmer_condLoops_challenge1_a: В этом задании может очень пригодится
          кнопка «Шаг».
        courseD_farmer_condLoops_challenge1_b: В обычной ситуации ты просто «соберешь
          тыкву», когда окажешься около тыквы. Что еще тебе потребуется сделать, когда
          ты окажешься около тыквы?
      courseD_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: Количество овощей каждого вида в каждом
          месте может измениться. Тебе может пригодиться цикл «пока»!
      courseD_farmer_condLoops_challenge2_2018:
        courseD_farmer_condLoops_challenge2_a: Количество овощей каждого вида в каждом
          месте может измениться. Тебе может пригодиться цикл «пока»!
      courseD_farmer_condLoops_challenge2_2019:
        courseD_farmer_condLoops_challenge2_a: Количество овощей каждого вида в каждом
          месте может измениться. Тебе может пригодиться цикл «пока»!
      courseD_farmer_while1:
        courseD_farmer_while1_a: Чтобы подойди к этой куче, тебе потребуется переместиться
          вперед четыре раза. Сможешь ли ты использовать для этого цикл «повторить»?
        courseD_farmer_while1_b: Используй блок «удалить 1», когда будешь стоять на
          куче грязи, для ее удаления.
      courseD_farmer_while1_2018:
        courseD_farmer_while1_a: Чтобы подойди к этой куче, тебе потребуется переместиться
          вперед четыре раза. Сможешь ли ты использовать для этого цикл «повторить»?
        courseD_farmer_while1_b: Используй блок «удалить 1», когда будешь стоять на
          куче грязи, для ее удаления.
      courseD_farmer_while1_2019:
        courseD_farmer_while1_a: Чтобы подойди к этой куче, тебе потребуется переместиться
          вперед четыре раза. Сможешь ли ты использовать для этого цикл «повторить»?
        courseD_farmer_while1_b: Используй блок «удалить 1», когда будешь стоять на
          куче грязи, для ее удаления.
      courseD_farmer_while2:
        courseD_farmer_while2_a: Чтобы подойти к дыре, тебе потребуется переместиться
          только раз.
        courseD_farmer_while2_b: Тебе потребуется использовать блок «заполнить 1»
          шесть раз. Сможешь ли ты использовать цикл, чтобы упростить свой код?
      courseD_farmer_while2_2018:
        courseD_farmer_while2_a: Чтобы подойти к дыре, тебе потребуется переместиться
          только раз.
        courseD_farmer_while2_b: Тебе потребуется использовать блок «заполнить 1»
          шесть раз. Сможешь ли ты использовать цикл, чтобы упростить свой код?
      courseD_farmer_while2_2019:
        courseD_farmer_while2_a: Чтобы подойти к дыре, тебе потребуется переместиться
          только раз.
        courseD_farmer_while2_b: Тебе потребуется использовать блок «заполнить 1»
          шесть раз. Сможешь ли ты использовать цикл, чтобы упростить свой код?
      courseD_farmer_while3:
        courseD_farmer_while3_a: Здесь ты сможешь упростить код, воспользовавшись
          циклом.
        courseD_farmer_while3_b: Блоки «повернуть» для перемещения к этой куче тебе
          не потребуются.
      courseD_farmer_while3_2018:
        courseD_farmer_while3_a: Здесь ты сможешь упростить код, воспользовавшись
          циклом.
        courseD_farmer_while3_b: Блоки «повернуть» для перемещения к этой куче тебе
          не потребуются.
      courseD_farmer_while3_2019:
        courseD_farmer_while3_a: Здесь ты сможешь упростить код, воспользовавшись
          циклом.
        courseD_farmer_while3_b: Блоки «повернуть» для перемещения к этой куче тебе
          не потребуются.
      courseD_farmer_while4:
        courseD_farmer_conditionals4_a: Используй цикл «пока» вместо цикла «повторить»,
          чтобы продолжать копать, пока куча не исчезнет.
        courseD_farmer_conditionals4_b: Эта головоломка очень похожа не более раннюю,
          разница только в требуемом цикле.
      courseD_farmer_while4_2018:
        courseD_farmer_conditionals4_a: Используй цикл «пока» вместо цикла «повторить»,
          чтобы продолжать копать, пока куча не исчезнет.
        courseD_farmer_conditionals4_b: Эта головоломка очень похожа не более раннюю,
          разница только в требуемом цикле.
      courseD_farmer_while4_2019:
        courseD_farmer_conditionals4_a: Используй цикл «пока» вместо цикла «повторить»,
          чтобы продолжать копать, пока куча не исчезнет.
        courseD_farmer_conditionals4_b: Эта головоломка очень похожа не более раннюю,
          разница только в требуемом цикле.
      courseD_farmer_while5:
        courseD_farmer_conditionals5a_a: Попробуй вставить цикл «пока» в цикл «повторить».
        courseD_farmer_conditionals5a_b: Фермерше потребуется переместиться вперед
          в общей сложности пять раз, чтобы добраться до конца ряда. Что еще ей потребуется
          сделать?
        courseD_farmer_conditionals5a_c: Переместись вперед 5 раз. Удаляй всякий раз
          при перемещении вперед кучу грязи, используя блок «пока имеется куча».
      courseD_farmer_while5_2018:
        courseD_farmer_conditionals5a_a: Попробуй вставить цикл «пока» в цикл «повторить».
        courseD_farmer_conditionals5a_b: Фермерше потребуется переместиться вперед
          в общей сложности пять раз, чтобы добраться до конца ряда. Что еще ей потребуется
          сделать?
        courseD_farmer_conditionals5a_c: Переместись вперед 5 раз. Удаляй всякий раз
          при перемещении вперед кучу грязи, используя блок «пока имеется куча».
      courseD_farmer_while5_2019:
        courseD_farmer_conditionals5a_a: Попробуй вставить цикл «пока» в цикл «повторить».
        courseD_farmer_conditionals5a_b: Фермерше потребуется переместиться вперед
          в общей сложности пять раз, чтобы добраться до конца ряда. Что еще ей потребуется
          сделать?
        courseD_farmer_conditionals5a_c: Переместись вперед 5 раз. Удаляй всякий раз
          при перемещении вперед кучу грязи, используя блок «пока имеется куча».
      courseD_farmer_while6:
        courseD_farmer_conditionals6_a: Обязательно используй цикл «пока», чтобы сообразить,
          сколько раз заполнять каждую дыру.
        courseD_farmer_conditionals6_b: Обрати внимание, что фермерше потребуется
          двигаться вперед и вниз несколько раз по схеме лестничных ступенек.
        courseD_farmer_conditionals6_c: |-
          В схеме лестничных ступенек используются следующие блоки:

          -   двигаться вперед
          -   заполнить дыру
          -   повернуть направо
          -   двигаться вперед
          -   заполнить дыру
          -   повернуть налево

          Сколько раз тебе потребуется использовать эту схему лестничных ступенек?

          Обязательно используй для заполнения дыры блок «пока имеется куча».
      courseD_farmer_while6_2018:
        courseD_farmer_conditionals6_a: Обязательно используй цикл «пока», чтобы сообразить,
          сколько раз заполнять каждую дыру.
        courseD_farmer_conditionals6_b: Обрати внимание, что фермерше потребуется
          двигаться вперед и вниз несколько раз по схеме лестничных ступенек.
        courseD_farmer_conditionals6_c: |-
          В схеме лестничных ступенек используются следующие блоки:

          -   двигаться вперед
          -   заполнить дыру
          -   повернуть направо
          -   двигаться вперед
          -   заполнить дыру
          -   повернуть налево

          Сколько раз тебе потребуется использовать эту схему лестничных ступенек?

          Обязательно используй для заполнения дыры блок «пока имеется куча».
      courseD_farmer_while6_2019:
        courseD_farmer_conditionals6_a: Обязательно используй цикл «пока», чтобы сообразить,
          сколько раз заполнять каждую дыру.
        courseD_farmer_conditionals6_b: Обрати внимание, что фермерше потребуется
          двигаться вперед и вниз несколько раз по схеме лестничных ступенек.
        courseD_farmer_conditionals6_c: |-
          В схеме лестничных ступенек используются следующие блоки:

          -   двигаться вперед
          -   заполнить дыру
          -   повернуть направо
          -   двигаться вперед
          -   заполнить дыру
          -   повернуть налево

          Сколько раз тебе потребуется использовать эту схему лестничных ступенек?

          Обязательно используй для заполнения дыры блок «пока имеется куча».
      courseD_farmer_while7:
        courseD_farmer_conditionals8_a: Блок «пока путь впереди» позволяет продолжать
          двигаться, даже если не знаешь, сколько квадратов на данном пути.
        courseD_farmer_conditionals8_b: Вставка блока «пока путь впереди» в цикл повтора
          поможет в решении этой головоломки.
        courseD_farmer_conditionals8_c: Что тебе потребуется сделать в конце каждого
          пути?
      courseD_farmer_while7_2018:
        courseD_farmer_conditionals8_a: Блок «пока путь впереди» позволяет продолжать
          двигаться, даже если не знаешь, сколько квадратов на данном пути.
        courseD_farmer_conditionals8_b: Вставка блока «пока путь впереди» в цикл повтора
          поможет в решении этой головоломки.
        courseD_farmer_conditionals8_c: Что тебе потребуется сделать в конце каждого
          пути?
      courseD_farmer_while7_2019:
        courseD_farmer_conditionals8_a: Блок «пока путь впереди» позволяет продолжать
          двигаться, даже если не знаешь, сколько квадратов на данном пути.
        courseD_farmer_conditionals8_b: Вставка блока «пока путь впереди» в цикл повтора
          поможет в решении этой головоломки.
        courseD_farmer_conditionals8_c: Что тебе потребуется сделать в конце каждого
          пути?
      courseD_farmer_while8:
        courseD_farmer_conditionals8_a: Тебе потребуется использовать более чем один
          цикл «пока».
        courseD_farmer_conditionals8_b: Каждая дыра находится в конце пути, поэтому
          используй «пока путь впереди» прежде, чем использовать «пока имеется дыра».
        courseD_farmer_conditionals8_c: Обрати внимание, что тебе потребуется повторить
          код «пока путь впереди», «пока имеется дыра» шесть раз.
      courseD_farmer_while8_2018:
        courseD_farmer_conditionals8_a: Тебе потребуется использовать более чем один
          цикл «пока».
        courseD_farmer_conditionals8_b: Каждая дыра находится в конце пути, поэтому
          используй «пока путь впереди» прежде, чем использовать «пока имеется дыра».
        courseD_farmer_conditionals8_c: Обрати внимание, что тебе потребуется повторить
          код «пока путь впереди», «пока имеется дыра» шесть раз.
      courseD_farmer_while8_2019:
        courseD_farmer_conditionals8_a: Тебе потребуется использовать более чем один
          цикл «пока».
        courseD_farmer_conditionals8_b: Каждая дыра находится в конце пути, поэтому
          используй «пока путь впереди» прежде, чем использовать «пока имеется дыра».
        courseD_farmer_conditionals8_c: Обрати внимание, что тебе потребуется повторить
          код «пока путь впереди», «пока имеется дыра» шесть раз.
      courseD_farmer_while_challenge1:
        courseD_farmer_while_challenge1_a: Каждая дыра или куча находится на один
          шаг **назад** от конца пути.
        courseD_farmer_while_challenge1_b: С помощью цикла «пока» можно приказать
          фермерше удалить кучу или заполнить дыру, даже если ее там нет. Это означает
          возможность запрограммировать ее на удаление любой грязи или заполнение
          любой дыры, где бы она ни находилась.
        courseD_farmer_conditionals8_c: Эту головоломку можно решить и без циклов
          «повторить». Для этого тебе потребуется использовать четыре цикла «пока».
      courseD_farmer_while_challenge1_2018:
        courseD_farmer_while_challenge1_a: Каждая дыра или куча находится на один
          шаг **назад** от конца пути.
        courseD_farmer_while_challenge1_b: С помощью цикла «пока» можно приказать
          фермерше удалить кучу или заполнить дыру, даже если ее там нет. Это означает
          возможность запрограммировать ее на удаление любой грязи или заполнение
          любой дыры, где бы она ни находилась.
        courseD_farmer_conditionals8_c: Эту головоломку можно решить и без циклов
          «повторить». Для этого тебе потребуется использовать четыре цикла «пока».
      courseD_farmer_while_challenge1_2019:
        courseD_farmer_while_challenge1_a: Каждая дыра или куча находится на один
          шаг **назад** от конца пути.
        courseD_farmer_while_challenge1_b: С помощью цикла «пока» можно приказать
          фермерше удалить кучу или заполнить дыру, даже если ее там нет. Это означает
          возможность запрограммировать ее на удаление любой грязи или заполнение
          любой дыры, где бы она ни находилась.
        courseD_farmer_conditionals8_c: Эту головоломку можно решить и без циклов
          «повторить». Для этого тебе потребуется использовать четыре цикла «пока».
      courseD_farmer_while_challenge2:
        courseD_farmer_while_challenge1_a: Каждая дыра или куча находится на один
          шаг **назад** от конца пути.
        courseD_farmer_while_challenge1_b: С помощью цикла «пока» можно приказать
          фермерше удалить кучу или заполнить дыру, даже если ее там нет. Это означает
          возможность запрограммировать ее на удаление любой грязи или заполнение
          любой дыры, оставаясь на том же месте.
        courseD_farmer_conditionals8_c: Эту головоломку можно решить и без циклов
          «повторить». Для этого тебе потребуется использовать четыре цикла «пока».
      courseD_harvester_nested_loops_challenge1:
        courseD_harvester_nested_loops_challenge1_a: 'Попробуй пойти этим путем, чтобы
          добраться до всей кукурузы! '
        courseD_harvester_nested_loops_challenge1_b: Чтобы собрать больше одного початка
          кукурузы, тебе придется использовать команду «собрать кукурузу» несколько
          раз.
        courseD_harvester_nested_loops_challenge1_c: Для решения этой головоломки
          тебе потребуется вставить небольшой цикл в основной цикл!
      courseD_harvester_nested_loops_challenge1_2018:
        courseD_harvester_nested_loops_challenge1_a: 'Попробуй пойти этим путем, чтобы
          добраться до всей кукурузы! '
        courseD_harvester_nested_loops_challenge1_b: Чтобы собрать больше одного початка
          кукурузы, тебе придется использовать команду «собрать кукурузу» несколько
          раз.
        courseD_harvester_nested_loops_challenge1_c: Для решения этой головоломки
          тебе потребуется вставить небольшой цикл в основной цикл!
      courseD_harvester_nested_loops_challenge1_2019:
        courseD_harvester_nested_loops_challenge1_a: 'Попробуй пойти этим путем, чтобы
          добраться до всей кукурузы! '
        courseD_harvester_nested_loops_challenge1_b: Чтобы собрать больше одного початка
          кукурузы, тебе придется использовать команду «собрать кукурузу» несколько
          раз.
        courseD_harvester_nested_loops_challenge1_c: Для решения этой головоломки
          тебе потребуется вставить небольшой цикл в основной цикл!
      courseD_iceage_loops1:
        courseD_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseD_iceage_loops1_b: |-
          You will have to use this block:

          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops10:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the
          water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down
          on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseD_iceage_loops10_2019:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the
          water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down
          on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseD_iceage_loops1_2019:
        courseD_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseD_iceage_loops1_b: |-
          You will have to use this block:

          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops2:
        courseD_iceage_loops2_a: Break this puzzle into two pieces, one before the
          corner, and one after the corner.
        courseD_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseD_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseD_iceage_loops2_2019:
        courseD_iceage_loops2_a: Break this puzzle into two pieces, one before the
          corner, and one after the corner.
        courseD_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseD_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseD_iceage_loops3:
        courseB_iceage_loops3_a: |-
          Use this new block! <xml><block type="controls_repeat_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>
        courseB_iceage_loops3_b: To repeat code, drag out a `repeat` loop, then put
          the block you want repeated inside.
      courseD_iceage_loops3_2019:
        courseB_iceage_loops3_a: |-
          Use this new block!

           <xml><block type="controls_repeat_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>
        courseB_iceage_loops3_b: To repeat code, drag out a `repeat` loop, then put
          the block you want repeated inside.
      courseD_iceage_loops4:
        courseD_iceage_loops4_a: Don't be afraid to run your code and see what happens!
        courseD_iceage_loops4_b: Try writing down the steps Scrat would take to get
          to the acorn.  Do you see a pattern?
        courseD_iceage_loops4_c: This is the path Scrat should take.
      courseD_iceage_loops4_2019:
        courseD_iceage_loops4_a: Don't be afraid to run your code and see what happens!
        courseD_iceage_loops4_b: Try writing down the steps Scrat would take to get
          to the acorn.  Do you see a pattern?
        courseD_iceage_loops4_c: This is the path Scrat should take.
      courseD_iceage_loops6:
        courseD_iceage_loops6_a: Your final code will have **three** `move forward`
          blocks.
        courseD_iceage_loops6_b: You only need to add **one** more loop!
        courseD_iceage_loops6_c: Your final path should look like this.
      courseD_iceage_loops6_2019:
        courseD_iceage_loops6_a: Your final code will have **three** `move forward`
          blocks.
        courseD_iceage_loops6_b: You only need to add **one** more loop!
        courseD_iceage_loops6_c: Your final path should look like this.
      courseD_iceage_loops7:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece
          of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the
          acorn.
      courseD_iceage_loops7_2019:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece
          of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the
          acorn.
      courseD_iceage_loops8:
        courseD_iceage_loops8_a: Are the `turn` blocks right? What else can you change?
        courseD_iceage_loops8_b: The first loop should repeat **3** times, the second
          should repeat **5** times, the third loop should repeat **4** times, and
          the last loop should repeat **4** times.
        courseD_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseD_iceage_loops8_2019:
        courseD_iceage_loops8_a: Are the `turn` blocks right? What else can you change?
        courseD_iceage_loops8_b: The first loop should repeat **3** times, the second
          should repeat **5** times, the third loop should repeat **4** times, and
          the last loop should repeat **4** times.
        courseD_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseD_iceage_loops9:
        courseD_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller
          pieces. Don't be afraid to run your puzzle as you code!
        courseD_iceage_loops9_b: Your final code should have **4** loops.
        courseD_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseD_iceage_loops9_2019:
        courseD_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller
          pieces. Don't be afraid to run your puzzle as you code!
        courseD_iceage_loops9_b: Your final code should have **4** loops.
        courseD_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseD_maze_intro4_2019:
        courseC_maze_programming4_a: You can turn right or left from Red's point of
          view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one
          way, then move again and turn the opposite way. Move forward one more time
          to reach the acorn.
      courseD_maze_intro5a_2019:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Remember that turns are from Red's perspective.
        courseC_maze_programming5_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_nestedLoops3:
        courseD_maze_nestedLoops3_a: Для решения этой головоломки тебе потребуется
          «вложить» один цикл «повторить» в другой цикл «повторить».
        courseD_maze_nestedLoops3_b: Не можешь сообразить, куда поместить циклы? Попробуй
          записать код шаг за шагом и найти схему.
        courseD_maze_nestedLoops3_c: Попробуй написать сначала код для прямого отрезка
          пути и поворота. Сможешь ли ты повторить его, чтобы добраться до подсолнуха?
      courseD_maze_nestedLoops3_2018:
        courseD_maze_nestedLoops3_a: Для решения этой головоломки тебе потребуется
          «вложить» один цикл «повторить» в другой цикл «повторить».
        courseD_maze_nestedLoops3_b: Не можешь сообразить, куда поместить циклы? Попробуй
          записать код шаг за шагом и найти схему.
        courseD_maze_nestedLoops3_c: Попробуй написать сначала код для прямого отрезка
          пути и поворота. Сможешь ли ты повторить его, чтобы добраться до подсолнуха?
      courseD_maze_nestedLoops3_2019:
        courseD_maze_nestedLoops3_a: Для решения этой головоломки тебе потребуется
          «вложить» один цикл «повторить» в другой цикл «повторить».
        courseD_maze_nestedLoops3_b: Не можешь сообразить, куда поместить циклы? Попробуй
          записать код шаг за шагом и найти схему.
        courseD_maze_nestedLoops3_c: Попробуй написать сначала код для прямого отрезка
          пути и поворота. Сможешь ли ты повторить его, чтобы добраться до подсолнуха?
      courseD_maze_nestedLoops4:
        courseD_maze_nestedLoops4_a: |-
          Попробуй использовать этот путь через лабиринт.

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Если схему цикла трудно найти, попробуй сначала
          кодировать все и посмотри, какой код повторяется снова и снова, прежде чем
          вставить свои циклы.
        courseD_maze_nestedLoops4_c: Попробуй использовать один цикл «повторить» внутри
          другого, чтобы уменьшить длину требуемого кода.
      courseD_maze_nestedLoops4_2018:
        courseD_maze_nestedLoops4_a: |-
          Попробуй использовать этот путь через лабиринт.

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Если схему цикла трудно найти, попробуй сначала
          кодировать все и посмотри, какой код повторяется снова и снова, прежде чем
          вставить свои циклы.
        courseD_maze_nestedLoops4_c: Попробуй использовать один цикл «повторить» внутри
          другого, чтобы уменьшить длину требуемого кода.
      courseD_maze_nestedLoops4_2019:
        courseD_maze_nestedLoops4_a: |-
          Попробуй использовать этот путь через лабиринт.

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Если схему цикла трудно найти, попробуй сначала
          кодировать все и посмотри, какой код повторяется снова и снова, прежде чем
          вставить свои циклы.
        courseD_maze_nestedLoops4_c: Попробуй использовать один цикл «повторить» внутри
          другого, чтобы уменьшить длину требуемого кода.
      courseD_maze_nestedLoops5:
        courseD_maze_nestedLoops5_a: Найди в этом лабиринте схему ступеньки лестницы,
          чтобы понять, где можно использовать вложенный цикл.
        courseD_maze_nestedLoops5_b: Не можешь сообразить, куда поместить циклы? Попробуй
          записать код шаг за шагом и найти схему.
      courseD_maze_nestedLoops5_2018:
        courseD_maze_nestedLoops5_a: Найди в этом лабиринте схему ступеньки лестницы,
          чтобы понять, где можно использовать вложенный цикл.
        courseD_maze_nestedLoops5_b: Не можешь сообразить, куда поместить циклы? Попробуй
          записать код шаг за шагом и найти схему.
      courseD_maze_nestedLoops5_2019:
        courseD_maze_nestedLoops5_a: Найди в этом лабиринте схему ступеньки лестницы,
          чтобы понять, где можно использовать вложенный цикл.
        courseD_maze_nestedLoops5_b: Не можешь сообразить, куда поместить циклы? Попробуй
          записать код шаг за шагом и найти схему.
      courseD_maze_nestedLoops6:
        courseD_maze_nestedLoops6_a: Если застрянешь, попробуй записать код на бумаге
          сначала без циклов и найди схему.
        courseD_maze_nestedLoops6_b: Вставка циклов «повторить» помогает уменьшить
          количество используемых блоков.
        courseD_maze_nestedLoops6_c: Для решения этой головоломки потребуются два
          набора вложенных циклов «повторить».
      courseD_maze_nestedLoops6_2018:
        courseD_maze_nestedLoops6_a: Если застрянешь, попробуй записать код на бумаге
          сначала без циклов и найди схему.
        courseD_maze_nestedLoops6_b: Вставка циклов «повторить» помогает уменьшить
          количество используемых блоков.
        courseD_maze_nestedLoops6_c: Для решения этой головоломки потребуются два
          набора вложенных циклов «повторить».
      courseD_maze_nestedLoops6_2019:
        courseD_maze_nestedLoops6_a: Если застрянешь, попробуй записать код на бумаге
          сначала без циклов и найди схему.
        courseD_maze_nestedLoops6_b: Вставка циклов «повторить» помогает уменьшить
          количество используемых блоков.
        courseD_maze_nestedLoops6_c: Для решения этой головоломки потребуются два
          набора вложенных циклов «повторить».
      courseD_maze_ramp1:
        courseC_maze_programming1_a: Если птичка не добирается до свинки, убедись,
          что все три блока соединены хорошо друг с другом, а затем нажми на ""Выполнить""
          еще раз.
        courseC_maze_programming1_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp1_2018:
        courseC_maze_programming1_a: Если птичка не добирается до свинки, убедись,
          что все три блока соединены хорошо друг с другом, а затем нажми на ""Выполнить""
          еще раз.
        courseC_maze_programming1_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp1_2019:
        courseC_maze_programming1_a: Если птичка не добирается до свинки, убедись,
          что все три блока соединены хорошо друг с другом, а затем нажми на ""Выполнить""
          еще раз.
        courseC_maze_programming1_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp2:
        courseC_maze_programming2_a: Чтобы использовать блок «двигаться вперед», перетащи
          его из набора инструментов в рабочую область и присоедини к блоку «при запуске».
        courseC_maze_programming2_b: Убедись, что все три блока соединены друг с другом,
          а также с блоком ""при запуске"".
      courseD_maze_ramp2_2018:
        courseC_maze_programming2_a: Чтобы использовать блок «двигаться вперед», перетащи
          его из набора инструментов в рабочую область и присоедини к блоку «при запуске».
        courseC_maze_programming2_b: Убедись, что все три блока соединены друг с другом,
          а также с блоком ""при запуске"".
      courseD_maze_ramp2_2019:
        courseC_maze_programming2_a: Чтобы использовать блок «двигаться вперед», перетащи
          его из набора инструментов в рабочую область и присоедини к блоку «при запуске».
        courseC_maze_programming2_b: Убедись, что все три блока соединены друг с другом,
          а также с блоком ""при запуске"".
      courseD_maze_ramp3:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nДля
          удаления блока из середины кода перетащи все находящиеся под ним блоки направо
          и оставь на какое-то время в рабочей области.  \n\nНажми на блок, который
          хочешь удалить, и перетащи его обратно в набор инструментов.\n\nНаконец,
          помести другие свои блоки обратно туда, где они должны были быть."
      courseD_maze_ramp3_2018:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nДля
          удаления блока из середины кода перетащи все находящиеся под ним блоки направо
          и оставь на какое-то время в рабочей области.  \n\nНажми на блок, который
          хочешь удалить, и перетащи его обратно в набор инструментов.\n\nНаконец,
          помести другие свои блоки обратно туда, где они должны были быть."
      courseD_maze_ramp3_2019:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nДля
          удаления блока из середины кода перетащи все находящиеся под ним блоки направо
          и оставь на какое-то время в рабочей области.  \n\nНажми на блок, который
          хочешь удалить, и перетащи его обратно в набор инструментов.\n\nНаконец,
          помести другие свои блоки обратно туда, где они должны были быть."
      courseD_maze_ramp4:
        courseC_maze_programming4_a: Поворачивать можно направо или налево с точки
          зрения птички. Если ты стоишь правильно, то поворот направо заставит тебя
          двигаться вниз.
        courseC_maze_programming4_b: Для продвижения по дорожке переместись вперед
          и поверни в одну сторону, а затем переместись еще раз и поверни в противоположную
          сторону. Переместись вперед еще раз, и ты доберешься до свинки.
      courseD_maze_ramp4_2018:
        courseC_maze_programming4_a: Поворачивать можно направо или налево с точки
          зрения птички. Если ты стоишь правильно, то поворот направо заставит тебя
          двигаться вниз.
        courseC_maze_programming4_b: Для продвижения по дорожке переместись вперед
          и поверни в одну сторону, а затем переместись еще раз и поверни в противоположную
          сторону. Переместись вперед еще раз, и ты доберешься до свинки.
      courseD_maze_ramp4_2019:
        courseC_maze_programming4_a: You can turn right or left from Scrat's point
          of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one
          way, then move again and turn the opposite way. Move forward one more time
          to reach the acorn.
      courseD_maze_ramp5:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Помни, что направо и налево – это направо и налево
          с точки зрения птички.
        courseC_maze_programming5_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp5_2018:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Помни, что направо и налево – это направо и налево
          с точки зрения птички.
        courseC_maze_programming5_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp5_2019:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Помни, что направо и налево – это направо и налево
          с точки зрения птички.
        courseC_maze_programming5_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp5a:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Помни, что направо и налево – это направо и налево
          с точки зрения птички.
        courseC_maze_programming5_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp5a_2018:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Помни, что направо и налево – это направо и налево
          с точки зрения птички.
        courseC_maze_programming5_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp5a_2019:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Remember that turns are from Scrat's perspective.
        courseC_maze_programming5_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp5b:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Помни, что направо и налево – это направо и налево
          с точки зрения птички.
        courseC_maze_programming5_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp5b_2018:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Помни, что направо и налево – это направо и налево
          с точки зрения птички.
        courseC_maze_programming5_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp5b_2019:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Помни, что направо и налево – это направо и налево
          с точки зрения птички.
        courseC_maze_programming5_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_maze_ramp6:
        courseC_maze_programming6_a: Эту головоломку можно решить двумя способами!
        courseC_maze_programming6_b: The bird starts facing a wall, so remember to
          turn before you move.
        courseC_maze_programming6_c: Remember you can write one piece of the code
          at a time, then run it to figure out where you need to go from there.
      courseD_maze_ramp7:
        courseD_maze_ramp7_b: Не забудь использовать кнопку ""Шаг"", чтобы проверить
          программу блок за блоком и найти ошибки.
        courseD_maze_ramp7_a: Use repeat blocks to run either a single block or a
          chunk of code over and over.
        courseD_maze_ramp7_c: If you want to simplify your code, you can put one repeat
          loop inside of another! This is called a **nested loop**.
      courseD_maze_until1:
        courseD_maze_until1_a: Есть ли какие-либо последовательности, которые можно
          зациклить, чтобы сделать код короче?
        courseD_maze_until1_b: Попробуй использовать вложенный цикл, чтобы решить
          эту головоломку.
      courseD_maze_until1_2018:
        courseD_maze_until1_a: Есть ли какие-либо последовательности, которые можно
          зациклить, чтобы сделать код короче?
        courseD_maze_until1_b: Попробуй использовать вложенный цикл, чтобы решить
          эту головоломку.
      courseD_maze_until1_2019:
        courseD_maze_until1_a: Есть ли какие-либо последовательности, которые можно
          зациклить, чтобы сделать код короче?
        courseD_maze_until1_b: Попробуй использовать вложенный цикл, чтобы решить
          эту головоломку.
      courseD_maze_until3:
        courseD_maze_until3_a: |-
          -   Что делает твой код?
          -   Что он обязан делать?
          -   О чем это тебе говорит?
        courseD_maze_until3_b: Если застрянешь, попробуй записать шаги на листе бумаги
          и найти места, где они повторяются.
        courseD_maze_until3_c: Есть ли такая лестничная схема, которую ты смог бы
          использовать для этой головоломки?
        courseD_maze_until3_d: Не забудь использовать блок «повторять до», чтобы сделать
          свой код короче.
      courseD_maze_until3_2018:
        courseD_maze_until3_a: |-
          -   Что делает твой код?
          -   Что он обязан делать?
          -   О чем это тебе говорит?
        courseD_maze_until3_b: Если застрянешь, попробуй записать шаги на листе бумаги
          и найти места, где они повторяются.
        courseD_maze_until3_c: Есть ли такая лестничная схема, которую ты смог бы
          использовать для этой головоломки?
        courseD_maze_until3_d: Не забудь использовать блок «повторять до», чтобы сделать
          свой код короче.
      courseD_maze_until3_2019:
        courseD_maze_until3_a: |-
          -   Что делает твой код?
          -   Что он обязан делать?
          -   О чем это тебе говорит?
        courseD_maze_until3_b: Если застрянешь, попробуй записать шаги на листе бумаги
          и найти места, где они повторяются.
        courseD_maze_until3_c: Есть ли такая лестничная схема, которую ты смог бы
          использовать для этой головоломки?
        courseD_maze_until3_d: Не забудь использовать блок «повторять до», чтобы сделать
          свой код короче.
      courseD_maze_until4:
        courseD_maze_until4_a: |-
          Используй кнопку «Шаг», чтобы проверить свой код по частям.

          -   Все ли работает на первом шаге?
          -   Все ли работает на втором шаге?
          -   Где код не работает?
        courseD_maze_until4_b: Есть ли такая лестничная схема, которую ты смог бы
          использовать для этой головоломки?
        courseD_maze_until4_c: Не забудь использовать блок «повторять до», чтобы сделать
          свой код короче.
      courseD_maze_until4_2018:
        courseD_maze_until4_a: |-
          Используй кнопку «Шаг», чтобы проверить свой код по частям.

          -   Все ли работает на первом шаге?
          -   Все ли работает на втором шаге?
          -   Где код не работает?
        courseD_maze_until4_b: Есть ли такая лестничная схема, которую ты смог бы
          использовать для этой головоломки?
        courseD_maze_until4_c: Не забудь использовать блок «повторять до», чтобы сделать
          свой код короче.
      courseD_maze_until4_2019:
        courseD_maze_until4_a: |-
          Используй кнопку «Шаг», чтобы проверить свой код по частям.

          -   Все ли работает на первом шаге?
          -   Все ли работает на втором шаге?
          -   Где код не работает?
        courseD_maze_until4_b: Есть ли такая лестничная схема, которую ты смог бы
          использовать для этой головоломки?
        courseD_maze_until4_c: Не забудь использовать блок «повторять до», чтобы сделать
          свой код короче.
      courseD_maze_until5:
        courseD_maze_until5_a: Не забудь использовать блок «если путь налево», чтобы
          зомби продолжал искать место для поворота.
        courseD_maze_until5_b: Чтобы использовать только один блок «двигаться вперед»,
          вставь его в блок «повторять до подсолнуха».
        courseD_maze_until5_c: После каждого шага зомби должен проверять, есть ли
          путь налево. Что он обязан сделать, если найдет такой путь?
      courseD_maze_until5_2018:
        courseD_maze_until5_b: Чтобы использовать только один блок «двигаться вперед»,
          вставь его в блок «повторять до подсолнуха».
      courseD_maze_until5_2019:
        courseD_maze_until5_b: Чтобы использовать только один блок «двигаться вперед»,
          вставь его в блок «повторять до подсолнуха».
      courseD_maze_until6:
        courseD_maze_until6_a: На этот раз попробуй блок «если путь направо», чтобы
          зомби не сбился с пути.
        courseD_maze_until6_b: Чтобы использовать только один блок «двигаться вперед»,
          вставь его в блок «повторять до подсолнуха».
        courseD_maze_until6_c: Хотя здесь и больше поворотов, чем в прошлой головоломке,
          твой код может быть почти таким же благодаря блоку «повторять до»!
      courseD_maze_until6_2018:
        courseD_maze_until6_b: Чтобы использовать только один блок «двигаться вперед»,
          вставь его в блок «повторять до подсолнуха».
      courseD_maze_until6_2019:
        courseD_maze_until6_b: Чтобы использовать только один блок «двигаться вперед»,
          вставь его в блок «повторять до подсолнуха».
      courseD_maze_until7:
        courseD_maze_until7_a: Твой код не обязан быть длинней, чем в прошлый раз,
          только потому, что длинней лабиринт!
        courseD_maze_until7_b: Хотя здесь и больше поворотов, чем в прошлой головоломке,
          твой код может быть почти таким же благодаря блоку «повторять до»!
        courseD_maze_until7_c: Не забудь искать пути налево, поскольку поворот направо
          приведет тебя на неверный путь!
      courseD_maze_until7_2018:
        courseD_maze_until7_a: Твой код не обязан быть длинней, чем в прошлый раз,
          только потому, что длинней лабиринт!
        courseD_maze_until7_b: Хотя здесь и больше поворотов, чем в прошлой головоломке,
          твой код может быть почти таким же благодаря блоку «повторять до»!
      courseD_maze_until7_2019:
        courseD_maze_until7_a: Твой код не обязан быть длинней, чем в прошлый раз,
          только потому, что длинней лабиринт!
        courseD_maze_until7_b: Хотя здесь и больше поворотов, чем в прошлой головоломке,
          твой код может быть почти таким же благодаря блоку «повторять до»!
      courseD_maze_until8:
        courseD_maze_until8_a: Обязательно используй блок «если/или же», чтобы зомби
          неизменно двигался в нужном направлении.
        courseD_maze_until8_b: 'С блоком «если/или же»: если впереди есть путь, что
          тебе следует сделать?'
        courseD_maze_until8_c: 'С блоком «если/или же»: если впереди нет пути, куда
          тебе следует повернуть?'
      courseD_maze_until9:
        courseD_maze_until8_a: Блок «если впереди путь» заставит тебя продвигаться,
          если это возможно, вперед, пропуская пути с зубастиками.
        courseD_maze_until8_b: В каком направлении тебе следует повернуть, если пути
          вперед нет?
        courseD_maze_until8_c: Не забудь использовать блок «повторять до», чтобы добраться
          до подсолнуха!
      courseD_maze_until9_2018:
        courseD_maze_until8_c: Не забудь использовать блок «повторять до», чтобы добраться
          до подсолнуха!
      courseD_maze_until9_2019:
        courseD_maze_until8_c: Не забудь использовать блок «повторять до», чтобы добраться
          до подсолнуха!
      courseD_playLab_cond1:
        courseD_playLab_cond1_a: To solve this challenge, attach the `move actor 1
          up` block to the `when up arrow` event, then do the same for every other
          direction.
        courseD_playLab_cond1_b: Use the drop down menus on the `when arrow` and `move
          actor` blocks to change which direction they go.
        courseD_playLab_cond1_c: Remember to move Pegleg to both of the flags once
          you click "Run"!
      courseD_playLab_cond1_2018:
        courseD_playLab_cond1_a: To solve this challenge, attach the `move actor 1
          up` block to the `when up arrow` event, then do the same for every other
          direction.
        courseD_playLab_cond1_b: Use the drop down menus on the `when arrow` and `move
          actor` blocks to change which direction they go.
        courseD_playLab_cond1_c: Remember to move Pegleg to both of the flags once
          you click "Run"!
      courseD_playLab_cond2:
        courseD_playLab_cond2_a: To succeed with this puzzle, use the `score point`
          block beneath the `when actor 1 touches actor 2` event.
      courseD_playLab_cond2_2018:
        courseD_playLab_cond2_a: To succeed with this puzzle, use the `score point`
          block beneath the `when actor 1 touches actor 2` event.
      courseD_playLab_cond3:
        courseD_playLab_cond3_a: You will need to add two blocks to your `repeat forever`
          loop.  One will choose a random emotion for the dragon (actor 2) and the
          other will wait 1 second before going through the loop again.
      courseD_playLab_cond3_2018:
        courseD_playLab_cond3_a: You will need to add two blocks to your `repeat forever`
          loop.  One will choose a random emotion for the dragon (actor 2) and the
          other will wait 1 second before going through the loop again.
      courseD_playLab_cond3a:
        courseD_playLab_cond3_c: "-   `If` the dragon is happy \n    -   `score point`\n
          \   -   `score point`  \n\n-   `Else` `score point`"
      courseD_playLab_cond3a_2018:
        courseD_playLab_cond3_c: "-   `If` the dragon is happy \n    -   `score point`\n
          \   -   `score point`  \n\n-   `Else` `score point`"
      courseD_playLab_cond4:
        courseD_playLab_cond4_a: You will want to use the `when run` event to get
          the ninja to chase the pirate.
        courseD_playLab_cond4_b: There is a special block called `set every masked
          ninja to chase actor` that will keep the ninja hot on the pirate's trail!
        courseD_playLab_cond4_c: Put the `end game as a loss` block underneath the
          `when actor 1 touches actor 3` event.
      courseD_playLab_cond4_2018:
        courseD_playLab_cond4_a: You will want to use the `when run` event to get
          the ninja to chase the pirate.
        courseD_playLab_cond4_b: There is a special block called `set every masked
          ninja to chase actor` that will keep the ninja hot on the pirate's trail!
        courseD_playLab_cond4_c: Put the `end game as a loss` block underneath the
          `when actor 1 touches actor 3` event.
      courseD_playLab_cond5:
        courseD_playLab_cond5_a: Use an `if` statement that compares whether `score`
          is `>` 5 to solve this challenge.
        courseD_playLab_cond5_b: You can have more than one `repeat forever` loop
          in the workspace.
      courseD_playLab_cond5_2018:
        courseD_playLab_cond5_a: Use an `if` statement that compares whether `score`
          is `>` 5 to solve this challenge.
        courseD_playLab_cond5_b: You can have more than one `repeat forever` loop
          in the workspace.
      courseD_playLab_cond6:
        courseD_playLab_cond6_a: Add the `set masked ninja speed` block to the beginning
          of the program to help slow the ninja down.
        courseD_playLab_cond6_b: You will need to use an `if actor 1 y position >
          255` block inside of a `repeat forever` block to always check if the pirate
          is below the octopuses.
      courseD_playLab_cond6_2018:
        courseD_playLab_cond6_a: Add the `set masked ninja speed` block to the beginning
          of the program to help slow the ninja down.
        courseD_playLab_cond6_b: You will need to use an `if actor 1 y position >
          255` block inside of a `repeat forever` block to always check if the pirate
          is below the octopuses.
      courseD_playLab_cond6a:
        courseD_playLab_cond6_c: Add a `wait 1 second` block to the top of the `repeat
          forever` loop that checks the pirate position (but not inside the `if` statement)
          to keep points from being removed too quickly.
      courseD_playLab_cond6a_2018:
        courseD_playLab_cond6_c: Add a `wait 1 second` block to the top of the `repeat
          forever` loop that checks the pirate position (but not inside the `if` statement)
          to keep points from being removed too quickly.
      courseD_scrat_ramp1:
        courseC_maze_programming1_a: Если Скрат не добирается до желудя, убедись,
          что все три блока хорошо соединены друг с другом, и нажми на кнопку «Выполнить»
          снова.
        courseC_maze_programming1_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_scrat_ramp2:
        courseC_maze_programming2_a: Чтобы использовать блок «двигаться вперед», перетащи
          его из набора инструментов в рабочую область и присоедини к блоку «при запуске».
        courseC_maze_programming2_b: Убедись, что все три блока «двигаться вперед»
          присоединены к блоку «при запуске».
      courseD_scrat_ramp3:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nДля
          удаления блока из середины кода перетащи все находящиеся под ним блоки направо
          и оставь на какое-то время в рабочей области.  \n\nНажми на блок, который
          хочешь удалить, и перетащи его обратно в набор инструментов.\n\nНаконец,
          помести другие свои блоки обратно туда, где они должны были быть."
        courseC_maze_programming3_b: Помни, что повороты направо и налево это с точки
          зрения Скрата.
      courseD_scrat_ramp4:
        courseC_maze_programming4_a: You can turn right or left from Scrat's point
          of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one
          way, then move again and turn the opposite way. Move forward one more time
          to reach the acorn.
        courseC_maze_programming4_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_scrat_ramp5:
        courseC_maze_programming5_a: Используй кнопку «Шаг» для построчного запуска
          кода. Сможешь ли ты догадаться, что тебе делать дальше?
        courseC_maze_programming5_b: Как далеко тебе нужно продвинуться, чтобы добраться
          до угла?
        courseC_maze_programming5_c: На углу тебе потребуется повернуть налево, чтобы
          добраться до желудя.
      courseD_scrat_ramp6:
        courseC_maze_programming6a_a: Используй цикл «повторить», чтобы Скрат продолжал
          двигаться!
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: Эту головоломку можно решить двумя способами!
        courseD_scrat_programming6_b: Не забудь сначала повернуть прежде, чем переместиться,
          поскольку Скрат стоит лицом не в ту сторону.
        courseD_scrat_programming6_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseD_scrat_ramp8:
        courseD_maze_ramp7_b: Не забудь использовать кнопку ""Шаг"", чтобы проверить
          программу блок за блоком и найти ошибки.
        courseD_maze_ramp7_a: Use repeat blocks to run either a single block or a
          chunk of code over and over.
        courseD_maze_ramp7_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если не уверен, что уже решил головоломку.
      courseE_artist_concept1:
        courseE_artist_concept1_a: The hexagons have 50 pixel sides and 60 degree
          turns to the right.
        courseE_artist_concept1_b: Try using a function here so you don't have to
          write the code for a hexagon over and over again.
        courseE_artist_concept1_c: Use the `set width` block before each function
          call to change the pen width.
      courseE_artist_concept1_2018:
        courseE_artist_concept1_a: The hexagons have 50 pixel sides and 60 degree
          turns to the right.
        courseE_artist_concept1_b: Try using a function here so you don't have to
          write the code for a hexagon over and over again.
        courseE_artist_concept1_c: Use the `set width` block before each function
          call to change the pen width.
      courseE_artist_concept4:
        courseE_artist_concept4_a: There are several ways to solve this puzzle. Can
          you make a plan?
        courseE_artist_concept4_b: Try creating one square. Then make a line of squares.  What
          comes next?
        courseE_artist_concept4_c: After drawing a line of squares, you can either
          turn around and draw another line of squares going left, or you can jump
          back to the left side of the figure to draw another line of squares going
          right. Which do you prefer?
      courseE_artist_concept4_2018:
        courseE_artist_concept4_a: There are several ways to solve this puzzle. Can
          you make a plan?
        courseE_artist_concept4_b: Try creating one square. Then make a line of squares.  What
          comes next?
        courseE_artist_concept4_c: After drawing a line of squares, you can either
          turn around and draw another line of squares going left, or you can jump
          back to the left side of the figure to draw another line of squares going
          right. Which do you prefer?
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: 'Половина шестиугольника имеет **длину
          в 30 п.** и поворачивает направо на **60 градусов**.  '
        courseE_artist_concept_challenge1_b: '2/3 треугольника имеет **длину в 80
          п.** и поворачивает направо на **120 градусов**. '
        courseE_artist_concept_challenge1_c: |-
          This is the design you want to repeat to make the full shape:

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: 'Половина шестиугольника имеет **длину
          в 30 п.** и поворачивает направо на **60 градусов**.  '
        courseE_artist_concept_challenge1_b: '2/3 треугольника имеет **длину в 80
          п.** и поворачивает направо на **120 градусов**. '
        courseE_artist_concept_challenge1_c: |-
          This is the design you want to repeat to make the full shape:

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge2:
        courseE_artist_concept_challenge2_a: Once you define a function, you can call
          it over and over again - whenever and wherever you want!
        courseE_artist_concept_challenge2_b: |-
          You can jump to different positions on the canvas using this command:

          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      courseE_artist_concept_challenge2_2018:
        courseE_artist_concept_challenge2_a: Once you define a function, you can call
          it over and over again - whenever and wherever you want!
        courseE_artist_concept_challenge2_b: |-
          You can jump to different positions on the canvas using this command:

          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      courseE_artist_functions1:
        courseE_artist_functions1_a: Каждый квадрат имеет стороны в 100 пикселей,
          и это значит, что тебе надо двинуться вперёд на 175 пикселей, прежде чем
          рисовать второй квадрат.
        courseE_artist_functions1_b: Не волнуйся рисовать перекрывающие линии, чтобы
          сделать стёкла.
        courseE_artist_functions1_c: For shorter code, try using a `repeat` loop to
          draw the square frames of the glasses.
      courseE_artist_functions10:
        courseD_artist_functions10_b: This drawing is a lot like the last one, but
          the `draw line` function is now drawing a different shape.
        courseD_artist_functions10_a: To avoid using multiple `move forward` blocks,
          create a `draw hexagon` function and call that multiple times.
        courseD_artist_functions10_c: |-
          Do you see where this drawing could use a function called `line of hexagons`?

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2018:
        courseD_artist_functions10_b: This drawing is a lot like the last one, but
          the `draw line` function is now drawing a different shape.
        courseD_artist_functions10_a: To avoid using multiple `move forward` blocks,
          create a `draw hexagon` function and call that multiple times.
        courseD_artist_functions10_c: |-
          Do you see where this drawing could use a function called `line of hexagons`?

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2019:
        courseD_artist_functions10_b: This drawing is a lot like the last one, but
          the `draw line` function is now drawing a different shape.
        courseD_artist_functions10_a: To avoid using multiple `move forward` blocks,
          create a `draw hexagon` function and call that multiple times.
        courseD_artist_functions10_c: |-
          Do you see where this drawing could use a function called `line of hexagons`?

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions1_copy:
        courseE_artist_functions1_a: Каждый квадрат имеет стороны в 100 пикселей,
          и это значит, что тебе надо двинуться вперёд на 175 пикселей, прежде чем
          рисовать второй квадрат.
        courseE_artist_functions1_b: Не волнуйся рисовать перекрывающие линии, чтобы
          сделать стёкла.
        courseE_artist_functions1_c: For shorter code, try using a `repeat` loop to
          draw the square frames of the glasses.
      courseE_artist_functions2:
        courseD_artist_functions2_b: The function you write should not contain your
          whole program, just the part that draws a square with 100 pixel sides.
        courseD_artist_functions2_c: |-
          Use the green `draw a square` block to "call" your function under the `when run` block. Otherwise, the code in your function will not run.

          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Твоя программа может быть такой:

          -   Используй функцию
          -   Двигайся вперёд на 100 + 75 пикселей
          -   Используй функцию
      courseE_artist_functions2_2018:
        courseD_artist_functions2_b: Функция не должна включать в себя всю программу,
          а только ту ее часть, которая рисует квадрат со стороной 100 точек.
        courseD_artist_functions2_c: Обязательно используй зеленый блок "рисовать
          квадрат". для "вызова" своей функции. Иначе код в твоей функции не будет
          выполнен. <xml><block type="procedures_callnoreturn" limit="2"><mutation
          name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Твоя программа может быть такой:

          -   Используй функцию
          -   Двигайся вперёд на 100 + 75 пикселей
          -   Используй функцию
      courseE_artist_functions2_2019:
        courseD_artist_functions2_b: Функция не должна включать в себя всю программу,
          а только ту ее часть, которая рисует квадрат со стороной 100 точек.
        courseD_artist_functions2_c: Обязательно используй зеленый блок "рисовать
          квадрат". для "вызова" своей функции. Иначе код в твоей функции не будет
          выполнен. <xml><block type="procedures_callnoreturn" limit="2"><mutation
          name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Твоя программа может быть такой:

          -   Используй функцию
          -   Двигайся вперёд на 100 + 75 пикселей
          -   Используй функцию
      courseE_artist_functions2_copy:
        courseD_artist_functions2_b: The function you write should not contain your
          whole program, just the part that draws a square with 100 pixel sides.
        courseD_artist_functions2_c: |-
          Use the green `draw a square` block to "call" your function under the `when run` block. Otherwise, the code in your function will not run.

          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Твоя программа может быть такой:

          -   Используй функцию
          -   Двигайся вперёд на 100 + 75 пикселей
          -   Используй функцию
      courseE_artist_functions3:
        courseD_artist_functions3_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.

          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
        courseD_artist_functions3_b: Your loop should have all 3 starter code blocks
          inside of it.
      courseE_artist_functions3_copy:
        courseD_artist_functions3_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.

          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
        courseD_artist_functions3_b: Your loop should have all 3 starter code blocks
          inside of it.
      courseE_artist_functions4:
        courseD_artist_functions4_a: Try using a function!
        courseD_artist_functions4_b: Drag the `draw a star` function block out of
          the toolbox to begin building your function. It should have the same code
          as the previous puzzle, since you are drawing the same star pattern.
        courseD_artist_functions4_c: Use the green `draw a star` block to call this
          function in your main program. Don't forget to jump forward between each
          star!
      courseE_artist_functions4_copy:
        courseD_artist_functions4_a: Try using a function!
        courseD_artist_functions4_b: Drag the `draw a star` function block out of
          the toolbox to begin building your function. It should have the same code
          as the previous puzzle, since you are drawing the same star pattern.
        courseD_artist_functions4_c: Use the green `draw a star` block to call this
          function in your main program. Don't forget to jump forward between each
          star!
      courseE_artist_functions5:
        courseD_artist_functions5_a: Don't give up!  Remember what you have been learning.
        courseD_artist_functions5_b: Functions make it easy to call saved code at
          any time, not just from inside a loop!
        courseD_artist_functions5_c: Start by dragging the code for a star shape into
          the `draw a star` function, then use this function to draw the three stars!
      courseE_artist_functions5_2018:
        courseD_artist_functions5_a: Don't give up!  Remember what you have been learning.
        courseD_artist_functions5_b: Functions make it easy to call saved code at
          any time, not just from inside a loop!
        courseD_artist_functions5_c: Начни с того, чтобы создать функцию "рисовать
          звезду", а затем используй эту функцию и нарисуй три звезды!
      courseE_artist_functions5_2019:
        courseD_artist_functions5_a: Don't give up!  Remember what you have been learning.
        courseD_artist_functions5_b: Functions make it easy to call saved code at
          any time, not just from inside a loop!
        courseD_artist_functions5_c: Начни с того, чтобы создать функцию "рисовать
          звезду", а затем используй эту функцию и нарисуй три звезды!
      courseE_artist_functions5_copy:
        courseD_artist_functions5_a: Don't give up!  Remember what you have been learning.
        courseD_artist_functions5_b: Functions make it easy to call saved code at
          any time, not just from inside a loop!
        courseD_artist_functions5_c: Start by dragging the code for a star shape into
          the `draw a star` function, then use this function to draw the three stars!
      courseE_artist_functions6:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll
          create a function in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops. The inner loop
          will make the square and the outer loop will rotate the square four times.
        grade4_artist_functions_windows0_c: Не бойся допустить ошибку! Добавляй блоки,
          запускай код и смотри, что получится, даже если и не решил еще головоломку.
      courseE_artist_functions7:
        courseD_artist_functions7_a: Try creating your function first then add windows
          one at a time.
        courseD_artist_functions7_b: You shouldn't need to add any extra repeat loops.  Just
          jump the artist 100 pixels between each top window, then down 150 pixels
          to get to the bottom windows.
      courseE_artist_functions7_2018:
        courseD_artist_functions7_a: Try creating your function first then add windows
          one at a time.
        courseD_artist_functions7_b: Для перемещения от верхних окон к нижним просто
          поверни художника направо, прыгни на 150 точек, а затем поверни художника
          направо еще раз! Теперь художник будет смотреть в направлении, требуемом
          для того, чтобы закончить остаток дома!
      courseE_artist_functions7_2019:
        courseD_artist_functions7_a: Try creating your function first then add windows
          one at a time.
        courseD_artist_functions7_b: Для перемещения от верхних окон к нижним просто
          поверни художника направо, прыгни на 150 точек, а затем поверни художника
          направо еще раз! Теперь художник будет смотреть в направлении, требуемом
          для того, чтобы закончить остаток дома!
      courseE_artist_functions8:
        courseD_artist_functions8_f: You only need one `move forward` block, but you
          will need quite a few `jump forward` and/or `jump backward` blocks!
        courseD_artist_functions8_a: |-
          Start by making a function for a square, then try making a function for a line of squares.

          How would you use the `draw a line of squares` function to make this image?
        courseD_artist_functions8_d: |-
          To make a line of squares,

          -   repeat 3 times
              -   draw a square with a side length of **50 pixels**
              -   jump forward **100 pixels**
        courseD_artist_functions8_b: |-
          Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?

          ![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png>)
        courseD_artist_functions8_c: At the end of each line of squares, the artist
          will need to jump down and backward before he draws the next line of squares.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_f: You only need one `move forward` block, but you
          will need quite a few `jump forward` and/or `jump backward` blocks!
        courseD_artist_functions8_a: |-
          Start by making a function for a square, then try making a function for a line of squares.

          How would you use the `draw a line of squares` function to make this image?
        courseD_artist_functions8_d: |-
          To make a line of squares,

          -   repeat 3 times
              -   draw a square with a side length of **50 pixels**
              -   jump forward **100 pixels**
        courseD_artist_functions8_b: |-
          Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?

          ![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png>)
        courseD_artist_functions8_c: В конце каждой полосы квадратов, расположенных
          в шахматном порядке, художнику потребуется прыгнуть вниз и назад прежде,
          чем нарисовать следующую полосу таких квадратов.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_f: You only need one `move forward` block, but you
          will need quite a few `jump forward` and/or `jump backward` blocks!
        courseD_artist_functions8_a: |-
          Start by making a function for a square, then try making a function for a line of squares.

          How would you use the `draw a line of squares` function to make this image?
        courseD_artist_functions8_d: |-
          To make a line of squares,

          -   repeat 3 times
              -   draw a square with a side length of **50 pixels**
              -   jump forward **100 pixels**
        courseD_artist_functions8_b: |-
          Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?

          ![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png>)
        courseD_artist_functions8_c: В конце каждой полосы квадратов, расположенных
          в шахматном порядке, художнику потребуется прыгнуть вниз и назад прежде,
          чем нарисовать следующую полосу таких квадратов.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8b_2018:
        courseD_artist_functions8_f: Если ты все делаешь правильно, тебе потребуется
          всего один блок "двигаться вперед"!
        courseD_artist_functions8_a: Начни с создания функции для квадрата, а затем
          попробуй создать функцию для ряда квадратов.
        courseD_artist_functions8_d: Чтобы нарисовать ряд квадратов, повтори 3 раза
          - нарисуй квадрат - прыгни вперед на **100 точек**
      courseE_artist_functions8b_2019:
        courseD_artist_functions8_f: Если ты все делаешь правильно, тебе потребуется
          всего один блок "двигаться вперед"!
        courseD_artist_functions8_a: Начни с создания функции для квадрата, а затем
          попробуй создать функцию для ряда квадратов.
        courseD_artist_functions8_d: Чтобы нарисовать ряд квадратов, повтори 3 раза
          - нарисуй квадрат - прыгни вперед на **100 точек**
      courseE_artist_functions8c_2018:
        courseD_artist_functions8_f: Эта легче, чем кажется! Блоки "двигаться" или
          "прыгнуть" здесь не понадобятся!
        courseD_artist_functions8_a: Второй ряд квадратов отличается от первого только
          поворотом на 180 градусов!
        courseD_artist_functions8_c: В конце каждого ряда квадратов художнику требуется
          только повернуть на 180 градусов прежде, чем нарисовать следующий ряд квадратов.
          Помести все это в цикл повтора, чтобы подготовиться к следующему упражнению!
      courseE_artist_functions8c_2019:
        courseD_artist_functions8_f: Эта легче, чем кажется! Блоки "двигаться" или
          "прыгнуть" здесь не понадобятся!
        courseD_artist_functions8_a: Второй ряд квадратов отличается от первого только
          поворотом на 180 градусов!
        courseD_artist_functions8_c: В конце каждого ряда квадратов художнику требуется
          только повернуть на 180 градусов прежде, чем нарисовать следующий ряд квадратов.
          Помести все это в цикл повтора, чтобы подготовиться к следующему упражнению!
      courseE_artist_functions9:
        courseD_artist_functions9_e: |-
          Can you spot all four places that the `line of triangles` can be used in this drawing?

          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          This puzzle can be broken into three parts:

          -   make the `draw a triangle` function
          -   make the `draw a line of triangles` function
          -   use your `draw a line of triangles` function four times to complete the drawing
        courseD_artist_functions9_b: This drawing is made by drawing a line of triangles
          4 times and turning either 60 or 120 degrees before you draw the next triangle
          line.
        courseD_artist_functions9_c: |-
          To draw a line of triangles:

          -   repeat 4 times
              -   draw a triangle
              -   jump forward 50 pixels
        courseD_artist_functions9_d: |-
          To draw the diamond:

          -   repeat 2 times
              -   draw a line of triangles
              -   turn 60 degrees
              -   draw a line of triangles
              -   turn 120 degrees
      courseE_artist_functions9_2018:
        courseD_artist_functions9_e: |-
          Can you spot all four places that the `line of triangles` can be used in this drawing?

          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          This puzzle can be broken into three parts:

          -   make the `draw a triangle` function
          -   make the `draw a line of triangles` function
          -   use your `draw a line of triangles` function four times to complete the drawing
        courseD_artist_functions9_b: This drawing is made by drawing a line of triangles
          4 times and turning either 60 or 120 degrees before you draw the next triangle
          line.
        courseD_artist_functions9_c: |-
          To draw a line of triangles:

          -   repeat 4 times
              -   draw a triangle
              -   jump forward 50 pixels
        courseD_artist_functions9_d: |-
          To draw the diamond:

          -   repeat 2 times
              -   draw a line of triangles
              -   turn 60 degrees
              -   draw a line of triangles
              -   turn 120 degrees
      courseE_artist_functions9_2019:
        courseD_artist_functions9_e: |-
          Can you spot all four places that the `line of triangles` can be used in this drawing?

          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          This puzzle can be broken into three parts:

          -   make the `draw a triangle` function
          -   make the `draw a line of triangles` function
          -   use your `draw a line of triangles` function four times to complete the drawing
        courseD_artist_functions9_b: This drawing is made by drawing a line of triangles
          4 times and turning either 60 or 120 degrees before you draw the next triangle
          line.
        courseD_artist_functions9_c: |-
          To draw a line of triangles:

          -   repeat 4 times
              -   draw a triangle
              -   jump forward 50 pixels
        courseD_artist_functions9_d: |-
          To draw the diamond:

          -   repeat 2 times
              -   draw a line of triangles
              -   turn 60 degrees
              -   draw a line of triangles
              -   turn 120 degrees
      courseE_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: If you call the function one more time,
          you can create the same design in the final corner.
        courseE_artist_functions_challenge1_b: You can also `jump to` other positions
          or change the whole design however you want!
      courseE_artist_functions_challenge1_2018:
        courseE_artist_functions_challenge1_a: If you call the function one more time,
          you can create the same design in the final corner.
        courseE_artist_functions_challenge1_b: You can also `jump to` other positions
          or change the whole design however you want!
      courseE_artist_functions_challenge1_2019:
        courseE_artist_functions_challenge1_a: If you call the function one more time,
          you can create the same design in the final corner.
        courseE_artist_functions_challenge1_b: You can also `jump to` other positions
          or change the whole design however you want!
      courseE_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          This `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_functions_challenge2_2018:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          This `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_functions_challenge2_2019:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          This `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_ramp8:
        courseE_artist_ramp8_a: To draw a side, use the `move forward by 100 pixels`
          block, and change the 100 to a 200.
        courseE_artist_ramp8_b: |-
          To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.

          Don't forget to turn afterward!
        courseE_artist_ramp8_c: 'Your loop should have two blocks inside of it: `move
          forward` and `turn right by 90 degrees`.'
      courseE_artist_ramp8_2:
        courseE_artist_ramp8_a: To draw a side, use the `move forward by 100 pixels`
          block, and change the 100 to a 200.
        courseE_artist_ramp8_b: |-
          To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.

          Don't forget to turn afterward!
        courseE_artist_ramp8_c: 'Your loop should have two blocks inside of it: `move
          forward` and `turn right by 90 degrees`.'
      courseE_artist_ramp9:
        courseD_artist_ramp12_a: How is this similar to a square?  How is it different?
        courseD_artist_ramp12_b: Чтобы понять, какой угол тебе нужен, открой выпадающее
          меню на блоках ""повернуть""!
        courseD_artist_ramp12_c: To draw each side, you will need to move forward
          100 pixels, then turn right 120 degrees. How many sides do you need?
      courseE_artist_ramp9_2:
        courseD_artist_ramp12_a: How is this similar to a square?  How is it different?
        courseD_artist_ramp12_b: Чтобы понять, какой угол тебе нужен, открой выпадающее
          меню на блоках ""повернуть""!
        courseD_artist_ramp12_c: To draw each side, you will need to move forward
          100 pixels, then turn right 120 degrees. How many sides do you need?
      courseE_bee_concept1:
        courseE_bee_concept1_b: Are there any patterns that _repeat_ here?
        courseE_bee_concept1_a: If you don't understand how to use nested loops here,
          try writing out the instructions step by step on a piece of paper.  Circle
          the patterns that you see.
      courseE_bee_concept1_2018:
        courseE_bee_concept1_b: Are there any patterns that _repeat_ here?
        courseE_bee_concept1_a: If you don't understand how to use nested loops here,
          try writing out the instructions step by step on a piece of paper.  Circle
          the patterns that you see.
      courseE_bee_concept2:
        courseE_bee_concept2_a: Would a `while` loop help here?
        courseE_bee_concept2_d: You can even check empty spaces to see if honey is
          > 0.
        courseE_bee_concept2_b: You can use `while` loops to move to the end of each
          path, and to collect all of the honey from each space.
        courseE_bee_concept2_c: Which way should the bee turn after each path?
      courseE_bee_concept2_2018:
        courseE_bee_concept2_a: Would a `while` loop help here?
        courseE_bee_concept2_d: 'With this `while` loop you  can check empty spaces
          to see if the amount of honey is > 0. This does the same as the `while there
          is honey` loop. '
        courseE_bee_concept2_b: You can use `while` loops to move to the end of each
          path, and to collect all of the honey from each space.
        courseE_bee_concept2_c: Which way should the bee turn after each path?
      courseE_bee_concept3:
        courseE_bee_concept3a_a: Try using nested `repeat` loops to solve this puzzle.
        courseE_bee_concept3a_b: If you can't figure out where to put the loops, try
          writing your code step-by-step and looking for patterns.
        courseE_bee_concept3a_c: There are three groups of flowers, so your outer
          `repeat` loop should repeat three times.
      courseE_bee_concept3_2018:
        courseE_bee_concept3a_a: Try using nested `repeat` or `while` loops to solve
          this puzzle.
        courseE_bee_concept3a_b: If you can't figure out where to put the loops, try
          writing your code step-by-step and looking for patterns.
      courseE_bee_concept4:
        courseE_bee_concept4_a: An `if/else` statement could really help you out here.
        courseE_bee_concept4_b: The stair step pattern can help you get through all
          of the flowers and honeycombs.
        courseE_bee_concept4_c: If you are at a flower, how many times do you have
          to get nectar? Is this the same number for all flowers?
      courseE_bee_concept4_2018:
        courseE_bee_concept4_a: An `if/else` statement could really help you out here.
        courseE_bee_concept4_b: The stair step pattern can help you get through all
          of the flowers and honeycombs.
        courseE_bee_concept4_c: If you are at a flower, how many times do you have
          to get nectar? Is this the same number for all flowers?
      courseE_bee_concept5:
        courseE_bee_concept5_a: The flowers follow a rectangular path.  You can trace
          that rectangle using `while path ahead` even with a different number of
          squares per side.
        courseE_bee_concept5_c: |-
          Here's a picture of a rectangular path the bee could take.

          ![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)
        courseE_bee_concept5_b: You can check every square for a flower using the
          `if` block, even if you already know there's not one there.
      courseE_bee_concept5_2018:
        courseE_bee_concept5_a: The flowers follow a rectangular path.  You can trace
          that rectangle using `while path ahead` even with a different number of
          squares per side.
        courseE_bee_concept5_c: |-
          Here's a picture of a rectangular path the bee could take.

          ![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)
        courseE_bee_concept5_b: You can check every square for a flower using the
          `if` block, even if you already know there's not one there.
      courseE_bee_functions1:
        courseE_bee_functions1_a: Remember that left and right turns are from the
          point of view of the bee.
        courseE_bee_functions1_b: Use a `repeat` loop when collecting nectar to make
          your code shorter.
        courseE_bee_functions1_c: Remember that left and right turns are from the
          perspective of the bee.
      courseE_bee_functions10:
        courseE_bee_functions10_a: You will need a `while` loop to collect all of
          the honey, since it varies between honeycombs.
        courseE_bee_functions10_b: Include the turns and movement in your function,
          so you can call it when the bee is on the main path.
        courseE_bee_functions10_c: Remember to call your function in the main program!
      courseE_bee_functions2:
        courseE_bee_functions2_a: Эта функция уже написана для тебя, но тебе придется
          вызывать ее у каждого цветка.
        courseE_bee_functions2_b: This <xml><block type="procedures_callnoreturn"><mutation
          name="get 2 nectar"/></block></xml> block calls the function given to you.
        courseE_bee_functions2_c: You will want to move forward and get 2 nectar twice
          to solve this puzzle.
      courseE_bee_functions3:
        courseE_bee_functions3_a: 'Your function for this puzzle only needs to collect
          nectar, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseE_bee_functions3_b: Call your `get 5` function under the `when run`
          block.
        courseE_bee_functions3_c: Your main program will control all of the movement,
          the function is just for what happens when the bee reaches a flower.
        courseE_bee_functions3_d: Try using this path through.
      courseE_bee_functions4:
        courseE_bee_functions4_a: Your function will already travel down the side
          paths and return the bee back to the main road.  You don't need to add that
          part to your program.
        courseE_bee_functions4_b: Use the green `move and get nectar` block to call
          this function.
        courseE_bee_functions4_c: You don't need to change the function, just use
          it in your program.
      courseE_bee_functions5:
        courseE_bee_functions5_a: Edit the function so that it solves the puzzle without
          having to change the main program.
        courseE_bee_functions5_c: The `move forward` block can be changed into a `move
          backward` block. Use this instead of turning all the way around at the end
          of the paths!
        courseE_bee_functions5_b: "Your function should make the bee: \n\n-   turn\n-
          \  move forward\n-   collect all of the nectar\n-   move backward\n-   turn
          back to the direction that the bee started from"
      courseE_bee_functions6:
        courseE_bee_functions6_a: "Если головоломка кажется сложной, то попробуйте
          построить немного функцию в то время.\nДобавьте некоторые блоки, а затем
          попробуйте его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте
          это задание! \n ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: It might help in this case to move inside of the
          function, but not all of your `move` blocks need to be there.
      courseE_bee_functions7:
        courseE_bee_functions7_a: |-
          Если головоломка покажется сложной, попробуй создавать свою функцию понемногу.

          Добавь несколько блоков, а затем испытай их. Добавь еще блоки и испытай еще раз.  Скоро у тебя все получится!
        courseE_bee_functions7_b: |-
          Помните, что надо строить ваш код внутри зелёного блока функции.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: This function should turn the bee to head him down
          the path, collect the nectar, make the honey, then turn the bee around and
          bring him back.
      courseE_bee_functions8:
        courseE_bee_functions8_a: Your function will only need to collect nectar.
          Try using a while loop instead of a repeat loop.
        courseE_bee_functions8_b: Use `while nectar > 0` to make sure you get all
          of the nectar.
        courseE_bee_functions8_c: Your main program will need a stair step movement
          pattern. Remember, the main program is the code under the `when run` block.
      courseE_bee_functions9:
        courseE_bee_functions9_a: You can use the exact same function for this puzzle
          as you did in the last puzzle.  All you need to do is create a function
          that collects all of the nectar when you get to each flower.
        courseE_bee_functions9_b: Even though you know how much nectar some of the
          flowers have, a `while` loop can make one function work for all of them.
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          Если головоломка покажется сложной, попробуй создавать свою функцию понемногу.

          Добавь несколько блоков, а затем испытай их. Добавь еще блоки и испытай еще раз.  Скоро у тебя все получится!
        courseE_bee_functions_challenge1_b: Remember to build your code inside of
          the green function block.
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          Если головоломка покажется сложной, попробуй создавать свою функцию понемногу.

          Добавь несколько блоков, а затем испытай их. Добавь еще блоки и испытай еще раз.  Скоро у тебя все получится!
        courseE_bee_functions_challenge1_b: Remember to build your code inside of
          the green function block.
      courseE_farmer_concept1:
        courseE_farmer_concept1_a: A `while there is a hole` block will help you fill
          any hole until it's flat.
        courseE_farmer_concept1_b: You can use a stair step pattern to get to the
          holes.
      courseE_farmer_concept1_2018:
        courseE_farmer_concept1_a: A `while there is a hole` block will help you fill
          any hole until it's flat.
        courseE_farmer_concept1_b: You can use a stair step pattern to get to the
          holes.
      courseE_farmer_concept2:
        courseE_farmer_concept2_a: The paths are all the same length, but they are
          a different number of squares apart.  A loop isn't ideal here. Try a function.
        courseE_farmer_concept2_b: A function which turns, goes down the path, gathers
          pumpkins, and returns to the main horizontal path could be helpful here.
        courseE_farmer_concept2_c: Your main program can call this function with the
          green `do something` block.
      courseE_farmer_concept2_2018:
        courseE_farmer_concept2_a: The paths are all the same length, but they are
          a different number of squares apart.  A loop isn't ideal here. Try a function.
        courseE_farmer_concept2_b: A function which turns, goes down the path, gathers
          pumpkins, and returns to the main horizontal path could be helpful here.
        courseE_farmer_concept2_c: Your main program can call this function with the
          green `do something` block.
      courseE_farmer_concept3:
        grade3_robotFarmer_ConditionalsIntro_8_a: Блок «пока путь впереди» позволяет
          продолжать двигаться, даже если не знаешь, сколько квадратов на данном пути.
        grade3_robotFarmer_ConditionalsIntro_8_b: What should you do once you've reached
          the end of a path?
        grade3_robotFarmer_ConditionalsIntro_8_c: Use a `repeat` loop to run your
          code multiple times for each straight path.
      courseE_farmer_concept3_2018:
        grade3_robotFarmer_ConditionalsIntro_8_a: Блок «пока путь впереди» позволяет
          продолжать двигаться, даже если не знаешь, сколько квадратов на данном пути.
        grade3_robotFarmer_ConditionalsIntro_8_b: What should you do once you've reached
          the end of a path?
        grade3_robotFarmer_ConditionalsIntro_8_c: Use a `repeat` loop to run your
          code multiple times for each straight path.
      courseE_farmer_functions1:
        courseE_farmer_functions1_a: The toolbox is organized a little differently
          this time! Click on the different categories to see which blocks you have.
        courseE_farmer_functions1_b: You only need to pick one pumpkin, but could
          you use a loop to get to it?
      courseE_farmer_functions10b:
        courseE_farmer_functions10b_a: You will have to re-create your function first.
        courseE_farmer_functions10b_b: Which way do you need to turn after the first
          pumpkin?
        courseE_farmer_functions10b_c: Look back at the last puzzle if you need help
          making the function.
      courseE_farmer_functions1_2018:
        courseE_farmer_functions1_a: The toolbox is organized a little differently
          this time! Click on the different categories to see which blocks you have.
        courseE_farmer_functions1_b: You only need to pick one pumpkin, but could
          you use a loop to get to it?
      courseE_farmer_functions1_2019:
        courseE_farmer_functions1_a: The toolbox is organized a little differently
          this time! Click on the different categories to see which blocks you have.
        courseE_farmer_functions1_b: You only need to pick one pumpkin, but could
          you use a loop to get to it?
      courseE_farmer_functions1a:
        courseE_farmer_functions1a_a: Think through the `if/else` statements step
          by step. What should you do if you are standing at a corn plant?
        courseE_farmer_functions1a_b: Use a `repeat until` block to get to the pumpkin!
      courseE_farmer_functions1a_2018:
        courseE_farmer_functions1a_a: Обязательно прочитай определение функции. Сможешь
          ли ты сказать, что она делает?
        courseE_farmer_functions1a_b: Use a `repeat until` block to get to the pumpkin!
      courseE_farmer_functions1a_2019:
        courseE_farmer_functions1a_a: Обязательно прочитай определение функции. Сможешь
          ли ты сказать, что она делает?
        courseE_farmer_functions1a_b: Use a `repeat until` block to get to the pumpkin!
      courseE_farmer_functions2b:
        courseE_farmer_functions2b_a: You can use a `repeat until pumpkin` to get
          to the ends of the two paths.
        courseE_farmer_functions2b_b: There is no corn on the connecting path, so
          you can just move along it and turn.
        courseE_farmer_functions2b_c: You will need two separate `repeat until` blocks
          to get all of the crops.
      courseE_farmer_functions2b_2018:
        courseE_farmer_functions2b_a: Можешь "повторять до тыквы", чтобы добраться
          до конца каждой из двух дорожек.
        courseE_farmer_functions2b_b: There is no corn on the connecting path, so
          you can just move along it and turn.
        courseE_farmer_functions2b_c: You will need two separate `repeat until` blocks
          to get all of the crops.
      courseE_farmer_functions2b_2019:
        courseE_farmer_functions2b_a: Можешь "повторять до тыквы", чтобы добраться
          до конца каждой из двух дорожек.
        courseE_farmer_functions2b_b: There is no corn on the connecting path, so
          you can just move along it and turn.
        courseE_farmer_functions2b_c: You will need two separate `repeat until` blocks
          to get all of the crops.
      courseE_farmer_functions2ba:
        courseE_farmer_functions2ba_a: Use the green `corn and pumpkin` block to call
          this function.
        courseE_farmer_functions2ba_b: Drag all of the blocks in the workspace together
          under `when run` to see how this function works.
      courseE_farmer_functions2ba_2018:
        courseE_farmer_functions2ba_a: Используй зеленый блок "собрать все тыквы",
          чтобы гарантированно собрать все тыквы!
      courseE_farmer_functions2ba_2019:
        courseE_farmer_functions2ba_a: Используй зеленый блок "собрать все тыквы",
          чтобы гарантированно собрать все тыквы!
      courseE_farmer_functions3c:
        courseE_farmer_functions3c_a: What sequence is repeated often in this program?
          Can you drag these blocks into the function?
        courseE_farmer_functions3c_b: Don't forget to call your function in the main
          program wherever you removed blocks.
      courseE_farmer_functions3c1_2018:
        coursee_farmer_functions3c1_2018_a: Для решения этой головоломки тебе потребуется
          воспользоваться функцией "собирать вдоль пути" три раза.
        coursee_farmer_functions3c1_2018_b: Какой код тебе нужно добавить, чтобы поворачивать,
          когда это нужно, за угол?
      courseE_farmer_functions3c1_2019:
        coursee_farmer_functions3c1_2018_a: Для решения этой головоломки тебе потребуется
          воспользоваться функцией "собирать вдоль пути" три раза.
        coursee_farmer_functions3c1_2018_b: Какой код тебе нужно добавить, чтобы поворачивать,
          когда это нужно, за угол?
      courseE_farmer_functions4b:
        courseE_farmer_functions4b_a: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
        courseE_farmer_functions4b_b: Remember to turn after each path.
        courseE_farmer_functions4b_c: The green `corn and pumpkin` blocks are in the
          Functions tab of the toolbox.
      courseE_farmer_functions5c:
        courseE_farmer_functions5c_a: Are there any other patterns you can loop in
          this puzzle?
        courseE_farmer_functions5c_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
      courseE_farmer_functions6c:
        courseE_farmer_functions6c_a: Edit your function to check for the lettuce
          as well.
        courseE_farmer_functions6c_b: Would an `if/else` block help to check if there
          is lettuce in a space?
        courseE_farmer_functions6c_c: Don't forget to keep checking for corn!
      courseE_farmer_functions7a1_2018:
        courseE_farmer_functions7a1_2018_a: Создай свою функцию в разделе "Функции"
          набора инструментов.
        courseE_farmer_functions7a1_2018_b: Не забудь использовать свою функцию, когда
          ее придумаешь!
      courseE_farmer_functions7a1_2019:
        courseE_farmer_functions7a1_2018_a: Создай свою функцию в разделе "Функции"
          набора инструментов.
        courseE_farmer_functions7a1_2018_b: Не забудь использовать свою функцию, когда
          ее придумаешь!
      courseE_farmer_functions7b:
        courseE_farmer_functions7b_a: You don't need a function here, but you can
          make one if it is helpful to you!
        courseE_farmer_functions7b_b: Use an `if/else` statement to check for crops,
          then turn based on which crop you find.
        courseE_farmer_functions7b_c: A `repeat until pumpkin` loop can help you get
          all the way through the maze.
      courseE_farmer_functions8a1_2018:
        courseE_farmer_functions8a1_2018a: Начни решение с кодирования той же функции,
          которую ты создал в прошлой головоломке.
        courseE_farmer_functions8a1_2018b: После первого выполнения функции тебе потребуется
          сделать один дополнительный поворот, прежде чем выполнить ее еще раз.
      courseE_farmer_functions8a1_2019:
        courseE_farmer_functions8a1_2018a: Начни решение с кодирования той же функции,
          которую ты создал в прошлой головоломке.
        courseE_farmer_functions8a1_2018b: После первого выполнения функции тебе потребуется
          сделать один дополнительный поворот, прежде чем выполнить ее еще раз.
      courseE_farmer_functions8b:
        courseE_farmer_functions8b_a: Try running the code given to see what it does.
          What do you need after this?
        courseE_farmer_functions8b_b: Drag all of the starter blocks into a function
          so that you can use them more than once.
        courseE_farmer_functions8b_c: How many times do you need to call the function?
      courseE_farmer_functions9a1_2018:
        courseE_farmer_functions9a1_2018a: Ты воспользуешься той же функцией, которую
          придумал в паре последних головоломок.
        courseE_farmer_functions9a1_2018b: Используй те же шаги из предыдущей головоломки
          для решения первой половины этой головоломки.
        courseE_farmer_functions9a1_2018c: Тебе потребуется "повернуть" несколько
          раз и "двигаться вперед", чтобы добраться до последнего пучка салата прежде,
          чем вызвать свою функцию еще раз.
      courseE_farmer_functions9a1_2019:
        courseE_farmer_functions9a1_2018a: Ты воспользуешься той же функцией, которую
          придумал в паре последних головоломок.
        courseE_farmer_functions9a1_2018b: Используй те же шаги из предыдущей головоломки
          для решения первой половины этой головоломки.
        courseE_farmer_functions9a1_2018c: Тебе потребуется "повернуть" несколько
          раз и "двигаться вперед", чтобы добраться до последнего пучка салата прежде,
          чем вызвать свою функцию еще раз.
      courseE_farmer_functions9b:
        courseE_farmer_functions9b_a: Can you use nested `if` and `if/else` statements
          to move along the path?
        courseE_farmer_functions9b_b: Use `repeat until pumpkin` to move through all
          of the paths.
        courseE_farmer_functions9b_c: You will want to move through the paths as if
          they are squares getting larger after each loop.
      courseE_farmer_ramp11a:
        courseE_farmer_ramp12_a: 'Instead of using a `repeat` loop to tell the farmer
          how many times to shovel dirt, now you can use a `while there is a pile`
          block.  '
        courseE_farmer_ramp12_b: You only need to move forward once to get to the
          dirt.
      courseE_farmer_ramp11a_2018:
        courseE_farmer_ramp12_a: 'Instead of using a `repeat` loop to tell the farmer
          how many times to shovel dirt, now you can use a `while there is a pile`
          block.  '
        courseE_farmer_ramp12_b: You only need to move forward once to get to the
          dirt.
      courseE_farmer_ramp11a_2019:
        courseE_farmer_ramp12_a: 'Instead of using a `repeat` loop to tell the farmer
          how many times to shovel dirt, now you can use a `while there is a pile`
          block.  '
        courseE_farmer_ramp12_b: You only need to move forward once to get to the
          dirt.
      courseE_farmer_ramp11b:
        courseE_farmer_ramp11b_a: You can nest your `while` loop inside of a `repeat`
          loop to make your code shorter.
      courseE_farmer_ramp11b_2018:
        courseE_farmer_ramp11b_a: You can nest your `while` loop inside of a `repeat`
          loop to make your code shorter.
      courseE_farmer_ramp11b_2019:
        courseE_farmer_ramp11b_a: You can nest your `while` loop inside of a `repeat`
          loop to make your code shorter.
      courseE_farmer_ramp12_forswap:
        courseE_farmer_ramp12_b: You will still need to use a `repeat` loop on the
          outside of it all to tell the farmer how many times to walk forward and
          get lettuce.
      courseE_farmer_ramp12_forswap_2018:
        courseE_farmer_ramp12_b: You will still need to use a `repeat` loop on the
          outside of it all to tell the farmer how many times to walk forward and
          get lettuce.
      courseE_farmer_ramp12_forswap_2019:
        courseE_farmer_ramp12_b: You will still need to use a `repeat` loop on the
          outside of it all to tell the farmer how many times to walk forward and
          get lettuce.
      courseE_farmer_ramp12c:
        courseE_farmer_ramp12b_b: You will still need to use an `until` loop first,
          then use a `while` loop once you get to the lettuce.
      courseE_farmer_ramp12c_2018:
        courseE_farmer_ramp12b_b: You will still need to use an `until` loop first,
          then use a `while` loop once you get to the lettuce.
      courseE_farmer_ramp12c_2019:
        courseE_farmer_ramp12b_b: You will still need to use an `until` loop first,
          then use a `while` loop once you get to the lettuce.
      courseE_farmer_ramp12d:
        courseE_farmer_ramp12d_b: You will still need to put your `until` and `while`
          loops inside of a `repeat` loop to solve this puzzle!
      courseE_farmer_ramp12d_2018:
        courseE_farmer_ramp12d_b: You will still need to put your `until` and `while`
          loops inside of a `repeat` loop to solve this puzzle!
      courseE_farmer_ramp12d_2019:
        courseE_farmer_ramp12d_b: You will still need to put your `until` and `while`
          loops inside of a `repeat` loop to solve this puzzle!
      courseE_farmer_ramp12e:
        courseE_farmer_ramp12e_b: The solution to this puzzle will look a lot like
          the solution to the last puzzle, but turning in the other direction.
      courseE_farmer_ramp12e_2018:
        courseE_farmer_ramp12e_b: The solution to this puzzle will look a lot like
          the solution to the last puzzle, but turning in the other direction.
      courseE_farmer_ramp12e_2019:
        courseE_farmer_ramp12e_b: The solution to this puzzle will look a lot like
          the solution to the last puzzle, but turning in the other direction.
      courseE_farmer_ramp12f:
        courseE_farmer_ramp12f_b: Use an `if/else` block to help the farmer decide
          if she needs to turn right or left.
      courseE_farmer_ramp12f_2018:
        courseE_farmer_ramp12f_b: Use an `if/else` block to help the farmer decide
          if she needs to turn right or left.
      courseE_farmer_ramp12f_2019:
        courseE_farmer_ramp12f_b: Use an `if/else` block to help the farmer decide
          if she needs to turn right or left.
      courseE_farmer_ramp12g:
        courseE_farmer_ramp12G_b: Use an `if/else` block to help the farmer decide
          if she needs to turn right or left.
      courseE_farmer_ramp12g_2018:
        courseE_farmer_ramp12G_b: Use an `if/else` block to help the farmer decide
          if she needs to turn right or left.
      courseE_farmer_ramp12g_2019:
        courseE_farmer_ramp12G_b: Use an `if/else` block to help the farmer decide
          if she needs to turn right or left.
      courseE_playLab_challenge1:
        courseE_playLab_challenge1_a: |-
          Here are some things you could do when the player wins the game:

          -   Make the dinosaur vanish.
          -   Stop the squirrels.
          -   Make the squirrels and knight happy.
          -   Set a new background.
          -   Make the knight thank the player for helping.
          -   Make all of the actors vanish and show a "You Win!" message.
        courseE_playLab_challenge1_b: |-
          Here are some things you could do when the player loses the game:

          -   Make the knight vanish.
          -   Make the squirrels sad.
          -   Make the dinosaur say something.
          -   Set a new background.
          -   Make all of the actors vanish and show a "Game Over" message.
      courseE_playLab_scaffold1:
        courseE_playLab_scaffold1_a: The `set actor 1 to ??? image` block can be used
          to add an actor to the stage.
        courseE_playLab_scaffold1_b: Put the `set actor` block under `when run` to
          make your actor appear at the beginning of the program.
        courseE_playLab_scaffold1_c: Use `set ??? background` to choose a background
          for your scene.
      courseE_playLab_scaffold2:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow`
          event to change the direction the block controls.
        courseE_playLab_scaffold1_b: You should have four `when arrow` event blocks,
          with a direction to move underneath each.
        courseE_playLab_scaffold1_c: When you are done, you should be able to move
          your hero with the arrow keys!
      courseE_playLab_scaffold4:
        courseE_playLab_scaffold4_a: Use `score point` to add a point, and `remove
          point` to subtract one.
      courseE_playLab_scaffold5:
        courseE_playLab_scaffold5_a: To finish this level, you need to win or lose.
          Use a `end game as win` or `end game as loss` block to finish.
      courseF_artist_for1:
        courseF_artist_for1_a: |-
          Сможешь ли ты нарисовать что-то похожее:

          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for10:
        courseF_artist_for10_a: Изображение на этом рисунке было сделано с использованием
          счетчика для «установить альфу» и «счетчика» / 10 в качестве размера кисти.
        courseF_artist_for10_b: В изображении на этом рисунке использован поворот
          на 61 градусов.
        courseF_artist_for10_c: |-
          Хочешь знать, как было получено изображение-образец?

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for10_2018:
        courseF_artist_for10_a: Изображение на этом рисунке было сделано с использованием
          счетчика для «установить альфу» и «счетчика» / 10 в качестве размера кисти.
        courseF_artist_for10_b: В изображении на этом рисунке использован поворот
          на 61 градусов.
        courseF_artist_for10_c: |-
          Хочешь знать, как было получено изображение-образец?

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for10_2019:
        courseF_artist_for10_a: Изображение на этом рисунке было сделано с использованием
          счетчика для «установить альфу» и «счетчика» / 10 в качестве размера кисти.
        courseF_artist_for10_b: В изображении на этом рисунке использован поворот
          на 61 градусов.
        courseF_artist_for10_c: |-
          Хочешь знать, как было получено изображение-образец?

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for1_2018:
        courseF_artist_for1_a: |-
          Сможешь ли ты нарисовать что-то похожее:

          ![](https://images.code.org/efee6df2a8840c89fa535bef72e9e45f-image-1530131926453.png)
      courseF_artist_for1_2019:
        courseF_artist_for1_a: |-
          Сможешь ли ты нарисовать что-то похожее:

          ![](https://images.code.org/efee6df2a8840c89fa535bef72e9e45f-image-1530131926453.png)
      courseF_artist_for2:
        courseF_artist_for2_a: |-
          Используй «счетчик» внутри цикла «повторить» для определения длины треугольников .

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: Не забудь считать с шагом 10 в цикле for.
        courseF_artist_for2_c: |-
          Вот схема, по которой будет двигаться художник:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2018:
        courseF_artist_for2_a: |-
          Используй «счетчик» внутри цикла «повторить» для определения длины треугольников .

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: Не забудь считать с шагом 10 в цикле for.
        courseF_artist_for2_c: |-
          Вот схема, по которой будет двигаться художник:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2019:
        courseF_artist_for2_a: |-
          Используй «счетчик» внутри цикла «повторить» для определения длины треугольников .

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: Не забудь считать с шагом 10 в цикле for.
        courseF_artist_for2_c: |-
          Вот схема, по которой будет двигаться художник:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for3:
        courseF_artist_for3_a: |-
          Чтобы цикл for управлял твоим движением, обязательно используй значение «счетчика» в качестве расстояния в блоке «двигаться вперед».

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
      courseF_artist_for3_2018:
        courseF_artist_for3_a: |-
          Чтобы цикл for управлял твоим движением, обязательно используй значение «счетчика» в качестве расстояния в блоке «двигаться вперед».

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
      courseF_artist_for3_2019:
        courseF_artist_for3_a: |-
          Чтобы цикл for управлял твоим движением, обязательно используй значение «счетчика» в качестве расстояния в блоке «двигаться вперед».

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
      courseF_artist_for4:
        courseF_artist_for4_a: |-
          \*\* Каково наименьшее число, которое тебе понадобится?\
          Каково наибольшее число?\
          Насколько велико увеличение каждый раз?\*\*

          Вот вопросы, которые тебе нужно задать, чтобы заполнить пустые места в цикле for.
        courseF_artist_for4_b: Твой код будет очень похож на написанный в прошлой
          головоломке, но не забудь нарисовать на этот раз квадрат!
        courseF_artist_for4_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
      courseF_artist_for4_2018:
        courseF_artist_for4_a: |-
          \*\* Каково наименьшее число, которое тебе понадобится?\
          Каково наибольшее число?\
          Насколько велико увеличение каждый раз?\*\*

          Вот вопросы, которые тебе нужно задать, чтобы заполнить пустые места в цикле for.
        courseF_artist_for4_b: Твой код будет очень похож на написанный в прошлой
          головоломке, но не забудь нарисовать на этот раз квадрат!
        courseF_artist_for4_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
      courseF_artist_for4_2019:
        courseF_artist_for4_a: |-
          \*\* Каково наименьшее число, которое тебе понадобится?\
          Каково наибольшее число?\
          Насколько велико увеличение каждый раз?\*\*

          Вот вопросы, которые тебе нужно задать, чтобы заполнить пустые места в цикле for.
        courseF_artist_for4_b: Твой код будет очень похож на написанный в прошлой
          головоломке, но не забудь нарисовать на этот раз квадрат!
        courseF_artist_for4_c: Не бойся допустить ошибку! Добавляй блоки, запускай
          код и смотри, что получится, даже если и не решил еще головоломку.
      courseF_artist_for5:
        courseF_artist_for5_a: Внутренний цикл «повторить» для создания этой спирали
          не понадобится!
        courseF_artist_for5_b: Твой цикл for и блоки «двигаться» и «повернуть» могут
          остаться точно такими же.
      courseF_artist_for5_2018:
        courseF_artist_for5_a: Внутренний цикл «повторить» для создания этой спирали
          не понадобится!
        courseF_artist_for5_b: Твой цикл for и блоки «двигаться» и «повернуть» могут
          остаться точно такими же.
      courseF_artist_for5_2019:
        courseF_artist_for5_a: Внутренний цикл «повторить» для создания этой спирали
          не понадобится!
        courseF_artist_for5_b: Твой цикл for и блоки «двигаться» и «повернуть» могут
          остаться точно такими же.
      courseF_artist_for6:
        courseF_artist_for6_a: Твой цикл for будет считать от 15 до 300 с шагом 15.
        courseF_artist_for6_b: Вставь в этот цикл for блоки «двигаться вперед» и «повернуть».
        courseF_artist_for6_c: Все, что нужно изменить – количество градусов в блоке
          «повернуть».
      courseF_artist_for6_2018:
        courseF_artist_for6_a: Твой цикл for будет считать от 15 до 300 с шагом 15.
        courseF_artist_for6_b: Вставь в этот цикл for блоки «двигаться вперед» и «повернуть».
        courseF_artist_for6_c: Все, что нужно изменить – количество градусов в блоке
          «повернуть».
      courseF_artist_for6_2019:
        courseF_artist_for6_a: Твой цикл for будет считать от 15 до 300 с шагом 15.
        courseF_artist_for6_b: Вставь в этот цикл for блоки «двигаться вперед» и «повернуть».
        courseF_artist_for6_c: Все, что нужно изменить – количество градусов в блоке
          «повернуть».
      courseF_artist_for7:
        courseF_artist_for7_a: В этой головоломке ручка тоньше. Установи ее на «1»
          прежде, чем начать.
        courseF_artist_for7_b: Обрати внимание, что эта спираль поворачивает направо,
          а не налево!
        courseF_artist_for7_c: В этой головоломке цикл for считает от 15 до 300 с
          шагом 2.
        courseF_artist_for7_d: Это изображение сделано путем поворачивания ровно на
          89 градусов.
      courseF_artist_for7_2018:
        courseF_artist_for7_a: В этой головоломке ручка тоньше. Установи ее на «1»
          прежде, чем начать.
        courseF_artist_for7_b: Обрати внимание, что эта спираль поворачивает направо,
          а не налево!
        courseF_artist_for7_c: В этой головоломке цикл for считает от 15 до 300 с
          шагом 2.
        courseF_artist_for7_d: Это изображение сделано путем поворачивания ровно на
          89 градусов.
      courseF_artist_for7_2019:
        courseF_artist_for7_a: В этой головоломке ручка тоньше. Установи ее на «1»
          прежде, чем начать.
        courseF_artist_for7_b: Обрати внимание, что эта спираль поворачивает направо,
          а не налево!
        courseF_artist_for7_c: В этой головоломке цикл for считает от 15 до 300 с
          шагом 2.
        courseF_artist_for7_d: Это изображение сделано путем поворачивания ровно на
          89 градусов.
      courseF_artist_for8:
        courseF_artist_for8_a: Оставь все остальное в своем коде неизменным, измени
          только угол поворота.
        courseF_artist_for8_b: Выбери при желании для спирали другой цвет!
      courseF_artist_for8_2018:
        courseF_artist_for8_a: Оставь все остальное в своем коде неизменным, измени
          только угол поворота.
        courseF_artist_for8_b: Выбери при желании для спирали другой цвет!
      courseF_artist_for8_2019:
        courseF_artist_for8_a: Оставь все остальное в своем коде неизменным, измени
          только угол поворота.
        courseF_artist_for8_b: Выбери при желании для спирали другой цвет!
      courseF_artist_for9:
        courseF_artist_for9_a: Если вставить в цикл for блок «установить альфу» и
          использовать для ее изменения переменную «счетчик», можно создать рисунок,
          похожий на этот.
        courseF_artist_for9_b: Блок «установить альфу» меняет прозрачность цвета.
          Чем меньше это значение, тем более цвет прозрачен.
      courseF_artist_for9_2018:
        courseF_artist_for9_a: Если вставить в цикл for блок «установить альфу» и
          использовать для ее изменения переменную «счетчик», можно создать рисунок,
          похожий на этот.
        courseF_artist_for9_b: Блок «установить альфу» меняет прозрачность цвета.
          Чем меньше это значение, тем более цвет прозрачен.
      courseF_artist_for9_2019:
        courseF_artist_for9_a: Если вставить в цикл for блок «установить альфу» и
          использовать для ее изменения переменную «счетчик», можно создать рисунок,
          похожий на этот.
        courseF_artist_for9_b: Блок «установить альфу» меняет прозрачность цвета.
          Чем меньше это значение, тем более цвет прозрачен.
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_a: "«Ширина ручки» составляет 1. У первого квадрата
          сторона 50 точек, и каждый квадрат на 50 точек шире, чем предыдущий."
        courseF_artist_for_challenge1_b: Прозрачность на кисти всегда составляет «счетчик»/2.
        courseF_artist_for_challenge1_c: Нарисовав каждый квадрат, не забудь прыгнуть
          назад, повернуть, прыгнуть снова, а затем повернуть назад!
        courseF_artist_for_challenge1_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_a: "«Ширина ручки» составляет 1. У первого квадрата
          сторона 50 точек, и каждый квадрат на 50 точек шире, чем предыдущий."
        courseF_artist_for_challenge1_b: Прозрачность на кисти всегда составляет «счетчик»/2.
        courseF_artist_for_challenge1_c: Нарисовав каждый квадрат, не забудь прыгнуть
          назад, повернуть, прыгнуть снова, а затем повернуть назад!
        courseF_artist_for_challenge1_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_a: "«Ширина ручки» составляет 1. У первого квадрата
          сторона 50 точек, и каждый квадрат на 50 точек шире, чем предыдущий."
        courseF_artist_for_challenge1_b: Прозрачность на кисти всегда составляет «счетчик»/2.
        courseF_artist_for_challenge1_c: Нарисовав каждый квадрат, не забудь прыгнуть
          назад, повернуть, прыгнуть снова, а затем повернуть назад!
        courseF_artist_for_challenge1_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: 'Цикл for считает от 5 до 250 с шагом 2. '
        courseF_artist_for_challenge2_a: Изменение цвета происходит в результате использования
          блока «установить цвет красным, зеленым, синим».  Прозрачность красного
          устанавливается постоянно на 255, прозрачность зеленого всегда определяется
          значением «счетчика», а прозрачность синего всегда определяется по формуле
          «255 – значение счетчика».
        courseF_artist_for_challenge2_b: Используемый для этого код проще, чем можно
          подумать.  Просто установи цвет внутри цикла, переместись вперед, а затем
          поверни.
        courseF_artist_for_challenge2_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: 'Цикл for считает от 5 до 250 с шагом 2. '
        courseF_artist_for_challenge2_a: Изменение цвета происходит в результате использования
          блока «установить цвет красным, зеленым, синим».  Прозрачность красного
          устанавливается постоянно на 255, прозрачность зеленого всегда определяется
          значением «счетчика», а прозрачность синего всегда определяется по формуле
          «255 – значение счетчика».
        courseF_artist_for_challenge2_b: Используемый для этого код проще, чем можно
          подумать.  Просто установи цвет внутри цикла, переместись вперед, а затем
          поверни.
        courseF_artist_for_challenge2_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: 'Цикл for считает от 5 до 250 с шагом 2. '
        courseF_artist_for_challenge2_a: Изменение цвета происходит в результате использования
          блока «установить цвет красным, зеленым, синим».  Прозрачность красного
          устанавливается постоянно на 255, прозрачность зеленого всегда определяется
          значением «счетчика», а прозрачность синего всегда определяется по формуле
          «255 – значение счетчика».
        courseF_artist_for_challenge2_b: Используемый для этого код проще, чем можно
          подумать.  Просто установи цвет внутри цикла, переместись вперед, а затем
          поверни.
        courseF_artist_for_challenge2_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_fwp1:
        courseF_artist_fwp1_c: Вставь весь код для рисования квадрат в редактор функций.
        courseF_artist_fwp1_a: Помни, чтобы тебе потребуется поворачивать на 90 градусов,
          чтобы нарисовать квадрат.
        courseF_artist_fwp1_b: Тебе потребуется повторить только столько раз, сколько
          сторон у квадрата.
      courseF_artist_fwp2:
        courseF_artist_fwp2_a: Тебе необходимо нажать на кнопку «редактировать», чтобы
          попасть в функцию.  Оказавшись в функции, добавь параметр, называемый «длиной»,
          и используй ее внутри блока «двигаться вперед»!
        courseF_artist_fwp2_b: Вызывая функцию, используй цикл for для создания оптимального
          кода!
      courseF_artist_fwp3:
        courseF_artist_fwp3_a: Задача станет легче, если вставить это все в цикл for.
        courseF_artist_fwp3_b: |-
          Не забудь поворачиваться между квадратами на 90 градусов!

          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp4:
        courseF_artist_fwp4_b: Не забудь \*\*добавить \*\* параметр.  Не удаляй тот,
          который уже там есть!
        courseF_artist_fwp4_c: Чтобы нарисовать эти фигуры,тебе потребуется вызвать
          свою функцию трижды.
      courseF_artist_fwp5:
        courseF_artist_fwp5_d: Цикл for тебе действительно здесь пригодится!
        courseF_artist_fwp5_c: Тебе потребуется немного подредактировать функцию,
          поскольку твоя прежняя функция поворачивала художника после рисования каждой
          стороны направо, а для этого изображения необходим поворот налево.
        courseF_artist_fwp5_a: Длина стороны каждой фигуры в 7 раз превышает количество
          ее сторон.
        courseF_artist_fwp5_b: Не забудь перемещаться на 100 точек между фигурами.
      courseF_artist_fwp6:
        courseF_artist_fwp6_a: Запусти программу несколько раз, чтобы сообразить,
          как функция работает с разными параметрами.
        courseF_artist_fwp6_b: Добавлять какие-либо блоки «двигаться» или «повернуть»
          для завершения этого кода тебе не потребуется.
      courseF_artist_fwp7:
        courseF_artist_fwp7_a: Растерялся, попробовав пару идей? Попробуй нажать кнопку
          «Начать сначала» в верхнем правом углу.
        courseF_artist_fwp7_b: Твою новую «минимальную» переменную следует поместить
          в первое свободное место в твоем цикле for внутри функции.
      courseF_artist_fwp8:
        courseF_artist_fwp8_a: Если твоя функция верна, тебе не придется менять ее
          для этой головоломки.
        courseF_artist_fwp8_b: Единственное, что тебе придется сделать между вызовами
          функции – изменить цвет линии.
      courseF_artist_fwp9:
        courseF_artist_fwp9_a: |-
          Попробуй один из этих рисунков.
          ![](<https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png>)
      courseF_artist_fwp_challenge1:
        courseF_artist_fwp_challenge1_b: Это ряд многоугольников со сторонами, равными
          (в точках) значению счетчика.
        courseF_artist_fwp_challenge1_c: Каждый восьмиугольник вызывается изнутри
          цикла for, значение в котором меняется от 3 до 6 с шагом 1.  Какие фигуры
          можно нарисовать?
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: Это ряд восьмиугольников со сторонами, равными
          (в точках) значению счетчика.
        courseF_artist_fwp_challenge1_c: 'Каждый восьмиугольник вызывается изнутри
          цикла, значение в котором меняется от 200 до 2, с шагом 2. '
        courseF_artist_fwp_challenge1_d: 'Не забудь поворачивать на 22,5 градуса в
          конце каждой итерации. '
        courseF_artist_fwp_challenge1_e: Как цвет каждого восьмиугольника, так и ширина
          пера управляются переменной «счетчик».
        courseF_artist_fwp_challenge1_f: |-
          **Решение:**

          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_variables10:
        courseF_artist_variables10_a: Повеселись с этим уровнем! Посмотри, что способны
          сделать с твоим кодом даже мелкие изменения.
        courseF_artist_variables10_b: Попробуй множество вариантов и запусти код много
          раз.
      courseF_artist_variables10_2018:
        courseF_artist_variables10_a: Повеселись с этим уровнем! Посмотри, что способны
          сделать с твоим кодом даже мелкие изменения.
        courseF_artist_variables10_b: Попробуй множество вариантов и запусти код много
          раз.
      courseF_artist_variables10_2019:
        courseF_artist_variables10_a: Повеселись с этим уровнем! Посмотри, что способны
          сделать с твоим кодом даже мелкие изменения.
        courseF_artist_variables10_b: Попробуй множество вариантов и запусти код много
          раз.
      courseF_artist_variables2:
        courseF_artist_variables2_a: Не забудь перемещаться вперед после рисования
          каждого треугольника.
        courseF_artist_variables2_b: Твой новый цикл будет содержать цикл для твоего
          треугольника, а также команду «двигаться вперед».
      courseF_artist_variables2_2018:
        courseF_artist_variables2_a: Не забудь перемещаться вперед после рисования
          каждого треугольника.
        courseF_artist_variables2_b: Твой новый цикл будет содержать цикл для твоего
          треугольника, а также команду «двигаться вперед».
      courseF_artist_variables2_2019:
        courseF_artist_variables2_a: Не забудь перемещаться вперед после рисования
          каждого треугольника.
        courseF_artist_variables2_b: Твой новый цикл будет содержать цикл для твоего
          треугольника, а также команду «двигаться вперед».
      courseF_artist_variables3:
        courseF_artist_variables3_a: 'Переменная «длина» будет использована в двух
          местах кода: в длине стороны треугольника и в расстоянии для перемещения
          между треугольниками.'
        courseF_artist_variables3_b: 'Блок с числом 50 будет только в одном месте:
          после блока «установить переменную длину».'
      courseF_artist_variables3_2018:
        courseF_artist_variables3_a: 'Переменная «длина» будет использована в двух
          местах кода: в длине стороны треугольника и в расстоянии для перемещения
          между треугольниками.'
        courseF_artist_variables3_b: 'Блок номеров со значением 50 должен находиться
          только в одном месте: после блока "установить длину".'
      courseF_artist_variables3_2019:
        courseF_artist_variables3_a: 'Переменная «длина» будет использована в двух
          местах кода: в длине стороны треугольника и в расстоянии для перемещения
          между треугольниками.'
        courseF_artist_variables3_b: 'Блок номеров со значением 50 должен находиться
          только в одном месте: после блока "установить длину".'
      courseF_artist_variables4:
        courseF_artist_variables4_a: Твой код не будет сильно отличаться от кода в
          прошлой головоломке, за исключением того, что тебе потребуется повернуть
          художника, чтобы он прыгнул вниз, а затем повернуть его обратно, чтобы подготовить
          к прыжку вперед.
        courseF_artist_variables4_c: |-
          Художник будет двигаться по следующей схеме:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables4_2018:
        courseF_artist_variables4_a: Подготовь его к тому, чтобы нарисовать следующий
          треугольник.
        courseF_artist_variables4_c: |-
          Художник будет двигаться по следующей схеме:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: |-
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">50</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="controls_repeat_ext">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">120</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="jump">
                              <title name="DIR">jumpForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">90</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="jump">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables4_2019:
        courseF_artist_variables4_a: Your code won't be much different than it was
          in the last puzzle, except that you will need to turn the artist to jump
          down, then turn him back to get ready to draw the next triangle.
        courseF_artist_variables4_c: |-
          Художник будет двигаться по следующей схеме:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: |-
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">50</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="controls_repeat_ext">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">120</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="jump">
                              <title name="DIR">jumpForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">90</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="jump">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables5:
        courseF_artist_variables5_a: Вторая половина кода должна выглядеть почти так
          же, как первая, за исключением того, что ты будешь поворачивать _налево_,
          прыгать, а затем поворачивать _направо_.
        courseF_artist_variables5_b: Первая половина кода нарисует три треугольника,
          а вторая половина нарисует еще три.
        courseF_artist_variables5_c: Начни с копирования кода первой половины своей
          программы, а затем измени его, чтобы он рисовал показанный рисунок.
        courseF_artist_variables5_d: |-
          Художник будет двигаться по следующей схеме:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2018:
        courseF_artist_variables5_a: Вторая половина кода должна выглядеть почти так
          же, как первая, за исключением того, что ты будешь поворачивать _налево_,
          прыгать, а затем поворачивать _направо_.
        courseF_artist_variables5_b: Первая половина кода нарисует три треугольника,
          а вторая половина нарисует еще три.
        courseF_artist_variables5_c: Начни с копирования кода первой половины своей
          программы, а затем измени его, чтобы он рисовал показанный рисунок.
        courseF_artist_variables5_d: |-
          Художник будет двигаться по следующей схеме:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2019:
        courseF_artist_variables5_a: Вторая половина кода должна выглядеть почти так
          же, как первая, за исключением того, что ты будешь поворачивать _налево_,
          прыгать, а затем поворачивать _направо_.
        courseF_artist_variables5_b: Первая половина кода нарисует три треугольника,
          а вторая половина нарисует еще три.
        courseF_artist_variables5_c: Начни с копирования кода первой половины своей
          программы, а затем измени его, чтобы он рисовал показанный рисунок.
        courseF_artist_variables5_d: |-
          Художник будет двигаться по следующей схеме:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables6:
        courseF_artist_variables6_a: Благодаря переменным тебе придется изменить лишь
          одно число наверху, чтобы все получилось.
        courseF_artist_variables6_b: Тебе потребуется заменить число в блоке на 50,
          но ничего другого в коде менять не придется.
      courseF_artist_variables6_2018:
        courseF_artist_variables6_a: Благодаря переменным тебе придется изменить лишь
          одно число наверху, чтобы все получилось.
        courseF_artist_variables6_b: Тебе потребуется заменить число в блоке на 50,
          но ничего другого в коде менять не придется.
      courseF_artist_variables6_2019:
        courseF_artist_variables6_a: Благодаря переменным тебе придется изменить лишь
          одно число наверху, чтобы все получилось.
        courseF_artist_variables6_b: Тебе потребуется заменить число в блоке на 50,
          но ничего другого в коде менять не придется.
      courseF_artist_variables6a:
        courseF_artist_variables6a_a: Не забудь использовать переменную «длина» вместо
          фактического числа для решения этой головоломки.
        courseF_artist_variables6a_b: Этот код будет очень похож на твой код для рисования
          треугольников, только фигуры будут другими!
        courseF_artist_variables6a_c: Напиши сначала код для одного квадрата, а затем
          добавь код для перемещения между квадратами. Наконец, добавь цикл для всех
          команд!
        courseF_artist_variables6a_d: |-
          Вот схема, по которой ты будешь двигаться:

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2018:
        courseF_artist_variables6a_a: Не забудь использовать переменную «длина» вместо
          фактического числа для решения этой головоломки.
        courseF_artist_variables6a_b: Этот код будет очень похож на твой код для рисования
          треугольников, только фигуры будут другими!
        courseF_artist_variables6a_c: Напиши сначала код для одного квадрата, а затем
          добавь код для перемещения между квадратами. Наконец, добавь цикл для всех
          команд!
        courseF_artist_variables6a_d: |-
          Вот схема, по которой ты будешь двигаться:

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2019:
        courseF_artist_variables6a_a: Не забудь использовать переменную «длина» вместо
          фактического числа для решения этой головоломки.
        courseF_artist_variables6a_b: Этот код будет очень похож на твой код для рисования
          треугольников, только фигуры будут другими!
        courseF_artist_variables6a_c: Напиши сначала код для одного квадрата, а затем
          добавь код для перемещения между квадратами. Наконец, добавь цикл для всех
          команд!
        courseF_artist_variables6a_d: |-
          Вот схема, по которой ты будешь двигаться:

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables7:
        courseF_artist_variables7_a: Начни свой код с использования блока «установить
          длину». Установи длину на 150.
        courseF_artist_variables7_b: Можешь использовать цикл «повторить», чтобы сделать
          код для рисования треугольника короче.
        courseF_artist_variables7_c: Тебе потребуется повернуть налево на 120 градусов,
          чтобы сделать углы треугольника.
      courseF_artist_variables7_2018:
        courseF_artist_variables7_a: Начни свой код с использования блока «установить
          длину». Установи длину на 150.
        courseF_artist_variables7_b: Можешь использовать цикл «повторить», чтобы сделать
          код для рисования треугольника короче.
        courseF_artist_variables7_c: Тебе потребуется повернуть налево на 120 градусов,
          чтобы сделать углы треугольника.
      courseF_artist_variables7_2019:
        courseF_artist_variables7_a: Начни свой код с использования блока «установить
          длину». Установи длину на 150.
        courseF_artist_variables7_b: Можешь использовать цикл «повторить», чтобы сделать
          код для рисования треугольника короче.
        courseF_artist_variables7_c: Тебе потребуется повернуть налево на 120 градусов,
          чтобы сделать углы треугольника.
      courseF_artist_variables8:
        courseF_artist_variables8_b: Не забудь начать свой код рисования треугольника
          с блока «установить длину», и начни со 150 точек.
        courseF_artist_variables8_c: Обязательно используй цикл «повторить», чтобы
          нарисовать треугольник.
        courseF_artist_variables8_a: "Попробуй вложить в конце в свой цикл набор \n\n<xml>\n<block
          type=\"variables_set\" inline=\"false\">\n                        <title
          name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n
          \                         <block type=\"math_arithmetic\" inline=\"true\">\n
          \                           <title name=\"OP\">ADD</title>\n                            <value
          name=\"A\">\n                              <block type=\"variables_get\">\n
          \                               <title name=\"VAR\">length</title>\n                              </block>\n
          \                           </value>\n                            <value
          name=\"B\">\n                              <block type=\"math_number\">\n
          \                               <title name=\"NUM\">10</title>\n                              </block>\n
          \                           </value>\n                          </block>\n
          \                       </value>\n                      </block>\n</xml>\n\nблоков."
      courseF_artist_variables8_2018:
        courseF_artist_variables8_b: Не забудь начать свой код рисования треугольника
          с блока «установить длину», и начни со 150 точек.
        courseF_artist_variables8_c: Обязательно используй цикл «повторить», чтобы
          нарисовать треугольник.
        courseF_artist_variables8_a: "Попробуй вложить в конце в свой цикл набор \n\n<xml>\n<block
          type=\"variables_set\" inline=\"false\">\n                        <title
          name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n
          \                         <block type=\"math_arithmetic\" inline=\"true\">\n
          \                           <title name=\"OP\">ADD</title>\n                            <value
          name=\"A\">\n                              <block type=\"variables_get\">\n
          \                               <title name=\"VAR\">length</title>\n                              </block>\n
          \                           </value>\n                            <value
          name=\"B\">\n                              <block type=\"math_number\">\n
          \                               <title name=\"NUM\">10</title>\n                              </block>\n
          \                           </value>\n                          </block>\n
          \                       </value>\n                      </block>\n</xml>\n\nблоков."
      courseF_artist_variables8_2019:
        courseF_artist_variables8_b: Не забудь начать свой код рисования треугольника
          с блока «установить длину», и начни со 150 точек.
        courseF_artist_variables8_c: Обязательно используй цикл «повторить», чтобы
          нарисовать треугольник.
        courseF_artist_variables8_a: "Попробуй вложить в конце в свой цикл набор \n\n<xml>\n<block
          type=\"variables_set\" inline=\"false\">\n                        <title
          name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n
          \                         <block type=\"math_arithmetic\" inline=\"true\">\n
          \                           <title name=\"OP\">ADD</title>\n                            <value
          name=\"A\">\n                              <block type=\"variables_get\">\n
          \                               <title name=\"VAR\">length</title>\n                              </block>\n
          \                           </value>\n                            <value
          name=\"B\">\n                              <block type=\"math_number\">\n
          \                               <title name=\"NUM\">10</title>\n                              </block>\n
          \                           </value>\n                          </block>\n
          \                       </value>\n                      </block>\n</xml>\n\nблоков."
      courseF_artist_variables9:
        courseF_artist_variables9_a: Все, что тебе нужно сделать для этой головоломки
          – изменить количество повторов цикла.
        courseF_artist_variables9_b: Проследи за тем, чтобы блоки, увеличивающие «длину»,
          находились внутри цикла, чтобы линии становились все длиннее.
      courseF_artist_variables9_2018:
        courseF_artist_variables9_a: Все, что тебе нужно сделать для этой головоломки
          – изменить количество повторов цикла.
        courseF_artist_variables9_b: Проследи за тем, чтобы блоки, увеличивающие «длину»,
          находились внутри цикла, чтобы линии становились все длиннее.
      courseF_artist_variables9_2019:
        courseF_artist_variables9_a: Все, что тебе нужно сделать для этой головоломки
          – изменить количество повторов цикла.
        courseF_artist_variables9_b: Проследи за тем, чтобы блоки, увеличивающие «длину»,
          находились внутри цикла, чтобы линии становились все длиннее.
      courseF_artist_variablesFP:
        courseF_artist_variablesFP_a: |-
          Попробуй один из этих рисунков.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2018:
        courseF_artist_variablesFP_a: |-
          Попробуй один из этих рисунков.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2019:
        courseF_artist_variablesFP_a: |-
          Попробуй один из этих рисунков.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variables_challenge1:
        courseF_artist_variables_challenge1_a: Длина каждой вертикальной линии – «10».
          Длина каждой горизонтальной линии определяется переменной «длина».
        courseF_artist_variables_challenge1_b: Тебе потребуется увеличить значение
          «длины» на 10 **дважды** внутри цикла.
        courseF_artist_variables_challenge1_c: Для выполнения этой схемы тебе потребуется
          дважды повернуть налево, дважды повернуть направо и переместиться вперед
          в общей сложности четыре раза.
        courseF_artist_variables_challenge1_d: |-
          В этой головоломке используется всего один цикл. Безо всяких переменных аналогичный путь мог бы быть просто зигзагообразным.

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          Если столкнешься с проблемой, начни создавать это изображение, а затем постарайся понять, где можно использовать переменные для изменения длины горизонтальных линий.
        courseF_artist_variables_challenge1_e: |-
          А вот и решение.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge1_2018:
        courseF_artist_variables_challenge1_a: Длина каждой вертикальной линии – «10».
          Длина каждой горизонтальной линии определяется переменной «длина».
        courseF_artist_variables_challenge1_b: Тебе потребуется увеличить значение
          «длины» на 10 **дважды** внутри цикла.
        courseF_artist_variables_challenge1_c: Для выполнения этой схемы тебе потребуется
          дважды повернуть налево, дважды повернуть направо и переместиться вперед
          в общей сложности четыре раза.
        courseF_artist_variables_challenge1_d: |-
          В этой головоломке используется всего один цикл. Безо всяких переменных аналогичный путь мог бы быть просто зигзагообразным.

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          Если столкнешься с проблемой, начни создавать это изображение, а затем постарайся понять, где можно использовать переменные для изменения длины горизонтальных линий.
        courseF_artist_variables_challenge1_e: |-
          А вот и решение.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge1_2019:
        courseF_artist_variables_challenge1_a: Длина каждой вертикальной линии – «10».
          Длина каждой горизонтальной линии определяется переменной «длина».
        courseF_artist_variables_challenge1_b: Тебе потребуется увеличить значение
          «длины» на 10 **дважды** внутри цикла.
        courseF_artist_variables_challenge1_c: Для выполнения этой схемы тебе потребуется
          дважды повернуть налево, дважды повернуть направо и переместиться вперед
          в общей сложности четыре раза.
        courseF_artist_variables_challenge1_d: |-
          В этой головоломке используется всего один цикл. Безо всяких переменных аналогичный путь мог бы быть просто зигзагообразным.

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          Если столкнешься с проблемой, начни создавать это изображение, а затем постарайся понять, где можно использовать переменные для изменения длины горизонтальных линий.
        courseF_artist_variables_challenge1_e: |-
          А вот и решение.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_a: Переменные полезны, поскольку их можно
          увеличивать при повторе цикла.
        courseF_artist_variables_challenge2_c: Использование одной переменной для
          «сторон» и другой для «длины» делает код более четким, так как можно повторять
          один и тот же код много раз вместо того, чтобы создавать новую копию для
          каждого набора чисел.
        courseF_artist_variables_challenge2_d: |-
          **Решение:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_a: Переменные полезны, поскольку их можно
          увеличивать при повторе цикла.
        courseF_artist_variables_challenge2_c: Использование одной переменной для
          «сторон» и другой для «длины» делает код более четким, так как можно повторять
          один и тот же код много раз вместо того, чтобы создавать новую копию для
          каждого набора чисел.
        courseF_artist_variables_challenge2_d: |-
          **Решение:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_a: Переменные полезны, поскольку их можно
          увеличивать при повторе цикла.
        courseF_artist_variables_challenge2_c: Использование одной переменной для
          «сторон» и другой для «длины» делает код более четким, так как можно повторять
          один и тот же код много раз вместо того, чтобы создавать новую копию для
          каждого набора чисел.
        courseF_artist_variables_challenge2_d: |-
          **Решение:**

          ![Solution](https://images.code.org/1236e605d55d8cc9beafbca5425c8f75-image-1543523947735.png)
      courseF_bee_conditionals10:
        courseF_bee_conditionals10_a: Представь себе, что облака скрывают все места.
          Поможет ли это упростить твой код?
        courseF_bee_conditionals10_b: Используй блок «если/или же» для проверки каждого
          места на наличие нектара и меда.
        courseF_bee_conditionals10_c: Не поможет ли цикл «пока» добраться до конца
          пути?
      courseF_bee_conditionals2:
        courseF_bee_conditionals2_a: Иногда под облачком будет цветок, иногда нет.  Чтобы
          твой код работал в обоих случаях, обязательно используй оператор «если».
        courseF_bee_conditionals2_b: Попробуй записать последовательность, позволяющую
          добраться во все места, а затем добавь оператор «если».
      courseF_bee_conditionals3:
        courseF_bee_conditionals3_a: Обязательно используй оператор «если» для проверки
          каждого места и выяснения, что там – цветок или ничего.
        courseF_bee_conditionals3_b: Тебе пригодится цикл «повторить», так что потребуется
          только один блок «если».
        courseF_bee_conditionals3_c: Попробуй написать сначала код для проверки первого
          облачка. Сможешь написать цикл, что проверить их все?
      courseF_bee_conditionals4:
        courseD_bee_conditionals4_a: Ты можешь по-прежнему исходить из того, что облачко
          имеется над каждым местом, хотя ты и можешь видеть весь путь.
        courseF_bee_conditionals4_b: Используй оператор «если» внутри своего цикла
          для проверки каждого места на наличие нектара.
        courseF_bee_conditionals4_c: Пользуясь блоком «пока впереди имеется путь»,
          переместись вперед и проверь, есть ли цветок. Что должна сделать пчела,
          «если имеется цветок»?
      courseF_bee_conditionals5:
        courseF_bee_conditionals5_a: Представь себе, что каждая сторона прямоугольного
          пути сама является путем. Снабди вложенный цикл блоком «повторить» снаружи
          и блоком «пока впереди имеется путь» внутри. Сколько путей пчеле потребуется
          пролететь вниз, если ей необходимо пролететь каждую сторону с цветком?
        courseF_bee_conditionals5_b: Внутри блока «пока впереди имеется путь» тебе
          потребуется переместиться вперед и проверить, имеется ли цветок. Как проверить,
          имеется ли цветок? Что тебе следует сделать, если цветок имеется?
        courseF_bee_conditionals5_c: У прямоугольника 3 стороны с цветами, поэтому
          код должен «повториться 3 раза». При каждом повторе пчела должна будет продолжать
          двигаться по пути, «пока впереди имеется путь».
        courseF_bee_conditionals5_d: Для продолжения движения по пути пчела должна
          будет перемещаться вперед. При этом она должна будет проверять, имеется
          ли цветок. Что ей следует сделать, если цветок имеется?
      courseF_bee_conditionals8:
        courseF_bee_conditionals8_a: "\\*\\* Помни: \\*\\* эта головоломка меняется
          при каждом запуске.  \n\nДля выполнения этого задания тебе потребуется блок
          условной инструкции («если» или «если/или же»)."
        courseF_bee_conditionals8_b: |-
          Эта головоломка сложна, потому что невозможно проверить пустые квадраты, нектар _и_ мед с помощью всего одной условной инструкции.

          Проверь на наличие нектара и меда только в конце пути.
        courseF_bee_conditionals8_c: Что произойдет, если пропустить первый цветок,
          а затем использовать блок «пока путь впереди»?
      courseF_bee_for1:
        courseF_bee_for1_a: Перетащи лиловый блок с числом на пусто место в цикле
          «повторить», чтобы сказать ему, сколько должно быть повторов.
        courseF_bee_for1_b: Тебе потребуются два блока в цикле «повторить», чтобы
          собрать весь нектар.
      courseF_bee_for10:
        courseF_bee_for10_a: Сможешь ли ты найти связь между количеством шагов, которые
          нужно выполнить, и количеством нектара, которое нужно собрать?
        courseF_bee_for10_b: В первой группе цветов в общей сложности **14 цветов**.
          Чтобы добраться до этой группы цветов, пчела должна пролететь вниз на **7
          квадратов** (или на 14 квадратов, деленных на 2.) Сколько цветов в следующей
          группе, и сколько квадратов придется пролететь пчеле, чтобы добраться до
          этой группы?
        courseF_bee_for10_c: "В этой головоломке в первой группе цветов **14** цветов,
          во второй – **10** цветов, в третьей – **6** цветов и в четвертой – **2**
          цветка.\n\nОбрати внимание, что на этом рисунке **7** красных квадратов,
          **5** оранжевых квадратов, **3** зеленых квадрата и **1** синий блок. \n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\nКак связаны эти цифры?"
        courseF_bee_for10_d: Тебе понадобятся 2 цикла повтора, в одном из которых
          будет использоваться блок «математика».
      courseF_bee_for10_2018:
        courseF_bee_for10_a: Сможешь ли ты найти связь между количеством шагов, которые
          нужно выполнить, и количеством нектара, которое нужно собрать?
        courseF_bee_for10_b: В первой группе цветов в общей сложности **14 цветов**.
          Чтобы добраться до этой группы цветов, пчела должна пролететь вниз на **7
          квадратов** (или на 14 квадратов, деленных на 2.) Сколько цветов в следующей
          группе, и сколько квадратов придется пролететь пчеле, чтобы добраться до
          этой группы?
        courseF_bee_for10_c: "В этой головоломке в первой группе цветов **14** цветов,
          во второй – **10** цветов, в третьей – **6** цветов и в четвертой – **2**
          цветка.\n\nОбрати внимание, что на этом рисунке **7** красных квадратов,
          **5** оранжевых квадратов, **3** зеленых квадрата и **1** синий блок. \n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\nКак связаны эти цифры?"
        courseF_bee_for10_d: Тебе понадобятся 2 цикла повтора, в одном из которых
          будет использоваться блок «математика».
      courseF_bee_for10_2019:
        courseF_bee_for10_a: Сможешь ли ты найти связь между количеством шагов, которые
          нужно выполнить, и количеством нектара, которое нужно собрать?
        courseF_bee_for10_b: В первой группе цветов в общей сложности **14 цветов**.
          Чтобы добраться до этой группы цветов, пчела должна пролететь вниз на **7
          квадратов** (или на 14 квадратов, деленных на 2.) Сколько цветов в следующей
          группе, и сколько квадратов придется пролететь пчеле, чтобы добраться до
          этой группы?
        courseF_bee_for10_c: "В этой головоломке в первой группе цветов **14** цветов,
          во второй – **10** цветов, в третьей – **6** цветов и в четвертой – **2**
          цветка.\n\nОбрати внимание, что на этом рисунке **7** красных квадратов,
          **5** оранжевых квадратов, **3** зеленых квадрата и **1** синий блок. \n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\nКак связаны эти цифры?"
        courseF_bee_for10_d: Тебе понадобятся 2 цикла повтора, в одном из которых
          будет использоваться блок «математика».
      courseF_bee_for11:
        courseF_bee_for11_a: |-
          Насколько 12 меньше 15?\
          Насколько 9 меньше 12?

          Видишь ли ты закономерность?
      courseF_bee_for11_2018:
        courseF_bee_for11_a: |-
          Насколько 12 меньше 15?\
          Насколько 9 меньше 12?

          Видишь ли ты закономерность?
      courseF_bee_for11_2019:
        courseF_bee_for11_a: |-
          Насколько 12 меньше 15?\
          Насколько 9 меньше 12?

          Видишь ли ты закономерность?
      courseF_bee_for1_2018:
        courseF_bee_for1_a: Перетащи лиловый блок с числом на пусто место в цикле
          «повторить», чтобы сказать ему, сколько должно быть повторов.
        courseF_bee_for1_b: Тебе потребуются два блока в цикле «повторить», чтобы
          собрать весь нектар.
      courseF_bee_for1_2019:
        courseF_bee_for1_a: Перетащи лиловый блок с числом на пусто место в цикле
          «повторить», чтобы сказать ему, сколько должно быть повторов.
        courseF_bee_for1_b: Тебе потребуются два блока в цикле «повторить», чтобы
          собрать весь нектар.
      courseF_bee_for2:
        courseF_bee_for2_a: Если запутаешься, работай над цветками поочередно и тестируй
          программу почаще.
        courseF_bee_for2_b: Не забывай перемещаться вперед между всеми циклами, чтобы
          добраться до каждого цветка.
      courseF_bee_for2_2018:
        courseF_bee_for2_a: Если запутаешься, работай над цветками поочередно и тестируй
          программу почаще.
        courseF_bee_for2_b: Не забывай перемещаться вперед между всеми циклами, чтобы
          добраться до каждого цветка.
      courseF_bee_for2_2019:
        courseF_bee_for2_a: Если запутаешься, работай над цветками поочередно и тестируй
          программу почаще.
        courseF_bee_for2_b: Не забывай перемещаться вперед между всеми циклами, чтобы
          добраться до каждого цветка.
      courseF_bee_for4:
        courseF_bee_for4_a: Используй цикл for, значение в котором меняется от 1 до
          7 с шагом 1, чтобы решить эту головоломку.
        courseF_bee_for4_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for4_c: Обязательно используй переменную «счетчик» в своем вложенном
          цикле «повторить», чтобы получить достаточно нектара!
      courseF_bee_for4_2018:
        courseF_bee_for4_a: Используй цикл for, значение в котором меняется от 1 до
          7 с шагом 1, чтобы решить эту головоломку.
        courseF_bee_for4_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for4_c: Обязательно используй переменную «счетчик» в своем вложенном
          цикле «повторить», чтобы получить достаточно нектара!
      courseF_bee_for4_2019:
        courseF_bee_for4_a: Используй цикл for, значение в котором меняется от 1 до
          7 с шагом 1, чтобы решить эту головоломку.
        courseF_bee_for4_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for4_c: Обязательно используй переменную «счетчик» в своем вложенном
          цикле «повторить», чтобы получить достаточно нектара!
      courseF_bee_for5:
        courseF_bee_for5_a: На этот раз твой блок «двигаться вперед» и блок «получить
          нектар» должны будут находиться в отдельных циклах «повторить», при этом
          оба в одном и том же цикле for.
        courseF_bee_for5_b: Используй переменную «счетчик» в каждом цикле для того,
          чтобы пчела перемещалась между цветами на различные расстояния.
        courseF_bee_for5_c: Не бойся допустить ошибку! Добавляй блоки, запускай код
          и смотри, что получится, даже если и не решил еще головоломку.
      courseF_bee_for5_2018:
        courseF_bee_for5_a: На этот раз твой блок «двигаться вперед» и блок «получить
          нектар» должны будут находиться в отдельных циклах «повторить», при этом
          оба в одном и том же цикле for.
        courseF_bee_for5_b: Используй переменную «счетчик» в каждом цикле для того,
          чтобы пчела перемещалась между цветами на различные расстояния.
        courseF_bee_for5_c: Не бойся допустить ошибку! Добавляй блоки, запускай код
          и смотри, что получится, даже если и не решил еще головоломку.
      courseF_bee_for5_2019:
        courseF_bee_for5_a: На этот раз твой блок «двигаться вперед» и блок «получить
          нектар» должны будут находиться в отдельных циклах «повторить», при этом
          оба в одном и том же цикле for.
        courseF_bee_for5_b: Используй переменную «счетчик» в каждом цикле для того,
          чтобы пчела перемещалась между цветами на различные расстояния.
        courseF_bee_for5_c: Не бойся допустить ошибку! Добавляй блоки, запускай код
          и смотри, что получится, даже если и не решил еще головоломку.
      courseF_bee_for6:
        courseF_bee_for6_a: Не забудь использовать переменную «счетчик» в своем цикле
          «повторить».
        courseF_bee_for6_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for6_c: Твой цикл должен считать **от 5 до 1**.
      courseF_bee_for6_2018:
        courseF_bee_for6_a: Не забудь использовать переменную «счетчик» в своем цикле
          «повторить».
        courseF_bee_for6_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for6_c: Твой цикл должен считать **от 5 до 1**.
      courseF_bee_for6_2019:
        courseF_bee_for6_a: Не забудь использовать переменную «счетчик» в своем цикле
          «повторить».
        courseF_bee_for6_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for6_c: Твой цикл должен считать **от 5 до 1**.
      courseF_bee_for7:
        courseF_bee_for7_a: Нужно, чтобы твой цикл for считал от 1 до 7 с шагом 2.
        courseF_bee_for7_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for7_c: Не забудь использовать переменную «счетчик» в своем цикле
          «повторить».
      courseF_bee_for7_2018:
        courseF_bee_for7_a: Нужно, чтобы твой цикл for считал от 1 до 7 с шагом 2.
        courseF_bee_for7_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for7_c: Не забудь использовать переменную «счетчик» в своем цикле
          «повторить».
      courseF_bee_for7_2019:
        courseF_bee_for7_a: Нужно, чтобы твой цикл for считал от 1 до 7 с шагом 2.
        courseF_bee_for7_b: Тебе потребуется вставить в свой цикл for команду «двигаться
          вперед», а также цикл для сбора нектара.
        courseF_bee_for7_c: Не забудь использовать переменную «счетчик» в своем цикле
          «повторить».
      courseF_bee_for8:
        courseF_bee_for8_a: "Если твой цикл считает в прямом порядке, шаг всякий раз
          добавляется при повторе к переменной «счетчик». \n\nЧто тебе потребуется
          добавить к каждому числу, чтобы получить следующее количество нектара?"
        courseF_bee_for8_b: В этой головоломке тебе потребуется двигаться по схеме
          лестницы, чтобы добраться до цветов.
        courseF_bee_for8_c: Твой цикл будет считать _от 3 до 15_ с некоторым шагом.
          С каким?
      courseF_bee_for8_2018:
        courseF_bee_for8_a: "Если твой цикл считает в прямом порядке, шаг всякий раз
          добавляется при повторе к переменной «счетчик». \n\nЧто тебе потребуется
          добавить к каждому числу, чтобы получить следующее количество нектара?"
        courseF_bee_for8_b: В этой головоломке тебе потребуется двигаться по схеме
          лестницы, чтобы добраться до цветов.
        courseF_bee_for8_c: Твой цикл будет считать _от 3 до 15_ с некоторым шагом.
          С каким?
      courseF_bee_for8_2019:
        courseF_bee_for8_a: "Если твой цикл считает в прямом порядке, шаг всякий раз
          добавляется при повторе к переменной «счетчик». \n\nЧто тебе потребуется
          добавить к каждому числу, чтобы получить следующее количество нектара?"
        courseF_bee_for8_b: В этой головоломке тебе потребуется двигаться по схеме
          лестницы, чтобы добраться до цветов.
        courseF_bee_for8_c: Твой цикл будет считать _от 3 до 15_ с некоторым шагом.
          С каким?
      courseF_bee_for9:
        courseF_bee_for9_a: |-
          Попробуй проделать кое-какие расчеты с переменной «счетчик».

          Что нужно сделать со счетчиком у каждого цветка, чтобы уравнять количество нектара, которое необходимо собрать?
        courseF_bee_for9_c: Похоже, что тебе потребуется повернуть пчелу в начале
          каждой итерации цикла, чтобы решить эту головоломку.
        courseF_bee_for9_b: "**Помни:** если твой цикл считает в прямом порядке, шаг
          добавляется всякий раз при повторе к переменной «счетчик»."
      courseF_bee_for9_2018:
        courseF_bee_for9_a: |-
          Попробуй проделать кое-какие расчеты с переменной «счетчик».

          Что нужно сделать со счетчиком у каждого цветка, чтобы уравнять количество нектара, которое необходимо собрать?
        courseF_bee_for9_c: Похоже, что тебе потребуется повернуть пчелу в начале
          каждой итерации цикла, чтобы решить эту головоломку.
        courseF_bee_for9_b: "**Помни:** если твой цикл считает в прямом порядке, шаг
          добавляется всякий раз при повторе к переменной «счетчик»."
      courseF_bee_for9_2019:
        courseF_bee_for9_a: |-
          Попробуй проделать кое-какие расчеты с переменной «счетчик».

          Что нужно сделать со счетчиком у каждого цветка, чтобы уравнять количество нектара, которое необходимо собрать?
        courseF_bee_for9_c: Похоже, что тебе потребуется повернуть пчелу в начале
          каждой итерации цикла, чтобы решить эту головоломку.
        courseF_bee_for9_b: "**Помни:** если твой цикл считает в прямом порядке, шаг
          добавляется всякий раз при повторе к переменной «счетчик»."
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_a: "Взгляни на эту возможность перемещения:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Попробуй использовать два цикла for: один,
          чтобы пчела залезала на цветок и собирала нектар, а другой – чтобы слезала
          с него и делала мед.'
        courseF_bee_for_challenge2_c: "Обрати внимание, что один цикл for должен содержать
          несколько регулярных циклов, количество повторов которых определяется «счетчиком»,
          чтобы создавалась схема лестницы. \n\nДругой цикл for должен содержать один
          регулярный цикл для выработки количества меда, определяемого «счетчиком»."
        courseF_bee_for_challenge2_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_a: "Взгляни на эту возможность перемещения:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Попробуй использовать два цикла for: один,
          чтобы пчела залезала на цветок и собирала нектар, а другой – чтобы слезала
          с него и делала мед.'
        courseF_bee_for_challenge2_c: "Обрати внимание, что один цикл for должен содержать
          несколько регулярных циклов, количество повторов которых определяется «счетчиком»,
          чтобы создавалась схема лестницы. \n\nДругой цикл for должен содержать один
          регулярный цикл для выработки количества меда, определяемого «счетчиком»."
        courseF_bee_for_challenge2_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_a: "Взгляни на эту возможность перемещения:  \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Попробуй использовать два цикла for: один,
          чтобы пчела залезала на цветок и собирала нектар, а другой – чтобы слезала
          с него и делала мед.'
        courseF_bee_for_challenge2_c: "Обрати внимание, что один цикл for должен содержать
          несколько регулярных циклов, количество повторов которых определяется «счетчиком»,
          чтобы создавалась схема лестницы. \n\nДругой цикл for должен содержать один
          регулярный цикл для выработки количества меда, определяемого «счетчиком»."
        courseF_bee_for_challenge2_d: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_functions2:
        courseF_bee_functions2_a: Эта функция уже написана для тебя, но тебе придется
          вызывать ее у каждого цветка.
        courseF_bee_functions2_b: Нажми на синюю кнопку «редактировать» на функции
          «получить только нектар», чтобы узнать ее назначение.
      courseF_bee_functions3:
        courseF_bee_functions3_a: Нужно, чтобы твоя функция для этой головоломки только
          делала мед, в ней не должно быть никаких блоков «двигаться вперед» или «повернуть».
        courseF_bee_functions3_b: Помни, что твоя функция должна добывать мед только
          при наличии соты.
        courseF_bee_functions3_c: Используй зеленый блок «только делать мед» для вызова
          своей функции.
        courseF_bee_functions3_d: Проверь этот путь.
      courseF_bee_functions3a:
        courseF_bee_functions3a_a: Нужно, чтобы твоя функция для этой головоломки
          только добывала нектар или делала мед, в ней не должно быть никаких блоков
          «двигаться вперед» или «повернуть».
        courseF_bee_functions3a_b: Используй схему лестничных ступенек для проверки
          первых четырех облаков.
      courseF_bee_functions4:
        courseF_bee_functions4_a: Твоя функция должна обеспечивать передвижение пчелы
          по боковым дорожкам и ее возврат на главную дорогу.  Добавлять эту часть
          к своей основной программе не нужно.
        courseF_bee_functions4_b: Попробуй написать программу и использовать блоки
          функции в соответствии со своим представлением о ее назначении, а затем
          разработай функцию.
      courseF_bee_functions5a:
        courseF_bee_functions5a_a: "Твоя функция должна проверять, имеется ли путь
          направо, и если он имеется, обеспечивать передвижение пчелы по боковым дорожкам
          и ее возврат на основную дорогу.  \n\nДобавлять эту часть к своей основной
          программе не нужно."
        courseF_bee_functions5a_b: Используй цикл «пока» для передвижения вниз по
          всем основным дорогам, поскольку они разной длины.
        courseF_bee_functions5a_c: Внутри цикла «пока» обязательно двигайся вперед,
          а затем используй свою функцию для проверки наличия пути.
      courseF_bee_functions6:
        courseF_bee_functions6_a: "Если головоломка покажется сложной, попробуй создавать
          свою функцию понемногу.\n\nДобавь несколько блоков, а затем испытай их.
          Добавь еще блоки и испытай еще раз.  Скоро у тебя все получится! \n\n<xml>\n
          \ <block type=\"procedures_defnoreturn\" editable=\"false\">\n    <mutation/>\n
          \   <title name=\"NAME\">get nectar make honey</title>\n    <statement name=\"STACK\">\n
          \   </statement>\n  </block>\n</xml>"
        courseF_bee_functions6_b: Твоя функция должна проверять, имеется ли цветок
          или сота, добывать нектар или делать мед, а затем поворачивать.
        courseF_bee_functions6_c: Поскольку ты поворачиваешь внутри своей функции,
          для выхода из этого лабиринта тебе нужен только цикл «пока».
      courseF_bee_functions7:
        courseF_bee_functions7_a: Найди свою функцию в прошлой головоломке.
        courseF_bee_functions7_b: Попробуй нарисовать путь через лабиринт пальцем.
          Где пчеле придется принять решение?
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: |-
          Если головоломка покажется сложной, попробуй создавать свою функцию понемногу.

          Добавь несколько блоков, а затем испытай их. Добавь еще блоки и испытай еще раз.  Скоро у тебя все получится!
        courseF_bee_functions8a_b: Не забудь встроить код внутрь редактора функций.
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: |-
          Если головоломка покажется сложной, попробуй создавать свою функцию понемногу.

          Добавь несколько блоков, а затем испытай их. Добавь еще блоки и испытай еще раз.  Скоро у тебя все получится!
        courseF_bee_functions7_b: |-
          Не забудь создать код внутри зеленого блока функции.

          <xml>
            <block type="procedures_defnoreturn" editable="false">
              <mutation/>
              <title name="NAME">get nectar make honey</title>
              <statement name="STACK">
              </statement>
            </block>
          </xml>
        courseF_bee_functions7_c: В какую сторону тебе следует повернуть, если имеется
          сота? А если цветок? А если ничего?
      courseF_bee_functions_challenge1:
        courseF_bee_functions_challenge1_a: Можешь воспользоваться функциями из набора
          инструментов. Функцию можно вызвать внутри определения другой функции!
      courseF_bee_functions_challenge2:
        courseF_bee_functions_challenge2_a: |-
          Если имеется путь направо, тебе нужно сделать следующее:

          -   добыть любой нектар или сделать любой мед.
          -   свернуть направо на боковую дорожку.
          -   переместится к концу боковой дорожку.
          -   повернуть направо.

          Если ты повторишь эти действия дважды, то будешь готов к перемещению назад и вниз по главной дороге.

          **Хочешь увидеть все решение – просто нажми и получи еще одну подсказку!**
        courseF_bee_functions_challenge2_b: |-
          **Решение:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_if">
                              <title name="DIR">isPathRight</title>
                              <statement name="DO">
                                <block type="procedures_callnoreturn" id="function">
                                <mutation name="move and check"></mutation>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">move and check</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="check nectar or honey"></mutation>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_untilBlocked">
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
            <mutation></mutation>
              <title name="NAME">check nectar or honey</title>
              <statement name="STACK">
                <block type="bee_whileNectarAmount">
                  <title name="ARG1">nectarRemaining</title>
                  <title name="OP">&gt;</title>
                  <title name="ARG2">0</title>
                  <statement name="DO">
                    <block type="maze_nectar"/>
                  </statement>
                  <next>
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">honeyAvailable</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_honey"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      courseF_bee_fwp1:
        courseF_bee_fwp1_a: Используй операторы «если», чтобы гарантированно собирать
          с цветка только нектар.
        courseF_bee_fwp1_b: Продолжай двигаться по пути, используя блок «повторить».
          Обязательно используй блок «двигаться вперед» и проверяй, имеется ли цветок
          с помощью оператора «если».
      courseF_bee_fwp2:
        courseF_bee_fwp2_a: "Для превращения его в функцию просто перетащи код в имеющийся
          блок функции.  \n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        courseF_bee_fwp2_b: Не забудь присоединить блок «ряд нектара» к блоку «при
          запуске» для вызова функции, которую ты только что создал.
      courseF_bee_fwp3:
        courseF_bee_fwp3_a: Твоя функция запустится, куда бы лицом ты ни стоял.
        courseF_bee_fwp3_b: Имеется 3 ряда с нектаром, какие повороты и передвижения
          тебе придется сделать для перемещения между рядами?
        courseF_bee_fwp3_c: Чтобы решить эту головоломку, тебе потребуется вызвать
          свою функцию 3 раза. Между вызовами тебе потребуется «повернуть направо»,
          «двигаться вперед» 2 раза, а затем «повернуть направо» еще раз. ИЛИ ЖЕ тебе
          потребуется «повернуть налево», «двигаться вперед» 2 раза, а затем «повернуть
          налево» еще раз.
      courseF_bee_fwp4:
        courseF_bee_fwp4_a: Тебе потребуется добавить параметр и использовать в своем
          цикле итоговую переменную.
        courseF_bee_fwp4_b: Параметр, создаваемый тобой для функции, будет использоваться
          в цикле повтора для определения того раз, сколько раз пчела переместится
          вперед и проверит на наличие нектара.
      courseF_bee_fwp5:
        courseF_bee_fwp5_a: Подсчитай количество мест, которые тебе нужно проверить,
          и используй эти цифры в качестве параметров вызова функции.
        courseF_bee_fwp5_a_b: Не забудь поворачивать между вызовами функции.
      courseF_bee_fwp6:
        courseF_bee_fwp6_a: Какие блоки автоматически увеличивают переменную, которую
          можно использовать как параметр?
        courseF_bee_fwp6_b: Попробуй использовать цикл for, чтобы решить эту головоломку.
      courseF_bee_fwp7:
        courseF_bee_fwp7_a: Второй параметр для этой функции тебе не понадобится,
          понадобится только второй оператор «если».
        courseF_bee_fwp7_b: Добавь в свою функцию оператор «если», чтобы пчела проверяла
          на наличие и сот, и цветов.
      courseF_bee_fwp8:
        courseF_bee_fwp8_a: Как использовать цикл for для решения этой головоломки?
        courseF_bee_fwp8_b: Поскольку спираль становится с твоим продвижением меньше,
          твой цикл for должен считать в обратном порядке.
      courseF_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_a: |-
          Основная программа должна выглядеть примерно так:

          <xml>
          <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="procedures_callnoreturn" inline="false">
                  <mutation name="pick row">
                    <arg name="length"/>
                  </mutation>
                  <value name="ARG0">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <next>
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="pick row">
                                <arg name="length"/>
                              </mutation>
                              <value name="ARG0">
                                <block type="math_number">
                                  <title name="NUM">5</title>
                                </block>
                              </value>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                      <next>
                                        <block type="procedures_callnoreturn" inline="false">
                                          <mutation name="pick row">
                                            <arg name="length"/>
                                          </mutation>
                                          <value name="ARG0">
                                            <block type="math_number">
                                              <title name="NUM">6</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                              <next>
                                                <block type="maze_move">
                                                  <title name="DIR">moveForward</title>
                                                  <next>
                                                    <block type="procedures_callnoreturn" inline="false">
                                                      <mutation name="pick row">
                                                        <arg name="length"/>
                                                      </mutation>
                                                      <value name="ARG0">
                                                        <block type="math_number">
                                                          <title name="NUM">4</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
        courseF_bee_fwp_challenge1_b: 'Посмотри, сколько кукурузы имеется для уборки
          в каждом месте. Видишь ли ты схему счетчика? '
        courseF_bee_fwp_challenge1_b1: |-
          Параметр «длина» следует использовать, чтобы установить максимальное значение в цикле for.

          Не забудь заставить фермершу вернуться назад на основную дорогу после уборки урожая!
        courseF_bee_fwp_challenge1_c: |-
          Помести цикл for внутрь функции и установи его на счет с 1 до значения «длины» с шагом 1.
          Внутри этого цикла ты должен двигаться вперед и собирать всю кукурузу.

          <xml>
          <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                      </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: Внутри цикла for тебе потребуется «двигаться
          вперед», а затем «собрать кукурузу» **количество раз, равное значению счетчика**.
        courseF_bee_fwp_challenge1_d2: После цикла for можно просто «двигаться назад»
          **количество раз, равное значению длины**.
        courseF_bee_fwp_challenge1_e: |-
          **А вот и решение:**

          <xml>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_corn"/>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
              </block></xml>
      courseF_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_a: |-
          Начни с того, чтобы убедиться, что ты понимаешь, как _должна_ работать эта функция. Двигаясь по каждой дорожке, фермерша будет стараться собирать только кукурузу. Как можно заставить ее проверять вместо этого на наличие каждого из 3 овощей и собирать только тот, что она найдет?

          Добавь к функции условные операторы, чтобы фермерша проверяла на наличие кукурузы, тыкв и салата.
        courseF_bee_fwp_challenge2_b: |-
          У тебя кончились блоки «двигаться вперед»?
          Попробуй использовать второй цикл for в своей основной программе.
        courseF_bee_fwp_challenge2_c: |-
          **Вот как должна выглядеть твоя функция:**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_ifHasCrop">
                                  <title name="LOC">Corn</title>
                                  <statement name="DO">
                                    <block type="harvester_corn"/>
                                  </statement>
                                  <next>
                                    <block type="harvester_ifHasCrop">
                                      <title name="LOC">Pumpkin</title>
                                      <statement name="DO">
                                        <block type="harvester_pumpkin"/>
                                      </statement>
                                      <next>
                                        <block type="harvester_ifHasCrop">
                                          <title name="LOC">Lettuce</title>
                                          <statement name="DO">
                                            <block type="harvester_lettuce"/>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |-
          **Вот как должна выглядеть твоя основная программа:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter2</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">6</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="procedures_callnoreturn" inline="false">
                          <mutation name="pick row">
                            <arg name="length"/>
                          </mutation>
                          <value name="ARG0">
                            <block type="variables_get">
                              <title name="VAR">counter2</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
              </block></xml>
      courseF_bee_variables_3_2018:
        courseF_beevariables_3a: |-
          Для вычитания единицы из значения переменной можешь использовать в своей программе следующий код: <xml><block type="variables_set" inline="false">
                              <title name="VAR">gather</title>
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">gather</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">1</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block></xml>
      courseF_bee_variables_3_2019:
        courseF_bee_variables_3_2019_1: |-
          Для вычитания единицы из значения переменной можешь использовать в своей программе следующий код: <xml><block type="variables_set" inline="false">
                              <title name="VAR">gather</title>
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">gather</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">1</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block></xml>
      courseF_bee_variables_4_2019:
        courseF_bee_variables_4_2019_1: Вместо вычитания 1 из "собрать" добавляй всякий
          раз 1. Каким должно быть значение переменной в самом начале?
      courseF_playlab_variables1a:
        courseF_playlab_variables1a_a: Тебе потребуется заменить слова «Что я должен
          кричать?» в зеленом блоке на «Гол!».
      courseF_playlab_variables2b:
        courseF_playlab_variables2b_a: Что, по-твоему, скажет Кики, если нажать на
          «Выполнить»?
      courseF_playlab_variables3b_josh:
        courseF_playlab_variables3b_a: 'Имеются два блока с пустыми местами: блок
          «актер говорит» и блок «присоединить». Добавь к ним блоки переменных!'
      courseF_playlab_variables4b:
        courseF_playlab_variables4b_a: Другие блоки из набора инструментов тебе здесь
          не потребуются.
        courseF_playlab_variables4b_b: Помести две переменные «возраст» и одну «имя»
          туда, где они наиболее уместны в разговоре.
      courseF_playlab_variables5c:
        courseF_playlab_variables5c_a: Найди блок с переменной «ответ» в наборе инструментов
          в разделе «Переменные».
        courseF_playlab_variables5c_b: Протестируй свой код! Попробуй ввести «красный»,
          а также другие цвета и посмотри, что получится.
      courseF_playlab_variables6c:
        courseF_playlab_variables6c_a: В разделе вводных данных используй блок «спросить»,
          чтобы получить вводные данные от пользователей.
      courseF_playlab_variables7b:
        courseF_playlab_variables7b_a: Сделай так, чтобы кошка и собака поговорили
          о своей любимой еде. Используй блок «спросить», чтобы выяснить любимую еду,
          а затем покажи этот текст на экране!
        courseF_playlab_variables7b_b: 'Заставь своего любимого персонажа спросить:
          «Хочешь услышать шутку?». В случае положительного ответа покажи шутку на
          экране.'
      courseF_playlab_variables7c:
        courseF_playlab_variables7c_a: Помести новый блок «спросить» перед блоком
          «если/или же», чтобы использовать его там на других этапах.
      courseF_playlab_variables8c:
        courseF_playlab_variables8c_a: Блок «присоединить» отправится в блок «актер
          говорит» и позволит использовать твои переменные в длинных предложениях.
      courseF_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          Чтобы заставить актеров говорить, тебе потребуются дополнительные блоки из набора инструментов.

          <xml><block type="studio_saySpriteParamsTime" inline="true">
                <value name="SPRITE">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                                <value name="TEXT">
                            <block type="text">
                              <title name="TEXT">Knock knock.</title>
                            </block>
                          </value>
                <value name="TIME">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                </block></xml>
      courseF_playlab_variables_challenge2:
        courseF_playlab_variables_challenge2_a: Добавляй и вычитай очки из переменной
          «счет» при столкновении персонажей.
        courseF_playlab_variables_challenge2_b: Ты можешь изменить расстояние перемещения
          твоего персонажа при нажатии одной из клавиш со стрелками.
        courseF_playlab_variables_challenge2_c: |-
          **Решение:**

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">up</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">1</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">down</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">4</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">left</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">8</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">2</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">1</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </xml>
      coursea_maze_ramp1_2018:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure
          both of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Don't be afraid to make a mistake! Try something,
          and if it doesn't work, try something else!
      coursea_maze_ramp1_2019:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure
          both of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Don't be afraid to make a mistake! Try something,
          and if it doesn't work, try something else!
      grade5_artist_variables_triangles1:
        grade5_artist_variables_triangles1_a: Чтобы у этого треугольника был внутренний
          угол 60 градусов, не забудь повернуть художника на 120 градусов.
        grade5_artist_variables_triangles1_b: Используй цикл «повторить», чтобы сделать
          свой код короче.
        grade5_artist_variables_triangles1_c: Внутри цикла тебе потребуется переместиться
          вперед на 50 точек, а затем повернуть налево на 120 градусов.
      grade5_artist_variables_triangles1_2018:
        grade5_artist_variables_triangles1_a: Чтобы у этого треугольника был внутренний
          угол 60 градусов, не забудь повернуть художника на 120 градусов.
        grade5_artist_variables_triangles1_b: Используй цикл «повторить», чтобы сделать
          свой код короче.
        grade5_artist_variables_triangles1_c: Внутри цикла тебе потребуется переместиться
          вперед на 50 точек, а затем повернуть налево на 120 градусов.
      grade5_artist_variables_triangles1_2019:
        grade5_artist_variables_triangles1_a: Чтобы у этого треугольника был внутренний
          угол 60 градусов, не забудь повернуть художника на 120 градусов.
        grade5_artist_variables_triangles1_b: Используй цикл «повторить», чтобы сделать
          свой код короче.
        grade5_artist_variables_triangles1_c: Внутри цикла тебе потребуется переместиться
          вперед на 50 точек, а затем повернуть налево на 120 градусов.
      iceage_click_hello:
        iceage_click_hello_a: Add one or more `actor 1 say` blocks to the `when clicked`
          event to complete this puzzle.
      iceage_free_play:
        iceage_free_play_a: 'Can you make Sid and Manny have an Ice Crystal fight?  '
        iceage_free_play_b: Make Granny chase Diego.  End the game as a win if she
          catches him.
        iceage_free_play_c: Can you have Sid throw snowflakes at Diego and have Diego
          get bigger each time one hits?  End the game as a win if Diego gets hit
          5 times.
      iceage_hello1:
        iceage_hello1_a: You only need to add one block to solve this puzzle.  Drag
          the `say` block out from the toolbar and connect it to the `when run` event
          block that is already in the workspace. Next, type "Hello!" inside.
      iceage_hello2:
        iceage_hello2_a: 'To solve this puzzle, you will need to have Sid say something
          using the `actor 1 say` block.  You will also need to have Manny say something
          with the `actor 2 say` block. '
      iceage_move_events:
        iceage_move_events_a: 'Each of the `when ___ arrow` events will need to have
          a different `move actor 1` command connected to it to solve this puzzle. '
      iceage_move_to_actor:
        iceage_move_to_actor_a: For this puzzle, you can either move Diego down by
          200 pixels, or move Manny up by 200 pixels.
        iceage_move_to_actor_b: Connect the `play ___ sound` block to the `when actor
          1 touches actor 2` event to finish this challenge.
      iceage_move_to_flag:
        iceage_hello3_a: Use the `move actor 1 right by 200 pixels` block to solve
          this puzzle.
      iceage_repeat:
        iceage_repeat_a: Use both the `move actor 1 left` and `move actor 1 right`
          blocks to solve this puzzle.
      iceage_sound_and_points:
        iceage_sound_and_points_a: You will need to add two blocks beneath the `when
          actor 1 touches actor 2` event.
        iceage_sound_and_points_b: You will need both the `score a point` block and
          the 'play \_\_\_\_ sound\` block to pass this level.
      iceage_throw_hearts:
        iceage_throw_hearts_a: When do you want to throw hearts at granny?  When an
          arrow is pressed? When you click on Sid?  When you click on Granny?  The
          choice is yours!
        iceage_throw_hearts_b: To get granny to be happy when she receives a heart,
          you will need to connect the `set actor 2 mood to happy` block beneath the
          `when actor 2 touches projectile` event.
      iceage_warn_ice_age:
        iceage_warn_ice_age_a: 'You should only have to add two blocks to get this
          puzzle where it needs to be. '
        iceage_warn_ice_age_b: Add both new blocks beneath the `when run` event to
          have them happen immediately after the program starts.
