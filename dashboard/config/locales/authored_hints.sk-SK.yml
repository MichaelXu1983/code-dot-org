---
sk-SK:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: Ak použiješ blok, aby si ma `posunul dopredu o 100 pixelov`,
          tak ja automaticky nakreslím čiaru.
        2-3_Artist_1_new_b: Máš problém otočiť sa v rohu? Použi blok `otoč vpravo
          o 90 stupňov`.
      2-3 Artist 11:
        2-3_Artist_11_a: 'Maš problém s uhlami? Potrebuješ prejsť 360 stupňov v 8
          ťahoch. Koľko je 360/8? '
      2-3 Artist 12:
        2-3_Artist_12_a: Celý kruh má 360 stupňov, takže ak sa umelec otoči o 1 stupeň
          v každom cykle, tak to potrebuje spraviť 360 krát.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: Zdá sa, že Umelec nie je otočený správnym smerom. Otoč
          ho skôr, ako začne kresliť čiaru.
      2-3 Artist 3new:
        2-3_Artist_3new_a: Koľko je 100-70? Podľa problému z príbehu, to je toľko,
          aký vysoký má byť klobúk!
        2-3_Artist_3new_b: Zdá sa, že Umelec nie je otočený správnym smerom. Otoč
          ho skôr, ako začne kresliť čiaru.
      2-3 Artist 4:
        2-3_Artist_4_a: Pre dokončenie domu stačí, aby ste nakreslili štvorec!
      2-3 Artist 6:
        2-3_Artist_6_a: 'To make those little angles, you have to turn _farther_ each
          time than you did with the square.   '
        2-3_Artist_6_b: Keďže už som natočený doprava, najjednoduchšie bude začať
          posunutím sa dopredu. Pre nakreslenie trojuholníka sa potom potrebuješ otáčať
          vľavo.
        2-3_Artist_6_c: Každá strana trojuhoníka je rovnako dlhá ako strany štvorca...
          100 pixelov!
      2-3 Artist 7:
        2-3_Artist_7_a: The easiest way to solve this puzzle is to draw the first
          square and end with the artist pointing down before starting your second
          square.
      2-3 Artist 8:
        2-3_Artist_8_a: If you cut 200 in half, how many pixels wide does each square
          need to be?
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: Tento diamand je vlastne len štvorec položený na strane
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_a: Remember, you want the control panel 10 pixels
          _wider_...so be sure to **add** 10 to whatever number you change.
        2-3_Artist_Debugging_10_b: "**Trial and error is perfectly fine here!**  \n\nStart
          by changing one number at a time.   \n\nWhich numbers do what?  \n\nIf you
          get too lost, just click \"Start over\" and your code will be reset."
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'Nápoveda: Každý fúz je 75 pixelov dlhý.'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: Každá z otočiek je o 15 stupňov primalá.
        2-3_Artist_Debugging_3_b: Ak program beží príliš rýchlo na to, aby si videl,
          čo sa deje, môžeš ho spomaliť posunutím ovládača smerom ku korytnačke.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: What happens if you have the artist move or jump
          backward after he draws the first line?
      2-3 Artist Debugging 8:
        2-3_Artist_Debugging_8_a: |-
          How many times did my shape repeat?

          How many times _should_ the shape repeat?

          Where can you change that in the program?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: The artist needs to turn 60 degrees farther left
          before starting to draw!
        2-3_Artist_Debugging_9_b: You don't need to add another block to get the full
          turn, just add 60 degrees to the `turn left` block that's already there!
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: The squares each have 100 pixel sides, that means
          that you will have to move forward 175 pixels before drawing your second
          square.
        2-3_Artist_Functions_1_b: It is okay to draw overlapping lines to make your
          glasses.
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: You will need to change not only the number and
          length of sides within the function, but also the angle the artist turns
          between each side.
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: Skúste najprv spustiť kód, aby ste videli, čo treba
          pridať.
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: |-
          Your program should:

          -   Use function
          -   Move forward 100 + 75 pixels
          -   Use function
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: The artist needs to turn 120 degrees between each
          square to complete this design.
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_a: |-
          Remember that the code from the last puzzle was:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">8</title>
                  <statement name="DO">
                    <block type="draw_colour" inline="true">
                      <value name="COLOUR">
                        <block type="colour_random"/>
                      </value>
                      <next>
                        <block type="draw_turn_by_constant_dropdown">
                          <title name="DIR">turnRight</title>
                          <title name="VALUE" config="45,60,90,120,180">45</title>
                          <next>
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">50</title>
                              <next>
                                <block type="draw_turn_by_constant_dropdown">
                                  <title name="DIR">turnLeft</title>
                                  <title name="VALUE" config="45,60,90,120,180">90</title>
                                  <next>
                                    <block type="draw_move_by_constant">
                                      <title name="DIR">moveForward</title>
                                      <title name="VALUE">50</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
        2-3_Artist_Loops_New_11_b: Your new turn should go at the **end** of the code
          inside the loop.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: Before starting the diamond, the artist needs to
          turn left by 60 degrees to get on the right path.
        2-3_Artist Loops_New_12_b: After the artist goes forward 100 pixels, he will
          need to turn right 120 degrees to make the sharp corner.
        2-3_Artist Loops_New_12_c: The artist will need to turn right only 60 degrees
          to create a wide corner.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: "At the end of each diamond, the artist is already
          facing the right direction to start the next one.  \n\nBecause of this,
          we don't need to add an extra `turn left by` block before we start again."
        2-3_Artist_Loops_New_13_b: "To make each diamond, the artist needs to:   \n\n-
          \  move\n-   turn right 120 degrees\n-   move\n-   turn right 60 degrees
          \ \n\nThen do it all again!"
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: The artist needs to turn 45 degrees to the right
          before he starts drawing.
        2-3_Artist_Loops_New_9_b: This V is really just half of a square.  What would
          the code be to draw half of a square?
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: Remember to put all of the grey blocks inside
          of your loop.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: |-
          Potrebujete pomôcť s uhlami?\
          **360/12 = 30**
        2-3_Artist_Nested_Loops_3_b: Nezabudni vložiť všetok šedý kód, spolu s blokom
          na otočenie do vnútra cyklu.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: |-
          Potrebujete pomôcť s uhlami?\
          **360/12 = 30**
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: "Skoč z vrchného štvorca na začiatok ďalšieho
          pomocou bloku `skoč dopredu`. \n\nAk má každý štvorec 20 pixelov a štvorce
          sú 20 pixelov od seba, o koľko musíš skočiť?"
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: "Ako veľmi by ste sa mali otočiť pri každom behu
          programu?  \n\nKoľko je 360/10?"
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          Potrebujete pomoc s nájdením správneho uhlu?

          **360 / 12 = 30**
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: Having a hard time figuring out how to get the
          blocks down?  Try treating the red flower exactly the same as a purple flower!
        2-3_Bee_Conditionals_14_b: If the red flower were purple, could you figure
          out how to use an extra `repeat` loop to cut down on code?
        2-3_Bee_Conditionals_14_c: |-
          Try breaking this up into two separate chunks:

          ![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)

          1.  Gather nectar 3 times
              -   Move forward 5 times
              -   Check to see if nectar, if so: get it
              -   Turn left

          2.  Make honey
              -   Move forward one time
              -   Make two honey
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 'Remember: Purple flowers only have either 0 or
          1 nectar and they can change each time you run the program.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: The code will be shortest if you use a loop each
          time you move forward, another loop to gather nectar, and another one to
          make honey.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 'Remember: Purple flowers change between 0 and 1
          nectar when you run your program!'
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: Once you find and fix the incorrect block, do you see
          any patterns that could be made more simple using a `repeat` loop?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: Once you find and fix the incorrect block, do you see
          any patterns that could be made more simple using a `repeat` loop?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: Is there any place where the bee does something that
          doesn't make sense? What happens when you change that block?
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: You don't have to use a loop with a function. Try moving,
          using the function, then moving and using the function again.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: You don't have to use a loop with a function. Try moving,
          using the function, then moving and using the function again.
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: "If the puzzle seems challenging, try building your
          function a little at a time.  \n\nAdd some blocks, then try it out. Add
          more, then try again.  Soon, you'll get there!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: "If the puzzle seems challenging, try building your
          function a little at a time.  \n\nAdd some blocks, then try it out. Add
          more, then try again.  Soon, you'll get there!"
        2-3_Bee_Functions_8_b: |-
          Remember to build your code inside of the green function block.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: You should end up with four blocks inside your loop.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: You should have 6 blocks inside your loop.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: You will need two different `repeat` loops, one after
          the other.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: You should end up with five blocks inside your loop.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: The first action will be a turn, rather than a move.
        2-3_Bee_Loops_4A_b: The last piece of the program can be finished by writing
          code at the end of your program outside of your loop.
        2-3_Bee_Loops_4A_c: If you can't spot the loops yet, try coding it out the
          long way first, then see what you can combine into a `repeat` loop at the
          end.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: If you can't spot the blocks to put inside `repeat` right
          away, start by coding out each move and look for a pattern.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: If you can't tell what should go into the `repeat` loop,
          try dragging blocks out one by one and see if you can find a pattern.
        2-3_Bee_Loops_6_b: There should be 6 blocks inside your `repeat` loop when
          you're done.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: The first action will be a turn, rather than a move.
        2-3_Bee_Loops_7_b: 'If you can''t quite picture the loop from the beginning,
          try coding it out the long way, then look for a pattern.  '
      2-3 Maze 1:
        2-3_Maze_1_a: To use a `move forward` block, drag it from the toolbar area
          out into the workspace and connect it to the `when run` block.
      2-3 Maze 16:
        2-3_Maze_16_a: If the pattern is hard to see, try coding it all out first
          and see what things repeat over and over before you put the loops in.
        2-3_Maze_16_b: "To put lots of blocks inside a `repeat` loop, just drag a
          loop out into the workspace, then drag all of the blocks from the starting
          program inside of it.  \n\nConnect it all back to the `when run` block and
          you're good to go!"
      2-3 Maze 6:
        2-3_Maze_6_a: Sú dve možnosti ako vyriešiť túto úlohu!
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: If the pattern is hard to see, try coding it all out
          first and see what things repeat over and over before you put the loops
          in.
        2-3_Maze_Loops_17_b: Did the starting code get deleted?  Click `start over`
          to get it back!
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: If the pattern is hard to see, try coding it all out
          first and see what things repeat over and over before you put the loops
          in.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: If you are stuck, try writing out the code without loops
          first and looking for patterns.
        2-3_Maze_Loops_19_b: Putting one repeat loop inside of another can help decrease
          the number of blocks used.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: Look for a stair-step pattern in this maze to find where
          a loop can be used.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: If you are having trouble finding the stair-step pattern,
          try covering the blocked paths with your finger.
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: Within your loop, make sure the artist jumps backwards and
          upwards after drawing each line.
      4-5 Artist 3:
        4-5_Artist_3_a: |-
          If the flower bed is 600 pixels around and two of the sides are 200 pixels long, here is how to figure out what the short sides add up to:

          **600 - 200 - 200 = 200**

          That means both short sides add up to 200 pixels.

          **What is 200 / 2?**
        4-5_Artist_3_b: If you can't see where the `repeat` loop goes right away,
          try coding out the whole solution and look for a pattern.
      4-5 Artist 4:
        4-5_Artist_4_a: "There are 360 degrees in a circle! \n\nThat's how many times
          you need to repeat this code (turning 1 degree at a time) before the circle
          is done!"
      4-5 Artist 5:
        4-5_Artist_5_a: |-
          Trial and error is a great method, but you can also solve the problem by dividing the 90 degree angle into thirds.

          **90 / 3 = \_\_\_\_\_**
      4-5 Artist 7:
        4-5_Artist_7_a: 'Which angle is the smallest?  At which angle is the artist
          standing? '
      4-5 Artist 8:
        4-5_Artist_8_a: "The long sides are 240 pixels each.  That means that the
          2 short sides must total:\n\n**800 - 240 - 240 = 320**\n\nWhat is **320/2**
          ? "
        4-5_Artist_8_b: "This image can be done 2 ways!  \n\n-   Draw two rectangles
          that are **120** long and **160** tall, with an overlapping side\n\n-   Draw
          one rectangle that is **240** long and **160** tall, then add a line in
          the middle."
      4-5 Artist 9:
        4-5_Artist_9_a: 'When a triangle is an equilateral, all sides and all angles
          are the same.  '
        4-5_Artist_9_b: You will need to draw three triangles of the same size. Don't
          forget to jump to your new position after each one.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: You only need to draw the outside triangle to complete
          this puzzle.
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: If there are 360 degrees in a circle and each loop
          turns 3 degrees, how many times would you need to loop draw half of a full
          circle?
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: Notice that since the squares are 20 pixels long,
          you'll need to jump 20 pixels before you start your next square.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: Be careful to pull out the full block of "code from
          the toolbar each time you try a new one.
        4-5_Artist_Patterns_3_b: If your code becomes too confusing, you can always
          click "Start Over" and try again!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: "Now, when the artist finished each diamond, he's
          facing the opposite direction from where he needs to be to start the next
          one.  \n\nHow many degrees does he need to be turned to set himself straight?"
      4-5 Bee Conditionals 4:
        remember_quantum: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
      4-5 Bee Conditionals 5:
        remember_quantum: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: You can solve this puzzle using only the blocks
          on the workspace.  What order should they go in?
        4-5 Bee Conditionals 6_b: Make sure that you are checking to see if the flower
          has more than **0** nectar at least **3** times to solve this puzzle.
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: If you are having trouble figuring out what's not right,
          try running it to see where things go wrong.
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: Try treating this puzzle like a long rectangle
          where the bee needs to move forward, then turn left several times to complete
          the path.
      4-5 Maze 10:
        4-5_Maze_10_a: |-
          If you can't see how to use loops to solve the puzzle right away, try solving it the long way first, then looking for a pattern.

          What should you put a `repeat` around to make the code shorter?
      4-5 Maze 4:
        4-5_Maze_4_a: If you are having a hard time figuring out where to put the
          repeat, try coding everything out and looking for a pattern.
      4-5 Maze 5:
        4-5_Maze_5_a: Try using a `repeat` loop anytime you need to `move forward`
          more than two steps.
        4-5_Maze_5_b: You can use more than one `repeat` loop in a puzzle.
      4-5 Maze 6:
        4-5_Maze_6_a: |-
          Try tracing out a path with your finger.\
          Is it the shortest path you can find?
      4-5 Maze 7:
        4-5_Maze_7_a: "**Want to get your code as small as it can be?** \n\nLook for
          patterns in your blocks. Do you see something that repeats?  Try putting
          a loop around it instead!"
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: |-
          Don't forget to make a turn after your inner loop.

          You'll be looping 6 triangles over 360 degrees.

          **360 / 6 = ?**
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: |-
          This design will loop 10 times over 360 degrees.

          **360 / 10 = ?**
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: |-
          You will be looping this shape 6 times over 360 degrees.

          **360 / 6 = ?**
      4-5 While Loops 8:
        4-5_While_Loops_8_a: Každý predmet potrebuje vlastnú slučku "while".
      Course 4 Artist 11:
        Course_4_Artist_11_a: 'The half-hexagon has a **length of 30** and turns right
          by **60 degrees**.  '
        Course_4_Artist_11_b: 'The 2/3 triangle has a **length of 80** and turns right
          by **120 degrees**. '
      Course 4 Artist 12:
        Course_4_Artist_12_a: 'Each repeated shape is the combination of **half of
          a hexagon**, followed by **2/3 of a triangle**. '
        Course_4_Artist_12_b: 'The unit shape is almost the same as in the last puzzle,
          except the half-hexagon is a bit bigger. '
        Course_4_Artist_12_c: |-
          1.  The first three lines are 60 pixels long and you need to turn 60 degrees.

          2.  The next two lines are 80 pixels long and you need to turn 120 degrees
        Course_4_Artist_12_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#843179</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat">
                      <title name="TIMES">6</title>
                      <statement name="DO">
                        <block type="controls_repeat">
                          <title name="TIMES">3</title>
                          <statement name="DO">
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">60</title>
                              <next>
                                <block type="draw_turn_by_constant">
                                  <title name="DIR">turnRight</title>
                                  <title name="VALUE">60</title>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="controls_repeat">
                              <title name="TIMES">2</title>
                              <statement name="DO">
                                <block type="draw_move_by_constant">
                                  <title name="DIR">moveForward</title>
                                  <title name="VALUE">80</title>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">120</title>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 Artist 6:
        Course_4_Artist_6_a: There are 3 triangles within the 360 degree rotation...how
          many times does 3 go into 360?
      Course 4 Artist 8a:
        Course_4_Artist_8a: |-
          Need help figuring out how far to turn?

          There are 3 triangles within the 360 degree rotation.

          How many times does 3 go into 360?
      Course 4 Artist 9:
        Course_4_Artist_9_a: "Need to know how much to turn? \n\nWhat is 360 divided
          by 10?"
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_a: This code uses two `for loops`. One
          counts up from 1 to 8, the other counts down from 8 to 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Each `for loop` has three repeats.  The
          first draws the leftmost set of 1s, the second draws the 0s in the middle
          and the third draws the 1s on the right.
        Course_4_Artist_Binary_Free_Play_2b_c: In each repeat you need `counter` for
          1s and `16-(2 x counter)` for 0s.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Riešenie:**

          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops 11:
        Course_4_Artist_For_Loops_11_a: "The turn angle will change with each shape!
          \ \n\nUse the math block to enter 360 divided by the number of sides the
          shape has to get the angle right. "
      Course 4 Artist For Loops 11a:
        Course_4_Artist_For_Loops_11a_a: '360 divided by the number of sides a shape
          has is the number of degrees you''ll need to turn. '
        Course_4_Artist_For_Loops_11a_b: 'Each time, you will need to move forward
          by 10 times the length of the current number of sides. '
      Course 4 Artist For Loops 3:
        Course_4_Artist_For_Loops_3_a: To have the `for` loop drive your movement,
          make sure that you're using `counter` as your distance.
      Course 4 Artist For Loops 4:
        Course_4_Artist_For_Loops_4_a: |-
          **Aké je najmenšíe čislo, ktoré potrebuješ?\
          Aké je najväčšie číslo?\
          Aký veľký je prírastok v každom kroku?**

          Toto sú otázky, ktoré potrebuješ zodpovedať, aby si vyplnil prázdne miesta v cykle `for`.
      Course 4 Artist For Loops Challenge:
        Course_4_Artist_For_Loops_Challenge_a: The largest shape has 19 sides. The
          smallest has just two.
        Course_4_Artist_For_Loops_Challenge_b: The `for` loop counts up by two each
          time through.
      Course 4 Artist For Loops inspire:
        Course_4_Artist_For_Loops_inspire_a: The foundation of this code is the same
          as the solution to the previous challenge puzzle...with a couple of changes.
        Course_4_Artist_For_Loops_inspire_b: Try a `for` loop that goes from 3 to
          10 with an increment of 1.
        Course_4_Artist_For_Loops_inspire_c: There are two iterations of the same
          repeat loop inside the `for` loop, but the second repeat turns the opposite
          direction.
        Course_4_Artist_For_Loops_inspire_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true" movable="false">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_arithmetic" inline="true">
                          <title name="OP">MINUS</title>
                          <value name="A">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <value name="B">
                            <block type="math_number">
                              <title name="NUM">1</title>
                            </block>
                          </value>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">40</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">360</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">MINUS</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">1</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">40</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">DIVIDE</title>
                                      <value name="A">
                                        <block type="math_number">
                                          <title name="NUM">360</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_a: Start with the code from the last
          puzzle and add an extra `turn right` of three degrees inside the repeat
          loop.
        Course_4_Artist_Functions_Inspiration_b: Try turning by more than 90 degrees
          outside of the `repeat loop`, but still inside the `for loop`.
        Course_4_Artist_Functions_Inspiration_c: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">14</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_random"/>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="procedures_callnoreturn">
                            <mutation name="draw a square 20"></mutation>
                              <next>
                                <block type="jump_by_constant">
                                  <title name="DIR">jumpForward</title>
                                  <title name="VALUE">20</title>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">3</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="draw_turn_by_constant">
                              <title name="DIR">turnLeft</title>
                              <title name="VALUE">100</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            </xml>
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: Part of understanding how to use functions
          is figuring out which ones you need, and which ones you don't.
        Course_4_Artist_Functions_challenge_b: Use a `for loop`, then use its counter
          variable inside of a nested `repeat` loop.
        Course_4_Artist_Functions_challenge_c: Each iteration, you should draw a square
          then jump forward.
        Course_4_Artist_Functions_challenge_d: You will need to turn left by 90 degrees
          outside of your `repeat`, but still inside the `for loop`.
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_a: After you complete one square, try jumping forward
          half of its length before turning and making another.
        Course_4_Artist_Inspire_b: Each square and jump is repeated four times (using
          a left turn inbetween) to make a full pinwheel-like unit.
        Course_4_Artist_Inspire_c: Each pinwheel is also repeated four times, with
          a right turn of **360/sides**.
        Course_4_Artist_Inspire_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#843179</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">sides</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">4</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">length</title>
                          <value name="VALUE">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">sides</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">sides</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="draw_move" inline="true">
                                          <title name="DIR">moveForward</title>
                                          <value name="VALUE">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </statement>
                                      <next>
                                        <block type="jump" inline="true">
                                          <title name="DIR">jumpForward</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">length</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="math_number">
                                                  <title name="NUM">2</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnLeft</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="math_number">
                                                  <title name="NUM">360</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 Artist Vars 13:
        Course_4_Artist_Vars_13_a: You need two repeat loops (one inside the other)
          both repeating `sides` times.
        Course_4_Artist_Vars_13_b: "The inner repeat loop draws an octagon (turning
          to the left).   \n\nAfterwards, you need to move forward and turn right
          only in the outer loop."
        Course_4_Artist_Vars_13_c: To adjust the shape to stay the same size when
          the number of sides change, use the math block to divide the length in pixels
          by the number of sides.
      Course 4 Artist Vars 6:
        Course_4_Artist_Vars_6_a: To draw a regular polygon, turn **360/sides** each
          time.
      Course 4 Artist Vars 8:
        Course_4_Artist_Vars_8_a: If you divide your starting length by the number
          of sides, the length of each side will get shorter as the number of sides
          gets higher.
      Course 4 Bee Params 7:
        notice_pattern: 'Do you see a pattern in how the number of nectar changes? '
        count_with_for: Notice that the nectar goes up in steps. What kind of block
          can you use to do the same thing many times while counting up?
      Course 4 Bee Params 8:
        Course_4_Bee_Params_8_a: It's okay to ask for a honey number and a nectar
          number each time.  If there's none of something, the number can be 0.
      Course 4 Play Lab Params 2:
        Course_4_Play_Lab_Params_2_a: You will need to click "edit" on the jump function
          and update it so that it uses the `height` parameter.
      Course 4 Play Lab Vars 2:
        Course_4_Play_Lab_Vars_2_a: Make sure to set the number for `dog_speed` to
          something larger than `cat_speed`.
      Course 4 Play Labs For Loops 2:
        Course_4_Play_Labs_For_Loops_2_a: What would you add to your `for` loop every
          time to skip the even numbers?
      Course 4 Playlab For Loops 4b:
        Course_4_Playlab_For_Loops_4b_a: The flags are about 330 pixels away from
          the characters.
        Course_4_Playlab_For_Loops_4b_b: How can you make each character reach 330
          pixels in the same number of moves with different starting and stopping
          numbers?
        Course_4_Playlab_For_Loops_4b_c: Remember, it doesn't matter how much a character
          passes the flag by on its last step, as long as it takes each character
          the same number of steps to get to the flag.
      Course 4 Playlab For Loops 5b:
        Course_4_Playlab_For_Loops_5b_a: The characters are about 175 pixels away
          from the center.
        Course_4_Playlab_For_Loops_5b_b: Remember, a character's next step will be
          longer than their last, since the counter keeps getting larger.
      Course 4 SCF 1:
        Course_4_SCF_1_a: Each hexagon has 40 pixel sides.
        Course_4_SCF_1_b: There is a 120 pixel jump between each hexagon in each horizontal
          line.
        Course_4_SCF_1_c: "Before you draw the second row of hexagons, you need to
          turn right by 60 degrees and jump forward 40 pixels.  \n\nOnce you're in
          the correct vertical location, you have to turn your artist back again and
          jump backward 320 pixels."
        Course_4_SCF_1_d: "Before you draw the third row of hexagons, you need to
          turn right by 60 degrees and jump forward 40 pixels.  \n\nOnce you're in
          the correct vertical location, you have to turn your artist back again and
          jump backward 440 pixels (120 pixels farther than your `shift down/forward`
          function. "
        Course_4_SCF_1_e: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw a line of hexagons"></mutation>
                      <next>
                        <block type="procedures_callnoreturn">
                        <mutation name="shift down/forward"></mutation>
                          <next>
                            <block type="procedures_callnoreturn">
                            <mutation name="draw a line of hexagons"></mutation>
                              <next>
                                <block type="procedures_callnoreturn">
                                <mutation name="shift down/backward"></mutation>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">draw a hexagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">6</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">shift down/backward</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">60</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">440</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">draw a line of hexagons</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw a hexagon"></mutation>
                      <next>
                        <block type="jump" inline="true">
                          <title name="DIR">jumpForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">120</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">shift down/forward</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">60</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">320</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: Remember your functions from stage 16.
        Course_4_SCF_1a_b: "Look at this path as your main route:  \n\n![](https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)"
        Course_4_SCF_1a_c: You should consider using a `for loop`. Not for the steps,
          but for the function parameter.
        Course_4_SCF_1a_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false" uservisible="false" y="14">
              <next>
                <block type="variables_set" inline="false" uservisible="false">
                  <title name="VAR">left</title>
                  <value name="VALUE">
                    <block type="math_number" uservisible="false">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false" uservisible="false">
                      <title name="VAR">right</title>
                      <value name="VALUE">
                        <block type="math_number" uservisible="false">
                          <title name="NUM">0</title>
                        </block>
                      </value>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">21</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_if">
                          <title name="DIR">isPathLeft</title>
                          <statement name="DO">
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="get nectar">
                              <arg name="dir"></arg>
                              <arg name="counter"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="variables_get">
                                  <title name="VAR">left</title>
                                </block>
                              </value>
                              <value name="ARG1">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_if">
                                          <title name="DIR">isPathRight</title>
                                          <statement name="DO">
                                            <block type="procedures_callnoreturn" inline="false">
                                              <mutation name="get nectar">
                                              <arg name="dir"></arg>
                                              <arg name="counter"></arg>
                                              </mutation>
                                              <value name="ARG0">
                                                <block type="variables_get">
                                                  <title name="VAR">right</title>
                                                </block>
                                              </value>
                                              <value name="ARG1">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation>
              <arg name="dir"></arg>
              <arg name="counter"></arg>
              </mutation>
              <title name="NAME">get nectar</title>
              <statement name="STACK">
                <block type="controls_if" inline="false">
                <mutation else="1"></mutation>
                  <value name="IF0">
                    <block type="logic_compare" inline="true" movable="false">
                      <title name="OP">EQ</title>
                      <value name="A">
                        <block type="parameters_get">
                          <title name="VAR">dir</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="variables_get">
                          <title name="VAR">left</title>
                        </block>
                      </value>
                    </block>
                  </value>
                  <statement name="DO0">
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                          <block type="maze_nectar"></block>
                          </statement>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveBackward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="controls_if" inline="false">
                                <mutation else="1"></mutation>
                                  <value name="IF0">
                                    <block type="logic_compare" inline="true" movable="false">
                                      <title name="OP">EQ</title>
                                      <value name="A">
                                        <block type="parameters_get">
                                          <title name="VAR">dir</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">left</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <statement name="DO0">
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </statement>
                                  <statement name="ELSE">
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                    </block>
                                  </statement>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: "Notice that the shape of all honey points is similar.
          \ \n\nGood place for a function!"
        Course_4_SCF_1b_b: "Look at this idea for how the bee might travel:  \n\n![](https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)"
        Course_4_SCF_1b_c: You should consider using a `for loop` for the distance
          the bee travels.
        Course_4_SCF_1b_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="make honey up and over"></mutation>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_move">
                                          <title name="DIR">moveForward</title>
                                        </block>
                                      </statement>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
            <mutation></mutation>
              <title name="NAME">make honey up and over</title>
              <statement name="STACK">
                <block type="maze_move">
                  <title name="DIR">moveForward</title>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_honey">
                              <next>
                                <block type="maze_honey">
                                  <next>
                                    <block type="maze_move">
                                      <title name="DIR">moveBackward</title>
                                      <next>
                                        <block type="maze_turn">
                                          <title name="DIR">turnLeft</title>
                                          <next>
                                            <block type="maze_move">
                                              <title name="DIR">moveBackward</title>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 2:
        Course_4_SCF_2_a: Each octagon has 40 pixel sides.
        Course_4_SCF_2_b: There is a 136 pixel jump between each octagon in each horizontal
          line.
        Course_4_SCF_2_c: "Before you draw the second row of octagons, you need to
          turn right by 45 degrees and jump forward 96 pixels.  \n\nOnce you're in
          the correct vertical location, you have to turn your artist back again and
          jump backward 408 pixels. "
        Course_4_SCF_2_d: "Notice that because there are fewer octagons in the even
          rows, you don't have to jump back any further to get to the starting place
          for the odd rows.  \n\nThis means you can use the same function for all
          rows."
        Course_4_SCF_2_e: |-
          **Riešenie:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn" inline="false">
                      <mutation name="draw octagons">
                      <arg name="numOctagons"></arg>
                      </mutation>
                      <value name="ARG0">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <next>
                        <block type="procedures_callnoreturn">
                        <mutation name="shift down"></mutation>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="draw octagons">
                              <arg name="numOctagons"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <next>
                                <block type="procedures_callnoreturn">
                                <mutation name="shift down"></mutation>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="procedures_callnoreturn" inline="false">
                      <mutation name="draw octagons">
                      <arg name="numOctagons"></arg>
                      </mutation>
                      <value name="ARG0">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false">
              <mutation>
              <arg name="numOctagons"></arg>
              </mutation>
              <title name="NAME">draw octagons</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="parameters_get">
                      <title name="VAR">numOctagons</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw an octagon"></mutation>
                      <next>
                        <block type="jump" inline="true">
                          <title name="DIR">jumpForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">136</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">draw an octagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">8</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">shift down</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">45</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">96</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">408</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_b: 'This is a series of octagons with sides that are `counter`
          pixels long. '
        Course_4_SCF_3_c: 'Each octagon is called from inside a `for` loop that goes
          from 200 down to 2 by 2. '
        Course_4_SCF_3_d: 'Don''t forget to turn by 22.5 degrees at the end of each
          iteration. '
        Course_4_SCF_3_e: Both the color of each octagon and the width of the pen
          are controlled by the `counter` variable.
        Course_4_SCF_3_f: |-
          **Riešenie:**

          <xml>
            <block type="procedures_defnoreturn" editable="false">
              <mutation>
              <arg name="length"></arg>
              </mutation>
              <title name="NAME">draw an octagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">8</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">200</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_rgb" inline="false">
                          <value name="RED">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">MINUS</title>
                              <value name="A">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <value name="GREEN">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <value name="BLUE">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">MULTIPLY</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                            </block>
                          </value>
                        </block>
                      </value>
                      <next>
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">4</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="draw an octagon">
                              <arg name="length"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">22.5</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1:
        Course_4_SCFL_1_a: "Pozri sa na túto možnosť pohybu: \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        Course_4_SCFL_1_b: 'Skús použiť dva cykly `for`: Jeden pre pohyb nahor a zbieranie
          nektáru a druhý pre pohyb nadol a vyrábanie medu.'
        Course_4_SCFL_1_c: |-
          Všimni si, že jeden cyklus `for` potrebuje vo vnútri niekoľko obyčajných cyklov, ktoré sa opakujú `počítadlo` krát, aby si vytvoril zväčšujúci schodový vzor.

          Ďalší cyklus `for` potrebuje iba jeden obyčajný cyklus, aby vyrobil `počítadlo` medu.
        Course_4_SCFL_1_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_a: You may have to travel farther overall to use the smallest
          number of blocks.
        Course_4_SCFL_1a_b: "Pozri sa na túto možnosť pohybu: \n\n![](https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)"
        Course_4_SCFL_1a_c: A `for loop` will help you execute the same pattern, but
          with a changing number of steps.  Notice that the number of steps needed
          decreases from 7 to 5 by 1.
        Course_4_SCFL_1a_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">7</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">5</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnLeft</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="math_number">
                                          <title name="NUM">2</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_moveForward"/>
                                      </statement>
                                      <next>
                                        <block type="maze_turn">
                                          <title name="DIR">turnLeft</title>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_a: Try using a `for loop`.
        Course_4_SCFL_1b_b: "Pozri sa na túto možnosť pohybu: \n\n![](https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)"
        Course_4_SCFL_1b_c: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 2:
        Course_4_SCFL_2_a: "Pozri sa na túto možnosť pohybu: \n\n![](https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)"
        Course_4_SCFL_2_b: Notice that there are three points during each iteration
          of this `for` loop where you stop to interact with objects.
        Course_4_SCFL_2_c: During each iteration of the `for` loop, the number for
          each object relates to the `counter` variable in some way.
        Course_4_SCFL_2_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_moveForward">
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_moveForward">
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">MULTIPLY</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="math_number">
                                                  <title name="NUM">3</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="maze_honey"/>
                                          </statement>
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnLeft</title>
                                              <next>
                                                <block type="maze_moveForward">
                                                  <next>
                                                    <block type="maze_moveForward">
                                                      <next>
                                                        <block type="maze_turn">
                                                          <title name="DIR">turnRight</title>
                                                          <next>
                                                            <block type="controls_repeat_ext" inline="true">
                                                              <value name="TIMES">
                                                                <block type="math_arithmetic" inline="true">
                                                                  <title name="OP">POWER</title>
                                                                  <value name="A">
                                                                    <block type="math_number">
                                                                      <title name="NUM">2</title>
                                                                    </block>
                                                                  </value>
                                                                  <value name="B">
                                                                    <block type="variables_get">
                                                                      <title name="VAR">counter</title>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </value>
                                                              <statement name="DO">
                                                                <block type="maze_nectar"/>
                                                              </statement>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 3:
        Course_4_SCFL_3_a: "`Šírka štetca` je 1. Prvý štvorec má strany 50 pixelov
          a každý ďalší štvorec je o 50 pixelov širší ako predošlý."
        Course_4_SCFL_3_b: Nepriehľadnosť štetca je vždy `counter`/2.
        Course_4_SCFL_3_c: Potom ako dokončíš každý štvorec, tak nezabudni skočiť
          dozadu, otočiť sa, skočiť znovu a otočiť sa späť!
        Course_4_SCFL_3_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 4:
        Course_4_SCFL_4_a: The color change happens using the `set color with red,
          green, blue` block.  Red is always the value of `counter`, green is always
          `255 - counter`, and blue remains constant at 255 exactly.
        Course_4_SCFL_4_b: Each shape is a square with sides that are `counter` pixels
          long, starting with 5px, and increasing by 5px all the way up to 200px.
        Course_4_SCFL_4_c: The artist turns 15 degrees between each square.
        Course_4_SCFL_4_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">200</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">4</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">90</title>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">15</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 6:
        Course_4_SCFL_6_a: Zmena farby sa deje s použitím bloku `nastav farbu s červená,
          zelená, modrá`. Červená je konštanta 255, zelená je vždy hodnota `counter`
          a modrá je vždy `255 - counter`.
        Course_4_SCFL_6_b: The code for this is much more simple than you might think.  Just
          set the color inside the `for loop`, move forward, then turn.
        Course_4_SCFL_6_c: 'Cyklus `for` ide od 5 do 250 po 2. '
        Course_4_SCFL_6_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 7:
        Course_4_SCFL_7_a: The color change happens using the `set color with red,
          green, blue` block.  Red is set to `counter`. Green is  `255 - counter`,
          and blue is set constant at 255.
        Course_4_SCFL_7_b: 'This drawing is made using two similar `for loops`.  One
          goes from 5 to 200 by 2, the other goes from 200 to 5 by 2. '
        Course_4_SCFL_7_c: Inside each `for loop` you move forward 5 pixels before
          you turn by `360 / counter`. Don't forget to set your brush to width `counter`
          before you do!
        Course_4_SCFL_7_d: You'll need to turn left by 225 degrees between the two
          `for loops`.
        Course_4_SCFL_7_e: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="alpha" inline="true" id="alpha">
                  <value name="VALUE">
                    <block type="math_number_dropdown">
                      <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">200</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_colour" inline="true" id="draw-color">
                              <value name="COLOUR">
                                <block type="colour_rgb" inline="false">
                                  <value name="RED">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="GREEN">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">MINUS</title>
                                      <value name="A">
                                        <block type="math_number">
                                          <title name="NUM">255</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <value name="BLUE">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">5</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnLeft</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">DIVIDE</title>
                                          <value name="A">
                                            <block type="math_number">
                                              <title name="NUM">360</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="variables_get">
                                              <title name="VAR">counter</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">225</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_for_counter" inline="true">
                            <mutation counter="counter"></mutation>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">5</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_width" inline="false">
                                  <value name="WIDTH">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_colour" inline="true" id="draw-color">
                                      <value name="COLOUR">
                                        <block type="colour_rgb" inline="false">
                                          <value name="RED">
                                            <block type="variables_get">
                                              <title name="VAR">counter</title>
                                            </block>
                                          </value>
                                          <value name="GREEN">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">MINUS</title>
                                              <value name="A">
                                                <block type="math_number">
                                                  <title name="NUM">255</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <value name="BLUE">
                                            <block type="math_number">
                                              <title name="NUM">255</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_move" inline="true">
                                          <title name="DIR">moveForward</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">5</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 1:
        Course_4_SCV_1_a: 'Variables are helpful because you can add to them each
          time through a loop. '
        Course_4_SCV_1_b: This puzzle has one loop that creates the polygon, one loop
          that repeats the polygon `sides` times, then another loop that does it all
          again after adding 5 to `sides`.
        Course_4_SCV_1_c: Using a variable for `sides` and one for `length` makes
          the code cleaner because you can loop the same code multiple times, instead
          of creating a new copy for each set of numbers.
        Course_4_SCV_1_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">length</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">500</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">sides</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">0</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_colour" inline="true" id="draw-color">
                                  <value name="COLOUR">
                                    <block type="colour_random"/>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">sides</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">5</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="controls_repeat_ext" inline="true">
                                              <value name="TIMES">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                              <statement name="DO">
                                                <block type="draw_move" inline="true">
                                                  <title name="DIR">moveForward</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_turn" inline="true">
                                                      <title name="DIR">turnLeft</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">DIVIDE</title>
                                                          <value name="A">
                                                            <block type="math_number">
                                                              <title name="NUM">360</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </statement>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnRight</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="math_number">
                                                          <title name="NUM">360</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 2:
        Course_4_SCV_2_a: |-
          The completed image is made up of 10 of these "flowers":\
          ![](https://images.code.org/bac2a606dfa59c00409294499540267d-image-1469641972385.png)

          ...which are made up of 10 of these decagons:\
          ![](https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4-image-1469642051512.png)
        Course_4_SCV_2_b: 'This design uses nested loops (three deep). All loops run
          `sides` times. '
        Course_4_SCV_2_c: The artist turns to the left when creating each decagon,
          but turns to the right in both of the other loops.
        Course_4_SCV_2_d: To prevent all of your 10 petal "flowers" from getting drawn
          in the same place, make sure to jump forward by `length`/`sides` before
          you turn 360/`sides` degrees as part of your outermost loop.
        Course_4_SCV_2_e: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">length</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">400</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">sides</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_colour" inline="true" id="draw-color">
                                  <value name="COLOUR">
                                    <block type="colour_picker">
                                      <title name="COLOUR">#ff0000</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">sides</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="variables_get">
                                                      <title name="VAR">length</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="math_number">
                                                          <title name="NUM">360</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </statement>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </statement>
                                      <next>
                                        <block type="jump" inline="true">
                                          <title name="DIR">jumpForward</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">length</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 3:
        Course_4_SCV_3_a: 'Use your math block to add and subtract points to the `points`
          variable when sprites collide. '
        Course_4_SCV_3_b: You can change the parameter for how far you move your sprite
          each time one of the arrow keys is pressed.
        Course_4_SCV_3_c: |-
          **Riešenie:**

          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">up</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">down</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">left</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">right</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">points</title>
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">points</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 4:
        Course_4_SCV_4_a: Three variables will help you out here.  One for units of
          nectar, one for units of honey, and one for how far the bee should move
          each iteration.
        Course_4_SCV_4_b: 'It will be very helpful to use three loops inside of your
          main loop.  One for moving forward, one for collecting nectar and one for
          making honey. '
        Course_4_SCV_4_c: "Pozri sa na túto možnosť pohybu: \n\n![](https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)"
        Course_4_SCV_4_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">honey</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">nectar</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">6</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">5</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">nectar</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">1</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">nectar</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_nectar"/>
                                  </statement>
                                  <next>
                                    <block type="maze_moveForward">
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">honey</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="maze_honey"/>
                                          </statement>
                                          <next>
                                            <block type="maze_moveForward">
                                              <next>
                                                <block type="maze_turn">
                                                  <title name="DIR">turnRight</title>
                                                  <next>
                                                    <block type="variables_set" inline="false">
                                                      <title name="VAR">honey</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">ADD</title>
                                                          <value name="A">
                                                            <block type="variables_get">
                                                              <title name="VAR">honey</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="math_number">
                                                              <title name="NUM">1</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">nectar</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">MINUS</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">nectar</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">1</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 5:
        Course_4_SCV_5_a: |-
          Pozri sa na túto možnosť pohybu:

          ![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_b: Each time through the loop, the flowers have two less nectar
          and the bee needs to make one more honey.
        Course_4_SCV_5_c: Notice that at the beginning of the outside loop, the bee
          moves as many times as there is nectar in the next flower.
        Course_4_SCV_5_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">honey</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">nectar</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">nectar</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">nectar</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_nectar"/>
                                      </statement>
                                      <next>
                                        <block type="maze_move">
                                          <title name="DIR">moveForward</title>
                                          <next>
                                            <block type="controls_repeat_ext" inline="true">
                                              <value name="TIMES">
                                                <block type="variables_get">
                                                  <title name="VAR">honey</title>
                                                </block>
                                              </value>
                                              <statement name="DO">
                                                <block type="maze_honey"/>
                                              </statement>
                                              <next>
                                                <block type="variables_set" inline="false">
                                                  <title name="VAR">honey</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">honey</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="variables_set" inline="false">
                                                      <title name="VAR">nectar</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">nectar</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 6:
        Course_4_SCV_6_a: |-
          Take a look at what a single completed shape looks like

          ![](https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)
        Course_4_SCV_6_b: 'You will benefit from creating 8 variables: red1, green1,
          blue1, red2, green2, blue2, length, and sides.'
        Course_4_SCV_6_c: Each of the shape's 5 sides is broken up into pieces of
          `length`/`sides` where the zig is teal (rgb = 0,175,200) and the zag is
          purple (rgb = 100, 50, 150).
        Course_4_SCV_6_d: 'To zig, turn left by `360`/`sides`.  To zag, turn right
          by `360`/`sides`. '
        Course_4_SCV_6_e: 'The rest of the program is very standard for making a full
          360 degree rotation from a shape, except that we are overlapping the shapes
          by half, so we have to turn right by `180`/`sides`, which means that we
          need twice as many of them as usual (`sides`\*`2` repetitions). '
        Course_4_SCV_6_f: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">red1</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">0</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">green1</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">175</title>
                            </block>
                          </value>
                          <next>
                            <block type="variables_set" inline="false">
                              <title name="VAR">blue1</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <next>
                                <block type="variables_set" inline="false">
                                  <title name="VAR">red2</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">100</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">green2</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">50</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="variables_set" inline="false">
                                          <title name="VAR">blue2</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">150</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="variables_set" inline="false">
                                              <title name="VAR">length</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">70</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="variables_set" inline="false">
                                                  <title name="VAR">sides</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">5</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="controls_repeat_ext" inline="true">
                                                      <value name="TIMES">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">MULTIPLY</title>
                                                          <value name="A">
                                                            <block type="math_number">
                                                              <title name="NUM">2</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                      <statement name="DO">
                                                        <block type="controls_repeat_ext" inline="true">
                                                          <value name="TIMES">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                          <statement name="DO">
                                                            <block type="controls_repeat_ext" inline="true">
                                                              <value name="TIMES">
                                                                <block type="variables_get">
                                                                  <title name="VAR">sides</title>
                                                                </block>
                                                              </value>
                                                              <statement name="DO">
                                                                <block type="draw_colour" inline="true" id="draw-color">
                                                                  <value name="COLOUR">
                                                                    <block type="colour_rgb" inline="false">
                                                                      <value name="RED">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">red1</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="GREEN">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">green1</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="BLUE">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">blue1</title>
                                                                      </block>
                                                                      </value>
                                                                    </block>
                                                                  </value>
                                                                  <next>
                                                                    <block type="draw_move" inline="true">
                                                                      <title name="DIR">moveForward</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">length</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_turn" inline="true">
                                                                      <title name="DIR">turnLeft</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_colour" inline="true" id="draw-color">
                                                                      <value name="COLOUR">
                                                                      <block type="colour_rgb" inline="false">
                                                                      <value name="RED">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">red2</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="GREEN">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">green2</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="BLUE">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">blue2</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_move" inline="true">
                                                                      <title name="DIR">moveForward</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">length</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_turn" inline="true">
                                                                      <title name="DIR">turnRight</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                    </block>
                                                                  </next>
                                                                </block>
                                                              </statement>
                                                              <next>
                                                                <block type="draw_turn" inline="true">
                                                                  <title name="DIR">turnRight</title>
                                                                  <value name="VALUE">
                                                                    <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </next>
                                                            </block>
                                                          </statement>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_arithmetic" inline="true">
                                                                  <title name="OP">DIVIDE</title>
                                                                  <value name="A">
                                                                    <block type="math_number">
                                                                      <title name="NUM">180</title>
                                                                    </block>
                                                                  </value>
                                                                  <value name="B">
                                                                    <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </statement>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      CourseD_Dance_Party_01:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Zabezpeč, aby sa na obrazovke objavil tanečník.

          _Táto úroveň končí po 4 taktoch._
        challenges: |-
          **Dobrovoľné výzvy**

          -   Vyber si inú pesničku.
          -   Premenuj svojho tanečníka.
      CourseD_Dance_Party_02:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Tanečník musí po 4 taktoch zmeniť kroky.

          _Úroveň končí po 7 taktoch._
      CourseD_Dance_Party_03:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Po 6 taktoch musí tvoj tanečník robiť iný krok ako robil po 4 taktoch.

          _Úroveň končí po 11 taktoch._
      CourseD_Dance_Party_04:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Potrebuješ zmeniť efekt pozadia skôr, ako začne siedmy takt.

          _Táto úroveň končí po 9 taktoch._
        challenges: |-
          **Dobrovoľná výzva**

          Zmeň efekt pozadia v roznych častiach pesničky napojením nového bloku pod blok <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"takty"</title></block></xml>.
      CourseD_Dance_Party_06:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Potrebuješ mať aspoň dvoch tanečníkov.

          _Táto úroveň končí po 5 taktoch._
        challenges: "**Dobrovoľná výzva**\n\n-   Pridaj tretieho tanečníka (ak chceš,
          tak aj viacerých!) \n-   Nastav tanečníkov tak, aby robili rôzne kroky v
          rôznych častiach pesničky."
      CourseD_Dance_Party_08:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Dvaja tanečníci musia mať veľkosť inú ako 100.

          _Táto úroveň končí po 5 taktoch._
        challenges: |-
          **Dobrovoľná výzva**

          -   Experimentuj s menením aj ďalších vlastností (šírka, výška, otočenie, atď.)
      CourseD_Dance_Party_09:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Zmeň sfarbenie aspoň jedného tanečníka.

          _Táto úroveň končí po 7 taktoch._
      CourseD_Dance_Party_10:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Vlastnosti dvoch, alebo viac tanečníkov sa musia meniť.

          _Táto úroveň končí po 7 taktoch._
      CourseD_Dance_Party_11:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Stačí ak daš priestor svojej kreativite!

          _Táto úroveň končí po 7 taktoch._
      CourseD_Dance_Party_11_5:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Stačí ak daš priestor svojej kreativite!

          _Táto úroveň končí po 7 taktoch._
      CourseD_Dance_Party_11b:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Použi blok `keď hore stlačený` nato, aby Robot urobil tanečný krok, keď stlačíš šípku hore.

          _Táto úroveň končí po 7 taktoch._
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: 'Pozri sa na **Morské lampáše** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Ako ich môžeš použiť v podmienke, aby si sa s nimi dostal k oceánskemu monumentu?  '
      CourseE_HOC 2018 Level_7a:
        aquatic7: Môžeš použiť blok s podmienkou "ak", ktorý ti pomôže otočiť sa vždy
          tým správnym smerom.
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: Vidíš červené a modré koralové bloky? Použi ich ako ukazovatele
          cesty v útese na otočenie doprava a doľava.
      Dance_2019_01:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Zabezpeč, aby sa na obrazovke objavil tanečník.

          _Táto úroveň končí po 4 taktoch._
        challenges: "**Dobrovoľná výzva**\n\n-   Vyber si inú pesničku.\n-   Presuň
          svojho tanečníka na novú pozíciu. \n-   Vytvor viac ako jedného tanečníka."
      Dance_2019_02:
        validation: |-
          **Ako prejdem tento level?**

          -   Tanečník musí predviest nejaký pohyb.
          -   Musíš stlačiť tlačidlo so šípkou.

          _Tento level skončí po 4 taktoch._
        challenges: |-
          **Doborovoľná výzva**

          Použi viac ako jeden blok <xml><block type="Dancelab_whenKey"><title name="KEY"></title></block></xml>.
      Dance_2019_03:
        validation: |-
          **Ako prejdem tento level?**

          -   Obaja tanečníci musia predviest nejaký pohyb.
          -   Musíš stlačiť tlačidlo so šípkou.

          _Tento level skončí po 6 taktoch._
        challenges: |-
          **Doborovoľná výzva**

          -   Tanečník musí regovať po stlačení tlačidiel ľavej a pravej šipky.
      Dance_2019_04:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Tanečník musí po 4 taktoch zmeniť kroky.

          _Úroveň končí po 7 taktoch._
      Dance_2019_05:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Po 6 taktoch musí tvoj tanečník robiť iný krok ako robil po 4 taktoch.

          _Úroveň končí po 11 taktoch._
        challenges: |-
          **Dobrovoľná výzva**

          -   Zmeň pozadie, vždy keď tanečníci zmenia tanečný pohyb.
      Dance_2019_06:
        validation: "**Ako prejdem tento level?**\n\n-   Vytvor jedného hlavného tanečníka
          a skupinu vedľajších tanečníkov v rámvi prvých štyroch taktov. \n\n_Tento
          level sa skončí po siedmich taktoch._"
        challenges: |-
          **Dobrovoľná výzva**

          -   Vytvor niekoľko skupín vedľajších tanečníkov.
      Dance_2019_07:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Zmeň veľkosť aspoň jedného tanečníka.

          _Tento level končí po 6 taktoch._
        challenges: |-
          **Dobrovoľná výzva**

          -   Experimentuj a zmeň aj ďalšie vlastnosti ako napríklad šírka alebo otočenie.
      Dance_2019_08:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Zmeň odtieň aspoň jedného tanečníka.

          _Tento level končí po 6 taktoch._
        tint_hint: Všimli ste si, že sa vaši tanečníci nezmenia presne na tú farbu,
          kotrú ste si vybrali? Je to tak preto, že **odtiene** kombinujú farbu, ktorú
          si vyberiete, s farbami tanečníka.
      Dance_2019_09:
        validation: |-
          **Ako prejdem tento level?**

          -   Len stlač tlačidlo "Dokončiť"!
        repeat_every_ideas: |-
          **Potrebuješ inšpiráciu?**

          -   Opakovane zmeň veľkosť tanečníka, aby narástol.
          -   Opakovane meň otáčanie tanečníka, aby si ho roztočil/a.

          _Taktiež môžeš použiť záporné čísla, aby si vytvoril/a opačný efekt!_
        next_previous: |-
          **Dobrovoľná výzva**

          -   Tento nový blok udalostí môžeš tiež použiť na prechádzanie zoznamom tanečných pohybov, ak ho nastaveníš napr´klad na `(Náhodné)`, `(Ďalšie)`, alebo `(Predchádzajúce)`.
              <xml><block type="Dancelab_changeMoveEachLR">
              <title name="GROUP">???</title>
              <title name="MOVE">"rand"</title>
              <title name="DIR">-1</title>
              </block></xml>
      Dance_Party_01:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Zabezpeč, aby sa na obrazovke objavil tanečník.

          _Táto úroveň končí po 4 taktoch._
        challenges: |-
          **Dobrovoľné výzvy**

          -   Vyber si inú pesničku.
          -   Premenuj svojho tanečníka.
      Dance_Party_02:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Tanečník musí po 4 taktoch zmeniť kroky.

          _Úroveň končí po 7 taktoch._
      Dance_Party_03:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Po 6 taktoch musí tvoj tanečník robiť iný krok ako robil po 4 taktoch.

          _Úroveň končí po 11 taktoch._
      Dance_Party_04:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Potrebuješ zmeniť efekt pozadia skôr, ako začne siedmy takt.

          _Táto úroveň končí po 9 taktoch._
        challenges: |-
          **Dobrovoľná výzva**

          Zmeň efekt pozadia v roznych častiach pesničky napojením nového bloku pod blok <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"takty"</title></block></xml>.
      Dance_Party_05:
        validation: |-
          **Ako prejdem tento level?**

          -   Pred ukončením úrovne musí tvoj tanečník absolvovať najmenej 4 rôzne tanečné pohyby.

          _Tento level skončí po 12tich taktoch._
      Dance_Party_06:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Potrebuješ mať aspoň dvoch tanečníkov.

          _Táto úroveň končí po 5 taktoch._
        challenges: "**Dobrovoľná výzva**\n\n-   Pridaj tretieho tanečníka (ak chceš,
          tak aj viacerých!) \n-   Nastav tanečníkov tak, aby robili rôzne kroky v
          rôznych častiach pesničky."
      Dance_Party_08:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Dvaja tanečníci musia mať veľkosť inú ako 100.

          _Táto úroveň končí po 5 taktoch._
        challenges: |-
          **Dobrovoľná výzva**

          -   Experimentuj s menením aj ďalších vlastností (šírka, výška, otočenie, atď.)
      Dance_Party_09:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Zmeň sfarbenie aspoň jedného tanečníka.

          _Táto úroveň končí po 7 taktoch._
      Dance_Party_10:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Vlastnosti dvoch, alebo viac tanečníkov sa musia meniť.

          _Táto úroveň končí po 7 taktoch._
      Dance_Party_11:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Stačí ak daš priestor svojej kreativite!

          _Táto úroveň končí po 7 taktoch._
      Dance_Party_11_5:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Stačí ak daš priestor svojej kreativite!

          _Táto úroveň končí po 7 taktoch._
      Dance_Party_11b:
        validation: |-
          **Ako prejdem túto úroveň?**

          -   Použi blok `keď hore stlačený` nato, aby Robot urobil tanečný krok, keď stlačíš šípku hore.

          _Táto úroveň končí po 7 taktoch._
      Dance_Party_extras_alternate_2019:
        alternate: Blok na striedanie je v kategórii "Tanečníci“.
      Function intro Ryan:
        Function_intro_Ryan_b: Ak správne zavoláš funkcie, toto je cesta ktorou pôjdeš...
        Function_intro_Ryan_a: Funkciu môžete volať v programe viackrát. Skúste ju
          volať dvakrát, aby ste vyriešili tento hlavolam.
      Function intro Ryan_2019:
        Function_intro_Ryan_b: Ak správne zavoláš funkcie, toto je cesta ktorou pôjdeš...
        Function_intro_Ryan_a: Funkciu môžete volať v programe viackrát. Skúste ju
          volať dvakrát, aby ste vyriešili tento hlavolam.
      HOC 2018 Level_10:
        voyage_aquatic_10a: 'Pozri sa na **Morské lampáše** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Ako ich môžeš použiť v podmienke, aby si sa s nimi dostal k oceánskemu monumentu?  '
      HOC 2018 Level_7a:
        aquatic7: Môžeš použiť blok s podmienkou "ak", ktorý ti pomôže otočiť sa vždy
          tým správnym smerom.
      HOC 2018 Level_9b:
        voyage_aquatic_9a: Vidíš červené a modré koralové bloky? Použi ich ako ukazovatele
          cesty v útese na otočenie doprava a doľava.
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: Z panela s nástrojmi presuň jeden blok 'posuň sa dopredu'
          do pracovného priestoru a prichyť ho na mieste pod blokom 'pri spustení'.
        MC_HOC_2017_01_RETRY_b: Nezabudni kliknúť na tlačidlo "Spustiť", aby sa spustil
          kód pre agenta.
        MC_HOC_2017_01_RETRY_c: Keď agent prejde všetok svoj kód, môžeš posúvať hráča
          pomocou klávesov so šípkami!
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: Z panela s nástrojmi presuň jeden blok 'posuň sa dopredu'
          do pracovného priestoru a prichyť ho na mieste pod blokom 'pri spustení'.
        MC_HOC_2017_01_RETRY_b: Nezabudni kliknúť na tlačidlo "Spustiť", aby sa spustil
          kód pre agenta.
        MC_HOC_2017_01_RETRY_c: Keď agent prejde všetok svoj kód, môžeš posúvať hráča
          pomocou klávesov so šípkami!
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Posuň agenta dopredu o dve políčka, aby sa postavil
          na prítlačnú dosku. To otvorí hráčovi dvere.
        MC_HOC_2017_02_Cole_b: |-
          Stlač tlačidlo "Spustiť"!

          Kód môžeš spustiť, aj keď nie je správny. Spúšťaj a resetuj kód znova a znova, až kým nezistíš, kde je chyba.
        MC_HOC_2017_02_Cole_c: Keď agent otvorí dvere, posúvaj hráča po mape pomocou
          klávesov so šípkami!
        MC_HOC_2017_02_Cole_d: Uisti sa, že agent ide po ceste vyznačenej na mape!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Posuň agenta dopredu o dve políčka, aby sa postavil
          na prítlačnú dosku. To otvorí hráčovi dvere.
        MC_HOC_2017_02_Cole_b: |-
          Stlač tlačidlo "Spustiť"!

          Kód môžeš spustiť, aj keď nie je správny. Spúšťaj a resetuj kód znova a znova, až kým nezistíš, kde je chyba.
        MC_HOC_2017_02_Cole_c: Keď agent otvorí dvere, posúvaj hráča po mape pomocou
          klávesov so šípkami!
        MC_HOC_2017_02_Cole_d: Uisti sa, že agent ide po ceste vyznačenej na mape!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Keď dostaneš agenta k prítlačnej doske, pomocou klávesov
          so šípkami môžeš presunúť hráča ku kompasu!
        MC_HOC_2017_03_Cole_b: Zdá sa ti kód trochu dlhý? Skús použiť cyklus 'opakuj'
          a uvidíš, či prídeš na to, ako ho skrátiť!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Keď dostaneš agenta k prítlačnej doske, pomocou klávesov
          so šípkami môžeš presunúť hráča ku kompasu!
        MC_HOC_2017_03_Cole_b: Zdá sa ti kód trochu dlhý? Skús použiť cyklus 'opakuj'
          a uvidíš, či prídeš na to, ako ho skrátiť!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: 'Pomocou bloku ''otoč sa v pravo'' zmeň smer
          agenta '
        MC_HOC_2017_04POINT5_RYAN_a: Agentovi sa stačí dostať k prvej prítlačnej doske,
          aby Alex alebo Steve mohli prejsť k sekere.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: 'Pomocou bloku ''otoč sa v pravo'' zmeň smer
          agenta '
        MC_HOC_2017_04POINT5_RYAN_a: Agentovi sa stačí dostať k prvej prítlačnej doske,
          aby Alex alebo Steve mohli prejsť k sekere.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Agent musí použiť príkaz 'posuň sa dopredu' 7-krát.
          Ako môžeš použiť cyklus 'opakuj', aby sa to stalo?
        MC_HOC_2017_04_Cole_c: |-
          Stlač tlačidlo "Spustiť"!

          Kód môžeš spustiť, aj keď nie je správny. Spúšťaj a resetuj kód znova a znova, až kým nezistíš, kde je chyba.
        MC_HOC_2017_04_Cole_b: Keď sa agent dostane na prítlačnú dosku, otvorí hráčovi
          dvere.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Agent musí použiť príkaz 'posuň sa dopredu' 7-krát.
          Ako môžeš použiť cyklus 'opakuj', aby sa to stalo?
        MC_HOC_2017_04_Cole_c: |-
          Stlač tlačidlo "Spustiť"!

          Kód môžeš spustiť, aj keď nie je správny. Spúšťaj a resetuj kód znova a znova, až kým nezistíš, kde je chyba.
        MC_HOC_2017_04_Cole_b: Keď sa agent dostane na prítlačnú dosku, otvorí hráčovi
          dvere.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: Vedel si, že do cyklu môžeš vložiť viac ako jeden blok
          kódu? Skús sa pohybovať dopredu  **a** umiestniť dosku vo vnútri cyklu 'opakuj',
          aby si dokončil túto úlohu.
        MC_HOC_2017_05_Cole_b: Dostaň agenta cez rieku postavením mostu popri tom,
          ako kráčaš.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: Vedel si, že do cyklu môžeš vložiť viac ako jeden blok
          kódu? Skús sa pohybovať dopredu  **a** umiestniť dosku vo vnútri cyklu 'opakuj',
          aby si dokončil túto úlohu.
        MC_HOC_2017_05_Cole_b: Dostaň agenta cez rieku postavením mostu popri tom,
          ako kráčaš.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: Koľkokrát sa tento cyklus spustí? Koľkokrát _by sa
          mal_ spustiť?
        MC_HOC_2017_06_Cole_b: 'Pomôž agentovi postaviť most po celej šírke rieky! '
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: Koľkokrát sa tento cyklus spustí? Koľkokrát _by sa
          mal_ spustiť?
        MC_HOC_2017_06_Cole_b: 'Pomôž agentovi postaviť most po celej šírke rieky! '
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Všetko, čo musíš spraviť s agentom je vyčistiť chodník
          k banskému vozíku.
        MC_HOC_2017_07_Cole_a: Ak chceš vyriešiť túto úlohu, zisti, čo robí funkcia
          'uvoľni cestu'. Z panela s nástrojmi vyber malý zelený blok 'uvoľni cestu'
          toľkokrát, koľko potrebuješ.
        MC_HOC_2017_07_Cole_b: Skús zmiešať bloky funkcie s ďalšími blokmi z panela
          s nástrojmi, aby si vyriešil túto úlohu.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Všetko, čo musíš spraviť s agentom je vyčistiť chodník
          k banskému vozíku.
        MC_HOC_2017_07_Cole_a: Ak chceš vyriešiť túto úlohu, zisti, čo robí funkcia
          'uvoľni cestu'. Z panela s nástrojmi vyber malý zelený blok 'uvoľni cestu'
          toľkokrát, koľko potrebuješ.
        MC_HOC_2017_07_Cole_b: Skús zmiešať bloky funkcie s ďalšími blokmi z panela
          s nástrojmi, aby si vyriešil túto úlohu.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: Nevieš kam ísť? Pohľadaj bodkovanú čiaru!
        MC_HOC_2017_10_Cole_a: Zjednoduš riešenie tohto hlavolamu pomocou funkcií!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: Nevieš kam ísť? Pohľadaj bodkovanú čiaru!
        MC_HOC_2017_10_Cole_a: Zjednoduš riešenie tohto hlavolamu pomocou funkcií!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: |-
          Stlač tlačidlo "Spustiť"!

          Kód môžeš spustiť, aj keď nie je správny. Spúšťaj a resetuj kód znova a znova, až kým nezistíš, kde je chyba.
        MC_HOC_2017_08_RY_b: Existuje MNOHO spôsobov, ako vyriešiť tento hlavolam.
          Skús niektoré z nich!
        MC_HOC_2017_08_RY_c: Cez lávu sa najľahšie dostaneš po prerušovanej čiare.
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: |-
          Stlač tlačidlo "Spustiť"!

          Kód môžeš spustiť, aj keď nie je správny. Spúšťaj a resetuj kód znova a znova, až kým nezistíš, kde je chyba.
        MC_HOC_2017_08_RY_b: Existuje MNOHO spôsobov, ako vyriešiť tento hlavolam.
          Skús niektoré z nich!
        MC_HOC_2017_08_RY_c: Cez lávu sa najľahšie dostaneš po prerušovanej čiare.
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Skús pomocou agenta vybudovať cesty pre banský vozík,
          aby si mohol objavovať svet!
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Skús pomocou agenta vybudovať cesty pre banský vozík,
          aby si mohol objavovať svet!
      NEW Course 4 Artist Functions 13:
        NEW_Course_4_Artist_Functions_13_a: Try editing the `draw a line of squares`
          function so that you don't have to call it twice.
        NEW_Course_4_Artist_Functions_13_c: What code would you need if you were going
          to try to make a star using regular lines instead of boxes?
      NEW Course 4 Artist Functions 4:
        NEW_Course_4_Artist_Functions_4_a: You will have to use a `turn right by 120
          degrees` block after each square.
      NEW Course 4 Artist Functions 9:
        NEW_Course_4_Artist_Functions_9_a: Try running the code before you add any
          blocks.   What makes the drawing look a little off?
        NEW_Course_4_Artist_Functions_9_b: If you can't quite put your finger on what's
          going wrong, try slowing down the artist's by moving the slider to the left.
      NEW Course 4 Artist Params 11:
        NEW_Course_4_Artist_Params_11_a: There is more than one number that needs
          to be replaced by a variable inside the function.
      NEW Course 4 Artist Params 13:
        NEW_Course_4_Artist_Params_13_a: 'You will need to divide the _perimeter_
          by the number of sides in order to keep the shapes the same size overall. '
      NEW Course 4 Artist Params 14:
        NEW_Course_4_Artist_Params_14_a: It's okay to run the program a few times
          to figure out how the function works with different parameters.
      NEW Course 4 Artist Params inspire:
        brush_width: We set the brush width to 1, then the color to blue before we
          did anything else.
        double_loop: Skús vložiť cyklus "for" dovnútra cyklu "opakuj".
        specifics: |-
          The `for loop` runs from three to seventeen for each of the six "petals" before moving on to create the next, drawing shapes with only an odd number of sides.

          The `set alpha` block uses division to fade the color as the counter gets higher.
        after: When you're done with each "petal", be sure to `move forward` 20 pixels
          before you make a 60 degree rotation.
        solution: |-
          **Solution**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">6</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_for_counter" inline="true">
                            <mutation counter="counter"></mutation>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">17</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="alpha" inline="true" id="alpha">
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">DIVIDE</title>
                                      <value name="A">
                                        <block type="math_number">
                                          <title name="NUM">500</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="procedures_callnoreturn" inline="false">
                                      <mutation name="draw a polygon">
                                      <arg name="length"></arg>
                                      <arg name="sides"></arg>
                                      </mutation>
                                      <value name="ARG0">
                                        <block type="math_number">
                                          <title name="NUM">30</title>
                                        </block>
                                      </value>
                                      <value name="ARG1">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">20</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">60</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            </xml>
      NEW Course 4 Bee For Loops 10a:
        NEW_Course_4_Bee_For_Loops_10a_a: Dokážeš nájsť vzťah medzi počtom krokov,
          ktoré potrebuješ prejsť, a počtom nektárov, ktoré musíš pozbierať?
        NEW_Course_4_Bee_For_Loops_10a_b: Potrebuješ použiť 2 opakovania, jedno použije
          matematický blok.
      NEW Course 4 Bee For Loops 7:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Skús spraviť nejaké výpočty s premennou počítadlo.

          Čo musíš spraviť s počítadlom na každom kvete, aby sa to rovnalo množstvu nektáru, ktoré potrebuješ pozbierať?
      NEW Course 4 Bee For Loops 8:
        NEW_Course_4_Bee_For_Loops_8_a: |-
          Pri každom prechode tvojho cyklu sa prírastok pridáva k tvojej premennej počítadlo.

          Koľko potrebuješ zakaždým pridať, aby si sa dostal k ďalšiemu množstvu nektárov?
      New Minecraft Hero Project:
        MC_HOC_2017_13_Cole_a: Skús pomocou agenta vybudovať mosty, aby sa Alex alebo
          Steve mohli prechádzať za okrajmi mapy.
      OPD-K5-events-2:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      OPD-K5-events-3:
        courseC_flappy_events2_a: 'Blok, ktorý potrebuješ pridať sa volá `nastav rýchlosť`. '
        courseC_flappy_events2_b: Na vyriešenie tejto úlohy, spoj dokopy bloky `nastav
          rýchlosť` a `pri spustení`.
      OPD-K5-events-4:
        courseC_flappy_events3_a: Ak niečo nefunguje, uisti sa, že tvoje bloky sú
          na pracovnej ploche pripojené k správnym udalostiam.
      OPD-K5-events-5:
        courseC_flappy_events4_a: Na vyriešenie tejto úlohy, pripoj blok `ukonči hru`
          k bloku `keď narazí na prekážku`.
      OPD-K5-events-6:
        courseC_flappy_events5_a: Potrebuješ použiť blok `pridaj bod`, aby si prešiel
          tento level.
      OPD-K5-forloops-1:
        courseF_bee_for1_a: Potiahni fialový čiselný blok do prázdneho miesta v cykle
          `opakuj`, aby si povedal, koľko krát sa má opakovať.
        courseF_bee_for1_b: Potrebuješ dva bloky v tvojom cykle ’opkauj’, aby si pozbieral
          všetok nektár.
      OPD-K5-forloops-2:
        courseF_bee_for2_a: Ak si zmätený, tak pracuj vždy len na jednom kvete a často
          testuj.
        courseF_bee_for2_b: Nezabudni sa posunúť dopredu medzi každým cyklom, takže
          sa dostaneš ku kaźdému kvetu.
      OPD-K5-forloops-5:
        courseF_bee_for4_a: Na vyriešenie tejto úlohy použi cyklus `for`, ktorý ide
          od 1 do 7 so zvyšovaním o 1.
        courseF_bee_for4_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for4_c: Uisti sa, že používaš premennú `počítadlo` vo svojom vnorenom
          cykle `opakuj`, aby si pozbieral nektár!
      OPD-K5-forloops-6:
        courseF_bee_for6_a: Nezabudni použiť premennú `počítadlo` vo vnútri tvojho
          cyklu `opakuj`.
        courseF_bee_for6_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for6_c: Tvoj cyklus má počítať **od 5 do 1**.
      OPD-K5-forloops-7:
        courseF_bee_for7_a: Tvoj cyklus `for` potrebuje počítať od 1 do 7 počítané
          po 2.
        courseF_bee_for7_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for7_c: Nezabudni použiť premennú `počítadlo` v tvojom cykle `opakuj`.
      OPD-K5-projects-2:
        courseE_playLab_scaffold1_a: The `set actor 1 to ??? image` block can be used
          to add an actor to the stage.
        courseE_playLab_scaffold1_b: Put the `set actor` block under `when run` to
          make your actor appear at the beginning of the program.
        courseE_playLab_scaffold1_c: Use `set ??? background` to choose a background
          for your scene.
      OPD-K5-projects-3:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow`
          event to change the direction the block controls.
        courseE_playLab_scaffold1_b: You should have four `when arrow` event blocks,
          with a direction to move underneath each.
        courseE_playLab_scaffold1_c: When you are done, you should be able to move
          your hero with the arrow keys!
      OPD-K5-projects-5:
        courseE_playLab_scaffold4_a: Use `score point` to add a point, and `remove
          point` to subtract one.
      OPD-K5-variables-1:
        grade5_artist_variables_triangles1_a: Pamätaj, že musíš otočiť umelca o 120
          stupňov, aby si spravil vnútorný uhol 60 stupňov v trojuholníku.
        grade5_artist_variables_triangles1_b: Použi cyklus `opakuj`, aby si skrátil
          tvoj kód.
        grade5_artist_variables_triangles1_c: Vo vnútri tvojho cyklu sa chceš pohnúť
          dopredu o 50 pixelov, a potom otočiť doľava o 120 stupňov.
      OPD-K5-variables-2:
        courseF_artist_variables2_a: Nezabudni sa pohnúť dopredu po nakreslení každého
          trojuholníka.
        courseF_artist_variables2_b: Tvoj nový cyklus bude obsahovať cyklus pre tvoj
          trojuholník a potom príkaz `posuň sa dopredu`.
      OPD-K5-variables-5:
        courseF_artist_variables3_a: 'Premenná `dĺžka` bude použitá na dvoch miestach
          v tvojom kóde: V dĺžke strany tvojho trojuholníka a vo veľkosti, o koľko
          sa posunieš medzi trojuholníkmi.'
        courseF_artist_variables3_b: 'Číselný blok s hodnotou 50 by mal byť použitý
          iba na jednom mieste: po bloku `nastav dĺžka na`.'
      OPD-K5-variables-6:
        courseF_artist_variables4_a: Tvoj kód nebude veľmi odlišný od toho v poslednej
          úlohe, iba toľko, že potrebuješ otočiť umelca, aby skočil nadol, a potom
          ho otočiť späť, aby bol pripravený znovu skočiť dopredu.
        courseF_artist_variables4_c: |-
          Toto je vzor, ktorého sa bude držať tvoj umelec:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: |-
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">50</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="controls_repeat_ext">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">120</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="jump">
                              <title name="DIR">jumpForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">90</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="jump">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      OPD-K5-variables-7:
        courseF_artist_variables5_a: Druhá polovica tvojho kódu by mala vyzerať takmer
          rovnako ako prvá, rozdiel bude iba v tom, že sa budeš otáčať _vľavo_, skákať,
          a potom otáčať _vpravo_.
        courseF_artist_variables5_b: Prvá polovica tvojho kóud nakreslí prvé tri trojuholníky
          a druhá polovica nakreslí zvyšné tri.
        courseF_artist_variables5_c: Začni zduplikovaním kódu z prvej polovice tvojho
          programu, potom ho uprav, aby si vyrobil daný vzor.
        courseF_artist_variables5_d: |-
          Toto je vzor, ktorého sa bude držať tvoj umelec:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      Overworld Avoid Monsters:
        mc_8_a: Je viacero ciest, kotrými môžeš ísť. Ktorá je tá najkratšia?
        mc_8_b: Použi cykly `opakuj`, pre zjednodušenie kódu.
        mc_8_c: Tvojim cieľom je dostať sa cez dvere domu, ktorý sa nachádza v hornej
          časti obrazovky.
      Overworld Avoid Monsters_2019:
        mc_8_a: Je viacero ciest, kotrými môžeš ísť. Ktorá je tá najkratšia?
        mc_8_b: Použi cykly `opakuj`, pre zjednodušenie kódu.
        mc_8_c: Tvojim cieľom je dostať sa cez dvere domu, ktorý sa nachádza v hornej
          časti obrazovky.
      Overworld Chop Tree:
        mc_2_a: Musíš sa použiť príkaz `posuň sa dopredu` dva-krát, aby si sa dostal/a
          pred strom.
        mc_2_b: 'Príkaz  `znič blok`, zotne strom, ktorý je pred tebou. '
      Overworld Chop Tree_2019:
        mc_2_a: Musíš sa použiť príkaz `posuň sa dopredu` dva-krát, aby si sa dostal/a
          pred strom.
        mc_2_b: 'Príkaz  `znič blok`, zotne strom, ktorý je pred tebou. '
      Overworld Chop Trees:
        mc_4_a: Stromy môžeš porúbať v akomkoľvek poradí. Na ktorú z ciest budeš potrebovať
          najmenší počet blokov?
        mc_4_b: 'Príkaz  `znič blok`, zotne strom, ktorý je pred tebou. '
      Overworld Chop Trees_2019:
        mc_4_a: Stromy môžeš porúbať v akomkoľvek poradí. Na ktorú z ciest budeš potrebovať
          najmenší počet blokov?
        mc_4_b: 'Príkaz  `znič blok`, zotne strom, ktorý je pred tebou. '
      Overworld House Frame Chosen:
        mc_6_a: Stlač šípku na bloku `umiestni`, aby si si zvolil/a čo chceš umiesniť.
        mc_6_b: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo sa stane, aj keď úlohu
          ešte nemáš úplne vyriešenú. '
        mc_6_c: Do vnútra bloku `opakuj` môžeš vložiť aj viac blokov.
      Overworld House Frame Chosen_2019:
        mc_6_a: Stlač šípku na bloku `umiestni`, aby si si zvolil/a čo chceš umiesniť.
        mc_6_b: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo sa stane, aj keď úlohu
          ešte nemáš úplne vyriešenú. '
        mc_6_c: Do vnútra bloku `opakuj` môžeš vložiť aj viac blokov.
      Overworld Move to Sheep:
        mc_1_a: Blok `posuň sa dopredu` je na vrchu v tvojom paneli nástrojov.
        mc_1_b: Uisti sa, že obidva bloky `posuň sa dopredu` sú spojené s blokom `pri
          spustení`.
      Overworld Move to Sheep_2019:
        mc_1_a: Blok `posuň sa dopredu` je na vrchu v tvojom paneli nástrojov.
        mc_1_b: Uisti sa, že obidva bloky `posuň sa dopredu` sú spojené s blokom `pri
          spustení`.
      Overworld Place Wall:
        mc_5_a: Najprv použi blok `umiestni` a potom blok `posuň sa`.
        mc_5_b: Uisti sa, že obidva bloky sú vo vnútri cyklu  `opakuj` , aby kód zbehol
          viac ako raz.
        mc_5_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo sa stane, aj keď úlohu
          ešte nemáš úplne vyriešenú. '
      Overworld Place Wall_2019:
        mc_5_a: Najprv použi blok `umiestni` a potom blok `posuň sa`.
        mc_5_b: Uisti sa, že obidva bloky sú vo vnútri cyklu  `opakuj` , aby kód zbehol
          viac ako raz.
        mc_5_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo sa stane, aj keď úlohu
          ešte nemáš úplne vyriešenú. '
      Overworld Plant Crops:
        mc_7_a: 'Použi blok `zasaď plodinu` aby si niečo zasadil/a na mieste, kde
          stojíš. '
        mc_7_b: Do obidvoch pásov tmavohnedej pôdy pri vode, musiš nasadiť rastliny.
        mc_7_c: Do vnútra bloku `opakuj` môžeš vložiť aj viac blokov.
      Overworld Plant Crops_2019:
        mc_7_a: 'Použi blok `zasaď plodinu` aby si niečo zasadil/a na mieste, kde
          stojíš. '
        mc_7_b: Do obidvoch pásov tmavohnedej pôdy pri vode, musiš nasadiť rastliny.
        mc_7_c: Do vnútra bloku `opakuj` môžeš vložiť aj viac blokov.
      Overworld Powered Minecart:
        mc_13_a: Použi príkaz "Polož koľajnice", ktorým uložíš koľajnice na misto,
          na ktorom stojíš.
        mc_13_b: Použi príkaz "Opakuj", aby si tvoj kód skrátil.
      Overworld Powered Minecart_2019:
        mc_13_a: Použi príkaz "Polož koľajnice", ktorým uložíš koľajnice na misto,
          na ktorom stojíš.
        mc_13_b: Použi príkaz "Opakuj", aby si tvoj kód skrátil.
      Overworld Shear Sheep:
        mc_3_a: Blok `strihaj` posunie ovcu pred teba. Si natočený smerom k ovci?
        mc_3_b: Ak potrebuješ zmeniť smer, kotrým si otočený/á, použi blok `otoč sa`
        mc_3_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo sa stane, aj keď úlohu
          ešte nemáš úplne vyriešenú. '
      Overworld Shear Sheep_2019:
        mc_3_a: Blok `strihaj` posunie ovcu pred teba. Si natočený smerom k ovci?
        mc_3_b: Ak potrebuješ zmeniť smer, kotrým si otočený/á, použi blok `otoč sa`
        mc_3_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo sa stane, aj keď úlohu
          ešte nemáš úplne vyriešenú. '
      Underground Avoiding Lava:
        mc_11_a: Celý kód je usporiadaný tak, aby sondoval lávu a potom  sa s ňou
          vysporiadal. Jediné čo potrebuješ spraviť , je pridať blok na posunutie
          sa.
        mc_11_b: Má tvoj príkaz `posuň sa dopredu` ísť dovnútra podmienky `ak` alebo
          až za ňu?
      Underground Avoiding Lava_2019:
        mc_11_a: Celý kód je usporiadaný tak, aby sondoval lávu a potom  sa s ňou
          vysporiadal. Jediné čo potrebuješ spraviť , je pridať blok na posunutie
          sa.
        mc_11_b: Má tvoj príkaz `posuň sa dopredu` ísť dovnútra podmienky `ak` alebo
          až za ňu?
      Underground If Statements:
        mc_12_a: Na miestach s červenými škvrnami, nájdeš aj červené kamene.
        mc_12_b: Môžeš použiť cyklus `opakuj`, aby si skrátil/a tvoj kód?
        mc_12_c: 'Ak chceš skontrolovať či je niekde láva, použi podmienku `ak` a
          potom umiestni kameň. '
      Underground If Statements_2019:
        mc_12_a: Na miestach s červenými škvrnami, nájdeš aj červené kamene.
        mc_12_b: Môžeš použiť cyklus `opakuj`, aby si skrátil/a tvoj kód?
        mc_12_c: 'Ak chceš skontrolovať či je niekde láva, použi podmienku `ak` a
          potom umiestni kameň. '
      Underground Iron:
        mc_10_a: Oceľové bloky sú tie škvrnité miesta za fakľou! Ako sa tam dostaneš?
        mc_10_b: Keď stojíš na hranici s lávou, použi blok `umiestni kameň vpredu`,
          aby si si vytvoril/a bezpečnú cestu. Potom po nich môžeš prejsť!
        mc_10_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo sa stane, aj keď
          úlohu ešte nemáš úplne vyriešenú. '
      Underground Iron_2019:
        mc_10_a: Oceľové bloky sú tie škvrnité miesta za fakľou! Ako sa tam dostaneš?
        mc_10_b: Keď stojíš na hranici s lávou, použi blok `umiestni kameň vpredu`,
          aby si si vytvoril/a bezpečnú cestu. Potom po nich môžeš prejsť!
        mc_10_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo sa stane, aj keď
          úlohu ešte nemáš úplne vyriešenú. '
      Underground Mining Coal:
        mc_9_a: Si otočený/á správnym smerom? Príkaz `znič blok`, vydoluje blok, ktorý
          je pred tebou.
        mc_9_b: Čierne fľaky v stenách sú uhlie! Použi na nich príkaz `znič blok`,
          aby si uhlie vyťažil/a.
        mc_9_c: 'Použi blok `umiestni fakľu` aby si dal fakľu na miesto, kde stojíš. '
      Underground Mining Coal_2019:
        mc_9_a: Si otočený/á správnym smerom? Príkaz `znič blok`, vydoluje blok, ktorý
          je pred tebou.
        mc_9_b: Čierne fľaky v stenách sú uhlie! Použi na nich príkaz `znič blok`,
          aby si uhlie vyťažil/a.
        mc_9_c: 'Použi blok `umiestni fakľu` aby si dal fakľu na miesto, kde stojíš. '
      behaviors 2:
        behavior hint: "Try editing the behaviors! \n\n-   Which direction does the
          rocket need to move?"
      behaviors 3:
        behavior hint: "Try editing the behaviors! \n\n-   Which value is controlling
          the speed of each sprite?"
      behaviors 3a:
        behavior hint: "Try editing the behaviors! \n\n-   Which value is controlling
          the speed of each sprite?"
      behaviors 5:
        target hint: You can pick any of the four ships. Which one does the astronaut
          want?
        behavior hint: Na vyriešenie tejto úlohy je treba upraviť správanie. Postava
          kozmonauta sa musí pohnuť dvomi rôznymi smermi, aby išla diagonálne.
      behaviors 6:
        behavior hint: "Try editing the behaviors! \n\n-   Which value is controlling
          the speed of each sprite?"
      behaviors 7:
        behaviors_hint1: You can create a new behavior that uses two different actions
          or combine two existing behaviors.
        sprites_idea1: |-
          For fun, you can use a similar behavior to make a ship fly off into space or a character run to the foreground. Try changing the background and sprite costumes in your scene!

          ![](<https://images.code.org/7070e44239b53f4b33a5b4fe054bb61c-image-1567714335486.2019-09-05 16_05_19.gif>)

          ![](<https://images.code.org/278494432d56f1f5d41e345a51223695-image-1567714335485.2019-09-05 16_11_12.gif>)
      comment_intro_maze_2018:
        courseC_maze_programming4_a: Komentáre sú tiež užitočné vtedy, keď sa iní
          ľudia snažia prečítať tvoj kód.
        courseC_maze_programming4_b: Pridaj komentár pri zmene smeru - čo by sa stalo,
          keby sa vták otočil opačným smerom?
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_a: |-
          You can use loops like this to create the walls and the roof. Try repeating different blocks.

          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          Design your own or click the ![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) for some ideas!
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge2:
        harvey_tictactoe: You can use `jump` blocks to move to other spaces.
      course1_artist_loops_challenge3:
        courseA_artist_loops_challenge2_a: 'Blok ako tento: <xml> <block type="simple_move_up_left"/></xml>
          umožní tvojmu umelcovi hýbať sa šikmo!'
        courseA_artist_loops_challenge2_b: When you finish one bird house, `jump`
          to the next!
        courseA_artist_loops_challenge2_c: You will need a LOT of blocks inside the
          loop for this challenge.
      course1_artist_loops_challenge4:
        courseB_artist_loops_challenge1_a: 'Blok ako tento: <xml> <block type="simple_move_up_right"/></xml>
          umožní tvojmu umelcovi hýbať sa šikmo!'
        courseB_artist_loops_challenge1_b: Keď dokončíš jednu kocku, tak `skoč` na
          druhú!
        courseB_artist_loops_challenge1_c: 'Budeš sa potrebovať `pohnúť` alebo `skočíť`
          cez niektoré čiary dva krát. '
      course1_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Try changing the numbers in each loop
          if something goes wrong.
        courseA_collector_loops_challenge1_b: You don't need to use a loop if you
          are only doing something one time.
        courseA_collector_loops_challenge1_c: There are 6 gems on the right side of
          the cave, but you only need to move and collect 5 times. Do you know why?
      course1_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: You only need to use one ![](<https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png>) block to solve this.
        courseA_collector_loops_challenge2_a: |-
          You can move back over the path a second time before moving south.

          ![](<https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png>)
      course1_collector_loops_challenge3:
        courseB_collector_loops_challenge1_b: |-
          Start by looping the commands `move south` and `get treasure`.

          <xml>
            <block type="maze_moveSouth"/><next>
            <block type="collector_collect"/></next>
            </xml>
        courseB_collector_loops_challenge1_a: |-
          The north pattern is a little different than the south pattern.

          <xml>
            <block type="collector_collect"/><next>
            <block type="maze_moveNorth"/></next>next>
            </xml>
        courseB_collector_loops_challenge1_c: |-
          Posuň sa na Východ medzi každými cestami.

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          Dá sa to spraviť s iba 14 blokmi. Klikni na jednu ďalšiu nápovedu, aby si uvidel riešenie.
        courseB_collector_loops_challenge1_d: |-
          Vyskúšaj toto!

           <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title> <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_collector_loops_challenge4:
        courseB_collector_loops_challenge2_a: If something goes wrong, don't be afraid
          to start over. Don't give up!
        courseB_collector_loops_challenge2_b: |-
          If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!

          <xml><block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block></xml>
        courseB_collector_loops_challenge2_c: Try using a `repeat` block to collect
          the final pile of treasure!
        courseB_collector_loops_challenge2_d: |-
          Try this solution:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified_dropdown">
                  <title name="TIMES" config="3-10">4</title>
                  <statement name="DO">
                    <block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_simplified_dropdown">
                      <title name="TIMES" config="3-10">6</title>
                      <statement name="DO">
                        <block type="collector_collect"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course1_maze_debugging_challenge1:
        courseA_maze_seq_challenge1_a: Some paths will lead to TNT, if you move too
          far.
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_a: Na vyriešenie tejto úlohy nepotrebuješ pridávať
          ani odstraňovať žiadne bloky.
        courseB_maze_seq_challenge2_b: Rearrange the blocks and take the middle path.
      course1_maze_seq_challenge1:
        courseA_maze_seq_challenge2_a: Try counting the spaces with your finger. Remember
          not to count the space where you start!
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_a: Tentokrát nemusí fungovať najkratšia cesta.
        courseB_maze_seq_challenge1_b: Try moving west to start.
      course1_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you
          click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click
          Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when
          you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click
          the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finally, make Wendel the Wizard show
          when you click on Spiff!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "You can make a bird sing.\n\n<xml> \n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "You can make a robot beep.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          You can make an angry monster growl.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      course2_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: Start by making a nested loop to
          create four octagons. Turn 45 degrees to make the octagon. Jump, then turn
          90 degrees after each one.
        courseD_artist_nestedLoops_challenge1_b: Add code to draw a triangle inside
          of your nested loop. Use 120 degree turns for your triangle.
        courseD_artist_nestedLoops_challenge1_c: |-
          Use a nested loop:

          -   Repeat 8 times
              -   draw an octagon
              -   draw a triangle
              -   jump forward 50 pixels
              -   turn right by 90 degrees
      course2_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: Na nakreslenie pravidelného osemuholníka
          sa umelec musí 8-krát otočiť o 45 stupňov.
        courseD_artist_nestedLoops_challenge2_b: Na nakreslenie štvorca sa umelec
          musí 4-krát otočiť o 90 stupňov.
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: 'Obdĺžnik je 200 pixelov široký a 100 pixelov
          vysoký. '
      course2_artist_prog_challenge2:
        courseC_artist_prog_challenge2_a: "Môžeš dať príkazy do vnútra bloku \"opakovať\"
          aby boli vykonané znova a znova. Skús to!\n\n<xml>\n  \n          <block
          type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <div class=\"notranslate\"> 1 3</div> moveForward</title>\n
          \               <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n
          \               <next>< div Class = \"notranslate\" > 20</div>                  <block
          type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">jumpForward</title>\n
          \                   <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n
          \                 </block>\n                </next>\n              </block>\n
          \             </statement></block></xml><block type=\"draw_move_by_constant_dropdown\">"
      course2_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: |-
          Can you find a path that reaches every flower and honeycomb without hitting any trees? The best path is a spiral.

          **You can solve this without ever turning left.**
        courseD_bee_conditionals_challenge1_b: V tejto úlohe môže byť na každom políčku
          kvet, plást, alebo nič. To znamená,  že podmienku `ak/inak` môžeš zopakovať
          po každom kroku.
      course2_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The main differences is that the code inside will run repetitively until there is no nectar left.  Try this pattern:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      course2_collector_loops_challenge2:
        courseC_maze_loops_challenge2_a: Pôvodný kód bude fungovať skvele - ak by
          na každej kôpke bol len jeden kus pokladu!
        courseC_maze_loops_challenge2_b: Aby si si neminul všetky bloky "zbieraj",
          využi opakovanie!
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Ak chceš pozbierať viac pokladu, blok
          "zbieraj" môžeš použiť aj častejšie.
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Ak chceš pozbierať viac pokladu, blok
          "zbieraj" môžeš použiť aj častejšie.
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: Bez cyklov to ani neskúšaj!
        courseC_harvester_loops_challenge1_b: Môžeš zopakovať `posuň sa dopredu` a
          `zober kukuricu` koľkokoľvek krát potrebuješ, potom v každom rohu použi
          blok `otoč sa vpravo`.
        courseC_harvester_loops_challenge1_c: |-
          The best way to collect the first four corn uses a `repeat` block inside of another `repeat` block. You can use this pattern for the rest of the puzzle too!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">2</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></next></block></xml>
      course2_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: Jedno z riešení je ísť cik-cakovo. Ďalší
          spôsob je ísť do špirály! Úloha ako táto má veľa možných riešení. Buď vytrvalý!
        courseC_harvester_loops_challenge2_b: Môžeš zopakovať `posuň sa dopredu` a
          `zober šalát` koľkokoľvek krát potrebuješ, potom sa otoč vždy, keď si v
          rohu.
        courseC_harvester_loops_challenge2_c: |-
          Tento cik-cakový vzor zopakuj dva krát na to, aby si úlohu splnil len s pomocou 20 blokov!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          Tento špirálový vzor môže byť nakódovaný len pomocou 18 blokov!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: Pomysli si na túto cestu ako na 3 osobitné
          časti. Každá z nich má nejaký vzorec, ktorý sa opakuje.
        courseC_maze_loops_challenge1_b: Medzi každým blokom `opakuj`, potrebuješ
          blok `otoč sa vľavo` alebo `otoč sa vpravo`, aby sa Scrat pripravil na ďalší
          vzorec.
        courseC_maze_loops_challenge1_c: |-
          Ak si sa dostal až sem, stačí už len použiť `otoč sa vľavo` a potom pár krát `posuň sa dopredu`. Nevzdávaj sa!

          ![](<https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png>)
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _Ak ma necháš cúvať, uisti sa, že zabočím
          správnym smerom!"_
        courseC_maze_programming_challenge2_b: Najkratšie riešenie používa len 5 blokov,
          avšak obsahuje aj blok `opakuj`!
      course3_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: If you call the function one more time,
          you can create the same design in the final corner. You can also `jump to`
          other positions or change the whole thing around however you want!
      course3_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          This `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      course3_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_a: Why does the first half of this program
          work? Think about why the bee needs to move backward. How much nectar does
          the bee collect each time it moves over a flower?
        courseD_bee_debugging_challenge1_b: On the way back, have the bee follow the
          same pattern. How much honey does the bee need to make each time it moves
          over a honey comb?
        courseD_bee_debugging_challenge1_c: |-
          After the bee makes it to the bottom row, have it repeat these commands:

          -   Repeat 2 times:
              -   Move forward
              -   Make 3 honey
          -   Move backward
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: "If the puzzle seems challenging, try
          building your function a little at a time.  \n\nAdd some blocks, then try
          it out. Add more, then try again.  Soon, you'll get there!"
        courseE_bee_functions_challenge1_b: Remember to build your code inside of
          the green function block.
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: "If the puzzle seems challenging, try
          building your function a little at a time.  \n\nAdd some blocks, then try
          it out. Add more, then try again.  Soon, you'll get there!"
        courseE_bee_functions_challenge1_b: Remember to build your code inside of
          the green function block.
      course3_bee_functions_challenge3:
        courseF_bee_functions_challenge1_a: You can use the functions in the tool
          box to help you. You can call a function inside of another function's definition!
      course3_bee_functions_challenge4:
        courseF_bee_functions_challenge2_a: |-
          If there is a path to the right, you should do the following:

          -   Get any nectar or make any honey.
          -   Turn right towards the side path.
          -   Move to the end of the side path.
          -   Turn right.

          If you repeat the above actions twice, you will be ready to move back down the main path.

          **Only click for another hint if you want to see the full solution!**
        courseF_bee_functions_challenge2_b: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_if">
                              <title name="DIR">isPathRight</title>
                              <statement name="DO">
                                <block type="procedures_callnoreturn" id="function">
                                  <mutation name="move and check"/>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation/>
              <title name="NAME">check nectar or honey</title>
              <statement name="STACK">
                <block type="bee_ifElseFlower">
                  <title name="LOC">atFlower</title>
                  <statement name="DO">
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">nectarRemaining</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_nectar"/>
                      </statement>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">honeyAvailable</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_honey"/>
                      </statement>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
              <mutation/>
              <title name="NAME">move and check</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                      <mutation name="check nectar or honey"/>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_untilBlocked">
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
          </xml>
      course3_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_a: "Start by focusing on collect TWO
          gems from each of the first two piles.\n\n![](<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png>)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: |-
          Potom pozbieraj zvyšné drahokamy v tomto rade.

          ![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png>)
          Ku svojmu programu pridaj tieto bloky:

          <xml><block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
          <block type="controls_repeat">
                  <title name="TIMES">4</title>
                  <statement name="DO">

                  </statement>
                </block>

          </xml>
        courseD_collector_debugging_challenge2_c: "A nakoniec pozbieraj aj zvyšné
          drahokamy. Ku tvojmu programu pridaj tieto bloky.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">turnRight</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Tu je riešenie úlohy.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course3_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: The `STEP` button could be very helpful
          in this challenge.
        courseD_farmer_condLoops_challenge1_b: Normally you would just `pick pumpkin`
          if you are at a pumpkin. What else do you need to do if you're at a pumpkin?
      course3_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: The amount of each vegetable in each
          space varies. Use `while` loops for these.
      course3_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: Doľava alebo doprava? Záleží len na tebe!
        courseC_maze_debugging_challenge1_b: Scratova cesta má tvar obdĺžnika! Musí
          sa zakaždým otočiť rovnakým smerom!
        courseC_maze_debugging_challenge1_c: Ak sa niekde zasekneš, vždy môžeš začať
          odznova alebo odstrániť všetky bloky a skúsiť to sám!
      course3_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_a: Jedno z riešení je pridať medzi otočenia
          viac krokov dopredu.
        courseC_maze_debugging_challenge2_b: Ak sa niekde zasekneš, vždy môžeš začať
          odznova alebo odstrániť všetky bloky a skúsiť to sám!
        courseC_maze_debugging_challenge2_c: |-
          There are two different paths you can follow just using `move forward`, and only four turns. If you find a way to use the `repeat` block, there may be even more!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      course3_playLab_challenge1:
        courseE_playLab_challenge1_a: |-
          Here are some things you could do when the player wins the game:

          -   Make the dinosaur vanish.
          -   Stop the squirrels.
          -   Make the squirrels and knight happy.
          -   Set a new background.
          -   Make the knight thank the player for helping.
          -   Make all of the actors vanish and show a "You Win!" message.
        courseE_playLab_challenge1_b: |-
          Here are some things you could do when the player loses the game:

          -   Make the knight vanish.
          -   Make the squirrels sad.
          -   Make the dinosaur say something.
          -   Set a new background.
          -   Make all of the actors vanish and show a "Game Over" message.
      course4_artist_binary_challenge2:
        courseD_artist_binary_challenge2_a: |-
          The best tip I have for you is to press `⟲ Start Over` if it starts to get really messy.

          There are only few lines wrong in the original program. If one approach fails, back up and try again. There is a solution!
      course4_artist_concept_challenge2:
        courseE_artist_concept_challenge2_a: Once you define a function, you can call
          it over and over again - whenever and wherever you want!
        courseE_artist_concept_challenge2_b: |-
          You can jump to different positions on the canvas using this command:

          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      course4_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          This `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      course4_artist_variables_challenge1:
        courseF_artist_variables_challenge1_a: Each vertical line has a length of
          `10`. Each horizontal line should have a length of `length`.
        courseF_artist_variables_challenge1_b: You will want to increase the value
          of `length` by 10 **twice** inside the loop.
        courseF_artist_variables_challenge1_c: To complete the pattern you will need
          to turn left twice, turn right twice, and move forward a total of four times.
        courseF_artist_variables_challenge1_d: |-
          This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course4_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_a: |-
          The main program should look something like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="procedures_callnoreturn" inline="false">
                  <mutation name="pick row">
                    <arg name="length"/>
                  </mutation>
                  <value name="ARG0">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <next>
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="pick row">
                                <arg name="length"/>
                              </mutation>
                              <value name="ARG0">
                                <block type="math_number">
                                  <title name="NUM">5</title>
                                </block>
                              </value>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                      <next>
                                        <block type="procedures_callnoreturn" inline="false">
                                          <mutation name="pick row">
                                            <arg name="length"/>
                                          </mutation>
                                          <value name="ARG0">
                                            <block type="math_number">
                                              <title name="NUM">6</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                              <next>
                                                <block type="maze_move">
                                                  <title name="DIR">moveForward</title>
                                                  <next>
                                                    <block type="procedures_callnoreturn" inline="false">
                                                      <mutation name="pick row">
                                                        <arg name="length"/>
                                                      </mutation>
                                                      <value name="ARG0">
                                                        <block type="math_number">
                                                          <title name="NUM">4</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
        courseF_bee_fwp_challenge1_b: |-
          Look at how much corn is available to harvest in each space. Do you see the counter pattern? The `length` parameter should be used to set the maximum value in the `for loop`.

          Don't forget to have the farmer move back to the main path after harvesting!
        courseF_bee_fwp_challenge1_c: |-
          Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.
          Inside this loop, you should move forward and pick all of the corn.

          <xml>
          <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                      </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: |-
          Inside the `for loop` you will want to `move forward` then `get nectar` **counter times**.
          After the `for loop` you can just `move backward` **length times**.

          You may need to read this hint several times to understand it. The part in **bold** is a hint about how to use the two `repeat` loops you will need.
        courseF_bee_fwp_challenge1_e: |-
          **Here is the solution:**

          <xml>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_corn"/>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
              </block></xml>
      course4_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_a: |-
          Start by making sure you understand how this function is _supposed_ to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?

          Add conditional statements to the function to check for corn, pumpkins, and lettuce.
        courseF_bee_fwp_challenge2_b: "Are you running out of `move forward` blocks?\nTry
          using a _second_ `for loop` in your main program. \n\n**Note:** Be careful
          not to confuse `counter` with `counter2` in your code."
        courseF_bee_fwp_challenge2_c: |-
          **Here is what your function should look like:**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_ifHasCrop">
                                  <title name="LOC">Corn</title>
                                  <statement name="DO">
                                    <block type="harvester_corn"/>
                                  </statement>
                                  <next>
                                    <block type="harvester_ifHasCrop">
                                      <title name="LOC">Pumpkin</title>
                                      <statement name="DO">
                                        <block type="harvester_pumpkin"/>
                                      </statement>
                                      <next>
                                        <block type="harvester_ifHasCrop">
                                          <title name="LOC">Lettuce</title>
                                          <statement name="DO">
                                            <block type="harvester_lettuce"/>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |-
          **Here is what your main program should look like:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter2</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">6</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="procedures_callnoreturn" inline="false">
                          <mutation name="pick row">
                            <arg name="length"/>
                          </mutation>
                          <value name="ARG0">
                            <block type="variables_get">
                              <title name="VAR">counter2</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
              </block></xml>
      course4_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: Pamätaj, že pomocou bloku `opakuj`
          môžeš opakovať jeden príkaz ale aj viac príkazov za sebou. Vieš dokonca
          opakovať aj samotný blok `opakuj`!
        courseD_bee_nested_loops_challenge2_b: Na získanie všetkých 4-och drahokamov
          najprv použi cyklus, aby si sa dostal preč zo stredu. Odboč vľavo alebo
          vpravo, potom použi vnorený cyklus na presun od jedného pokladu k druhému.
          Ak toto zopakuješ dostatočný počet krát, zberateľka obíde _celú_ jaskyňu!
        courseD_bee_nested_loops_challenge2_c: Najkratší program, ktorý pozbiera všetky
          drahokamy použije len 1 blok 'zbieraj' a 2 otočky.
        courseD_bee_nested_loops_challenge2_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course4_harvester_nested_loops_challenge1:
        courseD_harvester_nested_loops_challenge1_a: You have probably already used
          a loop to create a zig-zag pattern. If you remember that algorithm, you
          can make a few additions to it here.
      course4_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          You will need additional blocks from the tool box to get the actors to talk.

          <xml><block type="studio_saySpriteParamsTime" inline="true">
                <value name="SPRITE">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                                <value name="TEXT">
                            <block type="text">
                              <title name="TEXT">Knock knock.</title>
                            </block>
                          </value>
                <value name="TIME">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                </block></xml>
      courseA_artist_loops2:
        courseA_artist_loops2_a: Nevieš prísť na to ako nakresliť čiaru? Začni s pripájaním
          blokov k bloku <xml><block type="when_run"/></xml> a uvidíš čo sa stane.
        courseA_artist_loops2_b: Použi tento blok block <xml><block type="simple_move_right"/></xml>
          na vyriešenie úlohy.
      courseA_artist_loops2_2018:
        courseA_artist_loops2_a: Nevieš prísť na to ako nakresliť čiaru? Začni s pripájaním
          blokov k bloku <xml><block type="when_run"/></xml> a uvidíš čo sa stane.
        courseA_artist_loops2_b: Použi tento blok block <xml><block type="simple_move_right"/></xml>
          na vyriešenie úlohy.
      courseA_artist_loops2_2019:
        courseA_artist_loops2_a: Nevieš prísť na to ako nakresliť čiaru? Začni s pripájaním
          blokov k bloku <xml><block type="when_run"/></xml> a uvidíš čo sa stane.
        courseA_artist_loops2_b: Použi tento blok block <xml><block type="simple_move_right"/></xml>
          na vyriešenie úlohy.
      courseA_artist_loops3:
        courseA_artist_loops3_a: Prejdi si pomaly prstom celý program aby si prišiel/prišla
          na to, kde sa stala chyba.
        courseA_artist_loops3_b: |-
          Mal/a by si použiť blok ako tento, na vyriešenie tejto úlohy.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2018:
        courseA_artist_loops3_a: Prejdi si pomaly prstom celý program aby si prišiel/prišla
          na to, kde sa stala chyba.
        courseA_artist_loops3_b: |-
          Mal/a by si použiť blok ako tento, na vyriešenie tejto úlohy.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2019:
        courseA_artist_loops3_a: Prejdi si pomaly prstom celý program aby si prišiel/prišla
          na to, kde sa stala chyba.
        courseA_artist_loops3_b: |-
          Mal/a by si použiť blok ako tento, na vyriešenie tejto úlohy.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops4:
        courseA_artist_loops4_a: Ak chceš opakovať cyklus viac ako 4 krát, tak môžeš
          zmeniť číslo navrchu bloku.
        courseA_artist_loops4_b: |-
          Keďže môžeš použiť len jeden blok <xml><block type="simple_move_right"/></xml>,

          vyskúšaj ho vložiť do vnútra cyklu  <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> .
      courseA_artist_loops4_2018:
        courseA_artist_loops4_a: Ak chceš opakovať cyklus viac ako 4 krát, tak môžeš
          zmeniť číslo navrchu bloku.
        courseA_artist_loops4_b: |-
          Keďže môžeš použiť len jeden blok <xml><block type="simple_move_right"/></xml>,

          vyskúšaj ho vložiť do vnútra cyklu  <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> .
      courseA_artist_loops4_2019:
        courseA_artist_loops4_a: Ak chceš opakovať cyklus viac ako 4 krát, tak môžeš
          zmeniť číslo navrchu bloku.
        courseA_artist_loops4_b: |-
          Keďže môžeš použiť len jeden blok <xml><block type="simple_move_right"/></xml>,

          vyskúšaj ho vložiť do vnútra cyklu  <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> .
      courseA_artist_loops5:
        courseA_artist_loops5_a: Na dokončenie tejto úlohy vyskúšaj využiť čo si sa
          naučil/a o blokoch <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
        courseA_artist_loops5_b: Ak chceš opakovať cyklus viac ako 4 krát, tak môžeš
          zmeniť číslo navrchu bloku.
        courseA_artist_loops5_c: "Keďže môžeš použiť len jeden blok <xml><block type=\"simple_move_right\"/></xml>,
          vyskúšaj ho vložiť do vnútra cyklu  \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml> ."
      courseA_artist_loops5_2018:
        courseA_artist_loops5_a: Na dokončenie tejto úlohy vyskúšaj využiť čo si sa
          naučil/a o blokoch <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
        courseA_artist_loops5_b: Ak chceš opakovať cyklus viac ako 4 krát, tak môžeš
          zmeniť číslo navrchu bloku.
        courseA_artist_loops5_c: "Keďže môžeš použiť len jeden blok <xml><block type=\"simple_move_right\"/></xml>,
          vyskúšaj ho vložiť do vnútra cyklu  \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml> ."
      courseA_artist_loops5_2019:
        courseA_artist_loops5_a: Na dokončenie tejto úlohy vyskúšaj využiť čo si sa
          naučil/a o blokoch <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
        courseA_artist_loops5_b: Ak chceš opakovať cyklus viac ako 4 krát, tak môžeš
          zmeniť číslo navrchu bloku.
        courseA_artist_loops5_c: "Keďže môžeš použiť len jeden blok <xml><block type=\"simple_move_right\"/></xml>,
          vyskúšaj ho vložiť do vnútra cyklu  \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml> ."
      courseA_artist_loops6:
        courseA_artist_loops6_a: Nevieš prísť na to ako spraviť kopec? Vysúšaj sa
          trochu pohrať s blokmi aby si zistil/a, čo každý z nich kreslí.
        courseA_artist_loops6_b: Na vyriešenie tejto úlohy, budeš potreovať 2 bloky,
          ktoré idú 2 rôznymi smermi.
      courseA_artist_loops6_2018:
        courseA_artist_loops6_a: Nevieš prísť na to ako spraviť kopec? Vysúšaj sa
          trochu pohrať s blokmi aby si zistil/a, čo každý z nich kreslí.
        courseA_artist_loops6_b: Na vyriešenie tejto úlohy, budeš potreovať 2 bloky,
          ktoré idú 2 rôznymi smermi.
      courseA_artist_loops6_2019:
        courseA_artist_loops6_a: Nevieš prísť na to ako spraviť kopec? Vysúšaj sa
          trochu pohrať s blokmi aby si zistil/a, čo každý z nich kreslí.
        courseA_artist_loops6_b: Na vyriešenie tejto úlohy, budeš potreovať 2 bloky,
          ktoré idú 2 rôznymi smermi.
      courseA_artist_loops7:
        courseA_artist_loops7_a: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
        courseA_artist_loops7_b: Najprv napíš kód na vytvorenie jednej vlny, potom
          to zopakuj aby si nakreslil/a ďalšie dve.
        courseA_artist_loops7_c: Nezabudni, do vnútra cyklu <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> môžeš vložiť viac ako
          jeden blok.
      courseA_artist_loops7_2018:
        courseA_artist_loops7_a: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
        courseA_artist_loops7_b: Najprv napíš kód na vytvorenie jednej vlny, potom
          to zopakuj aby si nakreslil/a ďalšie dve.
        courseA_artist_loops7_c: |-
          Nezabudni, do vnútra cyklu <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> môžeš vložiť viac ako jeden blok.
      courseA_artist_loops7_2019:
        courseA_artist_loops7_a: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
        courseA_artist_loops7_b: Najprv napíš kód na vytvorenie jednej vlny, potom
          to zopakuj aby si nakreslil/a ďalšie dve.
        courseA_artist_loops7_c: |-
          Nezabudni, do vnútra cyklu <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> môžeš vložiť viac ako jeden blok.
      courseA_artist_loops8:
        courseA_artist_loops8_a: Vyskúšaj spustiť kód, ktorý už je pre teba napísaný.
        courseA_artist_loops8_b: Ako by si vyrobil/a cyklus z kódu, ktorý sme ti dali?
        courseA_artist_loops8_c: |-
          Čo ten kód robí?\
          Čo by mal robiť?\
          Čo ti to hovorí?
      courseA_artist_loops8_2018:
        courseA_artist_loops8_a: Vyskúšaj spustiť kód, ktorý už je pre teba napísaný.
        courseA_artist_loops8_b: Ako by si vyrobil/a cyklus z kódu, ktorý sme ti dali?
        courseA_artist_loops8_c: |-
          Čo ten kód robí?\
          Čo by mal robiť?\
          Čo ti to hovorí?
      courseA_artist_loops8_2019:
        courseA_artist_loops8_a: Vyskúšaj spustiť kód, ktorý už je pre teba napísaný.
        courseA_artist_loops8_b: Ako by si vyrobil/a cyklus z kódu, ktorý sme ti dali?
        courseA_artist_loops8_c: |-
          Čo ten kód robí?\
          Čo by mal robiť?\
          Čo ti to hovorí?
      courseA_artist_loops9:
        courseA_artist_loops9_a: Pridaj ku kódu, ktorý si dostal/a ešte blok, aby
          si dokončil/a zvyšok schodov.
        courseA_artist_loops9_b: "The block you add should go inside of the \n\n<xml><block
          type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>\n\n
          loop."
        courseA_artist_loops9_c: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
      courseA_artist_loops9_2018:
        courseA_artist_loops9_a: Pridaj ku kódu, ktorý si dostal/a ešte blok, aby
          si dokončil/a zvyšok schodov.
        courseA_artist_loops9_b: |-
          Blok, ktorý pridáš má ísť do vnútra cyklu <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml>.
        courseA_artist_loops9_c: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
      courseA_artist_loops9_2019:
        courseA_artist_loops9_a: Pridaj ku kódu, ktorý si dostal/a ešte blok, aby
          si dokončil/a zvyšok schodov.
        courseA_artist_loops9_b: "The block you add should go inside of the \n\n<xml><block
          type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>\n\n
          loop."
        courseA_artist_loops9_c: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
      courseA_artist_loops_challenge2a:
        courseA_artist_loops_challenge2_a: Blocks like this <xml>  <block type="simple_move_up_left"/></xml>
          will let your artist move at a slant!
        courseA_artist_loops_challenge2_b: When you finish one tent, `jump` up twice
          to get to the next!
        courseA_artist_loops_challenge2_c: All of your blocks will need to be inside
          of a loop to finish this puzzle.
      courseA_artist_loops_challenge2a_2018:
        courseA_artist_loops_challenge2_a: Blocks like this <xml>  <block type="simple_move_up_left"/></xml>
          will let your artist move at a slant!
        courseA_artist_loops_challenge2_b: When you finish one tent, `jump` up twice
          to get to the next!
        courseA_artist_loops_challenge2_c: All of your blocks will need to be inside
          of a loop to finish this puzzle.
      courseA_artist_loops_challenge2a_2019:
        courseA_artist_loops_challenge2_a: Blocks like this <xml>  <block type="simple_move_up_left"/></xml>
          will let your artist move at a slant!
        courseA_artist_loops_challenge2_b: When you finish one tent, `jump` up twice
          to get to the next!
        courseA_artist_loops_challenge2_c: All of your blocks will need to be inside
          of a loop to finish this puzzle.
      courseA_collector_loops1:
        courseA_collector_loops1_a: |-
          Potom ako si sa dostal/a k štvorcu spokladom , použi tento blok na jeho zobratie.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Jednoduché riešenie je presunúť sa 2-krát na východ
          a potom zobrať poklad.
      courseA_collector_loops1_2018:
        courseA_collector_loops1_a: |-
          Potom ako si sa dostal/a k štvorcu spokladom , použi tento blok na jeho zobratie.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Jednoduché riešenie je presunúť sa 2-krát na východ
          a potom zobrať poklad.
      courseA_collector_loops1_2019:
        courseA_collector_loops1_a: |-
          Potom ako si sa dostal/a k štvorcu spokladom , použi tento blok na jeho zobratie.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Jednoduché riešenie je presunúť sa 2-krát na východ
          a potom zobrať poklad.
      courseA_collector_loops2:
        courseA_collector_loops2_a: Musíš sa pohnúť predtým, ako dokážeš pozbierať
          nejaký drahokam.
        courseA_collector_loops2_b: |-
          Potom ako si sa dostal/a k štvorcu spokladom , použi tento blok na jeho zobratie.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018:
        courseA_collector_loops2_a: Musíš sa pohnúť predtým, ako dokážeš pozbierať
          nejaký drahokam.
        courseA_collector_loops2_b: |-
          Potom ako si sa dostal/a k štvorcu spokladom , použi tento blok na jeho zobratie.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2019:
        courseA_collector_loops2_a: Musíš sa pohnúť predtým, ako dokážeš pozbierať
          nejaký drahokam.
        courseA_collector_loops2_b: |-
          Potom ako si sa dostal/a k štvorcu spokladom , použi tento blok na jeho zobratie.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3:
        courseA_collector_loops3_a: Skús použiť blok <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
        courseA_collector_loops3_b: Nezabudni, do vnútra cyklu <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> môžeš vložiť viac ako
          jeden blok.
      courseA_collector_loops3_2018:
        courseA_collector_loops3_a: Skús použiť blok <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
        courseA_collector_loops3_b: Nezabudni, do vnútra cyklu <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> môžeš vložiť viac ako
          jeden blok.
      courseA_collector_loops3_2019:
        courseA_collector_loops3_a: Skús použiť blok "opakovať"!
        courseA_collector_loops3_b: Nezabudni, do vnútra cyklu <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> môžeš vložiť viac ako
          jeden blok.
      courseA_collector_loops4:
        courseA_collector_loops4_a: Aby si zmenil, ako ďaleko Laurel zájde, tak zmeň
          počet opakovaní daného cyklu.
        courseA_collector_loops4_b: Nezbudni, že Laurel musí zísť dole a pozbierať
          drahokamy potom ako dokončí cyklus <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
      courseA_collector_loops4_2018:
        courseA_collector_loops4_a: Aby si zmenil, ako ďaleko Laurel zájde, tak zmeň
          počet opakovaní daného cyklu.
        courseA_collector_loops4_b: Nezbudni, že Laurel musí zísť dole a pozbierať
          drahokamy potom ako dokončí cyklus <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
      courseA_collector_loops4_2019:
        courseA_collector_loops4_a: Aby si zmenil, ako ďaleko Laurel zájde, tak zmeň
          počet opakovaní daného cyklu.
        courseA_collector_loops4_b: Nezbudni, že Laurel musí zísť dole a pozbierať
          drahokamy potom ako dokončí cyklus <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
      courseA_collector_loops5:
        courseA_collector_loops5_a: Ak nevieš prísť na odpoveď hneď, vyskúšaj si to
          na kúsku papiera, aby si zistil/a, ktoré šípky budeš potrebovať a nájdi
          v nich opakovaný vzor.
        courseA_collector_loops5_b: Vyskúšaj si problém rozložiť na 2 časti, pohyb
          do strany a potom nadol.
        courseA_collector_loops5_c: Môžeš začať cyklom <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>, ktorý posunie Laurel
          na západ (vľavo) a pozbiera drahokamy.
      courseA_collector_loops5_2018:
        courseA_collector_loops5_a: Ak nevieš prísť na odpoveď hneď, vyskúšaj si to
          na kúsku papiera, aby si zistil/a, ktoré šípky budeš potrebovať a nájdi
          v nich opakovaný vzor.
        courseA_collector_loops5_b: Vyskúšaj si problém rozložiť na 2 časti, pohyb
          do strany a potom nadol.
        courseA_collector_loops5_c: Môžeš začať cyklom <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>, ktorý posunie Laurel
          na západ (vľavo) a pozbiera drahokamy.
      courseA_collector_loops5_2019:
        courseA_collector_loops5_a: Ak nevieš prísť na odpoveď hneď, vyskúšaj si to
          na kúsku papiera, aby si zistil/a, ktoré šípky budeš potrebovať a nájdi
          v nich opakovaný vzor.
        courseA_collector_loops5_b: Vyskúšaj si problém rozložiť na 2 časti, pohyb
          do strany a potom nadol.
        courseA_collector_loops5_c: Môžeš začať cyklom <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>, ktorý posunie Laurel
          na západ (vľavo) a pozbiera drahokamy.
      courseA_collector_loops6:
        courseA_collector_loops6_a: Nevieš prísť nato, kde nastala chyba? Skús spusiť
          kód niekoľko krát a sleduj, čo sa stane.
        courseA_collector_loops6_b: Najkratšie riešenie má 2 za sebou idúce cykly
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml>.
      courseA_collector_loops6_2018:
        courseA_collector_loops6_a: Nevieš prísť nato, kde nastala chyba? Skús spusiť
          kód niekoľko krát a sleduj, čo sa stane.
        courseA_collector_loops6_b: Najkratšie riešenie má 2 za sebou idúce cykly
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml>.
      courseA_collector_loops6_2019:
        courseA_collector_loops6_a: Nevieš prísť nato, kde nastala chyba? Skús spusiť
          kód niekoľko krát a sleduj, čo sa stane.
        courseA_collector_loops6_b: Najkratšie riešenie má 2 za sebou idúce cykly
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml>.
      courseA_collector_loops7:
        courseA_collector_loops7_a: Ak nevieš prísť na to čo ďalej, vyskúšaj si kód
          spustiť a uvidíš, kde Laurel skončí.
      courseA_collector_loops7_2018:
        courseA_collector_loops7_a: Ak nevieš prísť na to čo ďalej, vyskúšaj si kód
          spustiť a uvidíš, kde Laurel skončí.
      courseA_collector_loops7_2019:
        courseA_collector_loops7_a: Ak nevieš prísť na to čo ďalej, vyskúšaj si kód
          spustiť a uvidíš, kde Laurel skončí.
      courseA_collector_loops8:
        courseA_collector_loops8_a: Ak máš problém s vyriešením tejto úlohy, skús
          si zapísať všetky kroky na papier a pohľadať v nich vzor.
        courseA_collector_loops8_b: Vyskúšaj si úlohu rozdeliť na 3 samostatné preblémy,
          vyrob cyklus pre každý z nich.
        courseA_collector_loops8_c: 'Pamätaj si, že môžeš pracovať postupne: po každom
          napísanom riadku kódu môžeš program spustiť, aby si lepšie uvidel, kam sa
          musíš posunúť ďalej.'
      courseA_collector_loops8_2018:
        courseA_collector_loops8_a: Ak máš problém s vyriešením tejto úlohy, skús
          si zapísať všetky kroky na papier a pohľadať v nich vzor.
        courseA_collector_loops8_b: Vyskúšaj si úlohu rozdeliť na 3 samostatné preblémy,
          vyrob cyklus pre každý z nich.
        courseA_collector_loops8_c: 'Pamätaj si, že môžeš pracovať postupne: po každom
          napísanom riadku kódu môžeš program spustiť, aby si lepšie uvidel, kam sa
          musíš posunúť ďalej.'
      courseA_collector_loops8_2019:
        courseA_collector_loops8_a: Ak máš problém s vyriešením tejto úlohy, skús
          si zapísať všetky kroky na papier a pohľadať v nich vzor.
        courseA_collector_loops8_b: Vyskúšaj si úlohu rozdeliť na 3 samostatné preblémy,
          vyrob cyklus pre každý z nich.
        courseA_collector_loops8_c: 'Pamätaj si, že môžeš pracovať postupne: po každom
          napísanom riadku kódu môžeš program spustiť, aby si lepšie uvidel, kam sa
          musíš posunúť ďalej.'
      courseA_collector_loops9:
        courseA_collector_loops9_a: 'Ak sa ta nedarí nájsť najlepšie miesta na použitie
          cyklov, vyskúšaj si to najprv naprogramovať krok po kroku a potom tam hľadaj
          nejaký vzor, čo sa opakuje. '
        courseA_collector_loops9_b: Vyskúšaj vložit tvoje 2 cykly <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> do vnútra iného cyklu,
          aby si svoj kód skrátil/a!
      courseA_collector_loops9_2018:
        courseA_collector_loops9_a: 'Ak sa ta nedarí nájsť najlepšie miesta na použitie
          cyklov, vyskúšaj si to najprv naprogramovať krok po kroku a potom tam hľadaj
          nejaký vzor, čo sa opakuje. '
        courseA_collector_loops9_b: Vyskúšaj vložit tvoje 2 cykly <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> do vnútra iného cyklu,
          aby si svoj kód skrátil/a!
      courseA_collector_loops9_2019:
        courseA_collector_loops9_a: 'Ak sa ta nedarí nájsť najlepšie miesta na použitie
          cyklov, vyskúšaj si to najprv naprogramovať krok po kroku a potom tam hľadaj
          nejaký vzor, čo sa opakuje. '
        courseA_collector_loops9_b: Vyskúšaj vložit tvoje 2 cykly <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> do vnútra iného cyklu,
          aby si svoj kód skrátil/a!
      courseA_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Try changing the numbers in each loop
          if something seems wrong.
        courseA_collector_loops_challenge1_b: You don't need to use a loop if you
          are only doing something one time.
        courseA_collector_loops_challenge1_c: There are 6 gems on the right side of
          the cave when you start, but you only need to get treasure 5 times moving
          South. Do you know why?
        courseA_collector_loops_challenge1_d: |-
          The starting program doesn't collect the last 2 gems. Try adding this code at the very end:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2018:
        courseA_collector_loops_challenge1_a: Try changing the numbers in each loop
          if something seems wrong.
        courseA_collector_loops_challenge1_b: You don't need to use a loop if you
          are only doing something one time.
        courseA_collector_loops_challenge1_c: There are 6 gems on the right side of
          the cave when you start, but you only need to get treasure 5 times moving
          South. Do you know why?
        courseA_collector_loops_challenge1_d: |-
          The starting program doesn't collect the last 2 gems. Try adding this code at the very end:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2019:
        courseA_collector_loops_challenge1_a: Try changing the numbers in each loop
          if something seems wrong.
        courseA_collector_loops_challenge1_b: You don't need to use a loop if you
          are only doing something one time.
        courseA_collector_loops_challenge1_c: There are 6 gems on the right side of
          the cave when you start, but you only need to get treasure 5 times moving
          South. Do you know why?
        courseA_collector_loops_challenge1_d: |-
          The starting program doesn't collect the last 2 gems. Try adding this code at the very end:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: You only need to use 1 block to solve
          this.
        courseA_collector_loops_challenge2_a: You can move back over the path a second
          time before moving south.
      courseA_collector_loops_challenge2kp:
        courseA_collector_loops_challenge2kp_b: Try this path to get you to a solution.
        courseA_collector_loops_challenge2kp_a: Can you use loops to solve this puzzle?
      courseA_collector_loops_challenge2kp_2018:
        courseA_collector_loops_challenge2kp_b: Try this path to get you to a solution.
        courseA_collector_loops_challenge2kp_a: Can you use loops to solve this puzzle?
      courseA_collector_loops_challenge2kp_2019:
        courseA_collector_loops_challenge2kp_b: Try this path to get you to a solution.
        courseA_collector_loops_challenge2kp_a: Can you use loops to solve this puzzle?
      courseA_collector_preLoops4:
        courseA_collector_preLoops4_a: To grab the treasure, snap two ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png)
          blocks and one ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          block to the bottom of the program and click "Run"!
      courseA_collector_preLoops5:
        courseA_collector_preLoops5_a: You'll need to go two different directions
          to get even one gem!
      courseA_collector_preLoops6:
        courseA_collector_preLoops6_a: You will need to use two ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          blocks to solve this puzzle.
      courseA_collector_preLoops7:
        courseA_collector_loops2_b: |-
          Potom ako si sa dostal/a k štvorcu spokladom , použi tento blok na jeho zobratie.

          <xml>  <block type="collector_collect"/></xml>
      courseA_harvester_loops1:
        courseA_harvester_loops1_a: |-
          Keď sa dostaneš ku kukurici, použi tento blok, aby si ju zobral!

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops1_2019:
        courseA_harvester_loops1_a: |-
          Keď sa dostaneš ku kukurici, použi tento blok, aby si ju zobral!

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops2:
        courseA_harvester_loops2_a: "Tvoj kód bude mať **štyri** bloky `posuň sa na
          západ` <xml><block type=\"maze_moveWest\"/></xml> \n\na **štyri** bloky
          `zober kukuricu` <xml><block type=\"harvester_corn\"/></xml>."
        courseA_harvester_loops2_b: 'Ak sa ti stále nedarí, vyskúšaj si to nahlas
          povedať krok po kroku. '
      courseA_harvester_loops2_2019:
        courseA_harvester_loops2_a: "Your code will have **four** `move west`\n\n<xml><block
          type=\"maze_moveWest\"/></xml>\n\nblocks and **four** <xml>\n`pick corn`\n
          \ <block type=\"harvester_corn\"/>\n</xml> blocks. "
        courseA_harvester_loops2_b: 'Ak sa ti stále nedarí, vyskúšaj si to nahlas
          povedať krok po kroku. '
      courseA_harvester_loops3:
        courseA_harvester_loops3_a: |-
          Na pomoc využi takýto blok `opakuj`!

          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">4</title>
            </block></xml>
        courseA_harvester_loops3_b: "Na opakovanie kódu vytiahni cyklus `opakuj`  (<xml><block
          type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\"
          config=\"2-10\">4</title>\n  </block></xml> ), a potom vlož dovnútra blok,
          ktorý chceš zopakovať. "
      courseA_harvester_loops3_2019:
        courseA_harvester_loops3_a: |-
          Na pomoc využi takýto blok `opakuj`!

          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">4</title>
            </block></xml>
        courseA_harvester_loops3_b: "Na opakovanie kódu vytiahni cyklus `opakuj`  (<xml><block
          type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\"
          config=\"2-10\">4</title>\n  </block></xml> ), a potom vlož dovnútra blok,
          ktorý chceš zopakovať. "
      courseA_harvester_loops4:
        courseA_harvester_loops4_a: Neboj sa kliknúť na `Spustiť` a uvidíš, čo sa
          stane!
        courseA_harvester_loops4_b: Koľko je tam kukuríc? Koľko krát sa tvoj kód zopakuje?
      courseA_harvester_loops4_2019:
        courseA_harvester_loops4_a: Neboj sa kliknúť na `Spustiť` a uvidíš, čo sa
          stane!
        courseA_harvester_loops4_b: Koľko je tam kukuríc? Koľko krát sa tvoj kód zopakuje?
      courseA_harvester_loops5:
        courseA_harvester_loops5_a: Ak sa zasekneš, vyskúšaj úlohu vyriešiť v dvoch
          častiach, prvá pred zabočením a druhá po zabočení.
        courseA_harvester_loops5_b: |-
          Hotový kód bude mať **jeden** cyklus `opakuj`  <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
              </block></xml>, **jeden** blok `posuň sa na juh`   <xml><block type="maze_moveSouth" limit="1"/></xml>, a **jeden** blok `posuň sa na východ`   <xml><block type="maze_moveEast" limit="1"/> </xml>.
        courseA_harvester_loops5_c: Na pozbieranie všetkej kukurice, vyskúšaj túto
          trasu!
      courseA_harvester_loops5_2019:
        courseA_harvester_loops5_a: Ak sa zasekneš, vyskúšaj úlohu vyriešiť v dvoch
          častiach, prvá pred zabočením a druhá po zabočení.
        courseA_harvester_loops5_b: |-
          Hotový kód bude mať **jeden** cyklus `opakuj`  <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
              </block></xml>, **jeden** blok `posuň sa na juh`   <xml><block type="maze_moveSouth" limit="1"/></xml>, a **jeden** blok `posuň sa na východ`   <xml><block type="maze_moveEast" limit="1"/> </xml>.
        courseA_harvester_loops5_c: Na pozbieranie všetkej kukurice, vyskúšaj túto
          trasu!
      courseA_harvester_loops5a:
        courseA_harvester_loops5a_a: |-
          Budeš potrebovať jeden cyklus `opakovať` <xml> <block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
            </block></xml> za druhým.
        courseA_harvester_loops5a_b: Jeden cyklus zopakuje `posuň sa na juh`<xml><block
          type="maze_moveSouth" limit="1"/></xml>, a druhý zopakuje `posuň sa na východ`<xml><block
          type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Použi túto cestu na presun jedným smerom a potom
          druhým.
      courseA_harvester_loops5a_2019:
        courseA_harvester_loops5a_a: |-
          Budeš potrebovať jeden cyklus `opakovať` <xml> <block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
            </block></xml> za druhým.
        courseA_harvester_loops5a_b: Jeden cyklus zopakuje `posuň sa na juh`<xml><block
          type="maze_moveSouth" limit="1"/></xml>, a druhý zopakuje `posuň sa na východ`<xml><block
          type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Použi túto cestu na presun jedným smerom a potom
          druhým.
      courseA_harvester_loops5b:
        courseA_harvester_loops5b_a: Stlač `Spustiť` a uvidíš čo sa stane!
        courseA_harvester_loops5b_b: Opakujú sa tvoje cykly správny počet krát?
        courseA_harvester_loops5b_c: Posuň sa najprv jedným smerom a potom druhým.
      courseA_harvester_loops5b_2019:
        courseA_harvester_loops5b_a: Stlač `Spustiť` a uvidíš čo sa stane!
        courseA_harvester_loops5b_b: Opakujú sa tvoje cykly správny počet krát?
        courseA_harvester_loops5b_c: Posuň sa najprv jedným smerom a potom druhým.
      courseA_harvester_loops6:
        courseA_harvester_loops6_a: Ak sa zasekneš, vyskúšaj si spísať kroky na papier
          a hľadaj v nich opakujúce sa vzory.
        courseA_harvester_loops6_b: Choď touto cestou, aby si pozbieral/a všetku kukuricu.
      courseA_harvester_loops6_2019:
        courseA_harvester_loops6_a: Ak sa zasekneš, vyskúšaj si spísať kroky na papier
          a hľadaj v nich opakujúce sa vzory.
        courseA_harvester_loops6_b: Choď touto cestou, aby si pozbieral/a všetku kukuricu.
      courseA_harvester_loops7:
        courseA_harvester_loops7_a: |-
          Budeš potrebovať dva `opakovať` <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>cykly po sebe!
        courseA_harvester_loops7_b: Použi dva cykly na túto cestu.
      courseA_harvester_loops7_2019:
        courseA_harvester_loops7_a: |-
          Budeš potrebovať dva `opakovať` <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>cykly po sebe!
        courseA_harvester_loops7_b: Použi dva cykly na túto cestu.
      courseA_harvester_loops9:
        courseA_harvester_loops9_a: Rozdeľ si túto úlohu na 3 časti. Prvá časť do
          jedného rohu, druhá časť do druhého rohu a tretia časť na koniec.
        courseA_harvester_loops9_b: Neboj sa spustiť si kód po každom kroku, aby si
          zistil/a čo robí!
        courseA_harvester_loops9_c: Aby ste pozbierali všetku kukuricu choďte touto
          cestou.
      courseA_harvester_loops9_2019:
        courseA_harvester_loops9_a: Rozdeľ si túto úlohu na 3 časti. Prvá časť do
          jedného rohu, druhá časť do druhého rohu a tretia časť na koniec.
        courseA_harvester_loops9_b: Neboj sa spustiť si kód po každom kroku, aby si
          zistil/a čo robí!
        courseA_harvester_loops9_c: Aby ste pozbierali všetku kukuricu choďte touto
          cestou.
      courseA_harvester_seq1:
        courseA_harvester_seq1_a: |-
          Použi tento blok na zobratie kukurice, keď ju záhradníčka nájde.

          <xml>
            <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          Záhradníčka sa musí posunúť trikrát na východ, aby sa dostala ku kukurici. Použi tento blok:

          <xml>
            <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10:
        courseA_harvester_seq10_a: Nevieš sa pohnúť? Skús svoje kroky najprv rozpísať
          na papier.
        courseA_harvester_seq10_b: Najprv použi `V`, potom \`S. Zopakuj to 2-krát.
          Nezabudni na žiadnu kukuricu!
        courseA_harvester_seq10_c: Na pozbieranie všetkej kukurice, vyskúšaj túto
          trasu.
      courseA_harvester_seq10_2019:
        courseA_harvester_seq10_a: Nevieš sa pohnúť? Skús svoje kroky najprv rozpísať
          na papier.
        courseA_harvester_seq10_b: Najprv použi `V`, potom \`S. Zopakuj to 2-krát.
          Nezabudni na žiadnu kukuricu!
        courseA_harvester_seq10_c: Na pozbieranie všetkej kukurice, vyskúšaj túto
          trasu.
      courseA_harvester_seq13:
        courseA_bee_seq1_a: |-
          Použi tento blok na zobratie kukurice, keď sa k nej záhradníčka dostane.

          <xml>
            <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq13_2019:
        courseA_bee_seq1_a: |-
          Použi tento blok na zobratie kukurice, keď sa k nej záhradníčka dostane.

          <xml>
            <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq1_2019:
        courseA_harvester_seq1_a: |-
          Použi tento blok na zobratie kukurice, keď ju záhradníčka nájde.

          <xml>
            <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          Záhradníčka sa musí posunúť trikrát na východ, aby sa dostala ku kukurici. Použi tento blok:

          <xml>
            <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq2:
        courseA_harvester_seq2_a: Nezabudni použiť <xml><block type="harvester_corn"/></xml>
          na zobratie kukurice!
        courseA_harvester_seq2_b: Vyskúšaj si kroky rozpísať na papier, aby si našiel/našla
          rešenie!
      courseA_harvester_seq2_2019:
        courseA_harvester_seq2_a: Nezabudni použiť <xml><block type="harvester_corn"/></xml>
          na zobratie kukurice!
        courseA_harvester_seq2_b: Vyskúšaj si kroky rozpísať na papier, aby si našiel/našla
          rešenie!
      courseA_harvester_seq3:
        courseA_harvester_seq3_a: |-
          Nezabudol/la si použiť tento blok?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Prečítaj si kroky nahlas a uvidíš či ti to pomôže
          prísť na odpoveď.
      courseA_harvester_seq3_2019:
        courseA_harvester_seq3_a: |-
          Nezabudol/la si použiť tento blok?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Prečítaj si kroky nahlas a uvidíš či ti to pomôže
          prísť na odpoveď.
      courseA_harvester_seq4:
        courseA_harvester_seq4_a: Koľko krokov delí záhradníčku a kukuricu? Koľko
          blokov už máš na ploche?
        courseA_harvester_seq4_b: |-
          Budeš potrebovať 5 blokov `Posuň sa na východ` a jeden blok `Zober kukuricu`:

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq4_2019:
        courseA_harvester_seq4_a: Koľko krokov delí záhradníčku a kukuricu? Koľko
          blokov už máš na ploche?
        courseA_harvester_seq4_b: |-
          Budeš potrebovať 5 blokov `Posuň sa na východ` a jeden blok `Zober kukuricu`:

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5:
        courseA_harvester_seq5_a: Ktorý blok pošle záhradníčku nesprávnym smerom?
        courseA_harvester_seq5_b: Musíš odstrániť jeden blok.
        courseA_harvester_seq5_c: |-
          Zahoď tento blok do koša!

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq5_2019:
        courseA_harvester_seq5_a: Ktorý blok pošle záhradníčku nesprávnym smerom?
        courseA_harvester_seq5_b: Musíš odstrániť jeden blok.
        courseA_harvester_seq5_c: |-
          Zahoď tento blok do koša!

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6:
        courseA_harvester_seq6_a: Ak nevieš ako ďalej, skús si svoj postup povedať
          nahlas. Možno ti to pomôže nájsť cestu.
      courseA_harvester_seq6_2019:
        courseA_harvester_seq6_a: Ak nevieš ako ďalej, skús si svoj postup povedať
          nahlas. Možno ti to pomôže nájsť cestu.
      courseA_harvester_seq7:
        courseA_harvester_seq7_a: Vyskúšaj úlohu vyriešiť v dvoch častiach, prvá pred
          zabočením a druhá po zabočení.
        courseA_harvester_seq7_b: Nejde to? Toto je cesta, ktorou by sa mala záhradníčka
          vybrať.
      courseA_harvester_seq7_2019:
        courseA_harvester_seq7_a: Vyskúšaj úlohu vyriešiť v dvoch častiach, prvá pred
          zabočením a druhá po zabočení.
        courseA_harvester_seq7_b: Nejde to? Toto je cesta, ktorou by sa mala záhradníčka
          vybrať.
      courseA_harvester_seq8:
        courseA_harvester_seq8_a: Tvoj hotový kód by mal mať **4** bloky na posúvanie
          a **2** bloky na zbieranie.
      courseA_harvester_seq8_2019:
        courseA_harvester_seq8_a: Tvoj hotový kód by mal mať **4** bloky na posúvanie
          a **2** bloky na zbieranie.
      courseA_harvester_seq9:
        courseA_harvester_seq9_a: Spusti si kód niekoľko krát, aby si zistil/a čo
          robí. Kde sa záhradníčka zastaví?
        courseA_harvester_seq9_b: Nezabudni pozbierať všetku kukuricu! Budeš potrebovať
          **3** bloky zober kukuricu.
        courseA_harvester_seq9_c: Na pozbieranie všetkej kukurice, vyskúšaj túto trasu.
      courseA_harvester_seq9_2019:
        courseA_harvester_seq9_a: Spusti si kód niekoľko krát, aby si zistil/a čo
          robí. Kde sa záhradníčka zastaví?
        courseA_harvester_seq9_b: Nezabudni pozbierať všetku kukuricu! Budeš potrebovať
          **3** bloky zober kukuricu.
        courseA_harvester_seq9_c: Na pozbieranie všetkej kukurice, vyskúšaj túto trasu.
      courseA_maze_ramp2_2018:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp2_2019:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> </block> </next> </block> </next> </block> </xml>
      courseA_maze_ramp3a_2018:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveNorth"/> </next> </block> </next> </block> </next> </block> </xml>
      courseA_maze_ramp3a_2019:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveNorth"/> </next> </block> </next> </block> </next> </block> </xml>
      courseA_maze_ramp3b_2018:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveSouth"> <next> <block type="maze_moveWest"> <next> <block type="maze_moveWest"/> </next> </block> </next> </block> </next> </block> </xml>
      courseA_maze_ramp3b_2019:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveSouth"> <next> <block type="maze_moveWest"> <next> <block type="maze_moveWest"/> </next> </block> </next> </block> </next> </block> </xml>
      courseA_maze_ramp4a_2018:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveSouth"/> </next> </block> </next> </block> </next> </block> </xml>
      courseA_maze_ramp4a_2019:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveSouth"/> </next> </block> </next> </block> </next> </block> </xml>
      courseA_maze_ramp5a_2018:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveWest"> <next> <block type="maze_moveWest"> </block> </next> </block> </next> </block> </xml>
      courseA_maze_ramp5a_2019:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveWest"> <next> <block type="maze_moveWest"> </block> </next> </block> </next> </block> </xml>
      courseA_maze_seq1:
        courseA_maze_seq1_a: |-
          Ak máš problém pohnúť s vtáčikom, uisti sa, že bloky sú naozaj pospájané pod blokom <xml>
            <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          Vtáčik sa musí posunúť trikrát na západ, aby sa dostal ku prasaťu. Použi tento blok:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10:
        courseA_maze_seq10_a: Nevieš sa pohnúť? Skús svoje kroky najprv rozpísať na
          papier.
        courseA_maze_seq10_b: You will need to go 3 directions to solve this puzzle.
      courseA_maze_seq10_2018:
        courseA_maze_seq10_a: Nevieš sa pohnúť? Skús svoje kroky najprv rozpísať na
          papier.
        courseA_maze_seq10_b: Na vyriešenie tejto úlohy, budeš musieť ísť 3 rôznymi
          smermi.
      courseA_maze_seq10_2019:
        courseA_maze_seq10_a: Nevieš sa pohnúť? Skús svoje kroky najprv rozpísať na
          papier.
        courseA_maze_seq10_b: Na vyriešenie tejto úlohy, budeš musieť ísť 3 rôznymi
          smermi.
      courseA_maze_seq10_copy:
        courseA_maze_seq10_a: Nevieš sa pohnúť? Skús svoje kroky najprv rozpísať na
          papier.
        courseA_maze_seq10_b: You will need to go 3 directions to solve this puzzle.
      courseA_maze_seq13:
        courseA_maze_seq13_a: Ak ti nie je jasná cesta, použi svoj prst aby si vystopoval
          kadiaľ sa dostať od vtáčika k prasaťu.
        courseA_maze_seq13_b: Neboj sa spraviť chybu! Vyskúšaj pridať bloky a spustiť
          kód aby si uvidel/a čo sa stane.
        courseA_maze_seq13_c: Tieto bloky <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> ti pomôžu dostať sa bližšie k prasaťu.
      courseA_maze_seq13_2018:
        courseA_maze_seq13_a: Ak ti nie je jasná cesta, použi svoj prst aby si vystopoval
          kadiaľ sa dostať od vtáčika k prasaťu.
        courseA_maze_seq13_b: Neboj sa spraviť chybu! Vyskúšaj pridať bloky a spustiť
          kód aby si uvidel/a čo sa stane.
        courseA_maze_seq13_c: Tieto bloky <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> ti pomôžu dostať sa bližšie k prasaťu.
      courseA_maze_seq13_2019:
        courseA_maze_seq13_a: Ak ti nie je jasná cesta, použi svoj prst aby si vystopoval
          kadiaľ sa dostať od vtáčika k prasaťu.
        courseA_maze_seq13_b: Neboj sa spraviť chybu! Vyskúšaj pridať bloky a spustiť
          kód aby si uvidel/a čo sa stane.
        courseA_maze_seq13_c: "Tieto bloky <xml><block type=\"maze_moveNorth\"/></xml>\n\n<xml><block
          type=\"maze_moveEast\"/></xml> \n\nti pomôžu dostať sa bližšie k prasaťu."
      courseA_maze_seq1_2018:
        courseA_maze_seq1_a: |-
          Ak máš problém pohnúť s vtáčikom, uisti sa, že bloky sú naozaj pospájané pod blokom <xml>
            <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          Vtáčik sa musí posunúť trikrát na západ, aby sa dostal ku prasaťu. Použi tento blok:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq1_2019:
        courseA_maze_seq1_a: |-
          Ak máš problém pohnúť s vtáčikom, uisti sa, že bloky sú naozaj pospájané pod blokom <xml>
            <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          Vtáčik sa musí posunúť trikrát na západ, aby sa dostal ku prasaťu. Použi tento blok:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2:
        courseA_maze_seq2_a: This program is missing 1 block. Can you figure out which
          one?
        courseA_maze_seq2_b: Try running the code first to see where the bird ends
          up. Where do you need to go from there?
      courseA_maze_seq3:
        courseA_maze_seq3_a: 1 of the blocks is moving the bird in the wrong direction.
          Can you figure out which one and replace it with the correct block?
        courseA_maze_seq3_b: Try using the step button to find where the program goes
          wrong. Is it the 1st step? The 2nd?
        courseA_maze_seq3_c: This <xml><block type="maze_moveNorth"/></xml> block
          doesn't seem to be moving the bird in the right direction. Can you replace
          it with a different block?
      courseA_maze_seq4:
        courseA_maze_seq4_a: If you are having trouble, try to figure out what the
          correct path is and then remove the block that doesn't fit.
        courseA_maze_seq4_b: Try running the code as it is. Does something go wrong?
          Which block can you remove? How can you fix it?
      courseA_maze_seq5:
        courseA_maze_seq5_a: Vyskúšaj si kroky rozpísať na papier, aby si našiel/našla
          rešenie!
        courseA_maze_seq5_b: You will need 2 blocks, pointing in 2 directions.
      courseA_maze_seq5_2018:
        '1': Vyskúšaj si kroky rozpísať na papier, aby si našiel/našla rešenie!
        '2': |-
          Budeš musieť použiť tento blok:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5_2019:
        '1': Vyskúšaj si kroky rozpísať na papier, aby si našiel/našla rešenie!
        '2': |-
          Budeš musieť použiť tento blok:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5_copy:
        courseA_maze_seq5_a: Vyskúšaj si kroky rozpísať na papier, aby si našiel/našla
          rešenie!
        courseA_maze_seq5_b: You will need 2 blocks, pointing in 2 directions.
      courseA_maze_seq5a_2018:
        '1': Prečítaj si kroky nahlas a uvidíš či ti to pomôže prísť na odpoveď.
      courseA_maze_seq5a_2019:
        '1': Prečítaj si kroky nahlas a uvidíš či ti to pomôže prísť na odpoveď.
      courseA_maze_seq6:
        courseA_maze_seq6_a: Tvoj výsledný kód by mal mať tri pohybové bloky.
        courseA_maze_seq6_b: Ak sa zasekneš, vyskúšaj úlohu vyriešiť v dvoch častiach,
          prvá pred zabočením a druhá po zabočení.
      courseA_maze_seq6_2018:
        courseA_maze_seq6_a: Tvoj výsledný kód by mal mať tri pohybové bloky.
        courseA_maze_seq6_b: Ak sa zasekneš, vyskúšaj úlohu vyriešiť v dvoch častiach,
          prvá pred zabočením a druhá po zabočení.
      courseA_maze_seq6_2019:
        courseA_maze_seq6_a: Tvoj výsledný kód by mal mať tri pohybové bloky.
        courseA_maze_seq6_b: Ak sa zasekneš, vyskúšaj úlohu vyriešiť v dvoch častiach,
          prvá pred zabočením a druhá po zabočení.
      courseA_maze_seq6_copy:
        courseA_maze_seq6_a: Tvoj výsledný kód by mal mať tri pohybové bloky.
        courseA_maze_seq6_b: Ak sa zasekneš, vyskúšaj úlohu vyriešiť v dvoch častiach,
          prvá pred zabočením a druhá po zabočení.
      courseA_maze_seq7:
        courseA_maze_seq7_a: There is 1 block that you need to add to move the bird
          to the pig.
        courseA_maze_seq7_b: If you can't figure out what to do, try drawing the puzzle
          on paper and use your finger to figure out which way to move.
      courseA_maze_seq7_copy:
        courseA_maze_seq7_a: There is 1 block that you need to add to move the bird
          to the pig.
        courseA_maze_seq7_b: If you can't figure out what to do, try drawing the puzzle
          on paper and use your finger to figure out which way to move.
      courseA_maze_seq8:
        courseA_maze_seq8_a: Ak to nejde ďalej, vyskúšaj si to nakresliť na papier,
          a uvidíš kam by sa vtáčik mal pohnúť.
      courseA_maze_seq8_2018:
        courseA_maze_seq8_a: Ak to nejde ďalej, vyskúšaj si to nakresliť na papier,
          a uvidíš kam by sa vtáčik mal pohnúť.
      courseA_maze_seq8_2019:
        courseA_maze_seq8_a: Ak to nejde ďalej, vyskúšaj si to nakresliť na papier,
          a uvidíš kam by sa vtáčik mal pohnúť.
      courseA_maze_seq8_copy:
        courseA_maze_seq8_a: Ak to nejde ďalej, vyskúšaj si to nakresliť na papier,
          a uvidíš kam by sa vtáčik mal pohnúť.
      courseA_maze_seq9:
        courseA_maze_seq9_a: Stuck? Try tracing the bird's path with your finger.
        courseA_maze_seq9_b: If you're not sure what to do, try pressing "Start over"
          and running the code to see what goes wrong.
        courseA_maze_seq9_c: You will need to move in 3 directions to solve this puzzle.
      courseA_maze_seq_challenge1:
        courseA_maze_seq_challenge1_a: There are two solutions to this puzzle.
      courseA_maze_seq_challenge1_2018:
        courseA_maze_seq_challenge1_a: There are two solutions to this puzzle.
      courseA_maze_seq_challenge1_2019:
        courseA_maze_seq_challenge1_a: There are two solutions to this puzzle.
      courseA_maze_seq_challenge2:
        courseA_maze_seq_challenge2_a: Try counting the spaces with your finger. Remember
          not to count the space where you start!
      courseA_maze_seq_challenge2_2018:
        courseA_maze_seq_challenge2_a: Try counting the spaces with your finger. Remember
          not to count the space where you start!
      courseA_maze_seq_challenge2_2019:
        courseA_maze_seq_challenge2_a: Try counting the spaces with your finger. Remember
          not to count the space where you start!
      courseA_playLab_events2:
        courseA_playLab_events2_a: Pohľadaj blok, vďaka ktorému pes začne rozprávať.
        courseA_playLab_events2_b: |-
          Toto je kód ktorý je potrebný na dokončenie úlohy:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018:
        courseA_playLab_events2_a: Pohľadaj blok, vďaka ktorému pes začne rozprávať.
        courseA_playLab_events2_b: |-
          Toto je kód ktorý je potrebný na dokončenie úlohy:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2019:
        courseA_playLab_events2_a: Pohľadaj blok, vďaka ktorému pes začne rozprávať.
        courseA_playLab_events2_b: |-
          Toto je kód ktorý je potrebný na dokončenie úlohy:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3:
        courseA_playLab_events3_a: |-
          Vytiahni tento blok  <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> von a pripoj ho na spodnú časť bloku <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml>
        courseA_playLab_events3_b: Pamätaj, že musíš použiť ľavú šípku, aby si s Jorgem
          pohol/pohla, potom čo je tvoj program hotový. Keď sa vlajka premení na zelenú,
          je to hotové!
      courseA_playLab_events3_2018:
        courseA_playLab_events3_a: |-
          Vytiahni tento blok  <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> von a pripoj ho na spodnú časť bloku <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml>
        courseA_playLab_events3_b: Pamätaj, že musíš použiť ľavú šípku, aby si s Jorgem
          pohol/pohla, potom čo je tvoj program hotový. Keď sa vlajka premení na zelenú,
          je to hotové!
      courseA_playLab_events3_2019:
        courseA_playLab_events3_a: |-
          Vytiahni tento blok  <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> von a pripoj ho na spodnú časť bloku <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml>
        courseA_playLab_events3_b: Pamätaj, že musíš použiť ľavú šípku, aby si s Jorgem
          pohol/pohla, potom čo je tvoj program hotový. Keď sa vlajka premení na zelenú,
          je to hotové!
      courseA_playLab_events4:
        courseA_playLab_events4_a: |-
          Tu je blok s udalosťou, kotrý potrebuješ,aby si pohol s Jorgem:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          Toto je kód ktorý budeš potrebovať na dokončenie úlohy:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events4_2018:
        courseA_playLab_events4_a: |-
          Tu je blok s udalosťou, kotrý potrebuješ,aby si pohol s Jorgem:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          Toto je kód ktorý budeš potrebovať na dokončenie úlohy:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events4_2019:
        courseA_playLab_events4_a: |-
          Tu je blok s udalosťou, kotrý potrebuješ,aby si pohol s Jorgem:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          Toto je kód ktorý budeš potrebovať na dokončenie úlohy:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events5:
        courseA_playLab_events5_a: |-
          Tu vidíš bloky s udalosťami, ktoré budeš potrebovať, na pohyb Jorgeho hore a dole:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>

          a

          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: |-
          Po kliknutí na obrázok si môžeš vybrať, ktorú klávesu (aký smer šípky) bude tento blok ovládať.

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018:
        courseA_playLab_events5_a: |-
          Tu vidíš bloky s udalosťami, ktoré budeš potrebovať, na pohyb Jorgeho hore a dole:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>

          a

          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: |-
          Po kliknutí na obrázok si môžeš vybrať, ktorú klávesu (aký smer šípky) bude tento blok ovládať.

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2019:
        courseA_playLab_events5_a: |-
          Tu vidíš bloky s udalosťami, ktoré budeš potrebovať, na pohyb Jorgeho hore a dole:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>

          a

          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: |-
          Po kliknutí na obrázok si môžeš vybrať, ktorú klávesu (aký smer šípky) bude tento blok ovládať.

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6:
        courseA_playLab_events6_a: |-
          Tu je blok s udalosťou, kotrý potrebuješ, aby Jorgem niečo urobil, potom ako naňho klikneš:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          Tu je blok, ktorý sa používa na zmenu pozdia:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          Tu je blok, ktorý sa používa na prehratie náhodného zvuku:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events6_2018:
        courseA_playLab_events6_a: |-
          Tu je blok s udalosťou, kotrý potrebuješ, aby Jorgem niečo urobil, potom ako naňho klikneš:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          Tu je blok, ktorý sa používa na zmenu pozdia:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          Tu je blok, ktorý sa používa na prehratie náhodného zvuku:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events6_2019:
        courseA_playLab_events6_a: |-
          Tu je blok s udalosťou, kotrý potrebuješ, aby Jorgem niečo urobil, potom ako naňho klikneš:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          Tu je blok, ktorý sa používa na zmenu pozdia:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          Tu je blok, ktorý sa používa na prehratie náhodného zvuku:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events7:
        courseA_playLab_events7_a: |-
          Použi tento blok, aby si vedel/a ovplyvniť čo sa stane potom ako do seba postavičky narazia.

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playLab_events7_2018:
        courseA_playLab_events7_a: |-
          Použi tento blok, aby si vedel/a ovplyvniť čo sa stane potom ako do seba postavičky narazia.

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playLab_events7_2019:
        courseA_playLab_events7_a: |-
          Použi tento blok, aby si vedel/a ovplyvniť čo sa stane potom ako do seba postavičky narazia.

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you
          click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click
          Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when
          you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click
          the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finally, make Wendel the Wizard show
          when you click Spiff!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2018:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you
          click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click
          Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when
          you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click
          the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finally, make Wendel the Wizard show
          when you click Spiff!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2019:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you
          click Robin!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click
          Waddles!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when
          you click Boo!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click
          the monster!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finally, make Wendel the Wizard show
          when you click Spiff!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "You can make a bird sing.\n\n<xml> \n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "You can make a robot beep.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          You can make an angry monster growl.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseA_playlab_events_challenge2_2018:
        courseA_playlab_events_challenge2_a: "You can make a bird sing.\n\n<xml> \n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "You can make a robot beep.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          You can make an angry monster growl.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseA_playlab_events_challenge2_2019:
        courseA_playlab_events_challenge2_a: "You can make a bird sing.\n\n<xml> \n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "You can make a robot beep.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          You can make an angry monster growl.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseB_Scrat_ramp1_2018:
        '1': Ak Scrat nerobí to, čo chceš, tak sa uisti, či sú oba bloky správne pripojené
          a potom znovu klikni "Spustiť".
        '2': Neboj sa urobiť chybu! Vyskúšaj niečo, a keď to nefunguje, tak vyskúšaj
          niečo iné!
      courseB_Scrat_ramp1_2019:
        '1': Ak Scrat nerobí to, čo chceš, tak sa uisti, či sú oba bloky správne pripojené
          a potom znovu klikni "Spustiť".
        '2': Neboj sa urobiť chybu! Vyskúšaj niečo, a keď to nefunguje, tak vyskúšaj
          niečo iné!
      courseB_Scrat_ramp2_2018:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> </block> </next> </block> </next> </block> </xml>
      courseB_Scrat_ramp2_2019:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> </block> </next> </block> </next> </block> </xml>
      courseB_Scrat_ramp3a_2018:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveNorth"/> </next> </block> </next> </block> </next> </block> </xml>
      courseB_Scrat_ramp3a_2019:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveNorth"/> </next> </block> </next> </block> </next> </block> </xml>
      courseB_Scrat_ramp3b_2018:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveSouth"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"/> </next> </block> </next> </block> </next> </block> </xml>
      courseB_Scrat_ramp3b_2019:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveSouth"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"/> </next> </block> </next> </block> </next> </block> </xml>
      courseB_Scrat_ramp4a_2018:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveSouth"/> </next> </block> </next> </block> </next> </block> </xml>
      courseB_Scrat_ramp4a_2019:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveSouth"/> </next> </block> </next> </block> </next> </block> </xml>
      courseB_Scrat_ramp5a_2018:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveWest"> <next> <block type="maze_moveWest"> </block> </next> </block> </next> </block> </xml>
      courseB_Scrat_ramp5a_2019:
        '1': |-
          Tvoj kód by mal vyzerať takto:

          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveWest"> <next> <block type="maze_moveWest"> </block> </next> </block> </next> </block> </xml>
      courseB_artist_loops2:
        courseB_artist_loops2_a: Ak chceš opakovať cyklus viac ako 4 krát, tak môžeš
          zmeniť číslo navrchu bloku.
        courseB_artist_loops2_b: Vyskúšaj najskôr spustiť kód, aby si uvidel, kde
          umelec skončí.
      courseB_artist_loops2_2018:
        courseB_artist_loops2_a: Ak chceš opakovať cyklus viac ako 4 krát, tak môžeš
          zmeniť číslo navrchu bloku.
        courseB_artist_loops2_b: Vyskúšaj najskôr spustiť kód, aby si uvidel, kde
          umelec skončí.
      courseB_artist_loops2_2019:
        courseB_artist_loops2_a: Ak chceš opakovať cyklus viac ako 4 krát, tak môžeš
          zmeniť číslo navrchu bloku.
        courseB_artist_loops2_b: Vyskúšaj najskôr spustiť kód, aby si uvidel, kde
          umelec skončí.
      courseB_artist_loops3:
        courseB_artist_loops3_a: Remember to use a `repeat` loop for better code!
        courseB_artist_loops3_b: Umelec sa bude musieť pohnúť na Juh, aby nakreslil
          túto čiaru.
      courseB_artist_loops3_2018:
        courseB_artist_loops3_a: |-
          Nezabudni použiť blok `opakuj` <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>, aby si napísal lepší kód!
        courseB_artist_loops3_b: Umelec sa bude musieť pohnúť na Juh, aby nakreslil
          túto čiaru.
      courseB_artist_loops3_2019:
        courseB_artist_loops3_a: |-
          Nezabudni použiť blok `opakuj` <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>, aby si napísal lepší kód!
        courseB_artist_loops3_b: Umelec sa bude musieť pohnúť na Juh, aby nakreslil
          túto čiaru.
      courseB_artist_loops4:
        courseB_artist_loops4_a: Blok "skoč" ti umožní sa pohnúť dopredu bez toho,
          aby si nakreslil čiaru.
        courseB_artist_loops4_b: Budeš potrebovať pridať blok dovnútra cyklu opakuj,
          aby si vyriešil túto úlohu.
        courseB_artist_loops4_c: Nezabudni zmeniť počet, koľko krát sa cyklus zopakuje.
      courseB_artist_loops4_2018:
        courseB_artist_loops4_a: Blok "skoč" ti umožní sa pohnúť dopredu bez toho,
          aby si nakreslil čiaru.
        courseB_artist_loops4_b: Budeš potrebovať pridať blok dovnútra cyklu opakuj,
          aby si vyriešil túto úlohu.
        courseB_artist_loops4_c: Nezabudni zmeniť počet, koľko krát sa cyklus zopakuje.
      courseB_artist_loops4_2019:
        courseB_artist_loops4_a: Blok "skoč" ti umožní sa pohnúť dopredu bez toho,
          aby si nakreslil čiaru.
        courseB_artist_loops4_b: Budeš potrebovať pridať blok dovnútra cyklu opakuj,
          aby si vyriešil túto úlohu.
        courseB_artist_loops4_c: Nezabudni zmeniť počet, koľko krát sa cyklus zopakuje.
      courseB_artist_loops5:
        courseB_artist_loops5_a: Vytiahni cyklus `opakuj`, a potom vlož doňho ostatné
          bloky. Koľko krát ich potrebuješ zopakovať?
      courseB_artist_loops5_2018:
        courseB_artist_loops5_a: |-
          Vytiahni cyklus `opakuj` <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>, a potom doňho vlož ostatné bloky. Koľko krát ich potrebuješ zopakovať?
      courseB_artist_loops5_2019:
        courseB_artist_loops5_a: |-
          Vytiahni cyklus `opakuj` <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>, a potom doňho vlož ostatné bloky. Koľko krát ich potrebuješ zopakovať?
      courseB_artist_loops6:
        courseB_artist_loops6_b: Skús si zapísať všetky kroky na kus papiera a pohľadaj
          vzor, ktorý sa opakuje.
      courseB_artist_loops6_2018:
        courseB_artist_loops6_b: Skús si zapísať všetky kroky na kus papiera a pohľadaj
          vzor, ktorý sa opakuje.
      courseB_artist_loops6_2019:
        courseB_artist_loops6_b: Skús si zapísať všetky kroky na kus papiera a pohľadaj
          vzor, ktorý sa opakuje.
      courseB_artist_loops7:
        courseB_artist_loops7_a: Táto výzva potrebuje **4** cykly, jeden za druhým!
        courseB_artist_loops7_b: |-
          Všimni si, že každý cyklus opakuje schodový vzor, ktorý ide iným smerom.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: |-
          Cykly by mali spraviť toto:

          -   Cyklus 1

          -   Doprava

          -   Dole

          -   Cyklus 2

          -   Doprava

          -   Hore

          -   Cyklus 3

          -   Doľava

          -   Hore

          -   Cyklus 4

          -   Doľava

          -   Dole
      courseB_artist_loops7_2018:
        courseB_artist_loops7_a: Táto výzva potrebuje **4** cykly, jeden za druhým!
        courseB_artist_loops7_b: |-
          Všimni si, že každý cyklus opakuje schodový vzor, ktorý ide iným smerom.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: |-
          Cykly by mali spraviť toto:

          -   Cyklus 1

          -   Doprava

          -   Dole

          -   Cyklus 2

          -   Doprava

          -   Hore

          -   Cyklus 3

          -   Doľava

          -   Hore

          -   Cyklus 4

          -   Doľava

          -   Dole
      courseB_artist_loops7_2019:
        courseB_artist_loops7_a: Táto výzva potrebuje **4** cykly, jeden za druhým!
        courseB_artist_loops7_b: |-
          Všimni si, že každý cyklus opakuje schodový vzor, ktorý ide iným smerom.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: |-
          Cykly by mali spraviť toto:

          -   Cyklus 1

          -   Doprava

          -   Dole

          -   Cyklus 2

          -   Doprava

          -   Hore

          -   Cyklus 3

          -   Doľava

          -   Hore

          -   Cyklus 4

          -   Doľava

          -   Dole
      courseB_artist_loops8:
        courseB_artist_loops8_a: Koľko krát by si mal zopakovať tento vzor, aby si
          vytvoril rebrík?
        courseB_artist_loops8_b: Vyskúšaj spustiť kód, ktorý sme pre teba pripravili
          a zisti, čo robí.
      courseB_artist_loops8_2018:
        courseB_artist_loops8_a: Koľko krát by si mal zopakovať tento vzor, aby si
          vytvoril rebrík?
        courseB_artist_loops8_b: Vyskúšaj spustiť kód, ktorý sme pre teba pripravili
          a zisti, čo robí.
      courseB_artist_loops8_2019:
        courseB_artist_loops8_a: Koľko krát by si mal zopakovať tento vzor, aby si
          vytvoril rebrík?
        courseB_artist_loops8_b: Vyskúšaj spustiť kód, ktorý sme pre teba pripravili
          a zisti, čo robí.
      courseB_artist_loops9:
        courseB_artist_loops9_a: Pamätaj, že blok "skoč" môže byť použitý na pohyb
          bez nakreslenia čiary.
        courseB_artist_loops9_b: Budeš chcieť použiť blok Z, aby si vyriešil túto
          úlohu.
        courseB_artist_loops9_c: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
      courseB_artist_loops9_2018:
        courseB_artist_loops9_a: Pamätaj, že blok "skoč" môže byť použitý na pohyb
          bez nakreslenia čiary.
        courseB_artist_loops9_b: Budeš chcieť použiť blok Z, aby si vyriešil túto
          úlohu.
        courseB_artist_loops9_c: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
      courseB_artist_loops9_2019:
        courseB_artist_loops9_a: Pamätaj, že blok "skoč" môže byť použitý na pohyb
          bez nakreslenia čiary.
        courseB_artist_loops9_b: Budeš chcieť použiť blok Z, aby si vyriešil túto
          úlohu.
        courseB_artist_loops9_c: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
      courseB_artist_loops_challenge1:
        courseB_artist_loops_challenge1_a: 'Blok ako tento: <xml> <block type="simple_move_up_right"/></xml>
          umožní tvojmu umelcovi hýbať sa šikmo!'
        courseB_artist_loops_challenge1_b: Keď dokončíš jednu kocku, tak `skoč` na
          druhú!
        courseB_artist_loops_challenge1_c: 'Budeš sa potrebovať `pohnúť` alebo `skočíť`
          cez niektoré čiary dva krát. '
      courseB_artist_loops_challenge1_2018:
        courseB_artist_loops_challenge1_a: 'Blok ako tento: <xml> <block type="simple_move_up_right"/></xml>
          umožní tvojmu umelcovi hýbať sa šikmo!'
        courseB_artist_loops_challenge1_b: Keď dokončíš jednu kocku, tak `skoč` na
          druhú!
        courseB_artist_loops_challenge1_c: 'Budeš sa potrebovať `pohnúť` alebo `skočíť`
          cez niektoré čiary dva krát. '
      courseB_artist_loops_challenge1_2019:
        courseB_artist_loops_challenge1_a: 'Blok ako tento: <xml> <block type="simple_move_up_right"/></xml>
          umožní tvojmu umelcovi hýbať sa šikmo!'
        courseB_artist_loops_challenge1_b: Keď dokončíš jednu kocku, tak `skoč` na
          druhú!
        courseB_artist_loops_challenge1_c: 'Budeš sa potrebovať `pohnúť` alebo `skočíť`
          cez niektoré čiary dva krát. '
      courseB_artist_loops_challenge2:
        courseB_artist_loops_challenge2_a: Už si dostal kód, ktorý nakreslí X. Všetko,
          čo musíš spraviť, je opakovať toto X a `skočiť` na ďalšie miesto.
        courseB_artist_loops_challenge2_b: Môžeš použiť bloky `skoč`, aby si sa posunul
          na ďalšie miesta bez kreslenia.
      courseB_artist_loops_challenge2_2018:
        courseB_artist_loops_challenge2_a: Už si dostal kód, ktorý nakreslí X. Všetko,
          čo musíš spraviť, je opakovať toto X a `skočiť` na ďalšie miesto.
        courseB_artist_loops_challenge2_b: Môžeš použiť bloky `skoč`, aby si sa posunul
          na ďalšie miesta bez kreslenia.
      courseB_artist_loops_challenge2_2019:
        courseB_artist_loops_challenge2_a: Už si dostal kód, ktorý nakreslí X. Všetko,
          čo musíš spraviť, je opakovať toto X a `skočiť` na ďalšie miesto.
        courseB_artist_loops_challenge2_b: Môžeš použiť bloky `skoč`, aby si sa posunul
          na ďalšie miesta bez kreslenia.
      courseB_collector_loops1:
        courseB_collector_loops1_a: Blok <xml><block type="collector_collect_simplified"/></xml>
          možeš použiť na pozbieranie drahokamu, keď na ňom stojíš.
      courseB_collector_loops10:
        courseB_collector_loops10_a: Ak nevieš prísť na to, kam máš dať cykly `opakuj`,
          tak si napíš kód krok po kroku a pohľadaj v ňom opakujúci sa vzor.
        courseB_collector_loops10_b: Skús si zapísať všetky kroky na kus papiera a
          pohľadaj vzor, ktorý sa opakuje.
      courseB_collector_loops10_2018:
        courseB_collector_loops10_a: Ak nevieš prísť na to, kam máš dať cykly `opakuj`,
          tak si napíš kód krok po kroku a pohľadaj v ňom opakujúci sa vzor.
        courseB_collector_loops10_b: Skús si zapísať všetky kroky na kus papiera a
          pohľadaj vzor, ktorý sa opakuje.
      courseB_collector_loops10_2019:
        courseB_collector_loops10_a: Ak nevieš prísť na to, kam máš dať cykly `opakuj`,
          tak si napíš kód krok po kroku a pohľadaj v ňom opakujúci sa vzor.
        courseB_collector_loops10_b: Skús si zapísať všetky kroky na kus papiera a
          pohľadaj vzor, ktorý sa opakuje.
      courseB_collector_loops1_2018:
        courseB_collector_loops1_a: Blok <xml><block type="collector_collect_simplified"/></xml>
          možeš použiť na pozbieranie drahokamu, keď na ňom stojíš.
      courseB_collector_loops1_2019:
        courseB_collector_loops1_a: Blok <xml><block type="collector_collect_simplified"/></xml>
          možeš použiť na pozbieranie drahokamu, keď na ňom stojíš.
      courseB_collector_loops2:
        courseB_collector_loops2_a: Musíš sa pohnúť predtým, ako dokážeš pozbierať
          nejaký drahokam.
        courseB_collector_loops2_b: Keď prídeš na miesto s drahokamom, tak použi blok
          <xml><block type="collector_collect"/></xml>, aby si ho pozbieral.
      courseB_collector_loops2_2018:
        courseB_collector_loops2_a: Musíš sa pohnúť predtým, ako dokážeš pozbierať
          nejaký drahokam.
        courseB_collector_loops2_b: Keď prídeš na miesto s drahokamom, tak použi blok
          <xml><block type="collector_collect"/></xml>, aby si ho pozbieral.
      courseB_collector_loops2_2019:
        courseB_collector_loops2_a: Musíš sa pohnúť predtým, ako dokážeš pozbierať
          nejaký drahokam.
        courseB_collector_loops2_b: Keď prídeš na miesto s drahokamom, tak použi blok
          <xml><block type="collector_collect"/></xml>, aby si ho pozbieral.
      courseB_collector_loops3:
        courseB_collector_prog3_a: Vyskúšaj použiť blok <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml>, aby si pozbieral tvoje
          drahokamy.
        courseB_collector_prog3_b: Pamätaj, že do vnútra bloku `opakuj` môžeš vložiť
          aj viac blokov.
      courseB_collector_loops3_2018:
        courseB_collector_prog3_a: Vyskúšaj použiť blok <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml>, aby si pozbieral tvoje
          drahokamy.
        courseB_collector_prog3_b: Pamätaj, že do vnútra bloku `opakuj` môžeš vložiť
          aj viac blokov.
      courseB_collector_loops3_2019:
        courseB_collector_prog3_a: Vyskúšaj použiť blok <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml>, aby si pozbieral tvoje
          drahokamy.
        courseB_collector_prog3_b: Pamätaj, že do vnútra bloku `opakuj` môžeš vložiť
          aj viac blokov.
      courseB_collector_loops4:
        courseB_collector_loops4_a: Skús použiť tlačidlo Krok a zisti, kde nastala
          chyba.
        courseB_collector_loops4_b: Aby si zmenil, ako ďaleko Laurel zájde, tak zmeň
          počet opakovaní daného cyklu.
        courseB_collector_loops4_c: Laurel potrebuje prejsť dolu a pozbierať drahokamy
          hneď potom, ako dokončí cyklus `opakuj`!
      courseB_collector_loops4_2018:
        courseB_collector_loops4_a: Skús použiť tlačidlo Krok a zisti, kde nastala
          chyba.
        courseB_collector_loops4_b: Aby si zmenil, ako ďaleko Laurel zájde, tak zmeň
          počet opakovaní daného cyklu.
        courseB_collector_loops4_c: |-
          Laurel potrebuje prejsť dolu a pozbierať drahokamy hneď potom, ako dokončí cyklus `opakuj` <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>!
      courseB_collector_loops4_2019:
        courseB_collector_loops4_a: Skús použiť tlačidlo Krok a zisti, kde nastala
          chyba.
        courseB_collector_loops4_b: Aby si zmenil, ako ďaleko Laurel zájde, tak zmeň
          počet opakovaní daného cyklu.
        courseB_collector_loops4_c: |-
          Laurel potrebuje prejsť dolu a pozbierať drahokamy hneď potom, ako dokončí cyklus `opakuj` <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>!
      courseB_collector_loops5:
        courseB_collector_loops5_a: Použi viac ako jeden cyklus, aby si dokončil úlohu.
        courseB_collector_loops5_b: Skús spustiť kód niekoľko krát a sleduj, čo sa
          deje.
      courseB_collector_loops5_2018:
        courseB_collector_loops5_a: Použi viac ako jeden cyklus, aby si dokončil úlohu.
        courseB_collector_loops5_b: Skús spustiť kód niekoľko krát a sleduj, čo sa
          deje.
      courseB_collector_loops5_2019:
        courseB_collector_loops5_a: Použi viac ako jeden cyklus, aby si dokončil úlohu.
        courseB_collector_loops5_b: Skús spustiť kód niekoľko krát a sleduj, čo sa
          deje.
      courseB_collector_loops6:
        courseB_collector_loops6_a: Nevieš prísť na to, kde sa to pokazí? Použi tlačidlo
          "Krok", aby si prešiel vždy iba jeden blok tvojho progamu.
        courseB_collector_loops6_b: Kliknutím na "3" a zmenou na iné číslo môžeš zmeniť
          počet opakovaní cyklu.
        courseB_collector_loops6_c: Budeš chcieť použiť 3 cykly `opakuj`, aby si vyriešil
          túto úlohu.
        courseB_collector_loops6_d: Ak nevieš ako ďalej, tak si skús túto úlohu rozdeliť
          na 3 časti.
      courseB_collector_loops6_2018:
        courseB_collector_loops6_a: Nevieš prísť na to, kde sa to pokazí? Použi tlačidlo
          "Krok", aby si prešiel vždy iba jeden blok tvojho progamu.
        courseB_collector_loops6_b: Kliknutím na "3" a zmenou na iné číslo môžeš zmeniť
          počet opakovaní cyklu.
        courseB_collector_loops6_c: |-
          Budeš chcieť použiť 3 cykly `opakuj` <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>, aby si vyriešil túto úlohu.
        courseB_collector_loops6_d: Ak nevieš ako ďalej, tak si skús túto úlohu rozdeliť
          na 3 časti.
      courseB_collector_loops6_2019:
        courseB_collector_loops6_a: Nevieš prísť na to, kde sa to pokazí? Použi tlačidlo
          "Krok", aby si prešiel vždy iba jeden blok tvojho progamu.
        courseB_collector_loops6_b: Kliknutím na "3" a zmenou na iné číslo môžeš zmeniť
          počet opakovaní cyklu.
        courseB_collector_loops6_c: |-
          Budeš chcieť použiť 3 cykly `opakuj` <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>, aby si vyriešil túto úlohu.
        courseB_collector_loops6_d: Ak nevieš ako ďalej, tak si skús túto úlohu rozdeliť
          na 3 časti.
      courseB_collector_loops7:
        courseB_collector_loops7_a: Ak si s touto úlohou nevieš rady, tak si ju nakresli
          na papier. To ti pomôže vymyslieť, ako na to.
        courseB_collector_loops7_b: Na vyriešenie tejto úlohy potrebuješ 3 cykly opakuj.
          A nezabudni na extra drahokam na konci!
      courseB_collector_loops7_2018:
        courseB_collector_loops7_a: Ak si s touto úlohou nevieš rady, tak si ju nakresli
          na papier. To ti pomôže vymyslieť, ako na to.
        courseB_collector_loops7_b: Na vyriešenie tejto úlohy potrebuješ 3 cykly opakuj.
          A nezabudni na extra drahokam na konci!
      courseB_collector_loops7_2019:
        courseB_collector_loops7_a: Ak si s touto úlohou nevieš rady, tak si ju nakresli
          na papier. To ti pomôže vymyslieť, ako na to.
        courseB_collector_loops7_b: Na vyriešenie tejto úlohy potrebuješ 3 cykly opakuj.
          A nezabudni na extra drahokam na konci!
      courseB_collector_loops8:
        courseB_collector_loops8_challenge_a: Ak nevieš prísť na to, kam máš dať cykly
          opakuj, tak si kód napíš krok po kroku a pohľadaj v ňom nejaký opakovaný
          vzor.
      courseB_collector_loops8_2018:
        courseB_collector_loops8_challenge_a: Ak nevieš prísť na to, kam máš dať cykly
          opakuj, tak si kód napíš krok po kroku a pohľadaj v ňom nejaký opakovaný
          vzor.
      courseB_collector_loops8_2019:
        courseB_collector_loops8_challenge_a: Ak nevieš prísť na to, kam máš dať cykly
          opakuj, tak si kód napíš krok po kroku a pohľadaj v ňom nejaký opakovaný
          vzor.
      courseB_collector_loops9:
        courseB_collector_loops9_a: 'Vyzerá to príliš ťažko? Rozdeľ si to na 3 menšie
          problémy a hneď bude úloha jednoduchšia.  '
        courseB_collector_loops9_b: Na vyriešenie budeš potrebovať 3 cykly opakuj,
          jeden za druhým.
      courseB_collector_loops9_2018:
        courseB_collector_loops9_a: 'Vyzerá to príliš ťažko? Rozdeľ si to na 3 menšie
          problémy a hneď bude úloha jednoduchšia.  '
        courseB_collector_loops9_b: Na vyriešenie budeš potrebovať 3 cykly opakuj,
          jeden za druhým.
      courseB_collector_loops9_2019:
        courseB_collector_loops9_a: 'Vyzerá to príliš ťažko? Rozdeľ si to na 3 menšie
          problémy a hneď bude úloha jednoduchšia.  '
        courseB_collector_loops9_b: Na vyriešenie budeš potrebovať 3 cykly opakuj,
          jeden za druhým.
      courseB_collector_loops_challenge1:
        courseB_collector_loops_challenge1_b: "Začni opakovacím cyklom s nasledujúcimi
          príkazmi:\n\n<xml>\n<block type=\"maze_moveSouth\">\n<next>\n<block type=\"collector_collect\"></block>
          \n</next>\n</block>\n</xml>"
        courseB_collector_loops_challenge1_c: |-
          Posuň sa na Východ medzi každými cestami.

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          Dá sa to spraviť s iba 14 blokmi. Klikni na jednu ďalšiu nápovedu, aby si uvidel riešenie.
        courseB_collector_loops_challenge1_d: |-
          Vyskúšaj toto!

           <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title> <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2018:
        courseB_collector_loops_challenge1_b: "Začni opakovacím cyklom s nasledujúcimi
          príkazmi:\n\n<xml>\n<block type=\"maze_moveSouth\">\n<next>\n<block type=\"collector_collect\"></block>
          \n</next>\n</block>\n</xml>"
        courseB_collector_loops_challenge1_c: |-
          Posuň sa na Východ medzi každými cestami.

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          Dá sa to spraviť s iba 14 blokmi. Klikni na jednu ďalšiu nápovedu, aby si uvidel riešenie.
        courseB_collector_loops_challenge1_d: |-
          Vyskúšaj toto!

           <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title> <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2019:
        courseB_collector_loops_challenge1_b: "Začni opakovacím cyklom s nasledujúcimi
          príkazmi:\n\n<xml>\n<block type=\"maze_moveSouth\">\n<next>\n<block type=\"collector_collect\"></block>
          \n</next>\n</block>\n</xml>"
        courseB_collector_loops_challenge1_c: |-
          Posuň sa na Východ medzi každými cestami.

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          Dá sa to spraviť s iba 14 blokmi. Klikni na jednu ďalšiu nápovedu, aby si uvidel riešenie.
        courseB_collector_loops_challenge1_d: |-
          Vyskúšaj toto!

           <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title> <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2:
        courseB_collector_loops_challenge2_a: If something goes wrong, don't be afraid
          to start over. Don't give up!
        courseB_collector_loops_challenge2_b: |-
          If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!

          <xml><block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block></xml>
        courseB_collector_loops_challenge2_c: Try using a `repeat` block to collect
          the final pile of treasure!
        courseB_collector_loops_challenge2_d: |-
          Try this solution:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified_dropdown">
                  <title name="TIMES" config="3-10">4</title>
                  <statement name="DO">
                    <block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_simplified_dropdown">
                      <title name="TIMES" config="3-10">6</title>
                      <statement name="DO">
                        <block type="collector_collect"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge2a:
        courseB_collector_loops_challenge2a_a: Ak sa niečo nepodarí, tak to vyskúšaj
          odladiť. Nevzdávaj sa!
        courseB_collector_loops_challenge2a_b: Pozri sa na túto možnosť ako sa dostať
          cez labyrint. Vidíš vzor, ktorý môžeš opakovať?
        courseB_collector_loops_challenge2a_c: Aby si pozbieral všetky drahokamy,
          tak potrebuješ buď pridať dva bloky  <xml> <block type="collector_collect"/></xml>
          do tvojho cyklu, alebo vložiť takýto blok do vlastného bloku `opakuj`.
      courseB_collector_loops_challenge2a_2018:
        courseB_collector_loops_challenge2a_a: Ak sa niečo nepodarí, tak to vyskúšaj
          odladiť. Nevzdávaj sa!
        courseB_collector_loops_challenge2a_b: Pozri sa na túto možnosť ako sa dostať
          cez labyrint. Vidíš vzor, ktorý môžeš opakovať?
        courseB_collector_loops_challenge2a_c: Aby si pozbieral všetky drahokamy,
          tak potrebuješ buď pridať dva bloky  <xml> <block type="collector_collect"/></xml>
          do tvojho cyklu, alebo vložiť takýto blok do vlastného bloku `opakuj`.
      courseB_collector_loops_challenge2a_2019:
        courseB_collector_loops_challenge2a_a: Ak sa niečo nepodarí, tak to vyskúšaj
          odladiť. Nevzdávaj sa!
        courseB_collector_loops_challenge2a_b: Pozri sa na túto možnosť ako sa dostať
          cez labyrint. Vidíš vzor, ktorý môžeš opakovať?
        courseB_collector_loops_challenge2a_c: Aby si pozbieral všetky drahokamy,
          tak potrebuješ buď pridať dva bloky  <xml> <block type="collector_collect"/></xml>
          do tvojho cyklu, alebo vložiť takýto blok do vlastného bloku `opakuj`.
      courseB_iceage_loops1:
        courseB_iceage_loops1_a: Dávaj si pozor na rozbitý ľad! Skrat sa cezeň prepadne!
        courseB_iceage_loops1_b: "Budeš musieť použiť tento blok: \n\n<xml><block
          type=\"maze_moveEast\"/></xml>"
      courseB_iceage_loops10:
        courseB_iceage_loops10_a: Dávaj pozor na rozbitý ľad! Scrat sa cezeň prepadne
          do vody!
        courseB_iceage_loops10_b: Skús si povedať kroky nahlas, alebo si ich napísať
          na papier. Vidíš v nich nejaký vzor?
        courseB_iceage_loops10_c: Toto je dlhá úloha! Choď po tejto ceste.
      courseB_iceage_loops10_2019:
        courseB_iceage_loops10_a: Dávaj pozor na rozbitý ľad! Scrat sa cezeň prepadne
          do vody!
        courseB_iceage_loops10_b: Skús si povedať kroky nahlas, alebo si ich napísať
          na papier. Vidíš v nich nejaký vzor?
        courseB_iceage_loops10_c: Toto je dlhá úloha! Choď po tejto ceste.
      courseB_iceage_loops1_2019:
        courseB_iceage_loops1_a: Dávaj si pozor na rozbitý ľad! Skrat sa cezeň prepadne!
        courseB_iceage_loops1_b: "Budeš musieť použiť tento blok: \n\n<xml><block
          type=\"maze_moveEast\"/></xml>"
      courseB_iceage_loops2:
        courseB_iceage_loops2_a: Rozdeľ túto úlohu na dve časti, jednu pred zákrutou
          a druhú po zákrute.
        courseB_iceage_loops2_b: Ak sa zasekneš, skús si povedať všetky kroky nahlas.
        courseB_iceage_loops2_c: Choď po tejto ceste, aby si dostal Scrata k žaluďu.
      courseB_iceage_loops2_2019:
        courseB_iceage_loops2_a: Rozdeľ túto úlohu na dve časti, jednu pred zákrutou
          a druhú po zákrute.
        courseB_iceage_loops2_b: Ak sa zasekneš, skús si povedať všetky kroky nahlas.
        courseB_iceage_loops2_c: Choď po tejto ceste, aby si dostal Scrata k žaluďu.
      courseB_iceage_loops3:
        courseB_iceage_loops3_a: |-
          Použi tento nový blok! <xml><block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="3-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: |-
          Na opakovanie kódu vytiahni cyklus `opakuj`,

          <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>

          a potom vlož dovnútra blok, ktorý chceš.
      courseB_iceage_loops3_2019:
        courseB_iceage_loops3_a: |-
          Použi tento nový blok!
          <xml><block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="3-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: |-
          Na opakovanie kódu vytiahni cyklus `opakuj` <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>, a potom vlož dovnútra blok, ktorý chceš.
      courseB_iceage_loops4:
        courseB_iceage_loops4_a: Skús si zapísať kroky, ktoré musí Scrat spraviť,
          aby sa dostal k žaluďu. Nájdeš v nich opakujúci sa vzor?
        courseB_iceage_loops4_b: Neboj sa spustiť tvoj kód a uvidíš, čo sa stane!
        courseB_iceage_loops4_c: Toto je cesta, po ktorej by mal ísť Scrat.
      courseB_iceage_loops4_2019:
        courseB_iceage_loops4_a: Skús si zapísať kroky, ktoré musí Scrat spraviť,
          aby sa dostal k žaluďu. Nájdeš v nich opakujúci sa vzor?
        courseB_iceage_loops4_b: Neboj sa spustiť tvoj kód a uvidíš, čo sa stane!
        courseB_iceage_loops4_c: Toto je cesta, po ktorej by mal ísť Scrat.
      courseB_iceage_loops6:
        courseB_iceage_loops6_a: Tvoj výsledný kód bude mať **tri** pohybové bloky.
        courseB_iceage_loops6_b: Potrebuješ pridať už iba **jeden** cyklus!
        courseB_iceage_loops6_c: Tvoja výsledná cesta by mala vyzerať takto.
      courseB_iceage_loops6_2019:
        courseB_iceage_loops6_a: Tvoj výsledný kód bude mať **tri** pohybové bloky.
        courseB_iceage_loops6_b: Potrebuješ pridať už iba **jeden** cyklus!
        courseB_iceage_loops6_c: Tvoja výsledná cesta by mala vyzerať takto.
      courseB_iceage_loops7:
        courseB_iceage_loops7_a: Ak sa zasekneš, skús si zapísať kroky na papier.
          Vidíš v nich vzor?
        courseB_iceage_loops7_b: Scrat by mal ísť touto cestou, aby sa dostal k žaluďu.
      courseB_iceage_loops7_2019:
        courseB_iceage_loops7_a: Ak sa zasekneš, skús si zapísať kroky na papier.
          Vidíš v nich vzor?
        courseB_iceage_loops7_b: Scrat by mal ísť touto cestou, aby sa dostal k žaluďu.
      courseB_iceage_loops8:
        courseB_iceage_loops8_a: Sú pohybové bloky správne? Čo iné môžeš zmeniť?
        courseB_iceage_loops8_b: Prvý cyklus by sa mal opakovať **3** krát, druhý
          by sa mal opakovať **5** krát, tretí by sa mal opakovať **4** krát a posledný
          cyklus by sa mal opakovať **4** krát.
        courseB_iceage_loops8_c: Použi cykly, aby si pomohol Scratovi prejsť po tejto
          ceste.
      courseB_iceage_loops8_2019:
        courseB_iceage_loops8_a: Sú pohybové bloky správne? Čo iné môžeš zmeniť?
        courseB_iceage_loops8_b: Prvý cyklus by sa mal opakovať **3** krát, druhý
          by sa mal opakovať **5** krát, tretí by sa mal opakovať **4** krát a posledný
          cyklus by sa mal opakovať **4** krát.
        courseB_iceage_loops8_c: Použi cykly, aby si pomohol Scratovi prejsť po tejto
          ceste.
      courseB_iceage_loops9:
        courseB_iceage_loops9_a: Máš problém? Skús si úlohu rozdeliť na menšie časti.
          Neboj sa spustiť tvoj kód aj počas toho ako programuješ!
        courseB_iceage_loops9_b: Tvoj výsledný kód by mal mať **4** cykly.
        courseB_iceage_loops9_c: Scrat by mal ísť po tejto ceste, aby sa dostal k
          žaluďu.
      courseB_iceage_loops9_2019:
        courseB_iceage_loops9_a: Máš problém? Skús si úlohu rozdeliť na menšie časti.
          Neboj sa spustiť tvoj kód aj počas toho ako programuješ!
        courseB_iceage_loops9_b: Tvoj výsledný kód by mal mať **4** cykly.
        courseB_iceage_loops9_c: Scrat by mal ísť po tejto ceste, aby sa dostal k
          žaluďu.
      courseB_maze_seq1:
        courseB_maze_seq1_a: Connect blocks to the <xml><block type="when_run"/></xml>
          block to make the bird move!
        courseB_maze_seq1_b: Vytiahni tri takéto šípky <xml><block type="maze_moveSouth"/></xml>
          a pripoj ich ku bloku <xml><block type="when_run"/></xml>, aby sa tvoj vták
          dostal k prasiatku.
      courseB_maze_seq10:
        courseB_maze_seq10_a: Try writing down the steps on a piece of paper first.
        courseB_maze_seq10_b: You will need to move in two different directions to
          reach the pig.
      courseB_maze_seq11:
        courseB_maze_seq11_a: Try writing down the steps on a piece of paper first.
        courseB_maze_seq11_b: 'Solve the puzzle in two parts: one before the corner
          and one after the corner.'
      courseB_maze_seq1_2018:
        courseB_maze_seq1_a: Pripoj bloky ku bloku <xml><block type="when_run"/></xml>,
          aby sa Scrat pohol!
        courseB_maze_seq1_b: Vytiahni tri takéto šípky <xml><block type="maze_moveSouth"/></xml>
          a pripoj ich ku bloku <xml><block type="when_run"/></xml>, aby sa Scrat
          dostal k žaluďu.
      courseB_maze_seq1_2019:
        courseB_maze_seq1_a: Pripoj bloky ku bloku <xml><block type="when_run"/></xml>,
          aby sa Scrat pohol!
        courseB_maze_seq1_b: Vytiahni tri takéto šípky <xml><block type="maze_moveSouth"/></xml>
          a pripoj ich ku bloku <xml><block type="when_run"/></xml>, aby sa Scrat
          dostal k žaluďu.
      courseB_maze_seq2:
        courseB_maze_seq2_a: This program is missing one block. Can you figure out
          which one?
        courseB_maze_seq2_b: Try running the code you are given to see what the bird
          needs to do next.
      courseB_maze_seq3:
        courseB_maze_seq3_a: One of the blocks is moving the bird in the wrong direction.
          Can you figure out which one and replace it with the correct block?
        courseB_maze_seq3_b: Try using the step button to find where the program goes
          wrong. Is it the first step? The second?
        courseB_maze_seq3_c: The <xml><block type="maze_moveWest"/></xml> block doesn't
          seem to be moving the bird in the right direction.
      courseB_maze_seq4:
        courseB_maze_seq4_a: Skús pridávať inštrukcie po jednej, až kým ma nedostaneš
          k prasiatku.
        courseB_maze_seq4_b: Budeš chcieť použiť blok <xml><block type="maze_moveEast"/></xml>,
          aby si vyriešil túto úlohu.
      courseB_maze_seq4_2018:
        courseB_maze_seq4_a: Vyskúšaj pridávat postupne po jednej inštrukcii, až kým
          sa nedostaneš k žaluďu.
        courseB_maze_seq4_b: Budeš chcieť použiť blok <xml><block type="maze_moveEast"/></xml>,
          aby si vyriešil túto úlohu.
      courseB_maze_seq4_2019:
        courseB_maze_seq4_a: Vyskúšaj pridávat postupne po jednej inštrukcii, až kým
          sa nedostaneš k žaluďu.
        courseB_maze_seq4_b: Budeš chcieť použiť blok <xml><block type="maze_moveEast"/></xml>,
          aby si vyriešil túto úlohu.
      courseB_maze_seq5:
        courseB_maze_seq5_a: Ak si sa zasekol, tak si skús zakresliť cestu na papier.
        courseB_maze_seq5_b: Sú 2 možnosti ako vyriešiť túto úlohu!
        courseB_maze_seq5_c: Not sure how to get to the pig?  Try this path.
      courseB_maze_seq5_2018:
        courseB_maze_seq5_a: Ak si sa zasekol, tak si skús zakresliť cestu na papier.
        courseB_maze_seq5_b: Sú 2 možnosti ako vyriešiť túto úlohu!
        courseB_maze_seq5_c: Nevieš, ako sa dostať k žaluďu? Skús túto cestu.
      courseB_maze_seq5_2019:
        courseB_maze_seq5_a: Ak si sa zasekol, tak si skús zakresliť cestu na papier.
        courseB_maze_seq5_b: Sú 2 možnosti ako vyriešiť túto úlohu!
        courseB_maze_seq5_c: Nevieš, ako sa dostať k žaluďu? Skús túto cestu.
      courseB_maze_seq6:
        courseB_maze_seq6_a: Tvoj výsledný kód by mal mať tri pohybové bloky.
        courseB_maze_seq6_b: Ak nevieš ako ďalej, tak skús rozdeliť úlohu na dve časti,
          jednu ako pohyb do strany a jednu hore-dole.
        courseB_maze_seq5_c: Sú dve možnosti ako vyriešiť túto úlohu.
        courseB_maze_seq5_d: Not sure how to get to the pig? Try this path!
      courseB_maze_seq6_2018:
        courseB_maze_seq6_a: Tvoj výsledný kód by mal mať tri pohybové bloky.
        courseB_maze_seq6_b: Ak nevieš ako ďalej, tak skús rozdeliť úlohu na dve časti,
          jednu ako pohyb do strany a jednu hore-dole.
        courseB_maze_seq5_c: Sú dve možnosti ako vyriešiť túto úlohu.
        courseB_maze_seq5_d: Nevieš, ako sa dostať k žaluďu? Skús túto cestu!
      courseB_maze_seq6_2019:
        courseB_maze_seq6_a: Tvoj výsledný kód by mal mať tri pohybové bloky.
        courseB_maze_seq6_b: Ak nevieš ako ďalej, tak skús rozdeliť úlohu na dve časti,
          jednu ako pohyb do strany a jednu hore-dole.
        courseB_maze_seq5_c: Sú dve možnosti ako vyriešiť túto úlohu.
        courseB_maze_seq5_d: Nevieš, ako sa dostať k žaluďu? Skús túto cestu!
      courseB_maze_seq7:
        courseB_maze_seq7_a: Add 1 block to move the bird to the pig.
        courseB_maze_seq7_b: Skús spustiť daný kód a uvidíš, kde skončíš.
        courseB_maze_seq7_c: Can't get to the pig?  Try this path!
      courseB_maze_seq7_2018:
        courseB_maze_seq7_a: Pridaj 1 blok, aby Scrat prišiel k žaluďu.
        courseB_maze_seq7_b: Skús spustiť daný kód a uvidíš, kde skončíš.
        courseB_maze_seq7_c: Nevieš sa dostať k žaluďu? Skús túto cestu!
      courseB_maze_seq7_2019:
        courseB_maze_seq7_a: Pridaj 1 blok, aby Scrat prišiel k žaluďu.
        courseB_maze_seq7_b: Skús spustiť daný kód a uvidíš, kde skončíš.
        courseB_maze_seq7_c: Nevieš sa dostať k žaluďu? Skús túto cestu!
      courseB_maze_seq8:
        courseB_maze_seq8_a: Vyskúšaj pridávať bloky po jednom dovtedy, kým nevyriešiš
          túto úlohu.
        courseB_maze_seq8_b: Sú dve možnosti ako vyriešiť túto úlohu!
        courseB_maze_seq8_c: Nevieš kadiaľ ísť? Skús túto cestu!
      courseB_maze_seq8_2018:
        courseB_maze_seq8_a: Vyskúšaj pridávať bloky po jednom dovtedy, kým nevyriešiš
          túto úlohu.
        courseB_maze_seq8_b: Je viac ako jedna možnosť ako vyriešiť túto úlohu!
        courseB_maze_seq8_c: Nevieš kadiaľ ísť? Skús túto cestu!
      courseB_maze_seq8_2019:
        courseB_maze_seq8_a: Vyskúšaj pridávať bloky po jednom dovtedy, kým nevyriešiš
          túto úlohu.
        courseB_maze_seq8_b: Je viac ako jedna možnosť ako vyriešiť túto úlohu!
        courseB_maze_seq8_c: Nevieš kadiaľ ísť? Skús túto cestu!
      courseB_maze_seq9:
        courseB_maze_seq9_a: Skús si najskôr zapísať všetky kroky na papier.
        courseB_maze_seq9_b: Pridávaj k svoju programu len po jednom bloku a stále
          testuj, čo si dovtedy vybudoval.
        courseB_maze_seq9_c: Sú dve možnosti ako vyriešiť túto úlohu.
        courseB_maze_seq9_d: Nedarí sa? Vyskúšaj túto cestu!
      courseB_maze_seq9_2018:
        courseB_maze_seq9_a: Skús si najskôr zapísať všetky kroky na papier.
        courseB_maze_seq9_b: Pridávaj k svoju programu len po jednom bloku a stále
          testuj, čo si dovtedy vybudoval.
        courseB_maze_seq9_c: Sú dve možnosti ako vyriešiť túto úlohu.
        courseB_maze_seq9_d: Nedarí sa? Vyskúšaj túto cestu!
      courseB_maze_seq9_2019:
        courseB_maze_seq9_a: Skús si najskôr zapísať všetky kroky na papier.
        courseB_maze_seq9_b: Pridávaj k svoju programu len po jednom bloku a stále
          testuj, čo si dovtedy vybudoval.
        courseB_maze_seq9_c: Sú dve možnosti ako vyriešiť túto úlohu.
        courseB_maze_seq9_d: Nedarí sa? Vyskúšaj túto cestu!
      courseB_maze_seq_challenge1:
        courseB_maze_seq_challenge1_a: Tentokrát nemusí fungovať najkratšia cesta.
        courseB_maze_seq_challenge1_b: Vyskúšaj na začiatku použiť blok <xml><block
          type="maze_moveWest"/></xml>.
      courseB_maze_seq_challenge1_2018:
        courseB_maze_seq_challenge1_a: Tentokrát nemusí fungovať najkratšia cesta.
        courseB_maze_seq_challenge1_b: Vyskúšaj na začiatku použiť blok <xml><block
          type="maze_moveWest"/></xml>.
      courseB_maze_seq_challenge1_2019:
        courseB_maze_seq_challenge1_a: Tentokrát nemusí fungovať najkratšia cesta.
        courseB_maze_seq_challenge1_b: Vyskúšaj na začiatku použiť blok <xml><block
          type="maze_moveWest"/></xml>.
      courseB_maze_seq_challenge2:
        courseB_maze_seq_challenge2_a: Na vyriešenie tejto úlohy nepotrebuješ pridávať
          ani odstraňovať žiadne bloky.
        courseB_maze_seq_challenge2_b: Poprehadzuj bloky a choď cestou po vzore schodiska.
      courseB_maze_seq_challenge2_2018:
        courseB_maze_seq_challenge2_a: Na vyriešenie tejto úlohy nepotrebuješ pridávať
          ani odstraňovať žiadne bloky.
        courseB_maze_seq_challenge2_b: Poprehadzuj bloky a choď cestou po vzore schodiska.
      courseB_maze_seq_challenge2_2019:
        courseB_maze_seq_challenge2_a: Na vyriešenie tejto úlohy nepotrebuješ pridávať
          ani odstraňovať žiadne bloky.
        courseB_maze_seq_challenge2_b: Poprehadzuj bloky a choď cestou po vzore schodiska.
      courseB_playlab_events2:
        courseB_playlab_events2_a: |-
          Toto je blok, ktorý prikáže Daisy niečo povedať:

           <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Ahoj!</title>
          </block>
          </xml>
      courseB_playlab_events2_2018:
        courseB_playlab_events2_a: |-
          Toto je blok, ktorý prikáže Daisy niečo povedať:

           <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Ahoj!</title>
          </block>
          </xml>
      courseB_playlab_events2_2019:
        courseB_playlab_events2_a: |-
          Toto je blok, ktorý prikáže Daisy niečo povedať:

           <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Ahoj!</title>
          </block>
          </xml>
      courseB_playlab_events3:
        courseB_playlab_events3_a: |-
          Toto je blok, ktorý môžeš použiť na pridanie udalosti:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Toto je blok, ktorý potrebuješ na zmenenie nálady Daisy:

          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events3_2018:
        courseB_playlab_events3_a: |-
          Toto je blok, ktorý môžeš použiť na pridanie udalosti:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Toto je blok, ktorý potrebuješ na zmenenie nálady Daisy:

          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events3_2019:
        courseB_playlab_events3_a: |-
          Toto je blok, ktorý môžeš použiť na pridanie udalosti:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Toto je blok, ktorý potrebuješ na zmenenie nálady Daisy:

          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events4:
        courseB_playlab_events4_a: |-
          Toto je udalosť, ktorá kontroluje ľavú šípku:

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Toto je blok, ktorý posúva draka vľavo:

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2018:
        courseB_playlab_events4_a: |-
          Toto je udalosť, ktorá kontroluje ľavú šípku:

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Toto je blok, ktorý posúva draka vľavo:

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2019:
        courseB_playlab_events4_a: |-
          Toto je udalosť, ktorá kontroluje ľavú šípku:

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Toto je blok, ktorý posúva draka vľavo:

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events5:
        courseB_playlab_events5_a: |-
          Toto je udalosť, ktorá ovláda pravú šípku:

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          </block>
          </xml>
        courseB_playlab_events5_b: |-
          Toto je blok, ktorým rytier utečie preč.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block>
          </xml>
      courseB_playlab_events5_2018:
        courseB_playlab_events5_a: |-
          Toto je udalosť, ktorá ovláda pravú šípku:

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          </block>
          </xml>
        courseB_playlab_events5_b: |-
          Toto je blok, ktorým rytier utečie preč.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block>
          </xml>
      courseB_playlab_events5_2019:
        courseB_playlab_events5_a: |-
          Toto je udalosť, ktorá ovláda pravú šípku:

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          </block>
          </xml>
        courseB_playlab_events5_b: |-
          Toto je blok, ktorým rytier utečie preč.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block>
          </xml>
      courseB_playlab_events6:
        courseB_playlab_events6_a: |-
          Potrebuješ tieto bloky udalostí:

          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Použi vyrolovaciu ponuku šípok na zelených blokoch udalostí `keď je stlačená šípka ___`, aby si vybral rôzne smery.

           ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Získaj všetky vlajky, aby si splnil úlohu!
      courseB_playlab_events6_2018:
        courseB_playlab_events6_a: |-
          Potrebuješ tieto bloky udalostí:

          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Použi vyrolovaciu ponuku šípok na zelených blokoch udalostí `keď je stlačená šípka ___`, aby si vybral rôzne smery.

           ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Získaj všetky vlajky, aby si splnil úlohu!
      courseB_playlab_events6_2019:
        courseB_playlab_events6_a: |-
          Potrebuješ tieto bloky udalostí:

          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Použi vyrolovaciu ponuku šípok na zelených blokoch udalostí `keď je stlačená šípka ___`, aby si vybral rôzne smery.

           ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Získaj všetky vlajky, aby si splnil úlohu!
      courseB_playlab_events7:
        courseB_playlab_events7_a: |-
          Toto je blok udalosti, ktorý budeš potrebovať:

          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Toto je blok, ktorý potrebuješ na prehratie zvuku.

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Tento blok potrebuješ, aby rytier zmizol:

          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2018:
        courseB_playlab_events7_a: |-
          Toto je blok udalosti, ktorý budeš potrebovať:

          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Toto je blok, ktorý potrebuješ na prehratie zvuku.

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Tento blok potrebuješ, aby rytier zmizol:

          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2019:
        courseB_playlab_events7_a: |-
          Toto je blok udalosti, ktorý budeš potrebovať:

          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Toto je blok, ktorý potrebuješ na prehratie zvuku.

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Tento blok potrebuješ, aby rytier zmizol:

          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events_challenge1:
        courseB_playlab_events_challenge1_a: "Prikáž ostatným zviaratám hýbať sa dole,
          keď stlačíš `▼`. \n\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n
          \   <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Zmeň rýchlosť zvierat pomocou tohto bloku:

          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          Čo povie každý z nich, keď dokončí preteky? Prikáž im rozprávať s touto udalosťou:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2018:
        courseB_playlab_events_challenge1_a: "Prikáž ostatným zviaratám hýbať sa dole,
          keď stlačíš `▼`. \n\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n
          \   <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Zmeň rýchlosť zvierat pomocou tohto bloku:

          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          Čo povie každý z nich, keď dokončí preteky? Prikáž im rozprávať s touto udalosťou:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2019:
        courseB_playlab_events_challenge1_a: "Prikáž ostatným zviaratám hýbať sa dole,
          keď stlačíš `▼`. \n\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n
          \   <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Zmeň rýchlosť zvierat pomocou tohto bloku:

          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          Čo povie každý z nich, keď dokončí preteky? Prikáž im rozprávať s touto udalosťou:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge2:
        courseB_playlab_events_challenge2_a: Každé zviera v hre by malo zmiznuť, keď
          naň klikneš. A malo by sa znovu vrátiť po jednej alebo dvoch sekundách!
        courseB_playlab_events_challenge2_b: |-
          Použi ďalšie bloky udalostí, aby si nechal zmiznuť ďalšie zvieratá!

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Použi extra príkazy na prehratie zvukov alebo pripočítanie bodov vždy, keď klikneš na zvieratá!

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Pomiešaj to!

          Daj za niektoré zvieratá viac bodov ako za iné.
          Použi rôzne zvuky.
          Zmeň nálady zvierat!
      courseB_playlab_events_challenge2_2018:
        courseB_playlab_events_challenge2_a: Každé zviera v hre by malo zmiznuť, keď
          naň klikneš. A malo by sa znovu vrátiť po jednej alebo dvoch sekundách!
        courseB_playlab_events_challenge2_b: |-
          Použi ďalšie bloky udalostí, aby si nechal zmiznuť ďalšie zvieratá!

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Použi extra príkazy na prehratie zvukov alebo pripočítanie bodov vždy, keď klikneš na zvieratá!

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Pomiešaj to!

          Daj za niektoré zvieratá viac bodov ako za iné.
          Použi rôzne zvuky.
          Zmeň nálady zvierat!
      courseB_playlab_events_challenge2_2019:
        courseB_playlab_events_challenge2_a: Každé zviera v hre by malo zmiznuť, keď
          naň klikneš. A malo by sa znovu vrátiť po jednej alebo dvoch sekundách!
        courseB_playlab_events_challenge2_b: |-
          Použi ďalšie bloky udalostí, aby si nechal zmiznuť ďalšie zvieratá!

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Použi extra príkazy na prehratie zvukov alebo pripočítanie bodov vždy, keď klikneš na zvieratá!

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Pomiešaj to!

          Daj za niektoré zvieratá viac bodov ako za iné.
          Použi rôzne zvuky.
          Zmeň nálady zvierat!
      courseB_starWars_prog1:
        courseB_starWars_prog1_a: Skús pridávať bloky po jednom, a potom klikni "Spustiť",
          aby si videl, čo sa stane.
        courseB_starWars_prog1_b: |-
          Budeš sa pohybovať na východ, aby si vyriešil túto úlohu. Ako ďaleko potrebuješ ísť?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2018:
        courseB_starWars_prog1_a: Skús pridávať bloky po jednom, a potom klikni "Spustiť",
          aby si videl, čo sa stane.
        courseB_starWars_prog1_b: |-
          Budeš sa pohybovať na východ, aby si vyriešil túto úlohu. Ako ďaleko potrebuješ ísť?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2019:
        courseB_starWars_prog1_a: Skús pridávať bloky po jednom, a potom klikni "Spustiť",
          aby si videl, čo sa stane.
        courseB_starWars_prog1_b: |-
          Budeš sa pohybovať na východ, aby si vyriešil túto úlohu. Ako ďaleko potrebuješ ísť?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog2:
        courseB_starWars_prog2_a: Rozdeľ tento problém na dve časti. Najskôr vezmi
          jednu hromadu šrotu, potom príď na to, ako sa dostať k druhej.
      courseB_starWars_prog2_2018:
        courseB_starWars_prog2_a: Rozdeľ tento problém na dve časti. Najskôr vezmi
          jednu hromadu šrotu, potom príď na to, ako sa dostať k druhej.
      courseB_starWars_prog2_2019:
        courseB_starWars_prog2_a: Rozdeľ tento problém na dve časti. Najskôr vezmi
          jednu hromadu šrotu, potom príď na to, ako sa dostať k druhej.
      courseB_starWars_prog3:
        courseB_starWars_prog3_a: Na vyriešenie tejto úlohy sa potrebuješ pohnúť tromi
          smermi.
        courseB_starWars_prog3_b: Buduj vždy len jeden kus kódu. Spusti ho, aby si
          zistil ako ísť ďalej.
      courseB_starWars_prog3_2018:
        courseB_starWars_prog3_a: Na vyriešenie tejto úlohy sa potrebuješ pohnúť tromi
          smermi.
        courseB_starWars_prog3_b: Buduj vždy len jeden kus kódu. Spusti ho, aby si
          zistil ako ísť ďalej.
      courseB_starWars_prog3_2019:
        courseB_starWars_prog3_a: Na vyriešenie tejto úlohy sa potrebuješ pohnúť tromi
          smermi.
        courseB_starWars_prog3_b: Buduj vždy len jeden kus kódu. Spusti ho, aby si
          zistil ako ísť ďalej.
      courseB_starWars_prog4:
        courseB_starWars_prog4_a: Buduj vždy len jeden kus kódu. Spusti ho, aby si
          zistil ako ísť ďalej.
        courseB_starWars_prog4_b: |-
          Pre skrátenie kódu vyskúšaj blok `opakuj`.

          <xml> <block type="controls_repeat_simplified"> <title name="TIMES">3</title> </block> </xml>
      courseB_starWars_prog4_2018:
        courseB_starWars_prog4_a: Buduj vždy len jeden kus kódu. Spusti ho, aby si
          zistil ako ísť ďalej.
        courseB_starWars_prog4_b: |-
          Pre skrátenie kódu vyskúšaj blok `opakuj`.

          <xml> <block type="controls_repeat_simplified"> <title name="TIMES">3</title> </block> </xml>
      courseB_starWars_prog4_2019:
        courseB_starWars_prog4_a: Buduj vždy len jeden kus kódu. Spusti ho, aby si
          zistil ako ísť ďalej.
        courseB_starWars_prog4_b: |-
          Pre skrátenie kódu vyskúšaj blok `opakuj`.

          <xml> <block type="controls_repeat_simplified"> <title name="TIMES">3</title> </block> </xml>
      courseB_starWars_prog5:
        courseB_starWars_prog5_a: Nepodobá sa tento vzor na predošlú úlohu?
        courseB_starWars_prog5_b: BB-8 pozbiera kovový šrot vždy, keď sa cezeň pregúľa.
        courseB_starWars_prog5_c: Sleduj tento vzor so svojim prstom. Počas pohybu
          spočítaj kusy šrotu.
        courseB_starWars_prog5_da: |-
          Pozri, čo sa stane, ak použiješ to isté riešenie ako v úlohe so schodami:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2018:
        courseB_starWars_prog5_a: Nepodobá sa tento vzor na predošlú úlohu?
        courseB_starWars_prog5_b: BB-8 pozbiera kovový šrot vždy, keď sa cezeň pregúľa.
        courseB_starWars_prog5_c: Sleduj tento vzor so svojim prstom. Počas pohybu
          spočítaj kusy šrotu.
        courseB_starWars_prog5_da: |-
          Pozri, čo sa stane, ak použiješ to isté riešenie ako v úlohe so schodami:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2019:
        courseB_starWars_prog5_a: Nepodobá sa tento vzor na predošlú úlohu?
        courseB_starWars_prog5_b: BB-8 pozbiera kovový šrot vždy, keď sa cezeň pregúľa.
        courseB_starWars_prog5_c: Sleduj tento vzor so svojim prstom. Počas pohybu
          spočítaj kusy šrotu.
        courseB_starWars_prog5_da: |-
          Pozri, čo sa stane, ak použiješ to isté riešenie ako v úlohe so schodami:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog6:
        courseB_starWars_prog6_a: Tento vzor je ako kráčanie po schodoch s dvomi krokmi
          na každom schode!
        courseB_starWars_prog6_b: |-
          Pre skrátenie kódu vyskúšaj blok `opakuj`.

          <xml> <block type="controls_repeat_simplified"> <title name="TIMES">3</title> </block> </xml>
      courseB_starWars_prog6_2018:
        courseB_starWars_prog6_a: Tento vzor je ako kráčanie po schodoch s dvomi krokmi
          na každom schode!
        courseB_starWars_prog6_b: |-
          Pre skrátenie kódu vyskúšaj blok `opakuj`.

          <xml> <block type="controls_repeat_simplified"> <title name="TIMES">3</title> </block> </xml>
      courseB_starWars_prog6_2019:
        courseB_starWars_prog6_a: Tento vzor je ako kráčanie po schodoch s dvomi krokmi
          na každom schode!
        courseB_starWars_prog6_b: |-
          Pre skrátenie kódu vyskúšaj blok `opakuj`.

          <xml> <block type="controls_repeat_simplified"> <title name="TIMES">3</title> </block> </xml>
      courseB_starWars_prog7:
        courseB_starWars_prog7_a: Nepodobá sa tento vzor na predošlú úlohu?
        courseB_starWars_prog7_b: BB-8 pozbiera kovový šrot vždy, keď sa cezeň pregúľa.
        courseB_starWars_prog7_c: Pokús sa nakresliť cez túto úlohu vzor veľkého schodu.
          Pokryje to všetky kusy kovu?
      courseB_starWars_prog7_2018:
        courseB_starWars_prog7_a: Nepodobá sa tento vzor na predošlú úlohu?
        courseB_starWars_prog7_b: BB-8 pozbiera kovový šrot vždy, keď sa cezeň pregúľa.
        courseB_starWars_prog7_c: Pokús sa nakresliť cez túto úlohu vzor veľkého schodu.
          Pokryje to všetky kusy kovu?
      courseB_starWars_prog7_2019:
        courseB_starWars_prog7_a: Nepodobá sa tento vzor na predošlú úlohu?
        courseB_starWars_prog7_b: BB-8 pozbiera kovový šrot vždy, keď sa cezeň pregúľa.
        courseB_starWars_prog7_c: Pokús sa nakresliť cez túto úlohu vzor veľkého schodu.
          Pokryje to všetky kusy kovu?
      courseB_starWars_prog8:
        courseB_starWars_prog8_a: Je v poriadku, ak niekedy pôjdeš naspäť aj po prázdnych
          miestach, cez ktoré si už prešiel.
        courseB_starWars_prog8_b: |-
          Skús použiť blok `opakuj` a uvidíš, čo sa stane kódu, ktorý vložíš dovnútra.

          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog8_2018:
        courseB_starWars_prog8_a: Je v poriadku, ak niekedy pôjdeš naspäť aj po prázdnych
          miestach, cez ktoré si už prešiel.
        courseB_starWars_prog8_b: |-
          Skús použiť blok `opakuj` a uvidíš, čo sa stane kódu, ktorý vložíš dovnútra.

          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog8_2019:
        courseB_starWars_prog8_a: Je v poriadku, ak niekedy pôjdeš naspäť aj po prázdnych
          miestach, cez ktoré si už prešiel.
        courseB_starWars_prog8_b: |-
          Skús použiť blok `opakuj` a uvidíš, čo sa stane kódu, ktorý vložíš dovnútra.

          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog9:
        courseB_starWars_prog9_a: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseB_starWars_prog9_b: Je veľa spôsobov ako vyriešiť túto úlohu.
        courseB_starWars_prog9_c: Pomohol by tu cyklus `opakuj`?
      courseB_starWars_prog9_2018:
        courseB_starWars_prog9_a: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseB_starWars_prog9_b: Je veľa spôsobov ako vyriešiť túto úlohu.
        courseB_starWars_prog9_c: Pomohol by tu cyklus <xml><block type="controls_repeat_simplified">
          <title name="TIMES">3</title> </block></xml>?
      courseB_starWars_prog9_2019:
        courseB_starWars_prog9_a: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseB_starWars_prog9_b: Je veľa spôsobov ako vyriešiť túto úlohu.
        courseB_starWars_prog9_c: Pomohol by tu cyklus <xml><block type="controls_repeat_simplified">
          <title name="TIMES">3</title> </block></xml>?
      courseC19_playLab_EOC1:
        courseE_playLab_scaffold1_a: The `set actor 1 to ??? image` block can be used
          to add an actor to the stage.
        courseE_playLab_scaffold1_b: Put the `set actor` block under `when run` to
          make your actor appear at the beginning of the program.
        courseE_playLab_scaffold1_c: Use `set ??? background` to choose a background
          for your scene.
      courseC19_playLab_EOC2:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow`
          event to change the direction the block controls.
        courseE_playLab_scaffold1_b: You should have four `when arrow` event blocks,
          with a direction to move underneath each.
        courseE_playLab_scaffold1_c: When you are done, you should be able to move
          your hero with the arrow keys!
      courseC19_playLab_EOC4:
        courseE_playLab_scaffold4_a: Use `score point` to add a point, and `remove
          point` to subtract one.
      courseC_PlayLab_events1:
        courseC_PlayLab_events1_a: |-
          Pripoj tento blok k bloku `pri spustení`:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2018:
        courseC_PlayLab_events1_a: |-
          Pripoj tento blok k bloku `pri spustení`:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2019:
        courseC_PlayLab_events1_a: |-
          Pripoj tento blok k bloku `pri spustení`:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events2:
        courseC_PlayLab_events2_a: |-
          Pripoj dva tieto bloky k bloku `pri spustení`:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Použi rozbaľovaciu ponuku pri druhom bloku `postava
          __ povedz`, aby si zmenil, ktorá postava prehovorí.
      courseC_PlayLab_events2_2018:
        courseC_PlayLab_events2_a: |-
          Pripoj dva tieto bloky k bloku `pri spustení`:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Použi rozbaľovaciu ponuku pri druhom bloku `postava
          __ povedz`, aby si zmenil, ktorá postava prehovorí.
      courseC_PlayLab_events2_2019:
        courseC_PlayLab_events2_a: |-
          Pripoj dva tieto bloky k bloku `pri spustení`:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Použi rozbaľovaciu ponuku pri druhom bloku `postava
          __ povedz`, aby si zmenil, ktorá postava prehovorí.
      courseC_PlayLab_events3:
        courseC_PlayLab_events3_a: Musíš len posunúť Jorgeho doprava o približne 25
          pixelov, aby si vyriešil túto úlohu.
        courseC_PlayLab_events3_b: Vidíš v paneli nástrojov blok, ktorý by mohol posunúť
          našu postavu?
        courseC_PlayLab_events3_c: |-
          Pripoj tento blok k bloku `pri spustení`:

          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events3_2018:
        courseC_PlayLab_events3_a: Musíš len posunúť Jorgeho doprava o približne 25
          pixelov, aby si vyriešil túto úlohu.
        courseC_PlayLab_events3_b: Vidíš v paneli nástrojov blok, ktorý by mohol posunúť
          našu postavu?
        courseC_PlayLab_events3_c: |-
          Pripoj tento blok k bloku `pri spustení`:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events3_2019:
        courseC_PlayLab_events3_a: Musíš len posunúť Jorgeho doprava o približne 25
          pixelov, aby si vyriešil túto úlohu.
        courseC_PlayLab_events3_b: Vidíš v paneli nástrojov blok, ktorý by mohol posunúť
          našu postavu?
        courseC_PlayLab_events3_c: |-
          Pripoj tento blok k bloku `pri spustení`:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events4:
        courseC_PlayLab_events4_b: Po kliknutí tlačidla "Spustiť" sa Jorge potrebuje
          presunúť do prava o **100** pixelov, aby sa dostal až k mačke Olive.
        courseC_PlayLab_events4_a: Na vyriešienie tejto úlohy, budeš musieť pripojiť
          blok `postava __ povedz` k udalosti `keď sa postava dotkne`.
      courseC_PlayLab_events4_2018:
        courseC_PlayLab_events4_b: Po kliknutí tlačidla "Spustiť" sa Jorge potrebuje
          presunúť do prava o **100** pixelov, aby sa dostal až k mačke Olive.
        courseC_PlayLab_events4_a: Na vyriešienie tejto úlohy, budeš musieť pripojiť
          blok `postava __ povedz` k udalosti `keď sa postava dotkne`.
      courseC_PlayLab_events4_2019:
        courseC_PlayLab_events4_b: Po kliknutí tlačidla "Spustiť" sa Jorge potrebuje
          presunúť do prava o **100** pixelov, aby sa dostal až k mačke Olive.
        courseC_PlayLab_events4_a: Na vyriešienie tejto úlohy, budeš musieť pripojiť
          blok `postava __ povedz` k udalosti `keď sa postava dotkne`.
      courseC_PlayLab_events5:
        courseC_PlayLab_events5_a: Budeš musieť klinúť na rozbaľovacie menu v bloku
          `posatava povedz`, aby si našiel text "Čo je nové?"
        courseC_PlayLab_events5_b: Klikni na Octaviu, keď spustíš svoj program, aby
          si zistil, či funguje!
      courseC_PlayLab_events5_2018:
        courseC_PlayLab_events5_a: Budeš musieť klinúť na rozbaľovacie menu v bloku
          `posatava povedz`, aby si našiel text "Čo je nové?"
        courseC_PlayLab_events5_b: Klikni na Octaviu, keď spustíš svoj program, aby
          si zistil, či funguje!
      courseC_PlayLab_events5_2019:
        courseC_PlayLab_events5_a: Budeš musieť klinúť na rozbaľovacie menu v bloku
          `posatava povedz`, aby si našiel text "Čo je nové?"
        courseC_PlayLab_events5_b: Klikni na Octaviu, keď spustíš svoj program, aby
          si zistil, či funguje!
      courseC_PlayLab_events6:
        courseC_PlayLab_events6_a: Každý zelený blok `keď šípka` má mať pod sebou
          jednu činnosť.
        courseC_PlayLab_events6_b: Použi rozbaľovacie menu v bloku `posuň postavu
          1`, aby si zmenil smer, ktorým sa Waddles hýbe.
        courseC_PlayLab_events6_c: Keď to dokončíš, malo by sa ti dať pohybovať Waddlesom
          pomocou šípok na klávesnici!
      courseC_PlayLab_events6_2018:
        courseC_PlayLab_events6_a: Každý zelený blok `keď šípka` má mať pod sebou
          jednu činnosť.
        courseC_PlayLab_events6_b: Použi rozbaľovacie menu v bloku `posuň postavu
          1`, aby si zmenil smer, ktorým sa Waddles hýbe.
        courseC_PlayLab_events6_c: Keď to dokončíš, malo by sa ti dať pohybovať Waddlesom
          pomocou šípok na klávesnici!
      courseC_PlayLab_events6_2019:
        courseC_PlayLab_events6_a: Každý zelený blok `keď šípka` má mať pod sebou
          jednu činnosť.
        courseC_PlayLab_events6_b: Použi rozbaľovacie menu v bloku `posuň postavu
          1`, aby si zmenil smer, ktorým sa Waddles hýbe.
        courseC_PlayLab_events6_c: Keď to dokončíš, malo by sa ti dať pohybovať Waddlesom
          pomocou šípok na klávesnici!
      courseC_PlayLab_events7:
        courseC_PlayLab_events7_a: 'Na vyriešenie tejto úlohy použi bloky `posuň postavu
          2 hore 400 pixelov` a `posuň postavu 2 dole 400 pixelov` vo vnútri cyklu
          `opakuj donekonečna`. '
        courseC_PlayLab_events7_b: Cyklus `opakuj donekonečna` nemusí byť spojený
          s inými blokmi udalostí; dokáže fungovať samostatne.
      courseC_PlayLab_events7_2018:
        courseC_PlayLab_events7_a: 'Na vyriešenie tejto úlohy použi bloky `posuň postavu
          2 hore 400 pixelov` a `posuň postavu 2 dole 400 pixelov` vo vnútri cyklu
          `opakuj donekonečna`. '
        courseC_PlayLab_events7_b: Cyklus `opakuj donekonečna` nemusí byť spojený
          s inými blokmi udalostí; dokáže fungovať samostatne.
      courseC_PlayLab_events7_2019:
        courseC_PlayLab_events7_a: 'Na vyriešenie tejto úlohy použi bloky `posuň postavu
          2 hore 400 pixelov` a `posuň postavu 2 dole 400 pixelov` vo vnútri cyklu
          `opakuj donekonečna`. '
        courseC_PlayLab_events7_b: Cyklus `opakuj donekonečna` nemusí byť spojený
          s inými blokmi udalostí; dokáže fungovať samostatne.
      courseC_PlayLab_events8:
        courseC_PlayLab_events8_a: Potrebuješ pripojiť bloky k bloky `keď sa postava
          dotkne`, aby všetko fungovalo správne.
        courseC_PlayLab_events8_b: Bloky `postava povedz` a `prehraj zvuk` v paneli
          s nástrojmi ti pomôžu!
      courseC_PlayLab_events8_2018:
        courseC_PlayLab_events8_a: Potrebuješ pripojiť bloky k bloky `keď sa postava
          dotkne`, aby všetko fungovalo správne.
        courseC_PlayLab_events8_b: Bloky `postava povedz` a `prehraj zvuk` v paneli
          s nástrojmi ti pomôžu!
      courseC_PlayLab_events8_2019:
        courseC_PlayLab_events8_a: Potrebuješ pripojiť bloky k bloky `keď sa postava
          dotkne`, aby všetko fungovalo správne.
        courseC_PlayLab_events8_b: Bloky `postava povedz` a `prehraj zvuk` v paneli
          s nástrojmi ti pomôžu!
      courseC_PlayLab_events9:
        courseC_PlayLab_events9_a: Použitie bloku `pridaj bod` ti pomôže vyriešiť
          túto úlohu.
        courseC_PlayLab_events9_b: Uisti sa, že tvoj nový blok `keď sa postava dotkne`
          má nastavené postavy **1** a **3**.
        courseC_PlayLab_events9_c: Blok `keď sa postava dotkne` môžeš na pracovnej
          ploche použiť viackrát naraz, takto ten prvý nemusíš odstrániť!
      courseC_PlayLab_events9_2018:
        courseC_PlayLab_events9_a: Použitie bloku `pridaj bod` ti pomôže vyriešiť
          túto úlohu.
        courseC_PlayLab_events9_b: Uisti sa, že tvoj nový blok `keď sa postava dotkne`
          má nastavené postavy **1** a **3**.
        courseC_PlayLab_events9_c: Blok `keď sa postava dotkne` môžeš na pracovnej
          ploche použiť viackrát naraz, takto ten prvý nemusíš odstrániť!
      courseC_PlayLab_events9_2019:
        courseC_PlayLab_events9_a: Použitie bloku `pridaj bod` ti pomôže vyriešiť
          túto úlohu.
        courseC_PlayLab_events9_b: Uisti sa, že tvoj nový blok `keď sa postava dotkne`
          má nastavené postavy **1** a **3**.
        courseC_PlayLab_events9_c: Blok `keď sa postava dotkne` môžeš na pracovnej
          ploche použiť viackrát naraz, takto ten prvý nemusíš odstrániť!
      courseC_PlayLab_eventsA:
        courseC_PlayLab_eventsA_a: Na vyriešenie tejto úlohy použi blok `nastav pozadie`
          a blok `nastav postavu na ___ rýchlosť`.
        courseC_PlayLab_eventsA_b: Na vyriešenie tejto úlohy musíš na pracovnú plochu
          presunúť blok `Pri spustení`.
      courseC_PlayLab_eventsA_2018:
        courseC_PlayLab_eventsA_a: Na vyriešenie tejto úlohy použi blok `nastav pozadie`
          a blok `nastav postavu na ___ rýchlosť`.
        courseC_PlayLab_eventsA_b: Na vyriešenie tejto úlohy musíš na pracovnú plochu
          presunúť blok `Pri spustení`.
      courseC_PlayLab_eventsA_2019:
        courseC_PlayLab_eventsA_a: Na vyriešenie tejto úlohy použi blok `nastav pozadie`
          a blok `nastav postavu na ___ rýchlosť`.
        courseC_PlayLab_eventsA_b: Na vyriešenie tejto úlohy musíš na pracovnú plochu
          presunúť blok `Pri spustení`.
      courseC_PlayLab_eventsA_embed_2019:
        courseC_PlayLab_eventsA_a: Use the arrow keys to move the penguin. You do
          not need to write any code to finish this level.
      courseC_PlayLab_eventsFP:
        idea1: |-
          _Potrebuješ inšpiráciu?_

          **Kto je tam?** Nechaj postavy ukazovať savs náhodnými obrázkami, takto nikto nebude tušiť, ktorá bude nasledovať.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _potrebuješ inšpiráciu?_

          **Ideme za dobrodružstvom** - Zmeň pozadie a potom nechaj postavy rozprávať o tom, kde sa zrazu nachádzajú.

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _Potrebuješ inšpiráciu?_

          **Pinball** - Jedna z postáv sa pohybuje pomocou šípok (použi bloky`keď šípka nahor`, `keď šípka nadol`), potom vždy prehraj náhodný zvuk, keď narazí do iných postáv.
      courseC_PlayLab_eventsFP_2018:
        idea1: |-
          _Potrebuješ inšpiráciu?_

          **Kto je tam?** Nechaj postavy ukazovať savs náhodnými obrázkami, takto nikto nebude tušiť, ktorá bude nasledovať.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _potrebuješ inšpiráciu?_

          **Ideme za dobrodružstvom** - Zmeň pozadie a potom nechaj postavy rozprávať o tom, kde sa zrazu nachádzajú.

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _Potrebuješ inšpiráciu?_

          **Pinball** - Jedna z postáv sa pohybuje pomocou šípok (použi bloky`keď šípka nahor`, `keď šípka nadol`), potom vždy prehraj náhodný zvuk, keď narazí do iných postáv.
      courseC_PlayLab_eventsFP_2019:
        idea1: |-
          _Need an idea?_

          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.

          <img src= "https://images.code.org/dbd6ece9d0fb213039ea5dccb91fc425-image-1563577859889.gif" style="width: 200px">
        idea2: |-
          _Need an idea?_

          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.

          <img src= "https://images.code.org/a7f740d73074deb128cdc2826abda9e6-image-1563576781779.gif" style="width: 200px">
        idea3: |-
          _Potrebuješ inšpiráciu?_

          **Pinball** - Jedna z postáv sa pohybuje pomocou šípok (použi bloky`keď šípka nahor`, `keď šípka nadol`), potom vždy prehraj náhodný zvuk, keď narazí do iných postáv.
      courseC_PlayLab_events_challenge1:
        courseC_PlayLab_events_challenge_a: |-
          Tento blok môžeš použiť, ak chceš postavy premiestnovať na rôzne miesta na hracej ploche.

          <xml> <block type="studio_setSpritePosition">

          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Vyskúšaj použiť blok `nastav postavu 1
          na pozíciu v strede vľavo`, keď sa dotkne iných postáv. Toto hru zreštartuje
          a tak sa hráč môže znova pokúsiť!
        courseC_PlayLab_events_challenge_c: |-
          Vyskúšaj zmeniť rýchlosť jednotlivých postáv, takto si vieš hru uľahčiť alebo sťažiť!

          <xml>  <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_2018:
        courseC_PlayLab_events_challenge_a: |-
          Tento blok môžeš použiť, ak chceš postavy premiestnovať na rôzne miesta na hracej ploche.

          <xml> <block type="studio_setSpritePosition">

          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Vyskúšaj použiť blok `nastav postavu 1
          na pozíciu v strede vľavo`, keď sa dotkne iných postáv. Toto hru zreštartuje
          a tak sa hráč môže znova pokúsiť!
        courseC_PlayLab_events_challenge_c: |-
          Vyskúšaj zmeniť rýchlosť jednotlivých postáv, takto si vieš hru uľahčiť alebo sťažiť!

          <xml>  <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_2019:
        courseC_PlayLab_events_challenge_a: |-
          Tento blok môžeš použiť, ak chceš postavy premiestnovať na rôzne miesta na hracej ploche.

          <xml> <block type="studio_setSpritePosition">

          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Vyskúšaj použiť blok `nastav postavu 1
          na pozíciu v strede vľavo`, keď sa dotkne iných postáv. Toto hru zreštartuje
          a tak sa hráč môže znova pokúsiť!
        courseC_PlayLab_events_challenge_c: |-
          Vyskúšaj zmeniť rýchlosť jednotlivých postáv, takto si vieš hru uľahčiť alebo sťažiť!

          <xml>  <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_artist_loop1:
        courseC_artist_loop1_a: V sovjom cykle nemusíš robiť žiadne zmeny, len pridaj
          navrch jeden blok.
        courseC_artist_loop1_b: |-
          Toto je blok, potrebný na vytvorenie vzoru:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          Vyber si vzor, ktorý len chceš!
      courseC_artist_loop1_2018:
        courseC_artist_loop1_a: V sovjom cykle nemusíš robiť žiadne zmeny, len pridaj
          navrch jeden blok.
        courseC_artist_loop1_b: |-
          Toto je blok, potrebný na vytvorenie vzoru:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          Vyber si vzor, ktorý len chceš!
      courseC_artist_loop1_2019:
        courseC_artist_loop1_a: V sovjom cykle nemusíš robiť žiadne zmeny, len pridaj
          navrch jeden blok.
        courseC_artist_loop1_b: |-
          Toto je blok, potrebný na vytvorenie vzoru:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          Vyber si vzor, ktorý len chceš!
      courseC_artist_loops1a:
        courseC_artist_loops1a_a: |-
          Toto je prvý blok, ktorý budeš potrebovať:

          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Použi tento blok na nakreslenie nálepky!

          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2018:
        courseC_artist_loops1a_a: |-
          Toto je prvý blok, ktorý budeš potrebovať:

          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Použi tento blok na nakreslenie nálepky!

          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2019:
        courseC_artist_loops1a_a: |-
          Toto je prvý blok, ktorý budeš potrebovať:

          <xml>
          <block type="jump_to">
          <title name="VALUE">13</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Použi tento blok na nakreslenie nálepky!

          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1b_2019:
        courseC_artist_loops1b_a: |-
          Toto je prvý blok, ktorý budeš potrebovať:

          <xml>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">???</title>
          <title name="VALUE" config="45,60,90,120,180">???</title>
          </block>
          </xml>

          Môžeš si vybrať otočiť sa doprava alebo doľava o koľkokoľvek stupňov.
      courseC_artist_loops2a:
        courseC_artist_loops2a_a: Vo vnútri cyklu použi blok skoč na 200 cez 200,
          potom blok nakresli nálepku a potom sa otoč o 30 stupňov.
        courseC_artist_loops2a_b: Klikni na číslo na vrchu cyklu `opakuj`, aby si
          zmenil počet opakovaní.
      courseC_artist_loops2a_2018:
        courseC_artist_loops2a_a: Vo vnútri cyklu použi blok skoč na 200 cez 200,
          potom blok nakresli nálepku a potom sa otoč o 30 stupňov.
        courseC_artist_loops2a_b: Klikni na číslo na vrchu cyklu `opakuj`, aby si
          zmenil počet opakovaní.
      courseC_artist_loops2a_2019:
        courseC_artist_loops2a_a: Vo vnútri tvojho cyklu, potrebuješ skočiť do stredu,
          potom sa otočiť a potom nakresliť nálepku.
        courseC_artist_loops2a_b: Klikni na číslo na vrchu cyklu `opakuj`, aby si
          zmenil počet opakovaní.
      courseC_artist_loops3a:
        courseC_artist_loops3a_a: Potrebuješ pridať len jeden blok do vnútra tvojho
          cyklu, nasleduje nálepke vtáčika.
        courseC_artist_loops3a_b: Použi rozbaľovacie menu na bloku `nakresli nálepku`,
          aby si našiel nálepku netopiera.
      courseC_artist_loops3a_2018:
        courseC_artist_loops3a_a: Potrebuješ pridať len jeden blok do vnútra tvojho
          cyklu, nasleduje nálepke vtáčika.
        courseC_artist_loops3a_b: Použi rozbaľovacie menu na bloku `nakresli nálepku`,
          aby si našiel nálepku netopiera.
      courseC_artist_loops3a_2019:
        courseC_artist_loops3a_a: Potrebuješ pridať len jeden blok do vnútra tvojho
          cyklu, nasleduje po prvej nálepke.
        courseC_artist_loops3a_b: |-
          Tvoj program, by mal vyzerať takto!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">???</title>
          <statement name="DO">
          <block type="jump_to">
          <title name="VALUE">13</title>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">???</title>
          <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
          <next>
          <block type="sticker">
          <title name="VALUE">Cat</title>
          <next>
          <block type="sticker">
          <title name="VALUE">Dog</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>

          Môžeš použiť nálepky, ktoré chceš!
      courseC_artist_loops4a:
        courseC_artist_loops4a_a: |-
          Použi tento blok, aby si skočil dopredu:

          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>

          Nezabudni zmeniť to, ako ďaleko skočíš!
      courseC_artist_loops4a_2018:
        courseC_artist_loops4a_a: |-
          Použi tento blok, aby si skočil dopredu:

          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>

          Nezabudni zmeniť to, ako ďaleko skočíš!
      courseC_artist_loops4a_2019:
        courseC_artist_loops4a_a: |-
          Použi tento blok, aby si skočil dopredu:

          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">???</title>
          </block>
          </xml>

          Nezabudni zmeniť to, ako ďaleko skočíš!
        courseC_artist_loops4a_b: |-
          Tvoj program by mal vyzerať takto!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">???</title>
          <statement name="DO">
          <block type="jump_to">
          <title name="VALUE">13</title>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">???</title>
          <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
          <next>
          <block type="sticker">
          <title name="VALUE">Cat</title>
          <next>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">???</title>
          <next>
          <block type="sticker">
          <title name="VALUE">Dog</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseC_artist_loops5a:
        courseC_artist_loops5a_a: Použi rozbaľovacie menu na blokoch `nakresli nálepku`,
          aby si zmenil obrázok.
      courseC_artist_loops5a_2018:
        courseC_artist_loops5a_a: Použi rozbaľovacie menu na blokoch `nakresli nálepku`,
          aby si zmenil obrázok.
      courseC_artist_loops5a_2019:
        courseC_artist_loops5a_a: Použi rozbaľovacie menu na blokoch `nakresli nálepku`,
          aby si zmenil obrázok.
      courseC_artist_loops5b:
        courseC_artist_loops5b_a: |-
          Použi tento blok na nastavenie tvojho vzoru:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Na vytvorenie dizajnu, ako je ten hore, použi blok
          posuň sa dozadu toľko isto krát ako blok posuň sa dopredu.
      courseC_artist_loops5b_2018:
        courseC_artist_loops5b_a: |-
          Použi tento blok na nastavenie tvojho vzoru:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Na vytvorenie dizajnu, ako je ten hore, použi blok
          posuň sa dozadu toľko isto krát ako blok posuň sa dopredu.
      courseC_artist_loops5b_2019:
        courseC_artist_loops5b_a: |-
          Použi tento blok na nastavenie tvojho vzoru:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Na vytvorenie dizajnu, ako je ten hore, použi blok
          posuň sa dozadu toľko isto krát ako blok posuň sa dopredu.
        courseC_artist_loops5b_c: |-
          Tvoj program by mal vyzerať nejako takto!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_line_style_pattern">
          <title name="VALUE">rainbowLine</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="jump_to">
          <title name="VALUE">13</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">???</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveBackward</title>
          <title name="VALUE">???</title>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">???</title>
          <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
          <next>
          <block type="sticker">
          <title name="VALUE">Cat</title>
          <next>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">???</title>
          <next>
          <block type="sticker">
          <title name="VALUE">Dog</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseC_artist_loops6a:
        courseC_artist_loops6a_a: Na vytvorenie podobného dizajnu ako je ten hore,
          skoč dopredu menej ako 75 pixelov medzi každou nálepkou.
      courseC_artist_loops6a_2018:
        courseC_artist_loops6a_a: Na vytvorenie podobného dizajnu ako je ten hore,
          skoč dopredu menej ako 75 pixelov medzi každou nálepkou.
      courseC_artist_loops6a_2019:
        courseC_artist_loops6a_a: Na vytvorenie podobného dizajnu ako je ten hore,
          skoč dopredu menej ako 75 pixelov medzi každou nálepkou.
      courseC_artist_loops7a:
        courseC_artist_loops7a_a: Kruh má 360 stupňov. Vynásob stupne, kotré sú v
          bloku otoč sa počtom opakovaní. Vyšlo ti 360? Prezri si návrhy otáčaní,
          aby si videl, že to tak skutočne funguje!
      courseC_artist_loops7a_2018:
        courseC_artist_loops7a_a: Kruh má 360 stupňov. Vynásob stupne, kotré sú v
          bloku otoč sa počtom opakovaní. Vyšlo ti 360? Prezri si návrhy otáčaní,
          aby si videl, že to tak skutočne funguje!
      courseC_artist_loops7a_2019:
        courseC_artist_loops7a_a: Kruh má 360 stupňov. Vynásob stupne, kotré sú v
          bloku otoč sa počtom opakovaní. Vyšlo ti 360? Prezri si návrhy otáčaní,
          aby si videl, že to tak skutočne funguje!
      courseC_artist_loopsPre1a:
        courseC_artist_loopsPre1a_a: Pamätaj, že blok `otoč sa` musí ísť do vnútra
          cyklu.
        courseC_artist_loopsPre1a_b: 'Tvoj cyklus `opakuj` by mal mať vo vnútri 3
          bloky: `skoč k/na 200 cez 200 dole`, `posuň sa dopredu o 50 pixelov` a `otoč
          sa vpravo o 60 stupňov`.'
      courseC_artist_loopsPre1a_2018:
        courseC_artist_loopsPre1a_a: Pamätaj, že blok `otoč sa` musí ísť do vnútra
          cyklu.
        courseC_artist_loopsPre1a_b: 'Tvoj cyklus `opakuj` by mal mať vo vnútri 3
          bloky: `skoč k/na 200 cez 200 dole`, `posuň sa dopredu o 50 pixelov` a `otoč
          sa vpravo o 60 stupňov`.'
      courseC_artist_loopsPre1a_2019:
        courseC_artist_loopsPre1a_a: Pamätaj, že blok `otoč sa` musí ísť do vnútra
          cyklu.
        courseC_artist_loopsPre1a_b: 'Tvoj cyklus `opakuj` by mal mať vo vnútri 3
          bloky: `skoč k/na 200 cez 200 dole`, `posuň sa dopredu o 50 pixelov` a `otoč
          sa vpravo o 60 stupňov`.'
      courseC_artist_loopsPrePre1a:
        courseC_artist_loopsPrePre1a_a: |-
          Prvý blok, ktorý budeš potrebovať je:

          ![](<https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png>)
        courseC_artist_loopsPrePre1a_b: |-
          Aby si sa posunul dopredu o 50 pixelov, použi tento blok:

          ![](<https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png>)
      courseC_artist_loopsPrePre1a_2018:
        courseC_artist_loopsPrePre1a_a: |-
          Prvý blok, ktorý potrebuješ použiť je:

          <xml>  <block type="jump_to_xy" id="callMe">

          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block></xml>
        courseC_artist_loopsPrePre1a_b: |-
          Aby si sa posunul dopredu o 50 pixelov, použi tento blok:

          <xml><block type="draw_move_by_constant">

          <title name="DIR">moveForward</title>
          <title name="VALUE">50</title>
          </block></xml>
      courseC_artist_loopsPrePre1a_2019:
        courseC_artist_loopsPrePre1a_a: |-
          Prvý blok, ktorý potrebuješ použiť je:

          <xml>  <block type="jump_to_xy" id="callMe">

          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block></xml>
        courseC_artist_loopsPrePre1a_b: |-
          Aby si sa posunul dopredu o 50 pixelov, použi tento blok:

          <xml><block type="draw_move_by_constant">

          <title name="DIR">moveForward</title>
          <title name="VALUE">50</title>
          </block></xml>
      courseC_artist_prog2:
        courseC_artist_prog2_a: '-   "Ak použiješ blok <xml><block type="draw_move_by_constant"><title
          name="DIR">moveForward</title><title name="VALUE">100</title></block></xml>,
          nakreslím čiaru." \*'
        courseC_artist_prog2_b: Máš problém, so zabočením? Použi blok <xml><block
          type="draw_turn_by_constant_dropdown"><title name="DIR">turnRight</title><title
          name="VALUE" config="45,60,90,120,180">90</title></block></xml>.
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: '-   "Ak použiješ blok <xml><block type="draw_move_by_constant"><title
          name="DIR">moveForward</title><title name="VALUE">100</title></block></xml>,
          nakreslím čiaru." \*'
        courseC_artist_prog2_b: Máš problém, so zabočením? Použi blok <xml><block
          type="draw_turn_by_constant_dropdown"><title name="DIR">turnRight</title><title
          name="VALUE" config="45,60,90,120,180">90</title></block></xml>.
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: '-   "Ak použiješ blok <xml><block type="draw_move_by_constant"><title
          name="DIR">moveForward</title><title name="VALUE">100</title></block></xml>,
          nakreslím čiaru." \*'
        courseC_artist_prog2_b: Máš problém, so zabočením? Použi blok <xml><block
          type="draw_turn_by_constant_dropdown"><title name="DIR">turnRight</title><title
          name="VALUE" config="45,60,90,120,180">90</title></block></xml>.
      courseC_artist_prog3:
        courseC_artist_prog3_a: |-
          Na vytvorenie tohto okna, stačí nakresliť štvorec so stranou 100 pixelov.

          -   posuň sa dopredu
          -   otoč sa
          -   posuň sa dopredu
          -   otoč sa
          -   posuň sa dopredu
          -   otoč sa
          -   posuň sa dopredu
        courseC_artist_prog3_b: Chceš skrátiť svoj kód? Skús použiť opakovací blok.
      courseC_artist_prog3_2018:
        courseC_artist_prog3_a: |-
          Na vytvorenie tohto okna, stačí nakresliť štvorec so stranou 100 pixelov.

          -   posuň sa dopredu
          -   otoč sa
          -   posuň sa dopredu
          -   otoč sa
          -   posuň sa dopredu
          -   otoč sa
          -   posuň sa dopredu
        courseC_artist_prog3_b: Chceš skrátiť svoj kód? Skús použiť opakovací blok.
      courseC_artist_prog3_2019:
        courseC_artist_prog3_a: |-
          Na vytvorenie tohto okna, stačí nakresliť štvorec so stranou 100 pixelov.

          -   posuň sa dopredu
          -   otoč sa
          -   posuň sa dopredu
          -   otoč sa
          -   posuň sa dopredu
          -   otoč sa
          -   posuň sa dopredu
        courseC_artist_prog3_b: Chceš skrátiť svoj kód? Skús použiť opakovací blok.
      courseC_artist_prog4:
        courseC_artist_prog4_a: Na dokončenie rakety, stačí dokresliť trojuholník
          navrchu!
        courseC_artist_prog4_b: Môžeš použiť šípku nadol s rozbaľovacou ponukou na
          blokoch "otoč sa o", aby si zistil aký uhol potrebuješ!
        courseC_artist_prog4_c: |-
          Na nakreslenie trojuholníka potrebuješ bloky:

          -   posuň sa dopredu
          -   otoč sa vľavo o 120 stupňov
          -   posuň sa dopredu
          -   otoč sa vľavo o 120 stupňov
          -   posuň sa dopredu
      courseC_artist_prog4_2018:
        courseC_artist_prog4_a: Na dokončenie rakety, stačí dokresliť trojuholník
          navrchu!
        courseC_artist_prog4_b: Môžeš použiť šípku nadol s rozbaľovacou ponukou na
          blokoch "otoč sa o", aby si zistil aký uhol potrebuješ!
        courseC_artist_prog4_c: |-
          Na nakreslenie trojuholníka potrebuješ bloky:

          -   posuň sa dopredu
          -   otoč sa vľavo o 120 stupňov
          -   posuň sa dopredu
          -   otoč sa vľavo o 120 stupňov
          -   posuň sa dopredu
      courseC_artist_prog4_2019:
        courseC_artist_prog4_a: Na dokončenie rakety, stačí dokresliť trojuholník
          navrchu!
        courseC_artist_prog4_b: Môžeš použiť šípku nadol s rozbaľovacou ponukou na
          blokoch "otoč sa o", aby si zistil aký uhol potrebuješ!
        courseC_artist_prog4_c: |-
          Na nakreslenie trojuholníka potrebuješ bloky:

          -   posuň sa dopredu
          -   otoč sa vľavo o 120 stupňov
          -   posuň sa dopredu
          -   otoč sa vľavo o 120 stupňov
          -   posuň sa dopredu
      courseC_artist_prog5:
        courseC_artist_prog5_a: Spomaľ rýchlosť až na korytnačku, aby si videl bežať
          kód riadok po riadku. Takto zistíš, kde sa stala chyba.
        courseC_artist_prog5_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_artist_prog5_c: Môžeš použiť šípku nadol s rozbaľovacou ponukou na
          blokoch "otoč sa o", aby si zistil aký uhol potrebuješ!
        courseC_artist_prog5_d: Každé otočenie by malo byť o 90 stupňov vpravo.
      courseC_artist_prog5_2018:
        courseC_artist_prog5_a: Spomaľ rýchlosť až na korytnačku, aby si videl bežať
          kód riadok po riadku. Takto zistíš, kde sa stala chyba.
        courseC_artist_prog5_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_artist_prog5_c: Šípka dole na jednotlivých blokoch ti rozbalí možnosti,
          s ktorými môžeš meniť funkciu bloku.
        courseC_artist_prog5_d: Každé otočenie by malo byť o 90 stupňov vpravo.
      courseC_artist_prog5_2019:
        courseC_artist_prog5_a: Spomaľ rýchlosť až na korytnačku, aby si videl bežať
          kód riadok po riadku. Takto zistíš, kde sa stala chyba.
        courseC_artist_prog5_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_artist_prog5_c: Šípka dole na jednotlivých blokoch ti rozbalí možnosti,
          s ktorými môžeš meniť funkciu bloku.
        courseC_artist_prog5_d: Každé otočenie by malo byť o 90 stupňov vpravo.
      courseC_artist_prog6:
        courseC_artist_prog6_a: Umelec už je otočený správnym smerom na to, aby nakreslil
          svoju prvú čiaru.
        courseC_artist_prog6_b: Tento diamant je v skutočnosti len štvorec, ktorý
          stojí na svojom vrchole.
        courseC_artist_prog6_c: Keďže tento diamant je tiež štvorec, uisti sa, že
          sa vždy otáčaš o 90 stupňov.
      courseC_artist_prog6_2018:
        courseC_artist_prog6_a: Umelec už je otočený správnym smerom na to, aby nakreslil
          svoju prvú čiaru.
        courseC_artist_prog6_b: Tento diamant je v skutočnosti len štvorec, ktorý
          stojí na svojom vrchole.
        courseC_artist_prog6_c: Keďže tento diamant je tiež štvorec, uisti sa, že
          sa vždy otáčaš o 90 stupňov.
      courseC_artist_prog6_2019:
        courseC_artist_prog6_a: Umelec už je otočený správnym smerom na to, aby nakreslil
          svoju prvú čiaru.
        courseC_artist_prog6_b: Tento diamant je v skutočnosti len štvorec, ktorý
          stojí na svojom vrchole.
        courseC_artist_prog6_c: Keďže tento diamant je tiež štvorec, uisti sa, že
          sa vždy otáčaš o 90 stupňov.
      courseC_artist_prog7:
        courseC_artist_prog7_a: Každý z uhlov je buď 45 alebo 90 stupňov.
        courseC_artist_prog7_b: |-
          Funguje všetko po prvom kroku?
          Stále všetko funguje aj po druhom kroku?
          V ktorom kroku sa stala chyba?
        courseC_artist_prog7_c: Môžeš použiť šípku nadol s rozbaľovacou ponukou na
          blokoch "otoč sa o" aby si zistil aký uhol potrebuješ!
        courseC_artist_prog7_d: |-
          Potrebuješ bloky:

          -   posuň sa dopredu
          -   otoč sa vpravo o 45 stupňov
          -   posuň sa dopredu
          -   otoč sa vpravo o 90 stupňov
          -   posuň sa dopredu
          -   otoč sa vpravo o 45 stupňov

          Zopakuj tento cyklus 2 krát!
        courseC_artist_prog7_e: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_artist_prog7_2018:
        courseC_artist_prog7_a: Každý z uhlov je buď 45 alebo 90 stupňov.
        courseC_artist_prog7_b: |-
          Funguje všetko po prvom kroku?
          Stále všetko funguje aj po druhom kroku?
          V ktorom kroku sa stala chyba?
        courseC_artist_prog7_c: Môžeš použiť šípku nadol s rozbaľovacou ponukou na
          blokoch "otoč sa o" aby si zistil aký uhol potrebuješ!
        courseC_artist_prog7_d: |-
          Potrebuješ bloky:

          -   posuň sa dopredu
          -   otoč sa vpravo o 45 stupňov
          -   posuň sa dopredu
          -   otoč sa vpravo o 90 stupňov
          -   posuň sa dopredu
          -   otoč sa vpravo o 45 stupňov

          Zopakuj tento cyklus 2 krát!
        courseC_artist_prog7_e: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_artist_prog7_2019:
        courseC_artist_prog7_a: Každý z uhlov je buď 45 alebo 90 stupňov.
        courseC_artist_prog7_b: |-
          Funguje všetko po prvom kroku?
          Stále všetko funguje aj po druhom kroku?
          V ktorom kroku sa stala chyba?
        courseC_artist_prog7_c: Môžeš použiť šípku nadol s rozbaľovacou ponukou na
          blokoch "otoč sa o" aby si zistil aký uhol potrebuješ!
        courseC_artist_prog7_d: |-
          Potrebuješ bloky:

          -   posuň sa dopredu
          -   otoč sa vpravo o 45 stupňov
          -   posuň sa dopredu
          -   otoč sa vpravo o 90 stupňov
          -   posuň sa dopredu
          -   otoč sa vpravo o 45 stupňov

          Zopakuj tento cyklus 2 krát!
        courseC_artist_prog7_e: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: Môžeš to nakresliť ako obdĺžnik s čiarou
          v strede alebo ako dva samostatné štvorce!
      courseC_artist_prog_challenge1_2018:
        courseC_artist_prog_challenge1_a: Môžeš to nakresliť ako obdĺžnik s čiarou
          v strede alebo ako dva samostatné štvorce!
      courseC_artist_prog_challenge1_2019:
        courseC_artist_prog_challenge1_a: Môžeš to nakresliť ako obdĺžnik s čiarou
          v strede alebo ako dva samostatné štvorce!
      courseC_artist_prog_challenge2a:
        courseC_artist_prog_challenge2_a: Potom ako nakreslíš prvú čiaru, otoč sa
          vľavo a až potom nakresli druhú čiaru.
        courseC_artist_prog_challenge2_b: Potom ako nakreslíš druhú čiaru, otoč sa
          vpravo a až potom nakresli tretiu čiaru.
      courseC_artist_prog_challenge2a_2018:
        courseC_artist_prog_challenge2_a: Potom ako nakreslíš prvú čiaru, otoč sa
          vľavo a až potom nakresli druhú čiaru.
        courseC_artist_prog_challenge2_b: Potom ako nakreslíš druhú čiaru, otoč sa
          vpravo a až potom nakresli tretiu čiaru.
      courseC_artist_prog_challenge2a_2019:
        courseC_artist_prog_challenge2_a: Potom ako nakreslíš prvú čiaru, otoč sa
          vľavo a až potom nakresli druhú čiaru.
        courseC_artist_prog_challenge2_b: Potom ako nakreslíš druhú čiaru, otoč sa
          vpravo a až potom nakresli tretiu čiaru.
      courseC_collector_loops_challenge2:
        courseC_maze_loops_challenge2_b: Aby si si neminul všetky bloky "zbieraj",
          využi opakovanie!
      courseC_collector_loops_challenge2_2018:
        courseC_maze_loops_challenge2_b: Aby si si neminul všetky bloky "zbieraj",
          využi opakovanie!
      courseC_collector_loops_challenge2_2019:
        courseC_maze_loops_challenge2_b: Aby si si neminul všetky bloky "zbieraj",
          využi opakovanie!
      courseC_collector_prog1:
        courseC_collector_prog1_a: Keď stojíš na mieste, kde je poklad, použi blok
          <xml><block type="collector_collect"/></xml>, ktorým ho pozbieraš.
        courseC_collector_prog1_b: Najjednoduchšie riešenie by bolo pohnúť sa raz
          dopredu a potom pozbierať poklad.
      courseC_collector_prog1_2018:
        courseC_collector_prog1_a: Keď stojíš na mieste, kde je poklad, použi blok
          <xml><block type="collector_collect"/></xml>, ktorým ho pozbieraš.
        courseC_collector_prog1_b: Najjednoduchšie riešenie by bolo pohnúť sa raz
          dopredu a potom pozbierať poklad.
      courseC_collector_prog1_2019:
        courseC_collector_prog1_a: Keď stojíš na mieste, kde je poklad, použi blok
          <xml><block type="collector_collect"/></xml>, ktorým ho pozbieraš.
        courseC_collector_prog1_b: Najjednoduchšie riešenie by bolo pohnúť sa raz
          dopredu a potom pozbierať poklad.
      courseC_collector_prog2:
        courseC_collector_prog2_a: Môžeš použiť 4 bloky <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> alebo použiť blok <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          ktorým program skrátiš.
        courseC_collector_prog2_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_collector_prog2_2018:
        courseC_collector_prog2_a: Môžeš použiť 4 bloky <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> alebo použiť blok <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          ktorým program skrátiš.
        courseC_collector_prog2_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_collector_prog2_2019:
        courseC_collector_prog2_a: Môžeš použiť 4 bloky <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> alebo použiť blok <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          ktorým program skrátiš.
        courseC_collector_prog2_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_collector_prog3:
        courseC_collector_prog3_a: Program spustí len bloky, ktoré sú spojené s blokom
          <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Vyskúšaj tlačidlo "Krok" na spustenie programu
          riadok po riadku. Zistil si, kde sa stala chyba?
        courseC_collector_prog3_c: Ak stále nevieš úlohu vyriešiť, skús si kroky najprv
          zapísať na kúsok papiera.
      courseC_collector_prog3_2018:
        courseC_collector_prog3_a: Program spustí len bloky, ktoré sú spojené s blokom
          <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Vyskúšaj tlačidlo "Krok" na spustenie programu
          riadok po riadku. Zistil si, kde sa stala chyba?
        courseC_collector_prog3_c: Ak stále nevieš úlohu vyriešiť, skús si kroky najprv
          zapísať na kúsok papiera.
      courseC_collector_prog3_2019:
        courseC_collector_prog3_a: Program spustí len bloky, ktoré sú spojené s blokom
          <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Vyskúšaj tlačidlo "Krok" na spustenie programu
          riadok po riadku. Zistil si, kde sa stala chyba?
        courseC_collector_prog3_c: Ak stále nevieš úlohu vyriešiť, skús si kroky najprv
          zapísať na kúsok papiera.
      courseC_collector_prog4:
        courseC_collector_prog4_a: Ak sa nebudeš vedieť pohnúť, skús si svoje kroky
          rozpísať na papier.
        courseC_collector_prog4_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_collector_prog4_c: Skús ísť touto cestou.
      courseC_collector_prog4_2018:
        courseC_collector_prog4_a: Ak sa nebudeš vedieť pohnúť, skús si svoje kroky
          rozpísať na papier.
        courseC_collector_prog4_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_collector_prog4_c: Skús ísť touto cestou.
      courseC_collector_prog4_2019:
        courseC_collector_prog4_a: Ak sa nebudeš vedieť pohnúť, skús si svoje kroky
          rozpísať na papier.
        courseC_collector_prog4_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód
          a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_collector_prog4_c: Skús ísť touto cestou.
      courseC_collector_prog5:
        courseC_collector_prog5_a: |-
          "Funguje všetko po prvom kroku?
          Stále všetko funguje aj po druhom kroku?
          V ktorom kroku sa stala chyba?"
        courseC_collector_prog5_b: Ak si opravil jednu chybu, ale program stále nefunguje,
          použi predchádzajúci postup, aby si odhalil ďalšie.
        courseC_collector_prog5_c: Ak sa nebudeš vedieť pohnúť, skús si svoje kroky
          rozpísať na papier.
        courseC_collector_prog5_d: Nasleduj túto cestu, aby si sa dostal k drahokamom.
      courseC_collector_prog5_2018:
        courseC_collector_prog5_a: |-
          "Funguje všetko po prvom kroku?
          Stále všetko funguje aj po druhom kroku?
          V ktorom kroku sa stala chyba?"
        courseC_collector_prog5_b: Ak si opravil jednu chybu, ale program stále nefunguje,
          použi predchádzajúci postup, aby si odhalil ďalšie.
        courseC_collector_prog5_c: Ak sa nebudeš vedieť pohnúť, skús si svoje kroky
          rozpísať na papier.
        courseC_collector_prog5_d: Nasleduj túto cestu, aby si sa dostal k drahokamom.
      courseC_collector_prog5_2019:
        courseC_collector_prog5_a: |-
          "Funguje všetko po prvom kroku?
          Stále všetko funguje aj po druhom kroku?
          V ktorom kroku sa stala chyba?"
        courseC_collector_prog5_b: Ak si opravil jednu chybu, ale program stále nefunguje,
          použi predchádzajúci postup, aby si odhalil ďalšie.
        courseC_collector_prog5_c: Ak sa nebudeš vedieť pohnúť, skús si svoje kroky
          rozpísať na papier.
        courseC_collector_prog5_d: Nasleduj túto cestu, aby si sa dostal k drahokamom.
      courseC_collector_prog6:
        courseC_collector_prog6_a: "Prídeš na to, kde sa stala chyba? \n\nSkús použiť
          tlačidlo \"Krok\" a vyhľadaj v tvojom kóde chyby riadok po riadku."
        courseC_collector_prog6_b: Nevieš sa pohnúť? Vyskúšaj túto cestu.
      courseC_collector_prog6_2018:
        courseC_collector_prog6_a: "Prídeš na to, kde sa stala chyba? \n\nSkús použiť
          tlačidlo \"Krok\" a vyhľadaj v tvojom kóde chyby riadok po riadku."
        courseC_collector_prog6_b: Nevieš sa pohnúť? Vyskúšaj túto cestu.
      courseC_collector_prog6_2019:
        courseC_collector_prog6_a: "Prídeš na to, kde sa stala chyba? \n\nSkús použiť
          tlačidlo \"Krok\" a vyhľadaj v tvojom kóde chyby riadok po riadku."
        courseC_collector_prog6_b: Nevieš sa pohnúť? Vyskúšaj túto cestu.
      courseC_collector_prog7:
        courseC_collector_prog7_a: 'Na pracovnej ploche, máš už dostatok dobrého kódu.
          Nepotrebuješ odtiaľ nič vymazať, aby si vyriešil túto úlohu.  '
        courseC_collector_prog7_b: Nevieš nájsť blok, vďaka kotrému by sa Laurel pohla
          správnym smerom? Zober si jeden z panela nástrojov.
        courseC_collector_prog7_c: Nevieš nájsť cestu, ktorá by ťa priviedla k všetkým
          drahokamom? Vyskúšaj túto!
      courseC_collector_prog7_2018:
        courseC_collector_prog7_a: 'Na pracovnej ploche, máš už dostatok dobrého kódu.
          Nepotrebuješ odtiaľ nič vymazať, aby si vyriešil túto úlohu.  '
        courseC_collector_prog7_b: Nevieš nájsť blok, vďaka kotrému by sa Laurel pohla
          správnym smerom? Zober si jeden z panela nástrojov.
        courseC_collector_prog7_c: Nevieš nájsť cestu, ktorá by ťa priviedla k všetkým
          drahokamom? Vyskúšaj túto!
      courseC_collector_prog7_2019:
        courseC_collector_prog7_a: 'Na pracovnej ploche, máš už dostatok dobrého kódu.
          Nepotrebuješ odtiaľ nič vymazať, aby si vyriešil túto úlohu.  '
        courseC_collector_prog7_b: Nevieš nájsť blok, vďaka kotrému by sa Laurel pohla
          správnym smerom? Zober si jeden z panela nástrojov.
        courseC_collector_prog7_c: Nevieš nájsť cestu, ktorá by ťa priviedla k všetkým
          drahokamom? Vyskúšaj túto!
      courseC_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Blok "zbieraj" môžeš použiť veľa krát,
          na pozbieranie extra pokladov.
      courseC_collector_prog_challenge1_2018:
        courseC_collector_prog_challenge1_a: Blok "zbieraj" môžeš použiť veľa krát,
          na pozbieranie extra pokladov.
      courseC_collector_prog_challenge1_2019:
        courseC_collector_prog_challenge1_a: Blok "zbieraj" môžeš použiť veľa krát,
          na pozbieranie extra pokladov.
      courseC_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Na jednom políčku môžeš blok `zbieraj`
          použiť aj viackrát.
        courseC_collector_prog_challenge1_b: Stratil si sa? Vyskúšaj túto cestu!
      courseC_collector_prog_challenge2_2018:
        courseC_collector_prog_challenge1_a: Na jednom políčku môžeš blok `zbieraj`
          použiť aj viackrát.
        courseC_collector_prog_challenge1_b: Stratil si sa? Vyskúšaj túto cestu!
      courseC_collector_prog_challenge2_2019:
        courseC_collector_prog_challenge1_a: Na jednom políčku môžeš blok `zbieraj`
          použiť aj viackrát.
        courseC_collector_prog_challenge1_b: Stratil si sa? Vyskúšaj túto cestu!
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events2:
        courseC_flappy_events2_a: 'Blok, ktorý potrebuješ pridať sa volá `nastav rýchlosť`. '
        courseC_flappy_events2_b: Na vyriešenie tejto úlohy, spoj dokopy bloky `nastav
          rýchlosť` a `pri spustení`.
      courseC_flappy_events2_2018:
        courseC_flappy_events2_a: 'Blok, ktorý potrebuješ pridať sa volá `nastav rýchlosť`. '
        courseC_flappy_events2_b: Na vyriešenie tejto úlohy, spoj dokopy bloky `nastav
          rýchlosť` a `pri spustení`.
      courseC_flappy_events2_2019:
        courseC_flappy_events2_a: 'Blok, ktorý potrebuješ pridať sa volá `nastav rýchlosť`. '
        courseC_flappy_events2_b: Na vyriešenie tejto úlohy, spoj dokopy bloky `nastav
          rýchlosť` a `pri spustení`.
      courseC_flappy_events3:
        courseC_flappy_events3_a: Ak niečo nefunguje, uisti sa, že tvoje bloky sú
          na pracovnej ploche pripojené k správnym udalostiam.
      courseC_flappy_events3_2018:
        courseC_flappy_events3_a: Ak niečo nefunguje, uisti sa, že tvoje bloky sú
          na pracovnej ploche pripojené k správnym udalostiam.
      courseC_flappy_events3_2019:
        courseC_flappy_events3_a: Ak niečo nefunguje, uisti sa, že tvoje bloky sú
          na pracovnej ploche pripojené k správnym udalostiam.
      courseC_flappy_events4:
        courseC_flappy_events4_a: Na vyriešenie tejto úlohy, pripoj blok `ukonči hru`
          k bloku `keď narazí na prekážku`.
      courseC_flappy_events4_2018:
        courseC_flappy_events4_a: Na vyriešenie tejto úlohy, pripoj blok `ukonči hru`
          k bloku `keď narazí na prekážku`.
      courseC_flappy_events4_2019:
        courseC_flappy_events4_a: Na vyriešenie tejto úlohy, pripoj blok `ukonči hru`
          k bloku `keď narazí na prekážku`.
      courseC_flappy_events5:
        courseC_flappy_events5_a: Potrebuješ použiť blok `pridaj bod`, aby si prešiel
          tento level.
      courseC_flappy_events5_2018:
        courseC_flappy_events5_a: Potrebuješ použiť blok `pridaj bod`, aby si prešiel
          tento level.
      courseC_flappy_events5_2019:
        courseC_flappy_events5_a: Potrebuješ použiť blok `pridaj bod`, aby si prešiel
          tento level.
      courseC_flappy_events6:
        courseC_flappy_events6_a: Skús pripojiť blok `mávni ____ ___` k udalosti `keď
          klikneš`.
      courseC_flappy_events6_2018:
        courseC_flappy_events6_a: Skús pripojiť blok `mávni ____ ___` k udalosti `keď
          klikneš`.
      courseC_flappy_events6_2019:
        courseC_flappy_events6_a: Skús pripojiť blok `mávni ____ ___` k udalosti `keď
          klikneš`.
      courseC_flappy_events7:
        courseC_flappy_events7_a: 'Pozadie môžeš zmeniť pomocou bloku `nastav prostredie`. '
      courseC_flappy_events7_2018:
        courseC_flappy_events7_a: 'Pozadie môžeš zmeniť pomocou bloku `nastav prostredie`. '
      courseC_flappy_events7_2019:
        courseC_flappy_events7_a: 'Pozadie môžeš zmeniť pomocou bloku `nastav prostredie`. '
      courseC_flappy_events8:
        courseC_flappy_events8_a: Vyskúšaj pripojiť ďalší blok `nastav prostredie`
          pod udalosť `keď obíde prekážku`, aby si prešiel tento level.
      courseC_flappy_events8_2018:
        courseC_flappy_events8_a: Vyskúšaj pripojiť ďalší blok `nastav prostredie`
          pod udalosť `keď obíde prekážku`, aby si prešiel tento level.
      courseC_flappy_events8_2019:
        courseC_flappy_events8_a: Vyskúšaj pripojiť ďalší blok `nastav prostredie`
          pod udalosť `keď obíde prekážku`, aby si prešiel tento level.
      courseC_flappy_events9:
        courseC_flappy_events9_a: Pripoj blok `nastav skóre 0` k udalosti `keď narazí
          na prekážku`, aby si prešiel tento level.
      courseC_flappy_events9_2018:
        courseC_flappy_events9_a: Pripoj blok `nastav skóre 0` k udalosti `keď narazí
          na prekážku`, aby si prešiel tento level.
      courseC_flappy_events9_2019:
        courseC_flappy_events9_a: Pripoj blok `nastav skóre 0` k udalosti `keď narazí
          na prekážku`, aby si prešiel tento level.
      courseC_harvester_loops1:
        courseC_harvester_loops1_a: Keď sa dostaneš až k tekvici, použi blok <xml><block
          type="harvester_pumpkin"/></xml>, aby si ju zobral.
        courseC_harvester_loops1_b: Môžeš použiť cyklus s blokom <xml><block type="harvester_pumpkin"/></xml>,
          aby si z políčka zobral viac ako jednu tekvicu.
      courseC_harvester_loops1_2018:
        courseC_harvester_loops1_a: Keď sa dostaneš až k tekvici, použi blok <xml><block
          type="harvester_pumpkin"/></xml>, aby si ju zobral.
        courseC_harvester_loops1_b: Môžeš použiť cyklus s blokom <xml><block type="harvester_pumpkin"/></xml>,
          aby si z políčka zobral viac ako jednu tekvicu.
      courseC_harvester_loops1_2019:
        courseC_harvester_loops1_a: Keď sa dostaneš až k tekvici, použi blok <xml><block
          type="harvester_pumpkin"/></xml>, aby si ju zobral.
        courseC_harvester_loops1_b: Môžeš použiť cyklus s blokom <xml><block type="harvester_pumpkin"/></xml>,
          aby si z políčka zobral viac ako jednu tekvicu.
      courseC_harvester_loops2:
        courseC_harvester_loops2_a: Ak sa zasekneš, vyskúšaj si spísať kroky na papier
          a hľadaj v nich opakujúce sa vzory.
        courseC_harvester_loops2_b: Budeš potrebovať jeden cyklus `opakvať` za druhým.
        courseC_harvester_loops2_c: Jeden z cyklov opakuje príkaz `posuň sa dopredu`
          a ten druhý opakuje príkaz `zbieraj tekvica`.
      courseC_harvester_loops2_2018:
        courseC_harvester_loops2_a: Ak sa zasekneš, vyskúšaj si spísať kroky na papier
          a hľadaj v nich opakujúce sa vzory.
        courseC_harvester_loops2_b: Budeš potrebovať jeden cyklus `opakvať` za druhým.
        courseC_harvester_loops2_c: Jeden z cyklov opakuje príkaz `posuň sa dopredu`
          a ten druhý opakuje príkaz `zbieraj tekvica`.
      courseC_harvester_loops2_2019:
        courseC_harvester_loops2_a: Ak sa zasekneš, vyskúšaj si spísať kroky na papier
          a hľadaj v nich opakujúce sa vzory.
        courseC_harvester_loops2_b: Budeš potrebovať jeden cyklus `opakvať` za druhým.
        courseC_harvester_loops2_c: Jeden z cyklov opakuje príkaz `posuň sa dopredu`
          a ten druhý opakuje príkaz `zbieraj tekvica`.
      courseC_harvester_loops3:
        courseC_harvester_loops3_a: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_harvester_loops3_b: Pri prvých tekviciach môžeš použiť kód, kotrý
          je veľmi podobný tomu z minulej úlohy. Ktorým smerom sa potom potrebuješ
          otočiť?
        courseC_harvester_loops3_c: Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus do vnútra iného cyklu! Toto sa nazýva **vnorený cyklus**.
      courseC_harvester_loops3_2018:
        courseC_harvester_loops3_a: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_harvester_loops3_b: Pri prvých tekviciach môžeš použiť kód, kotrý
          je veľmi podobný tomu z minulej úlohy. Ktorým smerom sa potom potrebuješ
          otočiť?
        courseC_harvester_loops3_c: Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus do vnútra iného cyklu! Toto sa nazýva **vnorený cyklus**.
      courseC_harvester_loops3_2019:
        courseC_harvester_loops3_a: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_harvester_loops3_b: Pri prvých tekviciach môžeš použiť kód, kotrý
          je veľmi podobný tomu z minulej úlohy. Ktorým smerom sa potom potrebuješ
          otočiť?
        courseC_harvester_loops3_c: Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus do vnútra iného cyklu! Toto sa nazýva **vnorený cyklus**.
      courseC_harvester_loops4:
        courseC_harvester_loops4_a: Použi nový blok `zbieraj kukuricu`, aby si ju
          vzal.
        courseC_harvester_loops4_b: Vo svojom kóde môžeš použiť viac ako jeden opakovací
          cyklus, jeden na zbieranie kukurice a iný na zbieranie tekvíc.
        courseC_harvester_loops4_c: Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus do vnútra iného cyklu! Toto sa nazýva **vnorený cyklus**.
      courseC_harvester_loops4_2018:
        courseC_harvester_loops4_a: Použi nový blok `zbieraj kukuricu`, aby si ju
          vzal.
        courseC_harvester_loops4_b: Vo svojom kóde môžeš použiť viac ako jeden opakovací
          cyklus, jeden na zbieranie kukurice a iný na zbieranie tekvíc.
        courseC_harvester_loops4_c: Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus do vnútra iného cyklu! Toto sa nazýva **vnorený cyklus**.
      courseC_harvester_loops4_2019:
        courseC_harvester_loops4_a: Použi nový blok `zbieraj kukuricu`, aby si ju
          vzal.
        courseC_harvester_loops4_b: Vo svojom kóde môžeš použiť viac ako jeden opakovací
          cyklus, jeden na zbieranie kukurice a iný na zbieranie tekvíc.
        courseC_harvester_loops4_c: Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus do vnútra iného cyklu! Toto sa nazýva **vnorený cyklus**.
      courseC_harvester_loops5:
        courseC_harvester_loops5_a: Ak sa zasekneš, vyskúšaj si spísať kroky na papier
          a hľadaj v nich opakujúce sa vzory.
        courseC_harvester_loops5_b: Sú ti tieto schodíky povedomé z iných úloh? Pohyby
          budú podobné, len pamätaj, že musíš ešte po ceste zozbierať úrodu.
      courseC_harvester_loops5_2018:
        courseC_harvester_loops5_a: Ak sa zasekneš, vyskúšaj si spísať kroky na papier
          a hľadaj v nich opakujúce sa vzory.
        courseC_harvester_loops5_b: Sú ti tieto schodíky povedomé z iných úloh? Pohyby
          budú podobné, len pamätaj, že musíš ešte po ceste zozbierať úrodu.
      courseC_harvester_loops5_2019:
        courseC_harvester_loops5_a: Ak sa zasekneš, vyskúšaj si spísať kroky na papier
          a hľadaj v nich opakujúce sa vzory.
        courseC_harvester_loops5_b: Sú ti tieto schodíky povedomé z iných úloh? Pohyby
          budú podobné, len pamätaj, že musíš ešte po ceste zozbierať úrodu.
      courseC_harvester_loops6:
        courseC_harvester_loops6_a: Pamätaj, že do vnútra bloku `opakuj` môžeš vložiť
          aj viac blokov.
        courseC_harvester_loops6_b: Nezabudni sa otočiť na konci radu s kukuricou.
      courseC_harvester_loops6_2018:
        courseC_harvester_loops6_a: Pamätaj, že do vnútra bloku `opakuj` môžeš vložiť
          aj viac blokov.
        courseC_harvester_loops6_b: Nezabudni sa otočiť na konci radu s kukuricou.
      courseC_harvester_loops6_2019:
        courseC_harvester_loops6_a: Pamätaj, že do vnútra bloku `opakuj` môžeš vložiť
          aj viac blokov.
        courseC_harvester_loops6_b: Nezabudni sa otočiť na konci radu s kukuricou.
      courseC_harvester_loops7:
        courseC_harvester_loops7_a: Táto úloha sa dá vyriešiť dvoma spôsobmi, buď
          pozbieraš prvú kukuricu alebo tekvice.
        courseC_harvester_loops7_b: Budeš chcieť použiť viacero cyklov `opakuj`, aby
          si vyriešil túto úlohu.
      courseC_harvester_loops7_2018:
        courseC_harvester_loops7_a: Táto úloha sa dá vyriešiť dvoma spôsobmi, buď
          pozbieraš prvú kukuricu alebo tekvice.
        courseC_harvester_loops7_b: Budeš chcieť použiť viacero cyklov `opakuj`, aby
          si vyriešil túto úlohu.
      courseC_harvester_loops7_2019:
        courseC_harvester_loops7_a: Táto úloha sa dá vyriešiť dvoma spôsobmi, buď
          pozbieraš prvú kukuricu alebo tekvice.
        courseC_harvester_loops7_b: Budeš chcieť použiť viacero cyklov `opakuj`, aby
          si vyriešil túto úlohu.
      courseC_harvester_loops8:
        courseC_harvester_loops8_a: Sú ti tieto schodíky povedomé z predchádzajúcej
          úlohy? Pohyby budú podobné, len pamätaj, že musíš ešte po ceste zozbierať
          úrodu.
        courseC_harvester_loops8_b: Ak chceš zjednodušiť svoj kód, môžeš vložiť jeden
          cyklus `opakuj` do vnútra iného cyklu! Toto sa nazýva **vnorený cyklus**.
      courseC_harvester_loops8_2018:
        courseC_harvester_loops8_a: Sú ti tieto schodíky povedomé z predchádzajúcej
          úlohy? Pohyby budú podobné, len pamätaj, že musíš ešte po ceste zozbierať
          úrodu.
        courseC_harvester_loops8_b: Ak chceš zjednodušiť svoj kód, môžeš vložiť jeden
          cyklus `opakuj` do vnútra iného cyklu! Toto sa nazýva **vnorený cyklus**.
      courseC_harvester_loops8_2019:
        courseC_harvester_loops8_a: Sú ti tieto schodíky povedomé z predchádzajúcej
          úlohy? Pohyby budú podobné, len pamätaj, že musíš ešte po ceste zozbierať
          úrodu.
        courseC_harvester_loops8_b: Ak chceš zjednodušiť svoj kód, môžeš vložiť jeden
          cyklus `opakuj` do vnútra iného cyklu! Toto sa nazýva **vnorený cyklus**.
      courseC_harvester_loops_challenge1a:
        courseC_harvester_loops_challenge1_a: Toto by bolo bez cyklov príliš ťažké!
        courseC_harvester_loops_challenge1_b: Môžeš zopakovať `posuň sa dopredu` a
          `zober kukuricu` koľkokoľvek krát potrebuješ, potom v každom rohu použi
          blok `otoč sa vpravo`.
        courseC_harvester_loops_challenge1_c: |-
          Najlepší spôsob na zozbieranie kukurice používa blok `opakuj` vo vnútri iného bloku `opakuj`.

          <xml><block type="controls_repeat">

          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseC_harvester_loops_challenge1a_2018:
        courseC_harvester_loops_challenge1_a: Toto by bolo bez cyklov príliš ťažké!
        courseC_harvester_loops_challenge1_b: Môžeš zopakovať `posuň sa dopredu` a
          `zober kukuricu` koľkokoľvek krát potrebuješ, potom v každom rohu použi
          blok `otoč sa vpravo`.
        courseC_harvester_loops_challenge1_c: |-
          Po tom ako dvakrát pozbieraš kukuricu, môžeš použiť vnorený cyklus na zber ďalších osem kúskov.

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge1a_2019:
        courseC_harvester_loops_challenge1_a: Toto by bolo bez cyklov príliš ťažké!
        courseC_harvester_loops_challenge1_b: Môžeš zopakovať `posuň sa dopredu` a
          `zober kukuricu` koľkokoľvek krát potrebuješ, potom v každom rohu použi
          blok `otoč sa vpravo`.
        courseC_harvester_loops_challenge1_c: |-
          Najlepší spôsob na zozbieranie kukurice používa blok `opakuj` vo vnútri iného bloku `opakuj`.

          <xml><block type="controls_repeat">

          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseC_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: Jedno z riešení je ísť cik-cakovo. Ďalší
          spôsob je ísť do špirály! Úloha ako táto má veľa možných riešení. Buď vytrvalý!
        courseC_harvester_loops_challenge2_b: Môžeš zopakovať `posuň sa dopredu` a
          `zober šalát` koľkokoľvek krát potrebuješ, potom sa otoč vždy, keď si v
          rohu.
        courseC_harvester_loops_challenge2_c: |-
          Tento cik-cakový vzor zopakuj dva krát na to, aby si úlohu splnil len s pomocou 20 blokov!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          Tento špirálový vzor môže byť nakódovaný len pomocou 18 blokov!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2018:
        courseC_harvester_loops_challenge2_a: Jedno z riešení je ísť cik-cakovo. Ďalší
          spôsob je ísť do špirály! Úloha ako táto má veľa možných riešení. Buď vytrvalý!
        courseC_harvester_loops_challenge2_b: Môžeš zopakovať `posuň sa dopredu` a
          `zober šalát` koľkokoľvek krát potrebuješ, potom sa otoč vždy, keď si v
          rohu.
        courseC_harvester_loops_challenge2_c: |-
          Tento cik-cakový vzor zopakuj dva krát na to, aby si úlohu splnil len s pomocou 20 blokov!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          Tento špirálový vzor môže byť nakódovaný len pomocou 18 blokov!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2019:
        courseC_harvester_loops_challenge2_a: Jedno z riešení je ísť cik-cakovo. Ďalší
          spôsob je ísť do špirály! Úloha ako táto má veľa možných riešení. Buď vytrvalý!
        courseC_harvester_loops_challenge2_b: Môžeš zopakovať `posuň sa dopredu` a
          `zober šalát` koľkokoľvek krát potrebuješ, potom sa otoč vždy, keď si v
          rohu.
        courseC_harvester_loops_challenge2_c: |-
          Tento cik-cakový vzor zopakuj dva krát na to, aby si úlohu splnil len s pomocou 20 blokov!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          Tento špirálový vzor môže byť nakódovaný len pomocou 18 blokov!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_maze_debugging1:
        courseC_maze_debugging1_a: |-
          -   Funguje všetko po prvom kroku?
          -   Stále všetko funguje aj po druhom kroku?
          -   Kde sa stala chyba?
        courseC_maze_debugging1_b: Na dokončenie tejto úlohy musíš pridať 1 blok.
      courseC_maze_debugging1_2018:
        courseC_maze_debugging1_a: |-
          -   Funguje všetko po prvom kroku?
          -   Stále všetko funguje aj po druhom kroku?
          -   Kde sa stala chyba?
        courseC_maze_debugging1_b: Na dokončenie tejto úlohy musíš pridať 1 blok.
      courseC_maze_debugging1_2019:
        courseC_maze_debugging1_a: |-
          -   Funguje všetko po prvom kroku?
          -   Stále všetko funguje aj po druhom kroku?
          -   Kde sa stala chyba?
        courseC_maze_debugging1_b: Na dokončenie tejto úlohy musíš pridať 1 blok.
      courseC_maze_debugging2:
        courseC_maze_debugging2_a: Na pracovnej ploche už máš veľa užitočného kódu.  Nezmaž
          ho všetok a nezačínaj odznova!
        courseC_maze_debugging2_b: |-
          -   Funguje všetko po prvom kroku?
          -   Stále všetko funguje aj po druhom kroku?
          -   Kde sa stala chyba?
        courseC_maze_debugging2_c: Nevieš prísť nato, kde nastala chyba? Skús spusiť
          kód niekoľko krát a sleduj, čo sa stane.
      courseC_maze_debugging2_2018:
        courseC_maze_debugging2_a: Na pracovnej ploche už máš veľa užitočného kódu.  Nezmaž
          ho všetok a nezačínaj odznova!
        courseC_maze_debugging2_b: |-
          -   Funguje všetko po prvom kroku?
          -   Stále všetko funguje aj po druhom kroku?
          -   Kde sa stala chyba?
        courseC_maze_debugging2_c: Nevieš prísť nato, kde nastala chyba? Skús spusiť
          kód niekoľko krát a sleduj, čo sa stane.
      courseC_maze_debugging2_2019:
        courseC_maze_debugging2_a: Na pracovnej ploche už máš veľa užitočného kódu.  Nezmaž
          ho všetok a nezačínaj odznova!
        courseC_maze_debugging2_b: |-
          -   Funguje všetko po prvom kroku?
          -   Stále všetko funguje aj po druhom kroku?
          -   Kde sa stala chyba?
        courseC_maze_debugging2_c: Nevieš prísť nato, kde nastala chyba? Skús spusiť
          kód niekoľko krát a sleduj, čo sa stane.
      courseC_maze_debugging3:
        courseC_maze_debugging3_a: |-
          Keď potrebuješ vymazať blok zo stredu kódu najprv odpoj bloky, ktoré sa nachádzajú pod ním a odlož ich nabok.
          Potom zahoď blok, ktorý chceš vymazať späť do panela s nástrojmi.
          Nakoniec presuň odpojené bloky späť tam, kam patria.

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Nevieš prísť nato, kde nastala chyba? Skús spusiť
          kód niekoľko krát a sleduj, čo sa stane.
      courseC_maze_debugging3_2018:
        courseC_maze_debugging3_a: |-
          Keď potrebuješ vymazať blok zo stredu kódu najprv odpoj bloky, ktoré sa nachádzajú pod ním a odlož ich nabok.
          Potom zahoď blok, ktorý chceš vymazať späť do panela s nástrojmi.
          Nakoniec presuň odpojené bloky späť tam, kam patria.

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Nevieš prísť nato, kde nastala chyba? Skús spusiť
          kód niekoľko krát a sleduj, čo sa stane.
      courseC_maze_debugging3_2019:
        courseC_maze_debugging3_a: |-
          Keď potrebuješ vymazať blok zo stredu kódu najprv odpoj bloky, ktoré sa nachádzajú pod ním a odlož ich nabok.
          Potom zahoď blok, ktorý chceš vymazať späť do panela s nástrojmi.
          Nakoniec presuň odpojené bloky späť tam, kam patria.

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Nevieš prísť nato, kde nastala chyba? Skús spusiť
          kód niekoľko krát a sleduj, čo sa stane.
      courseC_maze_debugging4:
        courseC_maze_debugging4_a: Pomocou tlačidla "Krok" posunieš program vždy len
          o jeden blok. Pomohlo ti to nájsť riadok, v ktorom sa stala chyba?
        courseC_maze_debugging4_b: Jedno z otočení posiela Scrata nesprávnym smerom.
          Dokážeš zistiť, ktoré z nich to je?
      courseC_maze_debugging4_2018:
        courseC_maze_debugging4_a: Pomocou tlačidla "Krok" posunieš program vždy len
          o jeden blok. Pomohlo ti to nájsť riadok, v ktorom sa stala chyba?
        courseC_maze_debugging4_b: Jedno z otočení posiela Scrata nesprávnym smerom.
          Dokážeš zistiť, ktoré z nich to je?
      courseC_maze_debugging4_2019:
        courseC_maze_debugging4_a: Pomocou tlačidla "Krok" posunieš program vždy len
          o jeden blok. Pomohlo ti to nájsť riadok, v ktorom sa stala chyba?
        courseC_maze_debugging4_b: Jedno z otočení posiela Scrata nesprávnym smerom.
          Dokážeš zistiť, ktoré z nich to je?
      courseC_maze_debugging5:
        courseC_maze_debugging5_a: "V pracovnom priestore už máš veľa užitočných blokov.
          \ Neodstraňuj ich všetky! \n\nPomocou tlačidla \"Krok\" prejdi kódom blok
          po bloku a zisti, kde nastala chyba."
        courseC_maze_debugging5_b: Skús si nahlas povedať, čo by mal Scrat urobiť.
          Je to rovnaké ako tvoj kód? Nastane niekde chyba?
      courseC_maze_debugging5_2018:
        courseC_maze_debugging5_a: "V pracovnom priestore už máš veľa užitočných blokov.
          \ Neodstraňuj ich všetky! \n\nPomocou tlačidla \"Krok\" prejdi kódom blok
          po bloku a zisti, kde nastala chyba."
        courseC_maze_debugging5_c: Smer bloku "otoč sa" dokážeš zmeniť tak, že klikneš
          na šípku nadol, ktorá ti rozbalí možnosti.
        courseC_maze_debugging5_b: Skús si nahlas povedať, čo by mal Scrat urobiť.
          Je to rovnaké ako tvoj kód? Nastane niekde chyba?
      courseC_maze_debugging5_2019:
        courseC_maze_debugging5_a: "V pracovnom priestore už máš veľa užitočných blokov.
          \ Neodstraňuj ich všetky! \n\nPomocou tlačidla \"Krok\" prejdi kódom blok
          po bloku a zisti, kde nastala chyba."
        courseC_maze_debugging5_c: Smer bloku "otoč sa" dokážeš zmeniť tak, že klikneš
          na šípku nadol, ktorá ti rozbalí možnosti.
        courseC_maze_debugging5_b: Skús si nahlas povedať, čo by mal Scrat urobiť.
          Je to rovnaké ako tvoj kód? Nastane niekde chyba?
      courseC_maze_debugging6:
        courseC_maze_debugging6_a: |-
          -   Čo by mal Scrat robiť?
          -   Čo Scrat robí?
          -   Čo ti to prezrádza?
        courseC_maze_debugging6_b: |-
          Keď v programe nájdeš a opravíš prvú chybu, začni s týmto procesom odznovu a vyhľadaj ďalšiu chybu.

          Opakuj to, až kým program nebude fungovať!
      courseC_maze_debugging6_2018:
        courseC_maze_debugging6_a: |-
          -   Čo by mal Scrat robiť?
          -   Čo Scrat robí?
          -   Čo ti to prezrádza?
        courseC_maze_debugging6_b: |-
          Keď v programe nájdeš a opravíš prvú chybu, začni s týmto procesom odznovu a vyhľadaj ďalšiu chybu.

          Opakuj to, až kým program nebude fungovať!
      courseC_maze_debugging6_2019:
        courseC_maze_debugging6_a: |-
          -   Čo by mal Scrat robiť?
          -   Čo Scrat robí?
          -   Čo ti to prezrádza?
        courseC_maze_debugging6_b: |-
          Keď v programe nájdeš a opravíš prvú chybu, začni s týmto procesom odznovu a vyhľadaj ďalšiu chybu.

          Opakuj to, až kým program nebude fungovať!
      courseC_maze_debugging7:
        courseC_maze_debugging7_a: |-
          -   Funguje všetko po prvom kroku?
          -   Stále všetko funguje aj po druhom kroku?
          -   Kde sa stala chyba?
        courseC_maze_debugging7_b: Nezabudni na používanie tlačidla "Krok", keď chceš
          program spustiť riadok po riadku!
        courseC_maze_debugging7_c: |-
          Keď v programe nájdeš a opravíš prvú chybu, začni s týmto procesom odznovu a nájdi aj ďalšiu chybu.

          Opakuj to, až kým program nebude fungovať!
      courseC_maze_debugging7_2018:
        courseC_maze_debugging7_a: |-
          -   Funguje všetko po prvom kroku?
          -   Stále všetko funguje aj po druhom kroku?
          -   Kde sa stala chyba?
        courseC_maze_debugging7_b: Nezabudni na používanie tlačidla "Krok", keď chceš
          program spustiť riadok po riadku!
        courseC_maze_debugging7_c: |-
          Keď v programe nájdeš a opravíš prvú chybu, začni s týmto procesom odznovu a nájdi aj ďalšiu chybu.

          Opakuj to, až kým program nebude fungovať!
      courseC_maze_debugging7_2019:
        courseC_maze_debugging7_a: |-
          -   Funguje všetko po prvom kroku?
          -   Stále všetko funguje aj po druhom kroku?
          -   Kde sa stala chyba?
        courseC_maze_debugging7_b: Nezabudni na používanie tlačidla "Krok", keď chceš
          program spustiť riadok po riadku!
        courseC_maze_debugging7_c: |-
          Keď v programe nájdeš a opravíš prvú chybu, začni s týmto procesom odznovu a nájdi aj ďalšiu chybu.

          Opakuj to, až kým program nebude fungovať!
      courseC_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: Doľava alebo doprava? Záleží len na tebe!
        courseC_maze_debugging_challenge1_b: Scratova cesta má tvar obdĺžnika! Musí
          sa zakaždým otočiť rovnakým smerom.
        courseC_maze_debugging_challenge1_c: Ak sa nevieš pohnúť ďalej, vždy môžeš
          začať znova a nájsť nový spôsob!
      courseC_maze_debugging_challenge1_2018:
        courseC_maze_debugging_challenge1_a: Doľava alebo doprava? Záleží len na tebe!
        courseC_maze_debugging_challenge1_b: Scratova cesta má tvar obdĺžnika! Musí
          sa zakaždým otočiť rovnakým smerom.
        courseC_maze_debugging_challenge1_c: Ak sa nevieš pohnúť ďalej, vždy môžeš
          začať znova a nájsť nový spôsob!
      courseC_maze_debugging_challenge1_2019:
        courseC_maze_debugging_challenge1_a: Doľava alebo doprava? Záleží len na tebe!
        courseC_maze_debugging_challenge1_b: Scratova cesta má tvar obdĺžnika! Musí
          sa zakaždým otočiť rovnakým smerom.
        courseC_maze_debugging_challenge1_c: Ak sa nevieš pohnúť ďalej, vždy môžeš
          začať znova a nájsť nový spôsob!
      courseC_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_b: Ak sa nevieš pohnúť ďalej, skús nájsť
          a odstrániť chyby v programe. Kde sa stala chyba?
        courseC_maze_debugging_challenge2_c: |-
          Existujú dve rôzne cesty, ktorými sa môžeš vybrať tak, že použiješ len blok "posuň sa dopredu" a štyroch otočenia. Ak nájdeš spôsob, ako použiť blok "opakuj", môže ich byť ešte viac!

          ! \[] (<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05> PM.png)
      courseC_maze_debugging_challenge2_2018:
        courseC_maze_debugging_challenge2_b: Ak sa nevieš pohnúť ďalej, skús nájsť
          a odstrániť chyby v programe. Kde sa stala chyba?
        courseC_maze_debugging_challenge2_c: |-
          Existujú dve rôzne cesty, ktorými sa môžeš vybrať tak, že použiješ len blok "posuň sa dopredu" a štyroch otočenia. Ak nájdeš spôsob, ako použiť blok "opakuj", môže ich byť ešte viac!

          ! \[] (<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05> PM.png)
      courseC_maze_debugging_challenge2_2019:
        courseC_maze_debugging_challenge2_b: Ak sa nevieš pohnúť ďalej, skús nájsť
          a odstrániť chyby v programe. Kde sa stala chyba?
        courseC_maze_debugging_challenge2_c: |-
          Existujú dve rôzne cesty, ktorými sa môžeš vybrať tak, že použiješ len blok "posuň sa dopredu" a štyroch otočenia. Ak nájdeš spôsob, ako použiť blok "opakuj", môže ich byť ešte viac!

          ! \[] (<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05> PM.png)
      courseC_maze_loops_challenge1a:
        courseC_maze_loops_challenge1_a: Pomysli si na túto cestu ako na 2 osobitné
          časti. Každá z nich má nejaký vzorec, ktorý sa opakuje.
        courseC_maze_loops_challenge1_b: Pamätáš sa ako použiť cykly na opakovanie
          vzorca schodisko?
      courseC_maze_loops_challenge1a_2018:
        courseC_maze_loops_challenge1_a: Pomysli si na túto cestu ako na 2 osobitné
          časti. Každá z nich má nejaký vzorec, ktorý sa opakuje.
        courseC_maze_loops_challenge1_b: Pamätáš sa ako použiť cykly na opakovanie
          vzorca schodisko?
      courseC_maze_loops_challenge1a_2019:
        courseC_maze_loops_challenge1_a: Pomysli si na túto cestu ako na 2 osobitné
          časti. Každá z nich má nejaký vzorec, ktorý sa opakuje.
        courseC_maze_loops_challenge1_b: Pamätáš sa ako použiť cykly na opakovanie
          vzorca schodisko?
      courseC_maze_programming1:
        courseC_maze_programming1_0: Uisti sa, že sú bloky dobre pospájané a ešte
          raz stlač "Spustiť".
      courseC_maze_programming1_2018:
        courseC_maze_programming1_0: Uisti sa, že sú bloky dobre pospájané a ešte
          raz stlač "Spustiť".
      courseC_maze_programming1_2019:
        courseC_maze_programming1_0: Uisti sa, že sú bloky dobre pospájané a ešte
          raz stlač "Spustiť".
      courseC_maze_programming2:
        courseC_maze_programming2_a: Blok <xml><block type="maze_moveForward"/></xml>
          použiješ tak, že ho vytiahneš z panela nástrojov a pripojíš ku bloku <xml><block
          type="when_run"/></xml>.
        courseC_maze_programming2_b: Uisti sa, že sú bloky dobre pospájané a ešte
          raz stlač "Spustiť".
      courseC_maze_programming2_2018:
        courseC_maze_programming2_a: Blok <xml><block type="maze_moveForward"/></xml>
          použiješ tak, že ho vytiahneš z panela nástrojov a pripojíš ku bloku <xml><block
          type="when_run"/></xml>.
        courseC_maze_programming2_b: Uisti sa, že sú bloky dobre pospájané a ešte
          raz stlač "Spustiť".
      courseC_maze_programming2_2019:
        courseC_maze_programming2_a: Blok <xml><block type="maze_moveForward"/></xml>
          použiješ tak, že ho vytiahneš z panela nástrojov a pripojíš ku bloku <xml><block
          type="when_run"/></xml>.
        courseC_maze_programming2_b: Uisti sa, že sú bloky dobre pospájané a ešte
          raz stlač "Spustiť".
      courseC_maze_programming3:
        courseC_maze_programming3_a: Skús najprv kód spustiť, aby si uvidel, kde robí
          chybu.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Ak chceš vymazať jeden blok zo stredu svojho kódu, potiahni všetky bloky nakraj svojej pracovnej plochy.

          Potiahni blok, ktorý chceš odstrániť naspäť do panela nástrojov.

          Nakoniec vráť ostatné bloky tam kde patria.
      courseC_maze_programming3_2018:
        courseC_maze_programming3_a: Skús najprv kód spustiť, aby si uvidel, kde robí
          chybu.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Ak chceš vymazať jeden blok zo stredu svojho kódu, potiahni všetky bloky nakraj svojej pracovnej plochy.

          Potiahni blok, ktorý chceš odstrániť naspäť do panela nástrojov.

          Nakoniec vráť ostatné bloky tam kde patria.
      courseC_maze_programming3_2019:
        courseC_maze_programming3_a: Skús najprv kód spustiť, aby si uvidel, kde robí
          chybu.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Ak chceš vymazať jeden blok zo stredu svojho kódu, potiahni všetky bloky nakraj svojej pracovnej plochy.

          Potiahni blok, ktorý chceš odstrániť naspäť do panela nástrojov.

          Nakoniec vráť ostatné bloky tam kde patria.
      courseC_maze_programming4:
        courseC_maze_programming4_a: Pamätaj, že keď sa otáčaš, robíš to z pohľadu
          _vtáka_. Ak sa otočíš vpravo, vták bude sa otočí smerom dole.
        courseC_maze_programming4_b: |-
          Nasleduj túto cestu:

          -   posuň sa dopredu
          -   otoč sa jedným smerom
          -   posuň sa dopredu
          -   otoč sa druhým smerom
          -   posuň sa dopredu
      courseC_maze_programming4_2018:
        courseC_maze_programming4_a: Pamätaj, že keď sa otáčaš, robíš to z pohľadu
          _vtáka_. Ak sa otočíš vpravo, vták bude sa otočí smerom dole.
        courseC_maze_programming4_b: |-
          Nasleduj túto cestu:

          -   posuň sa dopredu
          -   otoč sa jedným smerom
          -   posuň sa dopredu
          -   otoč sa druhým smerom
          -   posuň sa dopredu
      courseC_maze_programming4_2019:
        courseC_maze_programming4_a: Pamätaj, že keď sa otáčaš, robíš to z pohľadu
          _vtáka_. Ak sa otočíš vpravo, vták bude sa otočí smerom dole.
        courseC_maze_programming4_b: |-
          Nasleduj túto cestu:

          -   posuň sa dopredu
          -   otoč sa jedným smerom
          -   posuň sa dopredu
          -   otoč sa druhým smerom
          -   posuň sa dopredu
      courseC_maze_programming5:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Na splnenie úlohy sa vták musí jeden krát otočiť.
          Podarí sa ti zistiť, ktorým smerom?
        courseC_maze_programming5_c: V riešení použiješ dva bloky `posuň sa dopredu`,
          otočku a znovu dva bloky `posuň sa dopredu`.
      courseC_maze_programming5_2018:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Na splnenie úlohy sa vták musí jeden krát otočiť.
          Podarí sa ti zistiť, ktorým smerom?
        courseC_maze_programming5_c: V riešení použiješ dva bloky `posuň sa dopredu`,
          otočku a znovu dva bloky `posuň sa dopredu`.
      courseC_maze_programming5_2019:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Na splnenie úlohy sa vták musí jeden krát otočiť.
          Podarí sa ti zistiť, ktorým smerom?
        courseC_maze_programming5_c: V riešení použiješ dva bloky `posuň sa dopredu`,
          otočku a znovu dva bloky `posuň sa dopredu`.
      courseC_maze_programming6:
        courseC_maze_programming6_a: Sú dve možnosti ako vyriešiť túto úlohu!
        courseC_maze_programming6_b: Prejdi si cestu od vtáka ku prasiatku pomocou
          prsta. Aké kroky musíš spraviť?
        courseC_maze_programming6_c: Pamätaj, že sa musíš najprv otočiť, keďže na
          začiatku je vták otočený smerom k stene.
        courseC_maze_programming6_d: Stále nevieš ako na to? Pozri na túto cestu!
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: Sú dve možnosti ako vyriešiť túto úlohu!
        courseC_maze_programming6_b: Prejdi si cestu od vtáka ku prasiatku pomocou
          prsta. Aké kroky musíš spraviť?
        courseC_maze_programming6_c: Pamätaj, že sa musíš najprv otočiť, keďže na
          začiatku je vták otočený smerom k stene.
        courseC_maze_programming6_d: Stále nevieš ako na to? Pozri na túto cestu!
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: Sú dve možnosti ako vyriešiť túto úlohu!
        courseC_maze_programming6_b: Prejdi si cestu od vtáka ku prasiatku pomocou
          prsta. Aké kroky musíš spraviť?
        courseC_maze_programming6_c: Pamätaj, že sa musíš najprv otočiť, keďže na
          začiatku je vták otočený smerom k stene.
        courseC_maze_programming6_d: Stále nevieš ako na to? Pozri na túto cestu!
      courseC_maze_programming7:
        courseC_maze_programming7_a: Nezabudli používať tlačidlo "Krok". Pomôže ti
          prejsť bludiskom krok po kroku a nájsť chyby.
        courseC_maze_programming7_b: Ak stále nevieš úlohu vyriešiť, skús si kroky
          najprv zapísať na kúsok papiera.
      courseC_maze_programming7_2018:
        courseC_maze_programming7_a: Nezabudli používať tlačidlo "Krok". Pomôže ti
          prejsť bludiskom krok po kroku a nájsť chyby.
        courseC_maze_programming7_b: Ak stále nevieš úlohu vyriešiť, skús si kroky
          najprv zapísať na kúsok papiera.
      courseC_maze_programming7_2019:
        courseC_maze_programming7_a: Nezabudli používať tlačidlo "Krok". Pomôže ti
          prejsť bludiskom krok po kroku a nájsť chyby.
        courseC_maze_programming7_b: Ak stále nevieš úlohu vyriešiť, skús si kroky
          najprv zapísať na kúsok papiera.
      courseC_maze_programming8:
        courseC_maze_programming8_a: Ak nevieš, ako ďalej, použi tlačidlo "Krok" a
          prezri si svoj kód riadok po riadku.
        courseC_maze_programming8_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_maze_programming8_2018:
        courseC_maze_programming8_a: Ak nevieš, ako ďalej, použi tlačidlo "Krok" a
          prezri si svoj kód riadok po riadku.
        courseC_maze_programming8_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_maze_programming8_2019:
        courseC_maze_programming8_a: Ak nevieš, ako ďalej, použi tlačidlo "Krok" a
          prezri si svoj kód riadok po riadku.
        courseC_maze_programming8_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_maze_programming_challenge1:
        courseC_maze_programming_challenge1_a: Je veľa spôsobov ako sa dostať k prasiatku.
          Skús najprv prstom nájsť cestu a potom ju naprogramuj!
      courseC_maze_programming_challenge1_2018:
        courseC_maze_programming_challenge1_a: Je veľa spôsobov ako sa dostať k prasiatku.
          Skús najprv prstom nájsť cestu a potom ju naprogramuj!
      courseC_maze_programming_challenge1_2019:
        courseC_maze_programming_challenge1_a: Je veľa spôsobov ako sa dostať k prasiatku.
          Skús najprv prstom nájsť cestu a potom ju naprogramuj!
      courseC_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _"Ak ma necháš cúvať, uisti sa, že
          zabočím správnym smerom!"_
        courseC_maze_programming_challenge2_b: |-
          Najkratšie riešenie má len 5 blokov, ale obsahuje tento blok:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018:
        courseC_maze_programming_challenge2_a: _"Ak ma necháš cúvať, uisti sa, že
          zabočím správnym smerom!"_
        courseC_maze_programming_challenge2_b: |-
          Najkratšie riešenie má len 5 blokov, ale obsahuje tento blok:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2019:
        courseC_maze_programming_challenge2_a: _"Ak ma necháš cúvať, uisti sa, že
          zabočím správnym smerom!"_
        courseC_maze_programming_challenge2_b: |-
          Najkratšie riešenie má len 5 blokov, ale obsahuje tento blok:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_starWars_loops1:
        courseC_starWars_loops1_a: Keď BB-8 prejde cez šrot, automaticky ho zoberie.
        courseC_starWars_loops1_b: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_starWars_loops1_c: Na vyriešenie tejto úlohy použi blok `posuň sa
          dopredu` 5 krát.
      courseC_starWars_loops10:
        courseC_starWars_loops10_a: Nevyzerá tento vzor ako obrovské schody? Skús
          využiť skúsenosti z predchádzajúcich cvičení a daj si pozor na správne otočky.
        courseC_starWars_loops10_b: "Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus `opakuj` do vnútra iného cyklu! \nToto sa nazýva **vnorený cyklus**."
        courseC_starWars_loops10_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_starWars_loops10_2018:
        courseC_starWars_loops10_a: Nevyzerá tento vzor ako obrovské schody? Skús
          využiť skúsenosti z predchádzajúcich cvičení a daj si pozor na správne otočky.
        courseC_starWars_loops10_b: "Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus `opakuj` do vnútra iného cyklu! \nToto sa nazýva **vnorený cyklus**."
        courseC_starWars_loops10_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_starWars_loops10_2019:
        courseC_starWars_loops10_a: Nevyzerá tento vzor ako obrovské schody? Skús
          využiť skúsenosti z predchádzajúcich cvičení a daj si pozor na správne otočky.
        courseC_starWars_loops10_b: "Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus `opakuj` do vnútra iného cyklu! \nToto sa nazýva **vnorený cyklus**."
        courseC_starWars_loops10_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_starWars_loops1_2018:
        courseC_starWars_loops1_a: Keď BB-8 prejde cez šrot, automaticky ho zoberie.
        courseC_starWars_loops1_b: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_starWars_loops1_c: Na vyriešenie tejto úlohy použi blok `posuň sa
          dopredu` 5 krát.
      courseC_starWars_loops1_2019:
        courseC_starWars_loops1_a: Keď BB-8 prejde cez šrot, automaticky ho zoberie.
        courseC_starWars_loops1_b: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseC_starWars_loops1_c: Na vyriešenie tejto úlohy použi blok `posuň sa
          dopredu` 5 krát.
      courseC_starWars_loops2:
        courseC_starWars_loops2_a: Na opakovanie kódu vytiahni cyklus `opakuj`, a
          potom vlož dovnútra blok, ktorý chceš.
      courseC_starWars_loops2_2018:
        courseC_starWars_loops2_a: Na opakovanie kódu vytiahni cyklus `opakuj`, a
          potom vlož dovnútra blok, ktorý chceš.
      courseC_starWars_loops2_2019:
        courseC_starWars_loops2_a: Na opakovanie kódu vytiahni cyklus `opakuj`, a
          potom vlož dovnútra blok, ktorý chceš.
      courseC_starWars_loops2_copy:
        courseC_starWars_loops2_a: Na opakovanie kódu vytiahni cyklus `opakuj`, a
          potom vlož dovnútra blok, ktorý chceš.
      courseC_starWars_loops4:
        courseC_starWars_loops4_c: Stlačením malej šípky vedľa slova "vľavo" na bloku
          otoč sa, zmeníš smer na "vpravo".
        courseC_starWars_loops4_a: Použi dva bloky `opakuj`.
        courseC_starWars_loops4_b: 'Každý cyklus `opakuj` bude mať vo vnútri len jeden
          príkaz: `posuň sa dopredu`.'
      courseC_starWars_loops4_2018:
        courseC_starWars_loops4_c: Stlačením malej šípky vedľa slova "vľavo" na bloku
          otoč sa, zmeníš smer na "vpravo".
        courseC_starWars_loops4_a: Použi dva bloky `opakuj`.
        courseC_starWars_loops4_b: 'Každý cyklus `opakuj` bude mať vo vnútri len jeden
          príkaz: `posuň sa dopredu`.'
      courseC_starWars_loops4_2019:
        courseC_starWars_loops4_c: Stlačením malej šípky vedľa slova "vľavo" na bloku
          otoč sa, zmeníš smer na "vpravo".
        courseC_starWars_loops4_a: Použi dva bloky `opakuj`.
        courseC_starWars_loops4_b: 'Každý cyklus `opakuj` bude mať vo vnútri len jeden
          príkaz: `posuň sa dopredu`.'
      courseC_starWars_loops4_copy:
        courseC_starWars_loops4_c: Stlačením malej šípky vedľa slova "vľavo" na bloku
          otoč sa, zmeníš smer na "vpravo".
        courseC_starWars_loops4_a: Použi dva bloky `opakuj`.
        courseC_starWars_loops4_b: 'Každý cyklus `opakuj` bude mať vo vnútri len jeden
          príkaz: `posuň sa dopredu`.'
      courseC_starWars_loops5:
        courseC_starWars_loops5_b: Ak chceš ísť dole musíš sa najprv otočiť a potom
          pohnúť dopredu.
        courseC_starWars_loops5_a: V najlepšom riešení použiješ otoč sa, potom jeden
          blok `posuň sa dopredu`, znova otoč sa a potom cyklus.
      courseC_starWars_loops5_2018:
        courseC_starWars_loops5_a: Najlepší výsledok dosiahneš cez jeden príkaz `posuň
          sa dopredu`, potom príkaz otočiť, a potom cyklus.
      courseC_starWars_loops5_2019:
        courseC_starWars_loops5_a: Najlepší výsledok dosiahneš cez jeden príkaz `posuň
          sa dopredu`, potom príkaz otočiť, a potom cyklus.
      courseC_starWars_loops5_copy:
        courseC_starWars_loops5_b: Ak chceš ísť dole musíš sa najprv otočiť a potom
          pohnúť dopredu.
        courseC_starWars_loops5_a: V najlepšom riešení použiješ otoč sa, potom jeden
          blok `posuň sa dopredu`, znova otoč sa a potom cyklus.
      courseC_starWars_loops6:
        courseC_starWars_loops6_a: Zapíš si všetky kroky na papier a skús nájsť skupinu
          krokov, ktorá sa opakuje.
        courseC_starWars_loops6_b: "Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus `opakuj` do vnútra iného cyklu! \nToto sa nazýva **vnorený cyklus**."
      courseC_starWars_loops6_2018:
        courseC_starWars_loops6_a: Zapíš si všetky kroky na papier a skús nájsť skupinu
          krokov, ktorá sa opakuje.
        courseC_starWars_loops6_b: "Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus `opakuj` do vnútra iného cyklu! \nToto sa nazýva **vnorený cyklus**."
      courseC_starWars_loops6_2019:
        courseC_starWars_loops6_a: Zapíš si všetky kroky na papier a skús nájsť skupinu
          krokov, ktorá sa opakuje.
        courseC_starWars_loops6_b: "Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus `opakuj` do vnútra iného cyklu! \nToto sa nazýva **vnorený cyklus**."
      courseC_starWars_loops6_copy:
        courseC_starWars_loops6_a: Zapíš si všetky kroky na papier a skús nájsť skupinu
          krokov, ktorá sa opakuje.
        courseC_starWars_loops6_b: "Ak chceš použiť menej kódu, môžeš vložiť jeden
          cyklus `opakuj` do vnútra iného cyklu! \nToto sa nazýva **vnorený cyklus**."
      courseC_starWars_loops7:
        courseC_starWars_loops7_a: Tento vzor je jednoduchší. ako sa zdá! Začni jedným
          schodom. Pokryje to všetok šrot?
        courseC_starWars_loops7_b: Ak máš s touto úlohou problémy, zapíš si všetky
          kroky na papier a skús nájsť skupinu krokov, ktorá sa opakuje.
        courseC_starWars_loops7_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_starWars_loops7_2018:
        courseC_starWars_loops7_a: Tento vzor je jednoduchší. ako sa zdá! Začni jedným
          schodom. Pokryje to všetok šrot?
        courseC_starWars_loops7_b: Ak máš s touto úlohou problémy, zapíš si všetky
          kroky na papier a skús nájsť skupinu krokov, ktorá sa opakuje.
        courseC_starWars_loops7_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_starWars_loops7_2019:
        courseC_starWars_loops7_a: Tento vzor je jednoduchší. ako sa zdá! Začni jedným
          schodom. Pokryje to všetok šrot?
        courseC_starWars_loops7_b: Ak máš s touto úlohou problémy, zapíš si všetky
          kroky na papier a skús nájsť skupinu krokov, ktorá sa opakuje.
        courseC_starWars_loops7_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_starWars_loops7_copy:
        courseC_starWars_loops7_a: Tento vzor je jednoduchší. ako sa zdá! Začni jedným
          schodom. Pokryje to všetok šrot?
        courseC_starWars_loops7_b: Ak máš s touto úlohou problémy, zapíš si všetky
          kroky na papier a skús nájsť skupinu krokov, ktorá sa opakuje.
        courseC_starWars_loops7_c: 'Neboj sa urobiť chybu! Spusti kód a sleduj, čo
          sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseC_starWars_loops8:
        course_starWars_loops8_a: Skús o probléme premýšľať po častiach. Máš čas,
          nemusíš nájsť riešenie hneď na prvý pokus!
        course_starWars_loops8_b: Prvá časť problému sa podobá úlohe so schodami.
          Ako ju bolo treba riešiť?
        course_starWars_loops8_c: |-
          Pozri na túto cestu.

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2018:
        course_starWars_loops8_a: Skús o probléme premýšľať po častiach. Máš čas,
          nemusíš nájsť riešenie hneď na prvý pokus!
        course_starWars_loops8_b: Prvá časť problému sa podobá úlohe so schodami.
          Ako ju bolo treba riešiť?
        course_starWars_loops8_c: |-
          Pozri na túto cestu.

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2019:
        course_starWars_loops8_a: Skús o probléme premýšľať po častiach. Máš čas,
          nemusíš nájsť riešenie hneď na prvý pokus!
        course_starWars_loops8_b: Prvá časť problému sa podobá úlohe so schodami.
          Ako ju bolo treba riešiť?
        course_starWars_loops8_c: |-
          Pozri na túto cestu.

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_copy:
        course_starWars_loops8_a: Skús o probléme premýšľať po častiach. Máš čas,
          nemusíš nájsť riešenie hneď na prvý pokus!
        course_starWars_loops8_b: Prvá časť problému sa podobá úlohe so schodami.
          Ako ju bolo treba riešiť?
        course_starWars_loops8_c: |-
          Pozri na túto cestu.

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops9:
        course_starWars_loops9_b: Do vnútra bloku `opakuj` môžeš vložiť aj viac blokov.
        course_starWars_loops9_c: |-
          Na vyriešenie tejto úlohy sa nemusíš otočiť vľavo. Všetky tvoje otočenia môžu byť vpravo.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2018:
        course_starWars_loops9_b: Do vnútra bloku `opakuj` môžeš vložiť aj viac blokov.
        course_starWars_loops9_c: |-
          Na vyriešenie tejto úlohy sa nemusíš otočiť vľavo. Všetky tvoje otočenia môžu byť vpravo.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2019:
        course_starWars_loops9_b: Do vnútra bloku `opakuj` môžeš vložiť aj viac blokov.
        course_starWars_loops9_c: |-
          Na vyriešenie tejto úlohy sa nemusíš otočiť vľavo. Všetky tvoje otočenia môžu byť vpravo.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseD_artist_1_2018:
        courseD_artist_project1_a: Použi rozbaľovacie menu na blokoch  `otoč sa` a
          vyber si uhol, ktorý potrebuješ!
        courseD_artist_project1_b: Pamätaj, že `posuň sa dopredu` nakreslí čiaru,
          ale `skoč dopredu` nie.
      courseD_artist_1_2018_2019:
        courseD_artist_project1_a: Použi rozbaľovacie menu na blokoch  `otoč sa` a
          vyber si uhol, ktorý potrebuješ!
        courseD_artist_project1_b: Pamätaj, že `posuň sa dopredu` nakreslí čiaru,
          ale `skoč dopredu` nie.
      courseD_artist_2_2018:
        courseD_artist_project1_b: Pamätaj, že `posuň sa` nakreslí čiaru, ale `skoč`
          nie.
        courseD_artist_project1_a: Použi rozbaľovacie menu na blokoch  `otoč sa` a
          vyber si uhol, ktorý potrebuješ!
      courseD_artist_2_2018_2019:
        courseD_artist_project1_b: Pamätaj, že `posuň sa` nakreslí čiaru, ale `skoč`
          nie.
        courseD_artist_project1_a: Použi rozbaľovacie menu na blokoch  `otoč sa` a
          vyber si uhol, ktorý potrebuješ!
      courseD_artist_5_2018:
        '1': Ak vymieňaš tvary, nezabudni, že musíš vymeniť aj ich uhly!
      courseD_artist_5_2018_2019:
        '1': Ak vymieňaš tvary, nezabudni, že musíš vymeniť aj ich uhly!
      courseD_artist_binary1:
        courseD_artist_binary1_a: Replace the "???" in the text block with the binary
          image you want, in zeroes and ones.
        courseD_artist_binary1_b: The artist will draw a white space for every 1 and
          a black space for every 0.
        courseD_artist_binary1_c: |-
          This is how you can input your binary code:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2018:
        courseD_artist_binary1_a: Replace the "???" in the text block with the binary
          image you want, in zeroes and ones.
        courseD_artist_binary1_b: The artist will draw a white space for every 1 and
          a black space for every 0.
        courseD_artist_binary1_c: |-
          This is how you can input your binary code:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2019:
        courseD_artist_binary1_a: Replace the "???" in the text block with the binary
          image you want, in zeroes and ones.
        courseD_artist_binary1_b: The artist will draw a white space for every 1 and
          a black space for every 0.
        courseD_artist_binary1_c: |-
          This is how you can input your binary code:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary2:
        courseD_artist_binary2_a: Klikni na `Spustiť` a sleduj, čo sa stane!
      courseD_artist_binary2_2018:
        courseD_artist_binary2_a: Klikni na `Spustiť` a sleduj, čo sa stane!
      courseD_artist_binary2_2019:
        courseD_artist_binary2_a: Klikni na `Spustiť` a sleduj, čo sa stane!
      courseD_artist_binary3:
        courseD_artist_binary3_a: 'Úlohu vyriešiš pomocou jednej z postupností nadefinovaných
          v paneli nástrojov. '
        courseD_artist_binary3_b: Neboj sa spraviť chybu! Vyskúšaj jednotlivé možnosti
          a svoj kód spusti aj keď ešte nevieš správnu odpoveď.
      courseD_artist_binary3_2018:
        courseD_artist_binary3_a: 'Úlohu vyriešiš pomocou jednej z postupností nadefinovaných
          v paneli nástrojov. '
        courseD_artist_binary3_b: Neboj sa spraviť chybu! Vyskúšaj jednotlivé možnosti
          a svoj kód spusti aj keď ešte nevieš správnu odpoveď.
      courseD_artist_binary3_2019:
        courseD_artist_binary3_a: 'Úlohu vyriešiš pomocou jednej z postupností nadefinovaných
          v paneli nástrojov. '
        courseD_artist_binary3_b: Neboj sa spraviť chybu! Vyskúšaj jednotlivé možnosti
          a svoj kód spusti aj keď ešte nevieš správnu odpoveď.
      courseD_artist_binary4:
        courseD_artist_binary4_a: Pozri sa na prvé tri štvorce v prvom rade. Myslíš,
          že by sa ich opakovaním dal nakresliť celý vzor?
        courseD_artist_binary4_b: Neboj sa chýb! Napíš kúsok kódu, spusti ho a sleduj,
          čo sa stane. Pomôže ti to aj  vtedy, keď ešte nemáš hotové celé riešenie.
      courseD_artist_binary4_2018:
        courseD_artist_binary4_a: Pozri sa na prvé tri štvorce v prvom rade. Myslíš,
          že by sa ich opakovaním dal nakresliť celý vzor?
        courseD_artist_binary4_b: Neboj sa chýb! Napíš kúsok kódu, spusti ho a sleduj,
          čo sa stane. Pomôže ti to aj  vtedy, keď ešte nemáš hotové celé riešenie.
      courseD_artist_binary4_2019:
        courseD_artist_binary4_a: Pozri sa na prvé tri štvorce v prvom rade. Myslíš,
          že by sa ich opakovaním dal nakresliť celý vzor?
        courseD_artist_binary4_b: Neboj sa chýb! Napíš kúsok kódu, spusti ho a sleduj,
          čo sa stane. Pomôže ti to aj  vtedy, keď ešte nemáš hotové celé riešenie.
      courseD_artist_binary5:
        courseD_artist_binary5_a: Skús si najprv spustiť ponúkaný kód, nech vieš,
          s čím pracuješ.
        courseD_artist_binary5_b: Stačí vymeniť 2 riadky.
        courseD_artist_binary5_c: Ak sa ti stále nedarí, skús si jednotlivé riadky
          nakresliť na papier a riešenie pohľadaj tam.
      courseD_artist_binary5_2018:
        courseD_artist_binary5_a: Skús si najprv spustiť ponúkaný kód, nech vieš,
          s čím pracuješ.
        courseD_artist_binary5_b: Stačí vymeniť 2 riadky.
        courseD_artist_binary5_c: Ak sa ti stále nedarí, skús si jednotlivé riadky
          nakresliť na papier a riešenie pohľadaj tam.
      courseD_artist_binary5_2019:
        courseD_artist_binary5_a: Skús si najprv spustiť ponúkaný kód, nech vieš,
          s čím pracuješ.
        courseD_artist_binary5_b: Stačí vymeniť 2 riadky.
        courseD_artist_binary5_c: Ak sa ti stále nedarí, skús si jednotlivé riadky
          nakresliť na papier a riešenie pohľadaj tam.
      courseD_artist_binary6:
        courseD_artist_binary6_a: Začni vľavo hore a sleduj vzor. Ako ďaleko musíš
          zájsť, aby sa ten vzor začal opakovať?
        courseD_artist_binary6_b: Svoj kód môžeš vybudovať znak po znaku a priebežne
          ho testovať!
      courseD_artist_binary6_2018:
        courseD_artist_binary6_a: Začni vľavo hore a sleduj vzor. Ako ďaleko musíš
          zájsť, aby sa ten vzor začal opakovať?
        courseD_artist_binary6_b: Svoj kód môžeš vybudovať znak po znaku a priebežne
          ho testovať!
      courseD_artist_binary6_2019:
        courseD_artist_binary6_a: Začni vľavo hore a sleduj vzor. Ako ďaleko musíš
          zájsť, aby sa ten vzor začal opakovať?
        courseD_artist_binary6_b: Svoj kód môžeš vybudovať znak po znaku a priebežne
          ho testovať!
      courseD_artist_binary7:
        courseD_artist_binary7_a: Začni vľavo hore a sleduj vzor. Ako ďaleko musíš
          zájsť, aby sa ten vzor začal opakovať?
        courseD_artist_binary7_b: Neboj sa chýb! Napíš kúsok kódu, spusti ho a sleduj,
          čo sa stane. Pomôže ti to aj  vtedy, keď ešte nemáš hotové celé riešenie.
      courseD_artist_binary7_2018:
        courseD_artist_binary7_a: Začni vľavo hore a sleduj vzor. Ako ďaleko musíš
          zájsť, aby sa ten vzor začal opakovať?
        courseD_artist_binary7_b: Neboj sa chýb! Napíš kúsok kódu, spusti ho a sleduj,
          čo sa stane. Pomôže ti to aj  vtedy, keď ešte nemáš hotové celé riešenie.
      courseD_artist_binary7_2019:
        courseD_artist_binary7_a: Začni vľavo hore a sleduj vzor. Ako ďaleko musíš
          zájsť, aby sa ten vzor začal opakovať?
        courseD_artist_binary7_b: Neboj sa chýb! Napíš kúsok kódu, spusti ho a sleduj,
          čo sa stane. Pomôže ti to aj  vtedy, keď ešte nemáš hotové celé riešenie.
      courseD_artist_binary8:
        courseD_artist_binary8_a: Tá špirála ťa možno zmiatla. V tomto cvičení si
          musíš oddeliť jednotlivé riadky a vzor kresliť riadok po riadku.
        courseD_artist_binary8_b: Skús si najprv spustiť ponúkaný kód, nech vieš,
          s čím pracuješ.
        courseD_artist_binary8_c: Neboj sa spraviť chybu! Vyskúšaj jednotlivé možnosti
          a svoj kód spusti aj keď ešte nevieš správnu odpoveď.
      courseD_artist_binary8_2018:
        courseD_artist_binary8_a: Tá špirála ťa možno zmiatla. V tomto cvičení si
          musíš oddeliť jednotlivé riadky a vzor kresliť riadok po riadku.
        courseD_artist_binary8_b: Skús si najprv spustiť ponúkaný kód, nech vieš,
          s čím pracuješ.
        courseD_artist_binary8_c: Neboj sa spraviť chybu! Vyskúšaj jednotlivé možnosti
          a svoj kód spusti aj keď ešte nevieš správnu odpoveď.
      courseD_artist_binary8_2019:
        courseD_artist_binary8_a: Tá špirála ťa možno zmiatla. V tomto cvičení si
          musíš oddeliť jednotlivé riadky a vzor kresliť riadok po riadku.
        courseD_artist_binary8_b: Skús si najprv spustiť ponúkaný kód, nech vieš,
          s čím pracuješ.
        courseD_artist_binary8_c: Neboj sa spraviť chybu! Vyskúšaj jednotlivé možnosti
          a svoj kód spusti aj keď ešte nevieš správnu odpoveď.
      courseD_artist_binary_challenge2_2018:
        courseD_artist_binary_challenge2_a: V pôvodnom kóde je potrebné opraviť len
          pár riadkov.
      courseD_artist_binary_challenge2_2019:
        courseD_artist_binary_challenge2_a: V pôvodnom kóde je potrebné opraviť len
          pár riadkov.
      courseD_artist_nestedLoops1:
        courseD_artist_nestedLoops1_a: Najjednoduchší spôsob, ako nakresliť obrázok
          je posúvať sa dopredu a otáčať sa vpravo.
        courseD_artist_nestedLoops1_b: Trojuholník môžeš nakresliť pomocou bloku `opakuj`
          s dvomi blokmi v jeho vnútri. Ktoré bloky použiješ?
        courseD_artist_nestedLoops1_c: Skús si napísať príkazy na papier a hľadaj
          vzory, ktoré sa dajú zjednodušiť opakovaním.
      courseD_artist_nestedLoops1_2018:
        courseD_artist_nestedLoops1_a: Najjednoduchší spôsob, ako nakresliť obrázok
          je posúvať sa dopredu a otáčať sa vpravo.
        courseD_artist_nestedLoops1_b: Trojuholník môžeš nakresliť pomocou bloku `opakuj`
          s dvomi blokmi v jeho vnútri. Ktoré bloky použiješ?
        courseD_artist_nestedLoops1_c: Skús si napísať príkazy na papier a hľadaj
          vzory, ktoré sa dajú zjednodušiť opakovaním.
      courseD_artist_nestedLoops1_2019:
        courseD_artist_nestedLoops1_a: Najjednoduchší spôsob, ako nakresliť obrázok
          je posúvať sa dopredu a otáčať sa vpravo.
        courseD_artist_nestedLoops1_b: Trojuholník môžeš nakresliť pomocou bloku `opakuj`
          s dvomi blokmi v jeho vnútri. Ktoré bloky použiješ?
        courseD_artist_nestedLoops1_c: Skús si napísať príkazy na papier a hľadaj
          vzory, ktoré sa dajú zjednodušiť opakovaním.
      courseD_artist_nestedLoops1a:
        courseD_artist_nestedLoops1a_a: |-
          Musíš nakresliť dokopy 6 trojuholníkov. Po dokončení každého trojuholníka sa otoč o 60 stupňov a skoč na začiatok ďalšieho.

          ! \[] (<https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif>)
        courseD_artist_nestedLoops1a_b: Ak vytvoríš trojuholník opakovaním, umelec
          by mal skončiť natočený smerom k ďalšiemu trojuholníku, ako na začiatku.
          Tak sa budú robiť 60 stupňové otočky oveľa lahšie.
        courseD_artist_nestedLoops1a_c: Ak chceš meniť farby, použi blok `nastav farbu`
          vo svojom kóde. Nemusíš použiť tie isté farby, aké sú na predlohe.
      courseD_artist_nestedLoops1a_2018:
        courseD_artist_nestedLoops1a_a: |-
          Musíš nakresliť dokopy 6 trojuholníkov (rada: na začiatok použi kód z predchádzajúcej úlohy). Po dokončení každého trojuholníka sa otoč o 60 stupňov a skoč na začiatok ďalšieho.

          ! \[] (<https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif>)
        courseD_artist_nestedLoops1a_b: Ak vytvoríš trojuholník opakovaním, umelec
          by mal skončiť natočený smerom k ďalšiemu trojuholníku, ako na začiatku.
          Tak sa budú robiť 60 stupňové otočky oveľa lahšie.
        courseD_artist_nestedLoops1a_c: Ak chceš meniť farby, použi blok `nastav farbu`
          vo svojom kóde. Nemusíš použiť tie isté farby, aké sú na predlohe.
      courseD_artist_nestedLoops1a_2019:
        courseD_artist_nestedLoops1a_a: |-
          Musíš nakresliť dokopy 6 trojuholníkov. Po dokončení každého trojuholníka sa otoč o 60 stupňov a skoč na začiatok ďalšieho.

          ! \[] (<https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif>)
        courseD_artist_nestedLoops1a_b: Ak vytvoríš trojuholník opakovaním, umelec
          by mal skončiť natočený smerom k ďalšiemu trojuholníku, ako na začiatku.
          Tak sa budú robiť 60 stupňové otočky oveľa lahšie.
        courseD_artist_nestedLoops1a_c: Ak chceš meniť farby, použi blok `nastav farbu`
          vo svojom kóde. Nemusíš použiť tie isté farby, aké sú na predlohe.
      courseD_artist_nestedLoops2:
        courseD_artist_nestedLoops2_a: Vytvor vnorený cyklus tak, že svoj trojuholník
          vložíš do dalšieho bloku`opakuj`.
        courseD_artist_nestedLoops2_b: Nezabudni vložiť blok `otoč sa` dovnútra cyklu
          tak, aby sa umelec otočil po dokončení každého trojuholníka.
      courseD_artist_nestedLoops2_2018:
        courseD_artist_nestedLoops2_a: Vytvor vnorený cyklus tak, že svoj trojuholník
          vložíš do dalšieho bloku`opakuj`.
        courseD_artist_nestedLoops2_b: Nezabudni vložiť blok `otoč sa` dovnútra cyklu
          tak, aby sa umelec otočil po dokončení každého trojuholníka.
      courseD_artist_nestedLoops2_2019:
        courseD_artist_nestedLoops2_a: Vytvor vnorený cyklus tak, že svoj trojuholník
          vložíš do dalšieho bloku`opakuj`.
        courseD_artist_nestedLoops2_b: Nezabudni vložiť blok `otoč sa` dovnútra cyklu
          tak, aby sa umelec otočil po dokončení každého trojuholníka.
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: "Skoč z vrchného štvorca na začiatok ďalšieho
          pomocou bloku `skoč dopredu`. \n\nAk má každý štvorec 20 pixelov a štvorce
          sú 20 pixelov od seba, o koľko musíš skočiť?"
        courseD_artist_nestedLoops3_b: 'Nezabudnite použiť vnorené cykly na rýchle
          vyriešenie úlohy. '
        courseD_artist_nestedLoops3_c: 'Na vyrobenie jedného štvorca použi blok `opakuj`.
          Potom to 8 krát zopakuj a medzi štvorcami skáč o 40 pixelov. '
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: "Skoč z vrchného štvorca na začiatok ďalšieho
          pomocou bloku `skoč dopredu`. \n\nAk má každý štvorec 20 pixelov a štvorce
          sú 20 pixelov od seba, o koľko musíš skočiť?"
        courseD_artist_nestedLoops3_b: 'Nezabudnite použiť vnorené cykly na rýchle
          vyriešenie úlohy. '
        courseD_artist_nestedLoops3_c: 'Na vyrobenie jedného štvorca použi blok `opakuj`.
          Potom to 8 krát zopakuj a medzi štvorcami skáč o 40 pixelov. '
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: "Skoč z vrchného štvorca na začiatok ďalšieho
          pomocou bloku `skoč dopredu`. \n\nAk má každý štvorec 20 pixelov a štvorce
          sú 20 pixelov od seba, o koľko musíš skočiť?"
        courseD_artist_nestedLoops3_b: 'Nezabudnite použiť vnorené cykly na rýchle
          vyriešenie úlohy. '
        courseD_artist_nestedLoops3_c: 'Na vyrobenie jedného štvorca použi blok `opakuj`.
          Potom to 8 krát zopakuj a medzi štvorcami skáč o 40 pixelov. '
      courseD_artist_nestedLoops4:
        courseD_artist_nestedLoops4_d: Na správne vyriešenie sa musíš **pred** otáčaním
          najskôr posunúť, inak nakreslíš kruhy kúsok vedľa!
        courseD_artist_nestedLoops4_a: |-
          Aby si nakreslil kruh:

          -   Opakuj 360 krát
          -   Posuň sa dopredu o 1 pixel
          -   Otoč sa vľavo o 1 stupeň
        courseD_artist_nestedLoops4_b: Nezabúdaj skákať dopredu o 50 pixelov po každom
          kruhu.
        courseD_artist_nestedLoops4_c: Použi vnorené cykly na nakreslenie týchto 4
          kruhov.
      courseD_artist_nestedLoops4_2018:
        courseD_artist_nestedLoops4_d: Na správne vyriešenie sa musíš **pred** otáčaním
          najskôr posunúť, inak nakreslíš kruhy kúsok vedľa!
        courseD_artist_nestedLoops4_a: |-
          Aby si nakreslil kruh:

          -   Opakuj 360 krát
          -   Posuň sa dopredu o 1 pixel
          -   Otoč sa vľavo o 1 stupeň
        courseD_artist_nestedLoops4_b: Nezabúdaj skákať dopredu o 50 pixelov po každom
          kruhu.
        courseD_artist_nestedLoops4_c: Použi vnorené cykly na nakreslenie týchto 4
          kruhov.
      courseD_artist_nestedLoops4_2019:
        courseD_artist_nestedLoops4_d: Na správne vyriešenie sa musíš **pred** otáčaním
          najskôr posunúť, inak nakreslíš kruhy kúsok vedľa!
        courseD_artist_nestedLoops4_a: |-
          Aby si nakreslil kruh:

          -   Opakuj 360 krát
          -   Posuň sa dopredu o 1 pixel
          -   Otoč sa vľavo o 1 stupeň
        courseD_artist_nestedLoops4_b: Nezabúdaj skákať dopredu o 50 pixelov po každom
          kruhu.
        courseD_artist_nestedLoops4_c: Použi vnorené cykly na nakreslenie týchto 4
          kruhov.
      courseD_artist_nestedLoops5:
        courseD_artist_nestedLoops5_a: |-
          Urobíš to ľahko takto:

          -   Opakuj 4 krát
          -   Nakresli kruh
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 90 stupňov
        courseD_artist_nestedLoops5_b: Na nakreslenie kruhu musíš nastaviť opakovanie
          na 360 krát. Vnútri každého opakovania sa posuň o 1 pixel a otoč o 1 stupeň.
      courseD_artist_nestedLoops5_2018:
        courseD_artist_nestedLoops5_a: |-
          Urobíš to ľahko takto:

          -   Opakuj 4 krát
          -   Nakresli kruh
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 90 stupňov
        courseD_artist_nestedLoops5_b: Na nakreslenie kruhu musíš nastaviť opakovanie
          na 360 krát. Vnútri každého opakovania sa posuň o 1 pixel a otoč o 1 stupeň.
      courseD_artist_nestedLoops5_2019:
        courseD_artist_nestedLoops5_a: |-
          Urobíš to ľahko takto:

          -   Opakuj 4 krát
          -   Nakresli kruh
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 90 stupňov
        courseD_artist_nestedLoops5_b: Na nakreslenie kruhu musíš nastaviť opakovanie
          na 360 krát. Vnútri každého opakovania sa posuň o 1 pixel a otoč o 1 stupeň.
      courseD_artist_nestedLoops7:
        courseD_artist_nestedLoops7_a: Tu musíš použiť vnorené cykly. Najskôr pomocou
          cyklu nakresli štvorec. Čo má robiť vonkajší cyklus, keď vnútorný kreslí
          štvorce?
        courseD_artist_nestedLoops7_b: |-
          Použi vnorené cykly, pričom kód na nakreslenie jedného štvorca je vo vnútornom cykle.

          -   Opakuj 6 krát
          -   Nakresli štvorec
          -   Skoč dopredu o **50 pixelov**
          -   Otoč sa o **60 stupňov**
      courseD_artist_nestedLoops7_2018:
        courseD_artist_nestedLoops7_a: Tu musíš použiť vnorené cykly. Najskôr pomocou
          cyklu nakresli štvorec. Čo má robiť vonkajší cyklus, keď vnútorný kreslí
          štvorce?
        courseD_artist_nestedLoops7_b: |-
          Použi vnorené cykly, pričom kód na nakreslenie jedného štvorca je vo vnútornom cykle.

          -   Opakuj 6 krát
          -   Nakresli štvorec
          -   Skoč dopredu o **50 pixelov**
          -   Otoč sa o **60 stupňov**
      courseD_artist_nestedLoops7_2019:
        courseD_artist_nestedLoops7_a: Tu musíš použiť vnorené cykly. Najskôr pomocou
          cyklu nakresli štvorec. Čo má robiť vonkajší cyklus, keď vnútorný kreslí
          štvorce?
        courseD_artist_nestedLoops7_b: |-
          Použi vnorené cykly, pričom kód na nakreslenie jedného štvorca je vo vnútornom cykle.

          -   Opakuj 6 krát
          -   Nakresli štvorec
          -   Skoč dopredu o **50 pixelov**
          -   Otoč sa o **60 stupňov**
      courseD_artist_nestedLoops8:
        courseD_artist_nestedLoops8_a: Na vykreslenie 8-ich šesťuholníkov sa musíš
          otáčať o **45 stupňov** medzi každým z nich. Prečo? Pretože 360 stupňov
          (úplná otočka) deleno 8-imi (počet šesťuholníkov) je 45 stupňov.
        courseD_artist_nestedLoops8_b: Ak si nevieš dať rady, pozri si riešenie poslednej
          úlohy a zmeň časť kódu, ktoré sú odlišné.
        courseD_artist_nestedLoops8_c: |-
          Použi vnorený cyklus::

          -   Opakuj 8 krát
          -   Nakresli šesťuholník
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 45 stupňov
      courseD_artist_nestedLoops8_2018:
        courseD_artist_nestedLoops8_a: Na vykreslenie 8-ich šesťuholníkov sa musíš
          otáčať o **45 stupňov** medzi každým z nich. Prečo? Pretože 360 stupňov
          (úplná otočka) deleno 8-imi (počet šesťuholníkov) je 45 stupňov.
        courseD_artist_nestedLoops8_b: Ak si nevieš dať rady, pozri si riešenie poslednej
          úlohy a zmeň časť kódu, ktoré sú odlišné.
        courseD_artist_nestedLoops8_c: |-
          Použi vnorený cyklus::

          -   Opakuj 8 krát
          -   Nakresli šesťuholník
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 45 stupňov
      courseD_artist_nestedLoops8_2019:
        courseD_artist_nestedLoops8_a: Na vykreslenie 8-ich šesťuholníkov sa musíš
          otáčať o **45 stupňov** medzi každým z nich. Prečo? Pretože 360 stupňov
          (úplná otočka) deleno 8-imi (počet šesťuholníkov) je 45 stupňov.
        courseD_artist_nestedLoops8_b: Ak si nevieš dať rady, pozri si riešenie poslednej
          úlohy a zmeň časť kódu, ktoré sú odlišné.
        courseD_artist_nestedLoops8_c: |-
          Použi vnorený cyklus::

          -   Opakuj 8 krát
          -   Nakresli šesťuholník
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 45 stupňov
      courseD_artist_nestedLoops9:
        courseD_artist_nestedLoops9_a: Začni s vnoreným cyklom ako v predošlej úlohe,
          ale tento krát s ním vykresli štvorce.
        courseD_artist_nestedLoops9_b: Pripoj ďalší blok vnorených cyklov k prvému
          bloku vnorených cyklov, ale tentokrát vykresli trojuholníky.
        courseD_artist_nestedLoops9_c: |-
          Použi dva vnorené cykly:

          -   Opakuj 8 krát
          -   Nakresli štvorec
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 45 stupňov
          -   Opakuj 8 krát
          -   Nakresli trojuholník
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 45 stupňov
      courseD_artist_nestedLoops9_2018:
        courseD_artist_nestedLoops9_a: Začni s vnoreným cyklom ako v predošlej úlohe,
          ale tento krát s ním vykresli štvorce.
        courseD_artist_nestedLoops9_b: Pripoj ďalší blok vnorených cyklov k prvému
          bloku vnorených cyklov, ale tentokrát vykresli trojuholníky.
        courseD_artist_nestedLoops9_c: |-
          Použi dva vnorené cykly:

          -   Opakuj 8 krát
          -   Nakresli štvorec
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 45 stupňov
          -   Opakuj 8 krát
          -   Nakresli trojuholník
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 45 stupňov
      courseD_artist_nestedLoops9_2019:
        courseD_artist_nestedLoops9_a: Začni s vnoreným cyklom ako v predošlej úlohe,
          ale tento krát s ním vykresli štvorce.
        courseD_artist_nestedLoops9_b: Pripoj ďalší blok vnorených cyklov k prvému
          bloku vnorených cyklov, ale tentokrát vykresli trojuholníky.
        courseD_artist_nestedLoops9_c: |-
          Použi dva vnorené cykly:

          -   Opakuj 8 krát
          -   Nakresli štvorec
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 45 stupňov
          -   Opakuj 8 krát
          -   Nakresli trojuholník
          -   Skoč dopredu o 50 pixelov
          -   Otoč sa vpravo o 45 stupňov
      courseD_artist_nestedLoopsFP:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          Tento obrázok bol nakreslený pomocou jediného vnoreného cyklu, ktorý kreslí šesťuholník (o strane 50px) 15 krát a so 48 stupňovými otočkami.
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>

          Tento obrázok bol nakreslený pomocou podobného kódu, aký už poznáš z predošlých úloh, no tentoraz kresli kruhy (360 krát opakuj: posuň sa dopredu o 1, otoč sa o 1 stupeň).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>

          Tento obrázok bol nakreslený pomocou jediného vnoreného cyklu, ktorý kreslí päťuholník (o strane 50px) 15 krát a so 48 stupňovými otočkami.
      courseD_artist_nestedLoopsFP_2018:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          Tento obrázok bol nakreslený pomocou jediného vnoreného cyklu, ktorý kreslí šesťuholník (o strane 50px) 15 krát a so 48 stupňovými otočkami.
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>

          Tento obrázok bol nakreslený pomocou podobného kódu, aký už poznáš z predošlých úloh, no tentoraz kresli kruhy (360 krát opakuj: posuň sa dopredu o 1, otoč sa o 1 stupeň).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>

          Tento obrázok bol nakreslený pomocou jediného vnoreného cyklu, ktorý kreslí päťuholník (o strane 50px) 15 krát a so 48 stupňovými otočkami.
      courseD_artist_nestedLoopsFP_2019:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          Tento obrázok bol nakreslený pomocou jediného vnoreného cyklu, ktorý kreslí šesťuholník (o strane 50px) 15 krát a so 48 stupňovými otočkami.
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>

          Tento obrázok bol nakreslený pomocou podobného kódu, aký už poznáš z predošlých úloh, no tentoraz kresli kruhy (360 krát opakuj: posuň sa dopredu o 1, otoč sa o 1 stupeň).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>

          Tento obrázok bol nakreslený pomocou jediného vnoreného cyklu, ktorý kreslí päťuholník (o strane 50px) 15 krát a so 48 stupňovými otočkami.
      courseD_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: Začni tým, že zmeníš farbu na modrú
          a potom vytvor osemuholník so stranami dlhými 50 pixelov a otočkami vľavo
          o 45 stupňov.
        courseD_artist_nestedLoops_challenge1_b: Pridaj kód, ktorý zmení farbu na
          zelenú a nakreslí trojuholník so stranami dlhými 50 pixelov a otočkami vľavo
          o 120 stupňov.
        courseD_artist_nestedLoops_challenge1_c: Po tom, ako nakreslíš oba tvary musíš
          najprv skočiť dopredu o 50 pixelov a až potom sa otočiť vpravo o 90 stupňov.
        courseD_artist_nestedLoops_challenge1_d: A nakoniec umiestni všetok svoj kód
          dovnútra cyklu so 4 opakovaniami.
      courseD_artist_nestedLoops_challenge1_2018:
        courseD_artist_nestedLoops_challenge1_a: Začni tým, že zmeníš farbu na modrú
          a potom vytvor osemuholník so stranami dlhými 50 pixelov a otočkami vľavo
          o 45 stupňov.
        courseD_artist_nestedLoops_challenge1_b: Pridaj kód, ktorý zmení farbu na
          zelenú a nakreslí trojuholník so stranami dlhými 50 pixelov a otočkami vľavo
          o 120 stupňov.
        courseD_artist_nestedLoops_challenge1_c: Po tom, ako nakreslíš oba tvary musíš
          najprv skočiť dopredu o 50 pixelov a až potom sa otočiť vpravo o 90 stupňov.
        courseD_artist_nestedLoops_challenge1_d: A nakoniec umiestni všetok svoj kód
          dovnútra cyklu so 4 opakovaniami.
      courseD_artist_nestedLoops_challenge1_2019:
        courseD_artist_nestedLoops_challenge1_a: Začni tým, že zmeníš farbu na modrú
          a potom vytvor osemuholník so stranami dlhými 50 pixelov a otočkami vľavo
          o 45 stupňov.
        courseD_artist_nestedLoops_challenge1_b: Pridaj kód, ktorý zmení farbu na
          zelenú a nakreslí trojuholník so stranami dlhými 50 pixelov a otočkami vľavo
          o 120 stupňov.
        courseD_artist_nestedLoops_challenge1_c: Po tom, ako nakreslíš oba tvary musíš
          najprv skočiť dopredu o 50 pixelov a až potom sa otočiť vpravo o 90 stupňov.
        courseD_artist_nestedLoops_challenge1_d: A nakoniec umiestni všetok svoj kód
          dovnútra cyklu so 4 opakovaniami.
      courseD_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: Na nakreslenie pravidelného osemuholníka
          sa umelec musí 8-krát otočiť o 45 stupňov.
        courseD_artist_nestedLoops_challenge2_b: Na nakreslenie štvorca sa umelec
          musí 4-krát otočiť o 90 stupňov.
      courseD_artist_nestedLoops_challenge2_2018:
        courseD_artist_nestedLoops_challenge2_a: Na nakreslenie pravidelného osemuholníka
          sa umelec musí 8-krát otočiť o 45 stupňov.
        courseD_artist_nestedLoops_challenge2_b: Na nakreslenie štvorca sa umelec
          musí 4-krát otočiť o 90 stupňov.
      courseD_artist_nestedLoops_challenge2_2019:
        courseD_artist_nestedLoops_challenge2_a: Na nakreslenie pravidelného osemuholníka
          sa umelec musí 8-krát otočiť o 45 stupňov.
        courseD_artist_nestedLoops_challenge2_b: Na nakreslenie štvorca sa umelec
          musí 4-krát otočiť o 90 stupňov.
      courseD_artist_project1:
        courseD_artist_project1_a: Použi rozbaľovacie menu na blokoch  `otoč sa` a
          vyber si uhol, ktorý potrebuješ!
        courseD_artist_project1_b: Pamätaj, že `posuň sa dopredu` nakreslí čiaru,
          ale `skoč dopredu` nie.
      courseD_artist_project1_2018:
        courseD_artist_project1_a: Použi rozbaľovacie menu na blokoch  `otoč sa` a
          vyber si uhol, ktorý potrebuješ!
        courseD_artist_project1_b: Pamätaj, že `posuň sa dopredu` nakreslí čiaru,
          ale `skoč dopredu` nie.
      courseD_artist_project1_2019:
        courseD_artist_project1_a: Použi rozbaľovacie menu na blokoch  `otoč sa` a
          vyber si uhol, ktorý potrebuješ!
        courseD_artist_project1_b: Pamätaj, že `posuň sa dopredu` nakreslí čiaru,
          ale `skoč dopredu` nie.
      courseD_artist_project1a:
        courseD_artist_project1a_a: |-
          Na tento krok po schodoch sa použije otočka pod 76 stupňami a zopakuje sa to 4-krát.

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Tieto vzory sú podobné krokom po schodoch z iných
          úloh, ale používa sa iný uhol.
      courseD_artist_project1a_2018:
        courseD_artist_project1a_a: |-
          Na tento krok po schodoch sa použije otočka pod 76 stupňami a zopakuje sa to 4-krát.

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Tieto vzory sú podobné krokom po schodoch z iných
          úloh, ale používa sa iný uhol.
      courseD_artist_project1a_2019:
        courseD_artist_project1a_a: |-
          Na tento krok po schodoch sa použije otočka pod 76 stupňami a zopakuje sa to 4-krát.

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Tieto vzory sú podobné krokom po schodoch z iných
          úloh, ale používa sa iný uhol.
      courseD_artist_project2:
        courseD_artist_project2_a: Pamätaj, že `posuň sa dopredu` nakreslí čiaru,
          ale `skoč dopredu` nie.
        courseD_artist_project2_b: Keď prvý krát nakreslíš čiaru a sa posunieš, môžeš
          opakovať kód tak, že pridáš cyklus okolo vonkajška.
      courseD_artist_project2_2018:
        courseD_artist_project2_a: Pamätaj, že `posuň sa dopredu` nakreslí čiaru,
          ale `skoč dopredu` nie.
        courseD_artist_project2_b: Keď prvý krát nakreslíš čiaru a sa posunieš, môžeš
          opakovať kód tak, že pridáš cyklus okolo vonkajška.
      courseD_artist_project2_2019:
        courseD_artist_project2_a: Pamätaj, že `posuň sa dopredu` nakreslí čiaru,
          ale `skoč dopredu` nie.
        courseD_artist_project2_b: Keď prvý krát nakreslíš čiaru a sa posunieš, môžeš
          opakovať kód tak, že pridáš cyklus okolo vonkajška.
      courseD_artist_project2a:
        courseD_artist_project2a_a: |-
          Táto kresba bola vytvorená pomocou vnoreného cyklu zo 4 schodov a bloku  `otoč sa vpravo o 180 stupňov`, ktorý sa nachádza vo vnútri bloku `opakuj 2 krát`.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2018:
        courseD_artist_project2a_a: |-
          Táto kresba bola vytvorená pomocou vnoreného cyklu zo 4 schodov a bloku  `otoč sa vpravo o 180 stupňov`, ktorý sa nachádza vo vnútri bloku `opakuj 2 krát`.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2019:
        courseD_artist_project2a_a: |-
          Táto kresba bola vytvorená pomocou vnoreného cyklu zo 4 schodov a bloku  `otoč sa vpravo o 180 stupňov`, ktorý sa nachádza vo vnútri bloku `opakuj 2 krát`.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project3:
        courseD_artist_project3_a: Použi rozbaľovacie menu na blokoch  `otoč sa` a
          vyber si uhol, ktorý potrebuješ!
        courseD_artist_project3_b: |-
          Skús vnorené cykly!

          Použi kód, ktorý si vytvoril na kresbu čiar tvarov a vlož ju do vnútra iného cyklu. Skôr ako sa vonkajší cyklus skončí, pridaj na spodok blok, ktorý bude otáčať Elzu.

          -   Skús 72 stupňov, ak opakuješ vonkajší cyklus 5-krát
          -   Skús 60 stupňov, ak opakuješ vonkajší cyklus 6-krát
      courseD_artist_project3_2018:
        courseD_artist_project3_a: Použi rozbaľovacie menu na blokoch  `otoč sa` a
          vyber si uhol, ktorý potrebuješ!
        courseD_artist_project3_b: |-
          Skús vnorené cykly!

          Použi kód, ktorý si vytvoril na kresbu čiar tvarov a vlož ju do vnútra iného cyklu. Skôr ako sa vonkajší cyklus skončí, pridaj na spodok blok, ktorý bude otáčať Elzu.

          -   Skús 72 stupňov, ak opakuješ vonkajší cyklus 5-krát
          -   Skús 60 stupňov, ak opakuješ vonkajší cyklus 6-krát
      courseD_artist_project3_2019:
        courseD_artist_project3_a: Použi rozbaľovacie menu na blokoch  `otoč sa` a
          vyber si uhol, ktorý potrebuješ!
        courseD_artist_project3_b: |-
          Skús vnorené cykly!

          Použi kód, ktorý si vytvoril na kresbu čiar tvarov a vlož ju do vnútra iného cyklu. Skôr ako sa vonkajší cyklus skončí, pridaj na spodok blok, ktorý bude otáčať Elzu.

          -   Skús 72 stupňov, ak opakuješ vonkajší cyklus 5-krát
          -   Skús 60 stupňov, ak opakuješ vonkajší cyklus 6-krát
      courseD_artist_project3a:
        courseD_artist_project3a_a: Môžeš si vybrať koľkorát sa otočí tvoj tvar! Čo
          tak 18-krát  vždy s otočením o 20 stupňov?
      courseD_artist_project3a_2018:
        courseD_artist_project3a_a: Môžeš si vybrať koľkorát sa otočí tvoj tvar! Čo
          tak 18-krát  vždy s otočením o 20 stupňov?
      courseD_artist_project3a_2019:
        courseD_artist_project3a_a: Môžeš si vybrať koľkorát sa otočí tvoj tvar! Čo
          tak 18-krát  vždy s otočením o 20 stupňov?
      courseD_artist_project4:
        courseD_artist_project4_a: "Tu je vločka v tvare päťuholníka s otočením o
          36 stupňov pred vločkou v tvare trojuholníka: \n\n<img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\"
          width=\"200px\" />\n\nTu je sada šesťuholníkov so štvorcami:\n\n<img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\"
          width=\"200px\" />"
        courseD_artist_project4_b: Vyskúšaj nakresliť prvú vločku, otoč sa a potom
          nakresli druhú vločku.
      courseD_artist_project4_2018:
        courseD_artist_project4_a: "Tu je vločka v tvare päťuholníka s otočením o
          36 stupňov pred vločkou v tvare trojuholníka: \n\n<img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\"
          width=\"200px\" />\n\nTu je sada šesťuholníkov so štvorcami:\n\n<img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\"
          width=\"200px\" />"
        courseD_artist_project4_b: Vyskúšaj nakresliť prvú vločku, otoč sa a potom
          nakresli druhú vločku.
      courseD_artist_project4_2019:
        courseD_artist_project4_a: "Tu je vločka v tvare päťuholníka s otočením o
          36 stupňov pred vločkou v tvare trojuholníka: \n\n<img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\"
          width=\"200px\" />\n\nTu je sada šesťuholníkov so štvorcami:\n\n<img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\"
          width=\"200px\" />"
        courseD_artist_project4_b: Vyskúšaj nakresliť prvú vločku, otoč sa a potom
          nakresli druhú vločku.
      courseD_artist_project4a:
        courseD_artist_project4a_a: |-
          Tu sa nachádzajú 2 vločky rozdielnych rozmerov, nakreslené jedna po druhej (s otočením vždy o 30 stupňov.)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2018:
        courseD_artist_project4a_a: |-
          Tu sa nachádzajú 2 vločky rozdielnych rozmerov, nakreslené jedna po druhej (s otočením vždy o 30 stupňov.)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2019:
        courseD_artist_project4a_a: |-
          Tu sa nachádzajú 2 vločky rozdielnych rozmerov, nakreslené jedna po druhej (s otočením vždy o 30 stupňov.)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project5:
        courseD_artist_project4_a: |-
          Rady 2 štvorcov a 4 trojuholníkov:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2018:
        courseD_artist_project4_a: |-
          Rady 2 štvorcov a 4 trojuholníkov:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2019:
        courseD_artist_project4_a: |-
          Rady 2 štvorcov a 4 trojuholníkov:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_ramp11:
        courseD_artist_ramp11a: To draw a side, use the `move forward by 100 pixels`
          block, and change the 100 to a 200.
        courseD_artist_ramp11b: |-
          To draw 4 sides, put a `move forward by 200 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.

          Don't forget to turn afterward!
        courseD_artist_ramp11_c: Remember to put the `turn` block inside of your loop!
      courseD_artist_ramp12:
        courseD_artist_ramp12_a: You can either draw the square first, then the triangle,
          or do it the other way around!
        courseD_artist_ramp12_b: Try splitting the problem into 2 parts, and using
          2 loops.
        courseD_artist_ramp12_c: Môžeš použiť šípku nadol s rozbaľovacou ponukou na
          blokoch "otoč sa o", aby si zistil aký uhol potrebuješ!
      courseD_autorun_binary2_2019:
        courseD_artist_binary2_a: Klikni na `Spustiť` a sleduj, čo sa stane!
      courseD_autorun_binary3_2019:
        courseD_artist_binary3_a: 'Úlohu vyriešiš pomocou jednej z postupností nadefinovaných
          v paneli nástrojov. '
        courseD_artist_binary3_b: Neboj sa spraviť chybu! Vyskúšaj jednotlivé možnosti
          a svoj kód spusti aj keď ešte nevieš správnu odpoveď.
      courseD_autorun_binary4_2019:
        courseD_artist_binary4_a: Pozri sa na prvé tri štvorce v prvom rade. Myslíš,
          že by sa ich opakovaním dal nakresliť celý vzor?
        courseD_artist_binary4_b: Neboj sa chýb! Napíš kúsok kódu, spusti ho a sleduj,
          čo sa stane. Pomôže ti to aj  vtedy, keď ešte nemáš hotové celé riešenie.
      courseD_autorun_binary5_2019:
        courseD_artist_binary5_a: Skús si najprv spustiť ponúkaný kód, nech vieš,
          s čím pracuješ.
        courseD_artist_binary5_b: Stačí vymeniť 2 riadky.
        courseD_artist_binary5_c: Ak sa ti stále nedarí, skús si jednotlivé riadky
          nakresliť na papier a riešenie pohľadaj tam.
      courseD_autorun_binary6_2019:
        courseD_artist_binary6_a: Začni vľavo hore a sleduj vzor. Ako ďaleko musíš
          zájsť, aby sa ten vzor začal opakovať?
        courseD_artist_binary6_b: Svoj kód môžeš vybudovať znak po znaku a priebežne
          ho testovať!
      courseD_autorun_binary7_2019:
        courseD_artist_binary7_a: Začni vľavo hore a sleduj vzor. Ako ďaleko musíš
          zájsť, aby sa ten vzor začal opakovať?
        courseD_artist_binary7_b: Neboj sa chýb! Napíš kúsok kódu, spusti ho a sleduj,
          čo sa stane. Pomôže ti to aj  vtedy, keď ešte nemáš hotové celé riešenie.
      courseD_autorun_binary8_2019:
        courseD_artist_binary8_a: Tá špirála ťa možno zmiatla. V tomto cvičení si
          musíš oddeliť jednotlivé riadky a vzor kresliť riadok po riadku.
        courseD_artist_binary8_b: Skús si najprv spustiť ponúkaný kód, nech vieš,
          s čím pracuješ.
        courseD_artist_binary8_c: Neboj sa spraviť chybu! Vyskúšaj jednotlivé možnosti
          a svoj kód spusti aj keď ešte nevieš správnu odpoveď.
      courseD_bee_conditionals1_predict1:
        courseD_bee_conditionals1_a: You will need to use an `if` block to check to
          see if there is a flower beneath the cloud before you try to get nectar.
      courseD_bee_conditionals1_predict1_2018:
        courseD_bee_conditionals1_a: You will need to use an `if` block to check to
          see if there is a flower beneath the cloud before you try to get nectar.
      courseD_bee_conditionals1_predict1_2019:
        courseD_bee_conditionals1_a: You will need to use an `if` block to check to
          see if there is a flower beneath the cloud before you try to get nectar.
      courseD_bee_conditionals1_predict1_copy:
        courseD_bee_conditionals1_a: You will need to use an `if` block to check to
          see if there is a flower beneath the cloud before you try to get nectar.
      courseD_bee_conditionals2:
        courseD_bee_conditionals2_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals2_a: Niekedy sa tam kvet bude nachádzať a niekedy
          nie. Ak chceš, aby tvoj kód fungoval v oboch prípadoch, určite použi podmienku
          `ak`.
        courseD_bee_conditionals2_b: Môžeš použiť cyklus `opakuj`, alebo `pokiaľ tam
          je cesta vpred`, aby si sa dostal cez toto bludisko.
        courseD_bee_conditionals2_c: Nemusíš kontrolovať včelie plásty, pod oblakmi
          budú len kvety, alebo nič.
        courseD_bee_conditionals2_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals2_2018:
        courseD_bee_conditionals2_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals2_a: Niekedy sa tam kvet bude nachádzať a niekedy
          nie. Ak chceš, aby tvoj kód fungoval v oboch prípadoch, určite použi podmienku
          `ak`.
        courseD_bee_conditionals2_b: Môžeš použiť cyklus `opakuj`, alebo `pokiaľ tam
          je cesta vpred`, aby si sa dostal cez toto bludisko.
        courseD_bee_conditionals2_c: Nemusíš kontrolovať včelie plásty, pod oblakmi
          budú len kvety, alebo nič.
        courseD_bee_conditionals2_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals2_2019:
        courseD_bee_conditionals2_a: Niekedy sa tam kvet bude nachádzať a niekedy
          nie. Ak chceš, aby tvoj kód fungoval v oboch prípadoch, určite použi podmienku
          `ak`.
        courseD_bee_conditionals2_c: Nemusíš kontrolovať včelie plásty, pod oblakmi
          budú len kvety, alebo nič.
      courseD_bee_conditionals2_copy:
        courseD_bee_conditionals2_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals2_a: Niekedy sa tam kvet bude nachádzať a niekedy
          nie. Ak chceš, aby tvoj kód fungoval v oboch prípadoch, určite použi podmienku
          `ak`.
        courseD_bee_conditionals2_b: Môžeš použiť cyklus `opakuj`, alebo `pokiaľ tam
          je cesta vpred`, aby si sa dostal cez toto bludisko.
        courseD_bee_conditionals2_c: Nemusíš kontrolovať včelie plásty, pod oblakmi
          budú len kvety, alebo nič.
        courseD_bee_conditionals2_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals3:
        courseD_bee_conditionals3_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals3_a: Použi podmienku `ak`, aby si skontroloval každé
          miestečko a zisti, či sa tam nachádza kvet, alebo nič.
        courseD_bee_conditionals3_b: Môžeš použiť cyklus `opakuj` alebo \`pokiaľ,
          aby sa včela pohybovala smerom vpred. Použi ktorýkoľvek chceš!
        courseD_bee_conditionals3_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseD_bee_conditionals3_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals3_2018:
        courseD_bee_conditionals3_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals3_a: Použi podmienku `ak`, aby si skontroloval každé
          miestečko a zisti, či sa tam nachádza kvet, alebo nič.
        courseD_bee_conditionals3_b: Môžeš použiť cyklus `opakuj` alebo \`pokiaľ,
          aby sa včela pohybovala smerom vpred. Použi ktorýkoľvek chceš!
        courseD_bee_conditionals3_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseD_bee_conditionals3_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals3_2019:
        courseD_bee_conditionals3_a: Použi podmienku `ak`, aby si skontroloval každé
          miestečko a zisti, či sa tam nachádza kvet, alebo nič.
        courseD_bee_conditionals3_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_bee_conditionals3_copy:
        courseD_bee_conditionals3_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals3_a: Použi podmienku `ak`, aby si skontroloval každé
          miestečko a zisti, či sa tam nachádza kvet, alebo nič.
        courseD_bee_conditionals3_b: Môžeš použiť cyklus `opakuj` alebo \`pokiaľ,
          aby sa včela pohybovala smerom vpred. Použi ktorýkoľvek chceš!
        courseD_bee_conditionals3_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseD_bee_conditionals3_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals4:
        courseD_bee_conditionals4_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals4_a: Ku každému políčku pristupuj tak, akoby bol nad
          ním oblak, napriek tomu, že vidíš celú cestu.
        courseD_bee_conditionals4_b: V cykle použi podmienku  `ak` a skontroluj každé
          pole, či sa tam nachádza nektár.
        courseD_bee_conditionals4_c: Použitím  bloku <xml><block type="maze_untilBlocked"/></xml>
          by si sa mal posunúť vpred a skontrolovať kvet. Ak je tam kvet, čo by mala
          včela spraviť?
        courseD_bee_conditionals4_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals4_2018:
        courseD_bee_conditionals4_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals4_a: Ku každému políčku pristupuj tak, akoby bol nad
          ním oblak, napriek tomu, že vidíš celú cestu.
        courseD_bee_conditionals4_b: V cykle použi podmienku  `ak` a skontroluj každé
          pole, či sa tam nachádza nektár.
        courseD_bee_conditionals4_c: Použitím  bloku <xml><block type="maze_untilBlocked"/></xml>
          by si sa mal posunúť vpred a skontrolovať kvet. Ak je tam kvet, čo by mala
          včela spraviť?
        courseD_bee_conditionals4_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals4_2019:
        courseD_bee_conditionals4_a: Ku každému políčku pristupuj tak, akoby bol nad
          ním oblak, napriek tomu, že vidíš celú cestu.
        courseD_bee_conditionals4_b: V cykle použi podmienku  `ak` a skontroluj každé
          pole, či sa tam nachádza nektár.
      courseD_bee_conditionals4_copy:
        courseD_bee_conditionals4_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals4_a: Ku každému políčku pristupuj tak, akoby bol nad
          ním oblak, napriek tomu, že vidíš celú cestu.
        courseD_bee_conditionals4_b: V cykle použi podmienku  `ak` a skontroluj každé
          pole, či sa tam nachádza nektár.
        courseD_bee_conditionals4_c: Použitím  bloku <xml><block type="maze_untilBlocked"/></xml>
          by si sa mal posunúť vpred a skontrolovať kvet. Ak je tam kvet, čo by mala
          včela spraviť?
        courseD_bee_conditionals4_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals5:
        courseD_bee_conditionals5_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals5_a: Think of every side of the rectangular path as
          a path by itself. Set up a nested loop with a `repeat` block on the outside
          and a `while there is a path ahead` loop on the inside. How many paths does
          the bee need to buzz down if the bee needs to buzz down every side with
          a flower?
        courseD_bee_conditionals5_c: There are 3 sides of the rectangle with flowers,
          so the code needs to `repeat 3 times`. In every repeat, the bee will need
          to continue along the path, `while there is a path ahead`. To continue down
          the path, the bee will need to `move forward`. While on the path, the bee
          needs to check for a flower. `if there is a flower`, the bee should `get
          nectar`.
        courseD_bee_conditionals5_b: Inside the `while there is a path ahead` block
          you will need to move forward and check for a flower. How do you check if
          there is a flower? What do you do if there is a flower?
        courseD_bee_conditionals5_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals5_2018:
        courseD_bee_conditionals5_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals5_a: Predstav si každú stranu obdĺžnika ako samostatnú
          cestu. Nastav zvonku vnorený cyklus s blokom `opakuj` a zvnútra cyklus `ak
          je tam ceste vpred`. Koľko ciest musí včela preletieť, ak musí preletieť
          každú stranu s kvetom?
        courseD_bee_conditionals5_c: Obdĺžnik s kvetmi má 3 strany, takže kód sa musí
          `opakovať 3 krát`. Pri každom opakovaní musí včela pokračovať po ceste `ak
          tam je cesta vpred`. Včela musí `posuň sa dopredu`, ak má pokračovať po
          ceste. Počas cesty musí hľadať kvety. `Ak pri kvete` včela `získať nektár`.
        courseD_bee_conditionals5_b: Vo vnútri bloku `pokiaľ tam je cesta vpred` sa
          posuň dopredu a hľadaj kvet. Ako zistíš či tam je kvet? Čo urobíš ak tam
          je kvet?
        courseD_bee_conditionals5_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals5_2019:
        courseD_bee_conditionals5_a: If you use an `if at flower` block, you can solve
          this using a nested loop. Write a program for the left and bottom paths,
          then repeat everything twice!
        courseD_bee_conditionals5_c: To continue down the path, the bee will need
          to `move forward`. As it moves, the bee needs to check for a flower. `if
          there is a flower`, the bee should `get nectar`.
      courseD_bee_conditionals5_copy:
        courseD_bee_conditionals5_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals5_a: Think of every side of the rectangular path as
          a path by itself. Set up a nested loop with a `repeat` block on the outside
          and a `while there is a path ahead` loop on the inside. How many paths does
          the bee need to buzz down if the bee needs to buzz down every side with
          a flower?
        courseD_bee_conditionals5_c: There are 3 sides of the rectangle with flowers,
          so the code needs to `repeat 3 times`. In every repeat, the bee will need
          to continue along the path, `while there is a path ahead`. To continue down
          the path, the bee will need to `move forward`. While on the path, the bee
          needs to check for a flower. `if there is a flower`, the bee should `get
          nectar`.
        courseD_bee_conditionals5_b: Inside the `while there is a path ahead` block
          you will need to move forward and check for a flower. How do you check if
          there is a flower? What do you do if there is a flower?
        courseD_bee_conditionals5_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals6:
        courseD_bee_conditionals6_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals6_a: Použi podmienku `ak` a tak skontroluj, či sa
          nachádza plást pod niektorým z oblakov.
        courseD_bee_conditionals6_b: V tomto prípade nemusíš kontrolovať, či sú kvety
          pod oblakmi.
        courseD_bee_conditionals6_c: Vidíš ktorý cyklus by si mohol použiť na zjednodušenie
          kódu?
        courseD_bee_conditionals6_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals6_2018:
        courseD_bee_conditionals6_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals6_a: Použi podmienku `ak` a tak skontroluj, či sa
          nachádza plást pod niektorým z oblakov.
        courseD_bee_conditionals6_b: V tomto prípade nemusíš kontrolovať, či sú kvety
          pod oblakmi.
        courseD_bee_conditionals6_c: Vidíš ktorý cyklus by si mohol použiť na zjednodušenie
          kódu?
        courseD_bee_conditionals6_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals6_2019:
        courseD_bee_conditionals6_a: Použi podmienku `ak` a tak skontroluj, či sa
          nachádza plást pod niektorým z oblakov.
        courseD_bee_conditionals6_b: V tomto prípade nemusíš kontrolovať, či sú kvety
          pod oblakmi.
        courseD_bee_conditionals6_c: Vidíš ktorý cyklus by si mohol použiť na zjednodušenie
          kódu?
      courseD_bee_conditionals7:
        courseD_bee_conditionals7_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals7_a: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
        courseD_bee_conditionals7_b: Ak pod oblakom nie je kvet, musí tam byť plást,
          takže nemusíš rozmýšľať o situácii s prázdnym poľom.
        courseD_bee_conditionals7_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals7_2018:
        courseD_bee_conditionals7_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals7_a: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
        courseD_bee_conditionals7_b: Ak pod oblakom nie je kvet, musí tam byť plást,
          takže nemusíš rozmýšľať o situácii s prázdnym poľom.
        courseD_bee_conditionals7_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals7_2019:
        courseD_bee_conditionals7_a: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
        courseD_bee_conditionals7_b: Ak pod oblakom nie je kvet, musí tam byť plást,
          takže nemusíš rozmýšľať o situácii s prázdnym poľom.
      courseD_bee_conditionals7_predict2:
        courseD_bee_conditionals7_a: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
      courseD_bee_conditionals7_predict2_2018:
        courseD_bee_conditionals7_a: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
      courseD_bee_conditionals7_predict2_2019:
        courseD_bee_conditionals7_a: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals8_a: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
        courseD_bee_conditionals8_b: |-
          Táto úloha je komplikovaná, lebo nemôžeš skontrolovať prázdne polia, nektár _a_ med len jednou jedinou podmienkou.

          Skontroluj nektár a med až na konci svojej cesty.
        courseD_bee_conditionals8_c: Ako môžeš zabezpečiť, že pôjdeš až nakoniec každej
          cesty, nech je akokľvek dlhá?
        courseD_bee_conditionals8_d: I keď je oblak rovno pred tebou, nemusiš ho navštíviť
          ako prvý. Skús začať s oblakom vo štvorci dolu vpravo.
        courseD_bee_conditionals8_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_hintVid1: Need help getting started?  Watch the
          video!
        courseD_bee_conditionals8_a: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
        courseD_bee_conditionals8_b: |-
          Táto úloha je komplikovaná, lebo nemôžeš skontrolovať prázdne polia, nektár _a_ med len jednou jedinou podmienkou.

          Skontroluj nektár a med až na konci svojej cesty.
        courseD_bee_conditionals8_c: Ako môžeš zabezpečiť, že pôjdeš až nakoniec každej
          cesty, nech je akokľvek dlhá?
        courseD_bee_conditionals8_d: I keď je oblak rovno pred tebou, nemusiš ho navštíviť
          ako prvý. Skús začať s oblakom vo štvorci dolu vpravo.
        courseD_bee_conditionals8_hintVid2: Watch this video for help solving this
          puzzle.
      courseD_bee_conditionals8_2019:
        courseD_bee_conditionals8_a: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
        courseD_bee_conditionals8_b: |-
          Táto úloha je komplikovaná, lebo nemôžeš skontrolovať prázdne polia, nektár _a_ med len jednou jedinou podmienkou.

          Skontroluj nektár a med až na konci svojej cesty.
      courseD_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: Nájdeš cestu, ktorou sa dostaneš ku
          všetkým kvetom a plástom bez toho, aby si narazil do stromu? Najlepšou cestou
          je špirála.
        courseD_bee_conditionals_challenge1_b: V tejto úlohe môže byť na každom políčku
          kvet, plást, alebo nič. To znamená,  že podmienku `ak/inak` môžeš zopakovať
          po každom kroku.
      courseD_bee_conditionals_challenge1_2018:
        courseD_bee_conditionals_challenge1_a: Nájdeš cestu, ktorou sa dostaneš ku
          všetkým kvetom a plástom bez toho, aby si narazil do stromu? Najlepšou cestou
          je špirála.
        courseD_bee_conditionals_challenge1_b: V tejto úlohe môže byť na každom políčku
          kvet, plást, alebo nič. To znamená,  že podmienku `ak/inak` môžeš zopakovať
          po každom kroku.
      courseD_bee_conditionals_challenge1_2019:
        courseD_bee_conditionals_challenge1_a: Nájdeš cestu, ktorou sa dostaneš ku
          všetkým kvetom a plástom bez toho, aby si narazil do stromu? Najlepšou cestou
          je špirála.
        courseD_bee_conditionals_challenge1_b: V tejto úlohe môže byť na každom políčku
          kvet, plást, alebo nič. To znamená,  že podmienku `ak/inak` môžeš zopakovať
          po každom kroku.
      courseD_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_conditionals_challenge2_2018:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_conditionals_challenge2_2019:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_a: Why does the first half of this program
          work? Think about why the bee needs to move backward. How much nectar does
          the bee collect each time it moves over a flower?
        courseD_bee_debugging_challenge1_b: On the way back, have the bee follow the
          same pattern. How much honey does the bee need to make each time it moves
          over a honey comb?
        courseD_bee_debugging_challenge1_c: |-
          After the bee makes it to the bottom row, have it repeat these commands:

          -   Repeat 2 times:
              -   Move forward
              -   Make 3 honey
          -   Move backward
      courseD_bee_debugging_challenge1a:
        courseD_bee_debugging_challenge1_a: Why does the first half of this program
          work? Think about why the bee needs to move backward. How much nectar does
          the bee collect each time it moves over a flower?
        courseD_bee_debugging_challenge1_b: To solve this puzzle, have the bee follow
          the same pattern to make honey that it does when collecting nectar.
        courseD_bee_debugging_challenge1_c: |-
          After the bee makes it to the bottom row, have it repeat these commands:

          <xml><block type="controls_repeat">
                              <title name="TIMES">2</title>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_honey"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveBackward</title>
                                </block>
                              </next>
                            </block></xml>
      courseD_bee_nestedLoops1:
        courseD_bee_nestedLoops1_a: Nefunguje to? Vyskúšaj použiť gombík "Krok", aby
          si videl, čo sa stane riadok po riadku.
        courseD_bee_nestedLoops1_b: Skús napísať kód najskôr len pre prvú stranu štvorca.
          Dokážeš to pomotm v cykle opakovať a vyzbierať tak všetok nektár?
        courseD_bee_nestedLoops1_c: Nezabudni použiť blok `získaj nektár` keď sa dostaneš
          ku kvetine.
      courseD_bee_nestedLoops1_2018:
        courseD_bee_nestedLoops1_a: Nefunguje to? Vyskúšaj použiť gombík "Krok", aby
          si videl, čo sa stane riadok po riadku.
        courseD_bee_nestedLoops1_b: Skús napísať kód najskôr len pre prvú stranu štvorca.
          Dokážeš to pomotm v cykle opakovať a vyzbierať tak všetok nektár?
        courseD_bee_nestedLoops1_c: Nezabudni použiť blok `získaj nektár` keď sa dostaneš
          ku kvetine.
      courseD_bee_nestedLoops1_2019:
        courseD_bee_nestedLoops1_a: Nefunguje to? Vyskúšaj použiť gombík "Krok", aby
          si videl, čo sa stane riadok po riadku.
        courseD_bee_nestedLoops1_b: Skús napísať kód najskôr len pre prvú stranu štvorca.
          Dokážeš to pomotm v cykle opakovať a vyzbierať tak všetok nektár?
        courseD_bee_nestedLoops1_c: Nezabudni použiť blok `získaj nektár` keď sa dostaneš
          ku kvetine.
      courseD_bee_nestedLoops1a:
        courseD_bee_nestedLoops1_a: Nefunguje to? Vyskúšaj použiť gombík "Krok", aby
          si videl, čo sa stane riadok po riadku.
        courseD_bee_nestedLoops1_c: Nezabudni použiť blok `získaj nektár` keď sa dostaneš
          ku kvetine.
      courseD_bee_nestedLoops1a_2018:
        courseD_bee_nestedLoops1_a: Nefunguje to? Vyskúšaj použiť gombík "Krok", aby
          si videl, čo sa stane riadok po riadku.
        courseD_bee_nestedLoops1_c: Nezabudni použiť blok `získaj nektár` keď sa dostaneš
          ku kvetine.
      courseD_bee_nestedLoops1a_2019:
        courseD_bee_nestedLoops1_a: Nefunguje to? Vyskúšaj použiť gombík "Krok", aby
          si videl, čo sa stane riadok po riadku.
        courseD_bee_nestedLoops1_c: Nezabudni použiť blok `získaj nektár` keď sa dostaneš
          ku kvetine.
      courseD_bee_nestedLoops2:
        courseD_bee_nestedLoops2_a: Na vyriešenie úlohy musíš vložiť jeden blok s
          cyklom `opakuj` do ďalšieho.
        courseD_bee_nestedLoops2_b: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
        courseD_bee_nestedLoops2_c: Pamätaj, že do vnútra bloku `opakuj` môžeš vložiť
          aj viac blokov.
      courseD_bee_nestedLoops2_2018:
        courseD_bee_nestedLoops2_a: Na vyriešenie úlohy musíš vložiť jeden blok s
          cyklom `opakuj` do ďalšieho.
        courseD_bee_nestedLoops2_b: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
        courseD_bee_nestedLoops2_c: Pamätaj, že do vnútra bloku `opakuj` môžeš vložiť
          aj viac blokov.
      courseD_bee_nestedLoops2_2019:
        courseD_bee_nestedLoops2_a: Na vyriešenie úlohy musíš vložiť jeden blok s
          cyklom `opakuj` do ďalšieho.
        courseD_bee_nestedLoops2_b: Nevieš prísť na to, kam máš dať cyklus? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
        courseD_bee_nestedLoops2_c: Pamätaj, že do vnútra bloku `opakuj` môžeš vložiť
          aj viac blokov.
      courseD_bee_nestedLoops7:
        courseD_bee_nestedLoops7_a: Musíš opakovať blok `získaj nektár` vnútri ďašieho
          bloku `opakuj`, ktorý bude ešte v sebe obsahovať aj blok `posuň sa dopredu`.
        courseD_bee_nestedLoops7_b: Musíš použiť všetky tri dostupné bloky `opakuj`
          na vyriešenie tejto úlohy.
        courseD_bee_nestedLoops7_c: |-
          Vnor do seba 3 cykly takto:

          -   Opakuj 4 krát
          -   Opakuj 3 krát
          -   Opakuj 12 krát
          -   získaj nektár
          -   posuň sa dopredu
          -   otoč sa vpravo
      courseD_bee_nestedLoops7_2018:
        courseD_bee_nestedLoops7_a: Musíš opakovať blok `získaj nektár` vnútri ďašieho
          bloku `opakuj`, ktorý bude ešte v sebe obsahovať aj blok `posuň sa dopredu`.
        courseD_bee_nestedLoops7_b: Musíš použiť všetky tri dostupné bloky `opakuj`
          na vyriešenie tejto úlohy.
        courseD_bee_nestedLoops7_c: |-
          Vnor do seba 3 cykly takto:

          -   Opakuj 4 krát
          -   Opakuj 3 krát
          -   Opakuj 12 krát
          -   získaj nektár
          -   posuň sa dopredu
          -   otoč sa vpravo
      courseD_bee_nestedLoops7_2019:
        courseD_bee_nestedLoops7_a: Musíš opakovať blok `získaj nektár` vnútri ďašieho
          bloku `opakuj`, ktorý bude ešte v sebe obsahovať aj blok `posuň sa dopredu`.
        courseD_bee_nestedLoops7_b: Musíš použiť všetky tri dostupné bloky `opakuj`
          na vyriešenie tejto úlohy.
        courseD_bee_nestedLoops7_c: |-
          Vnor do seba 3 cykly takto:

          -   Opakuj 4 krát
          -   Opakuj 3 krát
          -   Opakuj 12 krát
          -   získaj nektár
          -   posuň sa dopredu
          -   otoč sa vpravo
      courseD_bounce_events10s_2018:
        courseD_bounce_events10s_a: |-
          Vo svojom kóde musíš mať tieto dve udalosti:

          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound">svišťanie<title name="SOUND"></title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">píšťalka</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next>\</block</xml>
      courseD_bounce_events10s_2019:
        courseD_bounce_events10s_a: |-
          Vo svojom kóde musíš mať tieto dve udalosti:

          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound">svišťanie<title name="SOUND"></title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">píšťalka</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next>\</block</xml>
      courseD_bounce_events11s_2018:
        courseD_bounce_events11s_a: Novú loptu vhodíš, keď hra začína, keď trafíš
          kôš a keď rukou netrafíš loptu.
      courseD_bounce_events11s_2019:
        courseD_bounce_events11s_a: Novú loptu vhodíš, keď hra začína, keď trafíš
          kôš a keď rukou netrafíš loptu.
      courseD_bounce_events12s_2018:
        courseD_bounce_events12s_a: Môžeš zrýchliť loptu alebo ruku pripojením blokov
          s rýchlosťou k bloku `po spustení`.
        courseD_bounce_events12s_b: Za každý strelený kôš pridaj dva body a zmeň logo
          tímu na logo svojho domovského tímu!
      courseD_bounce_events12s_2019:
        courseD_bounce_events12s_a: Môžeš zrýchliť loptu alebo ruku pripojením blokov
          s rýchlosťou k bloku `po spustení`.
        courseD_bounce_events12s_b: Za každý strelený kôš pridaj dva body a zmeň logo
          tímu na logo svojho domovského tímu!
      courseD_bounce_events1s_2018:
        courseD_bounce_events1s_a: |-
          Potrebuješ pridať blok `posuň sa doľava` k bloku `keď šípka vľavo`, aby to fungovalo:

           <xml> <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>

             </xml>
        courseD_bounce_events1s_b: Nezabudni stlačiť tlačítko "Spustiť" a šípkou posunúť
          ruku ku košu.
      courseD_bounce_events1s_2019:
        courseD_bounce_events1s_a: |-
          Potrebuješ pridať blok `posuň sa doľava` k bloku `keď šípka vľavo`, aby to fungovalo:

           <xml> <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>

             </xml>
        courseD_bounce_events1s_b: Nezabudni stlačiť tlačítko "Spustiť" a šípkou posunúť
          ruku ku košu.
      courseD_bounce_events2s_2018:
        courseD_bounce_events2s_a: |-
          Aby to fungovalo, musíš mať nakódované dva sety udalostí `pohybu`:

          <xml>
            <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>
            <block type="bounce_whenRight" deletable="false" x="180" y="20">
              <next>
                <block type="bounce_moveRight"/>
              </next>
            </block>
          </xml>
      courseD_bounce_events2s_2019:
        courseD_bounce_events2s_a: |-
          Aby to fungovalo, musíš mať nakódované dva sety udalostí `pohybu`:

          <xml>
            <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>
            <block type="bounce_whenRight" deletable="false" x="180" y="20">
              <next>
                <block type="bounce_moveRight"/>
              </next>
            </block>
          </xml>
      courseD_bounce_events5s_2018:
        courseD_bounce_events5s_a: Na vyriešenie tejto úlohy nepotrebuješ hýbať rukou.
        courseD_bounce_events5s_b: |-
          Skontroluj, či je tento kód pridaný na tvojej pracovnej ploche:

          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events5s_2019:
        courseD_bounce_events5s_a: Na vyriešenie tejto úlohy nepotrebuješ hýbať rukou.
        courseD_bounce_events5s_b: |-
          Skontroluj, či si pridali tento kód na svoju pracovnú plochu:

          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events6s_2018:
        courseD_bounce_events6s_a: |-
          Máš vo svojom kóde takúto udalosť?

          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Ak je kód napísaný správne, nemusíš už ani pohnúť
          prstom a vyhráš.
      courseD_bounce_events6s_2019:
        courseD_bounce_events6s_a: |-
          Máš vo svojom kóde takúto udalosť?

          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Ak je kód napísaný správne, nemusíš už ani pohnúť
          prstom a vyhráš.
      courseD_bounce_events7s_2018:
        courseD_bounce_events7s_a: Ak chceš, môžeš pridať zvuky aj na viacerých miestach!
      courseD_bounce_events7s_2019:
        courseD_bounce_events7s_a: Ak chceš, môžeš pridať zvuky aj na viacerých miestach!
      courseD_collector_debugging1:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging1_b: Do you see any patterns that could be made
          more simple using a `repeat` loop?
        courseD_collector_debugging1_c: 'Nezabudni po tom, ako sa ku drahokamu dostaneš
          použiť blok "zbieraj".  '
      courseD_collector_debugging10_predict1:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but
          they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle,
          then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging1a_2018:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging1_c: 'Nezabudni po tom, ako sa ku drahokamu dostaneš
          použiť blok "zbieraj".  '
      courseD_collector_debugging1a_2019:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging1_c: 'Nezabudni po tom, ako sa ku drahokamu dostaneš
          použiť blok "zbieraj".  '
      courseD_collector_debugging2:
        courseD_collector_debugging2_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging2_b: Do you see any patterns that could be made
          more simple using a `repeat` loop?
        courseD_collector_debugging2_c: Skús pozbierať drahokamy z jednej strany tohoto
          vzoru. Vieš to zopakovať na ďalších dvoch stranách?
      courseD_collector_debugging2a_2018:
        courseD_collector_debugging2a_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging2a_c: |-
          Čo sa stalo?

          Čo sa malo stať?

          Čo sa ti to snaží povedať?
      courseD_collector_debugging2a_2019:
        courseD_collector_debugging2a_a: |-
          Use the "Step" button to see if everything is right at the first step.

          How about the second?

          Where does it go wrong?
        courseD_collector_debugging2a_c: |-
          Čo sa stalo?

          Čo sa malo stať?

          Čo sa ti to snaží povedať?
      courseD_collector_debugging3:
        courseD_collector_debugging3_a: Našiel si miesto, kde Laurel robí niečo, čo
          nedáva zmysel? Čo sa stane, ak tieto bloky zmeníš?
        courseD_collector_debugging3_b: Try simplifying the code using nested loops.
      courseD_collector_debugging3a_2018:
        courseD_collector_debugging3_a: Našiel si miesto, kde Laurel robí niečo, čo
          nedáva zmysel? Čo sa stane, ak tieto bloky zmeníš?
      courseD_collector_debugging3a_2019:
        courseD_collector_debugging3_a: Našiel si miesto, kde Laurel robí niečo, čo
          nedáva zmysel? Čo sa stane, ak tieto bloky zmeníš?
      courseD_collector_debugging4:
        courseD_collector_debugging4_a: "Try using the debugging process a couple
          of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem
          is fixed, what goes wrong?"
        courseD_collector_debugging4_b: |-
          Ak sa ti nedarí prísť na to, aké kroky sa pri schodoch opakujú, skús po nich prejsť prstom a príkazy si hovor nahlas.

          Nezabudni na správny smer jednotlivých otočiek!
        courseD_collector_debugging4_c: V tomto cykle chýba jediný blok. Zistiš ktorý?
      courseD_collector_debugging4a_2018:
        courseD_collector_debugging4_a: "Try using the debugging process a couple
          of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem
          is fixed, what goes wrong?"
        courseD_collector_debugging4_b: |-
          Ak sa ti nedarí prísť na to, aké kroky sa pri schodoch opakujú, skús po nich prejsť prstom a príkazy si hovor nahlas.

          Nezabudni na správny smer jednotlivých otočiek!
      courseD_collector_debugging4a_2019:
        courseD_collector_debugging4_a: "Try using the debugging process a couple
          of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem
          is fixed, what goes wrong?"
        courseD_collector_debugging4_b: |-
          Ak sa ti nedarí prísť na to, aké kroky sa pri schodoch opakujú, skús po nich prejsť prstom a príkazy si hovor nahlas.

          Nezabudni na správny smer jednotlivých otočiek!
      courseD_collector_debugging5:
        courseD_collector_debugging5_a: |-
          Začni tým, že sa pozrieš na prvý cyklus.

          Čo ten kód robí?

          Čo by mal robiť?

          Čo ti to hovorí?
        courseD_collector_debugging5_b: Once you have the first loop the way you want
          it, what is left over in your code?
      courseD_collector_debugging5a_2018:
        courseD_collector_debugging5a_a: |-
          Čo ten kód robí?

          Čo by mal robiť?

          Čo ti to hovorí?
        courseD_collector_debugging5a_b: Po tom ako pozbieraš prvý rad drahokamov,
          čo zostalo v tvojom kóde?
      courseD_collector_debugging5a_2019:
        courseD_collector_debugging5a_a: |-
          Čo ten kód robí?

          Čo by mal robiť?

          Čo ti to hovorí?
        courseD_collector_debugging5a_b: Po tom ako pozbieraš prvý rad drahokamov,
          čo zostalo v tvojom kóde?
      courseD_collector_debugging6:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_collector_debugging6_b: Zdá sa, že máš správne kroky, ale potreboval
          by si ich viac. Ako vieš viackrát zopakovať akciu "zbieraj"?
      courseD_collector_debugging6a_2018:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_collector_debugging6_b: Zdá sa, že na pracovnej ploche máš všetky
          bloky čo potrebuješ. Ak sa to už celé zamotalo, stlač "Začať odznova".
      courseD_collector_debugging6a_2019:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?

          How about the second?

          Where do things go wrong?
        courseD_collector_debugging6_b: Zdá sa, že na pracovnej ploche máš všetky
          bloky čo potrebuješ. Ak sa to už celé zamotalo, stlač "Začať odznova".
      courseD_collector_debugging8:
        courseD_collector_debugging8_a: Vidíš nejaký vzor, ktorý by sa dal zjednodušiť
          pomocou opakovacieho cyklu?
        courseD_collector_debugging8_b: Try using a nested loop to make this code
          shorter.
      courseD_collector_debugging9:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but
          they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle,
          then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_a: "Začni tým, že pozbieraš len **dva**
          drahokamy z každej z prvých **dvoch** kôp.\n\n![](<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png>)\nPouži tieto bloky:\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_b: |-
          Potom pozbieraj zvyšné drahokamy v tomto rade.

          ![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png>)
          Ku svojmu programu pridaj tieto bloky:

          <xml><block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
          <block type="controls_repeat">
                  <title name="TIMES">4</title>
                  <statement name="DO">

                  </statement>
                </block>

          </xml>
        courseD_collector_debugging_challenge2_c: "A nakoniec pozbieraj aj zvyšné
          drahokamy. Ku tvojmu programu pridaj tieto bloky.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">turnRight</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Tu je riešenie úlohy.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: Pamätaj, že pomocou bloku `opakuj`
          môžeš opakovať jeden príkaz ale aj viac príkazov za sebou. Vieš dokonca
          opakovať aj samotný blok `opakuj`!
        courseD_bee_nested_loops_challenge2_b: Na získanie všetkých 4-och drahokamov
          najprv použi cyklus, aby si sa dostal preč zo stredu. Odboč vľavo alebo
          vpravo, potom použi vnorený cyklus na presun od jedného pokladu k druhému.
          Ak toto zopakuješ dostatočný počet krát, zberateľka obíde _celú_ jaskyňu!
        courseD_bee_nested_loops_challenge2_c: Najkratší program, ktorý pozbiera všetky
          drahokamy použije len 1 blok 'zbieraj' a 2 otočky.
        courseD_bee_nested_loops_challenge2_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018:
        courseD_bee_nested_loops_challenge2_a: Pamätaj, že pomocou bloku `opakuj`
          môžeš opakovať jeden príkaz ale aj viac príkazov za sebou. Vieš dokonca
          opakovať aj samotný blok `opakuj`!
        courseD_bee_nested_loops_challenge2_b: Na získanie všetkých 4-och drahokamov
          najprv použi cyklus, aby si sa dostal preč zo stredu. Odboč vľavo alebo
          vpravo, potom použi vnorený cyklus na presun od jedného pokladu k druhému.
          Ak toto zopakuješ dostatočný počet krát, zberateľka obíde _celú_ jaskyňu!
        courseD_bee_nested_loops_challenge2_c: Najkratší program, ktorý pozbiera všetky
          drahokamy použije len 1 blok 'zbieraj' a 2 otočky.
        courseD_bee_nested_loops_challenge2_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2019:
        courseD_bee_nested_loops_challenge2_a: Pamätaj, že pomocou bloku `opakuj`
          môžeš opakovať jeden príkaz ale aj viac príkazov za sebou. Vieš dokonca
          opakovať aj samotný blok `opakuj`!
        courseD_bee_nested_loops_challenge2_b: Na získanie všetkých 4-och drahokamov
          najprv použi cyklus, aby si sa dostal preč zo stredu. Odboč vľavo alebo
          vpravo, potom použi vnorený cyklus na presun od jedného pokladu k druhému.
          Ak toto zopakuješ dostatočný počet krát, zberateľka obíde _celú_ jaskyňu!
        courseD_bee_nested_loops_challenge2_c: Najkratší program, ktorý pozbiera všetky
          drahokamy použije len 1 blok 'zbieraj' a 2 otočky.
        courseD_bee_nested_loops_challenge2_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2a:
        courseD_collector_nested_loops_challenge2a_a: Pamätaj, že pomocou bloku `opakuj`
          môžeš opakovať jeden príkaz ale aj viac príkazov za sebou. Vieš dokonca
          opakovať aj samotný blok `opakuj`!
        courseD_collector_nested_loops_challenge2a_b: Can you figure out how to get
          all four gems without using any more blocks than it takes to get two?
      courseD_collector_ramp10:
        courseD_artist_ramp10_a: |-
          Instead of using four `move forward` blocks for each side, try putting one `move forward` block inside of a `repeat` loop, like this:

          <xml><block type="controls_repeat">
                                                      <title name="TIMES">4</title>
                                                      <statement name="DO">
                                                        <block type="maze_moveForward"/>
                                                      </statement>
                                                    </block></xml>
        courseD_artist_ramp10_b: Don't forget to collect one piece of treasure, then
          turn to start on a new side of the square!
        courseD_artist_ramp10_c: If you want to simplify your code, you can put one
          loop inside of another! This is called a **nested loop**.
      courseD_collector_ramp8:
        courseD_collector_ramp8_a: When you get to a square with treasure, use `collect`
          to pick it up. For this puzzle, you'll need to collect treasure more than
          once!
        courseD_collector_ramp8_b: Ak chceš zjednodušiť svoj kód, môžeš vložiť jeden
          cyklus `opakuj` do vnútra iného cyklu! Toto sa nazýva **vnorený cyklus**.
      courseD_collector_ramp9:
        courseD_collector_ramp9_a: Start by moving Laurel to the first treasure, then
          collecting it. Can you repeat this sequence to get the second pile?
        courseD_collector_ramp9_b: If you want to simplify your code, you can put
          one repeat loop inside of another! This is called a **nested loop**.
      courseD_farmer_condLoops1:
        courseD_farmer_condLoops1_a: Potrebuješ hľadať kukuricu 5-krát tak, že použiješ
          cyklus opakovania.
        courseD_farmer_condLoops1_b: Make sure to use an `if at corn` block or you
          might try to pick something that's not there!
      courseD_farmer_condLoops1_2018:
        courseD_farmer_condLoops1_a: Potrebuješ hľadať kukuricu 5-krát tak, že použiješ
          cyklus opakovania.
        courseD_farmer_condLoops1_b: Make sure to use an `if at corn` block or you
          might try to pick something that's not there!
      courseD_farmer_condLoops1_2019:
        courseD_farmer_condLoops1_a: Potrebuješ hľadať kukuricu 5-krát tak, že použiješ
          cyklus opakovania.
        courseD_farmer_condLoops1_b: Make sure to use an `if at corn` block or you
          might try to pick something that's not there!
      courseD_farmer_condLoops2:
        courseD_farmer_condLoops2_a: Najlepší spôsob je, keď vložíš jeden príkaz `ak`
          do vnútra ďalšieho.
        courseD_farmer_condLoops2_b: For this puzzle, you should have one `if/else`
          statement and one plain `if` statement.
        courseD_farmer_condLoops2_c: |-
          Your `if` statement could look a lot like this:

          -   if at corn
              -   pick corn
          -   else
              -   if at lettuce
                  -   pick lettuce

          If there is nothing there, you won't pick anything!
      courseD_farmer_condLoops2_2018:
        courseD_farmer_condLoops2_a: Najlepší spôsob je, keď vložíš jeden príkaz `ak`
          do vnútra ďalšieho.
        courseD_farmer_condLoops2_b: For this puzzle, you should have one `if/else`
          statement and one plain `if` statement.
        courseD_farmer_condLoops2_c: |-
          Your `if` statement could look a lot like this:

          -   if at corn
              -   pick corn
          -   else
              -   if at lettuce
                  -   pick lettuce

          If there is nothing there, you won't pick anything!
      courseD_farmer_condLoops2_2019:
        courseD_farmer_condLoops2_a: Najlepší spôsob je, keď vložíš jeden príkaz `ak`
          do vnútra ďalšieho.
        courseD_farmer_condLoops2_b: For this puzzle, you should have one `if/else`
          statement and one plain `if` statement.
        courseD_farmer_condLoops2_c: |-
          Your `if` statement could look a lot like this:

          -   if at corn
              -   pick corn
          -   else
              -   if at lettuce
                  -   pick lettuce

          If there is nothing there, you won't pick anything!
      courseD_farmer_condLoops3:
        courseD_farmer_condLoops3_a: |-
          To get all of the items, try nesting `if` statements three deep.

          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        courseD_farmer_condLoops3_b: For this puzzle, you should have two `if/else`
          statements and one plain `if` statement.
      courseD_farmer_condLoops3_2018:
        courseD_farmer_condLoops3_a: |-
          To get all of the items, try nesting `if` statements three deep.

          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        courseD_farmer_condLoops3_b: For this puzzle, you should have two `if/else`
          statements and one plain `if` statement.
      courseD_farmer_condLoops3_2019:
        courseD_farmer_condLoops3_a: |-
          To get all of the items, try nesting `if` statements three deep.

          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        courseD_farmer_condLoops3_b: For this puzzle, you should have two `if/else`
          statements and one plain `if` statement.
      courseD_farmer_condLoops4:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Nikto nevie koľko šalátových hlavčiek vyrastie z jedného výhonka.

          Použi cyklus `pokiaľ tam je šalát` a zberaj, dokiaľ nebude všetko pozberané.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: Cyklus `pokiaľ` zvládne aj
          prázdne polia! Ak tam už nie je šalát, prestane zberať a umožní kódu posunúť
          sa ďalej.
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: You can use either a `while
          path ahead` loop or a `repeat` loop to go through all of the crops.
      courseD_farmer_condLoops4_2018:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Nikto nevie koľko šalátových hlavčiek vyrastie z jedného výhonka.

          Použi cyklus `pokiaľ tam je šalát` a zberaj, dokiaľ nebude všetko pozberané.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: Cyklus `pokiaľ` zvládne aj
          prázdne polia! Ak tam už nie je šalát, prestane zberať a umožní kódu posunúť
          sa ďalej.
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: You can use either a `while
          path ahead` loop or a `repeat` loop to go through all of the crops.
      courseD_farmer_condLoops4_2019:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Nikto nevie koľko šalátových hlavčiek vyrastie z jedného výhonka.

          Použi cyklus `pokiaľ tam je šalát` a zberaj, dokiaľ nebude všetko pozberané.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: Cyklus `pokiaľ` zvládne aj
          prázdne polia! Ak tam už nie je šalát, prestane zberať a umožní kódu posunúť
          sa ďalej.
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: You can use either a `while
          path ahead` loop or a `repeat` loop to go through all of the crops.
      courseD_farmer_condLoops5:
        courseD_farmer_condLoops5_a: Je tu nový cyklus `pokiaľ tam sú tekvice`. Dokážeš
          ho použiť v tejto úlohe?
        courseD_farmer_condLoops5_b: Na jednom miesto môže byť viac ako jedna kukurica,
          alebo šalát. Použi cyklus `pokiaľ` a pozberaj všetky!
      courseD_farmer_condLoops5_2018:
        courseD_farmer_condLoops5_a: Je tu nový cyklus `pokiaľ tam sú tekvice`. Dokážeš
          ho použiť v tejto úlohe?
        courseD_farmer_condLoops5_b: Na jednom miesto môže byť viac ako jedna kukurica,
          alebo šalát. Použi cyklus `pokiaľ` a pozberaj všetky!
      courseD_farmer_condLoops5_2019:
        courseD_farmer_condLoops5_a: 'There is a new loop: `repeat until there are
          pumpkins`. Can you see how to use it in this puzzle?'
        courseD_farmer_condLoops5_b: Na jednom miesto môže byť viac ako jedna kukurica,
          alebo šalát. Použi cyklus `pokiaľ` a pozberaj všetky!
      courseD_farmer_condLoops6:
        courseD_farmer_condLoops6_a: Use a `while there is corn` loop to make sure
          you get all of the corn along the way. This block won't do anything if there's
          no corn to pick.
        courseD_farmer_condLoops6_b: Make sure to check `if` there's a path ahead
          before you take your next step!
      courseD_farmer_condLoops6_2018:
        courseD_farmer_condLoops6_a: Posúvaj farmárku po každom kúsku šprály s použitím
          cyklu `pokiaľ tam je cesta vpred`, alebo bloku `ak tam je cesta vpred /
          inak`.
        courseD_farmer_condLoops6_b: Počas zberu potrebuješ zbierať len kukuricu.
          Tekvicu stačí ak pozbieraš až na konci programu.
      courseD_farmer_condLoops6_2019:
        courseD_farmer_condLoops6_a: Use a `while path ahead` loop or a `if path ahead
          / else` block to move the farmer down each piece of the spiral.
        courseD_farmer_condLoops6_b: Počas zberu potrebuješ zbierať len kukuricu.
          Tekvicu stačí ak pozbieraš až na konci programu.
      courseD_farmer_condLoops7:
        courseD_farmer_condLoops7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Try using `when path ahead` to keep the harvester
          moving the right number of steps.
      courseD_farmer_condLoops7_2018:
        courseD_farmer_condLoops7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Try using `when path ahead` to keep the harvester
          moving the right number of steps.
      courseD_farmer_condLoops7_2019:
        courseD_farmer_condLoops7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Try using `while path ahead` to keep the harvester
          moving the right number of steps.
      courseD_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: Pri riešení tejto úlohy ti môže veľmi
          pomôcť tlačidlo "Krok".
        courseD_farmer_condLoops_challenge1_b: Normally you would just `pick pumpkin`
          if you are at a pumpkin. What else do you need to do if you're at a pumpkin?
      courseD_farmer_condLoops_challenge1_2018:
        courseD_farmer_condLoops_challenge1_a: Pri riešení tejto úlohy ti môže veľmi
          pomôcť tlačidlo "Krok".
        courseD_farmer_condLoops_challenge1_b: Normally you would just `pick pumpkin`
          if you are at a pumpkin. What else do you need to do if you're at a pumpkin?
      courseD_farmer_condLoops_challenge1_2019:
        courseD_farmer_condLoops_challenge1_a: Pri riešení tejto úlohy ti môže veľmi
          pomôcť tlačidlo "Krok".
        courseD_farmer_condLoops_challenge1_b: Normally you would just `pick pumpkin`
          if you are at a pumpkin. What else do you need to do if you're at a pumpkin?
      courseD_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: Množstvo zeleniny na každom políčku
          sa môže líšiť. Pomôže ti cyklus pokiaľ!
      courseD_farmer_condLoops_challenge2_2018:
        courseD_farmer_condLoops_challenge2_a: Množstvo zeleniny na každom políčku
          sa môže líšiť. Pomôže ti cyklus pokiaľ!
      courseD_farmer_condLoops_challenge2_2019:
        courseD_farmer_condLoops_challenge2_a: Množstvo zeleniny na každom políčku
          sa môže líšiť. Pomôže ti cyklus pokiaľ!
      courseD_farmer_while1:
        courseD_farmer_while1_a: Budeš sa musieť posunúť päť-krát dopredu, aby si
          sa dostal k hromade. Môžeš na to použiť cyklus `opakuj`?
        courseD_farmer_while1_b: Použi blok `odstráň 1` keď stojiš pred hromadou hliny,
          aby si ju odstránil.
      courseD_farmer_while1_2018:
        courseD_farmer_while1_a: Budeš sa musieť posunúť päť-krát dopredu, aby si
          sa dostal k hromade. Môžeš na to použiť cyklus `opakuj`?
        courseD_farmer_while1_b: Použi blok `odstráň 1` keď stojiš pred hromadou hliny,
          aby si ju odstránil.
      courseD_farmer_while1_2019:
        courseD_farmer_while1_a: Budeš sa musieť posunúť päť-krát dopredu, aby si
          sa dostal k hromade. Môžeš na to použiť cyklus `opakuj`?
        courseD_farmer_while1_b: Použi blok `odstráň 1` keď stojiš pred hromadou hliny,
          aby si ju odstránil.
      courseD_farmer_while2:
        courseD_farmer_while2_a: Budeš sa musieť raz posunúť, aby si sa dostal k diere.
        courseD_farmer_while2_b: Blok `vyplň 1` budeš potrebovať 6-krát. Môžeš použiť
          cyklus, aby si to zjednodušil?
      courseD_farmer_while2_2018:
        courseD_farmer_while2_a: Budeš sa musieť raz posunúť, aby si sa dostal k diere.
        courseD_farmer_while2_b: Blok `vyplň 1` budeš potrebovať 6-krát. Môžeš použiť
          cyklus, aby si to zjednodušil?
      courseD_farmer_while2_2019:
        courseD_farmer_while2_a: Budeš sa musieť raz posunúť, aby si sa dostal k diere.
        courseD_farmer_while2_b: Blok `vyplň 1` budeš potrebovať 6-krát. Môžeš použiť
          cyklus, aby si to zjednodušil?
      courseD_farmer_while3:
        courseD_farmer_while3_a: Cyklus ti pomôže zjednodušiť kód.
        courseD_farmer_while3_b: Na to, aby si sa dostal k hromade, nebudeš potrebovaťˇžiadny
          blok `otoč sa`.
      courseD_farmer_while3_2018:
        courseD_farmer_while3_a: Cyklus ti pomôže zjednodušiť kód.
        courseD_farmer_while3_b: Na to, aby si sa dostal k hromade, nebudeš potrebovaťˇžiadny
          blok `otoč sa`.
      courseD_farmer_while3_2019:
        courseD_farmer_while3_a: Cyklus ti pomôže zjednodušiť kód.
        courseD_farmer_while3_b: Na to, aby si sa dostal k hromade, nebudeš potrebovaťˇžiadny
          blok `otoč sa`.
      courseD_farmer_while4:
        courseD_farmer_conditionals4_a: Namiesto použitia cyklu `opakuj`, použi cyklus  `pokiaľ
          tam je`, aby si mohol kopať, až kým hromada nezmizne.
        courseD_farmer_conditionals4_b: Takúto podobnú úlohu sme už mali, jediný rozdiel
          je v tom, aký cyklus potrebuješ.
      courseD_farmer_while4_2018:
        courseD_farmer_conditionals4_a: Namiesto použitia cyklu `opakuj`, použi cyklus  `pokiaľ
          tam je`, aby si mohol kopať, až kým hromada nezmizne.
        courseD_farmer_conditionals4_b: Takúto podobnú úlohu sme už mali, jediný rozdiel
          je v tom, aký cyklus potrebuješ.
      courseD_farmer_while4_2019:
        courseD_farmer_conditionals4_a: Namiesto použitia cyklu `opakuj`, použi cyklus  `pokiaľ
          tam je`, aby si mohol kopať, až kým hromada nezmizne.
        courseD_farmer_conditionals4_b: Takúto podobnú úlohu sme už mali, jediný rozdiel
          je v tom, aký cyklus potrebuješ.
      courseD_farmer_while5:
        courseD_farmer_conditionals5a_a: Skús použiť vnorený cyklus `pokiaľ tam je`
          vo vnútri cyklu `opakuj`.
        courseD_farmer_conditionals5a_b: Farmár sa potrebuje posunúť vpred celkovo
          5-krát, aby sa dostal na koniec riadka. Čo ešte potrebuje farmár urobiť?
        courseD_farmer_conditionals5a_c: Posuň sa 5-krát dopredu. Vždy keď sa posunieš
          vpred, odstrániš hlinu tým, že použiješ blok `pokiaľ tam je hromada`.
      courseD_farmer_while5_2018:
        courseD_farmer_conditionals5a_a: Skús použiť vnorený cyklus `pokiaľ tam je`
          vo vnútri cyklu `opakuj`.
        courseD_farmer_conditionals5a_b: Farmár sa potrebuje posunúť vpred celkovo
          5-krát, aby sa dostal na koniec riadka. Čo ešte potrebuje farmár urobiť?
        courseD_farmer_conditionals5a_c: Posuň sa 5-krát dopredu. Vždy keď sa posunieš
          vpred, odstrániš hlinu tým, že použiješ blok `pokiaľ tam je hromada`.
      courseD_farmer_while5_2019:
        courseD_farmer_conditionals5a_a: Skús použiť vnorený cyklus `pokiaľ tam je`
          vo vnútri cyklu `opakuj`.
        courseD_farmer_conditionals5a_b: Farmár sa potrebuje posunúť vpred celkovo
          5-krát, aby sa dostal na koniec riadka. Čo ešte potrebuje farmár urobiť?
        courseD_farmer_conditionals5a_c: Posuň sa 5-krát dopredu. Vždy keď sa posunieš
          vpred, odstrániš hlinu tým, že použiješ blok `pokiaľ tam je hromada`.
      courseD_farmer_while6:
        courseD_farmer_conditionals6_a: Nezabudni použiť cyklus  `pokiaľ`, aby si
          zistil, koľkokrát treba naplniť jamu.
        courseD_farmer_conditionals6_b: Všimni si, že farmár sa potrebuje posunúť
          niekoľkokrát dopredu a dolu, akoby išiel po schodoch.
        courseD_farmer_conditionals6_c: |-
          Pri vzore krokov po schodoch použi nasledujúce bloky

          -   posuň sa dopredu
          -   vyplň 1
          -   otoč sa vpravo
          -   posuň sa dopredu
          -   vyplň 1
              otoč sa vľavo

          Koľko krát potrebuješ použiť tento vzor krokov po schodoch?

          Nezabudni použiť `pokiaľ tam je jama`, aby si vyplnil jamu.
      courseD_farmer_while6_2018:
        courseD_farmer_conditionals6_a: Nezabudni použiť cyklus  `pokiaľ`, aby si
          zistil, koľkokrát treba naplniť jamu.
        courseD_farmer_conditionals6_b: Všimni si, že farmár sa potrebuje posunúť
          niekoľkokrát dopredu a dolu, akoby išiel po schodoch.
        courseD_farmer_conditionals6_c: |-
          Pri vzore krokov po schodoch použi nasledujúce bloky

          -   posuň sa dopredu
          -   vyplň 1
          -   otoč sa vpravo
          -   posuň sa dopredu
          -   vyplň 1
              otoč sa vľavo

          Koľko krát potrebuješ použiť tento vzor krokov po schodoch?

          Nezabudni použiť `pokiaľ tam je jama`, aby si vyplnil jamu.
      courseD_farmer_while6_2019:
        courseD_farmer_conditionals6_a: Nezabudni použiť cyklus  `pokiaľ`, aby si
          zistil, koľkokrát treba naplniť jamu.
        courseD_farmer_conditionals6_b: Všimni si, že farmár sa potrebuje posunúť
          niekoľkokrát dopredu a dolu, akoby išiel po schodoch.
        courseD_farmer_conditionals6_c: |-
          Pri vzore krokov po schodoch použi nasledujúce bloky

          -   posuň sa dopredu
          -   vyplň 1
          -   otoč sa vpravo
          -   posuň sa dopredu
          -   vyplň 1
              otoč sa vľavo

          Koľko krát potrebuješ použiť tento vzor krokov po schodoch?

          Nezabudni použiť `pokiaľ tam je jama`, aby si vyplnil jamu.
      courseD_farmer_while7:
        courseD_farmer_conditionals8_a: Blok `pokiaľ tam je cesta vpred` ti umožnuje
          pokračovať, i keď nevieš koľko štvorcov má cesta.
        courseD_farmer_conditionals8_b: V tejto úlohe ti pomôže, ak vložíš cyklus  `pokiaľ
          tam je cesta vpred` do vnútra cyklu na opakovanie.
        courseD_farmer_conditionals8_c: Čo musíš spraviť na konci každej cesty?
      courseD_farmer_while7_2018:
        courseD_farmer_conditionals8_a: Blok `pokiaľ tam je cesta vpred` ti umožnuje
          pokračovať, i keď nevieš koľko štvorcov má cesta.
        courseD_farmer_conditionals8_b: V tejto úlohe ti pomôže, ak vložíš cyklus  `pokiaľ
          tam je cesta vpred` do vnútra cyklu na opakovanie.
        courseD_farmer_conditionals8_c: Čo musíš spraviť na konci každej cesty?
      courseD_farmer_while7_2019:
        courseD_farmer_conditionals8_a: Blok `pokiaľ tam je cesta vpred` ti umožnuje
          pokračovať, i keď nevieš koľko štvorcov má cesta.
        courseD_farmer_conditionals8_b: V tejto úlohe ti pomôže, ak vložíš cyklus  `pokiaľ
          tam je cesta vpred` do vnútra cyklu na opakovanie.
        courseD_farmer_conditionals8_c: Čo musíš spraviť na konci každej cesty?
      courseD_farmer_while8:
        courseD_farmer_conditionals8_a: Budeš potrebovať použiť viac ako jeden cyklus  `pokiaľ`.
        courseD_farmer_conditionals8_b: Každá jama je na konci riadka, preto použi
          `pokiaľ tam je cesta vpred` ešte predtým, ako použiješ `pokiaľ tam je jama`.
        courseD_farmer_conditionals8_c: Všimni si, že potrebuješ 6-krát opakovať  kód
          `pokiaľ tam je cesta vpred` a `pokiaľ tam je jama`.
      courseD_farmer_while8_2018:
        courseD_farmer_conditionals8_a: Budeš potrebovať použiť viac ako jeden cyklus  `pokiaľ`.
        courseD_farmer_conditionals8_b: Každá jama je na konci riadka, preto použi
          `pokiaľ tam je cesta vpred` ešte predtým, ako použiješ `pokiaľ tam je jama`.
        courseD_farmer_conditionals8_c: Všimni si, že potrebuješ 6-krát opakovať  kód
          `pokiaľ tam je cesta vpred` a `pokiaľ tam je jama`.
      courseD_farmer_while8_2019:
        courseD_farmer_conditionals8_a: Budeš potrebovať použiť viac ako jeden cyklus  `pokiaľ`.
        courseD_farmer_conditionals8_b: Každá jama je na konci riadka, preto použi
          `pokiaľ tam je cesta vpred` ešte predtým, ako použiješ `pokiaľ tam je jama`.
        courseD_farmer_conditionals8_c: Všimni si, že potrebuješ 6-krát opakovať  kód
          `pokiaľ tam je cesta vpred` a `pokiaľ tam je jama`.
      courseD_farmer_while_challenge1:
        courseD_farmer_while_challenge1_a: Každá jama alebo hromada je umiestnená
          1 políčko **naspäť** od konca cesty.
        courseD_farmer_while_challenge1_b: If you use a `while` loop, you can tell
          the farmer to remove a pile or fill a hole, even if one isn't there. That
          means you can program her to remove any dirt or fill any hole, no matter
          where she is.
        courseD_farmer_conditionals8_c: It is possible to solve this without using
          any `repeat` loops. To do this, you will need to use four `while` loops.
      courseD_farmer_while_challenge1_2018:
        courseD_farmer_while_challenge1_a: Každá jama alebo hromada je umiestnená
          1 políčko **naspäť** od konca cesty.
        courseD_farmer_while_challenge1_b: If you use a `while` loop, you can tell
          the farmer to remove a pile or fill a hole, even if one isn't there. That
          means you can program her to remove any dirt or fill any hole, no matter
          where she is.
        courseD_farmer_conditionals8_c: It is possible to solve this without using
          any `repeat` loops. To do this, you will need to use four `while` loops.
      courseD_farmer_while_challenge1_2019:
        courseD_farmer_while_challenge1_a: Každá jama alebo hromada je umiestnená
          1 políčko **naspäť** od konca cesty.
        courseD_farmer_while_challenge1_b: If you use a `while` loop, you can tell
          the farmer to remove a pile or fill a hole, even if one isn't there. That
          means you can program her to remove any dirt or fill any hole, no matter
          where she is.
        courseD_farmer_conditionals8_c: It is possible to solve this without using
          any `repeat` loops. To do this, you will need to use four `while` loops.
      courseD_farmer_while_challenge2:
        courseD_farmer_while_challenge1_a: Každá jama alebo hromada je umiestnená
          1 políčko **naspäť** od konca cesty.
        courseD_farmer_while_challenge1_b: If you use a `while` loop, you can tell
          the farmer to remove a pile or fill a hole, even if one isn't there. That
          means you can program her to remove any dirt and fill any hole, while standing
          in the same place.
        courseD_farmer_conditionals8_c: It is possible to solve this without using
          any `repeat` loops. To do this, you will need to use four `while` loops.
      courseD_harvester_nested_loops_challenge1:
        courseD_harvester_nested_loops_challenge1_a: 'Aby farmárka pozbierala všetku
          kukuricu skús sledovať túto cestu! '
        courseD_harvester_nested_loops_challenge1_b: Na vyzbieranie viac ako jednej
          kukurice musíš použiť blok `zbieraj kukurica` viac ako raz.
        courseD_harvester_nested_loops_challenge1_c: Na vyriešenie úlohy budeš musieť
          umiestniť jeden malý cyklus do vnútra veľkého cyklu!
      courseD_harvester_nested_loops_challenge1_2018:
        courseD_harvester_nested_loops_challenge1_a: 'Aby farmárka pozbierala všetku
          kukuricu skús sledovať túto cestu! '
        courseD_harvester_nested_loops_challenge1_b: Na vyzbieranie viac ako jednej
          kukurice musíš použiť blok `zbieraj kukurica` viac ako raz.
        courseD_harvester_nested_loops_challenge1_c: Na vyriešenie úlohy budeš musieť
          umiestniť jeden malý cyklus do vnútra veľkého cyklu!
      courseD_harvester_nested_loops_challenge1_2019:
        courseD_harvester_nested_loops_challenge1_a: 'Aby farmárka pozbierala všetku
          kukuricu skús sledovať túto cestu! '
        courseD_harvester_nested_loops_challenge1_b: Na vyzbieranie viac ako jednej
          kukurice musíš použiť blok `zbieraj kukurica` viac ako raz.
        courseD_harvester_nested_loops_challenge1_c: Na vyriešenie úlohy budeš musieť
          umiestniť jeden malý cyklus do vnútra veľkého cyklu!
      courseD_iceage_loops1:
        courseD_iceage_loops1_a: Dávaj si pozor na rozbitý ľad! Skrat sa cezeň prepadne!
        courseD_iceage_loops1_b: |-
          Potrebuješ tento blok:

          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops10:
        courseB_iceage_loops10_a: Dávaj pozor na rozbitý ľad! Scrat sa cezeň prepadne
          do vody!
        courseB_iceage_loops10_b: Skús si povedať kroky nahlas, alebo si ich napísať
          na papier. Vidíš v nich nejaký vzor?
        courseB_iceage_loops10_c: Toto je dlhá úloha! Choď po tejto ceste.
      courseD_iceage_loops10_2019:
        courseB_iceage_loops10_a: Dávaj pozor na rozbitý ľad! Scrat sa cezeň prepadne
          do vody!
        courseB_iceage_loops10_b: Skús si povedať kroky nahlas, alebo si ich napísať
          na papier. Vidíš v nich nejaký vzor?
        courseB_iceage_loops10_c: Toto je dlhá úloha! Choď po tejto ceste.
      courseD_iceage_loops1_2019:
        courseD_iceage_loops1_a: Dávaj si pozor na rozbitý ľad! Skrat sa cezeň prepadne!
        courseD_iceage_loops1_b: |-
          Potrebuješ tento blok:

          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops2:
        courseD_iceage_loops2_a: Rozdeľ túto úlohu na dve časti, jednu pred zákrutou
          a druhú po zákrute.
        courseD_iceage_loops2_b: Ak sa zasekneš, skús si povedať všetky kroky nahlas.
        courseD_iceage_loops2_c: Choď po tejto ceste, aby si dostal Scrata k žaluďu.
      courseD_iceage_loops2_2019:
        courseD_iceage_loops2_a: Rozdeľ túto úlohu na dve časti, jednu pred zákrutou
          a druhú po zákrute.
        courseD_iceage_loops2_b: Ak sa zasekneš, skús si povedať všetky kroky nahlas.
        courseD_iceage_loops2_c: Choď po tejto ceste, aby si dostal Scrata k žaluďu.
      courseD_iceage_loops3:
        courseB_iceage_loops3_a: |-
          Použi tento nový blok!
          <xml><block type="controls_repeat_dropdown">

          <title name="TIMES" config="2-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: Na opakovanie kódu vytiahni cyklus `opakuj` a potom
          do jeho vnútra vlož blok, ktorý chceš opakovať.
      courseD_iceage_loops3_2019:
        courseB_iceage_loops3_a: |-
          Use this new block!

           <xml><block type="controls_repeat_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>
        courseB_iceage_loops3_b: Na opakovanie kódu vytiahni cyklus `opakuj` a potom
          do jeho vnútra vlož blok, ktorý chceš opakovať.
      courseD_iceage_loops4:
        courseD_iceage_loops4_a: Neboj sa spustiť tvoj kód a uvidíš, čo sa stane!
        courseD_iceage_loops4_b: Skús si zapísať kroky,  ktoré musí Scrat spraviť.
          Nájdeš v nich opakujúci sa vzor?
        courseD_iceage_loops4_c: Toto je cesta, po ktorej by mal ísť Scrat.
      courseD_iceage_loops4_2019:
        courseD_iceage_loops4_a: Neboj sa spustiť tvoj kód a uvidíš, čo sa stane!
        courseD_iceage_loops4_b: Skús si zapísať kroky,  ktoré musí Scrat spraviť.
          Nájdeš v nich opakujúci sa vzor?
        courseD_iceage_loops4_c: Toto je cesta, po ktorej by mal ísť Scrat.
      courseD_iceage_loops6:
        courseD_iceage_loops6_a: Tvoj výsledný kód bude mať **tri** bloky `posuň sa
          dopredu` blocks.
        courseD_iceage_loops6_b: Potrebuješ pridať už iba **jeden** cyklus!
        courseD_iceage_loops6_c: Tvoja výsledná cesta by mala vyzerať takto.
      courseD_iceage_loops6_2019:
        courseD_iceage_loops6_a: Tvoj výsledný kód bude mať **tri** bloky `posuň sa
          dopredu` blocks.
        courseD_iceage_loops6_b: Potrebuješ pridať už iba **jeden** cyklus!
        courseD_iceage_loops6_c: Tvoja výsledná cesta by mala vyzerať takto.
      courseD_iceage_loops7:
        courseB_iceage_loops7_a: Ak sa zasekneš, skús si zapísať kroky na papier.
          Vidíš v nich vzor?
        courseB_iceage_loops7_b: Scrat by mal ísť touto cestou, aby sa dostal k žaluďu.
      courseD_iceage_loops7_2019:
        courseB_iceage_loops7_a: Ak sa zasekneš, skús si zapísať kroky na papier.
          Vidíš v nich vzor?
        courseB_iceage_loops7_b: Scrat by mal ísť touto cestou, aby sa dostal k žaluďu.
      courseD_iceage_loops8:
        courseD_iceage_loops8_a: Sú otočky správnym smerom? Čo iné ešte môžeš zmeniť?
        courseD_iceage_loops8_b: Prvý cyklus by sa mal opakovať **3** krát, druhý
          by sa mal opakovať **5** krát, tretí by sa mal opakovať **4** krát a posledný
          cyklus by sa mal opakovať **4** krát.
        courseD_iceage_loops8_c: Použi cykly, aby si pomohol Scratovi prejsť po tejto
          ceste.
      courseD_iceage_loops8_2019:
        courseD_iceage_loops8_a: Sú otočky správnym smerom? Čo iné ešte môžeš zmeniť?
        courseD_iceage_loops8_b: Prvý cyklus by sa mal opakovať **3** krát, druhý
          by sa mal opakovať **5** krát, tretí by sa mal opakovať **4** krát a posledný
          cyklus by sa mal opakovať **4** krát.
        courseD_iceage_loops8_c: Použi cykly, aby si pomohol Scratovi prejsť po tejto
          ceste.
      courseD_iceage_loops9:
        courseD_iceage_loops9_a: Máš problém? Skús si úlohu rozdeliť na menšie časti.
          Neboj sa spustiť tvoj kód aj počas toho ako programuješ!
        courseD_iceage_loops9_b: Tvoj výsledný kód by mal mať **4** cykly.
        courseD_iceage_loops9_c: Scrat by mal ísť po tejto ceste, aby sa dostal k
          žaluďu.
      courseD_iceage_loops9_2019:
        courseD_iceage_loops9_a: Máš problém? Skús si úlohu rozdeliť na menšie časti.
          Neboj sa spustiť tvoj kód aj počas toho ako programuješ!
        courseD_iceage_loops9_b: Tvoj výsledný kód by mal mať **4** cykly.
        courseD_iceage_loops9_c: Scrat by mal ísť po tejto ceste, aby sa dostal k
          žaluďu.
      courseD_maze_intro4_2019:
        courseC_maze_programming4_a: You can turn right or left from Red's point of
          view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: Ak chceš ísť po ceste, posuň sa dopredu a otoč
          sa jedným smerom, znova sa pohni a otoč sa opačným smerom. Posuň sa dopredu
          ešte jeden krát, aby si sa dostal až k žaluďu.
      courseD_maze_intro5a_2019:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Remember that turns are from Red's perspective.
        courseC_maze_programming5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_nestedLoops3:
        courseD_maze_nestedLoops3_a: Na vyriešenie úlohy musíš vložiť jeden blok s
          cyklom `opakuj` do ďalšieho.
        courseD_maze_nestedLoops3_b: Nevieš prísť na to, kam máš dať cykly? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
        courseD_maze_nestedLoops3_c: Skús napísať kód pre prvú časť cesty a otočenie
          sa. Vieš sa pomocou opakovaní dostať až k slnečnici?
      courseD_maze_nestedLoops3_2018:
        courseD_maze_nestedLoops3_a: Na vyriešenie úlohy musíš vložiť jeden blok s
          cyklom `opakuj` do ďalšieho.
        courseD_maze_nestedLoops3_b: Nevieš prísť na to, kam máš dať cykly? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
        courseD_maze_nestedLoops3_c: Skús napísať kód pre prvú časť cesty a otočenie
          sa. Vieš sa pomocou opakovaní dostať až k slnečnici?
      courseD_maze_nestedLoops3_2019:
        courseD_maze_nestedLoops3_a: Na vyriešenie úlohy musíš vložiť jeden blok s
          cyklom `opakuj` do ďalšieho.
        courseD_maze_nestedLoops3_b: Nevieš prísť na to, kam máš dať cykly? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
        courseD_maze_nestedLoops3_c: Skús napísať kód pre prvú časť cesty a otočenie
          sa. Vieš sa pomocou opakovaní dostať až k slnečnici?
      courseD_maze_nestedLoops4:
        courseD_maze_nestedLoops4_a: |-
          Choď po tejto ceste.

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Ak nevieš rozoznať opakujúci sa vzorec, najskôr
          zostav kód bez cyklov a nájdi, ktoré časti kódu sa opakujú. Potom vlož cyklus.
        courseD_maze_nestedLoops4_c: Skús použiť jeden blok cyklu `opakuj` vnútri
          iného cyklu, aby si tak skrátil kód.
      courseD_maze_nestedLoops4_2018:
        courseD_maze_nestedLoops4_a: |-
          Choď po tejto ceste.

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Ak nevieš rozoznať opakujúci sa vzorec, najskôr
          zostav kód bez cyklov a nájdi, ktoré časti kódu sa opakujú. Potom vlož cyklus.
        courseD_maze_nestedLoops4_c: Skús použiť jeden blok cyklu `opakuj` vnútri
          iného cyklu, aby si tak skrátil kód.
      courseD_maze_nestedLoops4_2019:
        courseD_maze_nestedLoops4_a: |-
          Choď po tejto ceste.

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Ak nevieš rozoznať opakujúci sa vzorec, najskôr
          zostav kód bez cyklov a nájdi, ktoré časti kódu sa opakujú. Potom vlož cyklus.
        courseD_maze_nestedLoops4_c: Skús použiť jeden blok cyklu `opakuj` vnútri
          iného cyklu, aby si tak skrátil kód.
      courseD_maze_nestedLoops5:
        courseD_maze_nestedLoops5_a: Hľadaj schodovitý vzorec, ktorý sa opakuje a
          zisti, kde môžeš použiť vnorený cyklus.
        courseD_maze_nestedLoops5_b: Nevieš prísť na to, kam máš dať cykly? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
      courseD_maze_nestedLoops5_2018:
        courseD_maze_nestedLoops5_a: Hľadaj schodovitý vzorec, ktorý sa opakuje a
          zisti, kde môžeš použiť vnorený cyklus.
        courseD_maze_nestedLoops5_b: Nevieš prísť na to, kam máš dať cykly? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
      courseD_maze_nestedLoops5_2019:
        courseD_maze_nestedLoops5_a: Hľadaj schodovitý vzorec, ktorý sa opakuje a
          zisti, kde môžeš použiť vnorený cyklus.
        courseD_maze_nestedLoops5_b: Nevieš prísť na to, kam máš dať cykly? Skús napísať
          kód krok za krokom a pohľadaj v ňom nejaký vzor.
      courseD_maze_nestedLoops6:
        courseD_maze_nestedLoops6_a: Ak si nevieš dať rady, napíš si kód najskôr na
          papier bez cyklov a hľadaj opakujúce sa vzory.
        courseD_maze_nestedLoops6_b: Vnáranie blokov `opakuj` do seba môže znížiť
          potrebný počet blokov.
        courseD_maze_nestedLoops6_c: Na vyriešenie tejto úlohy sú potrebné dve sady
          vnorených cyklov.
      courseD_maze_nestedLoops6_2018:
        courseD_maze_nestedLoops6_a: Ak si nevieš dať rady, napíš si kód najskôr na
          papier bez cyklov a hľadaj opakujúce sa vzory.
        courseD_maze_nestedLoops6_b: Vnáranie blokov `opakuj` do seba môže znížiť
          potrebný počet blokov.
        courseD_maze_nestedLoops6_c: Na vyriešenie tejto úlohy sú potrebné dve sady
          vnorených cyklov.
      courseD_maze_nestedLoops6_2019:
        courseD_maze_nestedLoops6_a: Ak si nevieš dať rady, napíš si kód najskôr na
          papier bez cyklov a hľadaj opakujúce sa vzory.
        courseD_maze_nestedLoops6_b: Vnáranie blokov `opakuj` do seba môže znížiť
          potrebný počet blokov.
        courseD_maze_nestedLoops6_c: Na vyriešenie tejto úlohy sú potrebné dve sady
          vnorených cyklov.
      courseD_maze_ramp1:
        courseC_maze_programming1_a: Ak sa vták neposúva k prasiatku, presvedč sa,
          či sú bloky k sebe dobre pripojené a stlač "Spustiť".
        courseC_maze_programming1_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp1_2018:
        courseC_maze_programming1_a: Ak sa vták neposúva k prasiatku, presvedč sa,
          či sú bloky k sebe dobre pripojené a stlač "Spustiť".
        courseC_maze_programming1_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp1_2019:
        courseC_maze_programming1_a: Ak sa vták neposúva k prasiatku, presvedč sa,
          či sú bloky k sebe dobre pripojené a stlač "Spustiť".
        courseC_maze_programming1_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp2:
        courseC_maze_programming2_a: Vytiahni blok `posuň sa dopredu` z panela nástrojov
          na pracovnú plochu a pripoj ho k bloku `pri spustení`.
        courseC_maze_programming2_b: Uisti sa, že sú všetky 3 bloky spojené a pripojené
          ku bloku "pri spustení".
      courseD_maze_ramp2_2018:
        courseC_maze_programming2_a: Vytiahni blok `posuň sa dopredu` z panela nástrojov
          na pracovnú plochu a pripoj ho k bloku `pri spustení`.
        courseC_maze_programming2_b: Uisti sa, že sú všetky 3 bloky spojené a pripojené
          ku bloku "pri spustení".
      courseD_maze_ramp2_2019:
        courseC_maze_programming2_a: Vytiahni blok `posuň sa dopredu` z panela nástrojov
          na pracovnú plochu a pripoj ho k bloku `pri spustení`.
        courseC_maze_programming2_b: Uisti sa, že sú všetky 3 bloky spojené a pripojené
          ku bloku "pri spustení".
      courseD_maze_ramp3:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nAk
          chceš vymazať blok zo stredu tvojho kódu, oddeľ bloky, ktoré sú pod ním
          od zvyšku kódu a odtiahni ich nabok . \n\nPrejdi na blok, ktorý chceš odstrániť
          a odtiahni ho naspäť do panela nástrojov.\n\nNakoniec vráť zvyšné bloky,
          tam kam patria."
      courseD_maze_ramp3_2018:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nAk
          chceš vymazať blok zo stredu tvojho kódu, oddeľ bloky, ktoré sú pod ním
          od zvyšku kódu a odtiahni ich nabok . \n\nPrejdi na blok, ktorý chceš odstrániť
          a odtiahni ho naspäť do panela nástrojov.\n\nNakoniec vráť zvyšné bloky,
          tam kam patria."
      courseD_maze_ramp3_2019:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nAk
          chceš vymazať blok zo stredu tvojho kódu, oddeľ bloky, ktoré sú pod ním
          od zvyšku kódu a odtiahni ich nabok . \n\nPrejdi na blok, ktorý chceš odstrániť
          a odtiahni ho naspäť do panela nástrojov.\n\nNakoniec vráť zvyšné bloky,
          tam kam patria."
      courseD_maze_ramp4:
        courseC_maze_programming4_a: Môžeš sa otočiť vpravo alebo vľavo z pohľadu
          vtáka. Ak sa pozeráš doprava, tak otočením vpravo sa budeš pozerať nadol.
        courseC_maze_programming4_b: Ak chceš ísť po ceste, posuň sa dopredu a otoč
          sa jedným smerom, znova sa pohni a otoč sa opačným smerom. Posuň sa dopredu
          ešte jeden krát, aby si sa dostal až k prasiatku.
      courseD_maze_ramp4_2018:
        courseC_maze_programming4_a: Môžeš sa otočiť vpravo alebo vľavo z pohľadu
          vtáka. Ak sa pozeráš doprava, tak otočením vpravo sa budeš pozerať nadol.
        courseC_maze_programming4_b: Ak chceš ísť po ceste, posuň sa dopredu a otoč
          sa jedným smerom, znova sa pohni a otoč sa opačným smerom. Posuň sa dopredu
          ešte jeden krát, aby si sa dostal až k prasiatku.
      courseD_maze_ramp4_2019:
        courseC_maze_programming4_a: Zo Scratovho pohľadu sa môžeš otočiť aj vľavo
          aj vpravo. Ak si natočený vpravo, ďalšie otočenie sa vpravo ťa natočí smerom
          dole.
        courseC_maze_programming4_b: Ak chceš ísť po ceste, posuň sa dopredu a otoč
          sa jedným smerom, znova sa pohni a otoč sa opačným smerom. Posuň sa dopredu
          ešte jeden krát, aby si sa dostal až k žaluďu.
      courseD_maze_ramp5:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Pamätaj si, že smer otáčania sa určuje z pohľadu
          vtáka.
        courseC_maze_programming5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp5_2018:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Pamätaj si, že smer otáčania sa určuje z pohľadu
          vtáka.
        courseC_maze_programming5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp5_2019:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Pamätaj si, že smer otáčania sa určuje z pohľadu
          vtáka.
        courseC_maze_programming5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp5a:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Pamätaj si, že smer otáčania sa určuje z pohľadu
          vtáka.
        courseC_maze_programming5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp5a_2018:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Pamätaj si, že smer otáčania sa určuje z pohľadu
          vtáka.
        courseC_maze_programming5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp5a_2019:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Pamätaj si, že smer otáčania sa určuje z pohľadu
          Scrata.
        courseC_maze_programming5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp5b:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Pamätaj si, že smer otáčania sa určuje z pohľadu
          vtáka.
        courseC_maze_programming5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp5b_2018:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Pamätaj si, že smer otáčania sa určuje z pohľadu
          vtáka.
        courseC_maze_programming5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp5b_2019:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Pamätaj si, že smer otáčania sa určuje z pohľadu
          vtáka.
        courseC_maze_programming5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_maze_ramp6:
        courseC_maze_programming6_a: Sú dve možnosti ako vyriešiť túto úlohu!
        courseC_maze_programming6_b: Vták začína tvárou k stene, tak sa nezabudni
          otočiť predtým, ako sa pohneš.
        courseC_maze_programming6_c: 'Pamätaj si, že môžeš pracovať postupne: po každom
          napísanom riadku kódu môžeš program spustiť, aby si lepšie uvidel, kam sa
          musíš posunúť ďalej.'
      courseD_maze_ramp7:
        courseD_maze_ramp7_b: Nezabudli používať tlačidlo "Krok". Pomôže ti prejsť
          bludiskom krok po kroku a nájsť chyby.
        courseD_maze_ramp7_a: Použi bloky "opakuj", do ktorých vložíš buď jeden blok,
          alebo viacero blokov, ktoré sa budú znovu a znovu opakovať.
        courseD_maze_ramp7_c: If you want to simplify your code, you can put one repeat
          loop inside of another! This is called a **nested loop**.
      courseD_maze_until1:
        courseD_maze_until1_a: Vidíš nejaké postupnosti, z ktorých môžeš vytvoriť
          cyklus a tak skrátiť kód?
        courseD_maze_until1_b: Skús použiť vnorené cykly `opakuj`, aby si túto úlohu
          vyriešil.
      courseD_maze_until1_2018:
        courseD_maze_until1_a: Vidíš nejaké postupnosti, z ktorých môžeš vytvoriť
          cyklus a tak skrátiť kód?
        courseD_maze_until1_b: Skús použiť vnorené cykly `opakuj`, aby si túto úlohu
          vyriešil.
      courseD_maze_until1_2019:
        courseD_maze_until1_a: Vidíš nejaké postupnosti, z ktorých môžeš vytvoriť
          cyklus a tak skrátiť kód?
        courseD_maze_until1_b: Skús použiť vnorené cykly `opakuj`, aby si túto úlohu
          vyriešil.
      courseD_maze_until3:
        courseD_maze_until3_a: |-
          -   Čo ten kód robí?

          -   Čo by mal robiť?

          -   Čo ti to hovorí?
        courseD_maze_until3_b: If you are getting stuck, try writing out the steps
          on a piece of paper and looking for places where they repeat.
        courseD_maze_until3_c: Vidíš vzor na kroky po schodoch ktorý v tejto úlohe
          môžeš nasledovať?
        courseD_maze_until3_d: Nezabudni použiť blok `opakuj pokiaľ`, a tak skráť
          svoj kód.
      courseD_maze_until3_2018:
        courseD_maze_until3_a: |-
          -   Čo ten kód robí?

          -   Čo by mal robiť?

          -   Čo ti to hovorí?
        courseD_maze_until3_b: If you are getting stuck, try writing out the steps
          on a piece of paper and looking for places where they repeat.
        courseD_maze_until3_c: Vidíš vzor na kroky po schodoch ktorý v tejto úlohe
          môžeš nasledovať?
        courseD_maze_until3_d: Nezabudni použiť blok `opakuj pokiaľ`, a tak skráť
          svoj kód.
      courseD_maze_until3_2019:
        courseD_maze_until3_a: |-
          -   Čo ten kód robí?

          -   Čo by mal robiť?

          -   Čo ti to hovorí?
        courseD_maze_until3_b: If you are getting stuck, try writing out the steps
          on a piece of paper and looking for places where they repeat.
        courseD_maze_until3_c: Vidíš vzor na kroky po schodoch ktorý v tejto úlohe
          môžeš nasledovať?
        courseD_maze_until3_d: Nezabudni použiť blok `opakuj pokiaľ`, a tak skráť
          svoj kód.
      courseD_maze_until4:
        courseD_maze_until4_a: |-
          Použi tlačidlo "Krok", aby si svoj kód prešiel riadok po riadku?

          -   Funguje všetko v prvom kroku?
          -   Funguje všetko v druhom kroku?
          -   Kde sa to pokazilo?
        courseD_maze_until4_b: Vidíš vzor na kroky po schodoch ktorý v tejto úlohe
          môžeš nasledovať?
        courseD_maze_until4_c: Nezabudni použiť blok `opakuj pokiaľ`, a tak skráť
          svoj kód.
      courseD_maze_until4_2018:
        courseD_maze_until4_a: |-
          Použi tlačidlo "Krok", aby si svoj kód prešiel riadok po riadku?

          -   Funguje všetko v prvom kroku?
          -   Funguje všetko v druhom kroku?
          -   Kde sa to pokazilo?
        courseD_maze_until4_b: Vidíš vzor na kroky po schodoch ktorý v tejto úlohe
          môžeš nasledovať?
        courseD_maze_until4_c: Nezabudni použiť blok `opakuj pokiaľ`, a tak skráť
          svoj kód.
      courseD_maze_until4_2019:
        courseD_maze_until4_a: |-
          Použi tlačidlo "Krok", aby si svoj kód prešiel riadok po riadku?

          -   Funguje všetko v prvom kroku?
          -   Funguje všetko v druhom kroku?
          -   Kde sa to pokazilo?
        courseD_maze_until4_b: Vidíš vzor na kroky po schodoch ktorý v tejto úlohe
          môžeš nasledovať?
        courseD_maze_until4_c: Nezabudni použiť blok `opakuj pokiaľ`, a tak skráť
          svoj kód.
      courseD_maze_until5:
        courseD_maze_until5_a: Don't forget to use `if path to the left` to keep the
          zombie checking for a place to turn.
        courseD_maze_until5_b: Použi len jeden `posuň sa dopredu` a vlož ho do vnútra  bloku
          `opakuj pokiaľ neplatí slnečnica`
        courseD_maze_until5_c: After each step, the zombie should check whether there
          is a path to the left. What should he do if he finds one?
      courseD_maze_until5_2018:
        courseD_maze_until5_b: Použi len jeden `posuň sa dopredu` a vlož ho do vnútra  bloku
          `opakuj pokiaľ neplatí slnečnica`
      courseD_maze_until5_2019:
        courseD_maze_until5_b: Použi len jeden `posuň sa dopredu` a vlož ho do vnútra  bloku
          `opakuj pokiaľ neplatí slnečnica`
      courseD_maze_until6:
        courseD_maze_until6_a: This time, try the `if path to the right` to keep the
          zombie on track.
        courseD_maze_until6_b: Použi len jeden `posuň sa dopredu` a vlož ho do vnútra  bloku
          `opakuj pokiaľ neplatí slnečnica`
        courseD_maze_until6_c: Hoci je v tejto úlohe viac otočení, tvoj kód môže byť
          takmer identický, ak použiješ blok `opakuj pokiaľ`!
      courseD_maze_until6_2018:
        courseD_maze_until6_b: Použi len jeden `posuň sa dopredu` a vlož ho do vnútra  bloku
          `opakuj pokiaľ neplatí slnečnica`
      courseD_maze_until6_2019:
        courseD_maze_until6_b: Použi len jeden `posuň sa dopredu` a vlož ho do vnútra  bloku
          `opakuj pokiaľ neplatí slnečnica`
      courseD_maze_until7:
        courseD_maze_until7_a: Tvoj kód nemusí byť dlhší ako minule len preto, lebo
          je to bludisko!
        courseD_maze_until7_b: Hoci je v tejto úlohe viac otočení, tvoj kód môže byť
          takmer identický, ak použiješ blok `opakuj pokiaľ`!
        courseD_maze_until7_c: Remember to check for paths to the left, because turning
          right will take you down the wrong path!
      courseD_maze_until7_2018:
        courseD_maze_until7_a: Tvoj kód nemusí byť dlhší ako minule len preto, lebo
          je to bludisko!
        courseD_maze_until7_b: Hoci je v tejto úlohe viac otočení, tvoj kód môže byť
          takmer identický, ak použiješ blok `opakuj pokiaľ`!
      courseD_maze_until7_2019:
        courseD_maze_until7_a: Tvoj kód nemusí byť dlhší ako minule len preto, lebo
          je to bludisko!
        courseD_maze_until7_b: Hoci je v tejto úlohe viac otočení, tvoj kód môže byť
          takmer identický, ak použiješ blok `opakuj pokiaľ`!
      courseD_maze_until8:
        courseD_maze_until8_a: Make sure you're using an `if/else` block to keep the
          zombie headed the right direction.
        courseD_maze_until8_b: 'With your `if/else` block: if there is a path ahead,
          what should you do?'
        courseD_maze_until8_c: 'With your `if/else` block: if there is not a path
          ahead, which way should you turn?'
      courseD_maze_until9:
        courseD_maze_until8_a: Using `if path ahead` will keep you going forward whenever
          possible, helping you miss the paths with chompers.
        courseD_maze_until8_b: Which direction should you turn if there is no path
          forward?
        courseD_maze_until8_c: Remember to use the `repeat until` block to get you
          to the sunflower!
      courseD_maze_until9_2018:
        courseD_maze_until8_c: Remember to use the `repeat until` block to get you
          to the sunflower!
      courseD_maze_until9_2019:
        courseD_maze_until8_c: Remember to use the `repeat until` block to get you
          to the sunflower!
      courseD_playLab_cond1:
        courseD_playLab_cond1_a: Na vyriešenie úlohy pripoj blok `posuň postavu 1
          hore` ku udalosti `keď šípka hore` a zopakuj to aj pre ostatné smery.
        courseD_playLab_cond1_b: Použi šípočky na blokoch `keď šípka` and `posuň postavu`,
          aby si zmenil smer, ktorým pôjdu.
        courseD_playLab_cond1_c: Po stlačení tlačidla "Spustiť" nezabudni posunúť
          Peglega ku obom vlajkám!
      courseD_playLab_cond1_2018:
        courseD_playLab_cond1_a: Na vyriešenie úlohy pripoj blok `posuň postavu 1
          hore` ku udalosti `keď šípka hore` a zopakuj to aj pre ostatné smery.
        courseD_playLab_cond1_b: Použi šípočky na blokoch `keď šípka` and `posuň postavu`,
          aby si zmenil smer, ktorým pôjdu.
        courseD_playLab_cond1_c: Po stlačení tlačidla "Spustiť" nezabudni posunúť
          Peglega ku obom vlajkám!
      courseD_playLab_cond2:
        courseD_playLab_cond2_a: Na vyriešenie tejto úlohy pripoj blok `pridaj bod`
          pod udalosť `keď postava 1 dotkne sa postavy 2`.
      courseD_playLab_cond2_2018:
        courseD_playLab_cond2_a: Na vyriešenie tejto úlohy pripoj blok `pridaj bod`
          pod udalosť `keď postava 1 dotkne sa postavy 2`.
      courseD_playLab_cond3:
        courseD_playLab_cond3_a: Do cyklu `opakuj donekonečna` musíš vložiť dva bloky.
          Jeden zmení drakovu náladu na náhodnú a druhý počká 1 sekundu pred opätovným
          zbehnutím cyklu.
      courseD_playLab_cond3_2018:
        courseD_playLab_cond3_a: Do cyklu `opakuj donekonečna` musíš vložiť dva bloky.
          Jeden zmení drakovu náladu na náhodnú a druhý počká 1 sekundu pred opätovným
          zbehnutím cyklu.
      courseD_playLab_cond3a:
        courseD_playLab_cond3_c: "-   `ak` má drak veselú náladu \n    -   `pridaj
          bod`\n    -   `pridaj bod`  \n\n-   `inak` `pridaj bod`"
      courseD_playLab_cond3a_2018:
        courseD_playLab_cond3_c: "-   `ak` má drak veselú náladu \n    -   `pridaj
          bod`\n    -   `pridaj bod`  \n\n-   `inak` `pridaj bod`"
      courseD_playLab_cond4:
        courseD_playLab_cond4_a: Potrebuješ použiť udalosť `pri spustení`.
        courseD_playLab_cond4_b: Máme tu špeciálny blok `nastav každého maskovaného
          ninju, aby naháňal postavu`, vďaka ktorému bude ninja neustále behať za
          pirátom!
        courseD_playLab_cond4_c: Pridaj blok `ukonči hru ako prehru` pod udalosť `keď
          sa postava 1 zrazí s maskovaným ninjom`.
      courseD_playLab_cond4_2018:
        courseD_playLab_cond4_a: Potrebuješ použiť udalosť `pri spustení`.
        courseD_playLab_cond4_b: Máme tu špeciálny blok `nastav každého maskovaného
          ninju, aby naháňal postavu`, vďaka ktorému bude ninja neustále behať za
          pirátom!
        courseD_playLab_cond4_c: Pridaj blok `ukonči hru ako prehru` pod udalosť `keď
          sa postava 1 zrazí s maskovaným ninjom`.
      courseD_playLab_cond5:
        courseD_playLab_cond5_a: Použí podmienku `ak`, ktorá overí, či je `skóre`
          `>` `5`.
        courseD_playLab_cond5_b: V hre môžeš cyklus `opakuj donekonečna` použiť aj
          viackrát.
      courseD_playLab_cond5_2018:
        courseD_playLab_cond5_a: Použí podmienku `ak`, ktorá overí, či je `skóre`
          `>` `5`.
        courseD_playLab_cond5_b: V hre môžeš cyklus `opakuj donekonečna` použiť aj
          viackrát.
      courseD_playLab_cond6:
        courseD_playLab_cond6_a: Na spomalenie ninju pridaj na začiatok programu blok
          `nastav každému maskovanému ninjovi rýchlosť`.
        courseD_playLab_cond6_b: Potrebuješ blok `ak je postava 1 v pozícii > 255`
          vložiť dovnútra cyklu `opakuj donekonečna`, aby neustále kontroloval, či
          sa pirát nenachádza pod chobotnicami.
      courseD_playLab_cond6_2018:
        courseD_playLab_cond6_a: Na spomalenie ninju pridaj na začiatok programu blok
          `nastav každému maskovanému ninjovi rýchlosť`.
        courseD_playLab_cond6_b: Potrebuješ blok `ak je postava 1 v pozícii > 255`
          vložiť dovnútra cyklu `opakuj donekonečna`, aby neustále kontroloval, či
          sa pirát nenachádza pod chobotnicami.
      courseD_playLab_cond6a:
        courseD_playLab_cond6_c: Na začiatok cyklu `opakuj donekonečna` kontrolujúceho
          pirátovu polohu pridaj blok `čakaj 1 sekundu` (ešte pred podmienku `AK`),
          aby sa mu body neodčítavali príliš rýchlo.
      courseD_playLab_cond6a_2018:
        courseD_playLab_cond6_c: Na začiatok cyklu `opakuj donekonečna` kontrolujúceho
          pirátovu polohu pridaj blok `čakaj 1 sekundu` (ešte pred podmienku `AK`),
          aby sa mu body neodčítavali príliš rýchlo.
      courseD_scrat_ramp1:
        courseC_maze_programming1_a: If Scrat isn't getting to the acorn, make sure
          all three of the blocks have been fully snapped together, then click "Run"
          again.
        courseC_maze_programming1_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_scrat_ramp2:
        courseC_maze_programming2_a: Vytiahni blok `posuň sa dopredu` z panela nástrojov
          na pracovnú plochu a pripoj ho k bloku `pri spustení`.
        courseC_maze_programming2_b: Uisti sa, že všetky tri bloky `posuň sa dopredu`
          sú spojené s blokom `pri spustení`.
      courseD_scrat_ramp3:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nAk
          chceš vymazať blok zo stredu tvojho kódu, oddeľ bloky, ktoré sú pod ním
          od zvyšku kódu a odtiahni ich nabok . \n\nPrejdi na blok, ktorý chceš odstrániť
          a odtiahni ho naspäť do panela nástrojov.\n\nNakoniec vráť zvyšné bloky,
          tam kam patria."
        courseC_maze_programming3_b: Nezabuni, že otáčanie sa vľavo a vpravo je vždy
          z vtáčikovej perspektívy.
      courseD_scrat_ramp4:
        courseC_maze_programming4_a: Zo Scratovho pohľadu sa môžeš otočiť aj vľavo
          aj vpravo. Ak si natočený vpravo, ďalšie otočenie sa vpravo ťa natočí smerom
          dole.
        courseC_maze_programming4_b: Ak chceš ísť po ceste, posuň sa dopredu a otoč
          sa jedným smerom, znova sa pohni a otoč sa opačným smerom. Posuň sa dopredu
          ešte jeden krát, aby si sa dostal až k žaluďu.
        courseC_maze_programming4_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_scrat_ramp5:
        courseC_maze_programming5_a: Použi tlačidlo "Krok" a prezri si svoj kód riadok
          po riadku. Zistíš, čo spraviť ďalej?
        courseC_maze_programming5_b: Ako ďaleko musíš zájsť, aby si sa dostal až do
          rohu?
        courseC_maze_programming5_c: Na rohu sa musíš otočiť vľavo, aby si sa dostal
          k prasiatku.
      courseD_scrat_ramp6:
        courseC_maze_programming6a_a: Use a `repeat` loop to get Scrat moving!
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: Sú dve možnosti ako vyriešiť túto úlohu!
        courseD_scrat_programming6_b: Remember to turn first before moving, since
          Scrat is facing the wrong direction.
        courseD_scrat_programming6_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseD_scrat_ramp8:
        courseD_maze_ramp7_b: Nezabudli používať tlačidlo "Krok". Pomôže ti prejsť
          bludiskom krok po kroku a nájsť chyby.
        courseD_maze_ramp7_a: Použi bloky "opakuj", do ktorých vložíš buď jeden blok,
          alebo viacero blokov, ktoré sa budú znovu a znovu opakovať.
        courseD_maze_ramp7_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód a
          sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseE_artist_concept1:
        courseE_artist_concept1_a: Šesťuholníky majú strany dlhé 50 pixelov a 60 stupňov
          uhol otočený smerom doprava.
        courseE_artist_concept1_b: Tu skús použiť funkciu, aby nebolo potrebné písať
          kód pre šesťuholník stále odznova.
        courseE_artist_concept1_c: Skôr ako sa zavoláš funkciu na zmenu šírky pera,
          použi blok `nastav šírku`.
      courseE_artist_concept1_2018:
        courseE_artist_concept1_a: Šesťuholníky majú strany dlhé 50 pixelov a 60 stupňov
          uhol otočený smerom doprava.
        courseE_artist_concept1_b: Tu skús použiť funkciu, aby nebolo potrebné písať
          kód pre šesťuholník stále odznova.
        courseE_artist_concept1_c: Skôr ako sa zavoláš funkciu na zmenu šírky pera,
          použi blok `nastav šírku`.
      courseE_artist_concept4:
        courseE_artist_concept4_a: Existuje niekoľko spôsobov ako vyriešiť túto úlohu.
          Vytvoríš plán?
        courseE_artist_concept4_b: Skús vytvoriť štvorec. Potom vytvor rad štvorcov.
          Čo bude nasledovať?
        courseE_artist_concept4_c: Keď vytvoríš rad štvorcov, môžeš sa otočiť a nakresliť
          ďalší rad štvorcov tak, že pôjdeš doľava, alebo môžeš skočiť späť na ľavú
          stranu tvaru a nakresliť ďalší rad štvorcov tak, že pôjdeš doprava. Ktorý
          spôsob uprednostníš?
      courseE_artist_concept4_2018:
        courseE_artist_concept4_a: Existuje niekoľko spôsobov ako vyriešiť túto úlohu.
          Vytvoríš plán?
        courseE_artist_concept4_b: Skús vytvoriť štvorec. Potom vytvor rad štvorcov.
          Čo bude nasledovať?
        courseE_artist_concept4_c: Keď vytvoríš rad štvorcov, môžeš sa otočiť a nakresliť
          ďalší rad štvorcov tak, že pôjdeš doľava, alebo môžeš skočiť späť na ľavú
          stranu tvaru a nakresliť ďalší rad štvorcov tak, že pôjdeš doprava. Ktorý
          spôsob uprednostníš?
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: 'The half-hexagon has a **length of 30**
          and turns right by **60 degrees**.  '
        courseE_artist_concept_challenge1_b: 'The 2/3 triangle has a **length of 80**
          and turns right by **120 degrees**. '
        courseE_artist_concept_challenge1_c: |-
          This is the design you want to repeat to make the full shape:

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: 'The half-hexagon has a **length of 30**
          and turns right by **60 degrees**.  '
        courseE_artist_concept_challenge1_b: 'The 2/3 triangle has a **length of 80**
          and turns right by **120 degrees**. '
        courseE_artist_concept_challenge1_c: |-
          This is the design you want to repeat to make the full shape:

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge2:
        courseE_artist_concept_challenge2_a: Once you define a function, you can call
          it over and over again - whenever and wherever you want!
        courseE_artist_concept_challenge2_b: |-
          You can jump to different positions on the canvas using this command:

          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      courseE_artist_concept_challenge2_2018:
        courseE_artist_concept_challenge2_a: Once you define a function, you can call
          it over and over again - whenever and wherever you want!
        courseE_artist_concept_challenge2_b: |-
          You can jump to different positions on the canvas using this command:

          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      courseE_artist_functions1:
        courseE_artist_functions1_a: The squares each have 100 pixel sides, that means
          that you will have to move forward 175 pixels before drawing your second
          square.
        courseE_artist_functions1_b: It is okay to draw overlapping lines to make
          your glasses.
        courseE_artist_functions1_c: For shorter code, try using a `repeat` loop to
          draw the square frames of the glasses.
      courseE_artist_functions10:
        courseD_artist_functions10_b: Táto kresba je veľmi podobná ako predchádzajúca,
          ale funkcia `nakresli čiaru` teraz kreslí iný tvar.
        courseD_artist_functions10_a: Aby si nemusel viackrát použiť  bloky `posuň
          sa dopredu`, vytvor funkciu `nakresli šesťuholník` a zavolaj ju viac krát.
        courseD_artist_functions10_c: Vidíš, kde by táto kresba mohla použiť funkciu
          nazvanú `rad šesťuholníkov`?
      courseE_artist_functions10_2018:
        courseD_artist_functions10_b: Táto kresba je veľmi podobná ako predchádzajúca,
          ale funkcia `nakresli čiaru` teraz kreslí iný tvar.
        courseD_artist_functions10_a: Aby si nemusel viackrát použiť  bloky `posuň
          sa dopredu`, vytvor funkciu `nakresli šesťuholník` a zavolaj ju viac krát.
        courseD_artist_functions10_c: Vidíš, kde by táto kresba mohla použiť funkciu
          nazvanú `rad šesťuholníkov`?
      courseE_artist_functions10_2019:
        courseD_artist_functions10_b: Táto kresba je veľmi podobná ako predchádzajúca,
          ale funkcia `nakresli čiaru` teraz kreslí iný tvar.
        courseD_artist_functions10_a: Aby si nemusel viackrát použiť  bloky `posuň
          sa dopredu`, vytvor funkciu `nakresli šesťuholník` a zavolaj ju viac krát.
        courseD_artist_functions10_c: Vidíš, kde by táto kresba mohla použiť funkciu
          nazvanú `rad šesťuholníkov`?
      courseE_artist_functions1_copy:
        courseE_artist_functions1_a: The squares each have 100 pixel sides, that means
          that you will have to move forward 175 pixels before drawing your second
          square.
        courseE_artist_functions1_b: It is okay to draw overlapping lines to make
          your glasses.
        courseE_artist_functions1_c: For shorter code, try using a `repeat` loop to
          draw the square frames of the glasses.
      courseE_artist_functions2:
        courseD_artist_functions2_b: The function you write should not contain your
          whole program, just the part that draws a square with 100 pixel sides.
        courseD_artist_functions2_c: |-
          Use the green `draw a square` block to "call" your function under the `when run` block. Otherwise, the code in your function will not run.

          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Your program should:

          -   Use function
          -   Move forward 100 + 75 pixels
          -   Use function
      courseE_artist_functions2_2018:
        courseD_artist_functions2_b: Funkcia by nemala obsahovať celý prgram, iba
          tú časť, ktorá nakreslí štvorec so stranou dlhou 100 pixelov.
        courseD_artist_functions2_c: |-
          Uisti sa, že použiješ zelený blok  `nakresli štvorec` aby si "zavolal/a" tvoju funckiu. Inak kód v tvojej funkcii nepôjde.

           <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Tvoj program by mal:

          -   Použiť tvoju funkciu
          -   Posunúť sa dopredu 100 + 75 pixelov
          -   Znova použiť tvoju funkciu
      courseE_artist_functions2_2019:
        courseD_artist_functions2_b: Funkcia by nemala obsahovať celý prgram, iba
          tú časť, ktorá nakreslí štvorec so stranou dlhou 100 pixelov.
        courseD_artist_functions2_c: |-
          Uisti sa, že použiješ zelený blok  `nakresli štvorec` aby si "zavolal/a" tvoju funckiu. Inak kód v tvojej funkcii nepôjde.

           <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Tvoj program by mal:

          -   Použiť tvoju funkciu
          -   Posunúť sa dopredu 100 + 75 pixelov
          -   Znova použiť tvoju funkciu
      courseE_artist_functions2_copy:
        courseD_artist_functions2_b: The function you write should not contain your
          whole program, just the part that draws a square with 100 pixel sides.
        courseD_artist_functions2_c: |-
          Use the green `draw a square` block to "call" your function under the `when run` block. Otherwise, the code in your function will not run.

          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Your program should:

          -   Use function
          -   Move forward 100 + 75 pixels
          -   Use function
      courseE_artist_functions3:
        courseD_artist_functions3_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.

          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
        courseD_artist_functions3_b: Your loop should have all 3 starter code blocks
          inside of it.
      courseE_artist_functions3_copy:
        courseD_artist_functions3_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.

          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
        courseD_artist_functions3_b: Your loop should have all 3 starter code blocks
          inside of it.
      courseE_artist_functions4:
        courseD_artist_functions4_a: Try using a function!
        courseD_artist_functions4_b: Drag the `draw a star` function block out of
          the toolbox to begin building your function. It should have the same code
          as the previous puzzle, since you are drawing the same star pattern.
        courseD_artist_functions4_c: Use the green `draw a star` block to call this
          function in your main program. Don't forget to jump forward between each
          star!
      courseE_artist_functions4_copy:
        courseD_artist_functions4_a: Try using a function!
        courseD_artist_functions4_b: Drag the `draw a star` function block out of
          the toolbox to begin building your function. It should have the same code
          as the previous puzzle, since you are drawing the same star pattern.
        courseD_artist_functions4_c: Use the green `draw a star` block to call this
          function in your main program. Don't forget to jump forward between each
          star!
      courseE_artist_functions5:
        courseD_artist_functions5_a: Nevzdávaj sa! Pamätaj, na to, čo si sa učil.
        courseD_artist_functions5_b: 'Funkcie umožnujú zavolať uložený kód kedykoľvek,
          nie len z vnútra cyklu. '
        courseD_artist_functions5_c: Start by dragging the code for a star shape into
          the `draw a star` function, then use this function to draw the three stars!
      courseE_artist_functions5_2018:
        courseD_artist_functions5_a: Nevzdávaj sa! Pamätaj, na to, čo si sa učil.
        courseD_artist_functions5_b: 'Funkcie umožnujú zavolať uložený kód kedykoľvek,
          nie len z vnútra cyklu. '
        courseD_artist_functions5_c: Začni vytvorením funkcie `nakresli hviezdu`,
          potom túto funkciu použi na nakreslenie 3 hviezd!
      courseE_artist_functions5_2019:
        courseD_artist_functions5_a: Nevzdávaj sa! Pamätaj, na to, čo si sa učil.
        courseD_artist_functions5_b: 'Funkcie umožnujú zavolať uložený kód kedykoľvek,
          nie len z vnútra cyklu. '
        courseD_artist_functions5_c: Začni vytvorením funkcie `nakresli hviezdu`,
          potom túto funkciu použi na nakreslenie 3 hviezd!
      courseE_artist_functions5_copy:
        courseD_artist_functions5_a: Nevzdávaj sa! Pamätaj, na to, čo si sa učil.
        courseD_artist_functions5_b: 'Funkcie umožnujú zavolať uložený kód kedykoľvek,
          nie len z vnútra cyklu. '
        courseD_artist_functions5_c: Start by dragging the code for a star shape into
          the `draw a star` function, then use this function to draw the three stars!
      courseE_artist_functions6:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll
          create a function in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops. The inner loop
          will make the square and the outer loop will rotate the square four times.
        grade4_artist_functions_windows0_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseE_artist_functions7:
        courseD_artist_functions7_a: Najskôr skús vytvoriť funkciu a potom naraz pridaj
          okná.
        courseD_artist_functions7_b: You shouldn't need to add any extra repeat loops.  Just
          jump the artist 100 pixels between each top window, then down 150 pixels
          to get to the bottom windows.
      courseE_artist_functions7_2018:
        courseD_artist_functions7_a: Najskôr skús vytvoriť funkciu a potom naraz pridaj
          okná.
        courseD_artist_functions7_b: Aby si sa dostal/a od vrchných okien ku spodným,
          otoč umelca doprava, skoč o 150 pixelov a potom ho znovu otoč doprava! Teraz
          umelec bude otočený správnym smerom, aby mohol dokončiť zvyšo domu!
      courseE_artist_functions7_2019:
        courseD_artist_functions7_a: Najskôr skús vytvoriť funkciu a potom naraz pridaj
          okná.
        courseD_artist_functions7_b: Aby si sa dostal/a od vrchných okien ku spodným,
          otoč umelca doprava, skoč o 150 pixelov a potom ho znovu otoč doprava! Teraz
          umelec bude otočený správnym smerom, aby mohol dokončiť zvyšo domu!
      courseE_artist_functions8:
        courseD_artist_functions8_f: Budeš potrebovať len jeden blok  `posuň sa dopredu`,
          ale budeš potrebovať niekoľko blokov `skoč dopredu` a/alebo `skoč dozadu`.
        courseD_artist_functions8_a: Začni s tým, že vytvoríš funkciu pre štvorec,
          potom skús vytvoriť funkciu pre radu štvorcov.
        courseD_artist_functions8_d: |-
          Na vytvorenie rady štvorcov,

          -   zopakuj 3-krát
              -   nakresli štvroec
              -   posuň sa dopredu o **100 pixelov**
        courseD_artist_functions8_b: Uvažuj o každom riadku v tomto obrázku ako o
          čiare z 3 štvorcov. Koľko je tam čiar zo štvorcov a kde začneš každú z nich
          kresliť?
        courseD_artist_functions8_c: At the end of each line of squares, the artist
          will need to jump down and backward before he draws the next line of squares.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_f: Budeš potrebovať len jeden blok  `posuň sa dopredu`,
          ale budeš potrebovať niekoľko blokov `skoč dopredu` a/alebo `skoč dozadu`.
        courseD_artist_functions8_a: Začni s tým, že vytvoríš funkciu pre štvorec,
          potom skús vytvoriť funkciu pre radu štvorcov.
        courseD_artist_functions8_d: |-
          Na vytvorenie rady štvorcov,

          -   zopakuj 3-krát
              -   nakresli štvroec
              -   posuň sa dopredu o **100 pixelov**
        courseD_artist_functions8_b: Uvažuj o každom riadku v tomto obrázku ako o
          čiare z 3 štvorcov. Koľko je tam čiar zo štvorcov a kde začneš každú z nich
          kresliť?
        courseD_artist_functions8_c: 'Na konci každého striedavého radu štvorcov,
          pred začatím nového radu, umelec potrebuje skočiť dole a späť. '
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_f: Budeš potrebovať len jeden blok  `posuň sa dopredu`,
          ale budeš potrebovať niekoľko blokov `skoč dopredu` a/alebo `skoč dozadu`.
        courseD_artist_functions8_a: Začni s tým, že vytvoríš funkciu pre štvorec,
          potom skús vytvoriť funkciu pre radu štvorcov.
        courseD_artist_functions8_d: |-
          Na vytvorenie rady štvorcov,

          -   zopakuj 3-krát
              -   nakresli štvroec
              -   posuň sa dopredu o **100 pixelov**
        courseD_artist_functions8_b: Uvažuj o každom riadku v tomto obrázku ako o
          čiare z 3 štvorcov. Koľko je tam čiar zo štvorcov a kde začneš každú z nich
          kresliť?
        courseD_artist_functions8_c: 'Na konci každého striedavého radu štvorcov,
          pred začatím nového radu, umelec potrebuje skočiť dole a späť. '
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8b_2018:
        courseD_artist_functions8_f: Budeš potrebovať už len jeden blok `posuň sa
          dopredu`, ak to máš správne!
        courseD_artist_functions8_a: Začni s tým, že vytvoríš funkciu pre štvorec,
          potom skús vytvoriť funkciu pre radu štvorcov.
        courseD_artist_functions8_d: |-
          Na vytvorenie rady štvorcov,

          -   zopakuj 3-krát
              -   nakresli štvroec
              -   posuň sa dopredu o **100 pixelov**
      courseE_artist_functions8b_2019:
        courseD_artist_functions8_f: Budeš potrebovať už len jeden blok `posuň sa
          dopredu`, ak to máš správne!
        courseD_artist_functions8_a: Začni s tým, že vytvoríš funkciu pre štvorec,
          potom skús vytvoriť funkciu pre radu štvorcov.
        courseD_artist_functions8_d: |-
          Na vytvorenie rady štvorcov,

          -   zopakuj 3-krát
              -   nakresli štvroec
              -   posuň sa dopredu o **100 pixelov**
      courseE_artist_functions8c_2018:
        courseD_artist_functions8_f: Toto je jednoduchšie ako by sa mohlo zdať! Nie
          sú tu potrebné žiadne bloky `pohni sa` alebo `skoč`!
        courseD_artist_functions8_a: Druhý riadok štvrocov sa líši od prvého 180 stupňovou
          otočkou!
        courseD_artist_functions8_c: Na konci každého radu štvorcov, pred začatím
          nového radu, sa umelec potrebuje otočiť o 180 stupňov. Daj to celé do vnútra
          opakovacieho cyklu, aby si sa priparavil/a na ďalšie cvičenie!
      courseE_artist_functions8c_2019:
        courseD_artist_functions8_f: Toto je jednoduchšie ako by sa mohlo zdať! Nie
          sú tu potrebné žiadne bloky `pohni sa` alebo `skoč`!
        courseD_artist_functions8_a: Druhý riadok štvrocov sa líši od prvého 180 stupňovou
          otočkou!
        courseD_artist_functions8_c: Na konci každého radu štvorcov, pred začatím
          nového radu, sa umelec potrebuje otočiť o 180 stupňov. Daj to celé do vnútra
          opakovacieho cyklu, aby si sa priparavil/a na ďalšie cvičenie!
      courseE_artist_functions9:
        courseD_artist_functions9_e: Môžeš nájsť všetky štyri miesta, kde pri kreslení
          môže byť použitý `rad trojuholníkov`?
        courseD_artist_functions9_a: |-
          Táto úloha môže byť rozdelená na 3 časti:

          -   vytvor funkciu `nakresli trojuholník`
          -   vytvor funkciu `nakresli rad trojuholníkov`
          -   použi svoju funkciu  `nakresli rad trojuholníkov` 4-krát na dokončenie kresby
        courseD_artist_functions9_b: Táto kresba je vytvorená kresbou radu trojuholníkov
          4-krát a pootočením buď o 60 alebo 120 stupňov ešte predtým, ako nakreslíš
          ďalší rad trojuholníkov.
        courseD_artist_functions9_c: |-
          Nakresli rad trojuholníkov:

          -   opakuj 4-krát
          -   nakresli trojuholník
          -   skoč vpred o 50 pixelov
        courseD_artist_functions9_d: |-
          Narkesli diamant:

          -   opakuj 2-krát
          -   nakresli rad trojuholníkov
          -   otoč o 60 stupňov
          -   nakresli rad trojuholníkov
          -   otoč o 120 stupňov
      courseE_artist_functions9_2018:
        courseD_artist_functions9_e: Môžeš nájsť všetky štyri miesta, kde pri kreslení
          môže byť použitý `rad trojuholníkov`?
        courseD_artist_functions9_a: |-
          Táto úloha môže byť rozdelená na 3 časti:

          -   vytvor funkciu `nakresli trojuholník`
          -   vytvor funkciu `nakresli rad trojuholníkov`
          -   použi svoju funkciu  `nakresli rad trojuholníkov` 4-krát na dokončenie kresby
        courseD_artist_functions9_b: Táto kresba je vytvorená kresbou radu trojuholníkov
          4-krát a pootočením buď o 60 alebo 120 stupňov ešte predtým, ako nakreslíš
          ďalší rad trojuholníkov.
        courseD_artist_functions9_c: |-
          Nakresli rad trojuholníkov:

          -   opakuj 4-krát
          -   nakresli trojuholník
          -   skoč vpred o 50 pixelov
        courseD_artist_functions9_d: |-
          Narkesli diamant:

          -   opakuj 2-krát
          -   nakresli rad trojuholníkov
          -   otoč o 60 stupňov
          -   nakresli rad trojuholníkov
          -   otoč o 120 stupňov
      courseE_artist_functions9_2019:
        courseD_artist_functions9_e: Môžeš nájsť všetky štyri miesta, kde pri kreslení
          môže byť použitý `rad trojuholníkov`?
        courseD_artist_functions9_a: |-
          Táto úloha môže byť rozdelená na 3 časti:

          -   vytvor funkciu `nakresli trojuholník`
          -   vytvor funkciu `nakresli rad trojuholníkov`
          -   použi svoju funkciu  `nakresli rad trojuholníkov` 4-krát na dokončenie kresby
        courseD_artist_functions9_b: Táto kresba je vytvorená kresbou radu trojuholníkov
          4-krát a pootočením buď o 60 alebo 120 stupňov ešte predtým, ako nakreslíš
          ďalší rad trojuholníkov.
        courseD_artist_functions9_c: |-
          Nakresli rad trojuholníkov:

          -   opakuj 4-krát
          -   nakresli trojuholník
          -   skoč vpred o 50 pixelov
        courseD_artist_functions9_d: |-
          Narkesli diamant:

          -   opakuj 2-krát
          -   nakresli rad trojuholníkov
          -   otoč o 60 stupňov
          -   nakresli rad trojuholníkov
          -   otoč o 120 stupňov
      courseE_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: If you call the function one more time,
          you can create the same design in the final corner.
        courseE_artist_functions_challenge1_b: You can also `jump to` other positions
          or change the whole design however you want!
      courseE_artist_functions_challenge1_2018:
        courseE_artist_functions_challenge1_a: If you call the function one more time,
          you can create the same design in the final corner.
        courseE_artist_functions_challenge1_b: You can also `jump to` other positions
          or change the whole design however you want!
      courseE_artist_functions_challenge1_2019:
        courseE_artist_functions_challenge1_a: If you call the function one more time,
          you can create the same design in the final corner.
        courseE_artist_functions_challenge1_b: You can also `jump to` other positions
          or change the whole design however you want!
      courseE_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          This `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_functions_challenge2_2018:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          This `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_functions_challenge2_2019:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          This `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_ramp8:
        courseE_artist_ramp8_a: To draw a side, use the `move forward by 100 pixels`
          block, and change the 100 to a 200.
        courseE_artist_ramp8_b: |-
          To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.

          Don't forget to turn afterward!
        courseE_artist_ramp8_c: 'Your loop should have two blocks inside of it: `move
          forward` and `turn right by 90 degrees`.'
      courseE_artist_ramp8_2:
        courseE_artist_ramp8_a: To draw a side, use the `move forward by 100 pixels`
          block, and change the 100 to a 200.
        courseE_artist_ramp8_b: |-
          To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.

          Don't forget to turn afterward!
        courseE_artist_ramp8_c: 'Your loop should have two blocks inside of it: `move
          forward` and `turn right by 90 degrees`.'
      courseE_artist_ramp9:
        courseD_artist_ramp12_a: How is this similar to a square?  How is it different?
        courseD_artist_ramp12_b: Môžeš použiť šípku nadol s rozbaľovacou ponukou na
          blokoch "otoč sa o", aby si zistil aký uhol potrebuješ!
        courseD_artist_ramp12_c: To draw each side, you will need to move forward
          100 pixels, then turn right 120 degrees. How many sides do you need?
      courseE_artist_ramp9_2:
        courseD_artist_ramp12_a: How is this similar to a square?  How is it different?
        courseD_artist_ramp12_b: Môžeš použiť šípku nadol s rozbaľovacou ponukou na
          blokoch "otoč sa o", aby si zistil aký uhol potrebuješ!
        courseD_artist_ramp12_c: To draw each side, you will need to move forward
          100 pixels, then turn right 120 degrees. How many sides do you need?
      courseE_bee_concept1:
        courseE_bee_concept1_b: Vidíš nejaké vzory, ktoré sa tu _opakujú_?
        courseE_bee_concept1_a: 'Ak nerozumieš ako sa používajú vnorené cykly, skús
          si vypísať inštrukcie krok po kroku na kúsok papiera. Zakrúžkuj vzor, ktorý
          vidíš. '
      courseE_bee_concept1_2018:
        courseE_bee_concept1_b: Vidíš nejaké vzory, ktoré sa tu _opakujú_?
        courseE_bee_concept1_a: 'Ak nerozumieš ako sa používajú vnorené cykly, skús
          si vypísať inštrukcie krok po kroku na kúsok papiera. Zakrúžkuj vzor, ktorý
          vidíš. '
      courseE_bee_concept2:
        courseE_bee_concept2_a: Pomohol by tu cyklus  `pokiaľ`?
        courseE_bee_concept2_d: You can even check empty spaces to see if honey is
          > 0.
        courseE_bee_concept2_b: Môžeš použiť cyklus `pokiaľ`, aby si sa dostal na
          koniec cesty a pozberal med z každého miesta.
        courseE_bee_concept2_c: Kam by sa mala včela otočiť  po každej ceste?
      courseE_bee_concept2_2018:
        courseE_bee_concept2_a: Pomohol by tu cyklus  `pokiaľ`?
        courseE_bee_concept2_d: S týmto cyklom `pokiaľ` dokážeš skontrolovať aj prázdne
          miesta a zistiť či je hodnota medu > 0. Toto vykoná to isté ako cyklus `pokiaľ
          tam je med`.
        courseE_bee_concept2_b: Môžeš použiť cyklus `pokiaľ`, aby si sa dostal na
          koniec cesty a pozberal med z každého miesta.
        courseE_bee_concept2_c: Kam by sa mala včela otočiť  po každej ceste?
      courseE_bee_concept3:
        courseE_bee_concept3a_a: Vyskúšaj použiť vnorené cykly `opakuj`, aby si túto
          úlohu vyriešil.
        courseE_bee_concept3a_b: Ak nevieš prísť na to, kam vložiť cykly, pokús sa
          napísať kód krok za krokom a pohľadaj v ňom opakujúce sa vzory.
        courseE_bee_concept3a_c: There are three groups of flowers, so your outer
          `repeat` loop should repeat three times.
      courseE_bee_concept3_2018:
        courseE_bee_concept3a_a: Vyskúšaj použiť vnorené cykly `opakuj` alebo `pokiaľ`,
          aby si vyriešil túto úlohu.
        courseE_bee_concept3a_b: Ak nevieš prísť na to, kam vložiť cykly, pokús sa
          napísať kód krok za krokom a pohľadaj v ňom opakujúce sa vzory.
      courseE_bee_concept4:
        courseE_bee_concept4_a: Podmienka `ak/inak` by ti  tomto mohla pomôcť.
        courseE_bee_concept4_b: Vzor ako keď kráčaš po schodoch ti môže pomôcť dostať
          a cez všetky kvety and plásty.
        courseE_bee_concept4_c: Ak si pri kvete, koľkokrát musíš zobrať nektár? Je
          to to isté číslo pri všetkých kvetoch?
      courseE_bee_concept4_2018:
        courseE_bee_concept4_a: Podmienka `ak/inak` by ti  tomto mohla pomôcť.
        courseE_bee_concept4_b: Vzor ako keď kráčaš po schodoch ti môže pomôcť dostať
          a cez všetky kvety and plásty.
        courseE_bee_concept4_c: Ak si pri kvete, koľkokrát musíš zobrať nektár? Je
          to to isté číslo pri všetkých kvetoch?
      courseE_bee_concept5:
        courseE_bee_concept5_a: Kvety tvoria cestu v tvare obdĺžnika. Použi `pokiaľ
          tam je cesta vpred` a môžeš sledovať tento obdĺžnik, i keď má na strane
          rôzny počet štvorcov.
        courseE_bee_concept5_c: Tu je obrázok obdĺžnikovej cesty, ktorou by včela
          mohla ísť.
        courseE_bee_concept5_b: Pomocou bloku `ak` môžeš skontrolovať každý štvorec,
          či sa tam kvet nachádza, aj keď vieš, že sa tam žiadny nie je.
      courseE_bee_concept5_2018:
        courseE_bee_concept5_a: Kvety tvoria cestu v tvare obdĺžnika. Použi `pokiaľ
          tam je cesta vpred` a môžeš sledovať tento obdĺžnik, i keď má na strane
          rôzny počet štvorcov.
        courseE_bee_concept5_c: Tu je obrázok obdĺžnikovej cesty, ktorou by včela
          mohla ísť.
        courseE_bee_concept5_b: Pomocou bloku `ak` môžeš skontrolovať každý štvorec,
          či sa tam kvet nachádza, aj keď vieš, že sa tam žiadny nie je.
      courseE_bee_functions1:
        courseE_bee_functions1_a: Remember that left and right turns are from the
          point of view of the bee.
        courseE_bee_functions1_b: Use a `repeat` loop when collecting nectar to make
          your code shorter.
        courseE_bee_functions1_c: Remember that left and right turns are from the
          perspective of the bee.
      courseE_bee_functions10:
        courseE_bee_functions10_a: You will need a `while` loop to collect all of
          the honey, since it varies between honeycombs.
        courseE_bee_functions10_b: Include the turns and movement in your function,
          so you can call it when the bee is on the main path.
        courseE_bee_functions10_c: Remember to call your function in the main program!
      courseE_bee_functions2:
        courseE_bee_functions2_a: The function has been written for you, but you will
          need to call it at each flower.
        courseE_bee_functions2_b: This <xml><block type="procedures_callnoreturn"><mutation
          name="get 2 nectar"/></block></xml> block calls the function given to you.
        courseE_bee_functions2_c: You will want to move forward and get 2 nectar twice
          to solve this puzzle.
      courseE_bee_functions3:
        courseE_bee_functions3_a: 'Your function for this puzzle only needs to collect
          nectar, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseE_bee_functions3_b: Call your `get 5` function under the `when run`
          block.
        courseE_bee_functions3_c: Your main program will control all of the movement,
          the function is just for what happens when the bee reaches a flower.
        courseE_bee_functions3_d: Try using this path through.
      courseE_bee_functions4:
        courseE_bee_functions4_a: Your function will already travel down the side
          paths and return the bee back to the main road.  You don't need to add that
          part to your program.
        courseE_bee_functions4_b: Use the green `move and get nectar` block to call
          this function.
        courseE_bee_functions4_c: You don't need to change the function, just use
          it in your program.
      courseE_bee_functions5:
        courseE_bee_functions5_a: Edit the function so that it solves the puzzle without
          having to change the main program.
        courseE_bee_functions5_c: The `move forward` block can be changed into a `move
          backward` block. Use this instead of turning all the way around at the end
          of the paths!
        courseE_bee_functions5_b: "Your function should make the bee: \n\n-   turn\n-
          \  move forward\n-   collect all of the nectar\n-   move backward\n-   turn
          back to the direction that the bee started from"
      courseE_bee_functions6:
        courseE_bee_functions6_a: "If the puzzle seems challenging, try building your
          function a little at a time.  \n\nAdd some blocks, then try it out. Add
          more, then try again.  Soon, you'll get there!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: It might help in this case to move inside of the
          function, but not all of your `move` blocks need to be there.
      courseE_bee_functions7:
        courseE_bee_functions7_a: "If the puzzle seems challenging, try building your
          function a little at a time.  \n\nAdd some blocks, then try it out. Add
          more, then try again.  Soon, you'll get there!"
        courseE_bee_functions7_b: |-
          Remember to build your code inside of the green function block.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: This function should turn the bee to head him down
          the path, collect the nectar, make the honey, then turn the bee around and
          bring him back.
      courseE_bee_functions8:
        courseE_bee_functions8_a: Your function will only need to collect nectar.
          Try using a while loop instead of a repeat loop.
        courseE_bee_functions8_b: Use `while nectar > 0` to make sure you get all
          of the nectar.
        courseE_bee_functions8_c: Your main program will need a stair step movement
          pattern. Remember, the main program is the code under the `when run` block.
      courseE_bee_functions9:
        courseE_bee_functions9_a: You can use the exact same function for this puzzle
          as you did in the last puzzle.  All you need to do is create a function
          that collects all of the nectar when you get to each flower.
        courseE_bee_functions9_b: Even though you know how much nectar some of the
          flowers have, a `while` loop can make one function work for all of them.
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: "If the puzzle seems challenging, try
          building your function a little at a time.  \n\nAdd some blocks, then try
          it out. Add more, then try again.  Soon, you'll get there!"
        courseE_bee_functions_challenge1_b: Remember to build your code inside of
          the green function block.
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: "If the puzzle seems challenging, try
          building your function a little at a time.  \n\nAdd some blocks, then try
          it out. Add more, then try again.  Soon, you'll get there!"
        courseE_bee_functions_challenge1_b: Remember to build your code inside of
          the green function block.
      courseE_farmer_concept1:
        courseE_farmer_concept1_a: Blok `pokiaľ tam je jama` ti pomôže naplniť jamu
          až po okraj.
        courseE_farmer_concept1_b: Môžeš použiť vzor ako keď kráčas po schodoch, aby
          si sa dostal k jamám.
      courseE_farmer_concept1_2018:
        courseE_farmer_concept1_a: Blok `pokiaľ tam je jama` ti pomôže naplniť jamu
          až po okraj.
        courseE_farmer_concept1_b: Môžeš použiť vzor ako keď kráčas po schodoch, aby
          si sa dostal k jamám.
      courseE_farmer_concept2:
        courseE_farmer_concept2_a: Cesty majú rovnakú dĺžku, ale sú na niekoľkých
          od seba oddelených štvorcoch. Cyklus nie je v tomto prípade ideálny. Skús
          použiť funkciu.
        courseE_farmer_concept2_b: Tu môže byť nápomocná funkcia, v ktorej sa otočíš,
          ideš rovno, pozbieraš tekvice a vrátiš sa na hlavnú horizontálnu cestu.
        courseE_farmer_concept2_c: Tvoj hlavný program môže zavolať túto funkciu pomocou
          zeleného bloku `urob niečo`.
      courseE_farmer_concept2_2018:
        courseE_farmer_concept2_a: Cesty majú rovnakú dĺžku, ale sú na niekoľkých
          od seba oddelených štvorcoch. Cyklus nie je v tomto prípade ideálny. Skús
          použiť funkciu.
        courseE_farmer_concept2_b: Tu môže byť nápomocná funkcia, v ktorej sa otočíš,
          ideš rovno, pozbieraš tekvice a vrátiš sa na hlavnú horizontálnu cestu.
        courseE_farmer_concept2_c: Tvoj hlavný program môže zavolať túto funkciu pomocou
          zeleného bloku `urob niečo`.
      courseE_farmer_concept3:
        grade3_robotFarmer_ConditionalsIntro_8_a: Blok `pokiaľ tam je cesta vpred`
          ti umožnuje pokračovať, i keď nevieš koľko štvorcov má cesta.
        grade3_robotFarmer_ConditionalsIntro_8_b: Čo by si mal spraviť, keď sa dostaneš
          na koniec cesty?
        grade3_robotFarmer_ConditionalsIntro_8_c: Na viacnásobné spustenie kódu pre
          každú rovnú cestu použi cyklus `opakuj`.
      courseE_farmer_concept3_2018:
        grade3_robotFarmer_ConditionalsIntro_8_a: Blok `pokiaľ tam je cesta vpred`
          ti umožnuje pokračovať, i keď nevieš koľko štvorcov má cesta.
        grade3_robotFarmer_ConditionalsIntro_8_b: Čo by si mal spraviť, keď sa dostaneš
          na koniec cesty?
        grade3_robotFarmer_ConditionalsIntro_8_c: Na viacnásobné spustenie kódu pre
          každú rovnú cestu použi cyklus `opakuj`.
      courseE_farmer_functions1:
        courseE_farmer_functions1_a: Tentokrát je panel nástrojov usporiadaný inak!
          Klikni na rôzne kategórie a uvidíš, ktoré bloky máš k dispozícii.
        courseE_farmer_functions1_b: Potrebuješ pozbierať len jednu tekvicu, môžeš
          však  použiť cyklus na to, aby si sa k nej dostal?
      courseE_farmer_functions10b:
        courseE_farmer_functions10b_a: You will have to re-create your function first.
        courseE_farmer_functions10b_b: Which way do you need to turn after the first
          pumpkin?
        courseE_farmer_functions10b_c: Look back at the last puzzle if you need help
          making the function.
      courseE_farmer_functions1_2018:
        courseE_farmer_functions1_a: Tentokrát je panel nástrojov usporiadaný inak!
          Klikni na rôzne kategórie a uvidíš, ktoré bloky máš k dispozícii.
        courseE_farmer_functions1_b: Potrebuješ pozbierať len jednu tekvicu, môžeš
          však  použiť cyklus na to, aby si sa k nej dostal?
      courseE_farmer_functions1_2019:
        courseE_farmer_functions1_a: Tentokrát je panel nástrojov usporiadaný inak!
          Klikni na rôzne kategórie a uvidíš, ktoré bloky máš k dispozícii.
        courseE_farmer_functions1_b: Potrebuješ pozbierať len jednu tekvicu, môžeš
          však  použiť cyklus na to, aby si sa k nej dostal?
      courseE_farmer_functions1a:
        courseE_farmer_functions1a_a: Think through the `if/else` statements step
          by step. What should you do if you are standing at a corn plant?
        courseE_farmer_functions1a_b: Dostaň sa k tekvici a použi na to blok `opakuj
          pokiaľ neplatí`.
      courseE_farmer_functions1a_2018:
        courseE_farmer_functions1a_a: Uisti sa, že si prečítaš definíciu funkcie.
          Dokážeš povedať čo robí?
        courseE_farmer_functions1a_b: Dostaň sa k tekvici a použi na to blok `opakuj
          pokiaľ neplatí`.
      courseE_farmer_functions1a_2019:
        courseE_farmer_functions1a_a: Uisti sa, že si prečítaš definíciu funkcie.
          Dokážeš povedať čo robí?
        courseE_farmer_functions1a_b: Dostaň sa k tekvici a použi na to blok `opakuj
          pokiaľ neplatí`.
      courseE_farmer_functions2b:
        courseE_farmer_functions2b_a: You can use a `repeat until pumpkin` to get
          to the ends of the two paths.
        courseE_farmer_functions2b_b: Na spájajúcom chodiníku nie je žiadna kukurica,
          takže sa môžeš posunúť a otočiť sa.
        courseE_farmer_functions2b_c: Aby si pozberal celú úrodu, budeš potrebovať
          2 separátne bloky `opakuj pokiaľ neplatí`.
      courseE_farmer_functions2b_2018:
        courseE_farmer_functions2b_a: Môžeš použiť  `opakuj pokiaľ tam sú tekvice`,
          aby si sa dostal na koniec oboch ciest.
        courseE_farmer_functions2b_b: Na spájajúcom chodiníku nie je žiadna kukurica,
          takže sa môžeš posunúť a otočiť sa.
        courseE_farmer_functions2b_c: Aby si pozberal celú úrodu, budeš potrebovať
          2 separátne bloky `opakuj pokiaľ neplatí`.
      courseE_farmer_functions2b_2019:
        courseE_farmer_functions2b_a: Môžeš použiť  `opakuj pokiaľ tam sú tekvice`,
          aby si sa dostal na koniec oboch ciest.
        courseE_farmer_functions2b_b: Na spájajúcom chodiníku nie je žiadna kukurica,
          takže sa môžeš posunúť a otočiť sa.
        courseE_farmer_functions2b_c: Aby si pozberal celú úrodu, budeš potrebovať
          2 separátne bloky `opakuj pokiaľ neplatí`.
      courseE_farmer_functions2ba:
        courseE_farmer_functions2ba_a: Use the green `corn and pumpkin` block to call
          this function.
        courseE_farmer_functions2ba_b: Drag all of the blocks in the workspace together
          under `when run` to see how this function works.
      courseE_farmer_functions2ba_2018:
        courseE_farmer_functions2ba_a: Použi zelený blok `získaj všetky tekvice`,
          aby si určite všetky pozbieral/a!
      courseE_farmer_functions2ba_2019:
        courseE_farmer_functions2ba_a: Použi zelený blok `získaj všetky tekvice`,
          aby si určite všetky pozbieral/a!
      courseE_farmer_functions3c:
        courseE_farmer_functions3c_a: What sequence is repeated often in this program?
          Can you drag these blocks into the function?
        courseE_farmer_functions3c_b: Don't forget to call your function in the main
          program wherever you removed blocks.
      courseE_farmer_functions3c1_2018:
        coursee_farmer_functions3c1_2018_a: Na vyriešenie úlohy budete musieť použiť
          3-krát funkciu `pozbieraj po ceste`.
        coursee_farmer_functions3c1_2018_b: Aký kód musíš pridať aby si mohol/la zahýbať?
      courseE_farmer_functions3c1_2019:
        coursee_farmer_functions3c1_2018_a: Na vyriešenie úlohy budete musieť použiť
          3-krát funkciu `pozbieraj po ceste`.
        coursee_farmer_functions3c1_2018_b: Aký kód musíš pridať aby si mohol/la zahýbať?
      courseE_farmer_functions4b:
        courseE_farmer_functions4b_a: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
        courseE_farmer_functions4b_b: Remember to turn after each path.
        courseE_farmer_functions4b_c: The green `corn and pumpkin` blocks are in the
          Functions tab of the toolbox.
      courseE_farmer_functions5c:
        courseE_farmer_functions5c_a: Are there any other patterns you can loop in
          this puzzle?
        courseE_farmer_functions5c_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti
          kód a sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseE_farmer_functions6c:
        courseE_farmer_functions6c_a: Edit your function to check for the lettuce
          as well.
        courseE_farmer_functions6c_b: Would an `if/else` block help to check if there
          is lettuce in a space?
        courseE_farmer_functions6c_c: Don't forget to keep checking for corn!
      courseE_farmer_functions7a1_2018:
        courseE_farmer_functions7a1_2018_a: Vytvor svoju funkciu v časti `funkcie`,
          ktorá sa nachádza v paneli nástrojov.
        courseE_farmer_functions7a1_2018_b: Nezabudni funkciu použiť potom ako si
          ju dokončil/a!
      courseE_farmer_functions7a1_2019:
        courseE_farmer_functions7a1_2018_a: Vytvor svoju funkciu v časti `funkcie`,
          ktorá sa nachádza v paneli nástrojov.
        courseE_farmer_functions7a1_2018_b: Nezabudni funkciu použiť potom ako si
          ju dokončil/a!
      courseE_farmer_functions7b:
        courseE_farmer_functions7b_a: You don't need a function here, but you can
          make one if it is helpful to you!
        courseE_farmer_functions7b_b: Use an `if/else` statement to check for crops,
          then turn based on which crop you find.
        courseE_farmer_functions7b_c: A `repeat until pumpkin` loop can help you get
          all the way through the maze.
      courseE_farmer_functions8a1_2018:
        courseE_farmer_functions8a1_2018a: Začni túto úlohu naprogramovaním rovnakej
          funkcie, ako v poslednej úlohe.
        courseE_farmer_functions8a1_2018b: Po prvom spustení funkcie, budeš musieť
          urobiť jednu extra otočku, predtým ako funkciu znova spustíš.
      courseE_farmer_functions8a1_2019:
        courseE_farmer_functions8a1_2018a: Začni túto úlohu naprogramovaním rovnakej
          funkcie, ako v poslednej úlohe.
        courseE_farmer_functions8a1_2018b: Po prvom spustení funkcie, budeš musieť
          urobiť jednu extra otočku, predtým ako funkciu znova spustíš.
      courseE_farmer_functions8b:
        courseE_farmer_functions8b_a: Try running the code given to see what it does.
          What do you need after this?
        courseE_farmer_functions8b_b: Drag all of the starter blocks into a function
          so that you can use them more than once.
        courseE_farmer_functions8b_c: How many times do you need to call the function?
      courseE_farmer_functions9a1_2018:
        courseE_farmer_functions9a1_2018a: Použiješ tú istú funkciu, ktorú si si vytvoril/a
          v predchádzajúcich úlohách.
        courseE_farmer_functions9a1_2018b: Na vyriešenie prvej polovice úlohy, použi
          kroky z predchádzajúcej úlohy.
        courseE_farmer_functions9a1_2018c: Aby si sa dostal/a aj k poslednému šalátu,
          budeš sa musieť niekoľko krát `otočiť` a `posunúť dopredu`, urob to predtým
          ako znovu zavoláš svoju funkciu.
      courseE_farmer_functions9a1_2019:
        courseE_farmer_functions9a1_2018a: Použiješ tú istú funkciu, ktorú si si vytvoril/a
          v predchádzajúcich úlohách.
        courseE_farmer_functions9a1_2018b: Na vyriešenie prvej polovice úlohy, použi
          kroky z predchádzajúcej úlohy.
        courseE_farmer_functions9a1_2018c: Aby si sa dostal/a aj k poslednému šalátu,
          budeš sa musieť niekoľko krát `otočiť` a `posunúť dopredu`, urob to predtým
          ako znovu zavoláš svoju funkciu.
      courseE_farmer_functions9b:
        courseE_farmer_functions9b_a: Can you use nested `if` and `if/else` statements
          to move along the path?
        courseE_farmer_functions9b_b: Use `repeat until pumpkin` to move through all
          of the paths.
        courseE_farmer_functions9b_c: You will want to move through the paths as if
          they are squares getting larger after each loop.
      courseE_farmer_ramp11a:
        courseE_farmer_ramp12_a: Na to, aby si povedal farmárke koľkokrát má hádzať
          hlinu lopatou, môžeš namiesto cyklu `opakuj`,  teraz použiť blok `pokiaľ
          tam je hromada`.
        courseE_farmer_ramp12_b: You only need to move forward once to get to the
          dirt.
      courseE_farmer_ramp11a_2018:
        courseE_farmer_ramp12_a: Na to, aby si povedal farmárke koľkokrát má hádzať
          hlinu lopatou, môžeš namiesto cyklu `opakuj`,  teraz použiť blok `pokiaľ
          tam je hromada`.
        courseE_farmer_ramp12_b: You only need to move forward once to get to the
          dirt.
      courseE_farmer_ramp11a_2019:
        courseE_farmer_ramp12_a: Na to, aby si povedal farmárke koľkokrát má hádzať
          hlinu lopatou, môžeš namiesto cyklu `opakuj`,  teraz použiť blok `pokiaľ
          tam je hromada`.
        courseE_farmer_ramp12_b: You only need to move forward once to get to the
          dirt.
      courseE_farmer_ramp11b:
        courseE_farmer_ramp11b_a: Umiestniť cyklus `pokiaľ` vo vnútri cyklu `opakuj`,
          aby bol tvoj kód kratší.
      courseE_farmer_ramp11b_2018:
        courseE_farmer_ramp11b_a: Umiestniť cyklus `pokiaľ` vo vnútri cyklu `opakuj`,
          aby bol tvoj kód kratší.
      courseE_farmer_ramp11b_2019:
        courseE_farmer_ramp11b_a: Umiestniť cyklus `pokiaľ` vo vnútri cyklu `opakuj`,
          aby bol tvoj kód kratší.
      courseE_farmer_ramp12_forswap:
        courseE_farmer_ramp12_b: Stále budeš musieť použiť cyklus `opakuj` obalený
          okolo celého kódu, aby si farmárke povedal, koľkokrát musí ísť vpred a zobrať
          šalát.
      courseE_farmer_ramp12_forswap_2018:
        courseE_farmer_ramp12_b: Stále budeš musieť použiť cyklus `opakuj` obalený
          okolo celého kódu, aby si farmárke povedal, koľkokrát musí ísť vpred a zobrať
          šalát.
      courseE_farmer_ramp12_forswap_2019:
        courseE_farmer_ramp12_b: Stále budeš musieť použiť cyklus `opakuj` obalený
          okolo celého kódu, aby si farmárke povedal, koľkokrát musí ísť vpred a zobrať
          šalát.
      courseE_farmer_ramp12c:
        courseE_farmer_ramp12b_b: 'Ako prvý použicyklus `dokiaľ`, potom keď sa dostaneš
          k šalátu, použi cyklus `pokiaľ`.  '
      courseE_farmer_ramp12c_2018:
        courseE_farmer_ramp12b_b: 'Ako prvý použicyklus `dokiaľ`, potom keď sa dostaneš
          k šalátu, použi cyklus `pokiaľ`.  '
      courseE_farmer_ramp12c_2019:
        courseE_farmer_ramp12b_b: 'Ako prvý použicyklus `dokiaľ`, potom keď sa dostaneš
          k šalátu, použi cyklus `pokiaľ`.  '
      courseE_farmer_ramp12d:
        courseE_farmer_ramp12d_b: Pre vyriešenie tejto úlohy budeš musieť vložiť tvoje
          cykly `dokiaľ` a `pokiaľ`  dovnútra cyklu `opakuj`!
      courseE_farmer_ramp12d_2018:
        courseE_farmer_ramp12d_b: Pre vyriešenie tejto úlohy budeš musieť vložiť tvoje
          cykly `dokiaľ` a `pokiaľ`  dovnútra cyklu `opakuj`!
      courseE_farmer_ramp12d_2019:
        courseE_farmer_ramp12d_b: Pre vyriešenie tejto úlohy budeš musieť vložiť tvoje
          cykly `dokiaľ` a `pokiaľ`  dovnútra cyklu `opakuj`!
      courseE_farmer_ramp12e:
        courseE_farmer_ramp12e_b: Riešenie tejto úlohy je veľmi podobné tej predošlej,
          musíš však zabočiť do inej strany.
      courseE_farmer_ramp12e_2018:
        courseE_farmer_ramp12e_b: Riešenie tejto úlohy je veľmi podobné tej predošlej,
          musíš však zabočiť do inej strany.
      courseE_farmer_ramp12e_2019:
        courseE_farmer_ramp12e_b: Riešenie tejto úlohy je veľmi podobné tej predošlej,
          musíš však zabočiť do inej strany.
      courseE_farmer_ramp12f:
        courseE_farmer_ramp12f_b: Použi blok `ak/inak` a pomôž farmárke rozhodnúť
          sa, či sa má otočiť doprava, alebo doľava.
      courseE_farmer_ramp12f_2018:
        courseE_farmer_ramp12f_b: Použi blok `ak/inak` a pomôž farmárke rozhodnúť
          sa, či sa má otočiť doprava, alebo doľava.
      courseE_farmer_ramp12f_2019:
        courseE_farmer_ramp12f_b: Použi blok `ak/inak` a pomôž farmárke rozhodnúť
          sa, či sa má otočiť doprava, alebo doľava.
      courseE_farmer_ramp12g:
        courseE_farmer_ramp12G_b: Použi blok `ak/inak` a pomôž farmárke rozhodnúť
          sa, či sa má otočiť doprava, alebo doľava.
      courseE_farmer_ramp12g_2018:
        courseE_farmer_ramp12G_b: Použi blok `ak/inak` a pomôž farmárke rozhodnúť
          sa, či sa má otočiť doprava, alebo doľava.
      courseE_farmer_ramp12g_2019:
        courseE_farmer_ramp12G_b: Použi blok `ak/inak` a pomôž farmárke rozhodnúť
          sa, či sa má otočiť doprava, alebo doľava.
      courseE_playLab_challenge1:
        courseE_playLab_challenge1_a: |-
          Here are some things you could do when the player wins the game:

          -   Make the dinosaur vanish.
          -   Stop the squirrels.
          -   Make the squirrels and knight happy.
          -   Set a new background.
          -   Make the knight thank the player for helping.
          -   Make all of the actors vanish and show a "You Win!" message.
        courseE_playLab_challenge1_b: |-
          Here are some things you could do when the player loses the game:

          -   Make the knight vanish.
          -   Make the squirrels sad.
          -   Make the dinosaur say something.
          -   Set a new background.
          -   Make all of the actors vanish and show a "Game Over" message.
      courseE_playLab_scaffold1:
        courseE_playLab_scaffold1_a: The `set actor 1 to ??? image` block can be used
          to add an actor to the stage.
        courseE_playLab_scaffold1_b: Put the `set actor` block under `when run` to
          make your actor appear at the beginning of the program.
        courseE_playLab_scaffold1_c: Use `set ??? background` to choose a background
          for your scene.
      courseE_playLab_scaffold2:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow`
          event to change the direction the block controls.
        courseE_playLab_scaffold1_b: You should have four `when arrow` event blocks,
          with a direction to move underneath each.
        courseE_playLab_scaffold1_c: When you are done, you should be able to move
          your hero with the arrow keys!
      courseE_playLab_scaffold4:
        courseE_playLab_scaffold4_a: Use `score point` to add a point, and `remove
          point` to subtract one.
      courseE_playLab_scaffold5:
        courseE_playLab_scaffold5_a: To finish this level, you need to win or lose.
          Use a `end game as win` or `end game as loss` block to finish.
      courseF_artist_for1:
        courseF_artist_for1_a: |-
          Vieš nakresliť niečo takéto?

          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for10:
        courseF_artist_for10_a: Nareslený obrázok bol vytvorený s použitím počítadla
          pre `nastav alfa` a `počítadlo` / 10 pre šírku štetca.
        courseF_artist_for10_b: Nakreslený obrázok používa otočenie o 61 stupňov.
        courseF_artist_for10_c: |-
          Chceš vedieť ako bol obrázok vytvorený?

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for10_2018:
        courseF_artist_for10_a: Nareslený obrázok bol vytvorený s použitím počítadla
          pre `nastav alfa` a `počítadlo` / 10 pre šírku štetca.
        courseF_artist_for10_b: Nakreslený obrázok používa otočenie o 61 stupňov.
        courseF_artist_for10_c: |-
          Chceš vedieť ako bol obrázok vytvorený?

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for10_2019:
        courseF_artist_for10_a: Nareslený obrázok bol vytvorený s použitím počítadla
          pre `nastav alfa` a `počítadlo` / 10 pre šírku štetca.
        courseF_artist_for10_b: Nakreslený obrázok používa otočenie o 61 stupňov.
        courseF_artist_for10_c: |-
          Chceš vedieť ako bol obrázok vytvorený?

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for1_2018:
        courseF_artist_for1_a: |-
          Vieš nakresliť niečo takéto?

          ![](https://images.code.org/efee6df2a8840c89fa535bef72e9e45f-image-1530131926453.png)
      courseF_artist_for1_2019:
        courseF_artist_for1_a: |-
          Vieš nakresliť niečo takéto?

          ![](https://images.code.org/efee6df2a8840c89fa535bef72e9e45f-image-1530131926453.png)
      courseF_artist_for2:
        courseF_artist_for2_a: |-
          Použi `počítadlo` pre dĺžku tvojich trojuholníkov vo vnútri tvojho cyklu `opakuj`.

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: Nezabudni pripočítavať 10 v tvojom cykle.
        courseF_artist_for2_c: |-
          Toto je vzor, ktorého sa bude držať umelec:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2018:
        courseF_artist_for2_a: |-
          Použi `počítadlo` pre dĺžku tvojich trojuholníkov vo vnútri tvojho cyklu `opakuj`.

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: Nezabudni pripočítavať 10 v tvojom cykle.
        courseF_artist_for2_c: |-
          Toto je vzor, ktorého sa bude držať umelec:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2019:
        courseF_artist_for2_a: |-
          Použi `počítadlo` pre dĺžku tvojich trojuholníkov vo vnútri tvojho cyklu `opakuj`.

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: Nezabudni pripočítavať 10 v tvojom cykle.
        courseF_artist_for2_c: |-
          Toto je vzor, ktorého sa bude držať umelec:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for3:
        courseF_artist_for3_a: |-
          Aby cyklus `for` riadil tvoj pohyb, tak sa uisti, že používaš `počítadlo` ako tvoju vzdialenosť v bloku `posuň sa dopredu`.

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód a
          sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseF_artist_for3_2018:
        courseF_artist_for3_a: |-
          Aby cyklus `for` riadil tvoj pohyb, tak sa uisti, že používaš `počítadlo` ako tvoju vzdialenosť v bloku `posuň sa dopredu`.

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód a
          sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseF_artist_for3_2019:
        courseF_artist_for3_a: |-
          Aby cyklus `for` riadil tvoj pohyb, tak sa uisti, že používaš `počítadlo` ako tvoju vzdialenosť v bloku `posuň sa dopredu`.

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód a
          sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseF_artist_for4:
        courseF_artist_for4_a: |-
          **Aké je najmenšíe čislo, ktoré potrebuješ?\
          Aké je najväčšie číslo?\
          Aký veľký je prírastok v každom kroku?**

          Toto sú otázky, ktoré potrebuješ zodpovedať, aby si vyplnil prázdne miesta v cykle `for`.
        courseF_artist_for4_b: Tvoj kód bude veľmi podobný tomu, čo si napísal v predošlej
          úlohe, ale tentokrát nezabudni nakresliť štvorec!
        courseF_artist_for4_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód a
          sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseF_artist_for4_2018:
        courseF_artist_for4_a: |-
          **Aké je najmenšíe čislo, ktoré potrebuješ?\
          Aké je najväčšie číslo?\
          Aký veľký je prírastok v každom kroku?**

          Toto sú otázky, ktoré potrebuješ zodpovedať, aby si vyplnil prázdne miesta v cykle `for`.
        courseF_artist_for4_b: Tvoj kód bude veľmi podobný tomu, čo si napísal v predošlej
          úlohe, ale tentokrát nezabudni nakresliť štvorec!
        courseF_artist_for4_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód a
          sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseF_artist_for4_2019:
        courseF_artist_for4_a: |-
          **Aké je najmenšíe čislo, ktoré potrebuješ?\
          Aké je najväčšie číslo?\
          Aký veľký je prírastok v každom kroku?**

          Toto sú otázky, ktoré potrebuješ zodpovedať, aby si vyplnil prázdne miesta v cykle `for`.
        courseF_artist_for4_b: Tvoj kód bude veľmi podobný tomu, čo si napísal v predošlej
          úlohe, ale tentokrát nezabudni nakresliť štvorec!
        courseF_artist_for4_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód a
          sleduj, čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseF_artist_for5:
        courseF_artist_for5_a: Nepotrebuješ cyklus `opakuj` vo vnútri, keď kreslíš
          túto špirálu!
        courseF_artist_for5_b: Tvoj cyklus `for`, pohyb aj otočenia môžu ostať presne
          také, aké sú.
      courseF_artist_for5_2018:
        courseF_artist_for5_a: Nepotrebuješ cyklus `opakuj` vo vnútri, keď kreslíš
          túto špirálu!
        courseF_artist_for5_b: Tvoj cyklus `for`, pohyb aj otočenia môžu ostať presne
          také, aké sú.
      courseF_artist_for5_2019:
        courseF_artist_for5_a: Nepotrebuješ cyklus `opakuj` vo vnútri, keď kreslíš
          túto špirálu!
        courseF_artist_for5_b: Tvoj cyklus `for`, pohyb aj otočenia môžu ostať presne
          také, aké sú.
      courseF_artist_for6:
        courseF_artist_for6_a: Tvoj cyklus `for` bude počítať od 15 do 300 po 15.
        courseF_artist_for6_b: Vlož bloky `posuň sa dopredu` a `otoč sa` do tohto
          cyklu `for`.
        courseF_artist_for6_c: Všetko, čo musíš zmeniť, je počet stupňov v bloku `otoč
          sa`.
      courseF_artist_for6_2018:
        courseF_artist_for6_a: Tvoj cyklus `for` bude počítať od 15 do 300 po 15.
        courseF_artist_for6_b: Vlož bloky `posuň sa dopredu` a `otoč sa` do tohto
          cyklu `for`.
        courseF_artist_for6_c: Všetko, čo musíš zmeniť, je počet stupňov v bloku `otoč
          sa`.
      courseF_artist_for6_2019:
        courseF_artist_for6_a: Tvoj cyklus `for` bude počítať od 15 do 300 po 15.
        courseF_artist_for6_b: Vlož bloky `posuň sa dopredu` a `otoč sa` do tohto
          cyklu `for`.
        courseF_artist_for6_c: Všetko, čo musíš zmeniť, je počet stupňov v bloku `otoč
          sa`.
      courseF_artist_for7:
        courseF_artist_for7_a: Pero v tejto úlohe je užšie. Potrebuješ ho nastaviť
          na `1` predtým než začneš.
        courseF_artist_for7_b: Všimni si, že táto špirála sa toči doprava namiesto
          doľava!
        courseF_artist_for7_c: Cyklus `for` v tejto úlohe ide od 15 do 300 po 2.
        courseF_artist_for7_d: Tento obrázok je spravený otáčaním o 89 stupňov.
      courseF_artist_for7_2018:
        courseF_artist_for7_a: Pero v tejto úlohe je užšie. Potrebuješ ho nastaviť
          na `1` predtým než začneš.
        courseF_artist_for7_b: Všimni si, že táto špirála sa toči doprava namiesto
          doľava!
        courseF_artist_for7_c: Cyklus `for` v tejto úlohe ide od 15 do 300 po 2.
        courseF_artist_for7_d: Tento obrázok je spravený otáčaním o 89 stupňov.
      courseF_artist_for7_2019:
        courseF_artist_for7_a: Pero v tejto úlohe je užšie. Potrebuješ ho nastaviť
          na `1` predtým než začneš.
        courseF_artist_for7_b: Všimni si, že táto špirála sa toči doprava namiesto
          doľava!
        courseF_artist_for7_c: Cyklus `for` v tejto úlohe ide od 15 do 300 po 2.
        courseF_artist_for7_d: Tento obrázok je spravený otáčaním o 89 stupňov.
      courseF_artist_for8:
        courseF_artist_for8_a: Všetko ostatné nechaj rovnaké v tvojom kóde, iba uhol
          otočenia sa musí zmeniť.
        courseF_artist_for8_b: Ak chceš, tak si môžeš vybrať inú farbu pre tvoju špirálu!
      courseF_artist_for8_2018:
        courseF_artist_for8_a: Všetko ostatné nechaj rovnaké v tvojom kóde, iba uhol
          otočenia sa musí zmeniť.
        courseF_artist_for8_b: Ak chceš, tak si môžeš vybrať inú farbu pre tvoju špirálu!
      courseF_artist_for8_2019:
        courseF_artist_for8_a: Všetko ostatné nechaj rovnaké v tvojom kóde, iba uhol
          otočenia sa musí zmeniť.
        courseF_artist_for8_b: Ak chceš, tak si môžeš vybrať inú farbu pre tvoju špirálu!
      courseF_artist_for9:
        courseF_artist_for9_a: Ak vložíš blok `nastav alfa` do vnútra tvojho cyklu
          `for` a použiješ premennú `počítadlo` na jeho zmenu, tak môžeš vytvoriť
          takýto dizajn.
        courseF_artist_for9_b: Blok `nastav alfa` mení nepriehľadnosť farby. Čim menšia
          hodnota, tým je farba priehľadnejšia.
      courseF_artist_for9_2018:
        courseF_artist_for9_a: Ak vložíš blok `nastav alfa` do vnútra tvojho cyklu
          `for` a použiješ premennú `počítadlo` na jeho zmenu, tak môžeš vytvoriť
          takýto dizajn.
        courseF_artist_for9_b: Blok `nastav alfa` mení nepriehľadnosť farby. Čim menšia
          hodnota, tým je farba priehľadnejšia.
      courseF_artist_for9_2019:
        courseF_artist_for9_a: Ak vložíš blok `nastav alfa` do vnútra tvojho cyklu
          `for` a použiješ premennú `počítadlo` na jeho zmenu, tak môžeš vytvoriť
          takýto dizajn.
        courseF_artist_for9_b: Blok `nastav alfa` mení nepriehľadnosť farby. Čim menšia
          hodnota, tým je farba priehľadnejšia.
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_a: "`Šírka štetca` je 1. Prvý štvorec má strany
          50 pixelov a každý ďalší štvorec je o 50 pixelov širší ako predošlý."
        courseF_artist_for_challenge1_b: Nepriehľadnosť štetca je vždy `counter`/2.
        courseF_artist_for_challenge1_c: Potom ako dokončíš každý štvorec, tak nezabudni
          skočiť dozadu, otočiť sa, skočiť znovu a otočiť sa späť!
        courseF_artist_for_challenge1_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_a: "`Šírka štetca` je 1. Prvý štvorec má strany
          50 pixelov a každý ďalší štvorec je o 50 pixelov širší ako predošlý."
        courseF_artist_for_challenge1_b: Nepriehľadnosť štetca je vždy `counter`/2.
        courseF_artist_for_challenge1_c: Potom ako dokončíš každý štvorec, tak nezabudni
          skočiť dozadu, otočiť sa, skočiť znovu a otočiť sa späť!
        courseF_artist_for_challenge1_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_a: "`Šírka štetca` je 1. Prvý štvorec má strany
          50 pixelov a každý ďalší štvorec je o 50 pixelov širší ako predošlý."
        courseF_artist_for_challenge1_b: Nepriehľadnosť štetca je vždy `counter`/2.
        courseF_artist_for_challenge1_c: Potom ako dokončíš každý štvorec, tak nezabudni
          skočiť dozadu, otočiť sa, skočiť znovu a otočiť sa späť!
        courseF_artist_for_challenge1_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: 'Cyklus `for` ide od 5 do 250 po 2. '
        courseF_artist_for_challenge2_a: Zmena farby sa deje s použitím bloku `nastav
          farbu s červená, zelená, modrá`. Červená je konštanta 255, zelená je vždy
          hodnota `counter` a modrá je vždy `255 - counter`.
        courseF_artist_for_challenge2_b: Kód bude jednoduchší ako si myslíš. Vo vnútri
          cyklu len nastav farbu, posuň sa dopredu a otoč sa.
        courseF_artist_for_challenge2_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: 'Cyklus `for` ide od 5 do 250 po 2. '
        courseF_artist_for_challenge2_a: Zmena farby sa deje s použitím bloku `nastav
          farbu s červená, zelená, modrá`. Červená je konštanta 255, zelená je vždy
          hodnota `counter` a modrá je vždy `255 - counter`.
        courseF_artist_for_challenge2_b: Kód bude jednoduchší ako si myslíš. Vo vnútri
          cyklu len nastav farbu, posuň sa dopredu a otoč sa.
        courseF_artist_for_challenge2_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: 'Cyklus `for` ide od 5 do 250 po 2. '
        courseF_artist_for_challenge2_a: Zmena farby sa deje s použitím bloku `nastav
          farbu s červená, zelená, modrá`. Červená je konštanta 255, zelená je vždy
          hodnota `counter` a modrá je vždy `255 - counter`.
        courseF_artist_for_challenge2_b: Kód bude jednoduchší ako si myslíš. Vo vnútri
          cyklu len nastav farbu, posuň sa dopredu a otoč sa.
        courseF_artist_for_challenge2_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_fwp1:
        courseF_artist_fwp1_c: Put all of the code for drawing a square inside the
          function editor.
        courseF_artist_fwp1_a: Remember, you need to turn 90 degrees to draw a square.
        courseF_artist_fwp1_b: You only need to repeat as many times as the number
          of sides in a square.
      courseF_artist_fwp2:
        courseF_artist_fwp2_a: You need to click the "edit" button to get into the
          function.  Once you're there, add a parameter called `length` and use it
          inside your `move forward` block!
        courseF_artist_fwp2_b: When calling your function, use a `for loop` for the
          best possible code!
      courseF_artist_fwp3:
        courseF_artist_fwp3_a: This gets easier if you put it all in a `for` loop.
        courseF_artist_fwp3_b: |-
          Be sure to turn 90 degrees between each square!

          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp4:
        courseF_artist_fwp4_b: Remember to **add** a parameter.  Don't remove the
          one that is already there!
        courseF_artist_fwp4_c: You will need to call your function three times to
          draw the shapes.
      courseF_artist_fwp5:
        courseF_artist_fwp5_d: A `for` loop would really help you out here!
        courseF_artist_fwp5_c: You will need to edit the function a little bit, since
          your previous function turned the artist to the right after each side, and
          this image needs a turn to the left.
        courseF_artist_fwp5_a: The length of sides for each shape is 7 times the number
          of sides it has.
        courseF_artist_fwp5_b: Don't forget to jump 100 pixels between shapes.
      courseF_artist_fwp6:
        courseF_artist_fwp6_a: It's okay to run the program a few times to figure
          out how the function works with different parameters.
        courseF_artist_fwp6_b: You don't need to add any `move` or `turn` blocks to
          finish this code.
      courseF_artist_fwp7:
        courseF_artist_fwp7_a: Feeling lost after trying a couple of ideas? Try clicking
          the "Start over" button in the upper right-hand corner.
        courseF_artist_fwp7_b: Your new `min` variable should go in the first slot
          in your `for` loop, inside the function.
      courseF_artist_fwp8:
        courseF_artist_fwp8_a: If your function is correct, you shouldn't need to
          change it for this puzzle.
        courseF_artist_fwp8_b: The only thing you should need to do between function
          calls is change the color of the line.
      courseF_artist_fwp9:
        courseF_artist_fwp9_a: |-
          Try one of these drawings.
          ![](<https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png>)
      courseF_artist_fwp_challenge1:
        courseF_artist_fwp_challenge1_b: This is a series of polygons with sides that
          are counter pixels long.
        courseF_artist_fwp_challenge1_c: Each polygon is called from inside a for
          loop that goes from 3 down to 6 by an increment of 1. What shapes is it
          making?
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'This is a series of octagons with sides
          that are `counter` pixels long. '
        courseF_artist_fwp_challenge1_c: 'Each octagon is called from inside a `for`
          loop that goes from 200 down to 2 by 2. '
        courseF_artist_fwp_challenge1_d: 'Don''t forget to turn by 22.5 degrees at
          the end of each iteration. '
        courseF_artist_fwp_challenge1_e: Both the color of each octagon and the width
          of the pen are controlled by the `counter` variable.
        courseF_artist_fwp_challenge1_f: |-
          **Riešenie:**

          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_variables10:
        courseF_artist_variables10_a: Zabav sa v tomto leveli! Sleduj, čo dokážu spraviť
          malé zmeny v tvojom kóde.
        courseF_artist_variables10_b: Môžeš vyskúšať viacero vecí a spustiť tvoj kód
          viac krát.
      courseF_artist_variables10_2018:
        courseF_artist_variables10_a: Zabav sa v tomto leveli! Sleduj, čo dokážu spraviť
          malé zmeny v tvojom kóde.
        courseF_artist_variables10_b: Môžeš vyskúšať viacero vecí a spustiť tvoj kód
          viac krát.
      courseF_artist_variables10_2019:
        courseF_artist_variables10_a: Zabav sa v tomto leveli! Sleduj, čo dokážu spraviť
          malé zmeny v tvojom kóde.
        courseF_artist_variables10_b: Môžeš vyskúšať viacero vecí a spustiť tvoj kód
          viac krát.
      courseF_artist_variables2:
        courseF_artist_variables2_a: Nezabudni sa pohnúť dopredu po nakreslení každého
          trojuholníka.
        courseF_artist_variables2_b: Tvoj nový cyklus bude obsahovať cyklus pre tvoj
          trojuholník a potom príkaz `posuň sa dopredu`.
      courseF_artist_variables2_2018:
        courseF_artist_variables2_a: Nezabudni sa pohnúť dopredu po nakreslení každého
          trojuholníka.
        courseF_artist_variables2_b: Tvoj nový cyklus bude obsahovať cyklus pre tvoj
          trojuholník a potom príkaz `posuň sa dopredu`.
      courseF_artist_variables2_2019:
        courseF_artist_variables2_a: Nezabudni sa pohnúť dopredu po nakreslení každého
          trojuholníka.
        courseF_artist_variables2_b: Tvoj nový cyklus bude obsahovať cyklus pre tvoj
          trojuholník a potom príkaz `posuň sa dopredu`.
      courseF_artist_variables3:
        courseF_artist_variables3_a: 'Premenná `dĺžka` bude použitá na dvoch miestach
          v tvojom kóde: V dĺžke strany tvojho trojuholníka a vo veľkosti, o koľko
          sa posunieš medzi trojuholníkmi.'
        courseF_artist_variables3_b: 'Číselný blok s hodnotou 50 by mal byť použitý
          iba na jendom mieste: po bloku `nastav dĺžka na`.'
      courseF_artist_variables3_2018:
        courseF_artist_variables3_a: 'Premenná `dĺžka` bude použitá na dvoch miestach
          v tvojom kóde: V dĺžke strany tvojho trojuholníka a vo veľkosti, o koľko
          sa posunieš medzi trojuholníkmi.'
        courseF_artist_variables3_b: 'Číselný blok s hodnotou 50 by mal byť použitý
          iba na jednom mieste: po bloku `nastav dĺžka na`.'
      courseF_artist_variables3_2019:
        courseF_artist_variables3_a: 'Premenná `dĺžka` bude použitá na dvoch miestach
          v tvojom kóde: V dĺžke strany tvojho trojuholníka a vo veľkosti, o koľko
          sa posunieš medzi trojuholníkmi.'
        courseF_artist_variables3_b: 'Číselný blok s hodnotou 50 by mal byť použitý
          iba na jednom mieste: po bloku `nastav dĺžka na`.'
      courseF_artist_variables4:
        courseF_artist_variables4_a: Tvoj kód nebude veľmi odlišný od toho v poslednej
          úlohe, iba toľko, že potrebuješ otočiť umelca, aby skočil nadol, a potom
          ho otočiť späť, aby bol pripravený znovu skočiť dopredu.
        courseF_artist_variables4_c: |-
          Toto je vzor, ktorého sa bude držať tvoj umelec:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables4_2018:
        courseF_artist_variables4_a: Tvoj kód nebude veľmi odlišný od toho v poslednej
          úlohe, iba toľko, že potrebuješ otočiť umelca, aby skočil nadol, a potom
          ho otočiť späť, aby bol pripravený znovu skočiť dopredu.
        courseF_artist_variables4_c: |-
          Toto je vzor, ktorého sa bude držať tvoj umelec:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: |-
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">50</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="controls_repeat_ext">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">120</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="jump">
                              <title name="DIR">jumpForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">90</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="jump">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables4_2019:
        courseF_artist_variables4_a: Tvoj kód nebude veľmi odlišný od toho v poslednej
          úlohe, iba toľko, že potrebuješ otočiť umelca, aby skočil nadol, a potom
          ho otočiť späť, aby bol pripravený znovu skočiť dopredu.
        courseF_artist_variables4_c: |-
          Toto je vzor, ktorého sa bude držať tvoj umelec:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: |-
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">50</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="controls_repeat_ext">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">120</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="jump">
                              <title name="DIR">jumpForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">90</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="jump">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables5:
        courseF_artist_variables5_a: Druhá polovica tvojho kódu by mala vyzerať takmer
          rovnako ako prvá, rozdiel bude iba v tom, že sa budeš otáčať _vľavo_, skákať,
          a potom otáčať _vpravo_.
        courseF_artist_variables5_b: Prvá polovica tvojho kóud nakreslí prvé tri trojuholníky
          a druhá polovica nakreslí zvyšné tri.
        courseF_artist_variables5_c: Začni zduplikovaním kódu z prvej polovice tvojho
          programu, potom ho uprav, aby si vyrobil daný vzor.
        courseF_artist_variables5_d: |-
          Toto je vzor, ktorého sa bude držať tvoj umelec:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2018:
        courseF_artist_variables5_a: Druhá polovica tvojho kódu by mala vyzerať takmer
          rovnako ako prvá, rozdiel bude iba v tom, že sa budeš otáčať _vľavo_, skákať,
          a potom otáčať _vpravo_.
        courseF_artist_variables5_b: Prvá polovica tvojho kóud nakreslí prvé tri trojuholníky
          a druhá polovica nakreslí zvyšné tri.
        courseF_artist_variables5_c: Začni zduplikovaním kódu z prvej polovice tvojho
          programu, potom ho uprav, aby si vyrobil daný vzor.
        courseF_artist_variables5_d: |-
          Toto je vzor, ktorého sa bude držať tvoj umelec:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2019:
        courseF_artist_variables5_a: Druhá polovica tvojho kódu by mala vyzerať takmer
          rovnako ako prvá, rozdiel bude iba v tom, že sa budeš otáčať _vľavo_, skákať,
          a potom otáčať _vpravo_.
        courseF_artist_variables5_b: Prvá polovica tvojho kóud nakreslí prvé tri trojuholníky
          a druhá polovica nakreslí zvyšné tri.
        courseF_artist_variables5_c: Začni zduplikovaním kódu z prvej polovice tvojho
          programu, potom ho uprav, aby si vyrobil daný vzor.
        courseF_artist_variables5_d: |-
          Toto je vzor, ktorého sa bude držať tvoj umelec:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables6:
        courseF_artist_variables6_a: Vďaka premenným, potrebuješ zmeniť iba jedno
          číslo navrchu, aby to fungovalo.
        courseF_artist_variables6_b: Potrebuješ editovať číselný blok s hodnotou 50,
          ale nič iné v kóde sa nemusí zmeniť.
      courseF_artist_variables6_2018:
        courseF_artist_variables6_a: Vďaka premenným, potrebuješ zmeniť iba jedno
          číslo navrchu, aby to fungovalo.
        courseF_artist_variables6_b: Potrebuješ editovať číselný blok s hodnotou 50,
          ale nič iné v kóde sa nemusí zmeniť.
      courseF_artist_variables6_2019:
        courseF_artist_variables6_a: Vďaka premenným, potrebuješ zmeniť iba jedno
          číslo navrchu, aby to fungovalo.
        courseF_artist_variables6_b: Potrebuješ editovať číselný blok s hodnotou 50,
          ale nič iné v kóde sa nemusí zmeniť.
      courseF_artist_variables6a:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead
          of an actual number to solve this puzzle.
        courseF_artist_variables6a_b: Tento kód bude veľmi podobný tvôjmu trojuholníkovému
          kódu, iba s rozdielnym útvarom!
        courseF_artist_variables6a_c: Najskôr napíš kód pre jeden štvorec, potom pridaj
          kód na pohyb medzi štvorcami. Nakoniec pridaj cyklus okolo všetkého!
        courseF_artist_variables6a_d: |-
          Toto je vzor, ktorého sa budeš držať!

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2018:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead
          of an actual number to solve this puzzle.
        courseF_artist_variables6a_b: Tento kód bude veľmi podobný tvôjmu trojuholníkovému
          kódu, iba s rozdielnym útvarom!
        courseF_artist_variables6a_c: Najskôr napíš kód pre jeden štvorec, potom pridaj
          kód na pohyb medzi štvorcami. Nakoniec pridaj cyklus okolo všetkého!
        courseF_artist_variables6a_d: |-
          Toto je vzor, ktorého sa budeš držať!

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2019:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead
          of an actual number to solve this puzzle.
        courseF_artist_variables6a_b: Tento kód bude veľmi podobný tvôjmu trojuholníkovému
          kódu, iba s rozdielnym útvarom!
        courseF_artist_variables6a_c: Najskôr napíš kód pre jeden štvorec, potom pridaj
          kód na pohyb medzi štvorcami. Nakoniec pridaj cyklus okolo všetkého!
        courseF_artist_variables6a_d: |-
          Toto je vzor, ktorého sa budeš držať!

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables7:
        courseF_artist_variables7_a: Tvoj kód začni pomocou bloku `nastav dĺžku (length)`.
          Nastav premennú dĺžka na 150.
        courseF_artist_variables7_b: Môžeš použiť cyklus `opakuj`, aby bol tvoj kód
          pre trojuholník jednoduchší.
        courseF_artist_variables7_c: Chceš sa otočiť doľava o 120 stupňov, aby si
          spravil vrcholy trojuholníka.
      courseF_artist_variables7_2018:
        courseF_artist_variables7_a: Tvoj kód začni pomocou bloku `nastav dĺžku (length)`.
          Nastav premennú dĺžka na 150.
        courseF_artist_variables7_b: Môžeš použiť cyklus `opakuj`, aby bol tvoj kód
          pre trojuholník jednoduchší.
        courseF_artist_variables7_c: Chceš sa otočiť doľava o 120 stupňov, aby si
          spravil vrcholy trojuholníka.
      courseF_artist_variables7_2019:
        courseF_artist_variables7_a: Tvoj kód začni pomocou bloku `nastav dĺžku (length)`.
          Nastav premennú dĺžka na 150.
        courseF_artist_variables7_b: Môžeš použiť cyklus `opakuj`, aby bol tvoj kód
          pre trojuholník jednoduchší.
        courseF_artist_variables7_c: Chceš sa otočiť doľava o 120 stupňov, aby si
          spravil vrcholy trojuholníka.
      courseF_artist_variables8:
        courseF_artist_variables8_b: Nezabudni začať tvoj kód pre trojuholník s blokom
          `nastav dĺžka` a začni s hodnotou 150 pixelov.
        courseF_artist_variables8_c: Uisti sa, že používaš cyklus `opakuj` na nakreslenie
          tvojho trojuholníka.
        courseF_artist_variables8_a: "Vyskúšaj použiť tieto bloky \n\n<xml>\n<block
          type=\"variables_set\" inline=\"false\">\n                        <title
          name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n
          \                         <block type=\"math_arithmetic\" inline=\"true\">\n
          \                           <title name=\"OP\">ADD</title>\n                            <value
          name=\"A\">\n                              <block type=\"variables_get\">\n
          \                               <title name=\"VAR\">length</title>\n                              </block>\n
          \                           </value>\n                            <value
          name=\"B\">\n                              <block type=\"math_number\">\n
          \                               <title name=\"NUM\">10</title>\n                              </block>\n
          \                           </value>\n                          </block>\n
          \                       </value>\n                      </block>\n</xml>\n\n
          na konci tela tvojho cyklu."
      courseF_artist_variables8_2018:
        courseF_artist_variables8_b: Nezabudni začať tvoj kód pre trojuholník s blokom
          `nastav dĺžka` a začni s hodnotou 150 pixelov.
        courseF_artist_variables8_c: Uisti sa, že používaš cyklus `opakuj` na nakreslenie
          tvojho trojuholníka.
        courseF_artist_variables8_a: "Vyskúšaj použiť tieto bloky \n\n<xml>\n<block
          type=\"variables_set\" inline=\"false\">\n                        <title
          name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n
          \                         <block type=\"math_arithmetic\" inline=\"true\">\n
          \                           <title name=\"OP\">ADD</title>\n                            <value
          name=\"A\">\n                              <block type=\"variables_get\">\n
          \                               <title name=\"VAR\">length</title>\n                              </block>\n
          \                           </value>\n                            <value
          name=\"B\">\n                              <block type=\"math_number\">\n
          \                               <title name=\"NUM\">10</title>\n                              </block>\n
          \                           </value>\n                          </block>\n
          \                       </value>\n                      </block>\n</xml>\n\n
          na konci tela tvojho cyklu."
      courseF_artist_variables8_2019:
        courseF_artist_variables8_b: Nezabudni začať tvoj kód pre trojuholník s blokom
          `nastav dĺžka` a začni s hodnotou 150 pixelov.
        courseF_artist_variables8_c: Uisti sa, že používaš cyklus `opakuj` na nakreslenie
          tvojho trojuholníka.
        courseF_artist_variables8_a: "Vyskúšaj použiť tieto bloky \n\n<xml>\n<block
          type=\"variables_set\" inline=\"false\">\n                        <title
          name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n
          \                         <block type=\"math_arithmetic\" inline=\"true\">\n
          \                           <title name=\"OP\">ADD</title>\n                            <value
          name=\"A\">\n                              <block type=\"variables_get\">\n
          \                               <title name=\"VAR\">length</title>\n                              </block>\n
          \                           </value>\n                            <value
          name=\"B\">\n                              <block type=\"math_number\">\n
          \                               <title name=\"NUM\">10</title>\n                              </block>\n
          \                           </value>\n                          </block>\n
          \                       </value>\n                      </block>\n</xml>\n\n
          na konci tela tvojho cyklu."
      courseF_artist_variables9:
        courseF_artist_variables9_a: Všetko, čo musíš spraviť v tejto úlohe, je zmeniť,
          koľko krát sa cyklus opakuje.
        courseF_artist_variables9_b: Uisti sa, že bloky, ktoré zvyšujú `dĺžka`, sú
          v tvojom cykle, takže čiary sú vždy dlhšie a dlhšie.
      courseF_artist_variables9_2018:
        courseF_artist_variables9_a: Všetko, čo musíš spraviť v tejto úlohe, je zmeniť,
          koľko krát sa cyklus opakuje.
        courseF_artist_variables9_b: Uisti sa, že bloky, ktoré zvyšujú `dĺžka`, sú
          v tvojom cykle, takže čiary sú vždy dlhšie a dlhšie.
      courseF_artist_variables9_2019:
        courseF_artist_variables9_a: Všetko, čo musíš spraviť v tejto úlohe, je zmeniť,
          koľko krát sa cyklus opakuje.
        courseF_artist_variables9_b: Uisti sa, že bloky, ktoré zvyšujú `dĺžka`, sú
          v tvojom cykle, takže čiary sú vždy dlhšie a dlhšie.
      courseF_artist_variablesFP:
        courseF_artist_variablesFP_a: |-
          Skús jednu z týchto troch kresieb.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2018:
        courseF_artist_variablesFP_a: |-
          Skús jednu z týchto troch kresieb.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2019:
        courseF_artist_variablesFP_a: |-
          Skús jednu z týchto troch kresieb.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variables_challenge1:
        courseF_artist_variables_challenge1_a: Each vertical line has a length of
          `10`. Each horizontal line should have a length of `length`.
        courseF_artist_variables_challenge1_b: You will want to increase the value
          of `length` by 10 **twice** inside the loop.
        courseF_artist_variables_challenge1_c: To complete the pattern you will need
          to turn left twice, turn right twice, and move forward a total of four times.
        courseF_artist_variables_challenge1_d: |-
          This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge1_2018:
        courseF_artist_variables_challenge1_a: Each vertical line has a length of
          `10`. Each horizontal line should have a length of `length`.
        courseF_artist_variables_challenge1_b: You will want to increase the value
          of `length` by 10 **twice** inside the loop.
        courseF_artist_variables_challenge1_c: To complete the pattern you will need
          to turn left twice, turn right twice, and move forward a total of four times.
        courseF_artist_variables_challenge1_d: |-
          This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge1_2019:
        courseF_artist_variables_challenge1_a: Each vertical line has a length of
          `10`. Each horizontal line should have a length of `length`.
        courseF_artist_variables_challenge1_b: You will want to increase the value
          of `length` by 10 **twice** inside the loop.
        courseF_artist_variables_challenge1_c: To complete the pattern you will need
          to turn left twice, turn right twice, and move forward a total of four times.
        courseF_artist_variables_challenge1_d: |-
          This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_a: Variables are helpful because you can
          add to them each time through a loop.
        courseF_artist_variables_challenge2_c: Using one variable for `sides` and
          one for `length` makes the code cleaner because you can loop the same code
          multiple times, instead of creating a new copy for each set of numbers.
        courseF_artist_variables_challenge2_d: |-
          **Riešenie:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_a: Variables are helpful because you can
          add to them each time through a loop.
        courseF_artist_variables_challenge2_c: Using one variable for `sides` and
          one for `length` makes the code cleaner because you can loop the same code
          multiple times, instead of creating a new copy for each set of numbers.
        courseF_artist_variables_challenge2_d: |-
          **Riešenie:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_a: Variables are helpful because you can
          add to them each time through a loop.
        courseF_artist_variables_challenge2_c: Using one variable for `sides` and
          one for `length` makes the code cleaner because you can loop the same code
          multiple times, instead of creating a new copy for each set of numbers.
        courseF_artist_variables_challenge2_d: |-
          **Riešenie:**

          ![Solution](https://images.code.org/1236e605d55d8cc9beafbca5425c8f75-image-1543523947735.png)
      courseF_bee_conditionals10:
        courseF_bee_conditionals10_a: Imagine there is a cloud in every spot. Does
          this help simplify your code?
        courseF_bee_conditionals10_b: Use an `if/else` block to check every space
          for nectar or honey.
        courseF_bee_conditionals10_c: Could a `while` loop help get to the end of
          this path?
      courseF_bee_conditionals2:
        courseF_bee_conditionals2_a: Niekedy sa tam kvet bude nachádzať a niekedy
          nie. Ak chceš, aby tvoj kód fungoval v oboch prípadoch, určite použi podmienku
          `ak`.
        courseF_bee_conditionals2_b: Try writing the sequence to get you to all of
          the spaces, then add the `if` statement.
      courseF_bee_conditionals3:
        courseF_bee_conditionals3_a: Použi podmienku `ak`, aby si skontroloval každé
          miestečko a zisti, či sa tam nachádza kvet, alebo nič.
        courseF_bee_conditionals3_b: A `repeat` loop will be useful so you only have
          to use one `if` block.
        courseF_bee_conditionals3_c: Try writing code to check the first cloud. Can
          you loop this to check all of them?
      courseF_bee_conditionals4:
        courseD_bee_conditionals4_a: Ku každému políčku pristupuj tak, akoby bol nad
          ním oblak, napriek tomu, že vidíš celú cestu.
        courseF_bee_conditionals4_b: V cykle použi podmienku  `ak` a skontroluj každé
          pole, či sa tam nachádza nektár.
        courseF_bee_conditionals4_c: Using the block `while there is a path ahead`,
          you should `move forward` and check for a flower. `if there is a flower`
          what should the bee do?
      courseF_bee_conditionals5:
        courseF_bee_conditionals5_a: Think of every side of the rectangular path as
          a path by itself. Set up a nested loop with a `repeat` block on the outside
          and a `while there is a path ahead` on the inside. How many paths does the
          bee need to buzz down if the bee needs to buzz every side with a flower?
        courseF_bee_conditionals5_b: Inside the `while there is a path ahead` block,
          you will need to move forward and check for a flower. How do you check if
          there is a flower? What do you do if there is a flower?
        courseF_bee_conditionals5_c: 'There are 3 sides of the rectangle with flowers,
          so the code needs to `repeat 3 times`. In every repeat, the bee will need
          to continue along the path, `while there is a path ahead`. '
        courseF_bee_conditionals5_d: To continue down the path, the bee will need
          to `move forward`. While on the path, the bee needs to check for a flower.
          What should the bee do if there is a flower?
      courseF_bee_conditionals8:
        courseF_bee_conditionals8_a: |-
          **Pamätaj:** Táto úloha sa mení vždy po spustení.

          Budeš musieť použiť podmienkový blok (`ak/inak`), aby si túto výzvu vyriešil.
        courseF_bee_conditionals8_b: |-
          Táto úloha je komplikovaná, lebo nemôžeš skontrolovať prázdne polia, nektár _a_ med len jednou jedinou podmienkou.

          Skontroluj nektár a med až na konci svojej cesty.
        courseF_bee_conditionals8_c: What happens if you skip the first flower, then
          use the `while path ahead` block?
      courseF_bee_for1:
        courseF_bee_for1_a: Potiahni fialový čiselný blok do prázdneho miesta v cykle
          `opakuj`, aby si povedal, koľko krát sa má opakovať.
        courseF_bee_for1_b: Potrebuješ dva bloky v tvojom cykle ’opkauj’, aby si pozbieral
          všetok nektár.
      courseF_bee_for10:
        courseF_bee_for10_a: Dokážeš nájsť vzťah medzi počtom krokov, ktoré potrebuješ
          prejsť, a počtom nektárov, ktoré musíš pozbierať?
        courseF_bee_for10_b: Prvá skupina kvetov ma dokopy **14 kvetov**. Aby sa včela
          dostala k tejto prvej skupine, tak musí preletieť nadol **7 políčok** (alebo
          14 delené 2). Koľko kvetov je v ďalších skupinách a koľko políčok musí včela
          prejsť, aby sa k nim dostala?
        courseF_bee_for10_c: "V úlohe má prvá skupina kvetov **14** kvetov, druhá
          skupina má **10** kvetov, tretia skupina má **6** kvetov a štvrtá skupina
          má **2** kvety.\n\nVšimni si, že na tomto obrázku je **7** červených štvorcov,
          **5** oranžových štvorcov, **3** zelené štvorce a **1** modrý štvorec. \n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\nAko súvisia tieto čísla?"
        courseF_bee_for10_d: Potrebuješ použiť 2 opakovania, jedno použije matematický
          blok.
      courseF_bee_for10_2018:
        courseF_bee_for10_a: Dokážeš nájsť vzťah medzi počtom krokov, ktoré potrebuješ
          prejsť, a počtom nektárov, ktoré musíš pozbierať?
        courseF_bee_for10_b: Prvá skupina kvetov ma dokopy **14 kvetov**. Aby sa včela
          dostala k tejto prvej skupine, tak musí preletieť nadol **7 políčok** (alebo
          14 delené 2). Koľko kvetov je v ďalších skupinách a koľko políčok musí včela
          prejsť, aby sa k nim dostala?
        courseF_bee_for10_c: "V úlohe má prvá skupina kvetov **14** kvetov, druhá
          skupina má **10** kvetov, tretia skupina má **6** kvetov a štvrtá skupina
          má **2** kvety.\n\nVšimni si, že na tomto obrázku je **7** červených štvorcov,
          **5** oranžových štvorcov, **3** zelené štvorce a **1** modrý štvorec. \n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\nAko súvisia tieto čísla?"
        courseF_bee_for10_d: Potrebuješ použiť 2 opakovania, jedno použije matematický
          blok.
      courseF_bee_for10_2019:
        courseF_bee_for10_a: Dokážeš nájsť vzťah medzi počtom krokov, ktoré potrebuješ
          prejsť, a počtom nektárov, ktoré musíš pozbierať?
        courseF_bee_for10_b: Prvá skupina kvetov ma dokopy **14 kvetov**. Aby sa včela
          dostala k tejto prvej skupine, tak musí preletieť nadol **7 políčok** (alebo
          14 delené 2). Koľko kvetov je v ďalších skupinách a koľko políčok musí včela
          prejsť, aby sa k nim dostala?
        courseF_bee_for10_c: "V úlohe má prvá skupina kvetov **14** kvetov, druhá
          skupina má **10** kvetov, tretia skupina má **6** kvetov a štvrtá skupina
          má **2** kvety.\n\nVšimni si, že na tomto obrázku je **7** červených štvorcov,
          **5** oranžových štvorcov, **3** zelené štvorce a **1** modrý štvorec. \n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\nAko súvisia tieto čísla?"
        courseF_bee_for10_d: Potrebuješ použiť 2 opakovania, jedno použije matematický
          blok.
      courseF_bee_for11:
        courseF_bee_for11_a: |-
          How much less is 12 than 15?\
          How much less is 9 than 12?

          Do you see a pattern?
      courseF_bee_for11_2018:
        courseF_bee_for11_a: |-
          How much less is 12 than 15?\
          How much less is 9 than 12?

          Do you see a pattern?
      courseF_bee_for11_2019:
        courseF_bee_for11_a: |-
          How much less is 12 than 15?\
          How much less is 9 than 12?

          Do you see a pattern?
      courseF_bee_for1_2018:
        courseF_bee_for1_a: Potiahni fialový čiselný blok do prázdneho miesta v cykle
          `opakuj`, aby si povedal, koľko krát sa má opakovať.
        courseF_bee_for1_b: Potrebuješ dva bloky v tvojom cykle ’opkauj’, aby si pozbieral
          všetok nektár.
      courseF_bee_for1_2019:
        courseF_bee_for1_a: Potiahni fialový čiselný blok do prázdneho miesta v cykle
          `opakuj`, aby si povedal, koľko krát sa má opakovať.
        courseF_bee_for1_b: Potrebuješ dva bloky v tvojom cykle ’opkauj’, aby si pozbieral
          všetok nektár.
      courseF_bee_for2:
        courseF_bee_for2_a: Ak si zmätený, tak pracuj vždy len na jednom kvete a často
          testuj.
        courseF_bee_for2_b: Nezabudni sa posunúť dopredu medzi každým cyklom, takže
          sa dostaneš ku kaźdému kvetu.
      courseF_bee_for2_2018:
        courseF_bee_for2_a: Ak si zmätený, tak pracuj vždy len na jednom kvete a často
          testuj.
        courseF_bee_for2_b: Nezabudni sa posunúť dopredu medzi každým cyklom, takže
          sa dostaneš ku kaźdému kvetu.
      courseF_bee_for2_2019:
        courseF_bee_for2_a: Ak si zmätený, tak pracuj vždy len na jednom kvete a často
          testuj.
        courseF_bee_for2_b: Nezabudni sa posunúť dopredu medzi každým cyklom, takže
          sa dostaneš ku kaźdému kvetu.
      courseF_bee_for4:
        courseF_bee_for4_a: Na vyriešenie tejto úlohy použi cyklus `for`, ktorý ide
          od 1 do 7 so zvyšovaním o 1.
        courseF_bee_for4_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for4_c: Uisti sa, že používaš premennú `počítadlo` vo svojom vnorenom
          cykle `opakuj`, aby si pozbieral nektár!
      courseF_bee_for4_2018:
        courseF_bee_for4_a: Na vyriešenie tejto úlohy použi cyklus `for`, ktorý ide
          od 1 do 7 so zvyšovaním o 1.
        courseF_bee_for4_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for4_c: Uisti sa, že používaš premennú `počítadlo` vo svojom vnorenom
          cykle `opakuj`, aby si pozbieral nektár!
      courseF_bee_for4_2019:
        courseF_bee_for4_a: Na vyriešenie tejto úlohy použi cyklus `for`, ktorý ide
          od 1 do 7 so zvyšovaním o 1.
        courseF_bee_for4_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for4_c: Uisti sa, že používaš premennú `počítadlo` vo svojom vnorenom
          cykle `opakuj`, aby si pozbieral nektár!
      courseF_bee_for5:
        courseF_bee_for5_a: Tentokrát tvoj blok `posuň sa dopredu` a tvoj blok `získaj
          nektár` potrebujú byť v samostatných cykloch `opakuj` a obidva v rovnakom
          cykle `for`.
        courseF_bee_for5_b: Použi premennú `počítadlo` v každom cykle tak, aby včela
          prešla rôzne vzdialenosti medzi každými kvetmi.
        courseF_bee_for5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód a sleduj,
          čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseF_bee_for5_2018:
        courseF_bee_for5_a: Tentokrát tvoj blok `posuň sa dopredu` a tvoj blok `získaj
          nektár` potrebujú byť v samostatných cykloch `opakuj` a obidva v rovnakom
          cykle `for`.
        courseF_bee_for5_b: Použi premennú `počítadlo` v každom cykle tak, aby včela
          prešla rôzne vzdialenosti medzi každými kvetmi.
        courseF_bee_for5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód a sleduj,
          čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseF_bee_for5_2019:
        courseF_bee_for5_a: Tentokrát tvoj blok `posuň sa dopredu` a tvoj blok `získaj
          nektár` potrebujú byť v samostatných cykloch `opakuj` a obidva v rovnakom
          cykle `for`.
        courseF_bee_for5_b: Použi premennú `počítadlo` v každom cykle tak, aby včela
          prešla rôzne vzdialenosti medzi každými kvetmi.
        courseF_bee_for5_c: 'Neboj sa urobiť chybu! Pridaj bloky,  spusti kód a sleduj,
          čo sa stane, aj keď úlohu ešte nemáš úplne vyriešenú. '
      courseF_bee_for6:
        courseF_bee_for6_a: Nezabudni použiť premennú `počítadlo` vo vnútri tvojho
          cyklu `opakuj`.
        courseF_bee_for6_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for6_c: Tvoj cyklus má počítať **od 5 do 1**.
      courseF_bee_for6_2018:
        courseF_bee_for6_a: Nezabudni použiť premennú `počítadlo` vo vnútri tvojho
          cyklu `opakuj`.
        courseF_bee_for6_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for6_c: Tvoj cyklus má počítať **od 5 do 1**.
      courseF_bee_for6_2019:
        courseF_bee_for6_a: Nezabudni použiť premennú `počítadlo` vo vnútri tvojho
          cyklu `opakuj`.
        courseF_bee_for6_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for6_c: Tvoj cyklus má počítať **od 5 do 1**.
      courseF_bee_for7:
        courseF_bee_for7_a: Tvoj cyklus `for` potrebuje počítať od 1 do 7 počítané
          po 2.
        courseF_bee_for7_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for7_c: Nezabudni použiť premennú `počítadlo` v tvojom cykle `opakuj`.
      courseF_bee_for7_2018:
        courseF_bee_for7_a: Tvoj cyklus `for` potrebuje počítať od 1 do 7 počítané
          po 2.
        courseF_bee_for7_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for7_c: Nezabudni použiť premennú `počítadlo` v tvojom cykle `opakuj`.
      courseF_bee_for7_2019:
        courseF_bee_for7_a: Tvoj cyklus `for` potrebuje počítať od 1 do 7 počítané
          po 2.
        courseF_bee_for7_b: Vo svojom cykle `for` budeš mať príkaz `posuň sa dopredu`
          a cyklus na pozbieranie nektáru.
        courseF_bee_for7_c: Nezabudni použiť premennú `počítadlo` v tvojom cykle `opakuj`.
      courseF_bee_for8:
        courseF_bee_for8_a: |-
          Pri každom prechode tvojho cyklu sa prírastok pridáva k tvojej premennej počítadlo.

          Koľko potrebuješ zakaždým pridať, aby si sa dostal k ďalšiemu množstvu nektárov?
        courseF_bee_for8_b: V tejto úlohe sa potrebuješ pohybovať schodiskovým vzorom,
          aby si sa dostal ku kvetom.
        courseF_bee_for8_c: Tvoj cyklus bude počítať _od 3 do 15_ s nejakým prírastkom.
          Aký to bude?
      courseF_bee_for8_2018:
        courseF_bee_for8_a: |-
          Pri každom prechode tvojho cyklu sa prírastok pridáva k tvojej premennej počítadlo.

          Koľko potrebuješ zakaždým pridať, aby si sa dostal k ďalšiemu množstvu nektárov?
        courseF_bee_for8_b: V tejto úlohe sa potrebuješ pohybovať schodiskovým vzorom,
          aby si sa dostal ku kvetom.
        courseF_bee_for8_c: Tvoj cyklus bude počítať _od 3 do 15_ s nejakým prírastkom.
          Aký to bude?
      courseF_bee_for8_2019:
        courseF_bee_for8_a: |-
          Pri každom prechode tvojho cyklu sa prírastok pridáva k tvojej premennej počítadlo.

          Koľko potrebuješ zakaždým pridať, aby si sa dostal k ďalšiemu množstvu nektárov?
        courseF_bee_for8_b: V tejto úlohe sa potrebuješ pohybovať schodiskovým vzorom,
          aby si sa dostal ku kvetom.
        courseF_bee_for8_c: Tvoj cyklus bude počítať _od 3 do 15_ s nejakým prírastkom.
          Aký to bude?
      courseF_bee_for9:
        courseF_bee_for9_a: |-
          Skús spraviť nejaké výpočty s premennou počítadlo.

          Čo musíš spraviť s počítadlom na každom kvete, aby sa to rovnalo množstvu nektáru, ktoré potrebuješ pozbierať?
        courseF_bee_for9_c: Vyzerá to tak, že potrebuješ včelu otočit na začiatku
          každej iterácie cyklu, ak chceš vyriešiť túto úlohu.
        courseF_bee_for9_b: "**Nezabudni.** Ak tvoj cyklus pripočítava, tak prírastok
          sa pridá k tvojej premennej `počítadlo` po každom prechode cez cyklus."
      courseF_bee_for9_2018:
        courseF_bee_for9_a: |-
          Skús spraviť nejaké výpočty s premennou počítadlo.

          Čo musíš spraviť s počítadlom na každom kvete, aby sa to rovnalo množstvu nektáru, ktoré potrebuješ pozbierať?
        courseF_bee_for9_c: Vyzerá to tak, že potrebuješ včelu otočit na začiatku
          každej iterácie cyklu, ak chceš vyriešiť túto úlohu.
        courseF_bee_for9_b: "**Nezabudni.** Ak tvoj cyklus pripočítava, tak prírastok
          sa pridá k tvojej premennej `počítadlo` po každom prechode cez cyklus."
      courseF_bee_for9_2019:
        courseF_bee_for9_a: |-
          Skús spraviť nejaké výpočty s premennou počítadlo.

          Čo musíš spraviť s počítadlom na každom kvete, aby sa to rovnalo množstvu nektáru, ktoré potrebuješ pozbierať?
        courseF_bee_for9_c: Vyzerá to tak, že potrebuješ včelu otočit na začiatku
          každej iterácie cyklu, ak chceš vyriešiť túto úlohu.
        courseF_bee_for9_b: "**Nezabudni.** Ak tvoj cyklus pripočítava, tak prírastok
          sa pridá k tvojej premennej `počítadlo` po každom prechode cez cyklus."
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_a: "Pozri sa na túto možnosť pohybu: \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Skús použiť dva cykly `for`: Jeden pre pohyb
          nahor a zbieranie nektáru a druhý pre pohyb nadol a vyrábanie medu.'
        courseF_bee_for_challenge2_c: |-
          Všimni si, že jeden cyklus `for` potrebuje vo vnútri niekoľko obyčajných cyklov, ktoré sa opakujú `počítadlo` krát, aby si vytvoril zväčšujúci schodový vzor.

          Ďalší cyklus `for` potrebuje iba jeden obyčajný cyklus, aby vyrobil `počítadlo` medu.
        courseF_bee_for_challenge2_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_a: "Pozri sa na túto možnosť pohybu: \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Skús použiť dva cykly `for`: Jeden pre pohyb
          nahor a zbieranie nektáru a druhý pre pohyb nadol a vyrábanie medu.'
        courseF_bee_for_challenge2_c: |-
          Všimni si, že jeden cyklus `for` potrebuje vo vnútri niekoľko obyčajných cyklov, ktoré sa opakujú `počítadlo` krát, aby si vytvoril zväčšujúci schodový vzor.

          Ďalší cyklus `for` potrebuje iba jeden obyčajný cyklus, aby vyrobil `počítadlo` medu.
        courseF_bee_for_challenge2_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_a: "Pozri sa na túto možnosť pohybu: \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Skús použiť dva cykly `for`: Jeden pre pohyb
          nahor a zbieranie nektáru a druhý pre pohyb nadol a vyrábanie medu.'
        courseF_bee_for_challenge2_c: |-
          Všimni si, že jeden cyklus `for` potrebuje vo vnútri niekoľko obyčajných cyklov, ktoré sa opakujú `počítadlo` krát, aby si vytvoril zväčšujúci schodový vzor.

          Ďalší cyklus `for` potrebuje iba jeden obyčajný cyklus, aby vyrobil `počítadlo` medu.
        courseF_bee_for_challenge2_d: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_functions2:
        courseF_bee_functions2_a: The function has been written for you, but you will
          need to call it at each flower.
        courseF_bee_functions2_b: Click on the blue edit button on the `get only nectar`
          function to see what it does.
      courseF_bee_functions3:
        courseF_bee_functions3_a: 'Your function for this puzzle only needs to make
          honey, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseF_bee_functions3_b: Remember that your function should only get honey
          _if_ there is a honeycomb.
        courseF_bee_functions3_c: Use the green `only make honey` block to call your
          function.
        courseF_bee_functions3_d: Check out this path.
      courseF_bee_functions3a:
        courseF_bee_functions3a_a: 'Your function for this puzzle only needs to get
          nectar or make honey, it shouldn''t have any `move forward` or `turn` blocks
          in it. '
        courseF_bee_functions3a_b: Use a stairstep pattern to check the first four
          clouds.
      courseF_bee_functions4:
        courseF_bee_functions4_a: Your function should travel down the side paths
          and return the bee back to the main road.  You don't need to add that part
          to your main program.
        courseF_bee_functions4_b: Try building the program and using the function
          blocks as you expect the function to behave, then create the function.
      courseF_bee_functions5a:
        courseF_bee_functions5a_a: "Your function should check if there's a path to
          the right, and if there is, travel down the side paths and return the bee
          back to the main road.  \n\nYou don't need to add that part to your main
          program."
        courseF_bee_functions5a_b: Use a `while` loop to travel down all of the main
          paths, since they are different lengths.
        courseF_bee_functions5a_c: Within your `while` loop, make sure to move forward,
          then use your function to check for a path.
      courseF_bee_functions6:
        courseF_bee_functions6_a: "If the puzzle seems challenging, try building your
          function a little at a time.  \n\nAdd some blocks, then try it out. Add
          more, then try again.  Soon, you'll get there!\n\n<xml>\n  <block type=\"procedures_defnoreturn\"
          editable=\"false\">\n    <mutation/>\n    <title name=\"NAME\">get nectar
          make honey</title>\n    <statement name=\"STACK\">\n    </statement>\n  </block>\n</xml>"
        courseF_bee_functions6_b: Your function should check if there is a flower
          or honeycomb, get nectar or make honey, then turn.
        courseF_bee_functions6_c: Since you are turning within your function, you
          only need one `while` loop to get you through this maze.
      courseF_bee_functions7:
        courseF_bee_functions7_a: You can look back at the last puzzle to see your
          function.
        courseF_bee_functions7_b: Try drawing a path through this maze with your finger.
          Where will the bee have to make a decision?
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: "If the puzzle seems challenging, try building
          your function a little at a time.  \n\nAdd some blocks, then try it out.
          Add more, then try again.  Soon, you'll get there!"
        courseF_bee_functions8a_b: Remember to build code inside of the function editor.
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: "If the puzzle seems challenging, try building your
          function a little at a time.  \n\nAdd some blocks, then try it out. Add
          more, then try again.  Soon, you'll get there!"
        courseF_bee_functions7_b: |-
          Remember to build code inside of the green function block.

          <xml>
            <block type="procedures_defnoreturn" editable="false">
              <mutation/>
              <title name="NAME">get nectar make honey</title>
              <statement name="STACK">
              </statement>
            </block>
          </xml>
        courseF_bee_functions7_c: Which way should you turn if there is a honeycomb?
          What about a flower? What if there is nothing?
      courseF_bee_functions_challenge1:
        courseF_bee_functions_challenge1_a: You can use the functions in the tool
          box to help you. You can call a function inside of another function's definition!
      courseF_bee_functions_challenge2:
        courseF_bee_functions_challenge2_a: |-
          If there is a path to the right, you should do the following:

          -   Get any nectar or make any honey.
          -   Turn right towards the side path.
          -   Move to the end of the side path.
          -   Turn right.

          If you repeat the above actions twice, you will be ready to move back down the main path.

          **Only click for another hint if you want to see the full solution!**
        courseF_bee_functions_challenge2_b: |-
          **Riešenie:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_if">
                              <title name="DIR">isPathRight</title>
                              <statement name="DO">
                                <block type="procedures_callnoreturn" id="function">
                                <mutation name="move and check"></mutation>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">move and check</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="check nectar or honey"></mutation>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_untilBlocked">
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
            <mutation></mutation>
              <title name="NAME">check nectar or honey</title>
              <statement name="STACK">
                <block type="bee_whileNectarAmount">
                  <title name="ARG1">nectarRemaining</title>
                  <title name="OP">&gt;</title>
                  <title name="ARG2">0</title>
                  <statement name="DO">
                    <block type="maze_nectar"/>
                  </statement>
                  <next>
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">honeyAvailable</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_honey"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      courseF_bee_fwp1:
        courseF_bee_fwp1_a: Use `if` statements to make sure you're only getting nectar
          from a flower.
        courseF_bee_fwp1_b: Continue along the path using a `repeat` block. Make sure
          you are using a `move forward` block and checking if there is a flower using
          a `if` statement.
      courseF_bee_fwp2:
        courseF_bee_fwp2_a: "To turn this into a function, simply drag the code into
          the existing function block.  \n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        courseF_bee_fwp2_b: Don't forget to connect the `rowOfNectar` block to `when
          run` to call the function that you just built.
      courseF_bee_fwp3:
        courseF_bee_fwp3_a: Your function will run no matter which direction you're
          facing.
        courseF_bee_fwp3_b: There are 3 rows of nectar, what kind of turns and movements
          do you need to make between each row?
        courseF_bee_fwp3_c: To solve this puzzle, you'll need to call your function
          3 times. In between each call, you need to `turn right`, `move forward`
          2 times, then `turn right` again. OR, you need to `turn left`, `move forward`
          2 times, then `turn left` again.
      courseF_bee_fwp4:
        courseF_bee_fwp4_a: You will need to add a parameter and use the resulting
          variable in your loop.
        courseF_bee_fwp4_b: The parameter you create for your function will be used
          to in the repeat loop to determine how many times the bee will move forward
          and check for nectar.
      courseF_bee_fwp5:
        courseF_bee_fwp5_a: Count the number of spaces you need to check in each stretch
          and use those numbers as your parameters to the function call.
        courseF_bee_fwp5_a_b: Remember to turn between each function call.
      courseF_bee_fwp6:
        courseF_bee_fwp6_a: Which block automatically increments a variable that you
          could use as a parameter?
        courseF_bee_fwp6_b: Try using a `for` loop to solve this puzzle.
      courseF_bee_fwp7:
        courseF_bee_fwp7_a: You don't need a second parameter for this function, only
          a second `if` statement.
        courseF_bee_fwp7_b: Add an `if` statement in your function so the bee checks
          for both honeycombs and flowers.
      courseF_bee_fwp8:
        courseF_bee_fwp8_a: How could a `for` loop help in this puzzle?
        courseF_bee_fwp8_b: Since the spiral gets smaller as you go in, your `for`
          loop should count down.
      courseF_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_a: |-
          The main program should look something like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="procedures_callnoreturn" inline="false">
                  <mutation name="pick row">
                    <arg name="length"/>
                  </mutation>
                  <value name="ARG0">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <next>
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="pick row">
                                <arg name="length"/>
                              </mutation>
                              <value name="ARG0">
                                <block type="math_number">
                                  <title name="NUM">5</title>
                                </block>
                              </value>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                      <next>
                                        <block type="procedures_callnoreturn" inline="false">
                                          <mutation name="pick row">
                                            <arg name="length"/>
                                          </mutation>
                                          <value name="ARG0">
                                            <block type="math_number">
                                              <title name="NUM">6</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                              <next>
                                                <block type="maze_move">
                                                  <title name="DIR">moveForward</title>
                                                  <next>
                                                    <block type="procedures_callnoreturn" inline="false">
                                                      <mutation name="pick row">
                                                        <arg name="length"/>
                                                      </mutation>
                                                      <value name="ARG0">
                                                        <block type="math_number">
                                                          <title name="NUM">4</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
        courseF_bee_fwp_challenge1_b: 'Look at how much corn is available to harvest
          in each space. Do you see the counter pattern? '
        courseF_bee_fwp_challenge1_b1: |-
          The `length` parameter should be used to set the maximum value in the `for loop`.

          Don't forget to have the farmer move back to the main path after harvesting!
        courseF_bee_fwp_challenge1_c: |-
          Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.
          Inside this loop, you should move forward and pick all of the corn.

          <xml>
          <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                      </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: Inside the `for loop` you will want to `move
          forward` then `pick corn` **counter times**.
        courseF_bee_fwp_challenge1_d2: After the `for loop` you can just `move backward`
          **length times**.
        courseF_bee_fwp_challenge1_e: |-
          **Here is the solution:**

          <xml>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_corn"/>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
              </block></xml>
      courseF_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_a: |-
          Start by making sure you understand how this function is _supposed_ to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?

          Add conditional statements to the function to check for corn, pumpkins, and lettuce.
        courseF_bee_fwp_challenge2_b: |-
          Are you running out of `move forward` blocks?
          Try using a _second_ `for loop` in your main program.
        courseF_bee_fwp_challenge2_c: |-
          **Here is what your function should look like:**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_ifHasCrop">
                                  <title name="LOC">Corn</title>
                                  <statement name="DO">
                                    <block type="harvester_corn"/>
                                  </statement>
                                  <next>
                                    <block type="harvester_ifHasCrop">
                                      <title name="LOC">Pumpkin</title>
                                      <statement name="DO">
                                        <block type="harvester_pumpkin"/>
                                      </statement>
                                      <next>
                                        <block type="harvester_ifHasCrop">
                                          <title name="LOC">Lettuce</title>
                                          <statement name="DO">
                                            <block type="harvester_lettuce"/>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |-
          **Here is what your main program should look like:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter2</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">6</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="procedures_callnoreturn" inline="false">
                          <mutation name="pick row">
                            <arg name="length"/>
                          </mutation>
                          <value name="ARG0">
                            <block type="variables_get">
                              <title name="VAR">counter2</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
              </block></xml>
      courseF_bee_variables_3_2018:
        courseF_beevariables_3a: |-
          Môźeš použiť tento kód v tvojom programe, aby si odčítal jedna z premennej:
          <xml><block type="variables_set" inline="false">

          <title name="VAR">gather</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">gather</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block></xml>
      courseF_bee_variables_3_2019:
        courseF_bee_variables_3_2019_1: |-
          Môźeš použiť tento kód v tvojom programe, aby si odčítal jedna z premennej:
          <xml><block type="variables_set" inline="false">

          <title name="VAR">gather</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">gather</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block></xml>
      courseF_bee_variables_4_2019:
        courseF_bee_variables_4_2019_1: Instead of subtracting 1 from `gather`, add
          1 each time instead. What should value should the variable have at first?
      courseF_playlab_variables1a:
        courseF_playlab_variables1a_a: You will want to replace the words “What should
          I shout?” in the green block with “Goal!”
      courseF_playlab_variables2b:
        courseF_playlab_variables2b_a: What do you think Kiki will say when you hit
          `Run`?
      courseF_playlab_variables3b_josh:
        courseF_playlab_variables3b_a: 'There are two blocks with empty spaces: an
          `actor say` block, and a `join` block. Add the variable blocks there!'
      courseF_playlab_variables4b:
        courseF_playlab_variables4b_a: You don’t need any more blocks from the toolbox
          here.
        courseF_playlab_variables4b_b: Put the two `age` variables and one `name`
          variable where they make the most sense in the conversation.
      courseF_playlab_variables5c:
        courseF_playlab_variables5c_a: Find an `answer` variable block in the toolbox,
          under “Variables”.
        courseF_playlab_variables5c_b: Test your code! Try entering “red”, and also
          other colors, to see what happens.
      courseF_playlab_variables6c:
        courseF_playlab_variables6c_a: Under the “Input” section, use the `ask` block
          to get input from users.
      courseF_playlab_variables7b:
        courseF_playlab_variables7b_a: Have a cat and a dog talk about their favorite
          foods. Use the ask block to find out the favorite food, then display the
          text to the screen!
        courseF_playlab_variables7b_b: Have your favorite character ask if you want
          to hear a joke. If the answer is yes, display a joke to the screen.
      courseF_playlab_variables7c:
        courseF_playlab_variables7c_a: Put the new `ask` block before your `if/else`
          statement so you can use it there in other stages.
      courseF_playlab_variables8c:
        courseF_playlab_variables8c_a: The `join` block goes into an `actor say` block,
          and lets you use your variables in larger sentences.
      courseF_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          You will need additional blocks from the tool box to get the actors to talk.

          <xml><block type="studio_saySpriteParamsTime" inline="true">
                <value name="SPRITE">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                                <value name="TEXT">
                            <block type="text">
                              <title name="TEXT">Knock knock.</title>
                            </block>
                          </value>
                <value name="TIME">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                </block></xml>
      courseF_playlab_variables_challenge2:
        courseF_playlab_variables_challenge2_a: Add and subtract points to the `score`
          variable when sprites collide.
        courseF_playlab_variables_challenge2_b: You can change how far you move your
          sprite each time one of the arrow keys is pressed.
        courseF_playlab_variables_challenge2_c: |-
          **Riešenie:**

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">up</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">1</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">down</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">4</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">left</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">8</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">2</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">1</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </xml>
      coursea_maze_ramp1_2018:
        courseC_maze_programming1_a: Ak sa vták neposúva k prasiatku, presvedč sa,
          či sú bloky k sebe dobre pripojené a stlač "Spustiť".
        courseC_maze_programming1_b: Neboj sa urobiť chybu! Vyskúšaj niečo, a keď
          to nefunguje, tak vyskúšaj niečo iné!
      coursea_maze_ramp1_2019:
        courseC_maze_programming1_a: Ak sa vták neposúva k prasiatku, presvedč sa,
          či sú bloky k sebe dobre pripojené a stlač "Spustiť".
        courseC_maze_programming1_b: Neboj sa urobiť chybu! Vyskúšaj niečo, a keď
          to nefunguje, tak vyskúšaj niečo iné!
      grade5_artist_variables_triangles1:
        grade5_artist_variables_triangles1_a: Pamätaj, že musíš otočiť umelca o 120
          stupňov, aby si spravil vnútorný uhol 60 stupňov v trojuholníku.
        grade5_artist_variables_triangles1_b: Použi cyklus `opakuj`, aby si skrátil
          tvoj kód.
        grade5_artist_variables_triangles1_c: Vo vnútri tvojho cyklu sa chceš pohnúť
          dopredu o 50 pixelov, a potom otočiť doľava o 120 stupňov.
      grade5_artist_variables_triangles1_2018:
        grade5_artist_variables_triangles1_a: Pamätaj, že musíš otočiť umelca o 120
          stupňov, aby si spravil vnútorný uhol 60 stupňov v trojuholníku.
        grade5_artist_variables_triangles1_b: Použi cyklus `opakuj`, aby si skrátil
          tvoj kód.
        grade5_artist_variables_triangles1_c: Vo vnútri tvojho cyklu sa chceš pohnúť
          dopredu o 50 pixelov, a potom otočiť doľava o 120 stupňov.
      grade5_artist_variables_triangles1_2019:
        grade5_artist_variables_triangles1_a: Pamätaj, že musíš otočiť umelca o 120
          stupňov, aby si spravil vnútorný uhol 60 stupňov v trojuholníku.
        grade5_artist_variables_triangles1_b: Použi cyklus `opakuj`, aby si skrátil
          tvoj kód.
        grade5_artist_variables_triangles1_c: Vo vnútri tvojho cyklu sa chceš pohnúť
          dopredu o 50 pixelov, a potom otočiť doľava o 120 stupňov.
      iceage_click_hello:
        iceage_click_hello_a: Add one or more `actor 1 say` blocks to the `when clicked`
          event to complete this puzzle.
      iceage_free_play:
        iceage_free_play_a: 'Can you make Sid and Manny have an Ice Crystal fight?  '
        iceage_free_play_b: Make Granny chase Diego.  End the game as a win if she
          catches him.
        iceage_free_play_c: Can you have Sid throw snowflakes at Diego and have Diego
          get bigger each time one hits?  End the game as a win if Diego gets hit
          5 times.
      iceage_hello1:
        iceage_hello1_a: You only need to add one block to solve this puzzle.  Drag
          the `say` block out from the toolbar and connect it to the `when run` event
          block that is already in the workspace. Next, type "Hello!" inside.
      iceage_hello2:
        iceage_hello2_a: 'To solve this puzzle, you will need to have Sid say something
          using the `actor 1 say` block.  You will also need to have Manny say something
          with the `actor 2 say` block. '
      iceage_move_events:
        iceage_move_events_a: 'Each of the `when ___ arrow` events will need to have
          a different `move actor 1` command connected to it to solve this puzzle. '
      iceage_move_to_actor:
        iceage_move_to_actor_a: For this puzzle, you can either move Diego down by
          200 pixels, or move Manny up by 200 pixels.
        iceage_move_to_actor_b: Connect the `play ___ sound` block to the `when actor
          1 touches actor 2` event to finish this challenge.
      iceage_move_to_flag:
        iceage_hello3_a: Use the `move actor 1 right by 200 pixels` block to solve
          this puzzle.
      iceage_repeat:
        iceage_repeat_a: Use both the `move actor 1 left` and `move actor 1 right`
          blocks to solve this puzzle.
      iceage_sound_and_points:
        iceage_sound_and_points_a: You will need to add two blocks beneath the `when
          actor 1 touches actor 2` event.
        iceage_sound_and_points_b: You will need both the `score a point` block and
          the 'play \_\_\_\_ sound\` block to pass this level.
      iceage_throw_hearts:
        iceage_throw_hearts_a: When do you want to throw hearts at granny?  When an
          arrow is pressed? When you click on Sid?  When you click on Granny?  The
          choice is yours!
        iceage_throw_hearts_b: To get granny to be happy when she receives a heart,
          you will need to connect the `set actor 2 mood to happy` block beneath the
          `when actor 2 touches projectile` event.
      iceage_warn_ice_age:
        iceage_warn_ice_age_a: 'You should only have to add two blocks to get this
          puzzle where it needs to be. '
        iceage_warn_ice_age_b: Add both new blocks beneath the `when run` event to
          have them happen immediately after the program starts.
