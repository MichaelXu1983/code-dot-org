---
pl-PL:
  data:
    short_instructions:
      2-3 Artist 1 new: Cześć, jestem artystą. Możesz napisać kod, bym narysował prawie
        wszystko. Użyj kilku bloków, bym rysował po szarych liniach na obrazku. (Każda
        linia ma po 100 pikseli)
      2-3 Artist 11: 'Dodaj znakowi stop obramowanie, tworząc ośmiokąt o bokach równych
        100 pikseli. '
      2-3 Artist 12: "Utwórz okrąg, aby ukończyć gałkę oczną! \\\r \\\r Jeśli artysta
        obraza się o 1 stopień w każdej pętli, to ile razy musisz powtórzyć kod, aby
        narysować okrąg? 180? 360? 500?"
      2-3 Artist 2 new: 'Ten dom ma ścianę wybudowaną w połowie. Każdy bok ma długość
        100, ale ściana w połowie ukończona ma 50. Ukończ tę ścianę. '
      2-3 Artist 3.4: Blok skoku przesuwa artystę bez rysowania. Narysuj przerywaną
        linię używając bloków 'skocz do przodu' i 'idź do przodu'. Każda linia ma
        po 50 pikseli.
      2-3 Artist 3new: 'Czerwony kapelusz jest wysoki na 100 pikseli. Skończ rysować
        czarny kapelusz, który jest o 70 pikseli niższy. (Uwaga: Szerokość każdego
        kapelusza to 50 pikseli.)'
      2-3 Artist 4: Pomóż mi dokończyć domek dla tego kota.
      2-3 Artist 6: 'Ten dom potrzebuje dachu! Narysuj trójkąt. Podpowiedź: wszystkie
        trzy boki mają taką samą długość.'
      2-3 Artist 7: 'Skończ rysować ostani zestaw okien na szkole, by wszyscy w klasie
        mogli wyjrzeć na zewnątrz. Boki każdego z kwadratowych okienek mają po 25
        pikseli. '
      2-3 Artist 8: Utwórz pokoje dla każdego zwierzęcia, dzieląc prostokąt na 2 kwadraty
        tej samej wielkości. Prostokąt jest szeroki na 200 pikseli i wysoki na 100
        pikseli. Istnieje wiele możliwości rozwiązania tej zagadki, więc baw się dobrze!
      2-3 Artist 9 NEW: Dokończ ten latawiec
      2-3 Artist Assessment 1: 'Szacowanie: Ukończ rysowanie ostatniego zęba. Jest
        on szeroki na 25 pikseli i wysoki na 25 pikseli.'
      2-3 Artist Debugging 1: Ten kapelusz powinien być szeroki tylko na 50 pikseli.
        Czy możesz to naprawić?
      2-3 Artist Debugging 10: "Pad kierunkowy na moim kontrolerze jest zbyt wąski.
        \n\nCzy możesz poszerzyć go o 10 pikseli?\n\nSpróbuj najpierw uruchomić kod,
        by zobaczyć, co jest źle."
      2-3 Artist Debugging 11: |-
        Moja śnieżynka rozpada się!

        Czy mógłbyś wykminić, co jest źle?
      2-3 Artist Debugging 2: "Ten kod na wąsy kota jest błędny. \n\nNapraw ten kod,
        by rysował wąsy, które mają wszystkie taką sama długość."
      2-3 Artist Debugging 3: "Moja łódź ma dziurę! \n\nCo potrzebujesz naprawić,
        aby załatać dziurę?"
      2-3 Artist Debugging 5: "Kod, który mamy na nogę i stopę jest błędny. \n\nCzy
        możesz go naprawić?"
      2-3 Artist Debugging 6: |-
        Wygląda na to, że siedzę na krześle, któremu brakuje nogi!

        Popraw kod, by narysować ostatnią nogę.
      2-3 Artist Debugging 7: |-
        Wygląda na to, że C w napisie code jest rysowane od tyłu!

        Czy możesz sprawić, by z powrotem wyglądało jak C?
      2-3 Artist Debugging 8: |-
        Mój nauczyciel mówi, że powinienem kończyć to, co zacznę!

        Pomóż mi ukończyć mój wiatraczek. Czy widzisz, co jest źle?
      2-3 Artist Debugging 9: |-
        Coś jest nie tak!

        Kod na tę łodygę jest błędny. Czy potrafisz wykminić, jak spowodować, by artysta narysował łodygę we właściwy sposób?
      2-3 Artist Debugging Assessment 1: "Sprawdzian: Dlaczego boki tego kwadratu
        pod koniec są o 75 pikseli za krótkie?  \n\nGdzie jest błąd w kodzie?"
      2-3 Artist Free Play: Czas na zabawę! Narysuj cokolwiek chcesz.
      2-3 Artist Functions 1: "\"Ja być zombie artysta. Ja kochać rysować!\"  \n\nPomóż
        zombie narysować kwadratowe okulary.  \n\nPołączenie pomiędzy szkłami jest
        o 25 pikseli krótsze od szerokości kwadratów, która jest równa 100 pikseli."
      2-3 Artist Functions 10: 'Zabawa: Tutaj są dwie funkcje: jedna do narysowania
        dużego koła zębatego i druga do narysowania małego. Użyj ich do narysowania
        środka maszyny!'
      2-3 Artist Functions 11: "Zmieniliśmy nazwę funkcji \"narysuj kwadrat\" na \"narysuj
        sześciokąt\", ale ona nadal robi nam kwadraty! Czy potrafisz zmodyfikować
        funkcję \"narysuj sześciokąt\" tak, aby rysowała sześciokąt o bokach długości
        50 pikseli? \n\nNarysuj obrazek, używając nowej funkcji! "
      2-3 Artist Functions 11.5: "Tu jest ta sama funkcja \"narysuj sześcian\". \n\nCo
        się stanie, gdy zapętlisz główny program 6 razy, obracając się o 60 stopni
        za każdym zapętleniem?"
      2-3 Artist Functions 12: "Funkcje są naprawdę świetne do rysowania skomplikowanych
        rzeczy wiele razy. \n\nCzy potrafisz użyć funkcji \"narysuj kwiatek\", aby
        wypełnić resztę pudełka kwiatkami? Rośliny są oddalone od siebie o 100 pikseli."
      2-3 Artist Functions 2: "Funkcje pozwalają ci stwarzać nowe bloki! \n\nPrzerzuciliśmy
        bloki potrzebne do narysowania kwadratu do funkcji nazwanej \"narysuj kwadrat\".
        Tym razem użyj funkcji \"narysuj kwadrat\", aby stworzyć okulary. "
      2-3 Artist Functions 3: "Zmień funkcję do narysowania kwadratu z bokami o długości
        115, aby narysować większe okulary. \n\nKwadraty są teraz oddalone od siebie
        o 45 pikseli."
      2-3 Artist Functions 4: Teraz umieść funkcję w pętli, aby narysować te 3 kwadraty.
      2-3 Artist Functions 9: 'Zabawa: Tutaj jest funkcja śnieżynki. Poeksperymentuj
        z nią, aby stworzyć zimową scenę! To jest poziom wolnej gry, więc nie ma łamigłówki
        do rozwiązania. Dobrej zabawy!'
      2-3 Artist Loops New 1: Narysujmy głowę tego robota! Czy potrafisz stworzyć
        kwadrat o bokach, które mają 100 pikseli?
      2-3 Artist Loops New 10: Teraz połączmy trochę V razem w pętlę.
      2-3 Artist Loops New 11: Odbuduj kod z ostatniej łamigłówki, ale tym razem dodaj
        skręt w lewo o 30 stopni wewnątrz pętli. Teraz powtórz to 24 razy zamiast
        8.
      2-3 Artist Loops New 12: 'Narysuj diament o bokach 100 pikseli. '
      2-3 Artist Loops New 13: "Zacznij od pewnego kodu (na szaro), by narysować jeden
        diament. \n\nZapętlij szary kod, aby stworzyć zabawny wzór!"
      2-3 Artist Loops New 14: Pobaw się kodem dla diamentu i zobacz jakie inne wzory
        możesz stworzyć. Spróbuj zmienić o ile stopni się obracasz i ile razy zapętlasz
        kod.
      2-3 Artist Loops New 15: Teraz narysuj coś, co Ci się spodoba!
      2-3 Artist Loops New 2: |-
        Tutaj jest ta sama łamigłówka, którą właśnie rozwiązaliśmy, ale tym razem możemy użyć tylko jednego bloku 'idź naprzód' i jednego bloku 'skręć'.

        Czy potrafisz użyć bloku 'powtórz' do rozwiązania tej łamigłówki?
      2-3 Artist Loops New 9: Narysuj proste V (w którym oba boki mają po 50 pikseli),
        aby ukończyć strzałkę.
      2-3 Artist Nested Loops 1: Cały kod umieść w bloku "powtórz", aby narysować
        ten wzór.
      2-3 Artist Nested Loops 10: Powtórz w pętli ten kod 12 razy, aby ukończyć ten
        rysunek.
      2-3 Artist Nested Loops 11: Zapętlij ten kod 4 razy, aby ukończyć wzór, obracaj
        się o 90 stopni po każdym okręgu.
      2-3 Artist Nested Loops 12: Powtórz w pętli ten kod 12 razy, aby otrzymać te
        loki.
      2-3 Artist Nested Loops 2: "Teraz zapętlij trójkąt 6 razy. \n\nPo każdym trójkącie,
        będziesz potrzebował skręcić o 60 stopni przed narysowaniem kolejnego."
      2-3 Artist Nested Loops 3: "Będziesz potrzebował zapętlić trójkąt 12 razy, aby
        narysować ten wzór. \n\nPodziel liczbę stopni w kole (360) na liczbę kształtów,
        które rysujesz (12), by dowiedzieć się jak daleko skręcić po narysowaniu każdego
        z nich."
      2-3 Artist Nested Loops 4: |-
        Zapętlij ten diament 12 razy, aby narysować kwiatek!

        Uwaga: Użyjemy tego samego kąta, co do zapętlenia 12 trójkątów, aby zapętlić 12 diamentów.\\ O ile stopni musisz skręcić po każdym kształcie?
      2-3 Artist Nested Loops 5: "Wypełnij okna tego budynku, używając zagnieżdżających
        się pętli. \n\nOkna są długie na 20 pikseli i w odległości 20 pikseli od siebie."
      2-3 Artist Nested Loops 6: |-
        Ten dinozaur ma 8 kolców, biegnących w górę jego ogona.
        Każdy kolec jest długi na 30 pikseli. Zapętlij trójkąt 8 razy, ale pamiętaj, by skoczyć do przodu po każdym z nich!
      2-3 Artist Nested Loops 7: "Zapętlij ten trójkąt 10 razy, aby narysować słońce.
        \n\nPo każdym trójkącie będziesz musiał ruszyć się i skręcić. \n\nDowiesz
        się, o ile skręcać, dzieląc liczbę stopni w kole przez liczbę trójkątów, które
        je tworzą."
      2-3 Artist Nested Loops 8: "Teraz dodajmy trochę trawy do naszego obrazka. \n\nKażda
        kępka trawy jest oddalona od drugiej o 50 pikseli."
      2-3 Artist Nested Loops 9: "Skończymy ten obrazek dodając nasz kwiatek. \n\nZapętlij
        diament 12 razy, aby narysować kwiatek."
      2-3 Artist Nested Loops Free Play: Masz wolną rękę, narysuj coś fajnego używając
        zagnieżdżonych pętli.
      2-3 Bee Conditionals 11: "Jestem ciekawa co tam jest!\n\nPomóż mi przelecieć
        się po ogrodzie i zebrać nektar tylko z kwiatów, które go mają. "
      2-3 Bee Conditionals 12: Pomóż mi znaleźć cały nektar, używając jak najmniejszej
        liczby bloków!
      2-3 Bee Conditionals 13: |-
        Jak dużo się tutaj dzieje!

        Użyj tego, czego się nauczyłeś, aby zebrać cały nektar, a potem wyprodukuj miód.
      2-3 Bee Conditionals 14: |-
        Połączmy wszystko razem!

        Użyj tego, czego się nauczyłeś, aby pomóc mi zebrać nektar tylko z kwiatów, które go mają, używając możliwie najmniejszej liczby bloków. Nie zapomnij wyprodukować miodu na koniec.
      2-3 Bee Conditionals 15: "Wzór stopni tych schodów powinien wyglądać znajomo.
        \ \n\nCzy potrafisz zebrać nektar tylko z kwiatów, które go mają, używając
        możliwie najmniejszej liczby bloków?"
      2-3 Bee Conditionals 2: "Jestem głodną pszczółką! \\\r Pomóż mi zebrać cały
        nektar z kwiatów używając możliwie najmniejszej liczby bloków."
      2-3 Bee Conditionals 3: "Popatrz na cały ten nektar!\n\nPomóż mi zebrać nektar
        i wyprodukować miód, używając jak najmniejszej liczby bloków.  "
      2-3 Bee Conditionals 5: "Uważaj, aby nie zebrać nektaru z fioletowego kwiatka,
        jeśli nie ma on nic. \nMusisz najpierw sprawdzić, czy ilość nektaru równa
        się 1, używając bloku \"jeśli nektar\"."
      2-3 Bee Conditionals 6: Sprawdź ten kwiatek za pomocą bloku "jeśli", aby zobaczyć,
        czy jest w nim jakikolwiek nektar.
      2-3 Bee Conditionals 7: Zbierz nektar z każdego kwiatka, tylko jeśli go ma.
      2-3 Bee Conditionals 8: Ta łąka ma czerwone i fioletowe kwiatki. Czerwone kwiatki
        mają widoczną ilość nektaru, ale nektar w fioletowych jest tajemnicą. Zbierz
        cały nektar.
      2-3 Bee Conditionals 9: Zbierz cały nektar z każdego kwiatka.
      2-3 Bee Conditionals Assessment 1: 'Sprawdzian: Zbierz cały nektar. Uważaj,
        by nie próbować zebrać nektaru z fioletowego kwiatka, jeśli nie ma on go.'
      2-3 Bee Debugging 1: Te bloki naprawdę męczą mnie. Napraw błędy, aby zebrać
        cały nektar.
      2-3 Bee Debugging 10: |-
        Zapętliłem się już tą łamigłówką!
        Napraw błąd (błędy), aby zebrać cały nektar i wyprodukować cały miód.
      2-3 Bee Debugging 2: |-
        Czy potrafisz naleźć tutaj problem?

        Napraw błąd (błędy), aby zebrać cały nektar.
      2-3 Bee Debugging 3: |-
        Ooh, to mnie kłopocze!

        Napraw błąd (błędy), aby zebrać cały nektar.
      2-3 Bee Debugging 4: Te bloki naprawdę męczą mnie. Napraw błędy, aby zebrać
        cały nektar i zrobić miód.
      2-3 Bee Debugging 5: "Ten kwiatek wygląda przepysznie! \n\nNapraw błąd(błędy),
        aby zebrać cały nektar. Możesz teraz użyć obu: \"Uruchom \" lub \"Krok\"."
      2-3 Bee Debugging 6: |-
        Jakie słodkie wyzwanie!

        Napraw błąd (błędy), aby zebrać cały nektar.
      2-3 Bee Debugging 7: Napraw błąd (błędy), aby zebrać cały nektar i wyprodukować
        cały miód.
      2-3 Bee Debugging 8: |-
        Tyle pięknych kwiatków!

        Napraw błąd (błędy), aby zebrać cały nektar.
      2-3 Bee Debugging 9: "Bądź \"pszczególnie\" cierpliwy w tej łamigłówce! \n\nBędziesz
        potrzebował naprawić kilka rzeczy w tym programie, aby zebrać cały nektar
        i wyprodukować cały miód."
      2-3 Bee Debugging Assessment 1: |-
        Sprawdzian: Czas, byś pokazał, co potrafisz!

        Napraw błąd (błędy), aby zebrać cały nektar i wyprodukować cały miód.
      2-3 Bee Functions 1: 'Funkcje to bloki kodu, które wykonują zadania. Użyj funkcji
        "weź 2 nektary" do zebrania nektaru z każdego kwiatka. '
      2-3 Bee Functions 10: "Liczba nektarów w fioletowych kwiatkach zmienia się między
        1 a 0 za każdym razem, gdy uruchomisz łamigłówkę.   \n\nStwórz funkcję, która
        zbiera nektar tylko z fioletowych kwiatków, które go mają."
      2-3 Bee Functions 2: "Funkcje to bloki kodu, które wykonują konkretne zadania.
        \ \n\nUżyj funkcji \"weź 5\", aby zebrać 5 nektarów naraz. "
      2-3 Bee Functions 3: Zbierz cały nektar z każdego kwiatka.
      2-3 Bee Functions 4: "Funkcja \"rusz się i weź nektar\" obraca pszczółkę, zbiera
        nektar i wtedy przenosi pszczółkę do początkowej pozycji.  \n\nUżyj tej funkcji,
        aby zebrać cały nektar."
      2-3 Bee Functions 5: Teraz jest więcej nektaru w kwiatkach. Zmień podaną funkcję
        tak, aby zbierała 4 nektary i użyj jej do zebrania całego nektaru z kwiatków.
      2-3 Bee Functions 6: Teraz użyj tej samej funkcji, aby zebrać nektar z trzech
        kwiatów.
      2-3 Bee Functions 8: Stwórz swoją własną funkcję, która zbiera 7 nektarów, idzie
        do przodu i produkuje 7 plastrów miodu. Użyj tej funkcji do zebrania nektaru
        z każdego kwiatka i wyprodukowania miodu na każdym plastrze.
      2-3 Bee Functions 9: Stwórz swoją własną funkcję, która idzie w dół ścieżki,
        zbiera nektar, produkuje miód i przenosi pszczółkę na górę ścieżki.
      2-3 Bee Functions Assessment 1: 'Sprawdzian: Użyj podanej funkcji do zebrania
        nektaru z każdego kwiatka.'
      2-3 Bee Functions Assessment 2: 'Sprawdzian: Stwórz funkcję do obrotu, poruszenia
        się naprzód i wyprodukowania 3 plastrów miodu. Potem powróć pszczółką tam,
        gdzie zaczęła i obróć się do tyłu.'
      2-3 Bee Loops 1: |-
        Te kwiaty wyglądają przepysznie!

        Zbierz nektar z każdego z kwiatów, używając możliwie najmniejszej liczby bloków.
      2-3 Bee Loops 10: Can you use a while loop inside of two other loops to collect
        all of the nectar?
      2-3 Bee Loops 13: 'Sprawdzian: Zbierz cały nektar, używając możliwie najmniejszej
        liczby bloków.'
      2-3 Bee Loops 1A: 'Cześć, jestem pszczółką. Czy pomożesz mi zebrać nektar z
        tych kwiatów? '
      2-3 Bee Loops 2: Zbierz cały nektar i wyprodukuj cały miód, używając możliwie
        najmniejszej liczby bloków.
      2-3 Bee Loops 2A: Tym razem użyj pętli, by zebrać cały nektar.
      2-3 Bee Loops 3: Zbierz nektar z każdego z kwiatów i wyprodukuj miód na każdym
        plastrze miodu, używając możliwie najmniejszej liczby bloków.
      2-3 Bee Loops 3A: Użyj pętli "powtórz", by zebrać cały nektar.
      2-3 Bee Loops 3B: Teraz użyj bloku 'powtórz', aby zebrać cały nektar i wyprodukować
        cały miód.
      2-3 Bee Loops 4: |-
        Jaka pracowita pszczółka!

        Pomóż pszczółce zebrać cały nektar i wyprodukować cały miód z możliwie najmniejszą liczbą bloków.
      2-3 Bee Loops 4A: |-
        Ile razy pętle mogą ci pomóc w tej łamigłówce?

        Pętle są twoim przyjacielem! Użyj tylko kilku z nich, by ukończyć tę łamigłówkę z możliwie najmniejszą liczbą bloków.
      2-3 Bee Loops 5: "Kształt tej ścieżki jest inny niż innych ścieżek. \n\nCzy
        potrafisz zebrać cały nektar, używając tak mało bloków, jak to tylko możliwe?"
      2-3 Bee Loops 6: Czy potrafisz znaleźć najszybszą drogę dla pszczółki, aby zebrać
        cały nektar i wyprodukować cały miód?
      2-3 Bee Loops 7: Jaka piękna łąka z kwiatami! Pomóż pszczółce odwiedzić każdy
        z nich. Czy potrafisz to zrobić za pomocą mniej niż 7 bloków?
      2-3 Bee Loops 8: "These purple flowers have different amount of nectar each
        time you run the puzzle. \n\nUse the `while nectar` loop to collect all of
        the nectar. \n\nThis loop will run as long as the condition is true, in this
        case `nectar > 0`."
      2-3 Bee Loops Assessment 1: 'Assessment: Use a `while` loop to collect all of
        the nectar from these flowers.'
      2-3 Maze 1: 'Czy pomożesz mi złapać niesforną świnkę? Ustaw parę bloków ''idź
        naprzód'' pod blokiem ''po uruchomieniu'' i naciśnij ''Uruchom''. '
      2-3 Maze 10: Prowadź mnie do tego zielonego zła! (Uważaj na pola z TNT)
      2-3 Maze 12: Czy możesz dostać mnie do świnki tworząc pętlę, która używa tylko
        jednego bloku 'idź naprzód' wewnątrz bloku 'powtórz'?
      2-3 Maze 13: Doprowadź mnie do świnki! Możesz teraz użyć tylko jednego bloku
        idź naprzód
      2-3 Maze 15: W tej łamigłówce dwie pętle 'powtórz' pomogą ci dotrzeć do świnki
        za pomocą mniejszej liczby bloków!
      2-3 Maze 16: Pętle działają  nawet z wieloma blokami w środku. Czy potrafisz
        umieścić ten ciąg bloków w pętli, aby doprowadzić zombie do słonecznika?
      2-3 Maze 16 before: Czy potrafisz znaleźć najszybszy sposób na doprowadzenie
        mnie do świnki?
      2-3 Maze 2: Ta świnka jeży moje piórka. Pomóż mi, by ją dopaść!
      2-3 Maze 3: Wyznacz ścieżkę i zaprowadź mnie do tej głupiutkiej świnki. Unikaj
        TNT, bo inaczej piórka będą latały!
      2-3 Maze 4: Prowadź mnie do tego zielonego zła! (Uważaj na pola z TNT)
      2-3 Maze 6: Zachowaj spokój i pomóż mi znaleźć tę złą świnkę. W przeciwnym razie
        mogę się rozgniewać!
      2-3 Maze 7: Prowadź mnie do tego zielonego zła! (Uważaj na pola z TNT)
      2-3 Maze 8: Doprowadź mnie do świnki!
      2-3 Maze 9: Prowadź mnie do tego zielonego zła! (Uważaj na pola z TNT)
      2-3 Maze Loops 1: Czy możesz dostać mnie do świnki używając 5 bloków tego samego
        rodzaju?
      2-3 Maze Loops 17: Wykorzystaj to, czego się nauczyłeś dotychczas, aby doprowadzić
        mnie do słonecznika!
      2-3 Maze Loops 18: Doprowadź mnie do słonecznika używając możliwie najmniejszej
        liczby bloków!   Spróbuj użyć pętli "powtórz" wewnątrz innej pętli, by skrócić
        ilość kodu, który potrzebujesz.
      2-3 Maze Loops 19: "Sprowadźmy to na wyższy poziom! \n Użyj pętli, aby doprowadzić
        mnie do słonecznika za pomocą możliwie najmniejszej liczby bloków."
      2-3 Maze Loops 20: Czy potrafisz rozwiązać tę łamigłówkę używając możliwie najmniejszej
        liczby bloków?
      2-3 Maze Loops 21: Doprowadź mnie do słonecznika używając możliwie najmniejszej
        liczby bloków!
      2-3 Maze Loops Assessment 1: 'Sprawdzian: Doprowadź mnie do słonecznika przy
        użyciu tylko 5 bloków! '
      4-5 Artist 1: 'Pomóż mi ukończyć rysowanie mojego pudełka. (Każda linia jest
        długa na 300 pikseli) '
      4-5 Artist 11: Dokończ zielone linie. Linie mają długość 300 pikseli i leżą
        15 pikseli od siebie.
      4-5 Artist 2: Zapętlij ten kod, używając bloku "powtórz", aby ukończyć kwadrat.
      4-5 Artist 3: To prostokątne kwietne łóżko ma obwód równy 600. Dłuższy bok ma
        długość 200. Narysuj ten prostokąt, używając możliwie najmniejszej liczby
        bloków.
      4-5 Artist 3.5: Zobacz, co się dzieje, gdy uruchomisz ten kod (lub naciśnij
        przycisk "Uruchom"). Następnie powtórz to kilka razy, aby ukończyć rysowanie!
      4-5 Artist 4: Ile stopni jest w okręgu?  Umieść bloki w pętli, aby utworzyć
        koło kolorów.
      4-5 Artist 5: Czym możemy zastąpić "???", aby zombie ukończył ten rysunek, używając
        podanej pętli?
      4-5 Artist 6: Ten trójkąt równoboczny ma kąty równe 60, 60 oraz 60 stopni. Każdy
        bok ma 200 pikseli. Ukończ rysunek.
      4-5 Artist 7: Ten trójkąt prostokątny ma kąty równe 30, 60 oraz 90 stopni. Długość
        pochylonego boku (długość przeciwprostokątnej) wynosi 200 pikseli. Ukończ
        rysunek.
      4-5 Artist 8: "Linia po środku boiska do piłki nożnej jest prostopadła do linii
        bocznych.\\\nTen prostokąt ma obwód równy 800 pikseli w sumie i ma długość
        240 pikseli. Jaki jest wysoki?   \n\nNarysuj granice boiska i linię po środku."
      4-5 Artist 9: Narysuj prawą połowę tego obrazka, aby projekt był symetryczny.
        Trójkąty są równoboczne i mają boki o długości 50 pikseli.
      4-5 Artist Assessment 1: 'Sprawdzian: Użyj pętli, aby narysować trójkąt równoboczny.
        Każdy bok ma długość 300 pikseli.'
      4-5 Artist Free Draw 1: Wolny wybór!  Narysuj cokolwiek, co inspiruje Cię do
        kreatywności.
      4-5 Artist Patterns 1: |-
        Draw this square using a loop.

        Each side is 20 pixels long.
      4-5 Artist Patterns 10: "This code draws two rows of hexagons - loop the whole
        thing 4 times to draw the whole honeycomb. \n\nYou'll need to jump back 120
        pixels in your outermost loop to make sure the artist doesn't draw off the
        screen."
      4-5 Artist Patterns 11: 'How many times do you need to loop this to draw a half
        circle? '
      4-5 Artist Patterns 12: "If you create another loop like this one, but turn
        left instead of right, what happens? \n\nCan you repeat all of that to draw
        this wave?"
      4-5 Artist Patterns 13: "Now let's loop that whole thing four times to create
        this picture frame. Watch out for the corners - you can't just turn 90 degrees!
        \n\nIf looping a 3 degree turn 60 times makes a half circle, which of these
        blocks of code will make an additional quarter circle for the corners?"
      4-5 Artist Patterns 2: If you place your square loop inside another loop, we
        call that a nested loop. What do you need to add as an outer loop to make
        sure all 15 squares line up next to each other?
      4-5 Artist Patterns 3: Now let's go one level deeper! We've nested that whole
        block of code into another loop, but you need to get the artist back in place
        to draw the next line. Which of these code blocks can you place at the end
        of the outermost loop to draw the whole grid?
      4-5 Artist Patterns 4: This diamond has 50 pixel sides and angles of 120 and
        60 degrees. Use a loop to draw it.
      4-5 Artist Patterns 5: "Repeat this code to make a row of 6 diamonds. \n\nNotice
        that we changed our diamond code to repeat 3 times instead of 2 - why do you
        think that is?"
      4-5 Artist Patterns 6: How many times do you need to repeat this block to draw
        the full grid of diamonds?
      4-5 Artist Patterns 7: Zmodyfikujmy kod z ostatniej łamigłówki, aby utworzyć
        ten bardziej złożony wzór. Zauważ, jak diamenty pokrywają się teraz, spróbuj
        zmienić pierwszy blok "skocz do tyłu" ze 100 na 50 (o połowę bliżej) - a teraz
        jak daleko powinien pójść artysta w drugim bloku "skocz do tyłu"?
      4-5 Artist Patterns 8: Use a loop to draw this hexagon with 40 pixel sides and
        60 degree angles.
      4-5 Artist Patterns 9: "Now repeat this code 3 times and draw the whole row.
        \n\nEach hexagon is 80 pixels wide from the furthest points left to right."
      4-5 Artist Patterns 9.5: Let's loop this code to draw two rows of hexagons.
        Notice how our second row is shifted to the right.
      4-5 Artist Patterns Free Play: Free play - try your hand at making a pattern
        of your own!
      4-5 Bee Conditionals 1: Ta chmurka zasłania mi widok! Sprawdź, aby zobaczyć,
        czy pod chmurką jest kwiatek i zbierz nektar tylko jeśli jest. Uważaj, to
        może się zmienić!
      4-5 Bee Conditionals 2: "Więcej chmurek! \n\nSprawdź, czy chmurka zasłania kwiatek
        przed zebraniem nektaru.  \n\nPamiętaj: Nie wszystkie chmurki zasłaniają tą
        samą rzecz!"
      4-5 Bee Conditionals 3: Teraz chcę tylko wyprodukować miód. Niektóre z tych
        chmurek mogą mieć pod sobą plastry miodu. Pamiętaj, żeby sprawdzić każdą chmurkę!
      4-5 Bee Conditionals 4: Czasami ta chmurka zasłania kwiatek, a czasem plaster
        miodu! Użyj bloku jeśli/ w przeciwnym razie do zebrania nektaru jeśli jest
        tam kwiatek, w przeciwnym razie do wyprodukowania miodu (ponieważ jest tam
        plaster miodu).
      4-5 Bee Conditionals 5: |-
        Pod każdą z tych chmurek będzie kwiatek albo plaster miodu!

        Użyj bloku jeśli/ w przeciwnym razie do zebrania nektaru jeśli jest tam kwiatek.
        W przeciwnym razie wyprodukuj miód (ponieważ jest tam plaster miodu).
      4-5 Bee Conditionals 6: "Nie jestem pewna ile nektaru ma ten kwiatek, ale wiem,
        że ma 1, 2 lub 3 nektary. \n\nPołącz bloki warunkowe (\"jeśli\" i/lub \"jeśli/
        w przeciwnym razie\") do zebrania tylko takiej ilości nektaru, jaką kwiatek
        ma. \n\nPamiętaj, że ilość nektaru może się zmienić za każdym razem, gdy uruchomisz
        łamigłówkę!"
      4-5 Bee Conditionals 7: "Te kwiatki mogą mieć 3, 2 lub 1 nektar. \n\nUkończ
        funkcję \"sprawdź fioletowy kwiatek\" i użyj jej do zebrania całego nektaru
        z kwiatków."
      4-5 Bee Conditionals 8: "Wypełnij wnętrze funkcji \"check flower make honey\"
        (sprawdź kwiat zrób miód). \\\r \\\r Twoja funkcja powinna sprawdzać, czy
        fioletowy kwiat ma 3, 2, czy 1 nektary i zebrać cały nektar. \\\r Następnie.
        przejdź dalej i zrób miód."
      4-5 Bee Conditionals Assessment 1: "**Sprawdzian:** Ta chmurka albo ukrywa kwiat
        z jednym nektarem lub plaster miodu, który potrzebuje jednego miodu. \n\nUkończ
        funkcję \"get nectar or make honey\" (zbierz nektar lub zrób miód), a następnie
        zbierz nektar i miód. "
      4-5 Bee Debugging 1: "Te bloki naprawdę męczą mnie. \\\r \\\r Czy mógłbyś je
        naprawić?"
      4-5 Bee Debugging 10: Znajdź błędy i napraw je.
      4-5 Bee Debugging 11: Czy to działa poprawnie?
      4-5 Bee Debugging 2: Pomóż pszczółce zebrać nektar i zrobić miodu.
      4-5 Bee Debugging 3: Znajdź błędy i napraw je.
      4-5 Bee Debugging 4: Te bloki nie działają. W czym jest błąd?
      4-5 Bee Debugging 5: Coś tu nie gra ...
      4-5 Bee Debugging 6: "The purple flower has a different amount of nectar each
        time you run the puzzle. \n\nFix the blocks to get all of the nectar from
        the flower each time."
      4-5 Bee Debugging 7: Czegoś brakuje w tej funkcji...
      4-5 Bee Debugging 8: This function is fine, but it isn't used properly.
      4-5 Bee Debugging 9: Dlaczego pszczółka nie robi wystarczająco dużo miodu?
      4-5 Bee Debugging Assessment 1: 'Sprawdzian: Popraw kod.'
      4-5 Bee Nested Loops 1: Użyj pętli, by zebrać cały nektar.
      4-5 Bee Nested Loops 2: 'Collect all of the nectar from each flower. Use a nested
        loop. '
      4-5 Bee Nested Loops 3: Collect all of the nectar by putting the starter code
        inside another loop.
      4-5 Bee Nested Loops 4: "Collect all of the nectar from each flower and make
        honey at the honeycomb. \n\nUse a nested loop. "
      4-5 Bee Nested Loops 5: Zbierz cały nektar tworząc zagnieżdżoną pętlę.
      4-5 Bee Nested Loops 7: Put this loop inside another loop to create a nested
        loop and collect all of the nectar from the flowers.
      4-5 Bee Nested Loops 9: Collect all of the nectar from these flowers by nesting
        a while loop inside a repeat.
      4-5 Bee Nested Loops Assessment 1: "**Assessment:** Collect all of the nectar
        and make all of the honey using loops."
      4-5 Bee Nested Loops Rows: Gather nectar from the rows of flowers! Use a nested
        loop.
      4-5 Maze 1: Drodzy. Mnie zombie. ... Musi dotrzeć... do słonecznika.
      4-5 Maze 10: Czy możesz dostać się do słonecznika przy użyciu tylko czterech
        bloków?
      4-5 Maze 11: Czy możesz dotrzeć do słonecznika przy użyciu tylko sześciu bloków?
      4-5 Maze 12: OK, to jest nieco inne. Czy możesz to zrobić w zaledwie sześciu
        blokach?
      4-5 Maze 2: Doprowadź zombie do słonecznika, ale unikaj chrupacza!
      4-5 Maze 3: Muszę ... dotrzeć ... do słonecznika.
      4-5 Maze 4: Użyj bloku "powtórz", aby szybko rozwiązać tę łamigłówkę...
      4-5 Maze 5: Czy potrafisz rozwiązać tę łamigłówkę używając możliwie najmniejszej
        liczby bloków?
      4-5 Maze 6: Czy potrafisz rozwiązać tę łamigłówkę używając możliwie najmniejszej
        liczby bloków?
      4-5 Maze 7: Szybko doprowadź zombie do słonecznika! Czu potrafisz rozwiązać
        tę łamigłówkę, używając mniej niż 11 bloków?
      4-5 Maze 8: |-
        Doprowadź zombie do słonecznika, używając możliwie najmniejszej liczby bloków.\
        (Unikaj chrupaczy!)
      4-5 Maze 9: "Teraz mamy nowy blok o nazwie \"powtarzaj aż\".\\\nPomoże on nam
        zapętlać komendy, aż zombie dotrze do słonecznika.  \n\nUżyj nowego bloku
        \"powtarzaj aż\", aby rozwiązać tę łamigłówkę w możliwie najmniejszej liczbie
        komend."
      4-5 Maze Assessment 1: 'Sprawdzian: Dojdź do słonecznika, używając możliwie
        najmniejszej liczby bloków.'
      4-5 Maze Conditionals 1: Użyj bloku "powtarzaj aż", by doprowadzić zombie do
        słonecznika.
      4-5 Maze Conditionals 10: "Czy potrafisz dodać tylko 3 bloki, aby pomóc zombie
        rozwiązać bardziej skomplikowany labirynt? \n\nJeśli zrobisz to prawidłowo,
        będzie on mógł przejść każdą krętą ścieżkę, nie ważne jakiej długości ona
        jest!"
      4-5 Maze Conditionals 2: Użyj bloku "powtarzaj aż", by doprowadzić zombie do
        słonecznika.
      4-5 Maze Conditionals 3: 'Użyj bloku "jeśli", aby pomóc me zdecydować, kiedy
        mam skręcić. '
      4-5 Maze Conditionals 4: Ok, rozwiąż ten zupełnie tak samo, jak ostatnią łamigłówkę,
        ale musisz pamiętać, jak użyłeś bloków "jeśli" i "powtarzaj aż" razem.
      4-5 Maze Conditionals 5: "Potrzeba mi słonecznika!  \n\n Użyj bloku `if`, aby
        doprowadzić zombie do słonecznika z wykorzystaniem najmniejszej liczby bloków."
      4-5 Maze Conditionals 6: "\"Jeść słonecznik!\"  \n\n Użyj bloku `if`, aby doprowadzić
        zombie do słonecznika z wykorzystaniem najmniejszej liczby bloków."
      4-5 Maze Conditionals 7: Rozwiązanie tej łamigłówki nie różni się za bardzo,
        ale uważaj na chrupacze!
      4-5 Maze Conditionals 8: "Blok \"jeśli/w przeciwnym razie\" sprawdza warunek
        i potem wykonuje jedną ALBO drugą rzecz.\n\nUżyj tego nowego bloku, aby doprowadzić
        mnie do słonecznika. "
      4-5 Maze Conditionals 9: |-
        Jeszcze jedna łamigłówka do poćwiczenia bloku "jeśli/w przeciwnym razie"!

        Poprowadź palcem po trasie, aby zobaczyć czy dasz sobie radę za pierwszym razem.
      4-5 Maze Conditionals Assessment 1: "**Sprawdzian:** Użyj bloków `repeat until`
        i `if/else`, aby doprowadzić mnie do słonecznika za pomocą możliwie najmniejszej
        liczby bloków."
      4-5 Nested Loops 1: 'Ukończ kod, aby narysować te trójkąty. Pierwszy jest zrobiony
        za ciebie. Wskazówka: 3 trójkąty w obrocie o 360 stopni.'
      4-5 Nested Loops 11: Can you draw these 10 squares of this sidewalk using a
        nested loop? Each square is 30 pixels.
      4-5 Nested Loops 12: Can you draw these 36 triangles using a nested loop?
      4-5 Nested Loops 2: 'Teraz zagnieźdź tę pętlę wewnątrz kolejnej pętli, aby narysować
        10 trójkątów.  Nazywa się to "zagnieżdżona" pętla.  '
      4-5 Nested Loops 3: |-
        Create a sun by nesting the starter code in another loop.

        To get this cool design with a hollow center, you'll need to jump forward by the length of the triangle before turning.
      4-5 Nested Loops 5: Umieść w pętli dany kod, aby utworzyć wiatrak.
      4-5 Nested Loops 6: Czy potrafisz narysować sześciokąt, zapętlając kod na trójkąt?
      4-5 Nested Loops 7: "Loop this design 10 times. \n\nHow much do you have to
        turn each time you loop?"
      4-5 Nested Loops 8: "Loop this shape 6 times. \n\nHow much do you have to turn
        each time you loop? "
      4-5 Nested Loops 9: Narysuj zęby w paszczy aligatora!
      4-5 Nested Loops Assessment 1: 'Assessment: Use a nested loop to complete the
        design.'
      4-5 While Loops 1: Move me to the hole and fill it with two shovelfuls of dirt,
        using the `fill` block.
      4-5 While Loops 2: Move me to the pile of dirt and remove it with 5 shovel scoops,
        using the `remove 1` block.
      4-5 While Loops 3: "Użyj możliwie jak najmniej bloków, aby ukończyć tę łamigłówkę!
        \\\r \\\r. Doprowadź mnie do sterty śmieci i usuń je, a następnie przejdź
        do otworu i wypełnij go całkowicie."
      4-5 While Loops 4: "Wow, look at that! \n\nI don't know how many shovelfuls
        of dirt this hole needs.\\\nCan you write a program that keeps using the `fill`
        block until the ground is even?  "
      4-5 While Loops 5: Wow, now there are two deep holes! Can you write a program
        that fills them both until the ground is even?
      4-5 While Loops 6: Wow, now there is a large pile of dirt! Can you write a program
        that removes all of it so the ground is even?
      4-5 While Loops 7: Wow, now there are three piles of dirt! Can you write a program
        that removes each of them until the ground is even?
      4-5 While Loops 8: " There is a really deep hole and a really large pile of
        dirt.  How many shovelfuls of dirt need to be moved around to make the ground
        flat?"
      4-5 While Loops Assessment 1: There are a lot of holes and piles.  Help me to
        fill and remove them to make the ground flat.
      AB_Debug_PlayLab3: Przenieś rycerza do każdej flagi. Jeśli coś pójdzie nie tak,
        poszukaj błędów!
      Alien Defender: 'Idea projektu: Stwórz grę obronną w Play Lab!'
      CDEF_debugging_flappy2: Dlaczego ta gra nie działa?
      CSD U3 Boolean Modify: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Modify_2018: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Modify_2019: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Predict: What do you think this code will do when it is run?
        Predict what each console.log() command will print, then run the program to
        check your predictions.
      CSD U3 Boolean Predict_2018: What do you think this code will do when it is
        run? Predict what each console.log() command will print, then run the program
        to check your predictions.
      CSD U3 Boolean Predict_2019: What do you think this code will do when it is
        run? Predict what each console.log() command will print, then run the program
        to check your predictions.
      CSD U3 Keypress Boolean: Modify the code so that all of the console.log commands
        print true
      CSD U3 Keypress Boolean_2018: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Boolean_2018_2019: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers: Modify the code so that all of the console.log commands
        print true
      CSD U3 Keypress Watchers_2018: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers_2019: Modify the code so that all of the console.log
        commands print true
      CSD U3 L5 Freeplay: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U3 L5 Freeplay_2018: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U3 L5 Freeplay_2019: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U3 Mouse Input Bee 2: Do this
      CSD U3 Mouse Input Bee 2_2018: Do this
      CSD U3 Mouse Input Bee 2_2019: Do this
      CSD U3 Sprites intro sprites: Do This
      CSD U3 Sprites intro sprites_2018: Do This
      CSD U3 Sprites intro sprites_2019: Do This
      CSD U3 Variables change circle size: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U3 Variables change circle size_2018: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U3 Variables change circle size_2019: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U3 Variables naming rules v2: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U3 Variables naming rules v2_2018: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U3 Variables naming rules v2_2018_2019: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U3 Variables random with assignment: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U3 Variables random with assignment_2018: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U3 Variables random with assignment_2019: |-
        Zmień wartość petalSize kilka razy.
        Jak jej wielkość wpływa na Twój rysunek?
      CSD U5 black white images pixelation: |-
        Uzupełnij kształt X poprzez
        dopisywanie zer i jedynek
      CSD U5 black white images pixelation 2: Narysuj uśmiechniętą buźkę (kliknij
        tutaj aby zobaczyć obrazek)
      CSD U5 black white images pixelation 2_2018: Narysuj uśmiechniętą buźkę (kliknij
        tutaj aby zobaczyć obrazek)
      CSD U5 black white images pixelation 2_2019: Narysuj uśmiechniętą buźkę (kliknij
        tutaj aby zobaczyć obrazek)
      CSD U5 black white images pixelation 3: Zmień szerokość i wysokość suwaka aby
        znaleźć obraz (kliknij tutaj aby dowiedzieć się więcej)
      CSD U5 black white images pixelation 3_2018: Zmień szerokość i wysokość suwaka
        aby znaleźć obraz (kliknij tutaj aby dowiedzieć się więcej)
      CSD U5 black white images pixelation 3_2019: Zmień szerokość i wysokość suwaka
        aby znaleźć obraz (kliknij tutaj aby dowiedzieć się więcej)
      CSD U5 black white images pixelation 4: |-
        Dodaj brwi do uśmiechniętej
        buźki (kliknij tutaj, aby zobaczyć obraz)
      CSD U5 black white images pixelation 4_2018: |-
        Dodaj brwi do uśmiechniętej
        buźki (kliknij tutaj, aby zobaczyć obraz)
      CSD U5 black white images pixelation 4_2019: |-
        Dodaj brwi do uśmiechniętej
        buźki (kliknij tutaj, aby zobaczyć obraz)
      CSD U5 black white images pixelation 5: Teraz narysuj coś, co Ci się spodoba!
      CSD U5 black white images pixelation 5_2018: Teraz narysuj coś, co Ci się spodoba!
      CSD U5 black white images pixelation 5_2019: Teraz narysuj coś, co Ci się spodoba!
      CSD U5 black white images pixelation_2018: |-
        Uzupełnij kształt X poprzez
        dopisywanie zer i jedynek
      CSD U5 black white images pixelation_2019: |-
        Uzupełnij kształt X poprzez
        dopisywanie zer i jedynek
      CSD U6 params modify clouds: |-
        # Clouds

        This program makes the clouds move when you blow on the sound sensor, but it's not finished.

        # Do This

        -   Create a new function `moveCloud(name)` that will move any cloud.
            -   (Hint: you will use almost all the same code as the `moveCloud0` function)
        -   Call your new `moveCloud(name)` function inside the event block, once for each cloud name.
            -   (Hint: this is similar to how the `loopCloud(name)` function is called many times.
      CSD U6 params modify clouds_2018: |-
        # Clouds

        This program makes the clouds move when you blow on the sound sensor, but it's not finished.

        # Do This

        -   Create a new function `moveCloud(name)` that will move any cloud.
            -   (Hint: you will use almost all the same code as the `moveCloud0` function)
        -   Call your new `moveCloud(name)` function inside the event block, once for each cloud name.
            -   (Hint: this is similar to how the `loopCloud(name)` function is called many times.
      CSD U6 params modify planes: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSD U6 params modify planes_2018: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSD U6 params modify planes_2019: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSDU4 - Design Mode - 16: Add an event handler for the button using the "Insert
        and show" link in the Design Mode Events tab. (Click to see full instructions).
      CSDU4 - Design Mode - 17: Update the ID names and `console.log` messages to
        match the correct button. (Click to see full instructions.)
      CSDU4 - Design Mode - 18: Fix the layout of the bullseye game. (Click to see
        full instructions)
      CSDU4 - Design Mode - 4: Improve the button by choosing a descriptive and meaningful
        ID. (Click to see full instructions)
      CSDU6 arrays select rainbow: |-
        Przepisz zawartość
        tablicy na ekran w kolejności numerycznej. (Kliknij, aby zobaczyć pełne instrukcje)
      CSDU6 arrays select rainbow_2018: |-
        Przepisz zawartość
        tablicy na ekran w kolejności numerycznej. (Kliknij, aby zobaczyć pełne instrukcje)
      CSDU6 arrays select rainbow_2019: |-
        Przepisz zawartość
        tablicy na ekran w kolejności numerycznej. (Kliknij, aby zobaczyć pełne instrukcje)
      CSDU6 arrays select random: Napisz program, który wyświetli losowo wybrany kolor
        z tablicy. (Naciśnij aby dowiedzieć się więcej)
      CSDU6 arrays select random_2018: Napisz program, który wyświetli losowo wybrany
        kolor z tablicy. (Naciśnij aby dowiedzieć się więcej)
      CSDU6 arrays select random_2019: Napisz program, który wyświetli losowo wybrany
        kolor z tablicy. (Naciśnij aby dowiedzieć się więcej)
      CSDU6 arrays select variable: Napisz program, który wyświetli losowo wybrany
        kolor z tablicy. (Naciśnij aby dowiedzieć się więcej)
      CSDU6 arrays select variable_2018: Napisz program, który wyświetli losowo wybrany
        kolor z tablicy. (Naciśnij aby dowiedzieć się więcej)
      CSDU6 arrays select variable_2019: Napisz program, który wyświetli losowo wybrany
        kolor z tablicy. (Naciśnij aby dowiedzieć się więcej)
      Choose Your Own Adventure: You can do whatever you want in play lab! Here's
        an example of choose your own adventure story in play lab.
      Course 4 Artist 1: 'Help me draw a box. (Each line is 200 pixels long) '
      Course 4 Artist 10: |-
        Click here to see the full instructions again!

        Here is the code for an interesting shape.  What happens when you repeat it multiple times, turning between each iteration?   Notice that the turns in this shape add up to 420 degrees, which means that when your artist is done drawing, it will be facing a different direction than when you started.  That new direction is exactly 60 degrees to the right of where you began.
      Course 4 Artist 11: Now for a challenge!  Feel free to use trial and error.
        You are not expected to get the image perfect the first time.   Want to see
        more hints?  Click here!
      Course 4 Artist 12: |-
        Want a second peek at the inspiration design or the hints?  Click here!

        Otherwise, make a design all your own!
      Course 4 Artist 13: Still playing?  Here is a blank canvas where you can design
        anything you want!
      Course 4 Artist 2: Can you use a loop to draw the greyed out square?  (Each
        side is 300px long)
      Course 4 Artist 20: Still playing?  Here is a blank canvas where you can create
        whatever you want!
      Course 4 Artist 3: Try to figure out what happens if you run this code (or press
        "Run" to test it). Then, repeat it enough times to complete the drawing.
      Course 4 Artist 4: How many degrees are in a circle?  Fill in the repeat block
        with that number to create a circle of colors.
      Course 4 Artist 5: 'Draw the other half of this design so it''s symmetrical.
        The triangles are equilateral and are 50 pixels long. Hint: You may have to
        run the code several times to figure out all of the blocks that need to be
        added.'
      Course 4 Artist 6: Complete the code to draw these three, equilateral triangles.
      Course 4 Artist 7: 'Now nest this loop inside another loop to draw 10 triangles.
        This is called a nested loop. Hint: All 10 triangles complete a 360 degree
        rotation.  '
      Course 4 Artist 8: Draw this sun by looping this whole block of code multiple
        times.
      Course 4 Artist 8a: Remember this shape?  Now we're going to let you build it
        without giving you any blocks to start!
      Course 4 Artist 9: 'Loop this design 10 times and make sure to turn between
        each shape that''s drawn. '
      Course 4 Artist Binary 1: "Here's a function that takes a binary string of 1's
        and 0's and instructs the artist to follow them from left to right, top to
        bottom.  The artist will fill-in the squares when it sees a 1 and ignore the
        square when it sees a 0. \n\nRun this code to see how the artist uses binary
        to draw this pattern."
      Course 4 Artist Binary 2: Which of these binary strings could you loop 8 times
        to draw this image?
      Course 4 Artist Binary 3: Czy potrafisz narysować ten wzorek powtarzając binarny
        łańcuch złożony z trzech cyfr (0 lub 1)?
      Course 4 Artist Binary 4: Każdy binarny łańcuch reprezentuje jeden wiersz tego
        obrazka. Czy potrafisz je zmienić tak, aby była rysowana uśmiechnięta buźka,
        a nie zmartwiona twarz?
      Course 4 Artist Binary 5: Który 6-cyfrowy binarny łańcuch, powtórzony 11 razy,
        narysuje ten obraz?
      Course 4 Artist Binary 6: Jaki jest najkrótszy łańcuch binarny, który możesz
        powtórzyć, by narysować ten obraz?
      Course 4 Artist Binary 7: Ukończ ten rysunek.
      Course 4 Artist Binary Free Play 2: 'Czas na zabawę: Tutaj jest dla Ciebie czyste
        płótno do rysowania na nim. Dobrej zabawy!'
      Course 4 Artist Binary Free Play 2a: "Oto obszar do rysowania o większej rozdzielczości
        - 16 na 16 pikseli!\\\r\\\r Co się stanie, kiedy zaczniemy tworzyć z użyciem
        bitów?"
      Course 4 Artist Binary Free Play 2b: Kliknij tutaj, by zobaczyć podpowiedzi.
      Course 4 Artist Binary pre1: "Kod binarny to sposób reprezentowania informacji
        przy użyciu tylko dwóch stanów. Tutaj będziemy używać stanu \"off\" (wyłączony),
        reprezentowanego przez 0, i \"on\" (włączony), reprezentowanego przez 1).
        \\\r \\\r Udostępniliśmy Ci siatkę \"pikseli\", po której możesz chodzić i
        tworzyć wzory przez włączanie pewnych kwadratów. Czy mógłbyś spowodować, by
        artysta narysował \"01010101\" binarnie w pierwszym rzędzie?"
      Course 4 Artist For Loops 1: Use a repeat block to draw this triangle that is
        50 pixels wide.
      Course 4 Artist For Loops 11: 'Remember back in a previous stage when we used
        a variable to control the number of sides in a shape? We are going to do the
        same thing with the `counter` variable now. This pattern starts with a triangle
        and adds one side at a time until it draws a decagon (10 sides). Each side
        should be 100 pixels long. '
      Course 4 Artist For Loops 11a: |-
        Let's put it all together!  Using your knowledge of `for` loops and the `counter` variable, create this drawing where each shape has two more sides than the last.  Make sure that each side is 10 times as long as the number of sides in the polygon.

        Very little of the code has been provided for you.
      Course 4 Artist For Loops 14: If you turn a little bit more or less than you
        normally would for a shape, it creates a neat effect. Try using some of the
        code from the last level, but turning 89 degrees to create this twisted square
        spiral.
      Course 4 Artist For Loops 15: 'Free Play: Try making some drawings of your own
        using "for loops". We''ve added a few useful variables for you as well.'
      Course 4 Artist For Loops 2: 'I''ve put the code for drawing a triangle inside
        a for loop that counts from 50 to 100 by 10.  NOTE: Make sure you look at
        the code before you hit "Run".'
      Course 4 Artist For Loops 3: 'Use the last puzzle as a reference to complete
        this one.  The smallest triangle has 20 pixel sides, the largest has 200 pixel
        sides, and each triangle is 20 pixels larger than the last. '
      Course 4 Artist For Loops 4: 'How would you modify what you''ve learned to draw
        these squares? They start at 15 pixels long, the largest is 300 pixels long,
        and each square is 15 pixels larger than the last. '
      Course 4 Artist For Loops 6a: Zrób trzy niewielkie zmiany w kodzie z poprzedniego
        poziomu, aby to otrzymać!
      Course 4 Artist For Loops 8: |-
        Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?

        Hint:  You need to remove something!
      Course 4 Artist For Loops Challenge: "**Challenge:** Can you figure out how
        to use all of the things you've learned to create this image of polygons,
        all with 40 pixel sides?"
      Course 4 Artist For Loops inspire: |-
        Free-Play Inspiration: You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own.

        Need a hint? Click here.
      Course 4 Artist Functions Inspiration: Click here to see the hints again.
      Course 4 Artist Functions challenge: Click here to see the hints again.
      Course 4 Artist Inspire: |-
        Want a second peek at the inspiration design or the hints?  Click here!

        Otherwise, make a design all your own!
      Course 4 Artist Vars 1: "Let's draw an equilateral triangle. \n\nIt has to be
        exactly 100 pixels long on each side."
      Course 4 Artist Vars 11: Here’s more complicated code using the same concepts
        from the last puzzle - what should you set the "sides" variable to in order
        to draw this picture made of squares?
      Course 4 Artist Vars 12: Let's set the "sides" variable to 5. The more sides
        we add to this algorithm, the bigger this whole pattern gets! Notice that
        there is another variable called "length". We can now use that wherever we
        have a "move forward." Set the "length" variable to 75 for this shape.
      Course 4 Artist Vars 13: "When a shape has lots of sides, each side needs to
        be shorter if you want the whole pattern to fit on the screen. \nLet's recreate
        the algorithm for this amazing pattern, but instead of manually setting the
        `length` variable, let's use a math block with the `sides` variable inside
        to make sure that each shape fits correctly. The perimeter of each polygon
        is 300 pixels.\nNeed some hints?  Click here."
      Course 4 Artist Vars 14: |-
        Free Play: Check it out! Now your algorithm is nested within one more loop. Experiment with changing the values of your two variables to draw cool patterns.

        For even more effect, try playing with color!  Use random colors inside loops to see how it changes your design.
      Course 4 Artist Vars 2: Instead of using "move forward by 150," the "move" block
        is now referencing a variable called "length." Can you set "length" to 150
        to draw this new triangle?
      Course 4 Artist Vars 4: Now I want to make a rectangle that is twice as tall
        as it is wide. We've got a variable called "width" that needs to be set to
        100. Can you use the math blocks to complete the code?
      Course 4 Artist Vars 6: |-
        Here’s some code that can draw any regular polygon. There’s a new variable called sides that is set to 4. Can you use the sides variable (along with the math block) to turn the right amount regardless of how many sides there are in the polygon?

        Click here to go back to the hint!
      Course 4 Artist Vars 7: |-
        Use what you learned in the last puzzle to create this hexagon using the "sides" variable.

        See how you could change just one value to draw a triangle,  square, pentagon, or octagon?
      Course 4 Artist Vars 8: 'Free Play: Experiment with the number of sides this
        shape has. Can you change the algorithm so that the overall size of the shape
        stays the same, no matter how many sides it has? Hint: If you divide your
        starting length by the number of sides, the length of each side will get shorter
        as the number of sides gets higher.'
      Course 4 Bee 1: "The bee can't tell what's under the cloud! \n\nUse the `if`
        block to check whether there is a flower under the cloud. \n\nGet nectar one
        time, ONLY if there is a flower."
      Course 4 Bee 2: Use the "if/else" block to check each object to see if it's
        a flower or a honeycomb . If it's a flower, collect one nectar...otherwise,
        make one honey!
      Course 4 Bee 3: The unknown object is either a flower or a honeycomb. This time,
        use the if/else block to collect one nectar if it is a flower, else make one
        honey (because then it would be a honeycomb).
      Course 4 Bee Loops 5 NEW: Here are three flowers. Can you find the pattern of
        instructions that you need to repeat 3 times to collect the nectar with the
        fewest number of blocks?
      Course 4 Bee Loops 5a NEW: Now, use loops to help the bee collect all the nectar
        on its way to the honeycomb with as few blocks as possible.  When you get
        there, don't forget to make honey!
      Course 4 Bee Params 1: Write a sequence to collect all of the nectar using `get
        3 nectar` which turns, moves to collect the nectar, and then returns to the
        original location.
      Course 4 Bee Params 2: Modify the "get 3 nectar" function so it makes me turn
        right instead of left to the flowers.
      Course 4 Bee Params 3: 'Now there are flowers on both sides! We''ve added variables
        called "left" and "right" for you to use, and added a parameter called "direction"
        to "get 3 nectar". Edit "get 3 nectar" so that the bee turns the correct direction
        when the variables "left" or "right" are passed into the function.  '
      Course 4 Bee Params 4: Try using your new function to collect nectar from all
        of the flowers. Remember to use the left and right variables.
      Course 4 Bee Params 5: Zacznijmy od szkicu - czy potrafisz utworzyć nową funkcję
        o nazwie "zbierz 5 nektarów" z parametrem "kierunek"?
      Course 4 Bee Params 6: Wouldn't it be nice if we could collect all of these
        nectars with a single function? Try adding a new parameter to your function
        called "nectar units" to control the amount of nectar to collect. You'll probably
        want to rename the function too!
      Course 4 Bee Params 7: Try using your new function to collect all of this nectar.
      Course 4 Bee Params 8: 'Challenge: Now there''s honey to deal with too! Rewrite
        your function to use both the number of honey units and the number of nectar
        units.  How would you use those numbers to decide what you should do?'
      Course 4 EC 1a: Żadnych reguł. Żadnych wskazówek. Po prostu wyzwanie!
      Course 4 EC 1b: Żadnych reguł. Żadnych wskazówek. Po prostu wyzwanie!
      Course 4 EC 2a: Żadnych reguł. Żadnych wskazówek. Po prostu wyzwanie!
      Course 4 EC 2b: Żadnych reguł. Żadnych wskazówek. Po prostu wyzwanie!
      Course 4 EC 2c: Żadnych reguł. Żadnych wskazówek. Po prostu wyzwanie!
      Course 4 Maze 2: Unikaj TNT!
      Course 4 Maze 3: 'Zaprogramuj łego ptaka, aby dostał się do świnki. '
      Course 4 Maze 4: Try the "repeat" block to use fewer blocks when solving this
        puzzle...
      Course 4 Maze 5: Czy potrafisz rozwiązać tę łamigłówkę używając możliwie najmniejszej
        liczby bloków?
      Course 4 Play Lab Params 1: Here's a function called `jump` that causes your
        main character to jump up 100 pixels. Run the program and use the jump function
        to collect all of the flags by moving the dog with the arrow keys.
      Course 4 Play Lab Params 10: "We've added one last function for you. \n\nUse
        an \"if\" statement to program your game to call the \"level\\_up\" function
        only when \"player\\_score\" becomes greater than a certain number.\n\nFor
        example: \"player\\_score\" > 6\n\nPlay the game, and make it to level 3 to
        move to the next puzzle. "
      Course 4 Play Lab Params 2: "Now we've got flags that are too high for our current
        jump! Let's use both the \"up\" and \"down\" arrows so that we can have multiple
        jump heights.  \n\nWe need to add a parameter to our jump function called
        \"height\".  The up arrow should cause the dog to jump 200 pixels and the
        down arrow should make it jump only 100 pixels. "
      Course 4 Play Lab Params 3: 'We have added another parameter to the jump function
        so that we can use it with other actors. Each actor is represented by a number,
        starting from one. Edit the "jump" function so that it uses the "actor" parameter
        to make the correct character jump. '
      Course 4 Play Lab Params 4: "Here's a function called `patrol`. \n\nEdit `patrol`
        to move Cat up 400 pixels and then down 400 pixels."
      Course 4 Play Lab Params 5: Edit the the "patrol" function to add an "actor"
        parameter, so that we can call it for each of the actors on the screen. Remember,
        the actors correspond to numbers 1, 2, and 3.
      Course 4 Play Lab Params 6: Add another parameter called "speed" to the "patrol"
        function. Try using a "set speed" block with the new "speed" parameter to
        help Penguin get both flags before the other sprites even get one.
      Course 4 Play Lab Params 7: |-
        Let's have some fun! Look at the code provided to see if you can figure out what each block does.\
        When you're done, use the arrow keys to control Dog and collect all of the flags.
        NOTE: You don't need to make any changes to the program
      Course 4 Play Lab Params 8: Use the `when actor touches` block to send Dog back
        to the top-left ONLY if Dog touches any of the other actors.
      Course 4 Play Lab Params 9: "Here's our game from an earlier stage, but most
        of the code is hidden. There’s a new function `score_points.`\n\nEdit the
        function so that a new parameter called `points` can be added to `player_score`.
        \n\nThe variable `player_score` should increase each time Dog tags Cat with
        pie, and decrease each time that Cat tags Dog with a sandwich.\n\nNote: When
        you're done, click \"Run\" to play.  When Dog scores 6 points, you will move
        on to the next puzzle. "
      Course 4 Play Lab Vars 1: This time you don't have to write any code, just hit
        "Run" to play the game! In this game, you're the dog who is trying to collect
        more flags than the cat. Use the down arrow to control the dog. Press "Finish"
        when you're done playing.
      Course 4 Play Lab Vars 2: The race in that last puzzle wasn't very fair! Change
        the `dog_speed` variable to make sure you can collect more flags than Cat.
        The first to collect 10 flags wins!
      Course 4 Play Lab Vars 3: Use the left and right arrows to move, and the up
        arrow to jump. See if you can collect all of the flags.
      Course 4 Play Lab Vars 4: Now we're using a variable called "height" to control
        how high the dog can jump. Update the "height" variable so that the dog can
        jump high enough to reach all the flags.
      Course 4 Play Lab Vars 5: 'Let''s build a game! First we''ll need a score. Rebuild
        the code that you saw in the last level to set the score to 10. '
      Course 4 Play Lab Vars 6: |-
        Use the right arrow to throw pie.

        In our game, how should we score points? Add 1 to your "points" variable each time Dog hits Cat with a piece of pie. Use the "when actor 2 touches anything" event to trigger an update to your score. You can increment your variable by setting "points = points + 1." Get your score up to 10 (going one at a time!) to pass the level.
      Course 4 Play Lab Vars 7: Nice, now let's make sure this game isn't too easy
        to play. Any time Dog (actor 1) gets hit by a sandwich from Cat (actor 2),
        you should lose a point. Start with 10 points so it's not too hard. Let your
        score drop down from 10 to 0 to pass the level.
      Course 4 Play Lab Vars 9: "Free Play time! Here are all of the variables we've
        played with so far in this stage, as well as a few more in case you want them.
        \n\nNotice that there are now so many blocks in our toolbox that they need
        to be organized!  Here, we've put each piece into an appropriate category.
        \ Take some time to explore everything that is available. When you're done
        browsing, make a game or story using repeats, variables, and events.  \n\nHint:
        scroll down to see all the commands in the workspace."
      Course 4 Play Labs For Loops 1: Let's make the dog speak every number from 1
        to 100. Use a `for` loop and the counter block to speak the counter variable
        each time the loop is run.
      Course 4 Play Labs For Loops 2: This time, help Olive the Cat count only the
        odd numbers from 1 to 101.
      Course 4 Play Labs For Loops 3: If we count by larger numbers, we count even
        higher in the same amount of time. Try making Pirate Pegleg count from 10
        up to 1000, adding 10 at a time.
      Course 4 Playlab For Loop Freeplay: 'Freeplay: Use everything you''ve learned
        so far to make a game that includes a `for` loop!'
      Course 4 Playlab For Loops 4b: Can you change the **increment** in one of the
        loops so that the race is a tie?
      Course 4 Playlab For Loops 5b: Adjust the interval on these `for` loops so that
        the two characters end in the exact same place.
      Course 4 Playlab For Loops 6b: "Edit this `for` loop to create a game that's
        fun for you to play! \nPress \"Run\" and click Madame Unicorn as many times
        as you can.  Can you beat our score of 24? "
      Course 4 SCF 1: Use the suggested functions to draw four rows of hexagons. Notice
        how our even numbered rows are shifted to the right?
      Course 4 SCF 1a: Can you figure out how to collect all of this nectar with the
        fewest blocks possible?
      Course 4 SCF 1b: Can you figure out how to collect all of this honey with the
        fewest blocks possible?
      Course 4 SCF 2: 'Use what you learned in the previous level to draw an image
        like this. Note: The code becomes more simple if you incorporate parameters. '
      Course 4 SCF 3: 'Use what you learned in the previous level to draw an image
        like this. Note: The code becomes more simple if you incorporate parameters. '
      Course 4 SCFL 1: Rozwiąż tę łamigłówkę używając jak najmniejszej liczby bloków.
      Course 4 SCFL 1a: Can you get Scrat to his acorn using as few blocks as possible?
      Course 4 SCFL 1b: Can you get Scrat to his acorn using as few blocks as possible?
      Course 4 SCFL 2: Rozwiąż tę łamigłówkę używając jak najmniejszej liczby bloków.
      Course 4 SCFL 3: Czy wiesz, jak odtworzyć ten rysunek?
      Course 4 SCFL 4: Czy wiesz, jak odtworzyć ten rysunek?
      Course 4 SCFL 6: Czy wiesz, jak odtworzyć ten rysunek używając pojedynczej pętli?
      Course 4 SCFL 7: The artist wants to catch some waves! Can you figure out how
        to re-create this drawing?
      Course 4 SCV 1: Kliknij tutaj, aby ponownie zobaczyć instrukcje.
      Course 4 SCV 2: Kliknij tutaj, aby ponownie zobaczyć instrukcje.
      Course 4 SCV 3: |-
        Now for a game of tag!  Tag Cat to get 2 points. Tag Penguin to get 3 points.  Get exactly 10 points to win!
        But be careful, when Cat and Penguin tag each other, they take points away.

        Add the blocks necessary to make this game work the way it's been explained.  How will you get Dog to move in all directions using the arrow keys?  How will you add points when Dog tags Cat or Penguin?  How will you subtract points when Cat and Penguin touch?
      Course 4 SCV 4: Rozwiąż tę łamigłówkę używając jak najmniejszej liczby bloków.
      Course 4 SCV 5: Rozwiąż tę łamigłówkę używając jak najmniejszej liczby bloków.
      Course 4 SCV 6: Kliknij tutaj, aby ponownie zobaczyć instrukcje.
      CourseD_Dance_Party_01: Przeciągnij blok 'utwórz nowego' do obszaru roboczego
        i podłącz go w bloku 'układ'.
      CourseD_Dance_Party_02: Spraw, aby łoś rozpoczął nowy ruch po 4 taktach!
      CourseD_Dance_Party_03: Teraz spraw, aby tancerz rozpoczął nowy ruch po 6 taktach!
      CourseD_Dance_Party_04: Dodaj efekt tła do swojego programu.
      CourseD_Dance_Party_05: Użyj innego nowego bloku, aby tancerz zmieniał ruchy
        co 2 takty.
      CourseD_Dance_Party_06: Utwórz kopię tancerza o nazwie 'kopia\_tancerza1', aby
        zatańczył z kotem.
      CourseD_Dance_Party_08: Czy możesz utworzyć obie kopie tancerzy tej samej wielkości?
      CourseD_Dance_Party_09: Użyj bloku 'ustaw odcień', aby zmienić kolor tancerza.
      CourseD_Dance_Party_10: Spraw, aby drugi tancerz również reagowała na muzykę
        za pomocą bloku 'zaczyna się to'.
      CourseD_Dance_Party_11: Blok 'po naciśnięciu strzałki w górę' służy do uruchomienia
        kodu po naciśnięciu klawisza strzałki w górę. Postaraj się, aby tancerz wykonał
        szybki ruch, gdy naciskasz ten klawisz.
      CourseD_Dance_Party_11_5: Użyj bloków "wszystkie kaczki", aby kaczki tańczyły
        razem.
      CourseD_Dance_Party_11b: Spraw, aby Robot raz "tupnął" (Drop), gdy naciśniesz
        klawisz strzałki w prawo, i raz "klasnął" (Clap), gdy naciśniesz klawisz strzałki
        w górę. Wykonuj tupnij-klaśnij tak szybko, jak potrafisz!
      CourseD_Dance_Party_12: Dobrej zabawy! Utwórz własny taniec i udostępnij go
        przyjaciołom.
      CourseE_HOC 2018 Level_1: Weź łódkę z kufra.
      CourseE_HOC 2018 Level_10: Dostań się do wejścia do tego Oceanicznego Monumentu.
      CourseE_HOC 2018 Level_11: 'Zbuduj kanał z pryzmarynu wewnątrz Oceanicznego
        Monumentu.  '
      CourseE_HOC 2018 Level_2: Skieruj się do końca doku.
      CourseE_HOC 2018 Level_3: Kieruj się przez otwarte morza do dorsza.
      CourseE_HOC 2018 Level_4: Użyj pętli, aby dotrzeć się do delfina.
      CourseE_HOC 2018 Level_5: Zbadaj wrak statku, aby odnaleźć kufer.
      CourseE_HOC 2018 Level_6: Nawiguj przez lody, aby dotrzeć do łososia.
      CourseE_HOC 2018 Level_7a: Przeszukaj te podwodne ruiny, aby znaleźć kufer.
      CourseE_HOC 2018 Level_9b: Użyj korala, jako punktu orientacyjnego na drodze
        do skarbu.
      Crack Random Substitution: Instrukcje
      Crack a Caesar Cipher: Instrukcje
      Dance Party 1-validated: 'What do you think will happen when you click on the
        alien?  '
      Dance Party 2: Change the behavior inside the `___ begins ___` block to make
        the alien start spinning around.
      Dance Party 2_2019: Replace the behavior block in the `sprite begins` block
        to a different one that will make the alien start spinning!
      Dance Party 3: 'Create a new sprite called `alien2`, then make it do a different
        dance move when it''s clicked.  '
      Dance Party 3_2019: 'Create a new sprite that looks like a pink alien, then
        make it do a any move when it''s clicked.  '
      Dance Party 4: 'Create a third sprite called `alien3` and get all of your aliens
        to stand in a line. '
      Dance Party 4_2019: Create a third sprite that looks like a yellow alien, make
        it do a dance when clicked, and set all of your aliens to stand in a horizontal
        line.
      Dance Party 5: Add code to change the color of each alien when it gets clicked.
      Dance Party 5_2019: Create a single keypress event using the keypress event
        block. For this event, make it so that when a key is pressed, each of your
        aliens changes color!
      Dance Party 6: Use the `stops everything` block to make each alien stop moving
        when it is clicked.
      Dance Party 6_2019: Add a sprite that looks like a bell, then add an event that
        makes each alien stop dancing when it is clicked.
      Dance Party 7: Add a new bell sprite called `myBell` that makes all the aliens
        start doing the same dance move when it's clicked.
      Dance Party 7_2019: Make the blue alien begin a new dance when the pink alien
        touches it. Use the `when touches` event.
      Dance Party Freeplay: Now create your own alien disco!
      Dance Party Freeplay_2019: Now create your own alien disco!
      Dance Party Predict: 'What do you think will happen when you click on the alien?  '
      Dance Party Predict_2019: 'What do you think will happen when you click on the
        alien?  '
      Dance_2019_01: 'Przeciągnij blok <xml><block type="Dancelab_makeAnonymousDanceSprite"
        block-text="make a new dancer"><title name="COSTUME" config="&quot;CAT&quot;,
        &quot;PINEAPPLE&quot;">"CAT"</title><title name="LOCATION">{x: 200, y: 200}</title></block></xml>
        do obszaru roboczego i podłącz go w bloku <xml><block type="Dancelab_whenSetup2"
        next_connection_disabled="true" block-text="setup"></block></xml>.'
      Dance_2019_02: Spowoduj, że kot zatańczy po naciśnięciu klawisza.
      Dance_2019_03: Pora na tańce! Zaprogramuj każdego tancerza, aby poruszał się
        po naciśnięciu różnych klawiszy. Wybierz ulubiony ruch dla każdego tancerza
        lub ustaw tę opcję na „(Losowo)”, aby stworzyć coś zupełnie nieprzewidywalnego!
      Dance_2019_04: Upewnij się, że Twój tancerz rozpocznie nowy ruch po czwartym
        takcie.
      Dance_2019_05: Teraz spraw, aby tancerz rozpoczął nowy ruch po 6 taktach!
      Dance_2019_06: Ustaw grupę tancerzy pomocniczych wokół głównego tancerza pośrodku.
      Dance_2019_07: Zmień rozmiar grupy tancerzy pomocniczych.
      Dance_2019_08: Spróbuj zmienić odcień jednego ze swoich tancerzy (lub całej
        grupy)!
      Dance_2019_09: Bądź kreatywny dzięki tym nowym blokom!
      Dance_2019_10: Dobrej zabawy! Utwórz własny taniec i udostępnij go przyjaciołom.
      Dance_Party_01: Przeciągnij blok 'utwórz nowego' do obszaru roboczego i podłącz
        go w bloku 'układ'.
      Dance_Party_02: Spraw, aby łoś rozpoczął nowy ruch po 4 taktach!
      Dance_Party_03: Teraz spraw, aby tancerz rozpoczął nowy ruch po 6 taktach!
      Dance_Party_04: Dodaj efekt tła do swojego programu.
      Dance_Party_05: Użyj innego nowego bloku, aby tancerz zmieniał ruchy co 2 takty.
      Dance_Party_06: Utwórz kopię tancerza o nazwie 'kopia\_tancerza1', aby zatańczył
        z kotem.
      Dance_Party_08: Czy możesz utworzyć obie kopie tancerzy tej samej wielkości?
      Dance_Party_09: Użyj bloku 'ustaw odcień', aby zmienić kolor tancerza.
      Dance_Party_10: Spraw, aby drugi tancerz również reagowała na muzykę za pomocą
        bloku 'zaczyna się to'.
      Dance_Party_11: Blok 'po naciśnięciu strzałki w górę' służy do uruchomienia
        kodu po naciśnięciu klawisza strzałki w górę. Postaraj się, aby tancerz wykonał
        szybki ruch, gdy naciskasz ten klawisz.
      Dance_Party_11_5: Użyj bloków "wszystkie kaczki", aby kaczki tańczyły razem.
      Dance_Party_11b: Spraw, aby Robot raz "tupnął" (Drop), gdy naciśniesz klawisz
        strzałki w prawo, i raz "klasnął" (Clap), gdy naciśniesz klawisz strzałki
        w górę. Wykonuj tupnij-klaśnij tak szybko, jak potrafisz!
      Dance_Party_12: Dobrej zabawy! Utwórz własny taniec i udostępnij go przyjaciołom.
      Dance_Party_extras_alternate_2019: Tam i z powrotem! (Kliknij Więcej po szczegóły)
      Dance_Party_extras_battle: Zespoły taneczne (Kliknij Więcej po szczegóły)
      Dance_Party_extras_battle_2019: Zespoły taneczne (Kliknij Więcej po szczegóły)
      Dance_Party_extras_every_beat: Ćwierćnuty (Kliknij Więcej po szczegóły)
      Dance_Party_extras_every_beat_2019: Ćwierćnuty (Kliknij Więcej po szczegóły)
      Dance_Party_extras_layout: Twórzmy formację (Kliknij Więcej po szczegóły)
      Dance_Party_extras_layout_2019: Twórzmy formację (Kliknij Więcej po szczegóły)
      Dance_Party_extras_mixed_2019: Więcej przycisków (Kliknij Więcej po szczegóły)
      Dance_Party_extras_on_beat: Bas, średni i wysoki ton (Kliknij Więcej po szczegóły)
      Dance_Party_extras_on_beat_2019: Bas, średni i wysoki ton (Kliknij Więcej po
        szczegóły)
      Dance_Party_extras_speed: Przyspiesz, spowolnij (Kliknij Więcej po szczegóły)
      Dance_Party_extras_speed_2019: Przyspiesz, spowolnij (Kliknij Więcej po szczegóły)
      Dance_Party_extras_visible: Gdzie oni poszli? (Kliknij Więcej po szczegóły)
      Dance_Party_extras_visible_2019: Gdzie oni poszli? (Kliknij Więcej po szczegóły)
      Find the Wizard: Buduj, co chcesz. To jest przykład gry w zgadywanie numeru!
      Fish Tank 2-validated: Change Dusty (the tumbleweed) to a fish.
      Fish Tank 2-validated_2019: Change the tumbleweed into any kind of fish!
      Fish Tank 3-validated: Change the fish's behavior so that it swims around the
        tank.
      Fish Tank 3-validated_2019: Change the fish's behavior so that it swims left
        and right.
      Fish Tank 4-validated: Use the `set background color` block to make the background
        blue.
      Fish Tank 4-validated_2019: Use the `set background color` block to make the
        background any color.
      Fish Tank 5-validated: Our fish is getting a little lonely. Add another sprite
        to the fish tank.
      Fish Tank 5-validated_2019: The fish is adventurous and wants to meet new creatures
        in the sea. Add another sprite to the fish tank. This sprite can have any
        costume other than the one you use for your fish!
      Fish Tank 6-validated: Add a behavior to the fish's new friend.
      Fish Tank 6-validated_2019: Add a behavior to the fish's new friend.
      Fish Tank 7-validated: Use some new blocks from the toolbox to make your fish
        tank special!
      Fish Tank 7-validated_2019: Use some new blocks from the toolbox to make your
        fish tank special!
      FoodFight: Jest to przykład gry, jaką można Utworzyć w PlayLab.
      Frequency Analysis: Test
      Function intro Ryan: Aby przerzucić pomost i dostać się do pochodni, dwukrotnie
        użyj funkcji "build bridge".
      Function intro Ryan_2019: Aby przerzucić pomost i dostać się do pochodni, dwukrotnie
        użyj funkcji "build bridge".
      Geometric Sun: 'Project Idea: Create a pattern using geometric ideas like shapes.
        This requires persistence and planning!'
      Geometric Sun_2018: 'Project Idea: Create a pattern using geometric ideas like
        shapes. This requires persistence and planning!'
      Guess The Number: Buduj, co chcesz. To jest przykład gry w zgadywanie numeru!
      HOC 2018 Level_1: Weź łódkę z kufra.
      HOC 2018 Level_10: Dostań się do wejścia do tego Oceanicznego Monumentu.
      HOC 2018 Level_11: 'Zbuduj kanał z pryzmarynu wewnątrz Oceanicznego Monumentu.  '
      HOC 2018 Level_12: Zaprojektuj swój własny podwodny świat, to Ty decydujesz!
      HOC 2018 Level_2: Skieruj się do końca doku.
      HOC 2018 Level_3: Kieruj się przez otwarte morza do dorsza.
      HOC 2018 Level_4: Użyj pętli, aby dotrzeć się do delfina.
      HOC 2018 Level_5: Zbadaj wrak statku, aby odnaleźć kufer.
      HOC 2018 Level_6: Nawiguj przez lody, aby dotrzeć do łososia.
      HOC 2018 Level_7a: Przeszukaj te podwodne ruiny, aby znaleźć kufer.
      HOC 2018 Level_9b: Użyj korala, jako punktu orientacyjnego na drodze do skarbu.
      Infinity_catch: Czy za pomocą klawiszy ze strzałkami możesz spowodować, że Elsa
        ("postać 2") dogoni Annę?
      Infinity_finale: Utwórz cokolwiek, co Ci się podoba, i podziel się tym!
      Infinity_move_collide: Hiro to "postać 1".  Przenieś go blisko Baymax i zagraj
        jakiś dźwięk, kiedy się dotkną.
      Infinity_move_directions: Baymax to "postać 2".  Dodaj bloki "przenieś postać",
        a następnie przenieś Baymax za pomocą klawiszy ze strzałkami.  Spowoduj, że
        dotknie dwie inne postacie.
      Infinity_move_right: Hiro to "postać 1". Użyj bloku "przenieś postać", aby Hiro
        dotknął Baymax.
      Infinity_repeat: Użyj bloku "powtarzaj w nieskończoność", aby Anna przenosiła
        się w górę i w dół 400 pikseli.
      Infinity_say: Spowoduj przy użyciu bloku "powiedz", by Anna powiedziała "Hi
        there.".
      Infinity_shoot: Baymax to "postać 2".  Spowoduj, by Baymax rzucił rakietą w
        Hiro.
      Infinity_shoot_directions: Hiro to "postać 3".  Spowoduj, by Hiro rzucił rakietą
        w każdą z czterech postaci. Odczekaj sekundę między dwoma rzutami.
      Infinity_touch_score: Dodaj punkt do wyniku Anny, kiedy dotyka płatka śniegu.  Następnie
        kliknij "Uruchom" i pokieruj nią, aby dotknęła każdy płatek śniegu raz.
      InspirationalArtwork: Jeśli ten obrazek zainspiruje Cię, to spróbuj zrobić coś
        podobnego. W przeciwnym razie możesz utworzyć coś własnego.
      InspirationalArtwork_2018: Jeśli ten obrazek zainspiruje Cię, to spróbuj zrobić
        coś podobnego. W przeciwnym razie możesz utworzyć coś własnego.
      K-1 Artist Loops 1: Narysuj tę linię poruszając się na wschód (E - East) 4 razy.
      K-1 Artist Loops 2: Teraz, rysuj tę samą linię stosując pętlę.
      K-1 Artist Loops 3: Czy potrafisz powtórzyć te bloki, by narysować 6 linii?
      K-1 Artist Loops 4: Czy pętla może nam pomóc narysować szczyt tego zamku?
      K-1 Artist Loops 5: Co należy powtórzyć 4 razy, by narysować te schody?
      K-1 Artist Loops 6: 'This one needs two loops: one to go up the stairs and one
        to go down.'
      K-1 Artist Loops 7: Pętle mogą Ci pomóc ukończyć ten wzór.
      K-1 Artist Loops 8: Te schody mają dłuższe stopnie.
      K-1 Artist Loops 9: Jaki jest najprostszy sposób narysowania tych schodów?
      K-1 Artist Loops Free Play: 'Czas na zabawę: narysuj coś ciekawego!'
      K-1 Artist1 1: Narysuj stopę człowieka za pomocą jednej linii
      K-1 Artist1 10: Draw and Jump to make the dashed path to the treasure X
      K-1 Artist1 2: Dorysuj kotu wąsy złożone z dwóch linii!
      K-1 Artist1 3: Draw two lines east and two lines north to finish the house!
      K-1 Artist1 4: Dorysuj linie w prawo, do góry i na dół, by narysować zamek!
      K-1 Artist1 5: Narysuj łodygę tego kwiatka używając dwóch linii!
      K-1 Artist1 6: Ukończ ten obrazek przy użyciu bloku "skocz"!
      K-1 Artist1 9: Rysuj i skacz, by utworzyć przerywaną linię
      K-1 Artist2 1: Narysuj kwadrat poniżej trójkąta.
      K-1 Artist2 2: Skocz i narysuj kwadrat obok domu.
      K-1 Artist2 3: Narysuj kwadrat nad innym kwadratem
      K-1 Artist2 4: Narysuj prostokąt, aby ukończyć most.
      K-1 Artist2 5: Narysuj prostokąt, aby ukończyć podpory mostu
      K-1 Artist2 6: Narysuj dwa kwadraty, aby utworzyć prostokąt!
      K-1 Artist2 Assessment1: 'Sprawdzian: Narysuj kwadrat obok innego kwadratu.'
      K-1 Artist2 Free Draw: Narysuj cokolwiek!
      K-1 Artist2_7: Narysuj prostokąt, aby utworzyć górną szufladę w kredensie (garderobie)!
      K-1 Bee 1: Przenieś mnie do kwiatka, zbierz nektar, a następnie przenieś mnie
        do plastra miodu i zrób miód
      K-1 Bee 11: Zbierz trzy nektary i następnie zrób jeden miód
      K-1 Bee 13: Zbierz trzy nektary i następnie zrób jeden miód!
      K-1 Bee 14: Get me to the nectar, pick it up, get me to the honey, and make
        honey!
      K-1 Bee 15: Zbierz dwa nektary, by zrobić dwa miody!
      K-1 Bee 2: Przenieś mnie do kwiatka, zbierz nektar, a następnie przenieś mnie
        do plastra miodu i zrób miód
      K-1 Bee 3: Przenieś mnie do kwiatka, zbierz nektar, a następnie przenieś mnie
        do plastra miodu i zrób miód
      K-1 Bee 4: Zbierz dwa nektary i następnie zrób dwa miody!
      K-1 Bee 5: Zbierz trzy nektary i następnie zrób trzy miody!
      K-1 Bee 6: Zbierz dwa nektary i następnie zrób dwa miody!
      K-1 Bee 7: Zbierz trzy nektary i następnie zrób dwa miody!
      K-1 Bee 9: Zbierz dwa nektary i następnie zrób dwa miody!
      K-1 Bee Loops 1: Zbierz nektar, aby zrobić miód!
      K-1 Bee Loops 10: Zbierz cały nektar i zrób cały miód.
      K-1 Bee Loops 11: Zbierz cały nektar i miód!
      K-1 Bee Loops 12: Zbierz cały nektar i cały miód.
      K-1 Bee Loops 2: Use a `repeat` loop to move and then get the nectar and make
        honey!
      K-1 Bee Loops 3: Use three `repeat` loops to get the nectar and make honey!
      K-1 Bee Loops 4: Use `repeat` loops to get the nectar, make honey, and to move!
      K-1 Bee Loops 5: Użyj pętli "powtórz", aby zebrać nektar i zrobić miód!
      K-1 Bee Loops 6: Use a `repeat` loop to get the nectar, get honey, and to move!
      K-1 Bee Loops 7: Zbierz nektar i zrób miód!
      K-1 Bee Loops 8: Zbierz nektar i zrób miód!
      K-1 Bee Loops 9: Zbierz cały nektar i zrób cały miód.
      K-1 Bee Puzzle 12: Zbierz trzy nektary i następnie zrób dwa miody
      K-1 Building a Foundation Assessment: Build a three level pyramid, there are
        no other directions, so just play with the pieces until you get it!
      K-1 Maze 10: 'Obejdź TNT, aby doprowadzić mnie do świnki! '
      K-1 Maze 11: 'Trace the path and lead me to the silly pig. Avoid TNT or the
        feathers will fly! Hint: He''s South of me.'
      K-1 Maze 2: Przenieś mnie na wschód (E - East), aby doprowadzić mnie do świnki!
      K-1 Maze 3: Przenieś mnie na południe (S - South), aby doprowadzić mnie do świnki!
      K-1 Maze 4: Przenieś mnie na północ (N - North), aby doprowadzić mnie do świnki!
      K-1 Maze 5: Przenieś mnie na wschód (E - East), aby doprowadzić mnie do świnki!
      K-1 Maze 6: Przenieś mnie w jedną stronę, a później w drugą, by doprowadzić
        mnie do świnki!
      K-1 Maze 7: Przenieś mnie w jedną stronę, a później w drugą, by doprowadzić
        mnie do świnki!
      K-1 Maze 8: Przenieś mnie w jedną stronę, a później w drugą, by doprowadzić
        mnie do świnki!
      K-1 Maze 9: Przenieś mnie w jedną stronę, a później w drugą, by doprowadzić
        mnie do świnki!
      K-1 Maze Loops 1: Doprowadź mnie do świnki!
      K-1 Maze Loops 10: Get me to the pig! Using the `repeat` loop will make it much
        easier.
      K-1 Maze Loops 11: |-
        Get me to the pig!\
        The `repeat` loop will make this easier.
      K-1 Maze Loops 12: Get me to the pig! The `repeat` loop will make this easier.
      K-1 Maze Loops 2: Użyj bloku "powtórz", aby doprowadzić mnie do świnki!
      K-1 Maze Loops 3: Doprowadź mnie do świnki! Użyj pętli "powtórz".
      K-1 Maze Loops 5: Doprowadź mnie do świnki! Użyj pętli "powtórz".
      K-1 Maze Loops 6: Doprowadź mnie do świnki! Użyj pętli "powtórz".
      K-1 Maze Loops 7: Doprowadź mnie do świnki! Użyj pętli "powtórz".
      K-1 Maze Loops 8: Użyj pętli "powtórz", aby doprowadzić mnie do świnki.
      K-1 Maze Loops Assessment 1: Look at all we've learned! Use a `repeat` loop
        to get me to the pig!
      K-1 Maze Loops Assessment 2: Use `repeat` loops to get me to the pig!
      K-1 Maze Sequence Assessment 1: |-
        Let's see what you've learned!
        Move one way, then another to get me to the pig.
      K-1 Maze Sequence Assessment 2: Move one way, then another to get me to the
        pig.
      K-1 artist 1 level 10: Draw the dashed line by using both the jump and draw
        blocks
      K-1 artist 1 level 9: Narysuj to używając trzech linii
      K-1 maze debug 1: Zmień kod, aby doprowadzić mnie do świnki!
      K-1 maze debug 10: Debug this level by rearranging and changing blocks to get
        me to the pig!
      K-1 maze debug 11: |-
        This is a test!
        Debug this level by rearranging and changing blocks to get me to the pig
      K-1 maze debug 2: Figure out what is missing and then add blocks to get me to
        the pig!
      K-1 maze debug 3: Something is not quite right. REMOVE blocks to get me to the
        pig!
      K-1 maze debug 4: Run through these blocks and fix them! I think I might be
        going in the wrong direction.
      K-1 maze debug 5: Debug this level by rearranging and changing blocks to get
        me to the pig!
      K-1 maze debug 6: Debug this level by rearranging and changing blocks to get
        me to the pig!
      K-1 maze debug 7: Debug this level by rearranging and changing blocks to get
        me to the pig!
      K-1 maze debug 8: Debug this level by rearranging and adding blocks to get me
        to the pig!
      K-1 maze debug 9: Debug this level by rearranging and changing blocks to get
        me to the pig!
      MC HOC 2016 Level 10: Nadszedł czas, abyś zrobił własną grę Minecraft! Wykreuj
        potwory a następnie spowoduj, by robiły to, co chcesz. Baw się dobrze!
      MC HOC 2016 Level 2-2: Kurczak jest zamrożony. Umieść bloki "idź" i "skręć"
        w bloku "kiedy ożywiony", by poruszył się.
      MC HOC 2016 Level 3: Świetnie, kurczak przesunął się! Ale nagle zatrzymał się.
        W grach, kurczaki chodzą bez przerwy. Użyj pętli "zawsze", aby utrzymać kurczaki
        w ruchu.
      MC HOC 2016 Level 4: Teraz kurczaki wyglądają dziwnie poruszając się tak samo.
        Gry korzystają z losowych ruchów, by urzeczywistnić sytuacje. Spowoduj, by
        kurczaki "skręcały losowo".
      MC HOC 2016 Level 5: Te krowy zagubiły się! Poprowadź je na trawę za pomocą
        bloku "idź krok w kierunku" umieszczonym w pętli "bez końca wykonuj".
      MC HOC 2016 Level 6: Teraz możesz zrobić zombie. Użyj bloku "wykreuj", by utworzyć
        3 zombie, gdy zapada zmrok. Spraw, by przemieszczały się w Twoim kierunku.
        Przetrwaj do rana.
      MC HOC 2016 Level 8: Ścieżka do Twojej owcy jest blokowana przez kamienny mur.
        Na szczęście, jest tutaj Pełzak. Pełzaki wybuchają, gdy je dotkniesz. Spowoduj,
        by wybuch Pełzaka zburzył mur, byś mógł dotrzeć do Twojej owcy!
      MC HOC 2016 New Drop: W Minecraft, owca upuszcza wełnę. Umieść blok "upuść"
        w bloku "kiedy użyte", następnie podejdź i upuść element za pomocą owcy.
      MC HOC 2016 New Spawn: Teraz możesz wypełnić świat tym, co chcesz! Umieść blok
        "wykreuj" pod blokiem "po uruchomieniu", aby wykreować rzeczy, gdy zaczyna
        się gra.
      MC HOC 2016 New Walk: Zbadaj nasz nasz świat! Poruszaj się strzałkami i naciskaj
        klawisz spacji lub puknij na planszy, aby użyć przedmiotów. Użyj drzwi, aby
        dostać się do domu.
      MC HOC 2016 SCORE LEVEL: Niektóre gry pozwalają Ci utrzymać wynik. Oznaczaj
        te Stalowe Potwory i użyj bloku "dodaj 1 do wyniku", by powiększyć swój wynik,
        gdy je oznaczasz. Osiągnij pięć punktów, aby wygrać!
      MC HOC 2016 Village Test: Oh nie! Zombie uwięził cię w środku! Zakoduj Stalowego
        Potwora, by dogonił i zaatakował zombie!
      MC_HOC_2017_01_RETRY: 'Pokieruj Agentem tak, by dotarł do płyty naciskowej,
        a następnie naciśnij przycisk "Uruchom". Użyj klawiszy strzałek, aby wyjść
        postacią gracza z domu i zabrać skrzynię. '
      MC_HOC_2017_01_RETRY_2019: 'Pokieruj Agentem tak, by dotarł do płyty naciskowej,
        a następnie naciśnij przycisk "Uruchom". Użyj klawiszy strzałek, aby wyjść
        postacią gracza z domu i zabrać skrzynię. '
      MC_HOC_2017_02_Cole: 'Pokieruj Agentem na płytę naciskową, aby {currentPlayerName}
        mógł dotrzeć do mapy. '
      MC_HOC_2017_02_Cole_2019: 'Pokieruj Agentem na płytę naciskową, aby {currentPlayerName}
        mógł dotrzeć do mapy. '
      MC_HOC_2017_03_Cole: 'Zakoduj Agenta tak, aby otworzył bramę. '
      MC_HOC_2017_03_Cole_2019: 'Zakoduj Agenta tak, aby otworzył bramę. '
      MC_HOC_2017_04POINT5_RYAN: Doprowadź Agenta do płytki naciskowej.
      MC_HOC_2017_04POINT5_RYAN_2019: Doprowadź Agenta do płytki naciskowej.
      MC_HOC_2017_04_Cole: Doprowadź Agenta do płytki naciskowej.
      MC_HOC_2017_04_Cole_2019: Doprowadź Agenta do płytki naciskowej.
      MC_HOC_2017_05_Cole: Doprowadź gracza do łopaty.
      MC_HOC_2017_05_Cole_2019: Doprowadź gracza do łopaty.
      MC_HOC_2017_06_Cole: Napraw ten kod, aby Agent mógł przerzucić przez rzekę most.
      MC_HOC_2017_06_Cole_2019: Napraw ten kod, aby Agent mógł przerzucić przez rzekę
        most.
      MC_HOC_2017_07_Cole: Zniszcz lód. Dzięki temu {currentPlayerName} dotrze Minecart.
      MC_HOC_2017_07_Cole_2019: Zniszcz lód. Dzięki temu {currentPlayerName} dotrze
        Minecart.
      MC_HOC_2017_10_RETRY: Użyj funkcji, aby ukończyć ten minecart.
      MC_HOC_2017_10_RETRY_2019: Użyj funkcji, aby ukończyć ten minecart.
      MC_HOC_2017_Ali: Użyj funkcji, aby przedostać się przez lawę.
      MC_HOC_2017_Ali_2019: Użyj funkcji, aby przedostać się przez lawę.
      MC_HOC_2017_FP20x20: 'Zabaw się:  Czas na samodzielną eksplorację!'
      MC_HOC_2017_FP20x20_2019: 'Zabaw się:  Czas na samodzielną eksplorację!'
      NEW Course 4 Artist Functions 1: Can you draw a square that is 100 pixels in
        length, using a repeat loop?
      NEW Course 4 Artist Functions 11: Now we want to create a new function called
        `draw a line of squares` that draws six squares all in a row.  Can you build
        this function using this `draw a square 20` function that we created for you?
      NEW Course 4 Artist Functions 12: Use the `draw a line of squares` function
        from the last puzzle to draw this pattern.
      NEW Course 4 Artist Functions 13: 'Can you draw a star shape using the `draw
        a line of squares` function?  '
      NEW Course 4 Artist Functions 14: 'Czas zabawy! '
      NEW Course 4 Artist Functions 2: Can you draw 3 squares 20 pixels apart from
        one another? Each square is 100 pixels in size.
      NEW Course 4 Artist Functions 3: "Here is a new type of Block. It is called
        a `function` block. Click \"edit\" then fill it with the code for drawing
        a square with 100 pixel sides. \n\nWhen you're done editing the function,
        click \"Close\" to go back to your program."
      NEW Course 4 Artist Functions 4: Use the `draw a square` function to draw this
        pattern.
      NEW Course 4 Artist Functions 7: 'Are you getting the hang of how to use function
        blocks? Let''s modify this square so that it is 200 pixels in size. Click
        on "edit" to enter the `draw a square` function editor. Remember to click
        on "Close" to get out of the function editor. '
      NEW Course 4 Artist Functions 8: We have created a new function for you called
        "draw a triangle".  Can you edit the function definition to draw a triangle
        with 100 pixel sides?
      NEW Course 4 Artist Functions 9: Can you solve this by adding only one block?
      NEW Course 4 Artist Params 1: Let's define this function to draw a square with
        50 pixel sides. Click "edit" to get started.
      NEW Course 4 Artist Params 10: 'Create a `draw a hexagon` function block with
        a length parameter. This hexagon has sides that are 100 pixels in length. '
      NEW Course 4 Artist Params 11: Can you figure out how to draw this shape? Edit
        the function to use the "sides" parameter.
      NEW Course 4 Artist Params 12: Can you complete this drawing? The sides of all
        the shapes are 100 pixels long.
      NEW Course 4 Artist Params 12a: This image is similar to the last. Can you use
        a `for` loop with your function to make this design?
      NEW Course 4 Artist Params 13: "Let's edit this \"draw a polygon\" function.
        It already has a \"sides\" parameter. Now, let's add a \"length\" parameter.
        \nThe perimeter of each shape is 200 pixels long. Do you remember the equation
        to make shapes the same size when they have a different number of sides?"
      NEW Course 4 Artist Params 14: Edit "draw a spiral edge" to use "length" and
        "sides" parameters, then recreate these shapes.
      NEW Course 4 Artist Params 15: 'Freeplay: Here are the functions you''ve written,
        and some more for you to play with. Draw something awesome! Play with the
        pen width to see how different your drawings look!'
      NEW Course 4 Artist Params 2: Create a `draw triangle` function from scratch
        that makes a triangle with  50 pixel sides.
      NEW Course 4 Artist Params 3: Now let's use the function to draw 5 triangles
        in a row. Each triangle is 30 pixels apart.
      NEW Course 4 Artist Params 4: Do you notice anything different about these function
        blocks? Click “Run” to see what happens.
      NEW Course 4 Artist Params 5: 'Replace the `???` in the `length` parameter input
        block. The pentagon has 100 pixel sides. '
      NEW Course 4 Artist Params 6: Fill in the "length" parameter to draw these shapes
        by replacing the "???" with the right numbers. The square and triangle have
        100 pixels sides while each side of the hexagon is 75 pixels long.
      NEW Course 4 Artist Params 7: Can you complete this drawing? The sides of each
        triangle are 25 pixels larger than the last.  The first triangle has 25 pixel
        sides.
      NEW Course 4 Artist Params 8: The code for this triangle function is broken.
        Can you edit the function to fix it, and then make triangles of length 25,
        50, and 75?
      NEW Course 4 Artist Params 9: Kliknij przycisk "edytuj", aby wypełnić definicję
        funkcji "draw a square" (rysuj kwadratu) i dodać parametr. Parametr powinien
        odpowiadać długości boków, jak w przypadku trójkąta. Tym razem narysuj 3 kwadraty
        o długościach boków 25, 50 i 75 pikseli oddalone od siebie o 100 pikseli.
      NEW Course 4 Artist Params inspire: "Free Play Inspiration: You've now learned
        everything you need to know to make a pattern like this! If this picture inspires
        you, try to make something similar. Otherwise, create something all your own.\n\nWant
        to know how our inspiration pattern was made? "
      NEW Course 4 Artist Vars 12: Now, recreate the algorithm from the last level
        and create a pentagon with sides of length 150.
      NEW Course 4 Artist Vars 2: 'Drag a number block to both the `set length` block
        and the `repeat _ times` block to draw a set of 50 pixel triangles. '
      NEW Course 4 Artist Vars 4: "Let's try it again! \n\nCan you set the `length`
        variable to 60 to make this cool design with hexagons?"
      NEW Course 4 Artist Vars 6: "Draw this pattern of pentagons with 100 pixel sides
        by setting the right value for `length` and dropping the `length` variable
        into all of the the correct places. \n\nSee how you only have to set the value
        for `length` once, and the code uses the right value everywhere?"
      NEW Course 4 Bee For Loops 1: Użyj pętli, by zebrać cały nektar z każdego kwiatka.
      NEW Course 4 Bee For Loops 10a: 'Ready for a challenge?  Take what you''ve learned
        about loops and try to solve this problem. Remember: You may have to run through
        solutions multiple times before you figure out all of the steps.'
      NEW Course 4 Bee For Loops 2: Add the code necessary to make sure the bee collects
        all the nectar. Look at how much code you need for this puzzle! (We'll learn
        a simpler way in the next puzzle.)
      NEW Course 4 Bee For Loops 3: 'Ah, the "for loop" makes this much easier! All
        the code you need is here, take a look at how it is put together then click
        "Run" to see how it works. '
      NEW Course 4 Bee For Loops 4: 'Replace the ??? in the "for loop" with the largest
        amount of nectar the bee has to collect. '
      NEW Course 4 Bee For Loops 4 4: Now we need to move forward "counter" times,
        then get nectar "counter" times.  Can you use two "repeat" loops to solve
        this challenge?
      NEW Course 4 Bee For Loops 5: You can also use a "for loop" to count down. Try
        gathering this nectar by counting down from 5 to 1 by 1.
      NEW Course 4 Bee For Loops 6: The last number in your for loop is called the
        "increment". Each time the loop is run, the counter variable changes by the
        value of the increment. Try collecting these flowers using an increment of
        2.
      NEW Course 4 Bee For Loops 7: |-
        Now, let's combine the "counter" variable with a math block! How can you use the "counter" variable to navigate this garden with the fewest number of blocks possible? What do you need to do to collect 3, 6, 9, 12, 15 nectar this time? The secret is in the "counter" variable!

        Remember: If your loop is counting up, the increment is added to your "counter" variable each time through.
      NEW Course 4 Bee For Loops 8: Masz teraz to! Jaki powinien być przyrost, aby
        zebrać 3, 6, 9, 12, 15 nektarów?
      NEW Course 4 Bee For Loops 9: If your loop is counting down, the increment is
        subtracted from your counter variable each loop. What should your increment
        be to collect 15, then 12, then 9, 6, 3 nectar?
      NEW Course 4 Play Lab Params 11: 'It''s free play time! Have fun with all the
        blocks in your tool box. '
      NetSim Standalone Automatic DNS: In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast: In this version of the Internet Simulator, you
        can connect to up to 5 other people in a room. When you send messages in the
        room, everyone receives them. What are some of the challenges of this system,
        and how might you solve them?
      NetSim Standalone Classroom Routers: In this version of the Internet Simulator,
        everyone connects to a router and has a specific address. To send messages,
        you have to address your message to the specific address of the recipient,
        and the router will take care of delivering it to the right computer. If there
        are other routers created in your class, ask for the address of one of your
        classmates and send them a message! View the Log Router to see the path the
        messages have taken through the network.
      NetSim Standalone Freeplay: In this configuration, most of the options are turned
        on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS: In this version of the simulator you can't see
        the other students' addresses.  Instead, one of you must act as a name service,
        to help share addresses with each other.
      NetSim Standalone Packets TCP: 'Messages on the Internet can take many paths
        to get to their destination, and sometimes along the way the message gets
        dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters. '
      NetSim Standalone SendAB: You and your partner share a single wire that can
        only be in state A or state B. You can set the wire to either state at any
        time, and you can read the state of the wire at any time. Can you figure out
        a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers: 'You and your partner can now reliably send
        messages back and forth without extra coordination! While you''re always sending
        bits back and forth, you can also represent those bits as decimal numbers.
        What kinds of information can you represent with this system? '
      NetSim Standalone Sending Numbers Ascii: 'Now that you''ve transmitted information
        represented as decimal numbers, you can map those numbers to text characters
        to send text-based information back and forth. With a text-based protocol,
        you can easily represent and communicate all kinds of information. '
      New Artist Project: Draw something awesome! Your code is saved as a project
        that you can return to at any time.
      New Basketball Project: Create your own Basketball game. You can change all
        the rules. When you're done, click Share to let friends try your game on their
        phones.
      New Bounce Project: Create your own Bounce game. You can change all the visuals
        and the rules. When you're done, click Share to let friends try your game
        on their phones.
      New Gumball Project: Utwórz cokolwiek, co Ci się podoba, i podziel się tym!
      New Ice Age Project: Utwórz cokolwiek, co Ci się podoba, i podziel się tym!
      New Infinity Project: Utwórz cokolwiek, co Ci się podoba, i podziel się tym!
      New Minecraft Hero Project: 'Zabaw się:  Czas na samodzielną eksplorację!'
      New Sports Project: Utwórz własną grę w odbijanie. Możesz zmienić wszystkie
        zasady i pomieszać różne zawody - bądź kreatywny. Kiedy skończysz, kliknij
        przycisk "Zakończ", aby Twoi znajomi mogli zagrać w Twoją grę na swoich telefonach.
      OPD-K5 whats your plan: Take a moment now to consider how and when you will
        complete this online course to ensure you get the most benefit from the experience.
        When you've got a good plan sketched out, continue on to dive more deeply
        into Computer Science Fundamentals.
      OPD-K5-events-2: Dołącz block "pofruń na normalną wysokość" do zdarzenia "po
        kliknięciu", a następnie naciśnij "Uruchom". Kliknij lub dotknij ekranu, aby
        przesunąć Flappy'ego do miejsca docelowego.
      OPD-K5-events-3: Spróbuj dodać blok, który ustawia poziom prędkości po naciśnięciu
        przycisku "Uruchom".  Zagraj w grę i doleć do obiektu docelowego, aby kontynuować.
      OPD-K5-events-4: Dołącz blok "zakończ grę" do zdarzenia "kiedy spadnie na ziemię".
        Zagraj w grę i uderz Flappym w ziemię aby kontynuować.
      OPD-K5-events-5: Dołącz blok do zdarzenia "kiedy uderzy w przeszkodę" tak, żeby
        gra się zakończyła, kiedy Flappy rozbije się na pierwszym zestawie rur.
      OPD-K5-events-6: Dołącz blok do zdarzenia "kiedy minie przeszkodę", a następnie
        naciśnij "Uruchom" i zdobądź punkt przelatując Flappym przez pierwszy zestaw
        rur.
      OPD-K5-forloops-1: Collect the nectar from each flower using the fewest blocks
        possible.
      OPD-K5-forloops-2: Write the code to help the bee collect all of the nectar.
      OPD-K5-forloops-5: Pomóż pszczółce zebrać cały nektar.
      OPD-K5-forloops-6: Try gathering this nectar by counting down from 5 to 1 by
        1.
      OPD-K5-forloops-7: Try collecting these flowers using an increment of 2.
      OPD-K5-projects-2: Choose a background and map, and pick an actor to be your
        game's hero.
      OPD-K5-projects-3: Use events and actions to make your hero move. Get to the
        targets.
      OPD-K5-projects-4: Add two or more additional actors to your game and make them
        move.
      OPD-K5-projects-5: Find some interesting ways to change the score in your game.
        Get the score to show something other than 0 to continue.
      OPD-K5-projects-6: Teraz poświęć trochę czasu, żeby upewnić się, że gra działa
        tak, jak chcesz. Ustaw sposób w jaki wygrywa się lub przegrywa twoją grę,
        a następnie zagraj, aby spełnić jeden z tych warunków.
      OPD-K5-projects-7: You've finished! Now you can play your game or share it with
        your friends and classmates!
      OPD-K5-spritelab-2: Change the tumbleweed into any kind of fish!
      OPD-K5-spritelab-3: Change the fish's behavior so that it swims left and right.
      OPD-K5-spritelab-4: Use the `set background color` block to make the background
        any color.
      OPD-K5-spritelab-6: The fish is adventurous and wants to meet new creatures
        in the sea. Add another sprite to the fish tank. This sprite can have any
        costume other than the one you use for your fish!
      OPD-K5-spritelab-7: Add a behavior to the fish's new friend.
      OPD-K5-variables-2: 'Now draw three of those triangles right next to each other.   '
      OPD-K5-variables-5: Move the length of 50 into a variable so we can use it in
        the next few puzzles.
      OPD-K5-variables-6: Now, use the `length` variable to have the artist jump forward
        and down by `length` pixels between triangles.
      OPD-K5-variables-7: Add another set of loops at the end of your code to add
        three more triangles. This time, move forward and up!
      Overworld Avoid Monsters: Wpadnięcie na Pełzaka to zły pomysł. Ostrożnie omijaj
        Pełzaki, aby bezpiecznie dotrzeć do domu.
      Overworld Avoid Monsters_2019: Wpadnięcie na Pełzaka to zły pomysł. Ostrożnie
        omijaj Pełzaki, aby bezpiecznie dotrzeć do domu.
      Overworld Chop Tree: Drewno to bardzo ważny materiał. Można z niego zbudować
        wiele rzeczy. Podejdź do drzewa i skorzystaj z polecenia "zniszcz blok", aby
        je ściąć.
      Overworld Chop Tree_2019: Drewno to bardzo ważny materiał. Można z niego zbudować
        wiele rzeczy. Podejdź do drzewa i skorzystaj z polecenia "zniszcz blok", aby
        je ściąć.
      Overworld Chop Trees: Musimy wybudować dom, zanim zajdzie słońce. Na dom potrzeba
        dużo drewna. Zetnij wszystkie 3 drzewa.
      Overworld Chop Trees_2019: Musimy wybudować dom, zanim zajdzie słońce. Na dom
        potrzeba dużo drewna. Zetnij wszystkie 3 drzewa.
      Overworld Free Play 20x20: 'Gratulacje! Udało Ci się ułożyć wszystkie nasze
        układanki! Teraz wydobywaj, buduj i twórz co tylko zechcesz, korzystając ze
        swoich nowych umiejętności. '
      Overworld Free Play 20x20_2019: 'Gratulacje! Udało Ci się ułożyć wszystkie nasze
        układanki! Teraz wydobywaj, buduj i twórz co tylko zechcesz, korzystając ze
        swoich nowych umiejętności. '
      Overworld House Frame Chosen: Zbuduj resztę domu z materiałów, jakie chcesz.
        Przydatne tutaj będzie polecenie "powtórz".
      Overworld House Frame Chosen_2019: Zbuduj resztę domu z materiałów, jakie chcesz.
        Przydatne tutaj będzie polecenie "powtórz".
      Overworld Move to Sheep: Dodaj drugie polecenie "przejdź do przodu", aby dotrzeć
        do owcy.
      Overworld Move to Sheep_2019: Dodaj drugie polecenie "przejdź do przodu", aby
        dotrzeć do owcy.
      Overworld Place Wall: Każdy dom powinien mieć ściany. Zbuduj pierwszą część
        swojego domu, korzystając z poleceń "umieść" i "idź do przodu" umieszczonych
        w pętli powtórzeń.
      Overworld Place Wall_2019: Każdy dom powinien mieć ściany. Zbuduj pierwszą część
        swojego domu, korzystając z poleceń "umieść" i "idź do przodu" umieszczonych
        w pętli powtórzeń.
      Overworld Plant Crops: Dobrze jest planować z wyprzedzeniem. Zasadź rośliny
        po obu stronach wody, aby później nie konać z głodu.
      Overworld Plant Crops_2019: Dobrze jest planować z wyprzedzeniem. Zasadź rośliny
        po obu stronach wody, aby później nie konać z głodu.
      Overworld Powered Minecart: Świetna robota! Udało Ci się zgromadzić wiele zasobów
        i zbudować skromny dom. Teraz ułóż tory prowadzące od drzwi swojego domu do
        końca mapy.
      Overworld Powered Minecart_2019: Świetna robota! Udało Ci się zgromadzić wiele
        zasobów i zbudować skromny dom. Teraz ułóż tory prowadzące od drzwi swojego
        domu do końca mapy.
      Overworld Shear Sheep: Nadszedł czas strzyży! Używając polecenia "strzyż" pozyskaj
        wełnę z obu owiec.
      Overworld Shear Sheep_2019: Nadszedł czas strzyży! Używając polecenia "strzyż"
        pozyskaj wełnę z obu owiec.
      Pixelation - Lesson 15 - Color Shades: We start you out with the row of shades
        of red that Maddie created in the video. Experiment with 6-bit color by filling
        in the bottom row of the image with shades of a different color. Here is an
        example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Color Shades 4x4: 'We start you out with the 4x4 image
        Maddie created in the video. Your task is to fill a 4x4 grid with colors using
        12-bits per pixel. Here are the requirements: Row 1 - fill with shades of
        red. Row 2 - shades of green. Row 3 - shades of blue. Row 4 - shades of gray.'
      Pixelation - Lesson 15 - Complete 3-bit color: We start you with the 4x2 image
        Maddie was creating, but we've left out the last two squares. Finish off the
        image by figuring out which two colors are missing and encode them.
      Pixelation 4x4 Empty: The width and height are now encoded in the pixel data.
        Can you figure out how to adjust the dimensions?
      Pixelation Bee: 'This larger image of a bee encodes color with 12 bits per pixel,
        but viewing in hex makes it easier to see the color of each pixel. If you
        switch to binary mode - hold on to your hat - it''s a lot of bits. Here''s
        another mind-blowing thing to try: slide the bits per pixel up to 24 bits
        per pixel. What happens? Can you explain this behavior?'
      Pixelation Flappy: Here is a bigger image at 9 bits per pixel. With 9 bits per
        pixel you can express 512 different colors. Click through to see the next
        image which is even more sophisticated, but easier to understand.
      Robot Doodle: 'Pomysł na projekt: Stwórz obraz czegoś znajomego z prawdziwego
        świata. Wymaga to wytrwałości oraz planowania!'
      Robot Doodle_2018: 'Pomysł na projekt: Stwórz obraz czegoś znajomego z prawdziwego
        świata. Wymaga to wytrwałości oraz planowania!'
      Standalone_Artist_1: Artysta zaprasza! Najpierw, spróbuj utworzyć kwadrat przy
        użyciu bloków "skręć w prawo" i "idź do przodu". Każdy bok powinien mieć długość
        100 pikseli.
      Standalone_Artist_2: Narysuj ten diament z kątami 120 i 60 stopni i długościami
        boków na 150 pikseli.
      Standalone_Artist_3: Czy potrafisz narysować ten sześciokąt z bokami 100 pikseli
        i obrotami 60 stopni?
      Standalone_Artist_4: Teraz masz do dyspozycji nowy blok, pętlę. Będzie on powtarzał
        zestaw poleceń. Co się stanie, jeśli wykonasz te polecenia w pętli 6 razy?
      Standalone_Artist_5: Ile razy musisz powtórzyć ten diament, by narysować kwiat?
      Standalone_Artist_5.5: 'Zwróć uwagę, jak uprościliśmy kod diamentu wykorzystując
        pętlę. Możesz teraz powtórzyć całę tę sekwencję 12 razy, aby narysować kwiat.
        Wskazówka: Musisz wykonać obrót o 30 stopni po każdym diamencie, by nie rysować
        cały czas tego samego diamentu.'
      Standalone_Artist_6: 'Wykonaj ten sześciokąt w pętli 6 razy, aby utworzyć wzór.
        O ile stopni będzie trzeba wykonać obrót za każdym razem? Wskazówka: podzielić
        liczbę stopni w okręgu przez ile razy jest wykonywana pętla.'
      Standalone_Artist_7: 'Funkcja jest kolejnym narzędziem programowania, które
        pomaga unikać powtarzania się. Ta funkcja rysuje kwiat, możesz więc użyć jej
        za każdym razem, gdy chcesz narysować kwiat. Użyj funkcji i nowego bloku skoku,
        by narysować te kwiaty. Wskazówka: Kwiaty są oddalone od siebie o 150 pikseli'
      Standalone_Artist_8: Tutaj jest funkcja o nazwie "rysuj kształt", którą zaprogramowaliśmy,
        by rysować sześciokąty. Uruchom kod, aby zobaczyć, co robi, a następnie eksperymentuj
        z tą funkcją, aby zobaczyć co się dzieje. Czy mógłbyś spowodować, by rysowała
        wzory złożone z kwadratów, trójkątów lub ośmiokątów?
      Standalone_Artist_9: Teraz idź dalej i twórz obrazki, jakie chcesz! Masz nawet
        pustą funkcję, którą możesz wykorzystać, by robiła, co chcesz!
      U4 Model Design 1: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      U4 Model Design 1_2018: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      U4 Model Design 1_2019: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      Underground Avoiding Lava: Pod niektórymi z tych bloków ukrywa się lawa, którą
        musisz przykryć, zanim przejdziesz po niej. Przyda się do tego warunek "jeżeli".
        Dodaj polecenie "idź do przodu" we właściwym miejscu, aby wydobyć coś z tych
        bloków.
      Underground Avoiding Lava_2019: Pod niektórymi z tych bloków ukrywa się lawa,
        którą musisz przykryć, zanim przejdziesz po niej. Przyda się do tego warunek
        "jeżeli". Dodaj polecenie "idź do przodu" we właściwym miejscu, aby wydobyć
        coś z tych bloków.
      Underground If Statements: Teraz sprawy się skomplikowały. Wydobądź 3 czerwone
        kamienie, nie wpadając w lawę. Skorzystaj z polecenia "jeżeli", aby ułożyć
        bruk na każdym polu odkrytej lawy.
      Underground If Statements_2019: Teraz sprawy się skomplikowały. Wydobądź 3 czerwone
        kamienie, nie wpadając w lawę. Skorzystaj z polecenia "jeżeli", aby ułożyć
        bruk na każdym polu odkrytej lawy.
      Underground Iron: Wchodzenie w płynną lawę nie jest dobrym pomysłem. Umieść
        na niej bruk, aby stworzyć most, a następnie wydobądź żelazo z co najmniej
        3 bloków.
      Underground Iron_2019: Wchodzenie w płynną lawę nie jest dobrym pomysłem. Umieść
        na niej bruk, aby stworzyć most, a następnie wydobądź żelazo z co najmniej
        3 bloków.
      Underground Mining Coal: Najcenniejsze surowce znajdują się pod ziemią, ale
        robi się ciemno. Umieść co najmniej 2 pochodnie i wydobądź węgiel z co najmniej
        2 bloków.
      Underground Mining Coal_2019: Najcenniejsze surowce znajdują się pod ziemią,
        ale robi się ciemno. Umieść co najmniej 2 pochodnie i wydobądź węgiel z co
        najmniej 2 bloków.
      Vigenere: Test
      Virtual Pet 1: What do you think will happen if you press "Run" and then click
        on her?
      Virtual Pet 1 Predict: 'What do you think will happen when you click on the
        alien?  '
      Virtual Pet 2: Create an **event** so that when Geraldine touches the puddle,
        her color changes to brown.
      Virtual Pet 3: Add a new soap sprite to the screen.  Can you make it so that
        when the giraffe and the soap touch, the giraffe goes back to its normal color?
      Virtual Pet 4: Add a behavior to your soap to make it draggable, then drag it
        over to clean the giraffe!
      Virtual Pet 5: Add actions to each event so that when the giraffe collides with
        each sprite, it shrinks by 5.
      Virtual Pet 6: Add an apple that returns the giraffe back to regular size when
        they touch.
      Virtual Pet 8_2019: "**Free Play:** What more can you make your pet do? Try
        anything you like!"
      Virtual Pet Freeplay: 'Freeplay: What more can you make your giraffe do? '
      'Widget: Text Compression': Poszukaj wzorców (powtarzające się słowa lub frazy)
        w tekście. Wprowadź do słownika po prawej stronie wzorce, które widzisz. Podczas
        ich wpisywania do słownika, symbol wpisu jest wstawiany do tekstu zamiast
        wzorca.
      behaviors 1: Czy mógłbyś przewidzieć!
      behaviors 2: Fly the rocket to the stars!
      behaviors 3: Help the rover outrun the robot!
      behaviors 3a: 'Debug: Make all of the stars spin the same way!'
      behaviors 4: Czy mógłbyś przewidzieć!
      behaviors 5: Move the astronaut diagonally.
      behaviors 6: Make the ball roll.
      behaviors 7: Drive off into the horizon!
      behaviors free play: 'Free play: Create your own outer space scene!'
      bounce_1: Dołącz blok do bloku "kiedy strzałka w lewo" i naciśnij "Uruchom".
        Przesuń paletkę używając lewej strzałki, aby osiągnąć ostateczny cel.
      bounce_10: Cel teraz jest u góry. Dołącz bloki "punkt wyniku" i "punkt wyniku
        przeciwnika" do bloków "kiedy piłka jest w bramce" i "kiedy piłka mija rakietkę",
        aby utworzyć grę. Zobacz, ile zdobędziesz punktów, zanim Twój przeciwnik zdobędzie
        dwa punkty.
      bounce_10_basketball: Teraz cel jest u góry. Dołącz bloki "punkt wyniku" i "punkt
        wyniku przeciwnika" do bloków "kiedy piłka jest w bramce" i "kiedy piłka mija
        paletkę", aby utworzyć grę. Zobacz, ile zdobędziesz punktów, zanim Twój przeciwnik
        zdobędzie dwa punkty.
      bounce_10_sports: Teraz cel jest u góry. Dołącz bloki "punkt wyniku" i "punkt
        wyniku przeciwnika" do bloków "kiedy piłka jest w bramce" i "kiedy piłka mija
        paletkę", aby utworzyć grę. Zobacz, ile zdobędziesz punktów, zanim Twój przeciwnik
        zdobędzie dwa punkty!
      bounce_11: Możesz teraz dołączyć bloki do bloku "po uruchomieniu". Musisz dołączyć
        nowy blok "wypuść nową piłkę" w więcej niż w jednym miejscu. Również, spróbuj
        zmienić scenerię lub szybkość rakietki oraz piłki i zobacz, ile punktów zdobędziesz,
        zanim Twój przeciwnik zdobędzie dwa punkty.
      bounce_11_basketball: Możesz teraz dołączyć bloki do bloku "po uruchomieniu".
        Musisz dołączyć nowy blok "wyrzuć nową piłkę" w więcej niż w jednym miejscu.
        Również spróbuj zmienić scenerię lub szybkość paletki oraz piłki i zobacz,
        ile zdobędziesz punktów, zanim Twój przeciwnik zdobędzie dwa punkty!
      bounce_11_sports: Możesz teraz dołączyć bloki do bloku "po uruchomieniu". Musisz
        dołączyć nowy blok "wyrzuć nową piłkę" w więcej niż w jednym miejscu. Również
        spróbuj zmienić scenerię lub szybkość paletki oraz piłki i zobacz, ile zdobędziesz
        punktów, zanim Twój przeciwnik zdobędzie dwa punkty!
      bounce_12: Utwórz własną grę w odbijanie. Możesz zmienić wszystkie efekty wizualne
        i zasady. Kiedy skończysz, kliknij przycisk "Zakończ", aby Twoi znajomi mogli
        zagrać na swoich telefonach.
      bounce_12_basketball: Stwórz swoją własną grę w Koszykówkę. Możesz zmienić wszystkie
        zasady. Kiedy skończysz naciśnij "Zakończ", aby Twoi znajomi mogli w nią zagrać
        na swoich telefonach.
      bounce_12_sports: Utwórz własną grę w odbijanie. Możesz zmienić wszystkie zasady
        i pomieszać różne zawody - bądź kreatywny. Kiedy skończysz, kliknij przycisk
        "Zakończ", aby Twoi znajomi mogli zagrać w Twoją grę na swoich telefonach.
      bounce_1_basketball: Dołącz blok do bloku "kiedy strzałka w lewo" i naciśnij
        "Uruchom". Przesuwaj paletkę używając strzałki w lewo, aby osiągnąć cel.
      bounce_1_sports: Osiągnij flagę! Dołącz blok do bloku "kiedy strzałka w lewo"
        i naciśnij "Uruchom", aby przesunąć gracza ku fladze.
      bounce_2: Dołącz blok do bloków "kiedy strzałka w prawo" i "kiedy strzałka w
        lewo". Przesuwaj paletkę, aby osiągnąć ostateczne cele.
      bounce_2_basketball: Dołącz blok do bloków "kiedy strzałka w prawo" i "kiedy
        strzałka w lewo". Przesuwaj paletkę, aby osiągnąć oba cele.
      bounce_2_sports: Teraz są dwie flagi! Dołącz blok do bloków "kiedy strzałka
        w lewo" i "kiedy strzałka w prawo", aby Twój gracz poruszał się w dwóch kierunkach.
      bounce_3: Teraz spróbuj czegoś podobnego z blokiem "kiedy strzałka w górę".
        Przenieś paletkę do miejsca końcowego na górze.
      bounce_4: Tym razem musisz dodać cztery bloki. Przenieś paletki do wszystkich
        czterech miejsc końcowych, by zakończyć układankę.
      bounce_5: Mamy zamiar skierować piłkę lecącą w dół w kierunku paletki. Dołącz
        blok do bloku "kiedy piłka uderza paletkę", aby upewnić się, że piłka osiąga
        ostateczny cel.
      bounce_5_basketball: Mamy zamiar skierować piłkę lecącą w dół w kierunku paletki.
        Dołącz blok do bloku "kiedy piłka uderza paletkę", aby upewnić się, że piłka
        doleci do flagi.
      bounce_5_sports: Krążek hokejowy leci do dołu w kierunku gracza! Dołącz blok
        do bloku "kiedy piłka uderza gracza", aby dosięgnąć flagi.
      bounce_6: Teraz ostateczny cel jest na górze. Musisz dołączyć bloki do obu bloków
        "kiedy piłka uderza", aby rozwiązać tę łamigłówkę.
      bounce_6_basketball: Teraz flaga jest na górze. Musisz dołączyć bloki do obu
        bloków "kiedy piłka uderza", aby rozwiązać tę łamigłówkę.
      bounce_6_sports: Teraz flaga jest na górze. Musisz dołączyć bloki do obu bloków
        "kiedy piłka uderza", aby rozwiązać tę łamigłówkę.
      bounce_7: Dołącz bloki do każdego z bloków "kiedy". Odbijaj piłeczkę, aż osiągnie
        ostateczny cel.
      bounce_7_basketball: Dołącz bloki do każdego z bloków "kiedy". Odbijaj piłeczkę,
        aż dosięgnie flagę.
      bounce_7_sports: Dołącz bloki do każdego z bloków "kiedy". Odbijaj piłeczkę,
        aż dosięgnie flagę.
      comment_intro_maze_2018: Use the new `comment` block to leave yourself quick
        reminders.
      course1_artist_loops_challenge1: |-
        You can use a loop to draw many lines in a row.

        Can you draw a house? Make it look just the way you like it!  Try looking for patterns that repeat!
      course1_artist_loops_challenge2: Let's play a game! Draw as many X's as you
        can! Can you get 3 in a row?
      course1_artist_loops_challenge3: '"Can you help me make two bird houses?"'
      course1_artist_loops_challenge4: '"It''s time to toss the dice! Can you help
        me draw these?"'
      course1_collector_loops_challenge1: '"Can you help me spot some bugs? I know
        which way I want to go, but I''m not sure how many steps to take."'
      course1_collector_loops_challenge2: 'This time you can only use one of each
        arrow block. Get all of the treasure! '
      course1_collector_loops_challenge3: 'This time you can only use one of each
        arrow block. Get all of the treasure! '
      course1_collector_loops_challenge4: Let's get the treasure! Help me across each
        row then come back to start the next row. Can you find a pattern?
      course1_maze_debugging_challenge1: Debug this level. Remove the extra blocks
        and add the missing blocks. Get the bird to the pig!
      course1_maze_debugging_challenge2: Debuguj ten poziom. Te bloki są poprawne,
        ale w złej kolejności!
      course1_maze_seq_challenge1: '"Trace the path and lead me to the silly pig.
        Avoid TNT or the feathers will fly!"'
      course1_maze_seq_challenge2: You can only move up to four times in each direction.
        Can you find a path before you run out of blocks?
      course1_playlab_events_challenge1: '"Where are my friends hiding? Can you write
        code to show the rest of my friends?"'
      course1_playlab_events_challenge2: '"Let''s have a party! Give my friends something
        to do when you click or tap them."'
      course2_artist_nestedLoops_challenge1: "\\*\\* Wyzwanie: \\*\\* Czy możesz dojść
        do tego jak utworzyć obrazek taki jak ten?"
      course2_artist_nestedLoops_challenge2: "\\*\\* Wyzwanie: \\*\\* Czy możesz dojść
        do tego jak utworzyć obrazek taki jak ten?"
      course2_artist_prog_challenge1: Narysuj pokoje dla każdego ze zwierząt. Jest
        wiele możliwości rozwiązania tej zagadki, więc baw się dobrze. Najkrótsze
        rozwiązanie składa się z 6 bloków, lecz użyj tylu ile ci się podoba!
      course2_artist_prog_challenge2: _Pomóż mi namalować żółte linie na tej drodze!_
      course2_bee_conditionals_challenge1: Zbierz cały nektar i zrób cały miód.
      course2_bee_conditionals_challenge2: Zbierz cały nektar i zrób cały miód.
      course2_collector_loops_challenge2: Zbierz cały skarb!
      course2_collector_prog_challenge1: Popatrz uważnie! Czy potrafisz zebrać wszystkie
        _10_ skarbów?
      course2_collector_prog_challenge2: W tej jaskini jest 20 skarbów do znalezienia.
        Zbierz przynajmniej połowę, aby ukończyć to wyzwanie!
      course2_harvester_loops_challenge1: Zbierz całą kukurydzę.
      course2_harvester_loops_challenge2: Zbierz wszystkie sałaty. Unikaj drzew i
        pól!
      course2_maze_loops_challenge1: 'Now Scrat wants to try using loops to find his
        acorn! '
      course2_maze_programming_challenge1: \_"Świnka się chowa! Czy pomożesz mi znaleźć
        sposób na obejście przeszkód?"
      course2_maze_programming_challenge2: Czasami jest więcej sposobów na rozwiązanie
        tego samego problemu. Czasami szybciej jest się cofnąć niż iść na przód!
      course3_artist_functions_challenge1: Once you define a function, you can call
        it over and over again - whenever and wherever you want! Try this code to
        see how it works, then change it to make your own impressive design!
      course3_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      course3_bee_debugging_challenge1: Watch how the bee gets the nectar. Can you
        use the same kind of pattern to help the bee make all of the honey?
      course3_bee_functions_challenge1: You are on your own for this challenge. This
        could "bee" harder than it looks!
      course3_bee_functions_challenge2: Jesteś sam na sam z tym wyzwaniem!
      course3_bee_functions_challenge3: Create a new function to collect all the nectar
        and honey while there is a path ahead. Use it to complete the puzzle!
      course3_bee_functions_challenge4: Wykorzystaj wszystko czego się nauczyłeś,
        aby rozwiązać tę łamigłówkę!
      course3_collector_debugging_challenge2: Are you an expert of nested loops? Use
        what you have learned so far to collect all of the treasure!
      course3_farmer_condLoops_challenge1: Skręć w prawo przy dyniach. Zbierz wszystko,
        aby ukończyć poziom. Każdy ukryty plon ma tylko jedną kukurydzę lub sałatę.
      course3_farmer_condLoops_challenge2: Zbierz wszystko, aby ukończyć ten poziom.
      course3_farmer_until_challenge2: Use If/Else blocks to follow the curvy path.
        At each corner, use the `remove 1` command in a loop to clear the piles.
      course3_maze_debugging_challenge1: _"Czy ja tylko chodzę dookoła w kółko?"_
      course3_maze_debugging_challenge2: _"Jeśli będę skręcać zbyt często, może mi
        się zakręcić w głowie! Pomóż mi dotrzeć do żołędzia, używając tylko czterech
        komend "skręć"."_
      course3_maze_until_challenge1: Bez podpowiedzi, po prostu wyzwanie. Doprowadź
        zombie do słonecznika.
      course3_playLab_challenge1: "Something should happen when you get enough points
        or when you run out of points. Add some code to the `win game` and `lose game`
        functions to make the game work the way it should. \nClick the hints for ideas!"
      course4_artist_binary_challenge1: Możesz użyć tylko binarnych wartości (0 lub
        1). Spróbuj użyć zagnieżdżonych pętli, aby ukończyć ten rysunek.
      course4_artist_binary_challenge2: Czy jesteś wystarczająco wytrwały, aby przywrócić
        to logo do normy?
      course4_artist_concept_challenge2: Create five pinwheel designs using the code
        below.
      course4_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      course4_artist_fwp_challenge1: Uruchom ten program i wprowadzaj zmiany, aby
        zobaczyć co się dzieje. Czy możesz powiedzieć, co robi ten program? (Lub usuń
        go i zastąp go czymś zupełnie inny)
      course4_artist_variables_challenge1: You've now learned everything you need
        to know to make a pattern like this! This puzzle is meant to be difficult.  Can
        you stick with it until you figure out the solution?
      course4_bee_for_challenge1: Use this for loop to collect all of the nectar.
        There are a few actions that you will want to repeat 'counter' times.
      course4_bee_fwp_challenge1: Use one `for loop` in a function to collect all
        of the corn. The same `for loop` can count to different maximum values by
        using the `length` parameter.
      course4_bee_fwp_challenge2: Use one `for loop` in a function to collect all
        of the vegetables in the row. Make the `for loop` can count to different maximum
        values by using the `length` parameter. Make your program as short as possible
        by using a second `for loop` outside the function.
      course4_collector_nested_loops_challenge2: Help the collector reach at least
        two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      course4_harvester_nested_loops_challenge1: '"I need some help on the farm! Help
        me harvest this corn using only the blocks in your toolbox."'
      course4_playlab_variables_challenge1: Use these blocks to make the actors share
        a knock-knock joke. Change the setup and punchline to tell your own joke!
      courseA_artist_loops1: This is a new type of puzzle called "Artist". Play with
        the level and draw something fun.
      courseA_artist_loops10: Pomóż mi położyć kamienie niżej, a nie spadnę!
      courseA_artist_loops10_2018: Pomóż mi położyć kamienie niżej, a nie spadnę!
      courseA_artist_loops10_2019: Pomóż mi położyć kamienie niżej, a nie spadnę!
      courseA_artist_loops11: Help me build steps to watch the ship sail away.
      courseA_artist_loops11_2018: Help me build steps to watch the ship sail away.
      courseA_artist_loops11_2019: Help me build steps to watch the ship sail away.
      courseA_artist_loops12: Artysta zobaczył w oddali coś śmiesznego. Narysuj, co
        Twoim zdaniem zobaczył.
      courseA_artist_loops12_2018: Artysta zobaczył w oddali coś śmiesznego. Narysuj,
        co Twoim zdaniem zobaczył.
      courseA_artist_loops12_2019: Artysta zobaczył w oddali coś śmiesznego. Narysuj,
        co Twoim zdaniem zobaczył.
      courseA_artist_loops1_2018: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseA_artist_loops1_2019: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseA_artist_loops2: Help the artist draw this line two times forward.
      courseA_artist_loops2_2018: Help the artist draw this line two times forward.
      courseA_artist_loops2_2019: Help the artist draw this line two times forward.
      courseA_artist_loops3: Draw a line forward five times.
      courseA_artist_loops3_2018: Draw a line forward five times.
      courseA_artist_loops3_2019: Draw a line forward five times.
      courseA_artist_loops4: Now, use a `repeat` loop to draw this line five times!
      courseA_artist_loops4_2018: Now, use a `repeat` loop to draw this line five
        times!
      courseA_artist_loops4_2019: Now, use a `repeat` loop to draw this line five
        times!
      courseA_artist_loops5: Draw a line seven steps long. This will become our horizon.
      courseA_artist_loops5_2018: Draw a line seven steps long. This will become our
        horizon.
      courseA_artist_loops5_2019: Draw a line seven steps long. This will become our
        horizon.
      courseA_artist_loops6: Let's put a nice hill in the back.
      courseA_artist_loops6_2018: Let's put a nice hill in the back.
      courseA_artist_loops6_2019: Let's put a nice hill in the back.
      courseA_artist_loops7: Użyj pętli `repeat` aby dodać fale na wodzie.
      courseA_artist_loops7_2018: Użyj pętli `repeat` aby dodać fale na wodzie.
      courseA_artist_loops7_2019: Użyj pętli `repeat` aby dodać fale na wodzie.
      courseA_artist_loops8: We need a ladder up to the boat.
      courseA_artist_loops8_2018: We need a ladder up to the boat.
      courseA_artist_loops8_2019: We need a ladder up to the boat.
      courseA_artist_loops9: 'Wyzwanie: Napraw schody.'
      courseA_artist_loops9_2018: 'Wyzwanie: Napraw schody.'
      courseA_artist_loops9_2019: 'Wyzwanie: Napraw schody.'
      courseA_artist_loops_challenge1: Can you draw a house? Make it look just the
        way you like it!
      courseA_artist_loops_challenge1_2018: Can you draw a house? Make it look just
        the way you like it!
      courseA_artist_loops_challenge1_2019: Can you draw a house? Make it look just
        the way you like it!
      courseA_artist_loops_challenge2a: _"Help me get these three tents set up!"_
      courseA_artist_loops_challenge2a_2018: _"Help me get these three tents set up!"_
      courseA_artist_loops_challenge2a_2019: _"Help me get these three tents set up!"_
      courseA_collector_loops1: Move Laurel around and get as much treasure as you
        can!
      courseA_collector_loops10: Help Laurel get all of the treasure along this path.
      courseA_collector_loops10_2018: Help Laurel get all of the treasure along this
        path.
      courseA_collector_loops10_2019: Help Laurel get all of the treasure along this
        path.
      courseA_collector_loops11: Help Laurel get all of the treasure from this cave.
      courseA_collector_loops11_2018: Help Laurel get all of the treasure from this
        cave.
      courseA_collector_loops11_2019: Help Laurel get all of the treasure from this
        cave.
      courseA_collector_loops12: _"Eureka!  Get as much treasure as you can!"_
      courseA_collector_loops12_2018: _"Eureka!  Get as much treasure as you can!"_
      courseA_collector_loops12_2019: _"Eureka!  Get as much treasure as you can!"_
      courseA_collector_loops1_2018: Move Laurel around and get as much treasure as
        you can!
      courseA_collector_loops1_2019: Move Laurel around and get as much treasure as
        you can!
      courseA_collector_loops2: Get all three piles to pass this level.
      courseA_collector_loops2_2018: Get all three piles to pass this level.
      courseA_collector_loops2_2019: Get all three piles! Move Laurel to each piece
        of treasure, then use the collect block.
      courseA_collector_loops4: Fix Laurel's path to get all of this treasure.
      courseA_collector_loops4_2018: Fix Laurel's path to get all of this treasure.
      courseA_collector_loops4_2019: Fix Laurel's path to get all of this treasure.
      courseA_collector_loops5: Use what you learned to get all of the treasure.
      courseA_collector_loops5_2018: Use what you learned to get all of the treasure.
      courseA_collector_loops5_2019: Use what you learned to get all of the treasure.
      courseA_collector_loops6: Add blocks to this code to get all of the treasure.
      courseA_collector_loops6_2018: Add blocks to this code to get all of the treasure.
      courseA_collector_loops6_2019: Add blocks to this code to get all of the treasure.
      courseA_collector_loops7: Co powinieneś dodać do tego kodu, aby zebrać wszystkie
        skarby?
      courseA_collector_loops7_2018: Co powinieneś dodać do tego kodu, aby zebrać
        wszystkie skarby?
      courseA_collector_loops7_2019: Co powinieneś dodać do tego kodu, aby zebrać
        wszystkie skarby?
      courseA_collector_loops8: Write code to get all of this treasure.
      courseA_collector_loops8_2018: Write code to get all of this treasure.
      courseA_collector_loops8_2019: Write code to get all of this treasure.
      courseA_collector_loops9: "**Challenge:** The treasure goes all the way up these
        stairs!  Write the code to help Laurel get it all."
      courseA_collector_loops9_2018: "**Challenge:** The treasure goes all the way
        up these stairs!  Write the code to help Laurel get it all."
      courseA_collector_loops9_2019: "**Challenge:** The treasure goes all the way
        up these stairs!  Write the code to help Laurel get it all."
      courseA_collector_loops_challenge1: _"Can you help me spot some bugs?"_
      courseA_collector_loops_challenge1_2018: _"Can you help me spot some bugs?"_
      courseA_collector_loops_challenge1_2019: _"Can you help me spot some bugs?"_
      courseA_collector_loops_challenge2: 'Get all of the treasure! '
      courseA_collector_loops_challenge2kp: Zbierz przynajmniej _3_ części skarbu
        aby przejść ten poziom.
      courseA_collector_loops_challenge2kp_2018: Zbierz przynajmniej _3_ części skarbu
        aby przejść ten poziom.
      courseA_collector_loops_challenge2kp_2019: Zbierz przynajmniej _3_ części skarbu
        aby przejść ten poziom.
      courseA_collector_preLoops1: "This is Laurel the Adventurer! \n\nPress \"Run\"
        to see her walk up to the treasure and grab it."
      courseA_collector_preLoops2: "Great!  Now you get to add code yourself!  \n\nSnap
        a `get treasure` block to the bottom of the program and click \"Run\"."
      courseA_collector_preLoops3: Snap two `E -->` blocks and one `get treasure`
        block to the bottom of the program, then click "Run".
      courseA_collector_preLoops4: Can you figure out how to solve this puzzle?
      courseA_collector_preLoops5: Get 1 of these 2 gems to solve this puzzle.
      courseA_collector_preLoops6: Get both pieces of treasure to solve this puzzle.
      courseA_collector_preLoops7: Get all three piles to pass this level.
      courseA_harvester_loops1: Help the harvester pick all the corn!
      courseA_harvester_loops10: Help the harvester pick all five ears of corn!
      courseA_harvester_loops10_2019: Help the harvester pick all five ears of corn!
      courseA_harvester_loops11: 'Try one more on your own! '
      courseA_harvester_loops11_2019: 'Try one more on your own! '
      courseA_harvester_loops1_2019: Help the harvester pick all the corn!
      courseA_harvester_loops2: Make sure to pick all the corn!
      courseA_harvester_loops2_2019: Make sure to pick all the corn!
      courseA_harvester_loops3: Can you pick all the corn using only **one** move
        block?
      courseA_harvester_loops3_2019: Can you pick all the corn using only **one**
        move block?
      courseA_harvester_loops4: Can you help the harvester find the bug in her code?
      courseA_harvester_loops4_2019: Can you help the harvester find the bug in her
        code?
      courseA_harvester_loops5: Try it yourself! Can you pick the corn at the end
        too?
      courseA_harvester_loops5_2019: Try it yourself! Can you pick the corn at the
        end too?
      courseA_harvester_loops5a: Look at all this corn! Can you pick it all by yourself?
      courseA_harvester_loops5a_2019: Look at all this corn! Can you pick it all by
        yourself?
      courseA_harvester_loops5b: Can you change your code to make the harvester pick
        all the corn?
      courseA_harvester_loops5b_2019: Can you change your code to make the harvester
        pick all the corn?
      courseA_harvester_loops6: You will need **one** `Move West` block and **one**
        `Move North` block.
      courseA_harvester_loops6_2019: Będziesz potrzebować **jednego** klocka `Move
        South` i **jednego** klocka `Move West`.
      courseA_harvester_loops7: 'Try it on your own! '
      courseA_harvester_loops7_2019: 'Try it on your own! '
      courseA_harvester_loops9: Can you figure out how to pick all the corn?
      courseA_harvester_loops9_2019: Can you figure out how to pick all the corn?
      courseA_harvester_seq1: Play with these blocks to help the harvester pick the
        piece of corn.
      courseA_harvester_seq10: Make sure to pick all the corn!
      courseA_harvester_seq10_2019: Make sure to pick all the corn!
      courseA_harvester_seq11: Try it by yourself! Pick all the corn.
      courseA_harvester_seq11_2019: Try it by yourself! Pick all the corn.
      courseA_harvester_seq12: Pick all the corn.
      courseA_harvester_seq12_2019: Pick all the corn.
      courseA_harvester_seq13: Play with these blocks to help the harvester pick corn.
      courseA_harvester_seq13_2019: Play with these blocks to help the harvester pick
        corn.
      courseA_harvester_seq1_2019: Play with these blocks to help the harvester pick
        the piece of corn.
      courseA_harvester_seq2: Use three `move west` blocks and one `pick corn` block
        to solve this puzzle.
      courseA_harvester_seq2_2019: Use three `move west` blocks and one `pick corn`
        block to solve this puzzle.
      courseA_harvester_seq3: Use three `Move North` blocks and one `Pick Corn` block.
      courseA_harvester_seq3_2019: Use three `Move North` blocks and one `Pick Corn`
        block.
      courseA_harvester_seq4: Add one block to help the harvester pick the corn.
      courseA_harvester_seq4_2019: Add one block to help the harvester pick the corn.
      courseA_harvester_seq5: Find the bug and fix it!
      courseA_harvester_seq5_2019: Find the bug and fix it!
      courseA_harvester_seq6: Try it yourself!
      courseA_harvester_seq6_2019: Try it yourself!
      courseA_harvester_seq7: Try it yourself!
      courseA_harvester_seq7_2019: Try it yourself!
      courseA_harvester_seq8: Now the harvester needs to pick corn two times!
      courseA_harvester_seq8_2019: Now the harvester needs to pick corn two times!
      courseA_harvester_seq9: Add two blocks to finish this puzzle!
      courseA_harvester_seq9_2019: Add two blocks to finish this puzzle!
      courseA_maze_ramp2_2018: Snap all blocks together to finish your code, then
        click "Run".
      courseA_maze_ramp2_2019: Snap all blocks together to finish your code, then
        click "Run".
      courseA_maze_ramp3a_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseA_maze_ramp3a_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseA_maze_ramp3b_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "Run".
      courseA_maze_ramp3b_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "Run".
      courseA_maze_ramp4a_2018: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseA_maze_ramp4a_2019: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseA_maze_ramp5a_2018: Doprowadź ptaka do świnki!
      courseA_maze_ramp5a_2019: Doprowadź ptaka do świnki!
      courseA_maze_seq1: Get the bird to the bad pig!
      courseA_maze_seq10: 'Challenge: Go around the TNT to get the bird to the pig! '
      courseA_maze_seq10_2018: 'Challenge: Avoid the TNT to get the bird to the pig! '
      courseA_maze_seq10_2019: 'Challenge: Avoid the TNT to get the bird to the pig! '
      courseA_maze_seq10_copy: 'Challenge: Go around the TNT to get the bird to the
        pig! '
      courseA_maze_seq11: Move one way, then another to get the bird to the pig.
      courseA_maze_seq11_2018: Move one way, then another to get the bird to the pig.
      courseA_maze_seq11_2019: Move one way, then another to get the bird to the pig.
      courseA_maze_seq12: 'Get that pig! '
      courseA_maze_seq12_2018: 'Get that pig! '
      courseA_maze_seq12_2019: 'Get that pig! '
      courseA_maze_seq13: Get the pig any way you can!
      courseA_maze_seq13_2018: Get the pig any way you can!
      courseA_maze_seq13_2019: Get the pig any way you can!
      courseA_maze_seq1_2018: Get the bird to the bad pig!
      courseA_maze_seq1_2019: Get the bird to the bad pig!
      courseA_maze_seq2: Zmień kod, aby doprowadzić mnie do świnki!
      courseA_maze_seq3: Fix the code to get the bird to the pig!
      courseA_maze_seq4: REMOVE a block to get the bird to the pig!
      courseA_maze_seq5: Try this one yourself from the beginning.
      courseA_maze_seq5_2018: Give this one a try.
      courseA_maze_seq5_2019: Give this one a try.
      courseA_maze_seq5_copy: Try this one yourself from the beginning.
      courseA_maze_seq5a_2018: What can you add to the end of this code to get the
        bird to the pig?
      courseA_maze_seq5a_2019: What can you add to the end of this code to get the
        bird to the pig?
      courseA_maze_seq6: Move one way, then another to get the bird to the pig!
      courseA_maze_seq6_2018: Move one way, then another to get the bird to the pig!
      courseA_maze_seq6_2019: Move one way, then another to get the bird to the pig!
      courseA_maze_seq6_copy: Move one way, then another to get the bird to the pig!
      courseA_maze_seq7: Figure out what is missing and then add blocks to get the
        bird to the pig!
      courseA_maze_seq7_copy: Figure out what is missing and then add blocks to get
        the bird to the pig!
      courseA_maze_seq8: Solve this level and get the bird to the pig!
      courseA_maze_seq8_2018: Solve this level and get the bird to the pig!
      courseA_maze_seq8_2019: Solve this level and get the bird to the pig!
      courseA_maze_seq8_copy: Solve this level and get the bird to the pig!
      courseA_maze_seq9: Debug this level by adding blocks to get the bird to the
        pig!
      courseA_maze_seq_challenge1: Something is wrong here. Help fix the code to get
        the bird to the pig!
      courseA_maze_seq_challenge1_2018: Something is wrong here. Help fix the code
        to get the bird to the pig!
      courseA_maze_seq_challenge1_2019: Something is wrong here. Help fix the code
        to get the bird to the pig!
      courseA_maze_seq_challenge2: Trace the path to lead the bird to the pig. Avoid
        TNT or feathers will fly!
      courseA_maze_seq_challenge2_2018: Trace the path to lead the bird to the pig.
        Avoid TNT or feathers will fly!
      courseA_maze_seq_challenge2_2019: Trace the path to lead the bird to the pig.
        Avoid TNT or feathers will fly!
      courseA_playLab_events1: This is a Play Lab level.  Move blocks to the workspace
        and see what happens!
      courseA_playLab_events1_2018: This is a Play Lab level.  Move blocks to the
        workspace and see what happens!
      courseA_playLab_events1_2019: This is a Play Lab level. Move blocks to the workspace
        and see what happens!
      courseA_playLab_events2: Jorge the Dog wants to say "Hi there."  Can you help
        him?
      courseA_playLab_events2_2018: Jorge the Dog wants to say "Hi there."  Can you
        help him?
      courseA_playLab_events2_2019: Jorge the Dog wants to say "Hi there." Can you
        help him?
      courseA_playLab_events3: Connect the `move left` block to the `when left` event
        block that is already in the workspace.
      courseA_playLab_events3_2018: Connect the `move left` block to the `when left`
        event block that is already in the workspace.
      courseA_playLab_events3_2019: Connect the `move left` block to the `when left`
        event block that is already in the workspace. Use the arrow keys or press
        the arrow buttons to move Jorge to the flag and finish the level!
      courseA_playLab_events4: Add blocks for moving right when the `right` button
        is clicked.
      courseA_playLab_events4_2018: Add another event block to get Jorge to move right
        when the `right` button is clicked.
      courseA_playLab_events4_2019: Now, add another event block to get Jorge to move
        right when the right arrow button is clicked. Use the arrow keys or press
        the arrow buttons to move Jorge to both flags and finish the level!
      courseA_playLab_events5: Add events to have Jorge move up and down when the
        `up` and `down` buttons are pressed.
      courseA_playLab_events5_2018: Add events to have Jorge move up and down when
        the `up` and `down` buttons are pressed.
      courseA_playLab_events5_2019: Add events to have Jorge move up and down when
        the `up` and `down` buttons are pressed. Make Jorge get the flags to finish
        the level!
      courseA_playLab_events6: Make this more interesting by changing the background
        and playing a random sound when Jorge is clicked.
      courseA_playLab_events6_2018: Make this more interesting by changing the background
        and playing a random sound when Jorge is clicked.
      courseA_playLab_events6_2019: Make this more interesting by changing the background
        and playing a random sound when Jorge is clicked. When your code is ready,
        click on Jorge to try it out!
      courseA_playLab_events7: Add anything you want to this game.  Can you make the
        dinosaur disappear when Jorge runs into him?
      courseA_playLab_events7_2018: _Freeplay:_ Add anything you want to this game.
      courseA_playLab_events7_2019: _Freeplay:_ Add anything you want to this game.
      courseA_playlab_events_challenge1: Can you write code to show the rest of my
        friends? The hints will help you do this project step-by-step.
      courseA_playlab_events_challenge1_2018: Can you write code to show the rest
        of my friends? The hints will help you do this project step-by-step.
      courseA_playlab_events_challenge1_2019: Can you write code to show the rest
        of my friends? The hints will help you do this project step-by-step.
      courseA_playlab_events_challenge2: Give everyone something to do when you click
        on them.
      courseA_playlab_events_challenge2_2018: Give everyone something to do when you
        click on them.
      courseA_playlab_events_challenge2_2019: Give everyone something to do when you
        click on them.
      courseA_video_events: Need a better playlab/events combo
      courseA_video_events_2018: Need a better playlab/events combo
      courseA_video_events_2019: Need a better playlab/events combo
      courseB_Scrat_ramp1_2018: For this puzzle, snap the blocks together and press
        "▶ Run"!
      courseB_Scrat_ramp1_2019: For this puzzle, snap the blocks together and press
        "▶ Run"!
      courseB_Scrat_ramp2_2018: Snap all blocks together to finish your code, then
        click "▶ Run".
      courseB_Scrat_ramp2_2019: Snap all blocks together to finish your code, then
        click "▶ Run".
      courseB_Scrat_ramp3a_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseB_Scrat_ramp3a_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseB_Scrat_ramp3b_2018: Drag the extra block back to the toolbox to throw
        it away.
      courseB_Scrat_ramp3b_2019: Drag the extra block back to the toolbox to throw
        it away.
      courseB_Scrat_ramp4a_2018: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseB_Scrat_ramp4a_2019: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseB_Scrat_ramp5a_2018: Try this one all by yourself!
      courseB_Scrat_ramp5a_2019: Try this one all by yourself!
      courseB_artist_loops1: This is a new type of puzzle called "Artist". Play with
        the level and draw something fun.
      courseB_artist_loops10: Use what you have learned to draw a picture of what
        you think the artist saw when he got home.
      courseB_artist_loops10_2018: Use what you have learned to draw a picture of
        what you think the artist saw when he got home.
      courseB_artist_loops10_2019: Use what you have learned to draw a picture of
        what you think the artist saw when he got home.
      courseB_artist_loops1_2018: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseB_artist_loops1_2019: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseB_artist_loops2: The Artist is trying to draw a line **6** times, but
        can't get it right.  Can you help?
      courseB_artist_loops2_2018: The Artist is trying to draw a line **6** times,
        but can't get it right.  Can you help?
      courseB_artist_loops2_2019: The Artist is trying to draw a line **6** times,
        but can't get it right.  Can you help?
      courseB_artist_loops3: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops3_2018: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops3_2019: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops4: 'Now we need to get the soil ready to plant. Find the
        bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops4_2018: 'Now we need to get the soil ready to plant. Find
        the bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops4_2019: 'Now we need to get the soil ready to plant. Find
        the bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops5: Time to fix the stairs!  Repeat this pattern **5** times
        so the artist can reach the top of the bushes.
      courseB_artist_loops5_2018: Time to fix the stairs!  Repeat this pattern **5**
        times so the artist can reach the top of the bushes.
      courseB_artist_loops5_2019: Time to fix the stairs!  Repeat this pattern **5**
        times so the artist can reach the top of the bushes.
      courseB_artist_loops6: Climb the vine and see where it goes?
      courseB_artist_loops6_2018: Climb the vine and see where it goes?
      courseB_artist_loops6_2019: Climb the vine and see where it goes?
      courseB_artist_loops7: "**Challenge:**  It's a hidden garden! Let's walk around."
      courseB_artist_loops7_2018: "**Challenge:**  It's a hidden garden! Let's walk
        around."
      courseB_artist_loops7_2019: "**Challenge:**  It's a hidden garden! Let's walk
        around."
      courseB_artist_loops8: Time to head home. Can you fix this ladder using only
        one block to help the artist get down?
      courseB_artist_loops8_2018: Time to head home. Can you fix this ladder using
        only one block to help the artist get down?
      courseB_artist_loops8_2019: Time to head home. Can you fix this ladder using
        only one block to help the artist get down?
      courseB_artist_loops9: Let's take the short way home, over the pond. Can you
        help the artist stay on the stones?
      courseB_artist_loops9_2018: Let's take the short way home, over the pond. Can
        you help the artist stay on the stones?
      courseB_artist_loops9_2019: Let's take the short way home, over the pond. Can
        you help the artist stay on the stones?
      courseB_artist_loops_challenge1: '"It''s time to toss the dice! Can you help
        me draw these?"'
      courseB_artist_loops_challenge1_2018: '"It''s time to toss the dice! Can you
        help me draw these?"'
      courseB_artist_loops_challenge1_2019: '"It''s time to toss the dice! Can you
        help me draw these?"'
      courseB_artist_loops_challenge2: |-
        Zagrajmy w grę!
        Narysuj tak dużo X jak możesz! Czy zmieścisz 3 w jednym rzędzie?
      courseB_artist_loops_challenge2_2018: |-
        Zagrajmy w grę!
        Narysuj tak dużo X jak możesz! Czy zmieścisz 3 w jednym rzędzie?
      courseB_artist_loops_challenge2_2019: |-
        Zagrajmy w grę!
        Narysuj tak dużo X jak możesz! Czy zmieścisz 3 w jednym rzędzie?
      courseB_collector_loops1: This is Laurel the Adventurer!  Can you move her around
        and get treasure?
      courseB_collector_loops10: Help Laurel get all of the treasure from this cave.
      courseB_collector_loops10_2018: Help Laurel get all of the treasure from this
        cave.
      courseB_collector_loops10_2019: Help Laurel get all of the treasure from this
        cave.
      courseB_collector_loops11: Eureka!  Get as much treasure as you can!
      courseB_collector_loops11_2018: Eureka!  Get as much treasure as you can!
      courseB_collector_loops11_2019: Eureka!  Get as much treasure as you can!
      courseB_collector_loops1_2018: Get at least one piece of treasure without mistakes
        to pass!
      courseB_collector_loops1_2019: Get at least one piece of treasure without mistakes
        to pass!
      courseB_collector_loops2: Get all four piles to pass this level.
      courseB_collector_loops2_2018: Get all four piles to pass this level.
      courseB_collector_loops2_2019: Get all four piles to pass this level.
      courseB_collector_loops3: How can Laurel get all five piles of treasure using
        only one `E -->` block?
      courseB_collector_loops3_2018: How can Laurel get all five piles of treasure
        using only one `E -->` block?
      courseB_collector_loops3_2019: How can Laurel get all five piles of treasure
        using only one `E -->` block?
      courseB_collector_loops4: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops4_2018: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops4_2019: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops5: 'Add to the code from the last puzzle to get all of
        the treasure. '
      courseB_collector_loops5_2018: 'Add to the code from the last puzzle to get
        all of the treasure. '
      courseB_collector_loops5_2019: 'Add to the code from the last puzzle to get
        all of the treasure. '
      courseB_collector_loops6: Figure out the code to help Laurel get all of the
        treasure!
      courseB_collector_loops6_2018: Figure out the code to help Laurel get all of
        the treasure!
      courseB_collector_loops6_2019: Figure out the code to help Laurel get all of
        the treasure!
      courseB_collector_loops7: Write the code to get all of this treasure.
      courseB_collector_loops7_2018: Write the code to get all of this treasure.
      courseB_collector_loops7_2019: Write the code to get all of this treasure.
      courseB_collector_loops8: "**Challenge:** The treasure goes all the way down
        these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops8_2018: "**Challenge:** The treasure goes all the way
        down these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops8_2019: "**Challenge:** The treasure goes all the way
        down these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops9: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops9_2018: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops9_2019: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops_challenge1: 'This time you have limited blocks. Get
        all of the treasure! '
      courseB_collector_loops_challenge1_2018: 'This time you have limited blocks.
        Get all of the treasure! '
      courseB_collector_loops_challenge1_2019: 'This time you have limited blocks.
        Get all of the treasure! '
      courseB_collector_loops_challenge2: Let's get the treasure! Help me across each
        row then come back to start the next row. Can you find a pattern?
      courseB_collector_loops_challenge2a: Pomóż Laurelowi zabrać co najmniej **5**
        części skarbu, aby ukończyć tę łamigłówkę.
      courseB_collector_loops_challenge2a_2018: Pomóż Laurelowi zabrać co najmniej
        **5** części skarbu, aby ukończyć tę łamigłówkę.
      courseB_collector_loops_challenge2a_2019: Pomóż Laurelowi zabrać co najmniej
        **5** części skarbu, aby ukończyć tę łamigłówkę.
      courseB_iceage_loops1: Help Scrat across the ice to get to the acorn!
      courseB_iceage_loops10: Help Scrat get all the way over to the acorn!
      courseB_iceage_loops10_2019: Help Scrat get all the way over to the acorn!
      courseB_iceage_loops11: Help Scrat get to the acorn!
      courseB_iceage_loops11_2019: Help Scrat get to the acorn!
      courseB_iceage_loops12: Get to the acorn any way you can!
      courseB_iceage_loops12_2019: Get to the acorn any way you can!
      courseB_iceage_loops1_2019: Help Scrat across the ice to get to the acorn!
      courseB_iceage_loops2: Use two different move blocks to get to the acorn!
      courseB_iceage_loops2_2019: Use two different move blocks to get to the acorn!
      courseB_iceage_loops3: Can you get to the acorn with just one `W` block?
      courseB_iceage_loops3_2019: Can you get to the acorn with just one `W` block?
      courseB_iceage_loops4: Add one more block to get Scrat all the way to the acorn!
      courseB_iceage_loops4_2019: Add one more block to get Scrat all the way to the
        acorn!
      courseB_iceage_loops6: Can you add a loop to get to the acorn?
      courseB_iceage_loops6_2019: Can you add a loop to get to the acorn?
      courseB_iceage_loops7: 'Scrat really wants that acorn! '
      courseB_iceage_loops7_2019: 'Scrat really wants that acorn! '
      courseB_iceage_loops8: 'Can you fix this code? '
      courseB_iceage_loops8_2019: 'Can you fix this code? '
      courseB_iceage_loops9: The acorn is so far away! Can you use loops to help Scrat
        get there?
      courseB_iceage_loops9_2019: The acorn is so far away! Can you use loops to help
        Scrat get there?
      courseB_maze_seq1: "Play with these blocks to see what they make the bird do!
        \n\nGet the bird to the pig to complete the level."
      courseB_maze_seq10: Fix the bugs to get the bird to the pig.
      courseB_maze_seq10_2018: Fix the bugs to get Scrat to the acorn.
      courseB_maze_seq10_2019: Fix the bugs to get Scrat to the acorn.
      courseB_maze_seq11: It's all you!  Get the bird to the pig.
      courseB_maze_seq11_2018: It's all you!  Get Scrat to the acorn.
      courseB_maze_seq11_2019: It's all you!  Get Scrat to the acorn.
      courseB_maze_seq12: Now get that pig any way you can!
      courseB_maze_seq12_2018: Now get that acorn any way you can!
      courseB_maze_seq12_2019: Now get that acorn any way you can!
      courseB_maze_seq1_2018: "Play with these blocks to see what they make Scrat
        do! \n\nGet Scrat to the acorn to complete the level."
      courseB_maze_seq1_2019: "Play with these blocks to see what they make Scrat
        do! \n\nGet Scrat to the acorn to complete the level."
      courseB_maze_seq2: _"A bug! Fix the code to get me to the pig."_
      courseB_maze_seq3: '"Fix the code to get me to the pig!"'
      courseB_maze_seq4: Add 2 blocks to get the bird to the pig.
      courseB_maze_seq4_2018: Use **2** movement blocks to get the Scrat to the acorn.
      courseB_maze_seq4_2019: Use **2** movement blocks to get the Scrat to the acorn.
      courseB_maze_seq5: Now try this puzzle from the start!
      courseB_maze_seq5_2018: This puzzle is a little tricky!
      courseB_maze_seq5_2019: This puzzle is a little tricky!
      courseB_maze_seq6: Move one way, then another to get the bird to the pig!
      courseB_maze_seq6_2018: Move one way, then another to get Scrat to the acorn!
      courseB_maze_seq6_2019: Move one way, then another to get Scrat to the acorn!
      courseB_maze_seq7: Figure out what is missing and then add blocks to get the
        bird to the pig!
      courseB_maze_seq7_2018: Figure out what is missing and then add blocks to get
        Scrat to the acorn!
      courseB_maze_seq7_2019: Figure out what is missing and then add blocks to get
        Scrat to the acorn!
      courseB_maze_seq8: Your turn!  What do you need to do to get the bird to the
        pig?
      courseB_maze_seq8_2018: Your turn!  What do you need to do to get Scrat to the
        acorn?
      courseB_maze_seq8_2019: Your turn!  What do you need to do to get Scrat to the
        acorn?
      courseB_maze_seq9: 'Challenge: Move around the TNT to get the bird to the pig.'
      courseB_maze_seq9_2018: 'Challenge: Move around the broken ice to get Scrat
        to the acorn.'
      courseB_maze_seq9_2019: 'Challenge: Move around the broken ice to get Scrat
        to the acorn.'
      courseB_maze_seq_challenge1: Can you find a path before you run out of blocks?
      courseB_maze_seq_challenge1_2018: Can you find a path before you run out of
        blocks?
      courseB_maze_seq_challenge1_2019: Can you find a path before you run out of
        blocks?
      courseB_maze_seq_challenge2: Debuguj ten poziom. Te bloki są poprawne, ale w
        złej kolejności!
      courseB_maze_seq_challenge2_2018: Debuguj ten poziom. Te bloki są poprawne,
        ale w złej kolejności!
      courseB_maze_seq_challenge2_2019: Debuguj ten poziom. Te bloki są poprawne,
        ale w złej kolejności!
      courseB_playLab_events1: See if you can figure out what each block does.
      courseB_playLab_events1_2018: See if you can figure out what each block does.
      courseB_playLab_events1_2019: See if you can figure out what each block does.
      courseB_playlab_events2: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events2_2018: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events2_2019: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events3: Use an event to make Daisy the Dragon switch to a random
        mood when you click on her.
      courseB_playlab_events3_2018: Use an event to make Daisy the Dragon switch to
        a random mood when you click on her.
      courseB_playlab_events3_2019: Use an event to make Daisy the Dragon switch to
        a random mood when you click on her.
      courseB_playlab_events4: Knight time!  Add an event so that the knight moves
        toward the dragon when the left arrow is clicked.
      courseB_playlab_events4_2018: Get the dragon to finish this level!
      courseB_playlab_events4_2019: Get the dragon to finish this level!
      courseB_playlab_events5: Now add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events5_2018: Add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events5_2019: Add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events6: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events6_2018: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events6_2019: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events7: Make this game fun by setting the knight to vanish
        when he runs into the dragon on his way to get the flags!  Play a sound when
        they collide to make it feel more real.
      courseB_playlab_events7_2018: "1.  Set the knight to vanish when he runs into
        the dragon.    \n2.  Play a sound when they collide to make it feel more real.
        \ "
      courseB_playlab_events7_2019: "1.  Set the knight to vanish when he runs into
        the dragon.    \n2.  Play a sound when they collide to make it feel more real.
        \ "
      courseB_playlab_eventsFP: Use your imagination. What can you do to make this
        game more fun?
      courseB_playlab_eventsFP_2018: "**Free play:** Use your imagination. What can
        you do to make this game more fun?"
      courseB_playlab_eventsFP_2019: "**Free play:** Use your imagination. What can
        you do to make this game more fun?"
      courseB_playlab_events_challenge1: 'Make the animals move down when you press
        ▼. '
      courseB_playlab_events_challenge1_2018: 'Make the animals move down when you
        press ▼. '
      courseB_playlab_events_challenge1_2019: 'Make the animals move down when you
        press ▼. '
      courseB_playlab_events_challenge2: Make the animals disappear when you click
        on them.
      courseB_playlab_events_challenge2_2018: Make the animals disappear when you
        click on them.
      courseB_playlab_events_challenge2_2019: Make the animals disappear when you
        click on them.
      courseB_starWars_prog1: '"Go get the scrap metal, BB-8!"'
      courseB_starWars_prog10: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog10_2018: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog10_2019: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog11: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog11_2018: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog11_2019: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog1_2018: '"Go get the scrap metal, BB-8!"'
      courseB_starWars_prog1_2019: '"Go get the scrap metal, BB-8!"'
      courseB_starWars_prog2: Get all the metal.
      courseB_starWars_prog2_2018: Get all the metal.
      courseB_starWars_prog2_2019: Get all the metal.
      courseB_starWars_prog3: Get all the scrap metal
      courseB_starWars_prog3_2018: Get all the scrap metal
      courseB_starWars_prog3_2019: Get all the scrap metal
      courseB_starWars_prog4: Get all the scrap metal
      courseB_starWars_prog4_2018: Get all the scrap metal
      courseB_starWars_prog4_2019: Get all the scrap metal
      courseB_starWars_prog5: Get the scrap metal
      courseB_starWars_prog5_2018: Get the scrap metal
      courseB_starWars_prog5_2019: Get the scrap metal
      courseB_starWars_prog6: Get all the scrap metal
      courseB_starWars_prog6_2018: Get all the scrap metal
      courseB_starWars_prog6_2019: Get all the scrap metal
      courseB_starWars_prog7: Go get it!
      courseB_starWars_prog7_2018: Go get it!
      courseB_starWars_prog7_2019: Go get it!
      courseB_starWars_prog8: "**Challenge:** Help BB-8 gather the glowing scrap metal"
      courseB_starWars_prog8_2018: "**Challenge:** Help BB-8 gather the glowing scrap
        metal"
      courseB_starWars_prog8_2019: "**Challenge:** Help BB-8 gather the glowing scrap
        metal"
      courseB_starWars_prog9: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog9_2018: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog9_2019: Help BB-8 gather the glowing scrap metal
      courseC19_playLab_EOC1: Choose a background and map, and pick an actor to be
        your game's hero.
      courseC19_playLab_EOC2: Use events and actions to make your hero move. Get to
        the targets.
      courseC19_playLab_EOC3: Add two or more additional actors to your game and make
        them move.
      courseC19_playLab_EOC4: Find some interesting ways to change the score in your
        game. Get the score to show something other than 0 to continue.
      courseC19_playLab_EOC5: Teraz poświęć trochę czasu, żeby upewnić się, że gra
        działa tak, jak chcesz. Ustaw sposób w jaki wygrywa się lub przegrywa twoją
        grę, a następnie zagraj, aby spełnić jeden z tych warunków.
      courseC19_playLab_EOC6: You've finished! Now you can play your game or share
        it with your friends and classmates!
      courseC_PlayLab_events1: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events1_2018: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events1_2019: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events2: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events2_2018: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events2_2019: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events3: Czy możesz napisać program, który sprawia, że Jorge
        (postać 1) idzie w kierunku Kota Oliwek?
      courseC_PlayLab_events3_2018: Czy możesz napisać program, który sprawia, że
        Jorge (postać 1) idzie w kierunku Kota Oliwek?
      courseC_PlayLab_events3_2019: Czy możesz napisać program, który sprawia, że
        Jorge (postać 1) idzie w kierunku Kota Oliwek?
      courseC_PlayLab_events4: Can you write a program that makes Jorge (actor 1)
        move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches her?
      courseC_PlayLab_events4_2018: Can you write a program that makes Jorge (actor
        1) move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches
        her?
      courseC_PlayLab_events4_2019: Can you write a program that makes Jorge (actor
        1) move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches
        her?
      courseC_PlayLab_events5: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events5_2018: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events5_2019: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events6: Now, write a program to make Waddles the Penguin move
        around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events6_2018: Now, write a program to make Waddles the Penguin
        move around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events6_2019: Now, write a program to make Waddles the Penguin
        move around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events7: The `repeat forever` block allows you to run code over
        and over forever.  Use this block to move Chomp the Dino (actor 2) up and
        down by 400 pixels forever.
      courseC_PlayLab_events7_2018: The `repeat forever` block allows you to run code
        over and over forever.  Use this block to move Chomp the Dino (actor 2) up
        and down by 400 pixels forever.
      courseC_PlayLab_events7_2019: The `repeat forever` block allows you to run code
        over and over forever.  Use this block to move Chomp the Dino (actor 2) up
        and down by 400 pixels forever.
      courseC_PlayLab_events8: "Can you have Waddles (actor 1) play a \"hit\" sound
        and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the game
        to make that happen."
      courseC_PlayLab_events8_2018: "Can you have Waddles (actor 1) play a \"hit\"
        sound and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the
        game to make that happen."
      courseC_PlayLab_events8_2019: "Can you have Waddles (actor 1) play a \"hit\"
        sound and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the
        game to make that happen."
      courseC_PlayLab_events9: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_events9_2018: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_events9_2019: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_eventsA: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_2018: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_2019: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_embed_2019: Let's play a game. Score 5 points by moving
        the Penguin to the Octopus!
      courseC_PlayLab_eventsFP: Create your own story. When you're done, click "Finish"
        to share with friends. See story ideas in the hints.
      courseC_PlayLab_eventsFP_2018: Create your own story. When you're done, click
        "Finish" to share with friends. See story ideas in the hints.
      courseC_PlayLab_eventsFP_2019: Create your own story. When you're done, click
        "Finish" to share with friends. See story ideas in the hints.
      courseC_PlayLab_events_challenge1: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_PlayLab_events_challenge1_2018: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_PlayLab_events_challenge1_2019: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_artist_loop1: Let's add some pizazz!
      courseC_artist_loop1_2018: Let's add some pizazz with a `set pattern` block.
      courseC_artist_loop1_2019: Let's add some pizazz with a `set pattern` block.
      courseC_artist_loops1a: 'Get the artist to the center of the play area, then
        draw a bird using a sticker. '
      courseC_artist_loops1a_2018: 'Get the artist to the center of the play area,
        then draw a bird using a sticker. '
      courseC_artist_loops1a_2019: 'Get the artist to the center of the play area,
        then draw a sticker. '
      courseC_artist_loops1b_2019: 'Change the direction your sticker is facing by
        adding a `turn` command to your code. '
      courseC_artist_loops2a: Now, use a loop to spin your bird around 12 times with
        a 30 degree turn.
      courseC_artist_loops2a_2018: Now, use a loop to spin your bird around 12 times
        with a 30 degree turn.
      courseC_artist_loops2a_2019: Now, use a loop to make more copies of your sticker.
        Try changing the numbers in the turn and repeat blocks to make different patterns.
      courseC_artist_loops3a: Now add a bat!
      courseC_artist_loops3a_2018: Now add a bat!
      courseC_artist_loops3a_2019: Now add a second sticker!
      courseC_artist_loops4a: Try jumping forward by 75 pixels.
      courseC_artist_loops4a_2018: Try jumping forward by 75 pixels.
      courseC_artist_loops4a_2019: Edit your code so that you jump forward between
        drawing the two stickers.
      courseC_artist_loops5a: Spróbuj nowych nalepek!
      courseC_artist_loops5a_2018: Spróbuj nowych nalepek!
      courseC_artist_loops5a_2019: Spróbuj nowych nalepek!
      courseC_artist_loops5b: Spróbuj dodać linie!
      courseC_artist_loops5b_2018: Spróbuj dodać linie!
      courseC_artist_loops5b_2019: Spróbuj dodać linie!
      courseC_artist_loops6a: Dodaj kolejną nalepkę!
      courseC_artist_loops6a_2018: Dodaj kolejną nalepkę!
      courseC_artist_loops6a_2019: Dodaj kolejną nalepkę!
      courseC_artist_loops7a: Baw się pętlami i kątami.
      courseC_artist_loops7a_2018: Baw się pętlami i kątami.
      courseC_artist_loops7a_2019: Baw się pętlami i kątami.
      courseC_artist_loops8a: A teraz spróbuj czegoś na własną rękę!
      courseC_artist_loops8a_2018: A teraz spróbuj czegoś na własną rękę!
      courseC_artist_loops8a_2019: A teraz spróbuj czegoś na własną rękę!
      courseC_artist_loopsPre1a: Time to spin that line around!
      courseC_artist_loopsPre1a_2018: Time to spin that line around!
      courseC_artist_loopsPre1a_2019: Time to spin that line around!
      courseC_artist_loopsPrePre1a: 'Get the artist to the center of the play area,
        then draw a line. '
      courseC_artist_loopsPrePre1a_2018: 'Get the artist to the center of the play
        area, then draw a line. '
      courseC_artist_loopsPrePre1a_2019: 'Get the artist to the center of the play
        area, then draw a line. '
      courseC_artist_prog1: Play with the blocks in the toolbox to see what they do!
      courseC_artist_prog1_2018: Play with the blocks in the toolbox to see what they
        do!
      courseC_artist_prog1_2019: Play with the blocks in the toolbox to see what they
        do!
      courseC_artist_prog2: Drag blocks onto the screen to have the artist draw over
        the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog2_2018: Drag blocks onto the screen to have the artist draw
        over the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog2_2019: Drag blocks onto the screen to have the artist draw
        over the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog3: Each side of the inner square is 100 pixels and all of
        the angles are 90 degrees.
      courseC_artist_prog3_2018: Each side of the inner square is 100 pixels and all
        of the angles are 90 degrees.
      courseC_artist_prog3_2019: Each side of the inner square is 100 pixels and all
        of the angles are 90 degrees.
      courseC_artist_prog4: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog4_2018: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog4_2019: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog5: 'Ten dom potrzebuje dachu ! Narysuj trójkąt. Wskazówka:
        Wszystkie trzy boki mają taką samą długość.'
      courseC_artist_prog5_2018: 'Ten dom potrzebuje dachu ! Narysuj trójkąt. Wskazówka:
        Wszystkie trzy boki mają taką samą długość.'
      courseC_artist_prog5_2019: 'Ten dom potrzebuje dachu ! Narysuj trójkąt. Wskazówka:
        Wszystkie trzy boki mają taką samą długość.'
      courseC_artist_prog6: Draw this diamond with 200 pixel sides.
      courseC_artist_prog6_2018: Draw this diamond with 200 pixel sides.
      courseC_artist_prog6_2019: Draw this diamond with 200 pixel sides.
      courseC_artist_prog7: "**Challenge:** This tag is a special one!  Can you figure
        out how to draw the outline?"
      courseC_artist_prog7_2018: "**Challenge:** This tag is a special one!  Can you
        figure out how to draw the outline?"
      courseC_artist_prog7_2019: "**Challenge:** This tag is a special one!  Can you
        figure out how to draw the outline?"
      courseC_artist_prog8: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog8_2018: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog8_2019: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog_challenge1: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge1_2018: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge1_2019: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge2a: _Pomóż mi narysować żółte linie na tej drodze!_
      courseC_artist_prog_challenge2a_2018: _Pomóż mi narysować żółte linie na tej
        drodze!_
      courseC_artist_prog_challenge2a_2019: _Pomóż mi narysować żółte linie na tej
        drodze!_
      courseC_collector_loops_challenge2: Zbierz co najmniej **5** części skarbu!
      courseC_collector_loops_challenge2_2018: Zbierz co najmniej **5** części skarbu!
      courseC_collector_loops_challenge2_2019: Zbierz co najmniej **5** części skarbu!
      courseC_collector_prog1: Play around with the blocks to see if you can help
        Laurel collect some treasure.
      courseC_collector_prog1_2018: Play around with the blocks to see if you can
        help Laurel collect some treasure.
      courseC_collector_prog1_2019: Play around with the blocks to see if you can
        help Laurel collect some treasure.
      courseC_collector_prog2: Move Laurel to the treasure, then use `collect` to
        pick it up.
      courseC_collector_prog2_2018: Move Laurel to the treasure, then use `collect`
        to pick it up.
      courseC_collector_prog2_2019: Move Laurel to the treasure, then use `collect`
        to pick it up.
      courseC_collector_prog3: Order these blocks to collect the treasure and solve
        the puzzle.
      courseC_collector_prog3_2018: Order these blocks to collect the treasure and
        solve the puzzle.
      courseC_collector_prog3_2019: Order these blocks to collect the treasure and
        solve the puzzle.
      courseC_collector_prog4: Put these blocks in order to collect all of the treasure
        and solve the puzzle.
      courseC_collector_prog4_2018: Put these blocks in order to collect all of the
        treasure and solve the puzzle.
      courseC_collector_prog4_2019: Put these blocks in order to collect all of the
        treasure and solve the puzzle.
      courseC_collector_prog5: These blocks are in the wrong order. Can you fix them?
      courseC_collector_prog5_2018: These blocks are in the wrong order. Can you fix
        them?
      courseC_collector_prog5_2019: These blocks are in the wrong order. Can you fix
        them?
      courseC_collector_prog6: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog6_2018: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog6_2019: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog7: Use blocks from the toolbox to collect all of the treasure.
      courseC_collector_prog7_2018: Use blocks from the toolbox to collect all of
        the treasure.
      courseC_collector_prog7_2019: Use blocks from the toolbox to collect all of
        the treasure.
      courseC_collector_prog8: _"Keep up the good work! Help me collect all of the
        treasure."_
      courseC_collector_prog8_2018: _"Keep up the good work! Help me collect all of
        the treasure."_
      courseC_collector_prog8_2019: _"Keep up the good work! Help me collect all of
        the treasure."_
      courseC_collector_prog9: _"Zbierzmy cały skarb!"_
      courseC_collector_prog9_2018: _"Zbierzmy cały skarb!"_
      courseC_collector_prog9_2019: _"Zbierzmy cały skarb!"_
      courseC_collector_prog_challenge1: Spójrz uważnie! Czy potrafisz zebrać wszystkie
        _10_ części skarbu?
      courseC_collector_prog_challenge1_2018: Spójrz uważnie! Czy potrafisz zebrać
        wszystkie _10_ części skarbu?
      courseC_collector_prog_challenge1_2019: Spójrz uważnie! Czy potrafisz zebrać
        wszystkie _10_ części skarbu?
      courseC_collector_prog_challenge2: Zbierz co najmniej **10** części skarbu,
        aby ukończyć to wyzwanie!
      courseC_collector_prog_challenge2_2018: Zbierz co najmniej **10** części skarbu,
        aby ukończyć to wyzwanie!
      courseC_collector_prog_challenge2_2019: Zbierz co najmniej **10** części skarbu,
        aby ukończyć to wyzwanie!
      courseC_data wizard: "Press Run. \nThe wizard will make animals appear. \n\nCount
        them. \nWhat do you notice?"
      courseC_flappy_events1: Dołącz block "pofruń na normalną wysokość" do zdarzenia
        "po kliknięciu", a następnie naciśnij "Uruchom". Kliknij lub dotknij ekranu,
        aby przesunąć Flappy'ego do miejsca docelowego.
      courseC_flappy_events10: 'Stwórz swoją własną grę z Flappym! '
      courseC_flappy_events10_2018: 'Stwórz swoją własną grę z Flappym! '
      courseC_flappy_events10_2019: 'Stwórz swoją własną grę z Flappym! '
      courseC_flappy_events1_2018: Dołącz block "pofruń na normalną wysokość" do zdarzenia
        "po kliknięciu", a następnie naciśnij "Uruchom". Kliknij lub dotknij ekranu,
        aby przesunąć Flappy'ego do miejsca docelowego.
      courseC_flappy_events1_2019: Dołącz block "pofruń na normalną wysokość" do zdarzenia
        "po kliknięciu", a następnie naciśnij "Uruchom". Kliknij lub dotknij ekranu,
        aby przesunąć Flappy'ego do miejsca docelowego.
      courseC_flappy_events2: Spróbuj dodać blok, który ustawia poziom prędkości po
        naciśnięciu przycisku "Uruchom".  Zagraj w grę i doleć do obiektu docelowego,
        aby kontynuować.
      courseC_flappy_events2_2018: Spróbuj dodać blok, który ustawia poziom prędkości
        po naciśnięciu przycisku "Uruchom".  Zagraj w grę i doleć do obiektu docelowego,
        aby kontynuować.
      courseC_flappy_events2_2019: Spróbuj dodać blok, który ustawia poziom prędkości
        po naciśnięciu przycisku "Uruchom".  Zagraj w grę i doleć do obiektu docelowego,
        aby kontynuować.
      courseC_flappy_events3: Dołącz blok "zakończ grę" do zdarzenia "kiedy spadnie
        na ziemię". Zagraj w grę i uderz Flappym w ziemię aby kontynuować.
      courseC_flappy_events3_2018: Dołącz blok "zakończ grę" do zdarzenia "kiedy spadnie
        na ziemię". Zagraj w grę i uderz Flappym w ziemię aby kontynuować.
      courseC_flappy_events3_2019: Dołącz blok "zakończ grę" do zdarzenia "kiedy spadnie
        na ziemię". Zagraj w grę i uderz Flappym w ziemię aby kontynuować.
      courseC_flappy_events4: Dołącz blok do zdarzenia "kiedy uderzy w przeszkodę"
        tak, żeby gra się zakończyła, kiedy Flappy rozbije się na pierwszym zestawie
        rur.
      courseC_flappy_events4_2018: Dołącz blok do zdarzenia "kiedy uderzy w przeszkodę"
        tak, żeby gra się zakończyła, kiedy Flappy rozbije się na pierwszym zestawie
        rur.
      courseC_flappy_events4_2019: Dołącz blok do zdarzenia "kiedy uderzy w przeszkodę"
        tak, żeby gra się zakończyła, kiedy Flappy rozbije się na pierwszym zestawie
        rur.
      courseC_flappy_events5: Dołącz blok do zdarzenia "kiedy minie przeszkodę", a
        następnie naciśnij "Uruchom" i zdobądź punkt przelatując Flappym przez pierwszy
        zestaw rur.
      courseC_flappy_events5_2018: Dołącz blok do zdarzenia "kiedy minie przeszkodę",
        a następnie naciśnij "Uruchom" i zdobądź punkt przelatując Flappym przez pierwszy
        zestaw rur.
      courseC_flappy_events5_2019: Dołącz blok do zdarzenia "kiedy minie przeszkodę",
        a następnie naciśnij "Uruchom" i zdobądź punkt przelatując Flappym przez pierwszy
        zestaw rur.
      courseC_flappy_events6: Sprawdź, czy potrafisz zdobyć punkt, gdy Flappy fruwa
        na małą lub dużą wysokość.
      courseC_flappy_events6_2018: Sprawdź, czy potrafisz zdobyć punkt, gdy Flappy
        fruwa na małą lub dużą wysokość.
      courseC_flappy_events6_2019: Sprawdź, czy potrafisz zdobyć punkt, gdy Flappy
        fruwa na małą lub dużą wysokość.
      courseC_flappy_events7: Następnie, spróbuj zmienić scenę dołączając inny blok
        do bloku "po uruchomieniu".
      courseC_flappy_events7_2018: Następnie, spróbuj zmienić scenę dołączając inny
        blok do bloku "po uruchomieniu".
      courseC_flappy_events7_2019: Następnie, spróbuj zmienić scenę dołączając inny
        blok do bloku "po uruchomieniu".
      courseC_flappy_events8: Ustaw **losową** scenę podczas innego zdarzenia... na
        przykład po minięciu przeszkody.
      courseC_flappy_events8_2018: Ustaw **losową** scenę podczas innego zdarzenia...
        na przykład po minięciu przeszkody.
      courseC_flappy_events8_2019: Ustaw **losową** scenę podczas innego zdarzenia...
        na przykład po minięciu przeszkody.
      courseC_flappy_events9: Po uderzeniu w przeszkodę, zamiast kończyć grę, spróbuj
        ustawić wynik z powrotem na 0.
      courseC_flappy_events9_2018: Po uderzeniu w przeszkodę, zamiast kończyć grę,
        spróbuj ustawić wynik z powrotem na 0.
      courseC_flappy_events9_2019: Po uderzeniu w przeszkodę, zamiast kończyć grę,
        spróbuj ustawić wynik z powrotem na 0.
      courseC_harvester_loops1: Use loops to pick all of the pumpkins.
      courseC_harvester_loops10: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops10_2018: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops10_2019: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops11: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops11_2018: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops11_2019: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops1_2018: Use loops to pick all of the pumpkins.
      courseC_harvester_loops1_2019: Use loops to pick all of the pumpkins.
      courseC_harvester_loops2: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops2_2018: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops2_2019: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops3: Collect all of the pumpkins.
      courseC_harvester_loops3_2018: Collect all of the pumpkins.
      courseC_harvester_loops3_2019: Collect all of the pumpkins.
      courseC_harvester_loops4: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops4_2018: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops4_2019: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops5: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops5_2018: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops5_2019: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops6: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops6_2018: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops6_2019: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops7: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops7_2018: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops7_2019: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops8: "**Challenge:** Collect all of the corn and all of
        the pumpkins."
      courseC_harvester_loops8_2018: "**Challenge:** Collect all of the corn and all
        of the pumpkins."
      courseC_harvester_loops8_2019: "**Challenge:** Collect all of the corn and all
        of the pumpkins."
      courseC_harvester_loops9: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops9_2018: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops9_2019: Zbierz całą kukurydzę o wszystkie dynie.
      courseC_harvester_loops_challenge1a: Zbierz całą kukurydzę.
      courseC_harvester_loops_challenge1a_2018: Zbierz całą kukurydzę.
      courseC_harvester_loops_challenge1a_2019: Zbierz całą kukurydzę.
      courseC_harvester_loops_challenge2: Zbierz wszystkie sałaty. Unikaj drzew i
        pól!
      courseC_harvester_loops_challenge2_2018: Zbierz wszystkie sałaty. Unikaj drzew
        i pól!
      courseC_harvester_loops_challenge2_2019: Zbierz wszystkie sałaty. Unikaj drzew
        i pól!
      courseC_maze_debugging1: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging1_2018: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging1_2019: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging2: Use your debugging skills to get Scrat to the acorn.
      courseC_maze_debugging2_2018: Use your debugging skills to get Scrat to the
        acorn.
      courseC_maze_debugging2_2019: Use your debugging skills to get Scrat to the
        acorn.
      courseC_maze_debugging3: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging3_2018: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging3_2019: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging4: Someone has their directions mixed up! Can you help?
      courseC_maze_debugging4_2018: Someone has their directions mixed up! Can you
        help?
      courseC_maze_debugging4_2019: Someone has their directions mixed up! Can you
        help?
      courseC_maze_debugging5: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging5_2018: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging5_2019: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging6: Figure out what is wrong and get Scrat to the acorn.
      courseC_maze_debugging6_2018: Figure out what is wrong and get Scrat to the
        acorn.
      courseC_maze_debugging6_2019: Figure out what is wrong and get Scrat to the
        acorn.
      courseC_maze_debugging7: "**Challenge:** Debug this level by rearranging, adding,
        and deleting blocks."
      courseC_maze_debugging7_2018: "**Challenge:** Debug this level by rearranging,
        adding, and deleting blocks."
      courseC_maze_debugging7_2019: "**Challenge:** Debug this level by rearranging,
        adding, and deleting blocks."
      courseC_maze_debugging9: Debug this level to get Scrat to the acorn.
      courseC_maze_debugging9_2018: Debug this level to get Scrat to the acorn.
      courseC_maze_debugging9_2019: Use the blocks in the toolbox to build your program.
        Get the bird to the pig.
      courseC_maze_debugging_challenge1: _"Czy ja właśnie chodzę w kółko?"_
      courseC_maze_debugging_challenge1_2018: _"Czy ja właśnie chodzę w kółko?"_
      courseC_maze_debugging_challenge1_2019: _"Czy ja właśnie chodzę w kółko?"_
      courseC_maze_debugging_challenge2: Help Scrat reach the acorn with only four
        `turn` commands.
      courseC_maze_debugging_challenge2_2018: Help Scrat reach the acorn with only
        four `turn` commands.
      courseC_maze_debugging_challenge2_2019: Help Scrat reach the acorn with only
        four `turn` commands.
      courseC_maze_loops_challenge1a: 'Now Scrat wants to try using loops to find
        his acorn! '
      courseC_maze_loops_challenge1a_2018: 'Now Scrat wants to try using loops to
        find his acorn! '
      courseC_maze_loops_challenge1a_2019: 'Now Scrat wants to try using loops to
        find his acorn! '
      courseC_maze_programming1: W przypadku tej łamigłówki, przeciągnij wszystkie
        bloki razem i kliknij Uruchom, aby zobaczyć, jak to działa!
      courseC_maze_programming1_2018: W przypadku tej łamigłówki, przeciągnij wszystkie
        bloki razem i kliknij Uruchom, aby zobaczyć, jak to działa!
      courseC_maze_programming1_2019: W przypadku tej łamigłówki, przeciągnij wszystkie
        bloki razem i kliknij Uruchom, aby zobaczyć, jak to działa!
      courseC_maze_programming2: Przeciągnij z przybornika dodatkowy blok "idź do
        przodu", aby ukończyć kod.
      courseC_maze_programming2_2018: Przeciągnij z przybornika dodatkowy blok "idź
        do przodu", aby ukończyć kod.
      courseC_maze_programming2_2019: Przeciągnij z przybornika dodatkowy blok "idź
        do przodu", aby ukończyć kod.
      courseC_maze_programming3: Jest jeden dodatkowy blok, który spowoduje wypadek
        ptaka. Wyrzuć go, przeciągając go z powrotem do przybornika.
      courseC_maze_programming3_2018: Jest jeden dodatkowy blok, który spowoduje wypadek
        ptaka. Wyrzuć go, przeciągając go z powrotem do przybornika.
      courseC_maze_programming3_2019: Jest jeden dodatkowy blok, który spowoduje wypadek
        ptaka. Wyrzuć go, przeciągając go z powrotem do przybornika.
      courseC_maze_programming4: Unikaj TNT lub pióra będą latać!
      courseC_maze_programming4_2018: Unikaj TNT lub pióra będą latać!
      courseC_maze_programming4_2019: Unikaj TNT lub pióra będą latać!
      courseC_maze_programming5: Unikaj TNT.
      courseC_maze_programming5_2018: Unikaj TNT.
      courseC_maze_programming5_2019: Unikaj TNT.
      courseC_maze_programming6: '"Zachowaj spokój i pomóż mi znaleźć tę złą świnkę.
        W przeciwnym razie mogę się rozgniewać!"'
      courseC_maze_programming6_2018: '"Zachowaj spokój i pomóż mi znaleźć tę złą
        świnkę. W przeciwnym razie mogę się rozgniewać!"'
      courseC_maze_programming6_2019: '"Zachowaj spokój i pomóż mi znaleźć tę złą
        świnkę. W przeciwnym razie mogę się rozgniewać!"'
      courseC_maze_programming7: "**Wyzwanie:** Ten kod zawiera wiele błędów. Musisz
        usunąć niektóre bloki i dodać inne."
      courseC_maze_programming7_2018: "**Wyzwanie:** Ten kod zawiera wiele błędów.
        Musisz usunąć niektóre bloki i dodać inne."
      courseC_maze_programming7_2019: "**Wyzwanie:** Ten kod zawiera wiele błędów.
        Musisz usunąć niektóre bloki i dodać inne."
      courseC_maze_programming8: _„Zachowaj spokój i pomóż mi znaleźć złą świnkę."_
      courseC_maze_programming8_2018: _„Zachowaj spokój i pomóż mi znaleźć złą świnkę."_
      courseC_maze_programming8_2019: _„Zachowaj spokój i pomóż mi znaleźć złą świnkę."_
      courseC_maze_programming8_predict1: _„Zachowaj spokój i pomóż mi znaleźć złą
        świnkę."_
      courseC_maze_programming8_predict1_2018: _„Zachowaj spokój i pomóż mi znaleźć
        złą świnkę."_
      courseC_maze_programming8_predict1_2019: _„Zachowaj spokój i pomóż mi znaleźć
        złą świnkę."_
      courseC_maze_programming9: _„Teraz pomóż mi zakraść się na świnkę, w jakikolwiek
        sposób chcesz!”_
      courseC_maze_programming9_2018: _„Teraz pomóż mi zakraść się na świnkę, w jakikolwiek
        sposób chcesz!”_
      courseC_maze_programming9_2019: _„Teraz pomóż mi zakraść się na świnkę, w jakikolwiek
        sposób chcesz!”_
      courseC_maze_programming_challenge1: 'The pig is hiding, and the goal is to
        find it. '
      courseC_maze_programming_challenge1_2018: 'The pig is hiding, and the goal is
        to find it. '
      courseC_maze_programming_challenge1_2019: 'The pig is hiding, and the goal is
        to find it. '
      courseC_maze_programming_challenge2: Czasami jest więcej sposobów na rozwiązanie
        tego samego problemu. Czasami szybciej jest się cofnąć niż iść na przód!
      courseC_maze_programming_challenge2_2018: Czasami jest więcej sposobów na rozwiązanie
        tego samego problemu. Czasami szybciej jest się cofnąć niż iść na przód!
      courseC_maze_programming_challenge2_2019: Czasami jest więcej sposobów na rozwiązanie
        tego samego problemu. Czasami szybciej jest się cofnąć niż iść na przód!
      courseC_starWars_loops1: BB-8 will pick up any metal scraps along the path where
        he moves. Use 5 of the same block to get BB-8 to pick up all of the scrap
        metal in the play area.
      courseC_starWars_loops10: Dobrze sobie radzisz! Oby tak dalej!
      courseC_starWars_loops10_2018: Dobrze sobie radzisz! Oby tak dalej!
      courseC_starWars_loops10_2019: Dobrze sobie radzisz! Oby tak dalej!
      courseC_starWars_loops10_predict2: Dobrze sobie radzisz! Oby tak dalej!
      courseC_starWars_loops10_predict2_2018: Dobrze sobie radzisz! Oby tak dalej!
      courseC_starWars_loops10_predict2_2019: Dobrze sobie radzisz! Oby tak dalej!
      courseC_starWars_loops11: You are almost there! This time, choose any path you
        like!
      courseC_starWars_loops11_2018: You are almost there! This time, choose any path
        you like!
      courseC_starWars_loops11_2019: You are almost there! This time, choose any path
        you like!
      courseC_starWars_loops1_2018: BB-8 will pick up any metal scraps along the path
        where he moves. Use 5 of the same block to get BB-8 to pick up all of the
        scrap metal in the play area.
      courseC_starWars_loops1_2019: BB-8 will pick up any metal scraps along the path
        where he moves. Use 5 of the same block to get BB-8 to pick up all of the
        scrap metal in the play area.
      courseC_starWars_loops1_predict1: BB-8 will pick up any metal scraps along the
        path where he moves. Use 5 of the same block to get BB-8 to pick up all of
        the scrap metal in the play area.
      courseC_starWars_loops1_predict1_2018: BB-8 will pick up any metal scraps along
        the path where he moves. Use 5 of the same block to get BB-8 to pick up all
        of the scrap metal in the play area.
      courseC_starWars_loops1_predict1_2019: BB-8 will pick up any metal scraps along
        the path where he moves. Use 5 of the same block to get BB-8 to pick up all
        of the scrap metal in the play area.
      courseC_starWars_loops2: To get all the scrap metal, try creating a loop that
        uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_2018: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_2019: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_copy: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops4: In this puzzle, two `repeat` loops will help you get
        BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops4_2018: In this puzzle, two `repeat` loops will help you
        get BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops4_2019: In this puzzle, two `repeat` loops will help you
        get BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops4_copy: In this puzzle, two `repeat` loops will help you
        get BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops5: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops5_2018: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops5_2019: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops5_copy: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops6: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_2018: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_2019: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_copy: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops7: Can you try to get all the scrap metal using just one
        loop? Try programming it all out then finding the repeating code to put in
        a loop.
      courseC_starWars_loops7_2018: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops7_2019: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops7_copy: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops9: Use what you have learned to pick up all of the scrap
        metal!
      courseC_starWars_loops9_2018: Use what you have learned to pick up all of the
        scrap metal!
      courseC_starWars_loops9_2019: Use what you have learned to pick up all of the
        scrap metal!
      courseD_artist_1_2018: 'Draw a hexagon with **50** pixel long sides.  '
      courseD_artist_1_2018_2019: 'Draw a hexagon with **50** pixel long sides.  '
      courseD_artist_2_2018: Now, turn right by **60** degrees, then draw a straight
        line **150** pixels long and jump back to the center of the play area.
      courseD_artist_2_2018_2019: Now, turn right by **60** degrees, then draw a straight
        line **150** pixels long and jump back to the center of the play area.
      courseD_artist_3_2018: 'Nest all of the code inside of another `repeat` loop
        and run it a total of **6** times. '
      courseD_artist_3_2018_2019: 'Nest all of the code inside of another `repeat`
        loop and run it a total of **6** times. '
      courseD_artist_4_2018: Add a tiny shape to the end of your line!
      courseD_artist_4_2018_2019: Add a tiny shape to the end of your line!
      courseD_artist_5_2018: Play with the snowflakes!
      courseD_artist_5_2018_2019: Play with the snowflakes!
      courseD_artist_6_2018: Try changing your long 150 pixel line into 6 short lines
        of **25** pixels, with little turns at the end.
      courseD_artist_6_2018_2019: Try changing your long 150 pixel line into 6 short
        lines of **25** pixels, with little turns at the end.
      courseD_artist_binary1: "Kod binarny to sposób reprezentowania informacji przy
        użyciu tylko dwóch stanów. Tutaj będziemy używać stanu \"off\" (wyłączony),
        reprezentowanego przez 0, i \"on\" (włączony), reprezentowanego przez 1).
        \\\r \\\r Udostępniliśmy Ci siatkę \"pikseli\", po której możesz chodzić i
        tworzyć wzory przez włączanie pewnych kwadratów. Czy mógłbyś spowodować, by
        artysta narysował \"01010101\" binarnie w pierwszym rzędzie?"
      courseD_artist_binary1_2018: "Kod binarny to sposób reprezentowania informacji
        przy użyciu tylko dwóch stanów. Tutaj będziemy używać stanu \"off\" (wyłączony),
        reprezentowanego przez 0, i \"on\" (włączony), reprezentowanego przez 1).
        \\\r \\\r Udostępniliśmy Ci siatkę \"pikseli\", po której możesz chodzić i
        tworzyć wzory przez włączanie pewnych kwadratów. Czy mógłbyś spowodować, by
        artysta narysował \"01010101\" binarnie w pierwszym rzędzie?"
      courseD_artist_binary1_2019: "Kod binarny to sposób reprezentowania informacji
        przy użyciu tylko dwóch stanów. Tutaj będziemy używać stanu \"off\" (wyłączony),
        reprezentowanego przez 0, i \"on\" (włączony), reprezentowanego przez 1).
        \\\r \\\r Udostępniliśmy Ci siatkę \"pikseli\", po której możesz chodzić i
        tworzyć wzory przez włączanie pewnych kwadratów. Czy mógłbyś spowodować, by
        artysta narysował \"01010101\" binarnie w pierwszym rzędzie?"
      courseD_artist_binary2: Run this code to see how the artist uses binary to draw
        this pattern.
      courseD_artist_binary2_2018: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_artist_binary2_2019: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_artist_binary3: Which of the binary strings below could you loop 8 times
        to draw this image?
      courseD_artist_binary3_2018: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_artist_binary3_2019: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_artist_binary4: Czy potrafisz narysować ten wzorek powtarzając binarny
        łańcuch złożony z trzech cyfr (0 lub 1)?
      courseD_artist_binary4_2018: Czy potrafisz narysować ten wzorek powtarzając
        binarny łańcuch złożony z trzech cyfr (0 lub 1)?
      courseD_artist_binary4_2019: Czy potrafisz narysować ten wzorek powtarzając
        binarny łańcuch złożony z trzech cyfr (0 lub 1)?
      courseD_artist_binary5: "Each binary string below represents one row of this
        picture. \n\nCan you rearrange them so it draws a smiley face instead of a
        frown?"
      courseD_artist_binary5_2018: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_artist_binary5_2019: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_artist_binary6: Który 6-cyfrowy binarny łańcuch, powtórzony 11 razy,
        narysuje ten obraz?
      courseD_artist_binary6_2018: Który 6-cyfrowy binarny łańcuch, powtórzony 11
        razy, narysuje ten obraz?
      courseD_artist_binary6_2019: Który 6-cyfrowy binarny łańcuch, powtórzony 11
        razy, narysuje ten obraz?
      courseD_artist_binary7: Jaki jest najkrótszy łańcuch binarny, który możesz powtórzyć,
        by narysować ten obraz?
      courseD_artist_binary7_2018: Jaki jest najkrótszy łańcuch binarny, który możesz
        powtórzyć, by narysować ten obraz?
      courseD_artist_binary7_2019: Jaki jest najkrótszy łańcuch binarny, który możesz
        powtórzyć, by narysować ten obraz?
      courseD_artist_binary8: Ukończ kod, aby utworzyć ten rysunek.
      courseD_artist_binary8_2018: Ukończ kod, aby utworzyć ten rysunek.
      courseD_artist_binary8_2019: Ukończ kod, aby utworzyć ten rysunek.
      courseD_artist_binary8_predict1: Ukończ kod, aby utworzyć ten rysunek.
      courseD_artist_binary8_predict1_2018: Ukończ kod, aby utworzyć ten rysunek.
      courseD_artist_binary8_predict1_2019: Ukończ kod, aby utworzyć ten rysunek.
      courseD_artist_binaryFP: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binaryFP8: "**Czas na zabawę:** Narysuj binarnie cokolwiek chcesz! "
      courseD_artist_binaryFP_2018: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binaryFP_2019: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binary_challenge1_2018: Możesz użyć tylko binarnych wartości
        (0 lub 1). Spróbuj użyć zagnieżdżonych pętli, aby ukończyć ten rysunek.
      courseD_artist_binary_challenge1_2019: Możesz użyć tylko binarnych wartości
        (0 lub 1). Spróbuj użyć zagnieżdżonych pętli, aby ukończyć ten rysunek.
      courseD_artist_binary_challenge2_2018: Czy jesteś wystarczająco wytrwały, aby
        przywrócić to logo do normy?
      courseD_artist_binary_challenge2_2019: Czy jesteś wystarczająco wytrwały, aby
        przywrócić to logo do normy?
      courseD_artist_nestedLoops1: |-
        Draw a triangle to kickstart this stage.\
        (Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)
      courseD_artist_nestedLoops10: Take the squares from before, but this time only
        make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops10_2018: Take the squares from before, but this time
        only make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops10_2019: Take the squares from before, but this time
        only make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops1_2018: |-
        Draw a triangle to kickstart this stage.\
        (Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)
      courseD_artist_nestedLoops1_2019: |-
        Draw a triangle to kickstart this stage.\
        (Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)
      courseD_artist_nestedLoops1a: 'Now loop the triangle 6 times. '
      courseD_artist_nestedLoops1a_2018: 'Now loop the triangle 6 times. '
      courseD_artist_nestedLoops1a_2019: 'Now loop the triangle 6 times. '
      courseD_artist_nestedLoops2: This time, complete the puzzle with the fewest
        number of blocks possible.
      courseD_artist_nestedLoops2_2018: This time, complete the puzzle with the fewest
        number of blocks possible.
      courseD_artist_nestedLoops2_2019: This time, complete the puzzle with the fewest
        number of blocks possible.
      courseD_artist_nestedLoops3: |-
        Use your new skills to quickly draw the last row of windows for this building.

        The windows are 20 pixel squares, each 20 pixels apart.
      courseD_artist_nestedLoops3_2018: |-
        Use your new skills to quickly draw the last row of windows for this building.

        The windows are 20 pixel squares, each 20 pixels apart.
      courseD_artist_nestedLoops3_2019: |-
        Use your new skills to quickly draw the last row of windows for this building.

        The windows are 20 pixel squares, each 20 pixels apart.
      courseD_artist_nestedLoops4: Great!  Do the same thing with these circles.
      courseD_artist_nestedLoops4_2018: Great!  Do the same thing with these circles.
      courseD_artist_nestedLoops4_2019: Great!  Do the same thing with these circles.
      courseD_artist_nestedLoops5: What happens if you also turn 90 degrees between
        circles?
      courseD_artist_nestedLoops5_2018: What happens if you also turn 90 degrees between
        circles?
      courseD_artist_nestedLoops5_2019: What happens if you also turn 90 degrees between
        circles?
      courseD_artist_nestedLoops7: Use what you've learned to make this drawing.
      courseD_artist_nestedLoops7_2018: Use what you've learned to make this drawing.
      courseD_artist_nestedLoops7_2019: Use what you've learned to make this drawing.
      courseD_artist_nestedLoops8: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops8_2018: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops8_2019: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops9: "\\*\\* Wyzwanie: \\*\\* Czy możesz dojść do tego
        jak utworzyć obrazek taki jak ten?"
      courseD_artist_nestedLoops9_2018: "\\*\\* Wyzwanie: \\*\\* Czy możesz dojść
        do tego jak utworzyć obrazek taki jak ten?"
      courseD_artist_nestedLoops9_2019: "\\*\\* Wyzwanie: \\*\\* Czy możesz dojść
        do tego jak utworzyć obrazek taki jak ten?"
      courseD_artist_nestedLoops9_predict1: "\\*\\* Wyzwanie: \\*\\* Czy możesz dojść
        do tego jak utworzyć obrazek taki jak ten?"
      courseD_artist_nestedLoops9_predict1_2018: "\\*\\* Wyzwanie: \\*\\* Czy możesz
        dojść do tego jak utworzyć obrazek taki jak ten?"
      courseD_artist_nestedLoops9_predict1_2019: "\\*\\* Wyzwanie: \\*\\* Czy możesz
        dojść do tego jak utworzyć obrazek taki jak ten?"
      courseD_artist_nestedLoopsFP: Now it's your turn.  Take the skills you have
        learned and make something that you love!
      courseD_artist_nestedLoopsFP_2018: Now it's your turn.  Take the skills you
        have learned and make something that you love!
      courseD_artist_nestedLoopsFP_2019: Now it's your turn.  Take the skills you
        have learned and make something that you love!
      courseD_artist_nestedLoops_challenge1: "\\*\\* Wyzwanie: \\*\\* Czy możesz dojść
        do tego jak utworzyć obrazek taki jak ten?"
      courseD_artist_nestedLoops_challenge1_2018: "\\*\\* Wyzwanie: \\*\\* Czy możesz
        dojść do tego jak utworzyć obrazek taki jak ten?"
      courseD_artist_nestedLoops_challenge1_2019: "\\*\\* Wyzwanie: \\*\\* Czy możesz
        dojść do tego jak utworzyć obrazek taki jak ten?"
      courseD_artist_nestedLoops_challenge2: Napraw kod, aby utworzyć ten rysunek!
      courseD_artist_nestedLoops_challenge2_2018: Napraw kod, aby utworzyć ten rysunek!
      courseD_artist_nestedLoops_challenge2_2019: Napraw kod, aby utworzyć ten rysunek!
      courseD_artist_project1: 'Narysuj mały kształt, szeroki na  **20 do 50** pikseli.
        To może być kształt jakikolwiek chcesz.  '
      courseD_artist_project1_2018: 'Narysuj mały kształt, szeroki na  **20 do 50**
        pikseli. To może być kształt jakikolwiek chcesz.  '
      courseD_artist_project1_2019: 'Narysuj mały kształt, szeroki na  **20 do 50**
        pikseli. To może być kształt jakikolwiek chcesz.  '
      courseD_artist_project1a: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project1a_2018: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project1a_2019: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project2: Teraz weź swój kształt i narysuj go dwa lub trzy z
        rzędu!
      courseD_artist_project2_2018: Teraz weź swój kształt i narysuj go dwa lub trzy
        z rzędu!
      courseD_artist_project2_2019: Teraz weź swój kształt i narysuj go dwa lub trzy
        z rzędu!
      courseD_artist_project2a: Now, turn around 180 degrees and draw the stair pattern
        again!
      courseD_artist_project2a_2018: Now, turn around 180 degrees and draw the stair
        pattern again!
      courseD_artist_project2a_2019: Now, turn around 180 degrees and draw the stair
        pattern again!
      courseD_artist_project3: Let's spin that line of shapes around!
      courseD_artist_project3_2018: Let's spin that line of shapes around!
      courseD_artist_project3_2019: Let's spin that line of shapes around!
      courseD_artist_project3a: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project3a_2018: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project3a_2019: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project4: Time to layer those shapes!
      courseD_artist_project4_2018: Time to layer those shapes!
      courseD_artist_project4_2019: Time to layer those shapes!
      courseD_artist_project4a: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project4a_2018: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project4a_2019: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project5: Play with the snowflakes!
      courseD_artist_project5_2018: Play with the snowflakes!
      courseD_artist_project5_2019: Play with the snowflakes!
      courseD_artist_ramp11: Now make a square using Artist!
      courseD_artist_ramp12: Use what you've learned to draw this triangle inside
        of a square.
      courseD_autorun_binary2_2019: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_autorun_binary3_2019: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_autorun_binary4_2019: Czy potrafisz narysować ten wzorek powtarzając
        binarny łańcuch złożony z trzech cyfr (0 lub 1)?
      courseD_autorun_binary5_2019: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_autorun_binary6_2019: Który 6-cyfrowy binarny łańcuch, powtórzony 11
        razy, narysuje ten obraz?
      courseD_autorun_binary7_2019: Jaki jest najkrótszy łańcuch binarny, który możesz
        powtórzyć, by narysować ten obraz?
      courseD_autorun_binary8_2019: Ukończ kod, aby utworzyć ten rysunek.
      courseD_autorun_binary8_predict1_2019: Ukończ kod, aby utworzyć ten rysunek.
      courseD_bee_conditionals10: Collect all of the nectar and make all of the honey.
      courseD_bee_conditionals10_2018: Collect all of the nectar and make all of the
        honey.
      courseD_bee_conditionals10_2019: Collect all of the nectar and make all of the
        honey.
      courseD_bee_conditionals1_predict1: Sprawdź, czy pod chmurką jest kwiat. Jeśli
        jest, zbierz nektar.
      courseD_bee_conditionals1_predict1_2018: Sprawdź, czy pod chmurką jest kwiat.
        Jeśli jest, zbierz nektar.
      courseD_bee_conditionals1_predict1_2019: Sprawdź, czy pod chmurką jest kwiat.
        Jeśli jest, zbierz nektar.
      courseD_bee_conditionals1_predict1_copy: Sprawdź, czy pod chmurką jest kwiat.
        Jeśli jest, zbierz nektar.
      courseD_bee_conditionals2: 'Check underneath every cloud to see if it is hiding
        a flower before you get nectar.  '
      courseD_bee_conditionals2_2018: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals2_2019: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals2_copy: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals3: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_2018: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_2019: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_copy: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals4: Get all of the nectar using as few blocks as possible.
      courseD_bee_conditionals4_2018: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals4_2019: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals4_copy: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals5: Collect all of the nectar using as few blocks as
        possible
      courseD_bee_conditionals5_2018: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals5_2019: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals5_copy: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals6: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals6_2018: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals6_2019: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals7: Użyj bloku 'jeśli/w przeciwnym razie', żeby zebrać
        nektar z kwiatów i zrobić miód na plastrze.
      courseD_bee_conditionals7_2018: Użyj bloku 'jeśli/w przeciwnym razie', żeby
        zebrać nektar z kwiatów i zrobić miód na plastrze.
      courseD_bee_conditionals7_2019: Użyj bloku 'jeśli/w przeciwnym razie', żeby
        zebrać nektar z kwiatów i zrobić miód na plastrze.
      courseD_bee_conditionals7_predict2: Użyj bloku 'jeśli/w przeciwnym razie', żeby
        zebrać nektar z kwiatów i zrobić miód na plastrze.
      courseD_bee_conditionals7_predict2_2018: Użyj bloku 'jeśli/w przeciwnym razie',
        żeby zebrać nektar z kwiatów i zrobić miód na plastrze.
      courseD_bee_conditionals7_predict2_2019: Użyj bloku 'jeśli/w przeciwnym razie',
        żeby zebrać nektar z kwiatów i zrobić miód na plastrze.
      courseD_bee_conditionals8: |-
        Zbierz nektar jeśli to kwiatek.
        W przeciwnym razie zrób miód (ponieważ jest to plaster miodu).
      courseD_bee_conditionals8_2018: |-
        Zbierz nektar jeśli to kwiatek.
        W przeciwnym razie zrób miód (ponieważ jest to plaster miodu).
      courseD_bee_conditionals8_2019: |-
        Zbierz nektar jeśli to kwiatek.
        W przeciwnym razie zrób miód (ponieważ jest to plaster miodu).
      courseD_bee_conditionals9: Zbierz cały nektar i zrób cały miód.
      courseD_bee_conditionals9_2018: Zbierz cały nektar i zrób cały miód.
      courseD_bee_conditionals9_2019: Zbierz cały nektar i zrób cały miód.
      courseD_bee_conditionals_challenge1: Zbierz cały nektar i zrób cały miód.
      courseD_bee_conditionals_challenge1_2018: Zbierz cały nektar i zrób cały miód.
      courseD_bee_conditionals_challenge1_2019: Zbierz cały nektar i zrób cały miód.
      courseD_bee_conditionals_challenge2: Zbierz cały nektar i zrób cały miód.
      courseD_bee_conditionals_challenge2_2018: Zbierz cały nektar i zrób cały miód.
      courseD_bee_conditionals_challenge2_2019: Zbierz cały nektar i zrób cały miód.
      courseD_bee_debugging_challenge1: Zobacz, jak pszczółka zbiera nektar. Czy dasz
        radę użyć tego samego wzorca, żeby pomóc pszczółce zrobić cały miód?
      courseD_bee_debugging_challenge1a: Zobacz, jak pszczółka zbiera nektar. Czy
        dasz radę użyć tego samego wzorca, żeby pomóc pszczółce zrobić cały miód?
      courseD_bee_nestedLoops1: Pomóż pszczółce zebrać cały nektar.
      courseD_bee_nestedLoops1_2018: Pomóż pszczółce zebrać cały nektar.
      courseD_bee_nestedLoops1_2019: Pomóż pszczółce zebrać cały nektar.
      courseD_bee_nestedLoops1a: Pomóż pszczółce zebrać cały nektar.
      courseD_bee_nestedLoops1a_2018: Pomóż pszczółce zebrać cały nektar.
      courseD_bee_nestedLoops1a_2019: Pomóż pszczółce zebrać cały nektar.
      courseD_bee_nestedLoops2: Tym raze, pomóż pszczołom zebrać cały nektar używając
        jak najmniejszej liczby bloków.
      courseD_bee_nestedLoops2_2018: Tym raze, pomóż pszczołom zebrać cały nektar
        używając jak najmniejszej liczby bloków.
      courseD_bee_nestedLoops2_2019: Tym raze, pomóż pszczołom zebrać cały nektar
        używając jak najmniejszej liczby bloków.
      courseD_bee_nestedLoops2_predict1: Tym raze, pomóż pszczołom zebrać cały nektar
        używając jak najmniejszej liczby bloków.
      courseD_bee_nestedLoops2_predict1_2018: Tym raze, pomóż pszczołom zebrać cały
        nektar używając jak najmniejszej liczby bloków.
      courseD_bee_nestedLoops2_predict1_2019: Tym raze, pomóż pszczołom zebrać cały
        nektar używając jak najmniejszej liczby bloków.
      courseD_bee_nestedLoops7: 'Challenge: Figure out how to get all of the nectar
        using only the blocks available.'
      courseD_bee_nestedLoops7_2018: 'Challenge: Figure out how to get all of the
        nectar using only the blocks available.'
      courseD_bee_nestedLoops7_2019: 'Challenge: Figure out how to get all of the
        nectar using only the blocks available.'
      courseD_bee_nestedLoops8: "Zbierz cały nektar z każdego kwiatka i zrób miód
        na plastrze miodu. \\\r \\\r Użyj zagnieżdżonej pętli. "
      courseD_bee_nestedLoops8_2018: "Zbierz cały nektar z każdego kwiatka i zrób
        miód na plastrze miodu. \\\r \\\r Użyj zagnieżdżonej pętli. "
      courseD_bee_nestedLoops8_2019: "Zbierz cały nektar z każdego kwiatka i zrób
        miód na plastrze miodu. \\\r \\\r Użyj zagnieżdżonej pętli. "
      courseD_bee_nestedLoops9: Make all of the honey.
      courseD_bee_nestedLoops9_2018: Make all of the honey.
      courseD_bee_nestedLoops9_2019: Make all of the honey.
      courseD_bee_nestedLoops9_predict2: Make all of the honey.
      courseD_bee_nestedLoops9_predict2_2018: Make all of the honey.
      courseD_bee_nestedLoops9_predict2_2019: Make all of the honey.
      courseD_bounce_events10s_2018: 'Attach the `score point` block to the `when
        ball in goal` event and the `score opponent point` block to the `when ball
        misses hand` event to make a game. '
      courseD_bounce_events10s_2019: 'Attach the `score point` block to the `when
        ball in goal` event and the `score opponent point` block to the `when ball
        misses hand` event to make a game. '
      courseD_bounce_events11s_2018: 'Attach the `throw new ball` block in all of
        the places where the game needs a new ball. '
      courseD_bounce_events11s_2019: 'Attach the `throw new ball` block in all of
        the places where the game needs a new ball. '
      courseD_bounce_events12s_2018: Make this game your own. You can change all the
        visuals and the rules. When you're done, click "Finish" to let friends try
        your game on their phones.
      courseD_bounce_events12s_2019: Make this game your own. You can change all the
        visuals and the rules. When you're done, click "Finish" to let friends try
        your game on their phones.
      courseD_bounce_events1s_2018: Attach a block to the "when left arrow" block
        and press "Run" to move the player to the net.
      courseD_bounce_events1s_2019: Attach a block to the "when left arrow" block
        and press "Run" to move the player to the net.
      courseD_bounce_events2s_2018: Now, attach a block to the `when right event`
        so that the hand can get to both baskets.
      courseD_bounce_events2s_2019: Now, attach a block to the `when right event`
        so that the hand can get to both baskets.
      courseD_bounce_events5s_2018: Attach a block to the `when ball hits hand` event
        to ensure the ball reaches the basket.
      courseD_bounce_events5s_2019: Attach a block to the `when ball hits hand` event
        to ensure the ball reaches the basket.
      courseD_bounce_events6s_2018: Attach code to make the ball bounce when it hits
        the wall so you can solve this puzzle.
      courseD_bounce_events6s_2019: Attach code to make the ball bounce when it hits
        the wall so you can solve this puzzle.
      courseD_bounce_events7s_2018: Attach sound blocks to make the net swish when
        you hit the basket and have the whistle blow when the ball misses your hand.
        Bounce the ball until it hits the finish target.
      courseD_bounce_events7s_2019: Attach sound blocks to make the net swish when
        you hit the basket and have the whistle blow when the ball misses your hand.
        Bounce the ball until it hits the finish target.
      courseD_collector_debugging1: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging1a_2018: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging1a_2019: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging2: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging2a_2018: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging2a_2019: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging3: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging3a_2018: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging3a_2019: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging4: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging4a_2018: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging4a_2019: Napraw błędy, aby zebrać wszystkie skarby.
      courseD_collector_debugging5: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging5a_2018: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging5a_2019: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging6: 'Wyzwanie: Użyj swoich umiejętności debugowania,
        aby naprawić błędy i zebrać cały skarb.'
      courseD_collector_debugging6a_2018: 'Wyzwanie: Użyj kodu w obszarze roboczym,
        aby uzyskać co najmniej **6** części skarbu!'
      courseD_collector_debugging6a_2019: 'Wyzwanie: Użyj kodu w obszarze roboczym,
        aby uzyskać co najmniej **6** części skarbu!'
      courseD_collector_debugging_challenge2: Czy jesteś ekspertem od zagnieżdżonych
        pętli? Pokaż czego nauczyłeś się do tej pory i zbierz cały skarb!
      courseD_collector_nested_loops_challenge2: Help the collector reach at least
        two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2_2018: Help the collector reach at
        least two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2_2019: Help the collector reach at
        least two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2a: Help Laurel collect at least two
        piles of treasure.
      courseD_collector_ramp10: Help Laurel collect all of the treasure.
      courseD_collector_ramp8: Help Laurel collect all of the treasure.
      courseD_collector_ramp9: Help Laurel collect all of the treasure.
      courseD_farmer_condLoops1: Use conditionals to make sure that you pick corn
        only when it's there.
      courseD_farmer_condLoops1_2018: Use conditionals to make sure that you pick
        corn only when it's there.
      courseD_farmer_condLoops1_2019: Use conditionals to make sure that you pick
        corn only when it's there.
      courseD_farmer_condLoops2: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops2_2018: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops2_2019: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops3: _"Corn, lettuce, AND pumpkins! Help me harvest them
        all."_
      courseD_farmer_condLoops3_2018: _"Corn, lettuce, AND pumpkins! Help me harvest
        them all."_
      courseD_farmer_condLoops3_2019: _"Corn, lettuce, AND pumpkins! Help me harvest
        them all."_
      courseD_farmer_condLoops4: Help the harvester pick all of the lettuce in each
        cluster before moving on to the next bunch.
      courseD_farmer_condLoops4_2018: Help the harvester pick all of the lettuce in
        each cluster before moving on to the next bunch.
      courseD_farmer_condLoops4_2019: Help the harvester pick all of the lettuce in
        each cluster before moving on to the next bunch.
      courseD_farmer_condLoops5: Zbierz całą kukurydzę oraz sałatę, a na koniec dynie.
      courseD_farmer_condLoops5_2018: Zbierz całą kukurydzę oraz sałatę, a na koniec
        dynie.
      courseD_farmer_condLoops5_2019: Zbierz całą kukurydzę oraz sałatę, a na koniec
        dynie.
      courseD_farmer_condLoops6: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops6_2018: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops6_2019: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops7: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops7_2018: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops7_2019: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops8: Collect all of the corn and lettuce, then pick the
        pumpkin.
      courseD_farmer_condLoops8_2018: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops8_2019: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9: Collect all of the corn and lettuce, then pick the
        pumpkin.
      courseD_farmer_condLoops9_2018: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9_2019: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9_predict1: Collect all of the corn and lettuce, then
        pick the pumpkin.
      courseD_farmer_condLoops9_predict1_2018: Collect all of the corn and lettuce,
        then pick the pumpkin.
      courseD_farmer_condLoops9_predict1_2019: Collect all of the corn and lettuce,
        then pick the pumpkin.
      courseD_farmer_condLoops_challenge1: Collect everything to complete the level.
        Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge1_2018: Collect everything to complete the
        level. Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge1_2019: Collect everything to complete the
        level. Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge2: Zbierz wszystko, aby ukończyć ten poziom.
      courseD_farmer_condLoops_challenge2_2018: Zbierz wszystko, aby ukończyć ten
        poziom.
      courseD_farmer_condLoops_challenge2_2019: Zbierz wszystko, aby ukończyć ten
        poziom.
      courseD_farmer_until_challenge2: Use If/Else blocks to follow the curvy path.
        At each corner, use the `remove 1` command in a loop to clear the piles.
      courseD_farmer_while1: Move to the pile of dirt and use the `remove` block to
        remove it.
      courseD_farmer_while10: 'Flatten all of these piles using as few blocks as possible. '
      courseD_farmer_while10_2018: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_2019: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_predict2: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_predict2_2018: 'Flatten all of these piles using as few
        blocks as possible. '
      courseD_farmer_while10_predict2_2019: 'Flatten all of these piles using as few
        blocks as possible. '
      courseD_farmer_while1_2018: Move to the pile of dirt and use the `remove` block
        to remove it.
      courseD_farmer_while1_2019: Move to the pile of dirt and use the `remove` block
        to remove it.
      courseD_farmer_while2: Move to the hole and fill it with six shovelfuls of dirt,
        using the `fill` block.
      courseD_farmer_while2_2018: Move to the hole and fill it with six shovelfuls
        of dirt, using the `fill` block.
      courseD_farmer_while2_2019: Move to the hole and fill it with six shovelfuls
        of dirt, using the `fill` block.
      courseD_farmer_while3: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while3_2018: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while3_2019: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while4: Help the farmer remove this entire pile using a `while`
        loop.
      courseD_farmer_while4_2018: Help the farmer remove this entire pile using a
        `while` loop.
      courseD_farmer_while4_2019: Help the farmer remove this entire pile using a
        `while` loop.
      courseD_farmer_while4_predict1: Help the farmer remove this entire pile using
        a `while` loop.
      courseD_farmer_while4_predict1_2018: Help the farmer remove this entire pile
        using a `while` loop.
      courseD_farmer_while4_predict1_2019: Help the farmer remove this entire pile
        using a `while` loop.
      courseD_farmer_while5: 'Help me remove all of this dirt. '
      courseD_farmer_while5_2018: 'Help me remove all of this dirt. '
      courseD_farmer_while5_2019: 'Help me remove all of this dirt. '
      courseD_farmer_while6: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while6_2018: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while6_2019: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while7: Fill in the hole at the end of each of these paths.
      courseD_farmer_while7_2018: Fill in the hole at the end of each of these paths.
      courseD_farmer_while7_2019: Fill in the hole at the end of each of these paths.
      courseD_farmer_while8: 'Challenge: Fill all of these holes using as few blocks
        as possible. '
      courseD_farmer_while8_2018: 'Challenge: Fill all of these holes using as few
        blocks as possible. '
      courseD_farmer_while8_2019: 'Challenge: Fill all of these holes using as few
        blocks as possible. '
      courseD_farmer_while9: 'Flatten all of these piles using as few blocks as possible. '
      courseD_farmer_while9_2018: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while9_2019: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while_challenge1: Wypełnij wszystkie dziury i usuń wszystkie
        stosy.
      courseD_farmer_while_challenge1_2018: Wypełnij wszystkie dziury i usuń wszystkie
        stosy.
      courseD_farmer_while_challenge1_2019: Wypełnij wszystkie dziury i usuń wszystkie
        stosy.
      courseD_farmer_while_challenge2: Wypełnij wszystkie dziury i usuń wszystkie
        stosy.
      courseD_harvester_nested_loops_challenge1: '"I need some help on the farm! Help
        me harvest this corn using only the blocks in your toolbox."'
      courseD_harvester_nested_loops_challenge1_2018: '"I need some help on the farm!
        Help me harvest this corn using only the blocks in your toolbox."'
      courseD_harvester_nested_loops_challenge1_2019: '"I need some help on the farm!
        Help me harvest this corn using only the blocks in your toolbox."'
      courseD_iceage_loops1: Help Scrat across the ice to get to the acorn!
      courseD_iceage_loops10: Help Scrat get all the way over to the acorn!
      courseD_iceage_loops10_2019: Help Scrat get all the way over to the acorn!
      courseD_iceage_loops11: Help Scrat get to the acorn!
      courseD_iceage_loops11_2019: Help Scrat get to the acorn!
      courseD_iceage_loops12: Get to the acorn any way you can!
      courseD_iceage_loops12_2019: Get to the acorn any way you can!
      courseD_iceage_loops1_2019: Help Scrat across the ice to get to the acorn!
      courseD_iceage_loops2: Use a `turn left` block to get to the acorn!
      courseD_iceage_loops2_2019: Use a `turn left` block to get to the acorn!
      courseD_iceage_loops3: Can you get to the acorn with just one `move forward`
        block?
      courseD_iceage_loops3_2019: Can you get to the acorn with just one `move forward`
        block?
      courseD_iceage_loops4: Add one more block to get Scrat all the way to the acorn!
      courseD_iceage_loops4_2019: Add one more block to get Scrat all the way to the
        acorn!
      courseD_iceage_loops6: Can you add a loop to get to the acorn?
      courseD_iceage_loops6_2019: Can you add a loop to get to the acorn?
      courseD_iceage_loops7: 'Scrat really wants that acorn! '
      courseD_iceage_loops7_2019: 'Scrat really wants that acorn! '
      courseD_iceage_loops8: 'Can you fix this code? '
      courseD_iceage_loops8_2019: 'Can you fix this code? '
      courseD_iceage_loops9: The acorn is so far away! Can you use loops to help Scrat
        get there?
      courseD_iceage_loops9_2019: The acorn is so far away! Can you use loops to help
        Scrat get there?
      courseD_maze_intro4_2019: Pomóż Redowi dotrzeć do świnki.
      courseD_maze_intro5a_2019: Count the spaces on the grid carefully!
      courseD_maze_intro5c_2019: Uważaj na TNT! Pomóż Redowi dotrzeć do świnki.
      courseD_maze_nestedLoops3: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops3_2018: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops3_2019: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops4: "Doprowadź mnie do słonecznika używając możliwie
        najmniejszej liczby bloków! \\\r \\\r Spróbuj użyć pętli \"powtórz\" wewnątrz
        innej pętli, aby zmniejszyć liczbę potrzebnych bloków."
      courseD_maze_nestedLoops4_2018: "Doprowadź mnie do słonecznika używając możliwie
        najmniejszej liczby bloków! \\\r \\\r Spróbuj użyć pętli \"powtórz\" wewnątrz
        innej pętli, aby zmniejszyć liczbę potrzebnych bloków."
      courseD_maze_nestedLoops4_2019: "Doprowadź mnie do słonecznika używając możliwie
        najmniejszej liczby bloków! \\\r \\\r Spróbuj użyć pętli \"powtórz\" wewnątrz
        innej pętli, aby zmniejszyć liczbę potrzebnych bloków."
      courseD_maze_nestedLoops5: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops5_2018: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops5_2019: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops6: "Sprowadźmy to na inny poziom! \\\r Użyj pętli, aby
        doprowadzić mnie do słonecznika za pomocą możliwie najmniejszej liczby bloków."
      courseD_maze_nestedLoops6_2018: "Sprowadźmy to na inny poziom! \\\r Użyj pętli,
        aby doprowadzić mnie do słonecznika za pomocą możliwie najmniejszej liczby
        bloków."
      courseD_maze_nestedLoops6_2019: "Sprowadźmy to na inny poziom! \\\r Użyj pętli,
        aby doprowadzić mnie do słonecznika za pomocą możliwie najmniejszej liczby
        bloków."
      courseD_maze_ramp1: W przypadku tej łamigłówki, przeciągnij wszystkie bloki
        razem i kliknij "Uruchom", aby zobaczyć, jak to działa!
      courseD_maze_ramp1_2018: W przypadku tej łamigłówki, przeciągnij wszystkie bloki
        razem i kliknij "Uruchom", aby zobaczyć, jak to działa!
      courseD_maze_ramp1_2019: W przypadku tej łamigłówki, przeciągnij wszystkie bloki
        razem i kliknij "Uruchom", aby zobaczyć, jak to działa!
      courseD_maze_ramp2: Drag an extra `move forward` block out of the toolbox, then
        attach all blocks to `when run` to finish your code.
      courseD_maze_ramp2_2018: Drag an extra `move forward` block out of the toolbox,
        then attach all blocks to `when run` to finish your code.
      courseD_maze_ramp2_2019: Drag an extra `move forward` block out of the toolbox,
        then attach all blocks to `when run` to finish your code.
      courseD_maze_ramp3: Jest jeden dodatkowy blok, który spowoduje wypadek ptaka.
        Wyrzuć go, przeciągając go z powrotem do przybornika.
      courseD_maze_ramp3_2018: Jest jeden dodatkowy blok, który spowoduje wypadek
        ptaka. Wyrzuć go, przeciągając go z powrotem do przybornika.
      courseD_maze_ramp3_2019: Usuń nadmiarowy blok "przesuń do przodu".
      courseD_maze_ramp4: Unikaj TNT lub pióra będą latać!
      courseD_maze_ramp4_2018: Unikaj TNT lub pióra będą latać!
      courseD_maze_ramp4_2019: Help Scrat reach the acorn.
      courseD_maze_ramp5: Unikaj TNT.
      courseD_maze_ramp5_2018: Unikaj TNT.
      courseD_maze_ramp5_2019: Unikaj TNT.
      courseD_maze_ramp5a: Zwróć uwagę na tę sekwencję i sprawdź, czy możesz dojść
        do tej świnki!
      courseD_maze_ramp5a_2018: Zwróć uwagę na tę sekwencję i sprawdź, czy możesz
        dojść do tej świnki!
      courseD_maze_ramp5a_2019: Count the spaces on the grid carefully!
      courseD_maze_ramp5b: Poruszaj się w tym labiryncie, aby pomóc ptakowi znaleźć
        świnkę!
      courseD_maze_ramp5b_2018: Poruszaj się w tym labiryncie, aby pomóc ptakowi znaleźć
        świnkę!
      courseD_maze_ramp5b_2019: Poruszaj się w tym labiryncie, aby pomóc ptakowi znaleźć
        świnkę!
      courseD_maze_ramp5c: Doprowadź ptaka do świnki.
      courseD_maze_ramp5c_2018: Doprowadź ptaka do świnki.
      courseD_maze_ramp5c_2019: Watch out for cracking ice! Help Scrat get to the
        acorn.
      courseD_maze_ramp5d: Get the bird to the pig.
      courseD_maze_ramp5d_2018: Get the bird to the pig.
      courseD_maze_ramp5d_2019: Get the bird to the pig.
      courseD_maze_ramp6: '"Zachowaj spokój i pomóż mi znaleźć tę złą świnkę. W przeciwnym
        razie mogę się rozgniewać!"'
      courseD_maze_ramp7: Doprowadź ptaka do świnki!
      courseD_maze_until1: Get the angry bird to the pig.
      courseD_maze_until10: Help the zombie get to the sunflower.
      courseD_maze_until10_2018: Help the zombie get to the sunflower.
      courseD_maze_until10_2019: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2_2018: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2_2019: Help the zombie get to the sunflower.
      courseD_maze_until1_2018: Get the angry bird to the pig.
      courseD_maze_until1_2019: Get the angry bird to the pig.
      courseD_maze_until3: Get the bird to the pig.
      courseD_maze_until3_2018: Get the bird to the pig.
      courseD_maze_until3_2019: Get the bird to the pig.
      courseD_maze_until4: Can you get the zombie to the sunflower using only the
        blocks that are available?
      courseD_maze_until4_2018: Can you get the zombie to the sunflower using only
        the blocks that are available?
      courseD_maze_until4_2019: Can you get the zombie to the sunflower using only
        the blocks that are available?
      courseD_maze_until5: Use the `if` block to help the zombie decide when to turn,
        then get the zombie to the sunflower.
      courseD_maze_until5_2018: Use the `if` block to help the zombie decide when
        to turn, then get the zombie to the sunflower.
      courseD_maze_until5_2019: Use the `if` block to help the zombie decide when
        to turn, then get the zombie to the sunflower.
      courseD_maze_until6: Help the zombie get to the sunflower.
      courseD_maze_until6_2018: Help the zombie get to the sunflower.
      courseD_maze_until6_2019: Help the zombie get to the sunflower.
      courseD_maze_until7: Help the zombie get to the sunflower.
      courseD_maze_until7_2018: Help the zombie get to the sunflower.
      courseD_maze_until7_2019: Help the zombie get to the sunflower.
      courseD_maze_until8: Help the zombie get to the sunflower.
      courseD_maze_until9: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until9_2018: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until9_2019: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until_challenge1: Bez podpowiedzi, po prostu wyzwanie. Doprowadź
        zombie do słonecznika.
      courseD_playLab_cond1: Get Pegleg to the flags to solve this puzzle.
      courseD_playLab_cond1_2018: Get Pegleg to the flags to solve this puzzle.
      courseD_playLab_cond2: 'Give Pegleg a point every time he makes it to the dragon. '
      courseD_playLab_cond2_2018: 'Give Pegleg a point every time he makes it to the
        dragon. '
      courseD_playLab_cond3: 'Make the dragon change between random emotions every
        second.  '
      courseD_playLab_cond3_2018: 'Make the dragon change between random emotions
        every second.  '
      courseD_playLab_cond3a: Make it so when Pegleg gets to the dragon, he gets 2
        points if the dragon is happy and 1 otherwise.
      courseD_playLab_cond3a_2018: Make it so when Pegleg gets to the dragon, he gets
        2 points if the dragon is happy and 1 otherwise.
      courseD_playLab_cond4: Add some code so that the ninja (actor 3) starts chasing
        Pegleg as soon as the game begins.  End the game as a loss if the ninja catches
        him.
      courseD_playLab_cond4_2018: Add some code so that the ninja (actor 3) starts
        chasing Pegleg as soon as the game begins.  End the game as a loss if the
        ninja catches him.
      courseD_playLab_cond5: Add a `repeat forever` loop that continuously checks
        if the score is greater than 5, then ends the game as a win when it is.
      courseD_playLab_cond5_2018: Add a `repeat forever` loop that continuously checks
        if the score is greater than 5, then ends the game as a win when it is.
      courseD_playLab_cond6: "1.  Slow the ninja (actor 3) down before you set him
        to chase the pirate.  \n2.  If the pirate is greater than 225 pixels down,
        set the ninja to **flee** the pirate.  Otherwise, set the ninja to **chase**
        the pirate.  "
      courseD_playLab_cond6_2018: "1.  Slow the ninja (actor 3) down before you set
        him to chase the pirate.  \n2.  If the pirate is greater than 225 pixels down,
        set the ninja to **flee** the pirate.  Otherwise, set the ninja to **chase**
        the pirate.  "
      courseD_playLab_cond6a: If the pirate (actor 1) is in the safe zone, wait one
        second, then deduct a point as long as he stays beneath the octopus line.
      courseD_playLab_cond6a_2018: If the pirate (actor 1) is in the safe zone, wait
        one second, then deduct a point as long as he stays beneath the octopus line.
      courseD_playLab_condFP: Now, build your own game to show off to your friends!
      courseD_playLab_condFP_2018: Now, build your own game to show off to your friends!
      courseD_scrat_ramp1: W przypadku tej łamigłówki, przeciągnij wszystkie bloki
        razem i kliknij "Uruchom", aby zobaczyć, jak to działa!
      courseD_scrat_ramp2: Drag an extra `move forward` block out of the toolbox,
        then attach all blocks to `when run` to finish your code.
      courseD_scrat_ramp3: There is one extra block that is going to cause Scrat to
        crash. Throw it away by dragging it back to the toolbox.
      courseD_scrat_ramp4: Avoid the cracked ice to keep Scrat safe!
      courseD_scrat_ramp5: Avoid the cracked ice.
      courseD_scrat_ramp6: Help Scrat get to the acorn using a loop!
      courseD_scrat_ramp7: Help Scrat get to the acorn!
      courseD_scrat_ramp8: Use what you've learned to get Scrat to the acorn!
      courseE_aboutme_6: 'Keep going! Try adding more features to your poster to make
        it even better. '
      courseE_artist_concept1: 'Recreate this image. '
      courseE_artist_concept1_2018: 'Recreate this image. '
      courseE_artist_concept4: Recreate this drawing.
      courseE_artist_concept4_2018: Recreate this drawing.
      courseE_artist_concept_challenge1: Nie bój się popełniać błędów próbując. Nie
        oczekuj, że wszystko będzie doskonałe za pierwszym razem. Kliknij tutaj, jeśli
        chcesz zobaczyć więcej wskazówek!
      courseE_artist_concept_challenge1_2018: Nie bój się popełniać błędów próbując.
        Nie oczekuj, że wszystko będzie doskonałe za pierwszym razem. Kliknij tutaj,
        jeśli chcesz zobaczyć więcej wskazówek!
      courseE_artist_concept_challenge2: Create five pinwheel designs using the code
        below.
      courseE_artist_concept_challenge2_2018: Create five pinwheel designs using the
        code below.
      courseE_artist_functions1: "Pomóż zombie narysować okulary używając kwadratów
        o bokach 100 pikseli.  \\\r Połączenie między szkłami okularów ma 75 pikseli."
      courseE_artist_functions10: This time, use lines of 8 hexagons with 25 pixel
        sides.
      courseE_artist_functions10_2018: This time, use lines of 8 hexagons with 25
        pixel sides.
      courseE_artist_functions10_2019: This time, use lines of 8 hexagons with 25
        pixel sides.
      courseE_artist_functions1_copy: "Pomóż zombie narysować okulary używając kwadratów
        o bokach 100 pikseli.  \\\r Połączenie między szkłami okularów ma 75 pikseli."
      courseE_artist_functions2: 'This time, use the `draw a square` function to create
        the glasses. '
      courseE_artist_functions2_2018: 'Tym razem użyj funkcji `draw a square`, aby
        utworzyć okulary. '
      courseE_artist_functions2_2019: 'Tym razem użyj funkcji `draw a square`, aby
        utworzyć okulary. '
      courseE_artist_functions2_copy: 'This time, use the `draw a square` function
        to create the glasses. '
      courseE_artist_functions3: You can make this drawing by adding a repeat block.
      courseE_artist_functions3_2018: Build a function that will create this star.
      courseE_artist_functions3_2019: Build a function that will create this star.
      courseE_artist_functions3_copy: You can make this drawing by adding a repeat
        block.
      courseE_artist_functions4: Now that you can draw a star, try drawing four stars!
      courseE_artist_functions4_copy: Now that you can draw a star, try drawing four
        stars!
      courseE_artist_functions5: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_2018: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_2019: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_copy: Draw only those three stars to finish this puzzle.
      courseE_artist_functions6: Make this window by drawing a square, then turning
        90 degrees before drawing another, and so on.
      courseE_artist_functions7: Try solving this puzzle by creating `draw a window`
        and calling it five times. Watch out for the door!
      courseE_artist_functions7_2018: Try solving this puzzle by creating `draw a
        window` and calling it five times. Watch out for the door!
      courseE_artist_functions7_2019: Try solving this puzzle by creating `draw a
        window` and calling it five times. Watch out for the door!
      courseE_artist_functions8: 'Challenge: Create as many functions as you think
        you need to make this drawing of 50 pixel squares.'
      courseE_artist_functions8_2018: Use everything you've learned so far to recreate
        this design.
      courseE_artist_functions8_2019: Use everything you've learned so far to recreate
        this design.
      courseE_artist_functions8a_2018: Create a function for a single square.
      courseE_artist_functions8a_2019: Create a function for a single square.
      courseE_artist_functions8b_2018: Call the `draw a square` function from inside
        your `draw a line of squares` function to make this even easier!
      courseE_artist_functions8b_2019: Call the `draw a square` function from inside
        your `draw a line of squares` function to make this even easier!
      courseE_artist_functions8c_2018: Add one more function that creates this stack
        of staggered squares.
      courseE_artist_functions8c_2019: Add one more function that creates this stack
        of staggered squares.
      courseE_artist_functions9: Create this image using only the blocks provided.
      courseE_artist_functions9_2018: "**Challenge:** Create this image using only
        the blocks provided."
      courseE_artist_functions9_2019: "**Challenge:** Create this image using only
        the blocks provided."
      courseE_artist_functionsProj_2018: "**Inspiration:** Use what you've learned
        to make whatever you want!"
      courseE_artist_functionsProj_2019: "**Inspiration:** Use what you've learned
        to make whatever you want!"
      courseE_artist_functions_challenge1: Once you define a function, you can call
        it over and over again - whenever and wherever you want! Try this code to
        see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge1_2018: Once you define a function, you can
        call it over and over again - whenever and wherever you want! Try this code
        to see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge1_2019: Once you define a function, you can
        call it over and over again - whenever and wherever you want! Try this code
        to see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      courseE_artist_functions_challenge2_2018: Try this code to see how it works,
        then make the program your own!
      courseE_artist_functions_challenge2_2019: Try this code to see how it works,
        then make the program your own!
      courseE_artist_ramp8: Now make a square using Artist!
      courseE_artist_ramp8_2: Now make a square using Artist!
      courseE_artist_ramp9: Użyj tego, czego się nauczyłeś(-aś), by narysować ten
        trójkąt.
      courseE_artist_ramp9_2: Użyj tego, czego się nauczyłeś(-aś), by narysować ten
        trójkąt.
      courseE_bee_concept1: 'Zbierz cały nektar z każdego kwiatka. Użyj zagnieżdżonej
        pętli. '
      courseE_bee_concept1_2018: 'Zbierz cały nektar z każdego kwiatka. Użyj zagnieżdżonej
        pętli. '
      courseE_bee_concept2: 'Help the bee make all of the honey. '
      courseE_bee_concept2_2018: 'Help the bee make all of the honey. '
      courseE_bee_concept3: Collect all of the nectar using  as few blocks as possible.
      courseE_bee_concept3_2018: Collect all of the nectar using  as few blocks as
        possible.
      courseE_bee_concept4: Uh oh! The bee is not sure if he should collect nectar
        or make honey. Can you help him out?
      courseE_bee_concept4_2018: Uh oh! The bee is not sure if he should collect nectar
        or make honey. Can you help him out?
      courseE_bee_concept5: Help the bee collect the nectar from the flowers?
      courseE_bee_concept5_2018: Help the bee collect the nectar from the flowers?
      courseE_bee_functions1: Zbierz cały nektar z każdego kwiatka.
      courseE_bee_functions10: Rozwiąż tę zagadkę, tworząc funkcję, która pomaga pszczółce
        zrobić cały miód przed powrotem do głównej ścieżki.
      courseE_bee_functions2: Użyj funkcji `zbierz 2 nektary` (`get 2 nectar`) żeby
        zebrać nektar z każdego kwiatka.
      courseE_bee_functions3: Zbuduj funkcję "get 5" (pobierz 5), aby użyć jej w tej
        łamigłówce.
      courseE_bee_functions4: Użyj funkcji "move and get nectar" (przejdź i pobierz
        nektar), aby zebrać cały nektar.
      courseE_bee_functions5: Now write the function to collect nectar from the flowers.
      courseE_bee_functions6: Create a function and call it to collect nectar at each
        flower and make honey at each honeycomb.
      courseE_bee_functions7: Create your own function that goes down a path, gets
        nectar, makes honey, and then returns the bee to the top of the path. Collect
        all the nectar and make all the honey!
      courseE_bee_functions8: Create a function that collects all of the nectar from
        each flower.
      courseE_bee_functions9: Create a function to collect all of the nectar from
        each flower.
      courseE_bee_functions_challenge1: You are on your own for this challenge. This
        could "bee" harder than it looks!
      courseE_bee_functions_challenge2: Rozwiąż to wyzwanie na własną rękę!
      courseE_farmer_concept1: Can you write a program that fills these holes until
        the ground is even?
      courseE_farmer_concept1_2018: Can you write a program that fills these holes
        until the ground is even?
      courseE_farmer_concept2: Collect all of the pumpkins.
      courseE_farmer_concept2_2018: Collect all of the pumpkins.
      courseE_farmer_concept3: Fill in the hole at the end of each of these paths.
      courseE_farmer_concept3_2018: Fill in the hole at the end of each of these paths.
      courseE_farmer_functions1: Help the harvester get to the pumpkin and pick it.
      courseE_farmer_functions10a1_2018: Use everything that you've learned so far
        to solve this puzzle!
      courseE_farmer_functions10a1_2019: Use everything that you've learned so far
        to solve this puzzle!
      courseE_farmer_functions10b: Use your new function twice to solve this puzzle.
      courseE_farmer_functions13_2018: Solve this puzzle in 23 blocks or less.
      courseE_farmer_functions13_2019: Solve this puzzle in 23 blocks or less.
      courseE_farmer_functions1_2018: Help the harvester get to the pumpkin and pick
        it.
      courseE_farmer_functions1_2019: Help the harvester get to the pumpkin and pick
        it.
      courseE_farmer_functions1a: Now help the harvester pick the corn, lettuce, **and**
        pumpkin.
      courseE_farmer_functions1a_2018: Help the harvester pick all of the corn, then
        the pumpkin.
      courseE_farmer_functions1a_2019: Help the harvester pick all of the corn, then
        the pumpkin.
      courseE_farmer_functions2b: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2b_2018: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2b_2019: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2ba: Help the farmer pick the corn and pumpkins using
        the `corn and pumpkin` function.
      courseE_farmer_functions2ba_2018: Use the functions below to help the farmer
        pick the corn and pumpkins.
      courseE_farmer_functions2ba_2019: Help the farmer pick the corn and pumpkins
        using the `corn and pumpkin` function.
      courseE_farmer_functions3c: Now, fill-in the function yourself by pulling the
        blocks from the code and dropping them into the **function definition**.
      courseE_farmer_functions3c1_2018: This function calls other functions!
      courseE_farmer_functions3c1_2019: This function calls other functions!
      courseE_farmer_functions3c_2018: Try on a longer path.
      courseE_farmer_functions3c_2019: Try on a longer path.
      courseE_farmer_functions4b: Użyj swojej nowej funkcji, by rozwiązać tę łamigłówkę.
      courseE_farmer_functions5c: Your function will come in handy here.
      courseE_farmer_functions6c: What do you need to add this program to check whether
        a sprout is corn or lettuce?
      courseE_farmer_functions7a1_2018: Create a function that sends the harvester
        down a square path to pick a single head of lettuce from the middle of each
        row.
      courseE_farmer_functions7a1_2019: Create a function that sends the harvester
        down a square path to pick a single head of lettuce from the middle of each
        row.
      courseE_farmer_functions7b: Help the harvester find her way down this confusing
        path and to the pumpkin by turning left at the corn and right at the lettuce.
      courseE_farmer_functions8a1_2018: Is your function still helpful?
      courseE_farmer_functions8a1_2019: Is your function still helpful?
      courseE_farmer_functions8b: "**Challenge:** Collect all of the pumpkins using
        the method from the last puzzle. "
      courseE_farmer_functions9a1_2018: Is your function still helpful?
      courseE_farmer_functions9a1_2019: Is your function still helpful?
      courseE_farmer_functions9b: Can you figure out the pattern that you need to
        solve this puzzle?
      courseE_farmer_ramp11a: While there is a pile, remove dirt.
      courseE_farmer_ramp11a_2018: While there is a pile, remove dirt.
      courseE_farmer_ramp11a_2019: While there is a pile, remove dirt.
      courseE_farmer_ramp11b: While there is a pile, remove dirt.
      courseE_farmer_ramp11b_2018: While there is a pile, remove dirt.
      courseE_farmer_ramp11b_2019: While there is a pile, remove dirt.
      courseE_farmer_ramp12_forswap: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12_forswap_2018: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12_forswap_2019: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12b: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12b_2018: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12b_2019: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12c: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12c_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12c_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12d: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12d_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12d_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12e: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12e_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12e_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12f: Move forward until you reach the lettuce, then turn
        left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12f_2018: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12f_2019: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g: Move forward until you reach the lettuce, then turn
        left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g_2018: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g_2019: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_playLab_challenge1: "Something should happen when you get enough points
        or when you run out of points. Add some code to the `win game` and `lose game`
        functions to make the game work the way it should. \nClick the hints for ideas!"
      courseE_playLab_scaffold1: Choose a background and map, and pick an actor to
        be your game's hero.
      courseE_playLab_scaffold2: Use event handlers and actions to make your hero
        move.
      courseE_playLab_scaffold3: Add two or more additional actors to your game and
        make them move.
      courseE_playLab_scaffold4: Find some interesting ways to change the score in
        your game. Get the score to show something other than 0 to continue.
      courseE_playLab_scaffold5: Teraz poświęć trochę czasu, żeby upewnić się, że
        gra działa tak, jak chcesz. Ustaw sposób w jaki wygrywa się lub przegrywa
        twoją grę, a następnie zagraj, aby spełnić jeden z tych warunków.
      courseE_playLab_scaffold6: You've finished! Now you can play your game or share
        it with your friends and classmates!
      courseE_video_createFunctions: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2_2018: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2_2019: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseF_artist_for1: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for10: 'Free Play: Try using the `counter` variable with other
        drawing elements to make magical images like this one.'
      courseF_artist_for10_2018: 'Free Play: Try using the `counter` variable with
        other drawing elements to make magical images like this one.'
      courseF_artist_for10_2019: 'Free Play: Try using the `counter` variable with
        other drawing elements to make magical images like this one.'
      courseF_artist_for1_2018: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for1_2019: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for2: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for2_2018: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for2_2019: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for3: 'These triangles go from 20 pixel sides to 200 pixel sides,
        and each triangle is 20 pixels larger than the last. '
      courseF_artist_for3_2018: 'These triangles go from 20 pixel sides to 200 pixel
        sides, and each triangle is 20 pixels larger than the last. '
      courseF_artist_for3_2019: 'These triangles go from 20 pixel sides to 200 pixel
        sides, and each triangle is 20 pixels larger than the last. '
      courseF_artist_for4: 'These squares start at 15 pixels long. The largest is
        300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for4_2018: 'These squares start at 15 pixels long. The largest
        is 300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for4_2019: 'These squares start at 15 pixels long. The largest
        is 300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for5: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for5_2018: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for5_2019: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for6: Recreate your code from the last level, but turn 89 degrees
        to create this twisted square spiral.
      courseF_artist_for6_2018: Recreate your code from the last level, but turn 89
        degrees to create this twisted square spiral.
      courseF_artist_for6_2019: Recreate your code from the last level, but turn 89
        degrees to create this twisted square spiral.
      courseF_artist_for7: Zrób trzy niewielkie zmiany w kodzie z poprzedniego poziomu,
        aby to otrzymać!
      courseF_artist_for7_2018: Zrób trzy niewielkie zmiany w kodzie z poprzedniego
        poziomu, aby to otrzymać!
      courseF_artist_for7_2019: Zrób trzy niewielkie zmiany w kodzie z poprzedniego
        poziomu, aby to otrzymać!
      courseF_artist_for8: Take the angle down to 72 degrees to get a spiraled pentagon.
      courseF_artist_for8_2018: Take the angle down to 72 degrees to get a spiraled
        pentagon.
      courseF_artist_for8_2019: Take the angle down to 72 degrees to get a spiraled
        pentagon.
      courseF_artist_for9: "**Inspiration:**  Use the counter inside the `set alpha`
        block to get this faded center."
      courseF_artist_for9_2018: "**Inspiration:**  Use the counter inside the `set
        alpha` block to get this faded center."
      courseF_artist_for9_2019: "**Inspiration:**  Use the counter inside the `set
        alpha` block to get this faded center."
      courseF_artist_for_challenge1: Czy wiesz, jak odtworzyć ten rysunek?
      courseF_artist_for_challenge1_2018: Czy wiesz, jak odtworzyć ten rysunek?
      courseF_artist_for_challenge1_2019: Czy wiesz, jak odtworzyć ten rysunek?
      courseF_artist_for_challenge2: Czy wiesz, jak odtworzyć ten rysunek używając
        pojedynczej pętli?
      courseF_artist_for_challenge2_2018: Czy wiesz, jak odtworzyć ten rysunek używając
        pojedynczej pętli?
      courseF_artist_for_challenge2_2019: Czy wiesz, jak odtworzyć ten rysunek używając
        pojedynczej pętli?
      courseF_artist_fwp1: Edit the function 'draw a square' to find bugs.
      courseF_artist_fwp2: Edit the function to accept a parameter called `length`.
      courseF_artist_fwp2_predict1: Edit the function to accept a parameter called
        `length`.
      courseF_artist_fwp3: Create a function called 'draw a square' and use it to
        outline these four boxes using parameters.
      courseF_artist_fwp4: Edit this function to add a parameter for the number of
        sides in your polygon.
      courseF_artist_fwp5: 'Use the function from the last puzzle to draw this series
        of shapes.  '
      courseF_artist_fwp6: 'Challenge: Edit `draw a spiral edge` to use `length` and
        `sides` parameters, then recreate these shapes.'
      courseF_artist_fwp7: Finish off the `draw a spiral edge` function to also ask
        for a minimum length for the center of the spiral.
      courseF_artist_fwp8: Can you figure out how to make this drawing using the function
        that you just created?
      courseF_artist_fwp9: 'Freeplay: Draw something awesome! Play with the pen width
        to see how different your drawings look!'
      courseF_artist_fwp_challenge1: Can you figure out how this program works?
      courseF_artist_fwp_challenge2: Use what you learned in the previous level to
        draw an image like this.
      courseF_artist_variables10: 'Here''s your code from the last puzzle.  Try editing
        the variable in other ways.  '
      courseF_artist_variables10_2018: 'Here''s your code from the last puzzle.  Try
        editing the variable in other ways.  '
      courseF_artist_variables10_2019: 'Here''s your code from the last puzzle.  Try
        editing the variable in other ways.  '
      courseF_artist_variables2: 'Now draw three of those triangles right next to
        each other.   '
      courseF_artist_variables2_2018: 'Now draw three of those triangles right next
        to each other.   '
      courseF_artist_variables2_2019: 'Now draw three of those triangles right next
        to each other.   '
      courseF_artist_variables3: Move the length of 50 into a variable so we can use
        it in the next few puzzles.
      courseF_artist_variables3_2018: Move the length of 50 into a variable so we
        can use it in the next few puzzles.
      courseF_artist_variables3_2019: Move the length of 50 into a variable so we
        can use it in the next few puzzles.
      courseF_artist_variables4: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables4_2018: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables4_2019: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables5: Add another set of loops at the end of your code
        to add three more triangles. This time, move forward and up!
      courseF_artist_variables5_2018: Add another set of loops at the end of your
        code to add three more triangles. This time, move forward and up!
      courseF_artist_variables5_2019: Add another set of loops at the end of your
        code to add three more triangles. This time, move forward and up!
      courseF_artist_variables6: 'Now make the triangles to be 60 pixels wide, with
        60 pixel jumps.  '
      courseF_artist_variables6_2018: 'Now make the triangles to be 60 pixels wide,
        with 60 pixel jumps.  '
      courseF_artist_variables6_2019: 'Now make the triangles to be 60 pixels wide,
        with 60 pixel jumps.  '
      courseF_artist_variables6a: Build this design where the squares have 80 pixel
        sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables6a_2018: Build this design where the squares have 80
        pixel sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables6a_2019: Build this design where the squares have 80
        pixel sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables7: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables7_2018: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables7_2019: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables8: Rebuild the triangle code from the last puzzle, but
        this time use the `set length to` block to reset the `length` variable to
        `length`+10 at the end of each loop iteration.
      courseF_artist_variables8_2018: Rebuild the triangle code from the last puzzle,
        but this time use the `set length to` block to reset the `length` variable
        to `length`+10 at the end of each loop iteration.
      courseF_artist_variables8_2019: Rebuild the triangle code from the last puzzle,
        but this time use the `set length to` block to reset the `length` variable
        to `length`+10 at the end of each loop iteration.
      courseF_artist_variables9: See what happens when you repeat the code from the
        last puzzle 30 times instead of only 3!  Feel free to make your lines any
        color or pattern for some extra zest.
      courseF_artist_variables9_2018: See what happens when you repeat the code from
        the last puzzle 30 times instead of only 3!  Feel free to make your lines
        any color or pattern for some extra zest.
      courseF_artist_variables9_2019: See what happens when you repeat the code from
        the last puzzle 30 times instead of only 3!  Feel free to make your lines
        any color or pattern for some extra zest.
      courseF_artist_variablesFP: "**Freeplay:** Take what you've learned and make
        your own drawing. "
      courseF_artist_variablesFP_2018: "**Freeplay:** Take what you've learned and
        make your own drawing. "
      courseF_artist_variablesFP_2019: "**Freeplay:** Take what you've learned and
        make your own drawing. "
      courseF_artist_variables_challenge1: Can you create a `length` variable and
        use it to create this pattern?
      courseF_artist_variables_challenge1_2018: Can you create a `length` variable
        and use it to create this pattern?
      courseF_artist_variables_challenge1_2019: Can you create a `length` variable
        and use it to create this pattern?
      courseF_artist_variables_challenge2: You've now learned everything you need
        to know to make a pattern like this!
      courseF_artist_variables_challenge2_2018: You've now learned everything you
        need to know to make a pattern like this!
      courseF_artist_variables_challenge2_2019: You've now learned everything you
        need to know to make a pattern like this!
      courseF_bee_conditionals10: Collect all of the nectar and make all of the honey.
      courseF_bee_conditionals1_predict1: Sprawdź, czy pod chmurką jest kwiat. Jeśli
        jest, zbierz nektar.
      courseF_bee_conditionals2: 'Check underneath each cloud to see if it is hiding
        a flower before you get nectar.  '
      courseF_bee_conditionals3: "Pomóż pszczółce zebrać cały nektar.\n\\\r\n\\\r"
      courseF_bee_conditionals4: Get all of the nectar using as few blocks as possible.
      courseF_bee_conditionals5: Collect all of the nectar using as few blocks as
        possible
      courseF_bee_conditionals7_predict2: Użyj bloku 'jeśli/w przeciwnym razie', żeby
        zebrać nektar z kwiatów i zrobić miód na plastrze.
      courseF_bee_conditionals8: |-
        Zbierz nektar jeśli to kwiatek.
        W przeciwnym razie zrób miód (ponieważ jest to plaster miodu).
      courseF_bee_for1: Collect the nectar from each flower using the fewest blocks
        possible.
      courseF_bee_for10: "**Challenge:** Take what you've learned about `for` loops
        and try to solve this problem. "
      courseF_bee_for10_2018: "**Challenge:** Take what you've learned about `for`
        loops and try to solve this problem. "
      courseF_bee_for10_2019: "**Challenge:** Take what you've learned about `for`
        loops and try to solve this problem. "
      courseF_bee_for11: What should your increment be to collect 15, then 12, then
        9, 6, 3 nectar?
      courseF_bee_for11_2018: What should your increment be to collect 15, then 12,
        then 9, 6, 3 nectar?
      courseF_bee_for11_2019: What should your increment be to collect 15, then 12,
        then 9, 6, 3 nectar?
      courseF_bee_for1_2018: Collect the nectar from each flower using the fewest
        blocks possible.
      courseF_bee_for1_2019: Collect the nectar from each flower using the fewest
        blocks possible.
      courseF_bee_for2: Write the code to help the bee collect all of the nectar.
      courseF_bee_for2_2018: Write the code to help the bee collect all of the nectar.
      courseF_bee_for2_2019: Write the code to help the bee collect all of the nectar.
      courseF_bee_for4: Pomóż pszczółce zebrać cały nektar.
      courseF_bee_for4_2018: Pomóż pszczółce zebrać cały nektar.
      courseF_bee_for4_2019: Pomóż pszczółce zebrać cały nektar.
      courseF_bee_for5: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for5_2018: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for5_2019: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for6: Try gathering this nectar by counting down from 5 to 1 by
        1.
      courseF_bee_for6_2018: Try gathering this nectar by counting down from 5 to
        1 by 1.
      courseF_bee_for6_2019: Try gathering this nectar by counting down from 5 to
        1 by 1.
      courseF_bee_for7: Try collecting these flowers using an increment of 2.
      courseF_bee_for7_2018: Try collecting these flowers using an increment of 2.
      courseF_bee_for7_2019: Try collecting these flowers using an increment of 2.
      courseF_bee_for8: Masz teraz to! Jaki powinien być przyrost, aby zebrać 3, 6,
        9, 12, 15 nektarów?
      courseF_bee_for8_2018: Masz teraz to! Jaki powinien być przyrost, aby zebrać
        3, 6, 9, 12, 15 nektarów?
      courseF_bee_for8_2019: Masz teraz to! Jaki powinien być przyrost, aby zebrać
        3, 6, 9, 12, 15 nektarów?
      courseF_bee_for9: Use the `counter` variable to navigate this garden with the
        fewest number of blocks possible.
      courseF_bee_for9_2018: Use the `counter` variable to navigate this garden with
        the fewest number of blocks possible.
      courseF_bee_for9_2019: Use the `counter` variable to navigate this garden with
        the fewest number of blocks possible.
      courseF_bee_for_challenge1: 'Use this `for loop` to collect all of the nectar. '
      courseF_bee_for_challenge1_2018: 'Use this `for loop` to collect all of the
        nectar. '
      courseF_bee_for_challenge1_2019: 'Use this `for loop` to collect all of the
        nectar. '
      courseF_bee_for_challenge2: Rozwiąż tę łamigłówkę używając jak najmniejszej
        liczby bloków.
      courseF_bee_for_challenge2_2018: Rozwiąż tę łamigłówkę używając jak najmniejszej
        liczby bloków.
      courseF_bee_for_challenge2_2019: Rozwiąż tę łamigłówkę używając jak najmniejszej
        liczby bloków.
      courseF_bee_functions2: Use the `get only nectar` function to collect the nectar
        from each flower.
      courseF_bee_functions3: Click "edit" to put code inside the `only make honey`
        function, then use it to solve this puzzle.
      courseF_bee_functions3a: Napisz funkcję, dzięki której pszczółka zbiera nektar,
        jeśli jest na kwiatku, a w przeciwnym razie robi miód. Użyj swojej funkcji
        aby rozwiązać tę zagadkę!
      courseF_bee_functions4: Użyj funkcji "move and get nectar" (przejdź i pobierz
        nektar), aby zebrać cały nektar.
      courseF_bee_functions5a: Use the `move and check` function to collect all of
        the nectar.
      courseF_bee_functions6: Pomóż pszczółce przejść przez labirynt - skręć w lewo
        na każdym kwiatku i w prawo na każdym plastrze miodu.
      courseF_bee_functions7: Rebuild your function from the last puzzle to solve
        this maze.
      courseF_bee_functions8a: Zbierz cały nektar lub zrób cały miód!
      courseF_bee_functionsPre7: Now try building a function to solve this maze.  How
        is it different from last time?
      courseF_bee_functions_challenge1: Create a new function to collect all the nectar
        and honey while there is a path ahead.
      courseF_bee_functions_challenge2: Wykorzystaj wszystko czego się nauczyłeś,
        aby rozwiązać tę łamigłówkę!
      courseF_bee_fwp2: Wciągnij ten kod do funkcji, potem wywołaj funkcję, by poszukać
        nektaru w tym rzędzie.
      courseF_bee_fwp3: Zobaczmy, czy ta funkcja ułatwia zbieranie nektaru w tych
        trzech rzędach.
      courseF_bee_fwp4: Dodaj parametr "długość" do funkcji tak, aby nadal działała,
        gdy rząd ma inną długość.
      courseF_bee_fwp5: Użyj tej funkcji do zbierania nektaru.
      courseF_bee_fwp6: Zbuduj krótkie i słodkie rozwiązanie tego zadania.
      courseF_bee_fwp7: "**Wyzwanie:** Zmień swoją funkcję, aby robiła również miód."
      courseF_bee_fwp8: Użyj swej nowej funkcji do rozwiązania spirali.
      courseF_bee_fwp9_predict1: Użyj swojej nowej funkcji, by rozwiązać tę łamigłówkę.
      courseF_bee_fwp_challenge1: Use one `for loop` in a function with a `length`
        parameter to collect all of the corn.
      courseF_bee_fwp_challenge2: 'Use one `for loop` in a function with a `length`
        parameter to collect all of the vegetables in each row. '
      courseF_bee_variables_1_2018: Finish this code so that the bee can collect all
        of the honey and nectar.
      courseF_bee_variables_1_2019: Finish this code so that the bee can collect all
        of the honey and nectar.
      courseF_bee_variables_2_2018: Edit your solution in one place so that the bee
        can collect all of the honey and nectar.
      courseF_bee_variables_2_2019: Edit your solution in one place so that the bee
        can collect all of the honey and nectar.
      courseF_bee_variables_3_2018: Subtract one from the variable each time through
        the loop if you want to use the same function to solve this level.
      courseF_bee_variables_3_2019: Subtract one from the variable each time through
        the loop if you want to use the same function to solve this level.
      courseF_bee_variables_4_2018: Edit the code to work for this puzzle.
      courseF_bee_variables_4_2019: Edit the code to work for this puzzle.
      courseF_bee_variables_5_2018: Create your own code to solve this puzzle
      courseF_bee_variables_5_2019: Create your own code to solve this puzzle
      courseF_bee_variables_6_2018: "**Challenge** Now give this puzzle a try!"
      courseF_bee_variables_6_2019: "**Challenge** Now give this puzzle a try!"
      courseF_bee_variables_7_2018: This puzzle is a little different.  What do you
        need to do to solve it?
      courseF_bee_variables_7_2019: This puzzle is a little different.  What do you
        need to do to solve it?
      courseF_bee_variables_8_2018: How many nectar will the bee collect from this
        flower?
      courseF_bee_variables_8_2019: How many nectar will the bee collect from this
        flower?
      courseF_playlab_variables1a: Variables can be used to store text that you want
        to use later.  Have Kiki, the soccer player,  scream "Goal!" by assigning
        that text to the `shout` variable.
      courseF_playlab_variables2b: Insert the variable `color` into the middle of
        a sentence by putting it into the empty slot in the `join` block.
      courseF_playlab_variables3b_josh: 'Help Kiki have a conversation with Brian
        by using the variable `age` in all of the places where age `12` should be
        used. '
      courseF_playlab_variables4b: Put the variables in the correct places to create
        this conversation.
      courseF_playlab_variables5c: Let's combine the `ask` block with an `if/else`
        statement to have some fun!
      courseF_playlab_variables6c: In the rest of this stage, we're going to build
        a game that you control!
      courseF_playlab_variables7b: Create some questions and weave the answers together
        into your very own story.
      courseF_playlab_variables7c: |-
        Spraw, by gra coś zrobiła, prosząc
        użytkownika o zgadnięcie koloru.
      courseF_playlab_variables8c: |-
        Użyj zmiennych,
        żeby spersonalizować grę.
      courseF_playlab_variables_challenge1: 'Use these blocks to make the actors share
        a knock-knock joke. '
      courseF_playlab_variables_challenge2: This game will use variables to keep track
        of points.  Tag Cat to get 2 points. Tag Penguin to get 3 points.  When Cat
        and Penguin touch, take points away. Get exactly 10 points to win!
      courseF_video_createFunctions: We don't have a video for creating functions,
        yet. This is a placeholder.
      coursea_maze_ramp1_2018: For this puzzle, snap the blocks together and click
        "▶ Run"!
      coursea_maze_ramp1_2019: For this puzzle, snap the blocks together and click
        "▶ Run"!
      express_maze_debugging9_2019: Use the blocks in the toolbox to build your program.
        Get the Scrat to the acorn.
      flappy_1: Dołącz blok do bloku "po kliknięciu", a następnie naciśnij przycisk
        "Uruchom". Kliknij lub dotknij ekranu, aby przesunąć Flappy'ego do miejsca
        docelowego.
      flappy_11: Stwórz swoją własną grę z Flappym. Możesz zmienić wszystkie efekty
        wizualne i wszystkie zasady, nawet przyciąganie. Kiedy skończysz, kliknij
        przycisk "Zakończ", aby twoi znajomi mogli ją wypróbować na swoich telefonach.
      flappy_2: Teraz dodaliśmy podłoże. Dołącz blok do bloku "kiedy spadnie na ziemię".  Twój
        kod powinien kończyć grę, kiedy Flappy rozbija się.
      flappy_3: Blok "po uruchomieniu" pozwala uruchomić kod po uruchomieniu gry.
        Spróbuj ustawić poziom prędkości i pofrunąć do miejsca docelowego.
      flappy_4: Flappy poleci przez przeszkody chyba, że napiszesz kod, który spowoduje,
        że się rozbije. Dołącz blok do bloku "kiedy uderzy w przeszkodę". Twój kod
        powinien kończyć grę, kiedy Flappy rozbija się na pierwszym zestawie rur.
      flappy_5: Dodajmy tablicę wyników i liczmy punkty, kiedy Flappy mija przeszkody.
        Dodaj blok do bloku "kiedy minie przeszkodę", a następnie zdobądź punkt przelatując
        Flappym przez pierwszy zestaw rur.
      flappy_6: Sprawdź, czy potrafisz zdobyć punkt, gdy Flappy fruwa na małą lub
        dużą wysokość.
      flappy_7: Następnie, spróbuj zmienić scenę dołączając inny blok do bloku "po
        uruchomieniu".
      flappy_8: Efekty wizualne możesz ustawić w dowolnym momencie, nie tylko, gdy
        gra się zaczyna. Spróbuj ustawić losową scenę, kiedy dzieje się coś innego,
        na przykład, kiedy Flappy mija przeszkodę.
      flappy_9: Po uderzeniu w przeszkodę, zamiast kończyć grę, spróbuj ustawić wynik
        z powrotem na 0.
      frozen circle: Okrąg ma specjalny kształt. Czy domyślisz się, jaką liczbą należy
        zastąpić znak zapytania w bloku "powtórz"?
      frozen circle function: Użyj nowego bloku "utwórz okrąg", aby narysować 10 nakładających
        się na siebie okręgów. Nie zapomnij skoczyć do przodu między okręgami.
      frozen circle function in circle: Teraz utwórzmy 20 nakładających się na siebie
        okręgów, skręcając o 18 stopni przy każdym okręgu.
      frozen circle function with parameter: Tutaj jest blok "utwórz okrąg", który
        rysuje okręgi o różnych rozmiarach. Czy możesz przy jego pomocy narysować
        mały okrąg o rozmiarze 5 i duży o rozmiarze 10?
      frozen cross: Aby narysować znak plusa, umieść te polecenia w bloku "powtórz".
        Czy zauważyłeś, że Elsa może poruszać się do przodu i do tyłu?
      frozen cross rotate: Teraz spróbuj powtórzyć to 10 razy. O ile stopni obracasz
        się pomiędzy liniami?
      frozen cross rotate dense: 'Powtórzmy to 90 razy! Ile razy 90 zmieści się w
        360? Wskazówka: To naprawdę mała liczba.'
      frozen diamond: Umieść te bloki w bloku "powtórz", aby utworzyć równoległobok.
        Wygląda jak prostokąt, ale ma różne kąty. Ten ma kąty 60 i 120 stopni, zamiast
        90 stopni.
      frozen diamond mini snowflake: Czy wiesz, że każdy płatek śniegu ma inny kształt?
        Utwórzmy nowy płatek przy użyciu bloku "powtórz", rysując równoległobok 4
        razy i obracając się w prawo o 90 stopni między kolejnymi równoległobokami.
      frozen diamond snowflake: Teraz stwórzmy nowy płatek śniegu, używając bloku
        "powtórz", żeby powtórzyć rysowanie równoległoboku 10 razy, obracając się
        między nimi w prawo o 36 stopni.
      frozen freeplay: Oficjalnie stałeś się mistrzem artystą! Utwórz zimową krainę
        cudów.
      frozen line: Cześć! jestem Elsa z Arendelle. Proszę pomóż mi utworzyć pojedynczą
        linię.
      frozen perpendicular: Teraz sprawdźmy, czy potrafisz utworzyć dwie linie, które
        są pod kątem 90 stopni. Będziesz musiał użyć bloku "skręć" razem z blokiem
        "idź".
      frozen snowflake branch: Spróbuj użyć bloku "utwórz ramię śnieżynki", aby narysować
        trzy ramiona, które przypominają płatek śniegu.
      frozen snowflake full: Teraz powtórzymy to 8 razy, aby utworzyć piękny płatek
        śniegu!
      frozen snowflower: Skomplikowane wzory śnieżek mogą być tworzone przy użyciu
        bardzo prostych kształtów. Czy potrafisz utworzyć wzór, powtarzając 5 okręgów
        o rozmiarze 5 oraz 5 okręgów o rozmiarze 10?
      frozen square iterative: Wygląda na to, że jesteśmy w połowie drogi, by narysować
        kwadrat. Połącz 4 linie, by powstał kwadrat.
      frozen square loop: Cześć. Jestem Anna z Arendelle! Narysujmy kwadrat używając
        bloku "powtórz", który zmniejszy nam liczbę potrzebnych bloków. Ile razy (???)
        należy powtórzyć blok "powtórz", aby utworzyć kwadrat?
      frozen square loop 3x: Utwórzmy trzy kwadraty, obracając się po każdym kwadracie.
        Upewnij się, że obrót przed każdym nowym kwadratem wynosi 120 stopni.
      frozen square snowflake: Czy potrafisz narysować śnieżynkę używając bloku "powtórz",
        powtarzając tworzenie kwadratu 10 razy i bloku "skręć" aby obrócić się o 36
        stopni po każdym kwadracie?
      grade2_collector_10: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_10_2018: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_10_2019: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_A: Help Laurel collect all of the treasure.
      grade2_collector_A_2018: Help Laurel collect all of the treasure.
      grade2_collector_A_2019: Help Laurel collect all of the treasure.
      grade5_artist_binary11: 'Czas na zabawę: Tutaj jest dla Ciebie czyste płótno
        do rysowania na nim. Dobrej zabawy!'
      grade5_artist_binary4: Czy potrafisz narysować ten wzorek powtarzając binarny
        łańcuch złożony z trzech cyfr (0 lub 1)?
      grade5_artist_binary5: Każdy binarny łańcuch reprezentuje jeden wiersz tego
        obrazka. Czy potrafisz je zmienić tak, aby była rysowana uśmiechnięta buźka,
        a nie zmartwiona twarz?
      grade5_artist_binary8: Ukończ ten rysunek.
      grade5_artist_binary9: "Oto obszar do rysowania o większej rozdzielczości -
        16 na 16 pikseli!\\\r\\\r Co się stanie, kiedy zaczniemy tworzyć z użyciem
        bitów?"
      grade5_pixelation: Encode an image of anything you like using binary. The binary
        language will be represented with '0' and '1' only.
      iceage_click_hello: 'Can you help Sid call for his friends when you click on
        him? '
      iceage_free_play: "Czas stworzyć swoją własną grę\nlub historyjkę! "
      iceage_hello1: Help Sid say "Hello!" by dragging the `say` block out and connecting
        it to the bottom of the `when run` event.
      iceage_hello2: Help Manny and Sid greet each other by using the the `actor ___
        say` block twice.
      iceage_move_events: Write the code to help Scrat get all of the acorns!
      iceage_move_to_actor: Connect a block to the `when actor touches` event to play
        a sound when Diego finds Manny.
      iceage_move_to_flag: Scrat is looking for his acorn! Can you help him move the
        last 200 pixels?
      iceage_repeat: Help Granny get some exercise by moving left and right repeatedly.
      iceage_sound_and_points: 'Can you finish this program to make it so that you
        both **play a sound** and **score a point** when Sid and Granny collide? '
      iceage_throw_hearts: Use the `actor __ throw` command to have Sid (actor 1)
        throw hearts at Granny (actor 2) and set Granny's mood to happy when she gets
        hit with them.
      iceage_warn_ice_age: |-
        Zamień scenerię na oblodzone tło i
        ustaw prędkość Sida (aktor 1) na "szybko".
      k-1 maze 1: Czy mógłbyś przenieść mnie na zachód (W - West), aby dotrzeć do
        świnki?
      mike3bit: We start you with the 4x2 image Maddie was creating, but we've left
        out the last few pixels. Finish off the image by figuring out which colors
        are missing and encoding them.
      mike3bitbird: Here's an example of an image made with 3-bit color. Try changing
        it to understand how it works. If you want to reset the image, press "Start
        Over".
      mike3bitfreeplay: Make something awesome and share it with your classmates!
        You can copy and paste the value of a pixel to use it repeatedly.
      mike3bitmario: "A careless binary coder typed in ONE extra 0 or 1 somewhere
        within this image's data. The extra bit that is causing Mario to glitch out!
        \n\nDelete the extra bit to restore Mario back to normal!"
      ramp_artist_loops1: Przesuń się do przodu o 60 pikseli, aby ukończyć tę łamigłówkę.
      ramp_artist_loops1_2018: Przesuń się do przodu o 60 pikseli, aby ukończyć tę
        łamigłówkę.
      ramp_artist_loops1_2019: Przesuń się do przodu o 60 pikseli, aby ukończyć tę
        łamigłówkę.
      ramp_artist_loops2: Przesuń się do przodu pięć razy i utwórz tę kolorową linię.
      ramp_artist_loops2_2018: Przesuń się do przodu pięć razy i utwórz tę kolorową
        linię.
      ramp_artist_loops2_2019: Przesuń się do przodu pięć razy i utwórz tę kolorową
        linię.
      ramp_artist_loops3: Użyj pętli `powtarzaj` do narysowania 5 kolorowych kresek.
      ramp_artist_loops3_2018: Użyj pętli `powtarzaj` do narysowania 5 kolorowych
        kresek.
      ramp_artist_loops3_2019: Użyj pętli `powtarzaj` do narysowania 5 kolorowych
        kresek.
      ramp_artist_loops4: What happens when you add a 72 degree right turn after everything
        else inside your loop?
      ramp_artist_loops4_2018: What happens when you add a 72 degree right turn after
        everything else inside your loop?
      ramp_artist_loops4_2019: Create this star pattern by looping a sequence of "move
        forward" and "turn right by 144 degrees" blocks.
      ramp_artist_loops5: Użyj pętli do narysowania tych schodów.
      ramp_artist_loops5_2018: Użyj pętli do narysowania tych schodów.
      ramp_artist_loops5_2019: Użyj pętli do narysowania tych schodów.
      ramp_artist_loops6: Edytuj swoją pętlę, by narysować te schody.
      ramp_artist_loops6_2018: Edytuj swoją pętlę, by narysować te schody.
      ramp_artist_loops6_2019: Edytuj swoją pętlę, by narysować te schody.
      ramp_artist_loops7: Look for a pattern and make this code shorter using loops!
      ramp_artist_loops7_2018: Look for a pattern and make this code shorter using
        loops!
      ramp_artist_loops7_2019: Look for a pattern and make this code shorter using
        loops!
      ramp_artist_loops8: Look for a pattern and make this code shorter using loops.
      ramp_artist_loops8_2018: Look for a pattern and make this code shorter using
        loops.
      ramp_artist_loops8_2019: Look for a pattern and make this code shorter using
        loops.
      ramp_artist_loops9: Rozwiąż to zadanie rysując kwadrat.
      ramp_artist_loops9_2018: Rozwiąż to zadanie rysując kwadrat.
      ramp_artist_loops9_2019: Rozwiąż to zadanie rysując kwadrat.
