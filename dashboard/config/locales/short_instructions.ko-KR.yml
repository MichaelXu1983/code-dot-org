---
ko-KR:
  data:
    short_instructions:
      2-3 Artist 1 new: |-
        안녕하세요. 저는 화가입니다. 여러분들이 코드를 작성하면 원하는 모든 것들을 그릴 수 있습니다.
        블록들을 사용해서 그림의 회색 선들을 그려보세요.(각 선들은 100 픽셀 길이입니다.)
      2-3 Artist 11: '각 변의 길이가 100 픽셀인, 8각형을 만들어 정지 표지판을 만들어보세요.  '
      2-3 Artist 12: "눈알을 완성하기 위해서 원을 그려보세요!\\\r\n\\\r\n만약,\n 한 번 움직일 때마다 1도씩 오른쪽으로
        움직인다고 한다면, 하나의 원을 완성시키기 위해 몇 번을 반복하면 될까요? 180? 360? 500?"
      2-3 Artist 2 new: '이 집의 벽은 다 완성되지 않았습니다. 각 측면은 100이지만, 완성되지 않은 벽은 50입니다. 벽을
        완성해보세요. '
      2-3 Artist 3.4: The jump block moves the artist without drawing. Draw the dashed
        line using both the `jump forward` and `move forward` blocks. Each line is
        50 pixels long.
      2-3 Artist 3new: "빨간 모자의 높이는 100픽셀입니다.\n이것보다 더 낮은 70픽셀 높이의 검은 모자를 그려보세요.\\\r\n(주의:
        각 모자의 너비는 50픽셀입니다.)"
      2-3 Artist 4: 고양이를 위한 집을 완성해주세요.
      2-3 Artist 6: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      2-3 Artist 7: "교실의 모두가 창밖을 볼 수 있도록, 창문들을 학교에 그려주세요.\n각 창 틀의 길이는 25 픽셀 크기입니다. "
      2-3 Artist 8: Complete the rooms for each of the animals by splitting the rectangle
        into 2 equal-sized squares. The rectangle is 200 pixels wide and 100 pixels
        tall. There are many different ways to solve this puzzle, so have some fun!
      2-3 Artist 9 NEW: 이 연을 완성해주세요.
      2-3 Artist Assessment 1: |-
        형성 평가: 마지막 이빨을 그려주세요.
        가로 25 픽셀, 세로 25 픽셀입니다.
      2-3 Artist Debugging 1: 이 모자의 윗 부분은 50 픽셀이 되어야 합니다. 고쳐 주실 수 있나요?
      2-3 Artist Debugging 10: "The direction pad on my game controller is too narrow.
        \n\nCan you make it wider by 10 pixels?\n\nTry running the code first to see
        what's wrong."
      2-3 Artist Debugging 11: |-
        My snowflake is falling apart!

        Can you figure out what's going wrong?
      2-3 Artist Debugging 2: "고양이 수염을 그리는 코드에 문제가 있습니다.\n\\\r\n\\\r\n고양이 수염의 길이가
        같도록 코드를 고쳐주세요."
      2-3 Artist Debugging 3: "My boat has a hole! \n\nWhat do you need to fix to
        make the ends meet?"
      2-3 Artist Debugging 5: "The code that we have for the leg and foot is wrong.
        \n\nCan you fix it?"
      2-3 Artist Debugging 6: |-
        Looks like I'm sitting on a chair that’s missing a leg!

        Edit the code to draw the last leg.
      2-3 Artist Debugging 7: |-
        Looks like the C in code is drawn backwards!

        Can you make it look like a C again?
      2-3 Artist Debugging 8: 바람개비가 완성되지 않았습니다. 완성하려면 얼마나 반복해야 할까요?
      2-3 Artist Debugging 9: "뭔가 이상해요!\\\r\n\\\r\n줄기를 그리는 코드가 틀렸네요. 화가가 줄기를 정확히 그리려면
        어떻게 해야할까요?"
      2-3 Artist Debugging Assessment 1: "Assessment: Why does this square end up
        being 75 pixels too small on each side?  \n\nWhere does the code go wrong?"
      2-3 Artist Free Play: '자유 플레이: 원하는 것을 그려보세요.'
      2-3 Artist Functions 1: "\"Me zombie artist. Me love drawing!\"  \n\nHelp the
        zombie draw square glasses.  \n\nThe bridge between the glasses is 25 pixels
        shorter than the width of the squares, which is 100 pixels."
      2-3 Artist Functions 10: |-
        여기에 두 개의 함수가 있습니다. 하나는 큰 기어를 그리는 것이고, 하나는 작은 기어를 그리는 것입니다.
        기계의 내부를 그리는데 사용해보세요!
      2-3 Artist Functions 11: "“사각형 그리기” 함수의 이름을 “육각형 그리기”로 바꿨지만, 여전히 이 함수는 사각형을
        그리고 있습니다!\n\"육각형 그리기\" 함수를 수정해서, 한 변의 길이가 50 픽셀인 육각형을 그려보세요. \\\r\n\\\r\n새로운
        함수를 사용하여 그림을 그려보세요."
      2-3 Artist Functions 11.5: "똑같은 '육각형 그리기' 함수가 있습니다. \\\r\n\\\r\n반복할 때마다 60도씩
        회전하는 프로그램을 6번 반복시키면 어떻게 될까요?"
      2-3 Artist Functions 12: "함수를 사용하면 복잡한 모양을 가진 그림을 그리기에 아주 좋습니다. \\\r\n\\\r\n\"꽃
        그리기\" 함수를 사용해서 나머지 꽃 묘목 상자를 채워주세요.\\\r\n꽃들은 100 픽셀 간격으로 놓여져 있습니다."
      2-3 Artist Functions 2: "함수들로 새로운 블록들을 만들어낼 수 있습니다! \\\r\n\\\r\n\"사각형 그리기\"
        라는 함수에 사각형 1개를 그리는 블록들을 넣었습니다.\n\"사각형 그리기\" 함수를 이용해서 안경을 그려보세요. \n\\\r\n\\\r\n사각형들은
        75 픽셀 만큼 떨어져 있습니다."
      2-3 Artist Functions 3: "더 큰 안경을 그리기 위해 함수를 한 변의 길이가 115 인 정사각형이 되도록 수정하세요.\\\r\n\\\r\n정사각형들은
        이제 45 픽셀 만큼 떨어져 있습니다."
      2-3 Artist Functions 4: 이제, 함수를 "반복" 블록 안에 넣고 3개의 사각형을 그려보세요.
      2-3 Artist Functions 9: |-
        여기 눈송이 함수가 있습니다.
        겨울 풍경을 만들어내기 위해서 실험해보세요! 이 판은 자유 플레이입니다.
        풀어야 할 퍼즐이 아니니까, 재미있게 놀아보세요!
      2-3 Artist Loops New 1: |-
        이 로봇의 머리를 그려보세요!
        한 변의 길이가 100 픽셀인 사각형을 그려보세요.
      2-3 Artist Loops New 10: 이제 여러 개의 'V'자를 연결해서, 반복 실행 구조 안에 넣어보세요.
      2-3 Artist Loops New 11: |-
        이번에는 멋진 것을 만들어 볼 시간입니다!
        왼쪽으로 30도 회전하기를 추가한 후, 7번 대신에 24번을 반복 시켜보세요.
      2-3 Artist Loops New 12: 한 변의 길이가 100 픽셀인 다이아몬드를 그려보세요.
      2-3 Artist Loops New 13: "여러분은 몇 개의 코드(회색) 로 하나의 다이아몬드를 만들 것입니다. \\\r\n\\\r\n이런
        재미있는 패턴을 만들기 위해서 회색 코드를 반복시켜보세요!"
      2-3 Artist Loops New 14: |-
        다이아몬드 코드를 살펴보고 어떤 패턴들을 만들어낼 수 있는지 생각해보세요.
        각도와 반복 횟수를 변화시켜가면서 테스트 해보세요.
      2-3 Artist Loops New 15: 이제, 그리고 싶은 것들을 그려보세요.
      2-3 Artist Loops New 2: "방금 풀었던 퍼즐과 같은 퍼즐이지만, 이번에는 한 개의 '앞으로 직진' 블럭과 한 개의 '돌기'
        블럭만 사용할 수 있습니다.\\\r\n\\\r\n퍼즐을 해결하기 위해 '반복' 블럭을 사용할 수 있나요?"
      2-3 Artist Loops New 9: |-
        화살 그림을 완성하기 위해서,
        양쪽 모두 50 픽셀인 간단한 V 자를 그려보세요.
      2-3 Artist Nested Loops 1: 패턴을 그리기 위해서, 이 코드 전체를 '반복' 블록에 넣으세요.
      2-3 Artist Nested Loops 10: 패턴을 완성시키기 위해서 이 코드를 12번 반복해 보세요.
      2-3 Artist Nested Loops 11: 이 코드를 4번 반복해서 패턴을 완성하고 90도 만큼 회전해 다른 원을 그리세요.
      2-3 Artist Nested Loops 12: 이 코드를 12번 반복시켜서 곱슬곱슬한 그림을 그려보세요.
      2-3 Artist Nested Loops 2: |-
        삼각형을 6번 반복해 그리세요.
        삼각형을 한 번 그리고 난 후에, 60도씩 회전하면 됩니다.
      2-3 Artist Nested Loops 3: "이 패턴을 그리려면, 삼각형을 12번 반복해서 그려야 합니다. \\\r\n\\\r\n원
        중심의 각(360 도) 을 그리려고 하는 모양의 개수(12 개) 로 나누면,\n모양을 한 번 그린 후 몇 도를 회전시켜야 하는지 알
        수 있습니다."
      2-3 Artist Nested Loops 4: |-
        Loop this diamond 12 times to draw a flower!

        Note: We'll use the same angle to loop 12 diamonds as we did for 12 triangles.\
        How much do you need to turn after each shape?
      2-3 Artist Nested Loops 5: "이 건물의 창들을 중첩 반복을 이용해 채워보세요. \\\r\n\\\r\n창들은 20 픽셀
        크기로 20 픽셀 만큼 씩 떨어져 있습니다."
      2-3 Artist Nested Loops 6: "이 공룡은 꼬리에 8개의 뾰족한 뿔이 나 있습니다.\\\r\n각 뿔의 길이는 30 픽셀입니다.\n삼각형을
        8번 반복해 그려주세요. 1개를 그리면 그 다음에는 앞으로 이동해야 합니다."
      2-3 Artist Nested Loops 7: "이 삼각형을 10번 반복시켜서 태양을 그려보세요. \\\r\n\\\r\n삼각형 1개를
        그리고 난 후에는 이동하고 회전해야 합니다. \\\r\n\\\r\n원 안에서 몇 개의 모양을 그리게 되며 몇 도씩 회전해야 할지 알아내
        보세요."
      2-3 Artist Nested Loops 8: |-
        자 이제 그림에 잔디를 그려보세요.
        잔디 1개는 50 픽셀 만큼 씩 떨어져 있습니다.
      2-3 Artist Nested Loops 9: "We'll finish this picture by adding our flower.
        \n\nLoop the diamond 12 times to draw the flower."
      2-3 Artist Nested Loops Free Play: |-
        자유 플레이시간입니다.
        중첩 반복을 이용해서 원하는 것을 그려보세요.
      2-3 Bee Conditionals 11: "I wonder what's out there!\n\nHelp me fly around the
        yard and collect nectar only from the flowers that have some. "
      2-3 Bee Conditionals 12: 최대한 적은 블록들을 사용해서 꽃꿀을 찾아낼 수 있도록 도와주세요!
      2-3 Bee Conditionals 13: "와 이번에는 여러 가지들이 있네요!\\\r\n\\\r\n여러분들이 배운 것들을 이용해 꽃꿀을
        모아 꿀을 만들어보세요."
      2-3 Bee Conditionals 14: "자 이제 다 모아봅시다!\\\r\n\\\r\n지금까지 배운 것들을 이용해서 최소한의 블록들로
        꽃꿀이 있는 꽃에서 꽃꿀을 모아 보세요.\n마지막에는 꿀을 만들어야 합니다."
      2-3 Bee Conditionals 15: "계단 모양의 패턴은 많이 익숙합니다. \\\r\n\\\r\n최소한의 블록들만 사용해서 꽃꿀이
        있는 꽃에서만 꽃꿀을 모아보세요."
      2-3 Bee Conditionals 2: "저는 배고픈 꿀벌입니다! \\\r\n최소한의 블록만 사용해서 꽃꿀을 모두 모을 수 있게 해주세요."
      2-3 Bee Conditionals 3: "저 꽃꿀들을 보세요!\\\r\n\\\r\n최소한의 블록들을 사용해서 꽃꿀을 모아 꿀을 만들어보세요.
        \ "
      2-3 Bee Conditionals 5: "꽃꿀이 없는 자주색 꽃에서 꽃꿀을 모으지 않도록 조심하세요. \\\r\n먼저 '꽃꿀이 있으면'
        블록을 이용해서 꽃꿀의 양이 1인지 확인해야합니다."
      2-3 Bee Conditionals 6: '"만약" 블록을 사용해서 이 꽃에 꽃꿀이 있는지 확인해보세요.'
      2-3 Bee Conditionals 7: 꽃꿀이 있는 꽃에서만 꽃꿀을 모아보세요.
      2-3 Bee Conditionals 8: |-
        이 꽃밭에는 빨강 꽃과 자주색 꽃이 있습니다.
        빨강 꽃은 꽃꿀이 얼마나 있는지 나타나있지만, 자주색 꽃에는 얼마나 있는지 알 수 없습니다.
        꽃꿀을 모두 모아 보세요.
      2-3 Bee Conditionals 9: 각 꽃에서 꽃꿀을 모두 모아주세요.
      2-3 Bee Conditionals Assessment 1: |-
        형성평가: 꽃꿀을 모두 모아주세요.
        자주색 꽃에 꽃꿀이 없으면 꽃꿀을 뽑지 않도록 주의하세요.
      2-3 Bee Debugging 1: |-
        이 블록들에는 오류들이 있어서 짜증이 나네요.
        모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류들을 수정해주세요.
      2-3 Bee Debugging 10: "이 블록들에는 오류들이 있어서 짜증이 나네요. \\\r\n모든 꽃꿀을 모아서 꿀을 만들 수 있도록
        오류(들)을 수정해주세요."
      2-3 Bee Debugging 2: "문제점을 찾을 수 있으세요?\\\r\n모든 꽃꿀을 모을 수 있도록 오류(들)을 수정해주세요."
      2-3 Bee Debugging 3: |-
        Ooh, this one stings!

        Fix the error(s) to collect all of the nectar.
      2-3 Bee Debugging 4: |-
        이 블록들에는 오류들이 있어서 짜증이 나네요.
        모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류(들)을 수정해주세요.
      2-3 Bee Debugging 5: "꽃들이 맛있어보여요! \\\r\n\\\r\n모든 꽃꿀들을 모을 수 있도록 오류(들)을 고쳐주세요.
        단계별 실행을 사용할 수 있습니다."
      2-3 Bee Debugging 6: |-
        What a sweet challenge!

        Fix the error(s) to collect all of the nectar.
      2-3 Bee Debugging 7: 모든 꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요.
      2-3 Bee Debugging 8: |-
        So many beautiful flowers!

        Fix the error(s) to collect all of the nectar.
      2-3 Bee Debugging 9: "\"벌벌\" 떨지 마세요! \\\r\n\\\r\n모든 꽃꿀들을 모아 꿀을 만들 수 있도록, 이 프로그램의
        오류들을 고쳐야 합니다."
      2-3 Bee Debugging Assessment 1: "형성평가: 이제 여러분들이 아는 것들을 보여줄 시간입니다!\\\r\n\\\r\n모든
        꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요."
      2-3 Bee Functions 1: |-
        함수들은 어떤 작업을 수행할 때 사용하는 블럭들의 집합이라고 할 수 있습니다.
        "꽃꿀 2번 모으기" 를 이용해서 각 꽃들에서 꽃꿀을 모아보세요.
      2-3 Bee Functions 10: "퍼즐을 실행 할때마다 자주색 꽃들에는 꽃꿀이 1개 또는 0 개 있을 수 있습니다.   \\\r\n\\\r\n자주색
        꽃에 꽃꿀이 있을 때에만 꽃꿀을 모으는 함수를 만들어보세요."
      2-3 Bee Functions 2: "함수들은 어떤 작업을 수행하는데 블럭들의 모임이라고 볼 수 있습니다.  \\\r\n\\\r\n\"5번
        모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      2-3 Bee Functions 3: 각 꽃에서 꽃꿀을 모두 모아주세요.
      2-3 Bee Functions 4: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는
        함수입니다.  \\\r\n\\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      2-3 Bee Functions 5: |-
        꽃들에 더 많은 꽃꿀이 들어있어요.
        주어진 함수를 수정해서, 꽃꿀을 4번 얻을 수 있게 하고 모든 꽃들로 부터 모든 꽃꿀을 모으세요.
      2-3 Bee Functions 6: 이제 같은 함수를 사용해서, 3개의 꽃들로 부터 꽃꿀을 모으도록 해보세요.
      2-3 Bee Functions 8: |-
        꽃꿀을 7번 모으고, 앞으로 이동한 후, 7개의 꿀을 만드는 함수를 만들어보세요.
        그 함수를 사용해서 각 꽃들로부터 꽃꿀을 모으고, 각 벌집에 꿀을 만들어 넣으세요.
      2-3 Bee Functions 9: 길을 따라 아래로 내려간 후, 꽃꿀을 얻고, 꿀을 만들고, 다시 처음 위치로 돌아가는 함수를 만들어보세요.
      2-3 Bee Functions Assessment 1: '형성평가: 주어진 함수를 이용해서 각 꽃에서 꽃꿀을 모아보세요.'
      2-3 Bee Functions Assessment 2: '형성평가: 꿀벌이 앞으로 이동해서 3개의 꿀을 만들고, 다시 돌아오는 함수를
        만들어보세요.'
      2-3 Bee Loops 1: "저 꽃들이 달콤해 보여요!\\\r\n\\\r\n최대한 적은 블록들을 사용해 각 꽃들에서 꽃꿀을 모아보세요."
      2-3 Bee Loops 10: 모든 꽃꿀을 모을 수 있도록, 다른 2개의 반복 구조 안에 반복 구조를 넣으세요.
      2-3 Bee Loops 13: '형성평가: 최대한 적은 블록들을 사용해서 꽃꿀을 모아보세요.'
      2-3 Bee Loops 1A: "안녕하세요! 여러분? 저는 꿀벌입니다.\n이 꽃들로부터 꽃꿀을 모을 수 있게 도와주세요. "
      2-3 Bee Loops 2: 최대한 적은 블록들을 사용해서 모든 꽃꿀을 모으고 꿀을 만들어 보세요.
      2-3 Bee Loops 2A: 이번에는, 1개의 반복 구조를 사용해서 모든 꿀을 모아보세요.
      2-3 Bee Loops 3: |-
        최대한 적은 블록들을 사용해서
        각 꽃에서 꽃꿀을 모은 후, 각각의 벌집에 꿀을 만들어 넣어 보세요.
      2-3 Bee Loops 3A: 모든 꽃꿀을 모으기 위해, 반복 구조를 사용해보세요.
      2-3 Bee Loops 3B: 반복 블록을 사용해서, 꽃꿀을 모두 모으고 꿀을 만들어보세요.
      2-3 Bee Loops 4: "꿀벌이 엄청 바쁘네요!\\\r\n\\\r\n최대한 적은 블록들을 사용해서\n꽃꿀을 모으고 꿀을 만들 수
        있도록 꿀벌을 도와 주세요."
      2-3 Bee Loops 4A: "이 퍼즐을 해결하려면 몇 번 반복해야할까요? \\\r\n\\\r\n반복 실행 구조는 매우 편리합니다!\n반복
        실행 구조를 사용해서 최대한 적은 블록들로 해결해 보세요."
      2-3 Bee Loops 5: "이 길의 모양은 다른 것들과 다릅니다. \\\r\n\\\r\n최대한 적은 블록들을 사용해서 꽃꿀을 모두
        모아보세요."
      2-3 Bee Loops 6: 꿀벌이 꽃꿀을 모으고 꿀을 만들 수 있는 가장 빠른 방법을 찾을 수 있나요?
      2-3 Bee Loops 7: |-
        와 꽃밭이 이쁘네요!
        7 블록보다 적은 블록을 사용해서 꿀벌이 모든 꽃들을 살펴볼 수 있게 해주세요.
      2-3 Bee Loops 8: "자주색 꽃들이 몇 개의 꽃꿀을 가지고 있는지 알 수 없습니다. \\\r\n\\\r\n\"꽃꿀이 있으면\"
        반복 블록을 이용해서, 모든 꽃꿀을 모아보세요. \\\r\n\\\r\n이 반복 구조는 조건이 참인 동안 계속 반복됩니다. 이 경우에서는
        '꽃꿀의 개수>0' 인 동안 반복되는 것입니다."
      2-3 Bee Loops Assessment 1: '형성평가: ''~인 동안'' 반복 구조를 이용해서, 이 꽃에서 꽃꿀을 모두 모아보세요.'
      2-3 Maze 1: '나쁜 돼지를 잡을 수 있게 도와주세요! "실행하면" 블록 아래에 `앞으로 이동` 블록들을 여러 개 쌓아 붙인 후,
        `실행`을 눌러보세요. '
      2-3 Maze 10: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze 12: 1개의 '반복' 블록 안에 1개의 '앞으로 이동' 블록이 들어있는 반복 실행 구조를 이용해서 돼지에게로 이동시켜주세요.
      2-3 Maze 13: Get me to the pig! You can only use one move forward block this
        time
      2-3 Maze 15: 이 퍼즐에서는 두 개의 반복(횟수) 블록을 이용하면 블록들을 최소한으로 사용할 수 있습니다.
      2-3 Maze 16: 반복 실행 구조 안에는 여러 개의 블록을 넣을 수 있습니다! 이 단계들을 반복 실행시켜 좀비를 해바라기로 이동시켜주세요.
      2-3 Maze 16 before: 어떻게 하면 돼지에게로 최대한 빠르게 이동할 수 있을까요?
      2-3 Maze 2: 돼지가 내 깃털들을 마구 헤집어 놓으며 다니고 있어요. 저를 돼지에게 보내주세요!
      2-3 Maze 3: 길을 따라 움직여서, 바보 같은 돼지 녀석을 잡아줘. TNT 폭탄을 피하고, 깃털들이 날라다니지 않도록 해야 돼!
      2-3 Maze 4: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze 6: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면, 화가 날 것 같아!
      2-3 Maze 7: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze 8: 저를 돼지에게 이동시켜 주세요.
      2-3 Maze 9: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze Loops 1: Can you get me to the pig using 5 of the same kind of blocks?
      2-3 Maze Loops 17: 해바라기로 이동하기 위해서 여러분들이 배운 것들을 사용해보세요!
      2-3 Maze Loops 18: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복 실행 구조 안에 1개의
        반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      2-3 Maze Loops 19: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\\r\n최소한의 반복 실행 구조를 사용해서
        해바라기로 이동시켜주세요."
      2-3 Maze Loops 20: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      2-3 Maze Loops 21: 블록들을 최대한 적게 사용해서 해바라기로 이동시켜주세요!
      2-3 Maze Loops Assessment 1: '형성평가: 5개의 블록만 사용해서, 저를 해바라기로 보내주세요! '
      4-5 Artist 1: "상자 그리기를 완성할 수 있도록 도와주세요.\n(선의 길이는 300 픽셀입니다.) "
      4-5 Artist 11: |-
        녹색 줄들을 다 그리세요. 줄들의 길이는 300 픽셀로
        15 픽셀 만큼씩 떨어져 있습니다.
      4-5 Artist 2: 사각형을 완성할 수 있도록 '반복' 블록으로 이 코드를 반복시켜주세요.
      4-5 Artist 3: |-
        이 사각형 꽃 침대는 주변 둘레가 600입니다.
        긴 쪽의 길이는 200 입니다. 가능한 적은 블록을 사용하여 사각형을 그려보세요.
      4-5 Artist 3.5: "그럼 이번에 이 코드를 실행(또는 \"실행\" 누르기) 하면 \n무슨일이 벌어질지 생각해 보세요. 그 다음에
        여러 번 반복해서 그림을 완성해 보세요!"
      4-5 Artist 4: |-
        하나의 원 안에는 얼마나 많은 각이 있을까요? 블록들을 반복
        실행해서 무지개색의 원을 한 개 만들어 보세요.
      4-5 Artist 5: 좀비가 주어진 루프를 이용하여 이 그림을 정확하게 완성하도록 하려면 "???"를 무엇으로 바꿔야 할까요?
      4-5 Artist 6: |-
        이 정삼각형의 안쪽 각도는 60, 60, 60 도 입니다.
        각 변의 길이는 200 픽셀입니다. 그림을 완성해 보세요.
      4-5 Artist 7: |-
        이 직각삼각형의 안쪽 각도는 30, 60, 90 도 입니다.
        기울어진 변의 길이는 200 픽셀입니다. 그림을 완성해 보세요.
      4-5 Artist 8: "축구장의 중앙선은 사이드 라인과 직각입니다. \n이 경기장은 800 픽셀의 둘레를 가지고 있고 세로가 240
        픽셀입니다. 가로의 길이는 얼마일까요? \n\n경계선과 중앙선을 그려주세요."
      4-5 Artist 9: 디자인이 대칭이 되도록 나머지 반을 그려보세요. 삼각형들은 한 변의 길이가 50 픽셀인 정삼각형입니다.
      4-5 Artist Assessment 1: |-
        형성평가: 정삼각형을 그릴 수 있도록 반복 구조를 사용해 보세요.
        각 변의 길이는 300 픽셀입니다.
      4-5 Artist Free Draw 1: |-
        자유롭게 그려보세요!
        무엇이든지 그리고 싶은 것을 그려보세요.
      4-5 Artist Patterns 1: |-
        Draw this square using a loop.

        Each side is 20 pixels long.
      4-5 Artist Patterns 10: '이 코드는 두 줄의 육각형을 만들어 줍니다. - 전체 벌집을 다 그리기 위해서 4번 반복 실행하면
        됩니다. 힌트: 가장 마지막 반복에서 120 픽셀 만큼 뒤로 뛰어야, 화가가 화면을 벗어나지 않습니다.'
      4-5 Artist Patterns 11: '반 원을 그리기 위해서 얼마나 반복시켜야 할까요? '
      4-5 Artist Patterns 12: "반복하는 것을 복사하는데 오른쪽으로 돌기를 왼쪽으로 돌기로 바꾸면 어떻게 될까요? \\\r\n\\\r\n이
        웨이브를 만들기 위해서 반복해 주세요."
      4-5 Artist Patterns 13: "그림 틀을 만들기 위해서 전체를 4번 반복시켜 보세요. 모서리에 주의하세요 - 90도만 돌면
        안됩니다! \\\r\n\\\r\n3도씩 60번 돌면 반 원을 만들 수 있습니다. 이 코드 블록들 중 어느 것으로 모서리에 사분원(1/4
        원) 을 만들 수 있을까요?"
      4-5 Artist Patterns 2: 어떤 반복 구조 안에 다른 반복 구조를 넣으면, 중첩 반복이라고 부릅니다. 15개의 모든 사각형들이
        한 줄로 서려면 바깥쪽 반복 구조를 어떻게 추가해야 할까요?
      4-5 Artist Patterns 3: 좀더 어려운 것을 해보아요! 반복 구조 안에 반복 구조를 넣어봤는데, 다음 줄을 그리려면 화가를
        다시 이전 위치로 돌려 놓아야 해요. 전체 격자를 그리기 위해서 가장 바깥쪽 반복의 끝에 어떤 블록들을 놓아야 할까요?
      4-5 Artist Patterns 4: 이 다이아몬드는 각 변이 50 픽셀이고, 120도 각과 60도 각으로 이루어져 있습니다. 다이아몬드를
        그려보세요.
      4-5 Artist Patterns 5: "Repeat this code to make a row of 6 diamonds. \n\nNotice
        that we changed our diamond code to repeat 3 times instead of 2 - why do you
        think that is?"
      4-5 Artist Patterns 6: 다이아몬드 격자를 그리기 위해서는 얼마나 많이 반복해야 할까요?
      4-5 Artist Patterns 7: 이전 퍼즐에서 사용했던 코드를 변형해서 더 복잡한 패턴을 만들어보세요. 다이아몬드들이 얼마나 겹쳐
        그려지는지 살펴보고, 첫 번째 "뒤로 점프하기"를 100에서 50사이 정도로 바꿔보세요. - 그리고 나서 두 번째 "뒤로 점프하기"는
        얼마나 더 멀리 해야 할까요?
      4-5 Artist Patterns 8: 반복 구조를 사용해서 각 변의 길이가 40 픽셀이면서 내각의 크기가 60 도인 육각형을 만들어
        보세요.
      4-5 Artist Patterns 9: "주어진 코드를 3번 반복시켜서 모든 줄을 그려보세요. \\\r\n\\\r\n각각의 6각형들은
        왼쪽 끝에서 오른쪽 끝까지의 너비가 80픽셀입니다."
      4-5 Artist Patterns 9.5: 이 코드를 반복시켜서 두 줄로 육각형들을 만들어보세요. 두 번째 줄이 오른쪽으로 얼마나 빗겨
        그려져 있는지 살펴보세요.
      4-5 Artist Patterns Free Play: 마음대로 그리기 - 원하는 패턴을 직접 만들어보세요.
      4-5 Bee Conditionals 1: |-
        구름으로 가려 잘 보이지 않습니다!
        구름 아래에 꽃이 있는지 살펴보고, 꽃이 있는 경우에만 꽃꿀을 모아보세요.
        주의하세요, 계속 바뀝니다!
      4-5 Bee Conditionals 2: "More clouds! \n\nCheck underneath every cloud to see
        if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds
        hide the same thing!"
      4-5 Bee Conditionals 3: |-
        이제 꿀을 만들고 싶습니다.
        이 구름들 중 아래에 벌집이 있을 것입니다. 각 구름을 검사해야합니다!
      4-5 Bee Conditionals 4: 이 구름들은 꽃이나 벌집을 가립니다! 만약/아니면 블록을 사용해서 꽃인 경우에 꽃꿀을 모으고,
        꽃이 아닌 경우(즉, 벌집인 경우)에는 꿀을 만들도록 해주세요.
      4-5 Bee Conditionals 5: "이 안개 구름들 아래에는 꽃이나 벌집이 있을 수 있습니다.\\\r\n\\\r\n'만약/그렇지않으면'
        블록을 이용해서 꽃이면 꽃꿀을 모으고\\\r\n아니면 (즉, 벌집이라면) 꿀을 만들도록 해보세요."
      4-5 Bee Conditionals 6: "이 자주색 꽃에는 꽃꿀이 1, 2, 3개 있을 수 있습니다. \\\r\n\\\r\n이 \"만약\"
        블록은 다른 \"만약/아니면\" 블록과 결합되어서, \"만약/(아니고 만약/모두 아니면)\" 명령을 만들어낼 수 있습니다. \n\\\r\n\\\r\n꽃꿀의
        양을 모르는 경우에도 꽃꿀을 모두 얻을 수 있게 해보세요."
      4-5 Bee Conditionals 7: "자주색 꽃은 꽃꿀이 3, 2, 1 중 하나입니다. \n\\\r\n\\\r\n\"자주색 꽃 확인\"
        함수를 완성하고 이용해서 꽃의 모든 꽃꿀들을 모을 수 있도록 해보세요."
      4-5 Bee Conditionals 8: "\"꽃을 확인하고 꿀 만들기\" 함수의 내부를 완성해 주세요. \\\r\n\\\r\n자주색
        꽃의 꽃꿀이 3, 2, 1 인 경우에는 모든 꽃꿀을 모으세요. \\\r\n그 후에 앞으로 이동해서 꿀을 만들면 됩니다."
      4-5 Bee Conditionals Assessment 1: "**형성평가:** 이 구름은 한 개의 꽃꿀을 가지고 있는 꽃 아니면 한
        개의 꿀을 필요로 하는 벌집을 숨기고 있습니다. \\\r\n\\\r\n\"꽃꿀을 모으거나 꿀 만들기\" 함수를 완성하고 나서 그 함수를
        사용하여 꽃꿀이나 꿀을 모으도록 만들어 주세요.\\\r"
      4-5 Bee Debugging 1: "이 블록들이 왜 안되는지 진짜 잘 모르겠어요. \\\r\n\\\r\n고쳐주세요."
      4-5 Bee Debugging 10: 오류들을 찾아 고쳐주세요.
      4-5 Bee Debugging 11: 반복 횟수가 정확한가요?
      4-5 Bee Debugging 2: 꿀벌이 꽃꿀을 모아 꿀을 만들 수 있도록 도와주세요.
      4-5 Bee Debugging 3: 오류들을 찾아 고쳐주세요.
      4-5 Bee Debugging 4: |-
        이 블록들은 제대로 동작하지 않습니다.
        어떤 패턴인가요?
      4-5 Bee Debugging 5: 뭔가 틀린 것 같습니다...
      4-5 Bee Debugging 6: "자주색 꽃에는 꽃꿀이 얼마나 있는지 알 수가 없습니다. \\\r\n\\\r\n퍼즐이 실행될 때마다
        꽃에서 모든 꽃꿀을 뽑을 수 있도록, 블록들을 수정해보세요."
      4-5 Bee Debugging 7: 함수에 뭔가 빠졌습니다...
      4-5 Bee Debugging 8: 함수는 맞는데, 정확히 사용되지는 않았습니다.
      4-5 Bee Debugging 9: 왜 꿀벌이 충분한 꿀을 만들지 못 할까요?
      4-5 Bee Debugging Assessment 1: '형성평가: 코드를 수정해 주세요.'
      4-5 Bee Nested Loops 1: 꽃꿀을 모두 모으기 위해서 반복 구조를 사용해보세요.
      4-5 Bee Nested Loops 2: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      4-5 Bee Nested Loops 3: 중첩 반복 안에 시작 코드를 넣어서 모든 꽃꿀을 모아보세요.
      4-5 Bee Nested Loops 4: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩 반복을
        사용하면 됩니다. "
      4-5 Bee Nested Loops 5: 중첩 반복 구조를 만들어서 모든 꽃꿀을 모아보세요.
      4-5 Bee Nested Loops 7: 반복 구조를 다른 반복 구조 안에 넣어 중첩 반복을 만든 후 꽃에서 모든 꽃꿀을 모을 수 있도록
        해보세요.
      4-5 Bee Nested Loops 9: 반복 구조 안에 반복 구조를 중첩시켜서 이 꽃들로 부터 모든 꽃꿀을 모아보세요.
      4-5 Bee Nested Loops Assessment 1: "**형성평가:** 반복 구조들을 사용해서 모든 꽃꿀을 모으고 꿀을 만드세요."
      4-5 Bee Nested Loops Rows: 꽃들로 부터 꽃꿀을 모으세요. 중첩 반복을 사용하면 됩니다.
      4-5 Maze 1: 여보세요.. 저.. 좀비.. 해바라기.. 가야함..
      4-5 Maze 10: 4개의 블럭만 사용해서 해바라기로 갈 수 있나요?
      4-5 Maze 11: 6개의 블록만 사용해서 해바라기로 갈 수 있나요?
      4-5 Maze 12: |-
        좋아요. 이건 약간 다르네요.
        6개의 블록만으로 해보세요.
      4-5 Maze 2: 좀비를 해바라기로 이동시키되, 식충식물은 피해야 합니다.
      4-5 Maze 3: 해바라기.. 로.. 꼭.. 가야합니다.
      4-5 Maze 4: Use the "repeat" block to solve the puzzle quickly...
      4-5 Maze 5: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      4-5 Maze 6: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      4-5 Maze 7: Get the zombie to the sunflower quickly!  Can you solve the puzzle
        in fewer than 11 blocks?
      4-5 Maze 8: "가능한 적은 블록을 사용해서 좀비가 해바라기로 가도록 해주세요. \\\r\n(식충식물들은 피해야 합니다!)"
      4-5 Maze 9: "\"~할 때까지 반복\" 이라고 부르는 새로운 블럭이 있습니다. \\\r\n이 블록은 좀비가 해바라기에게 갈 때까지
        명령을 반복하도록 해줍니다. \\\r\n\\\r\n\"~할 때까지 반복\" 블록을 사용하고 가능한 적은 블록으로 퍼즐을 해결해 보세요."
      4-5 Maze Assessment 1: '형성평가: 최대한 적은 블록을 사용하여 해바라기로 가기'
      4-5 Maze Conditionals 1: |-
        "~할 때까지 반복" 블록을 이용해서,
        좀비를 해바라기로 이동시켜주세요.
      4-5 Maze Conditionals 10: "블럭을 3개 더 붙여서, 좀비가 좀 더 복잡한 미로를 빠져나갈 수 있도록 도와주세요.\\\r
        \n\\\r \n성공한다면 아무리 크고 복잡한 미로라고 하더라도 거뜬히 통과할 수 있을거예요."
      4-5 Maze Conditionals 2: |-
        "~할 때까지 반복" 블록을 이용해서,
        좀비를 해바라기로 이동시켜주세요.
      4-5 Maze Conditionals 3: 'Use the `if` block to help me decide when to turn. '
      4-5 Maze Conditionals 4: 음... 이번이 마지막 퍼즐입니다! "만약" 블록과 "반복" 블록을 함께 사용해야 합니다.
      4-5 Maze Conditionals 5: "\"Me want sunflower!\"  \n\nUse an `if` statement
        to get the zombie to the sunflower with the fewest number of blocks."
      4-5 Maze Conditionals 6: "\"해바라기 먹어!\" \\\r\n\\\r\n\"만약\" 블록을 사용하고 최대한 적은 블록만
        사용해서 좀비를 해바라기로 보내주세요."
      4-5 Maze Conditionals 7: 이 퍼즐을 해결하는 것이 그리 어렵지는 않지만, 식충 식물을 조심하세요!
      4-5 Maze Conditionals 8: "\"조건/선택\" 블럭은 조건을 검사한 다음에 그 결과에 따라 하나의 작업을 선택해 실행해
        줍니다. \\\r\n\\\r\n이 블록을 사용해서 저를 해바라기로 보내주세요."
      4-5 Maze Conditionals 9: "\"조건/선택\" 블록을 다시 한 번 사용해 보겠습니다. \\\r\n\\\r\n손가락으로
        따라가 보세요. 한 번에 성공할 수 있겠어요?"
      4-5 Maze Conditionals Assessment 1: '**형성평가:** "~할 때까지 반복" 블록과 "만약/아니면" 블록을
        사용하고 가능한 적은 블록으로 저를 해바라기로 보내주세요.'
      4-5 Nested Loops 1: '이 삼각형들을 그리는 코드를 완성시켜 주세요. 첫 번째 것은 만들어져 있습니다. 힌트: 360 도
        방향으로 3개의 삼각형들이 있습니다.'
      4-5 Nested Loops 11: 중첩 반복을 사용해서 사람다니는 길에 10개의 사각형들을 그려주세요. 각 사각형들은 30 픽셀입니다.
      4-5 Nested Loops 12: 중첩 반복을 이용해서 36개의 삼각형들을 그려주세요.
      4-5 Nested Loops 2: "이번에는 반복을 다른 반복에 넣어서 10개의 삼각형을 그려보세요.\n이러한 것을 \"중첩\" 반복이라고
        합니다.  "
      4-5 Nested Loops 3: "다른 반복 안에 시작 코드를 중첩시켜 넣어서 해를 만들어 주세요. \\\r\n\\\r\n이렇게 가운데가
        빈 멋진 디자인을 얻기 위해서는 회전하기 전에 삼각형의 길이만큼 앞으로 점프해야 합니다."
      4-5 Nested Loops 5: 주어진 코드를 반복시켜서 풍차를 만들어 주세요.
      4-5 Nested Loops 6: 삼각형 코드를 반복시켜서 육각형을 그려 주세요.
      4-5 Nested Loops 7: "Loop this design 10 times. \n\nHow much do you have to
        turn each time you loop?"
      4-5 Nested Loops 8: "Loop this shape 6 times. \n\nHow much do you have to turn
        each time you loop? "
      4-5 Nested Loops 9: 악어 입 안에 이빨을 그려주세요!
      4-5 Nested Loops Assessment 1: '형성평가: 중첩 반복을 사용해서 디자인을 완성시켜주세요.'
      4-5 While Loops 1: 구덩이로 이동해서 "메우기" 블록으로 흙을 2번 메우기 해주세요.
      4-5 While Loops 2: 흙더미로 이동하고 "치우기 1" 블록으로 흙을 5번 치우기 해주세요.
      4-5 While Loops 3: "블록을 가능한 적게 사용해서 퍼즐을 해결하세요. \\\r\n\\\r\n흙더미로 이동해서 흙을 모두 치우고,
        구덩이로 이동해서 흙을 모두 메워 주세요."
      4-5 While Loops 4: "Wow, look at that! \n\nI don't know how many shovelfuls
        of dirt this hole needs.\\\nCan you write a program that keeps using the `fill`
        block until the ground is even?  "
      4-5 While Loops 5: 와! 이번에는 깊은 구덩이가 2개 입니다. 2개의 구덩이를 모두 채워주세요.
      4-5 While Loops 6: 와우, 저기 엄청 큰 흙더미가 있네요! 흙더미를 모두 치워보세요.
      4-5 While Loops 7: 와우, 이제는 3개의 흙더미가 있습니다! 3개의 흙더미를 모두 치워주세요.
      4-5 While Loops 8: " 진짜 깊은 구덩이와 진짜 큰 흙더미가 있습니다. 구덩이를 메우려면 흙더미를 몇 번 옮겨야 할까요?"
      4-5 While Loops Assessment 1: 구덩이와 흙더미가 많이 있습니다. 모든 구덩이와 흙더미를 없애주세요.
      AB_Debug_PlayLab3: Move the knight to each of the flags. If something goes wrong,
        look for bugs!
      Alien Defender: 'Project Idea: Make a defender game in Play Lab!'
      CDEF_debugging_flappy2: Why doesn't this game work?
      CSD U3 Boolean Modify: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Modify_2018: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Modify_2019: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Predict: What do you think this code will do when it is run?
        Predict what each console.log() command will print, then run the program to
        check your predictions.
      CSD U3 Boolean Predict_2018: What do you think this code will do when it is
        run? Predict what each console.log() command will print, then run the program
        to check your predictions.
      CSD U3 Boolean Predict_2019: What do you think this code will do when it is
        run? Predict what each console.log() command will print, then run the program
        to check your predictions.
      CSD U3 Keypress Boolean: Modify the code so that all of the console.log commands
        print true
      CSD U3 Keypress Boolean_2018: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Boolean_2018_2019: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers: Modify the code so that all of the console.log commands
        print true
      CSD U3 Keypress Watchers_2018: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers_2019: Modify the code so that all of the console.log
        commands print true
      CSD U3 L5 Freeplay: Change the value of petalSize multiple times. How does it
        change your drawing?
      CSD U3 L5 Freeplay_2018: Change the value of petalSize multiple times. How does
        it change your drawing?
      CSD U3 L5 Freeplay_2019: Change the value of petalSize multiple times. How does
        it change your drawing?
      CSD U3 Mouse Input Bee 2: Do this
      CSD U3 Mouse Input Bee 2_2018: Do this
      CSD U3 Mouse Input Bee 2_2019: Do this
      CSD U3 Sprites intro sprites: Do This
      CSD U3 Sprites intro sprites_2018: Do This
      CSD U3 Sprites intro sprites_2019: Do This
      CSD U3 Variables change circle size: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables change circle size_2018: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables change circle size_2019: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables naming rules v2: Change the value of petalSize multiple times.
        How does it change your drawing?
      CSD U3 Variables naming rules v2_2018: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables naming rules v2_2018_2019: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random with assignment: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random with assignment_2018: Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables random with assignment_2019: Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U5 black white images pixelation: Complete the X shape by typing 0s and
        1s
      CSD U5 black white images pixelation 2: Draw a smiley face (click here to see
        image)
      CSD U5 black white images pixelation 2_2018: Draw a smiley face (click here
        to see image)
      CSD U5 black white images pixelation 2_2019: Draw a smiley face (click here
        to see image)
      CSD U5 black white images pixelation 3: Change the width and height sliders
        to find the image (click here to see more)
      CSD U5 black white images pixelation 3_2018: Change the width and height sliders
        to find the image (click here to see more)
      CSD U5 black white images pixelation 3_2019: Change the width and height sliders
        to find the image (click here to see more)
      CSD U5 black white images pixelation 4: Add eyebrows to the smiley face (click
        here to see the image)
      CSD U5 black white images pixelation 4_2018: Add eyebrows to the smiley face
        (click here to see the image)
      CSD U5 black white images pixelation 4_2019: Add eyebrows to the smiley face
        (click here to see the image)
      CSD U5 black white images pixelation 5: Draw anything you like
      CSD U5 black white images pixelation 5_2018: Draw anything you like
      CSD U5 black white images pixelation 5_2019: Draw anything you like
      CSD U5 black white images pixelation_2018: Complete the X shape by typing 0s
        and 1s
      CSD U5 black white images pixelation_2019: Complete the X shape by typing 0s
        and 1s
      CSD U6 params modify clouds: |-
        # 구름

        이 프로그램은 당신이 음향 센서를 불면 구름이 움직이도록 만들지만 그것이 끝은 아닙니다.

        # 이렇게 해보세요

        -   구름을 움직이게 할 새로운 함수 '구름이동(이름)'을 만들어 주세요.
        -   (힌트: '구름이동0'함수와 거의 같은 함수를 만들어 주세요)
        -   이벤트 상자안에서 각각 한번씩 구름 이름에 대해 새로운 '구름이동(이름)' 함수를 불러주세요.
        -   (힌트: '반복구름(이름)'함수를 여러번 불렀던 방법과 유사합니다.
      CSD U6 params modify clouds_2018: |-
        # 구름

        이 프로그램은 당신이 음향 센서를 불면 구름이 움직이도록 만들지만 그것이 끝은 아닙니다.

        # 이렇게 해보세요

        -   구름을 움직이게 할 새로운 함수 '구름이동(이름)'을 만들어 주세요.
        -   (힌트: '구름이동0'함수와 거의 같은 함수를 만들어 주세요)
        -   이벤트 상자안에서 각각 한번씩 구름 이름에 대해 새로운 '구름이동(이름)' 함수를 불러주세요.
        -   (힌트: '반복구름(이름)'함수를 여러번 불렀던 방법과 유사합니다.
      CSD U6 params modify planes: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSD U6 params modify planes_2018: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSD U6 params modify planes_2019: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSDU4 - Design Mode - 16: Add an event handler for the button using the "Insert
        and show" link in the Design Mode Events tab. (Click to see full instructions).
      CSDU4 - Design Mode - 17: Update the ID names and `console.log` messages to
        match the correct button. (Click to see full instructions.)
      CSDU4 - Design Mode - 18: Fix the layout of the bullseye game. (Click to see
        full instructions)
      CSDU4 - Design Mode - 4: Improve the button by choosing a descriptive and meaningful
        ID. (Click to see full instructions)
      CSDU6 arrays select rainbow: Write the contents of the array to the screen in
        numerical order. (Click to see full instructions)
      CSDU6 arrays select rainbow_2018: Write the contents of the array to the screen
        in numerical order. (Click to see full instructions)
      CSDU6 arrays select rainbow_2019: Write the contents of the array to the screen
        in numerical order. (Click to see full instructions)
      CSDU6 arrays select random: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select random_2018: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select random_2019: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select variable: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select variable_2018: Write a program that displays a randomly
        chosen color from the array. (Click to see full instructions)
      CSDU6 arrays select variable_2019: Write a program that displays a randomly
        chosen color from the array. (Click to see full instructions)
      Choose Your Own Adventure: You can do whatever you want in play lab! Here's
        an example of choose your own adventure story in play lab.
      Course 4 Artist 1: "상자를 그릴 수 있도록 도와주세요.\n(각 선의 길이는 200 픽셀입니다.) "
      Course 4 Artist 10: "힌트를 다시 보려면 여기를 눌러보세요!\\\r\n\\\r\n재미있는 모양을 위한 코드가 있습니다.
        한 번 실행할 때마다 회전시키면 어떤 일이 일어날까요? 이 모양의 각도는 420도까지 가능하고, 실행할 때마다 화가가 바라보는 방향이
        바뀔 것입니다. 그리고 그 각도는 정확히 60도 입니다."
      Course 4 Artist 11: 자 이제 도전해보세요! 실패하더라도 계속 도전해 보세요. 한 번에 성공하는 사람은 거의 없습니다. 힌트가
        필요하다고요? 여기를 눌러보세요!
      Course 4 Artist 12: "멋진 디자인을 위한 도움말이나 힌트가 필요하면? 여기를 클릭하세요!\\\r\n\\\r\n아니면, 자유롭게
        디자인해 보세요!"
      Course 4 Artist 13: 계속 하고 있나요? 빈 캔버스가 있습니다. 마음대로 그려보세요.
      Course 4 Artist 2: 이 코드를 반복시켜서 회색 사각형을 그려주세요. (각 변의 길이는 300픽셀입니다.)
      Course 4 Artist 20: 계속 하고 있나요? 빈 캔버스가 있습니다. 마음대로 그려보세요.
      Course 4 Artist 3: 이 코드를 실행(또는 실행 누르기) 하면 어떻게 될지 생각해 보세요. 그 다음에 그림을 완성할 때까지
        충분히 여러 번 시도해 보세요.
      Course 4 Artist 4: 원 안에는 얼마나 많은 각이 있을까요? 색 원들을 만들어내기 위해서 필요한 수를 반복 블록에 채워넣어주세요.
      Course 4 Artist 5: '이 디자인의 나머지 반을 만들어서 대칭이 되도록 만들어 보세요. 삼각형들은 변들이 같고 50 픽셀 길이입니다.
        힌트: 추가해야 할 모든 블록들을 찾아내기 위해서 코드를 여러 번 실행시켜봐야 할 수도 있습니다.'
      Course 4 Artist 6: "이 삼각형들을 그리기 위한 코드를 완성시켜보세요. \\\r\n\\\r\n각 정삼각형의 한 변의 길이는
        100 픽셀입니다. "
      Course 4 Artist 7: "이번에는 반복을 다른 반복에 넣어서 10개의 삼각형을 그려보세요.\n이러한 것을 중첩 반복이라고 합니다.
        힌트: 360도를 돌며 10개의 삼각형을 그려야 합니다.  "
      Course 4 Artist 8: 이 코드 블록을 여러번 반복시켜 해를 그려보세요.
      Course 4 Artist 8a: 이 모양이 기억이 나나요? 이제 처음에 아무 블록들이 없는 상태로 만들어내야 합니다!
      Course 4 Artist 9: "이 디자인을 10번 반복 시키면서, 한 번 그릴 때마다 회전시켜보세요.\\\r"
      Course 4 Artist Binary 1: "여기에 1, 0 로만 이루어진 문자열을 입력해서, 화가를 왼쪽에서 오른쪽으로, 위에서 아래로
        움직이는 함수가 있습니다. 화가는 1을 보면 사각형을 채우고, 0이면 무시할 것입니다. \\\r\n\\\r\n이 코드를 실행시킨 후,
        화가가 2진 정보를 이용해서 이 패턴을 그려내는 것을 살펴보세요."
      Course 4 Artist Binary 2: 이 이미지를 그려내기 위해서, 어떤 2진 문자열이 8번 반복시켜 줄까요?
      Course 4 Artist Binary 3: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      Course 4 Artist Binary 4: 각 2진 문자는 이 그림의 한 줄을 의미합니다. 2진 문자열을 재배치해서 찡그린 얼굴 모양을
        웃는 얼굴 모양으로 만들어 주세요.
      Course 4 Artist Binary 5: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것 일까요?
      Course 4 Artist Binary 6: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      Course 4 Artist Binary 7: 이 그림을 마무리 해보세요.
      Course 4 Artist Binary Free Play 2: '자유 플레이: 빈 캔버스가 있습니다. 마음대로 재미있게 그려보세요!'
      Course 4 Artist Binary Free Play 2a: "좀 더 높은 해상도로 표현할 수 있는 캔버스가 여기 있습니다. - 16
        픽셀 \\* 16 픽셀!\\\r\n\\\r\n2진 비트 문자열로 어떤 것이 그려지는 지 살펴보세요."
      Course 4 Artist Binary Free Play 2b: 여기를 눌러 힌트를 살펴보세요.
      Course 4 Artist Binary pre1: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는
        0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\\r\n\\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면,
        그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을
        그리도록 해보세요."
      Course 4 Artist For Loops 1: 반복 블록을 1개 사용하여 너비가 50 픽셀인 삼각형을 그려주세요.
      Course 4 Artist For Loops 11: '이전 스테이지에서 어떤 모양의 변의 길이를 조절하기 위해 사용했던 변수에 대해서
        생각해 보세요. 이번에는 "카운터" 변수라는 것을 이용해서 같은 작업을 해 보도록 하겠습니다. 이 패턴은 삼각형으로 시작하고, 한 변을
        붙이면서 10각형(10개의 변을 가진 다각형) 을 그립니다. 각 변의 길이는 100 픽셀 입니다. '
      Course 4 Artist For Loops 11a: "자 이제 모두 함께 사용해 봅시다! \"반복(~인 동안)\"과 \"카운터\" 변수를
        이용해서, 앞의 것보다 2개 더 많은 변을 가지고 있는 각각의 도형들을 만들어보세요. 각 변의 길이는 각 다각형의 변의 개수의 10배이어야
        합니다.\\\r\n\\\r\n아주 적은 코드가 미리 주어져 있습니다."
      Course 4 Artist For Loops 14: 일반적인 도형들에 사용하는 각 보다 조금 더 많거나 적게 각을 회전시키면 멋진 효과를
        만들어낼 수 있습니다. 이전 레벨에서의 코드를 이용해 실험해 보는데, 89도를 사용하면 이런 비틀어진 사각형 나선 구조를 만들어 낼
        수 있습니다.
      Course 4 Artist For Loops 15: '자유 플레이: "반복(~동안)"을 이용해서 원하는 그림들을 만들어보세요. 여러분이
        사용할 수 있는 편리한 변수들을 몇 개 더 추가했습니다.'
      Course 4 Artist For Loops 2: '50 부터 100 까지 10씩 올리며 카운트하는 반복(~동안) 구조 안에 삼각형을
        그리는 코드를 넣어 두었습니다. 참고: "실행"을 누르기 전에 코드를 먼저 살펴보세요.'
      Course 4 Artist For Loops 3: |-
        이번 퍼즐을 해결하기 위해서, 이전 퍼즐을 참고하세요.
        가장 작은 삼각형의 크기는 한 변이 20 픽셀이고, 가장 큰 삼각형의 크기는 한 변이 200 픽셀입니다.
        각 삼각형들은 바로 전 삼각형 보다 20 픽셀 만큼 씩 더 큽니다.
      Course 4 Artist For Loops 4: "이 사각형들을 그리려면 배웠던 것들에서 어떤 것을 바꾸면 될까요?\n한 변의 길이가
        15 픽셀인 사각형으로 시작하고, 가장 큰 사각형은 한 변이 300 픽셀입니다.\n각 사각형은 바로 전 사각형 보다 15 픽셀 만큼
        씩 더 큽니다. "
      Course 4 Artist For Loops 6a: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      Course 4 Artist For Loops 8: "이전 그림에서 1가지만 바꾸면 이 그림을 만들 수 있습니다. 어떤 것을 바꾼 것인지
        찾아낼 수 있나요?\\\r\n\\\r\n힌트: 뭔가 제거하면 됩니다!"
      Course 4 Artist For Loops Challenge: "**Challenge:** Can you figure out how
        to use all of the things you've learned to create this image of polygons,
        all with 40 pixel sides?"
      Course 4 Artist For Loops inspire: "멋진 자유 플레이: 여러분은 이제 이런 패턴을 만들기 위해 필요한 모든
        것들을 배웠습니다! 이 그림이 여러분이 느끼기에 멋지다면, 비슷한 것을 한 번 만들어 보세요. 아니면, 만들고 싶은 것을 자유롭게 만들어도
        됩니다.\\\r\n\\\r\n힌트가 필요한가요? 여기를 클릭하세요."
      Course 4 Artist Functions Inspiration: 여기를 눌러 힌트를 다시 살펴보세요.
      Course 4 Artist Functions challenge: 여기를 눌러 힌트를 다시 살펴보세요.
      Course 4 Artist Inspire: "멋진 디자인을 위한 도움말이나 힌트가 필요하면? 여기를 클릭하세요!\\\r\n\\\r\n아니면,
        자유롭게 디자인해 보세요!"
      Course 4 Artist Vars 1: "Let's draw an equilateral triangle. \n\nIt has to be
        exactly 100 pixels long on each side."
      Course 4 Artist Vars 11: |-
        이전 퍼즐에서와 같은 개념들을 사용하는 좀 더 복잡한 코드입니다.

        -   사각형들로 만들어진 이 그림을 그리기 위해서 "변" 변수를 어떻게 설정해야 할까요?
      Course 4 Artist Vars 12: |-
        자 이제 "면" 변수를 살펴보세요.

        5.  이 알고리즘에 더 많은 면 개수를 추가하면 할 수록, 전체 패턴이 더 커집니다! 그리고 "길이"라는 변수가 더 있습니다. 그리고 이제 "앞으로 이동" 블록이 없어도 할 수 있습니다. 모양을 만들려면 "길이" 변수를 75로 설정하세요.
      Course 4 Artist Vars 13: "전체 패턴을 화면에 맞추기 위해서는, 도형에 여러 개의 변들이 있을 때 각 변들의 길이를
        줄여야 합니다.\n\\\r\n이 멋진 패턴을 만들어낸 알고리즘을 새롭게 만들어보세요. 각각의 모양을 정확히 맞추기 위해서 \"변\"
        변수와 함께 수학 블록을 사용해서, \"길이\" 변수의 값을 계산할 수 있도록 하면 됩니다. 각 다각형의 둘레는 300 픽셀입니다.\\\r\n힌트가
        필요한가요? 여기를 눌러보세요."
      Course 4 Artist Vars 14: "자유 플레이: 확인해보세요! 여러분의 알고리즘은 반복 구조가 한 번 이상 중첩되어있습니다.
        두 개의 변수 값들을 바꾸어 멋진 패턴들을 만들어보면서 실험해 보세요.\\\r\n\\\r\n더 멋지게 만들어 보려면, 색을 사용해 보세요!\n반복
        구조들 안에 랜덤색을 사용해서 디자인이 어떻게 변화 되는지 살펴보세요."
      Course 4 Artist Vars 2: 이번에는 "앞으로 150 만큼 이동"을 사용하는 대신에 "이동" 블록이 "길이"라는 변수에 저장되어있는
        값을 이용합니다. 삼각형을 그리기 위해서 "길이"를 150 으로 입력해 보세요.
      Course 4 Artist Vars 4: 이번에는 너비의 2배 만큼 높이를 가진 사각형을 만들어보세요. "너비"라는 변수를 100 으로
        설정하면 됩니다. 수학 블록들을 이용해 코드를 완성해 주세요.
      Course 4 Artist Vars 6: "모든 정 다각형들을 만들 수 있는 코드가 있습니다.\n그 값이 4 로 입력되어있는 새 변수가
        있습니다. (수학 블록과 함께) 면 수 변수를 사용해서, 다각형의 면들이 몇 개인지에 상관없이 자동으로 회전시켜보세요.\\\r\n\\\r\n여기를
        눌러 힌트를 다시 살펴보세요."
      Course 4 Artist Vars 7: "이전 퍼즐을 통해서 배웠던 것을 이용하면 됩니다. \"면\" 변수를 사용해서 육각형을 만들어보세요.\\\r\n\\\r\n변수
        값 하나만 변화시키면, 삼각형, 사각형, 오각형,..., 팔각형을 모두 만들 수 있습니다."
      Course 4 Artist Vars 8: '자유 플레이: 이 도형의 면의 수로 실험해 보세요. 면의 개수가 어떻게 바뀌든지 상관없이,
        도형의 크기는 같아지도록 알고리즘을 수정해 주세요. 힌트: 처음 시작하는 길이를 면의 개수로 나누면, 면의 개수가 많아지는 만큼 각
        면의 길이는 짧아집니다.'
      Course 4 Bee 1: "The bee can't tell what's under the cloud! \n\nUse the `if`
        block to check whether there is a flower under the cloud. \n\nGet nectar one
        time, ONLY if there is a flower."
      Course 4 Bee 2: '"만약/아니면" 블록으로 꽃인지? 아니면 벌집인지? 확인하도록 해 보세요. 만약 꽃이면 꽃꿀을 모으고...
        아니면, 꿀을 만들어보세요!'
      Course 4 Bee 3: |-
        물체는 꽃이거나 벌집입니다.
        이번에는 "만약/아니면" 블록을 이용해서 꽃이면 꽃꿀을 얻고, 아니면(꽃이 아니면 벌집이므로) 꿀을 만들게 해보세요.
      Course 4 Bee Loops 5 NEW: 3개의 꽃이 있습니다. 가장 적은 블록 개수로 꽃꿀을 모을 수 있도록, 3번 반복시키는 명령
        패턴을 찾아보세요.
      Course 4 Bee Loops 5a NEW: |-
        이제 최대한 적은 블록들을 사용해서
        벌집까지 가는 길에 있는 꽃들의 모든 꽃꿀을 모을 수 있도록 해주세요. 마지막에는 꿀을 만들면 됩니다.
      Course 4 Bee Params 1: '"꽃꿀 3번 모으기" 를 이용해서 꽃꿀을 모두 모으기 위한 순서를 만들어 보세요. 꽃꿀을 모으기
        위해 돌고 움직인 다음에 원래 위치로 돌아오면 됩니다.'
      Course 4 Bee Params 2: '"꽃꿀 3번 모으기" 함수를 수정해서 꽃을 향해 왼쪽으로 도는 대신 오른쪽으로 돌도록 해주세요.'
      Course 4 Bee Params 3: "양쪽에 꽃들이 있네요!\n\"왼쪽\", \"오른쪽\" 이라는 변수와 \"방향\"이라는 매개변수를
        \"꽃꿀 3번 얻기\" 함수에 붙여두었습니다.\n\"꽃꿀 3번 얻기\" 함수를 수정해서, \"왼쪽\" 또는 \"오른쪽\" 변수의 값이
        전달될 때,\n지정한 방향으로 회전하도록 바꿔보세요.  "
      Course 4 Bee Params 4: 꽃들에서 모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요. 왼쪽/오른쪽 변수를 사용하세요.
      Course 4 Bee Params 5: 시험삼아 해보세요. - 방향 변수를 이용해서 "꽃꿀 5번 모으기" 함수를 만들어보세요.
      Course 4 Bee Params 6: |-
        이 모든 꽃꿀들을 1개의 함수로 모을 수 있다면 얼마나 좋을까요?
        "꽃꿀 개수"라는 매개 변수를 함수에 추가해서, 뽑아낼 꽃꿀의 양을 제어해 보세요.
        아마도 함수 이름을 바꾸고 싶기도 할 것입니다!
      Course 4 Bee Params 7: 모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요.
      Course 4 Bee Params 8: |-
        도전해보세요: 으, 이번에도 다루어야 할 꿀들이 있네요.
        꿀의 개수와, 꽃꿀의 개수를 모두 사용하는 함수를 다시 만들어보세요.
        2가지 가지 값들에 대해서 어떻게 해야할까요?
      Course 4 EC 1a: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 1b: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 2a: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 2b: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 2c: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 Maze 2: TNT를 피해 움직이세요!
      Course 4 Maze 3: '새를 돼지에게 이동시킬 수 있도록 프로그래밍 해보세요. '
      Course 4 Maze 4: |-
        이 퍼즐을 풀기 위해서...
        더 적은 블록들을 사용하는 "반복" 블록을 사용해보세요.
      Course 4 Maze 5: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      Course 4 Play Lab Params 1: Here's a function called `jump` that causes your
        main character to jump up 100 pixels. Run the program and use the jump function
        to collect all of the flags by moving the dog with the arrow keys.
      Course 4 Play Lab Params 10: "We've added one last function for you. \n\nUse
        an \"if\" statement to program your game to call the \"level\\_up\" function
        only when \"player\\_score\" becomes greater than a certain number.\n\nFor
        example: \"player\\_score\" > 6\n\nPlay the game, and make it to level 3 to
        move to the next puzzle. "
      Course 4 Play Lab Params 2: "Now we've got flags that are too high for our current
        jump! Let's use both the \"up\" and \"down\" arrows so that we can have multiple
        jump heights.  \n\nWe need to add a parameter to our jump function called
        \"height\".  The up arrow should cause the dog to jump 200 pixels and the
        down arrow should make it jump only 100 pixels. "
      Course 4 Play Lab Params 3: "점프 함수에 다른 매개 변수를 더 추가해서, 다른 캐릭터들도 사용할 수 있게 되었습니다.\n각각의
        캐릭터들은 1부터 시작되는 수로 나타내져 있습니다.\n\"점프\" 함수를 수정해서 \"캐릭터\" 매개 변수로 적당한 캐릭터가 점프하도록
        만들어보세요. "
      Course 4 Play Lab Params 4: "Here's a function called `patrol`. \n\nEdit `patrol`
        to move Cat up 400 pixels and then down 400 pixels."
      Course 4 Play Lab Params 5: |-
        "순찰" 함수에 "캐릭터" 매개변수를 추가해서, 원하는 캐릭터를 화면에 나타낼 수 있도록 해보세요.
        캐릭터들은 1, 2, 3 으로 선택할 수 있도록 해주세요.
      Course 4 Play Lab Params 6: '"순찰" 함수에 "속도" 매개변수를 더 추가해 보세요. 다른 캐릭터들이 깃발을 잡기
        전에 펭귄이 깃발들을 잡을 수 있도록 "속도" 매개변수를 "속도 설정" 블록에 사용하세요.'
      Course 4 Play Lab Params 7: |-
        Let's have some fun! Look at the code provided to see if you can figure out what each block does.\
        When you're done, use the arrow keys to control Dog and collect all of the flags.
        NOTE: You don't need to make any changes to the program
      Course 4 Play Lab Params 8: Use the `when actor touches` block to send Dog back
        to the top-left ONLY if Dog touches any of the other actors.
      Course 4 Play Lab Params 9: "Here's our game from an earlier stage, but most
        of the code is hidden. There’s a new function `score_points.`\n\nEdit the
        function so that a new parameter called `points` can be added to `player_score`.
        \n\nThe variable `player_score` should increase each time Dog tags Cat with
        pie, and decrease each time that Cat tags Dog with a sandwich.\n\nNote: When
        you're done, click \"Run\" to play.  When Dog scores 6 points, you will move
        on to the next puzzle. "
      Course 4 Play Lab Vars 1: |-
        이번에는 코드를 작성할 필요가 없습니다. "실행"을 눌러 실행시켜보세요! 이번 게임에서,
        여러분은 고양이보다 더 많은 깃발을 모으기 위해 노력하는 강아지입니다. "아래" 방향키를 이용해서
        강아지를 움직여보세요. 그만하려면 "마치기"를 누르면 됩니다.
      Course 4 Play Lab Vars 2: 이전 퍼즐은 공정하지 않았습니다! "강아지 속도" 변수의 값을 바꿔서 고양이보다 더 많은
        깃발을 모을 수 있도록 해보세요. 10 개의 깃발을 먼저 모으면 이깁니다!
      Course 4 Play Lab Vars 3: Use the left and right arrows to move, and the up
        arrow to jump. See if you can collect all of the flags.
      Course 4 Play Lab Vars 4: |-
        이제 "높이" 라는 변수를 사용해서 강아지가 뛰는 높이를 조정할 수 있습니다.
        모든 깃발에 닿을 수 있도록 "높이" 변수를 조정해주세요.
      Course 4 Play Lab Vars 5: "자 이제 게임을 만들어보세요!\n일단 먼저 점수가 필요합니다. 이전 레벨에서 보았던 코드를
        다시 만들어서\n점수를 10으로 설정해주세요. "
      Course 4 Play Lab Vars 6: "오른쪽 방향키를 이용해 하트를 맞춰보세요.\\\r\n\\\r\n이 게임에서는 어떻게 포인트를
        올려야 할까요?\n강아지가 하트로 고양이를 맞출 때마다 \"점수\" 변수에 1씩 더해보세요.\n\"캐릭터 2가 물체에 닿으면\" 이벤트를
        이용해 점수를 업데이트하면 됩니다. \"점수=점수+1\"로 설정해서\n변수의 값을 하나씩 올리면 됩니다. 점수를 10 까지(한 번에
        1 씩) 올려서 이 레벨을 통과해보세요."
      Course 4 Play Lab Vars 7: |-
        좋아요. 이제 이 게임을 좀더 어렵게 만들어보세요. 강아지(캐릭터 1) 가 고양이(캐릭터 2) 가 발사한
        노란 하트를 맞으면, 점수를 잃어야 합니다. 10 포인트에서 시작하기 때문에 아주 어렵지는 않습니다.
        10 부터 0 까지 포인트를 내려서 이 레벨을 통과해보세요.
      Course 4 Play Lab Vars 9: "자유롭게 만들어보세요! 여기에는 지금까지 이 과정에서 사용했던 모든 변수들이 모두 있고,\\\r\n필요한
        몇 가지가 더 있습니다.\\\r\n\\\r\n도구 상자에 블록들이 아주 많은데 적당히 분류해야할 것 같습니다!\n이제, 각 블록들을
        적당한 카테고리로 묶어 두었습니다. 블록들을 충분히 살펴보세요.\n다 살펴본 이후에 반복 구조, 변수, 이벤트를 이용해 게임이나 이야기를
        만들어보세요. \\\r\n\\\r\n힌트: 모든 명령들을 작업 공간에서 살펴보려면 스크롤해 내려보세요."
      Course 4 Play Labs For Loops 1: |-
        강아지가 1부터 100까지 모든 자연수를 말하도록 해보세요.
        1개의 반복 구조와 카운터 블록을 이용해서, 한 번 실행될 때마다 카운터 값을 말하도록 하면 됩니다.
      Course 4 Play Labs For Loops 2: 이번에는 Olive가 1부터 101사이에 있는 홀수만 셀수 있도록 도와주세요
      Course 4 Play Labs For Loops 3: |-
        더 큰 수 만큼씩 카운터 값을 올리면,
        같은 시간에 더 큰 값 범위를 카운트 할 수 있습니다.
        10 부터 1000 까지, 한 번에 10 만큼 씩 증가시키며, 카운트 할 수 있게 해보세요.
      Course 4 Playlab For Loop Freeplay: '자유 놀이: 지금까지 배운 모든 것을 사용하여 "for(~동안)" 반복문을
        포함하는 게임을 만들어 보세요!'
      Course 4 Playlab For Loops 4b: "자, 이제 이 두 캐릭터는 경주를 할 것입니다. \\\r\n\\\r\n캐릭터들은
        한 번에 \"카운터(counter)\"만큼씩 이동할 것입니다. 그러나 \"for(~동안)\" 반복문으로 인해 그 \"카운터\" 들은
        서로 다른 값을 가질 것입니다. \\\r\n\\\r\n반복문 중 하나의 증가값을 바꿔서 경주가 무승부가 되도록 해 줄래요?"
      Course 4 Playlab For Loops 5b: 두 캐릭터가 정확히 같은 장소에서 끝내도록 "for(~동안)" 반복문의 간격을 조절하세요.
      Course 4 Playlab For Loops 6b: "여러분이 재미있게 즐길 수 있는 게임을 만들기 위해 이 \"for(~동안)\"
        반복문을 편집하세요.\\\r\n\\\r\n\"실행\" 버튼을 누르고 유니콘을 네 번 클릭하여 우승하게 해 보세요. "
      Course 4 SCF 1: |-
        4줄의 육각형들을 그리기 위해서 주어진 함수들을 사용해보세요.
        짝수 줄의 육각형들은 오른쪽으로 얼마나 이동되어 그려져 있을까요?
      Course 4 SCF 1a: 어떻게 하면 최대한 가장 적은 블록들을 사용해서, 모든 꽃꿀들을 모을 수 있을까요?
      Course 4 SCF 1b: Can you figure out how to collect all of this honey with the
        fewest blocks possible?
      Course 4 SCF 2: '이런 이미지를 그려내기 위해서 이전 레벨에서 배웠던 것들을 사용해 보세요. 참고: 매개변수들을 사용하면 더
        간단하게 만들 수 있습니다. '
      Course 4 SCF 3: '이런 이미지를 그려내기 위해서 이전 레벨에서 배웠던 것들을 사용해 보세요. 참고: 매개변수들을 사용하면 더
        간단하게 만들 수 있습니다. '
      Course 4 SCFL 1: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      Course 4 SCFL 1a: 최대한 적은 블록들을 사용해서 스크랫이 도토리를 잡을 수 있게 해주세요.
      Course 4 SCFL 1b: 최대한 적은 블록들을 사용해서 스크랫이 도토리를 잡을 수 있게 해주세요.
      Course 4 SCFL 2: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      Course 4 SCFL 3: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      Course 4 SCFL 4: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      Course 4 SCFL 6: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      Course 4 SCFL 7: 화가가 물결무늬들을 잡고 싶어합니다! 어떻게 하면 다시 그려낼 수 있을까요?
      Course 4 SCV 1: 설명을 다시 보려면 여기를 클릭하세요.
      Course 4 SCV 2: 설명을 다시 보려면 여기를 클릭하세요.
      Course 4 SCV 3: "이번에는 잡기 게입입니다! 고양이를 잡으면 2 포인트, 펭귄을 잡으면 3 포인트를 얻게 해보세요.\n10
        포인트를 먼저 얻으면 이깁니다!\\\r\n하지만, 고양이와 펭귄이 서로 잡으면, 점수를 잃습니다.\\\r\n\\\r\n위에서 설명한
        것처럼 게임이 동작하도록 필요한 블록들을 붙이세요. 방향키를 눌러 강아지를 4방향으로 움직이도록 하려면 어떻게 하면 될까요?\n강아지가
        고양이나 펭귄을 잡으면 어떻게 점수를 얻게 할 수 있을까요? 고양이와 펭귄에 동시에 닿으면 어떻게 점수를 잃게 할 수 있을까요?"
      Course 4 SCV 4: 최대한 가장 적은 개수의 블록을 사용해서 이 퍼즐을 풀어보세요.
      Course 4 SCV 5: 최대한 가장 적은 개수의 블록을 사용해서 이 퍼즐을 풀어보세요.
      Course 4 SCV 6: 설명을 다시 보려면 여기를 클릭하세요.
      CourseD_Dance_Party_01: "‘새로 만들기’ 블록을 작업공간에 드래그하고, ‘설정’ 블록 안에서 연결하세요."
      CourseD_Dance_Party_02: 4번째 마디 후 사슴이 새로운 움직임을 시작하도록 하세요!
      CourseD_Dance_Party_03: 이제 댄서가 6번째 마디 후 새로운 움직임을 시작하도록 하세요!
      CourseD_Dance_Party_04: 프로그램 배경 효과를 추가하세요.
      CourseD_Dance_Party_05: 다른 새로운 블록을 사용하여 댄서가 두 마디마다 움직임을 변경하도록 하세요.
      CourseD_Dance_Party_06: 고양이와 함께 춤을 추는 'backup\_dancer1'라는 백업 댄서를 만드세요.
      CourseD_Dance_Party_08: 두 백업 댄서를 모두 같은 크기로 만들 수 있나요?
      CourseD_Dance_Party_09: 댄서의 색상을 변경하려면 `색조 설정` 블록을 사용하세요.
      CourseD_Dance_Party_10: "`따라하기 시작` 블록을 사용하여 다른 댄서도 음악에 맞춰 반응하도록 하세요."
      CourseD_Dance_Party_11: "‘위쪽 누를 때’ 블록을 사용하면 위쪽 화살표를 눌러서 코드를 실행할 수 있습니다. 위쪽 화살표를
        누를 때 댄서가 빠른 움직임을 하도록 하세요."
      CourseD_Dance_Party_11_5: '"모든 오리" 블록을 사용하여 오리들이 함께 춤을 추도록 하세요.'
      CourseD_Dance_Party_11b: 오른쪽 화살표 키를 누를 때 로봇이 "드롭"하도록 하고, 위쪽 화살표 키를 누를 때 “플로스”하게
        하세요. 드롭-플로스를 최대한 빨리해보세요!
      CourseD_Dance_Party_12: 이제 리듬을 타보세요! 자신만의 댄스를 만들어 친구와 공유하세요.
      CourseE_HOC 2018 Level_1: 상자에서 보트를 얻으세요.
      CourseE_HOC 2018 Level_10: 이 바다 유적의 입구에 가세요.
      CourseE_HOC 2018 Level_11: 바다 유적 안에 프리즈머린으로 도관을 만드세요.
      CourseE_HOC 2018 Level_2: 부두 끝으로 가세요.
      CourseE_HOC 2018 Level_3: 바다를 건너 대구를 잡으세요.
      CourseE_HOC 2018 Level_4: 루프를 사용해서 돌고래에게 다가가세요.
      CourseE_HOC 2018 Level_5: 난파선을 탐험해서 상자에 도달하세요.
      CourseE_HOC 2018 Level_6: 얼음을 지나 항해해서 연어에 도달하세요.
      CourseE_HOC 2018 Level_7a: 이 수중 유적을 탐색해서 상자를 찾으세요.
      CourseE_HOC 2018 Level_9b: 산호를 보물에 도달하기 위한 경유지로 사용하세요.
      Crack Random Substitution: 소개
      Crack a Caesar Cipher: 소개
      Dance Party 1-validated: 'What do you think will happen when you click on the
        alien?  '
      Dance Party 2: Change the behavior inside the `___ begins ___` block to make
        the alien start spinning around.
      Dance Party 2_2019: Replace the behavior block in the `sprite begins` block
        to a different one that will make the alien start spinning!
      Dance Party 3: 'Create a new sprite called `alien2`, then make it do a different
        dance move when it''s clicked.  '
      Dance Party 3_2019: 'Create a new sprite that looks like a pink alien, then
        make it do a any move when it''s clicked.  '
      Dance Party 4: 'Create a third sprite called `alien3` and get all of your aliens
        to stand in a line. '
      Dance Party 4_2019: Create a third sprite that looks like a yellow alien, make
        it do a dance when clicked, and set all of your aliens to stand in a horizontal
        line.
      Dance Party 5: Add code to change the color of each alien when it gets clicked.
      Dance Party 5_2019: Create a single keypress event using the keypress event
        block. For this event, make it so that when a key is pressed, each of your
        aliens changes color!
      Dance Party 6: Use the `stops everything` block to make each alien stop moving
        when it is clicked.
      Dance Party 6_2019: Add a sprite that looks like a bell, then add an event that
        makes each alien stop dancing when it is clicked.
      Dance Party 7: Add a new bell sprite called `myBell` that makes all the aliens
        start doing the same dance move when it's clicked.
      Dance Party 7_2019: Make the blue alien begin a new dance when the pink alien
        touches it. Use the `when touches` event.
      Dance Party Freeplay: Now create your own alien disco!
      Dance Party Freeplay_2019: Now create your own alien disco!
      Dance Party Predict: 'What do you think will happen when you click on the alien?  '
      Dance Party Predict_2019: 'What do you think will happen when you click on the
        alien?  '
      Dance_2019_01: "‘새로 만들기’ 블록을 작업공간에 드래그하고, ‘설정’ 블록 안에서 연결하세요."
      Dance_2019_02: "‘위쪽 키가 눌리면’ 블록을 사용하면 위쪽 화살표 키를 눌렀을 때 코드가 실행됩니다. 위쪽 화살표 키를 눌렀을
        때 댄서가 손뼉을 치게 만들거나 다른 동작을 시험해 보세요!"
      Dance_2019_03: 춤출 시간입니다! 각기 다른 키를 눌렀을 때 각 댄서가 움직이도록 설정하세요. 좋아하는 동작을 골라 각 댄서에게
        배정하거나 “(Random)”으로 설정해 예측 불가한 댄스를 펼치세요!
      Dance_2019_04: 네 번째 마디 이후에 댄서가 새 동작을 시작하게 하세요.
      Dance_2019_05: 이제 댄서가 6번째 마디 후 새로운 움직임을 시작하도록 하세요!
      Dance_2019_06: 리드 댄서를 가운데 두고 주변으로 백업 댄서들을 배치해 보세요.
      Dance_2019_07: 백업 댄서 그룹의 규모를 변경하세요.
      Dance_2019_08: 한 댄서(또는 그룹 전체) 의 색조를 바꾸어 보세요!
      Dance_2019_09: 이 새 블록들로 창의성을 발휘하세요!
      Dance_2019_10: 이제 리듬을 타보세요! 자신만의 댄스를 만들어 친구와 공유하세요.
      Dance_Party_01: "‘새로 만들기’ 블록을 작업공간에 드래그하고, ‘설정’ 블록 안에서 연결하세요."
      Dance_Party_02: 4번째 마디 후 사슴이 새로운 움직임을 시작하도록 하세요!
      Dance_Party_03: 이제 댄서가 6번째 마디 후 새로운 움직임을 시작하도록 하세요!
      Dance_Party_04: 프로그램 배경 효과를 추가하세요.
      Dance_Party_05: 다른 새로운 블록을 사용하여 댄서가 두 마디마다 움직임을 변경하도록 하세요.
      Dance_Party_06: 고양이와 함께 춤을 추는 'backup\_dancer1'라는 백업 댄서를 만드세요.
      Dance_Party_08: 두 백업 댄서를 모두 같은 크기로 만들 수 있나요?
      Dance_Party_09: 댄서의 색상을 변경하려면 `색조 설정` 블록을 사용하세요.
      Dance_Party_10: "`따라하기 시작` 블록을 사용하여 다른 댄서도 음악에 맞춰 반응하도록 하세요."
      Dance_Party_11: "‘위쪽 누를 때’ 블록을 사용하면 위쪽 화살표를 눌러서 코드를 실행할 수 있습니다. 위쪽 화살표를 누를 때
        댄서가 빠른 움직임을 하도록 하세요."
      Dance_Party_11_5: '"모든 오리" 블록을 사용하여 오리들이 함께 춤을 추도록 하세요.'
      Dance_Party_11b: 오른쪽 화살표 키를 누를 때 로봇이 "드롭"하도록 하고, 위쪽 화살표 키를 누를 때 “플로스”하게 하세요.
        드롭-플로스를 최대한 빨리해보세요!
      Dance_Party_12: 이제 리듬을 타보세요! 자신만의 댄스를 만들어 친구와 공유하세요.
      Dance_Party_extras_alternate_2019: 앞뒤로! (자세한 내용은 “더 보기” 클릭)
      Dance_Party_extras_battle: 댄스 승무원 (자세한 내용은 “자세히”를 클릭)
      Dance_Party_extras_battle_2019: 댄스 승무원 (자세한 내용은 “자세히”를 클릭)
      Dance_Party_extras_every_beat: 분기 노트 (자세한 내용은 “자세히”를 클릭하십시오.)
      Dance_Party_extras_every_beat_2019: 분기 노트 (자세한 내용은 “자세히”를 클릭하십시오.)
      Dance_Party_extras_layout: 의 형성에 가자! (자세한 내용은 “자세히”를 클릭하십시오)
      Dance_Party_extras_layout_2019: 의 형성에 가자! (자세한 내용은 “자세히”를 클릭하십시오)
      Dance_Party_extras_mixed_2019: 더 많은 단추(자세한 내용은 “더 보기” 클릭)
      Dance_Party_extras_on_beat: 저음, 중음, 고음 (자세한 내용은 “자세히”를 클릭하십시오)
      Dance_Party_extras_on_beat_2019: 저음, 중음, 고음 (자세한 내용은 “자세히”를 클릭하십시오)
      Dance_Party_extras_speed: 속도를 높이고 속도를 낮추십시오 (자세한 내용은 “자세히”를 클릭하십시오).
      Dance_Party_extras_speed_2019: 속도를 높이고 속도를 낮추십시오 (자세한 내용은 “자세히”를 클릭하십시오).
      Dance_Party_extras_visible: 그들은 어디로 갔어? (자세한 내용은 “자세히”를 클릭하십시오)
      Dance_Party_extras_visible_2019: 그들은 어디로 갔어? (자세한 내용은 “자세히”를 클릭하십시오)
      Find the Wizard: Build whatever you want. This is an example of a number-guessing
        game!
      Fish Tank 2-validated: Change Dusty (the tumbleweed) to a fish.
      Fish Tank 2-validated_2019: Change the tumbleweed into any kind of fish!
      Fish Tank 3-validated: Change the fish's behavior so that it swims around the
        tank.
      Fish Tank 3-validated_2019: Change the fish's behavior so that it swims left
        and right.
      Fish Tank 4-validated: Use the `set background color` block to make the background
        blue.
      Fish Tank 4-validated_2019: Use the `set background color` block to make the
        background any color.
      Fish Tank 5-validated: Our fish is getting a little lonely. Add another sprite
        to the fish tank.
      Fish Tank 5-validated_2019: The fish is adventurous and wants to meet new creatures
        in the sea. Add another sprite to the fish tank. This sprite can have any
        costume other than the one you use for your fish!
      Fish Tank 6-validated: Add a behavior to the fish's new friend.
      Fish Tank 6-validated_2019: Add a behavior to the fish's new friend.
      Fish Tank 7-validated: Use some new blocks from the toolbox to make your fish
        tank special!
      Fish Tank 7-validated_2019: Use some new blocks from the toolbox to make your
        fish tank special!
      FoodFight: This is an example of a game you can make in play lab.
      Frequency Analysis: Test
      Function intro Ryan: "'다리 짓기' 함수를 두 번 사용해서 횃불로 가는 길을 만드세요."
      Function intro Ryan_2019: "'다리 짓기' 함수를 두 번 사용해서 횃불로 가는 길을 만드세요."
      Geometric Sun: 'Project Idea: Create a pattern using geometric ideas like shapes.
        This requires persistence and planning!'
      Geometric Sun_2018: 'Project Idea: Create a pattern using geometric ideas like
        shapes. This requires persistence and planning!'
      Guess The Number: Build whatever you want. This is an example of a number-guessing
        game!
      HOC 2018 Level_1: 상자에서 보트를 얻으세요.
      HOC 2018 Level_10: 이 바다 유적의 입구에 가세요.
      HOC 2018 Level_11: 바다 유적 안에 프리즈머린으로 도관을 만드세요.
      HOC 2018 Level_12: 여러분만의 수중 환경을 설계하세요. 취향대로 꾸밀 수 있어요!
      HOC 2018 Level_2: 부두 끝으로 가세요.
      HOC 2018 Level_3: 바다를 건너 대구를 잡으세요.
      HOC 2018 Level_4: 루프를 사용해서 돌고래에게 다가가세요.
      HOC 2018 Level_5: 난파선을 탐험해서 상자에 도달하세요.
      HOC 2018 Level_6: 얼음을 지나 항해해서 연어에 도달하세요.
      HOC 2018 Level_7a: 이 수중 유적을 탐색해서 상자를 찾으세요.
      HOC 2018 Level_9b: 산호를 보물에 도달하기 위한 경유지로 사용하세요.
      Infinity_catch: 방향키를 이용해서 엘사("캐릭터 2") 가 안나를 잡아보세요.
      Infinity_finale: 원하는대로 만들고 친구들에게 공유해 보세요.
      Infinity_move_collide: |-
        히로는 "캐릭터 1" 입니다. 히로를 오른쪽에 있는 베이맥스에게 움직이고,
        베이맥스에 닿으면 소리가 나게 해보세요.
      Infinity_move_directions: |-
        베이맥스는 "캐릭터 2" 입니다. 이동 블록들을 추가해서 방향키로 베이맥스를 움직여보세요.
        베이맥스를 다른 캐릭터 2개에 닿게 해보세요.
      Infinity_move_right: 히로는 "캐릭터 1" 입니다. 이동 블록을 사용해서 히로가 오른쪽 베이맥스에 닿게 해보세요.
      Infinity_repeat: |-
        "반복(무한)" 블록을 이용해서 안나가 400 픽셀 만큼 씩
        위, 아래로 움직이도록 해보세요.
      Infinity_say: 말하기 블록을 이용해서 안나가 "안녕 여러분" 이라고 말하도록 해 보세요.
      Infinity_shoot: 베이맥스는 "캐릭터 2" 입니다. 베이맥스가 히로에게 로켓을 던지게 해보세요.
      Infinity_shoot_directions: 히로는 "캐릭터 3" 입니다. 히로가 4개의 캐릭터들에게 각각 발사체를 하나씩 쏘도록 해주세요.
        1초 간격으로 하나씩 쏘도록 해주세요.
      Infinity_touch_score: 안나가 눈송이에 닿으면 점수를 올리도록 만들어보세요. 그 다음에 "실행"을 누르고 안나를 움직여
        눈송이에 닿게 해보세요.
      InspirationalArtwork: If this picture inspires you, try to make something similar.
        Otherwise, create something all your own.
      InspirationalArtwork_2018: If this picture inspires you, try to make something
        similar. Otherwise, create something all your own.
      K-1 Artist Loops 1: 오른쪽으로 4번 이동해서 이 선을 그려보세요.
      K-1 Artist Loops 2: 1개의 반복 구조를 이용해서 같은 선을 그려보세요.
      K-1 Artist Loops 3: 이 블록들을 반복시켜서 6개의 선을 그려보세요.
      K-1 Artist Loops 4: 반복 구조를 사용하면, 이 성의 꼭대기를 그리는데 도움이 될까요?
      K-1 Artist Loops 5: 이 계단들을 그리기 위해서 4번 반복시켜보세요.
      K-1 Artist Loops 6: |-
        2 개의 반복구조가 필요합니다: 하나는 위로 올라가는 것이고,
        다른 하나는 아래로 내려가는 것입니다.
      K-1 Artist Loops 7: 2개의 반복 구조를 이용해서 이 패턴을 완성해보세요.
      K-1 Artist Loops 8: 이번 계단은 더 많습니다.
      K-1 Artist Loops 9: '형성평가: 반복 구조 1개를 사용해서 계단을 그려보세요.'
      K-1 Artist Loops Free Play: 자유 시간입니다. 재미있는 것을 그려보세요!
      K-1 Artist1 1: 1개의 선으로 남자의 발을 그려보세요.
      K-1 Artist1 10: 보물 X 까지 파선(----) 을 그려보세요.
      K-1 Artist1 2: 선 2개로 고양이 수염을 그려보세요!
      K-1 Artist1 3: 왼쪽으로 2개의 선을 그리고, 위쪽으로 2개의 선을 그려 집을 완성해보세요!
      K-1 Artist1 4: 선을 위로/옆으로/아래로 그려 성을 완성해보세요!
      K-1 Artist1 5: 2개의 선을 그어 이꽃의 줄기를 그려보세요.
      K-1 Artist1 6: 점프 블록을 사용해서 그림을 완성해보세요!
      K-1 Artist1 9: 선을 그린 다음에 점프해서 파선을 만들어보세요.
      K-1 Artist2 1: 삼각형 아래에 사각형을 그려보세요.
      K-1 Artist2 2: 집 옆으로 점프해서 사각형을 그려보세요.
      K-1 Artist2 3: 다른 사각형 위에 사각형을 그려보세요.
      K-1 Artist2 4: 사각형을 그려 다리를 완성해 보세요.
      K-1 Artist2 5: 사각형을 그려 다리의 기둥을 완성해보세요.
      K-1 Artist2 6: 두 개의 사각형을 더 그려 완성 시켜보세요!
      K-1 Artist2 Assessment1: '형성평가: 다른 사각형 옆에 사각형을 그려보세요.'
      K-1 Artist2 Free Draw: 아무거나 그려보세요.
      K-1 Artist2_7: 옷장 맨 위 서랍에 사각형을 그려보세요.
      K-1 Bee 1: |-
        제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.
        그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요.
      K-1 Bee 11: 꽃꿀을 3개 모아 꿀을 만들어보세요.
      K-1 Bee 13: 꽃꿀을 3개 모은 후, 1개의 꿀을 만들어보세요!
      K-1 Bee 14: 꽃꿀로 이동해서 꽃꿀을 얻고, 꿀로 이동해서, 꿀을 만들게 해 주세요.
      K-1 Bee 15: 2개의 꿀을 만들기 위해서 2개의 꽃꿀을 모아보세요!
      K-1 Bee 2: |-
        제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.
        그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요.
      K-1 Bee 3: |-
        제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.
        그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요.
      K-1 Bee 4: 꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee 5: 꽃꿀을 3개 모은 후, 1개의 꿀을 만들어보세요!
      K-1 Bee 6: 꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee 7: 꽃꿀을 3개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee 9: 꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee Loops 1: 꿀을 만들기 위해, 꽃꿀을 모으세요.
      K-1 Bee Loops 10: 모든 꽃꿀을 모아 꿀을 만들어보세요.
      K-1 Bee Loops 11: 모든 꽃꿀과 꿀을 모아보세요.
      K-1 Bee Loops 12: 모든 꽃꿀과 꿀을 모아보세요.
      K-1 Bee Loops 2: 1개의 반복 구조를 사용해서 이동한 후, 꽃꿀을 모으고, 꿀을 만드세요!
      K-1 Bee Loops 3: 3개의 반복(횟수) 구조를 사용해서, 꽃꿀을 모으고 꿀을 만들어보세요!
      K-1 Bee Loops 4: 반복(횟수) 구조를 사용해서, 꽃꿀을 모으고 꿀을 만들고, 이동해 보세요!
      K-1 Bee Loops 5: 반복(횟수) 구조를 사용해서, 꽃꿀과 꿀을 모아보세요!
      K-1 Bee Loops 6: 1개의 반복(횟수) 구조를 사용해서, 꽃꿀과 꿀을 모으고, 이동해 보세요!
      K-1 Bee Loops 7: 꽃꿀을 모아 꿀을 만들어보세요!
      K-1 Bee Loops 8: 꽃꿀을 모아 꿀을 만들어보세요!
      K-1 Bee Loops 9: 꽃꿀을 모두 모아 꿀을 만들어 보세요.
      K-1 Bee Puzzle 12: 꽃꿀을 3개 모은 후, 2개의 꿀을 만들어보세요.
      K-1 Building a Foundation Assessment: 3단계 피라미드를 만들어보세요. 한 조각 씩 그려 완성해보세요!
      K-1 Maze 10: 'TNT를 피해 돼지에게 이동시켜주세요! '
      K-1 Maze 11: '길을 따라가서 돼지를 잡게 해주세요. TNT를 피해가지 않으면 깃털들이 날리게 될 거에요! 힌트: TNT는 내
        아래에 있습니다.'
      K-1 Maze 2: 오른쪽으로 이동해서 돼지를 잡을 수 있게 해주세요!
      K-1 Maze 3: 돼지를 잡을 수 있도록, 저를 아래쪽으로 보내주세요!
      K-1 Maze 4: 돼지를 잡을 수 있도록, 저를 위쪽으로 보내주세요!
      K-1 Maze 5: 오른쪽으로 이동해서 돼지를 잡을 수 있게 해주세요!
      K-1 Maze 6: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze 7: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze 8: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze 9: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze Loops 1: 저를 돼지에게 이동시켜 주세요.
      K-1 Maze Loops 10: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용해 더 쉽게 해보세요.
      K-1 Maze Loops 11: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하면 쉽습니다.
      K-1 Maze Loops 12: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하면 쉽습니다.
      K-1 Maze Loops 2: 돼지에게 갈 수 있도록, 반복(횟수) 블록을 사용해보세요.
      K-1 Maze Loops 3: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 5: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 6: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 7: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 8: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하세요.
      K-1 Maze Loops Assessment 1: |-
        지금까지 배웠던 것을 잘 살펴보세요!
        반복(횟수) 구조를 사용해 돼지에게 보내주세요!
      K-1 Maze Loops Assessment 2: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하세요.
      K-1 Maze Sequence Assessment 1: "배운 것을 살펴봅시다!\\\r\n한 방향으로 움직이다가 다른 방향으로 움직여서
        돼지에게 갈 수 있도록 해주세요."
      K-1 Maze Sequence Assessment 2: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 artist 1 level 10: 점프, 그리기 블록을 이용해서 파선(----) 을 그려보세요.
      K-1 artist 1 level 9: 세 개의 선을 이용하여 이것을 그려보세요.
      K-1 maze debug 1: 코드를 수정해서 돼지를 잡을 수 있게 해주세요!
      K-1 maze debug 10: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 11: "연습해보세요!\\\r\n디버깅해서 돼지에게 갈 수 있도록 블록들을 추가하거나 다시 배치 해주세요."
      K-1 maze debug 2: 어떤 것이 빠졌는지 살펴본 후, 블록들을 추가해서 돼지에게 갈 수 있도록 해주세요!
      K-1 maze debug 3: 어떤 것이 빠졌는지 살펴본 후, 블록들을 제거해서 돼지에게 갈 수 있도록 해주세요!
      K-1 maze debug 4: 이 블록들을 실행해보고 고쳐주세요! 제가 생각하기에 다른 방향으로 가고 있는 것 같아요.
      K-1 maze debug 5: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 6: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 7: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 8: 돼지에게 갈 수 있도록 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 9: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      MC HOC 2016 Level 10: 이제 자신만의 Minecraft를 만들 수 있습니다! 마음껏 생물들을 생성하고 원하는 일을 지시해보세요.
        즐거운 시간 되세요!
      MC HOC 2016 Level 2-2: 닭이 움직이지 않는 상태입니다. '이동'과 '회전' 블록을 '생성 시' 슬롯에 넣어 움직이게 해보세요.
      MC HOC 2016 Level 3: 닭이 움직이는군요. 잘했습니다! 그러고는 멈췄네요. 게임에서 닭은 끊임없이 움직입니다. '영원히 수행'
        루프를 추가하여 닭들이 계속 움직이게 하세요.
      MC HOC 2016 Level 4: 닭들이 모두 같은 방향으로 움직이니 이상하네요. 게임에서는 무작위 이동을 넣어 현실감을 더할 수 있습니다.
        닭들이 '무작위 회전'을 하도록 해보세요.
      MC HOC 2016 Level 5: 소들이 헤매고 있네요! '영원히 수행'에 '한 걸음 다가가기' 블록을 넣고 루프를 만든 뒤 소들이
        잔디로 다가가게 하세요.
      MC HOC 2016 Level 6: 이제 좀비를 생성하세요. 밤이 되면 3마리의 좀비가 생성되도록 '생성' 블록을 사용하세요. 좀비가
        자신 쪽으로 오게 하세요. 아침까지 살아남으세요.
      MC HOC 2016 Level 8: 양에게 가는 길이 돌벽으로 막혀 있습니다. 다행히 여기에 크리퍼가 하나 있네요. 크리퍼는 닿으면 폭발합니다.
        크리퍼를 사용하여 벽을 폭발시키고 양에게 다가가세요!
      MC HOC 2016 New Drop: Minecraft에서 양은 양털을 떨어뜨립니다. '사용했을 때'에 '떨어뜨리기' 블록을 놓은 뒤,
        양에게 다가가 양이 아이템을 떨어뜨리게 하세요.
      MC HOC 2016 New Spawn: 게임에서 생성이란 월드에 뭔가를 더한다는 뜻입니다. '실행 시' 아래 '생성' 블록을 놓고 게임이
        시작할 때 뭔가가 생성되게 만드세요.
      MC HOC 2016 New Walk: 이제 월드를 탐험해 보죠! 화살표 키로 이동하고, 스페이스 바나 게임판을 터치하여 아이템을 사용할
        수 있습니다. 문을 사용하여 집 안으로 들어가세요.
      MC HOC 2016 SCORE LEVEL: 일부 게임에서는 점수를 얻을 수 있습니다. 철 골렘과 술래잡기를 하세요. 철 골렘을 건드리면
        점수를 얻을 수 있도록  '1점 추가' 블록을 사용하세요. 5점을 획득하여 승리하세요!
      MC HOC 2016 Village Test: 이런! 좀비들에게 포위되었습니다! 철 골렘이 좀비를 쫓아가 공격하는 코드를 짜세요.
      MC_HOC_2017_01_RETRY: 'Agent를 감압판 위로 움직인 다음 ''실행''을 누르고 방향키를 사용해 플레이어를 집 밖으로
        움직여 상자를 집게 하세요. '
      MC_HOC_2017_01_RETRY_2019: 'Agent를 감압판 위로 움직인 다음 ''실행''을 누르고 방향키를 사용해 플레이어를
        집 밖으로 움직여 상자를 집게 하세요. '
      MC_HOC_2017_02_Cole: 'Agent를 감압판 위로 움직여 {currentPlayerName}이(가) 지도가 있는 곳으로 갈
        수 있게 해주세요. '
      MC_HOC_2017_02_Cole_2019: 'Agent를 감압판 위로 움직여 {currentPlayerName}이(가) 지도가 있는
        곳으로 갈 수 있게 해주세요. '
      MC_HOC_2017_03_Cole: '코드를 사용해 Agent가 문을 열게 하세요. '
      MC_HOC_2017_03_Cole_2019: '코드를 사용해 Agent가 문을 열게 하세요. '
      MC_HOC_2017_04POINT5_RYAN: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04POINT5_RYAN_2019: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04_Cole: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04_Cole_2019: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_05_Cole: 플레이어를 삽 쪽으로 움직이세요.
      MC_HOC_2017_05_Cole_2019: 플레이어를 삽 쪽으로 움직이세요.
      MC_HOC_2017_06_Cole: 코드의 잘못된 부분을 수정해서 Agent가 강을 건너는 다리를 짓게 하세요.
      MC_HOC_2017_06_Cole_2019: 코드의 잘못된 부분을 수정해서 Agent가 강을 건너는 다리를 짓게 하세요.
      MC_HOC_2017_07_Cole: 얼음을 제거하고 {currentPlayerName}이(가) 광물 수레로 갈 수 있게 도와주세요.
      MC_HOC_2017_07_Cole_2019: 얼음을 제거하고 {currentPlayerName}이(가) 광물 수레로 갈 수 있게 도와주세요.
      MC_HOC_2017_10_RETRY: 광물 수레를 완성할 수 있는 함수를 만드세요.
      MC_HOC_2017_10_RETRY_2019: 광물 수레를 완성할 수 있는 함수를 만드세요.
      MC_HOC_2017_Ali: 함수를 사용해 용암을 건널 방법을 찾으세요.
      MC_HOC_2017_Ali_2019: 함수를 사용해 용암을 건널 방법을 찾으세요.
      MC_HOC_2017_FP20x20: "**무료플레이:** 스스로 직접 탐험해보세요!"
      MC_HOC_2017_FP20x20_2019: "**무료플레이:** 스스로 직접 탐험해보세요!"
      NEW Course 4 Artist Functions 1: 반복 구조를 이용해서 한 변의 길이가 100 픽셀인 사각형을 그려보세요.
      NEW Course 4 Artist Functions 11: |-
        한 줄에 6개의 사각형을 그리는 "사각형 한 줄 그리기" 함수를 만들어 보세요.
        이전에 만들어 보았던 "20 크기 사각형 그리기" 함수를 이용해서 만들면 됩니다.
      NEW Course 4 Artist Functions 12: |-
        이 패턴을 그리기 위해서, 마지막 퍼즐에서 사용했던
        "사각형 한 줄 그리기" 함수를 사용해보세요.
      NEW Course 4 Artist Functions 13: '"사각형 한 줄 그리기" 함수를 이용해서 별 모양을 그려보세요.  '
      NEW Course 4 Artist Functions 14: '자유 시간입니다! '
      NEW Course 4 Artist Functions 2: Can you draw 3 squares 20 pixels apart from
        one another? Each square is 100 pixels in size.
      NEW Course 4 Artist Functions 3: "여기에 \"함수\"라는 새로운 블록이 있습니다. \"수정하기\"를 눌러 한
        변의 길이가 100 픽셀인 사각형을 그릴 수 있도록 코드를 채워보세요. \\\r\n\\\r\n함수를 모두 수정하면 \"닫기\"를 누른
        후 프로그램을 실행시켜보세요."
      NEW Course 4 Artist Functions 4: '"사각형 그리기" 함수를 사용해서 이 패턴을 그려보세요.'
      NEW Course 4 Artist Functions 7: "함수 블록들을 사용하는 것이 어려운가요? 이 함수를 수정해서 200 픽셀 크기가
        되도록 바꿔보세요.\n\"사각형 그리기\" 함수에서 \"수정하기\"를 눌러서 고치면 됩니다.\n함수 수정을 끝내려면 \"닫기\"를 누르면
        됩니다. "
      NEW Course 4 Artist Functions 8: |-
        "삼각형 그리기"라는 새로운 함수를 만들었습니다.
        한 변의 길이가 100 픽셀인 삼각형을 그릴 수 있도록 함수 정의를 수정해보세요.
      NEW Course 4 Artist Functions 9: 블록 1개 만 더 추가해서 이 문제를 풀어보세요.
      NEW Course 4 Artist Params 1: |-
        한 변의 길이가 50 픽셀 크기인 사각형을 만들 수 있도록
        이 함수를 만들어 보세요. "수정"을 눌러 시작하세요.
      NEW Course 4 Artist Params 10: '"육각형 그리기" 함수 블록을 길이 변수값을 바꿀 수 있도록 만들어보세요. 이
        정육각형의 한 변의 길이는 100 픽셀입니다. '
      NEW Course 4 Artist Params 11: |-
        이 모양을 어떻게 그릴지 생각할 수 있나요?
        "한 변의 길이" 변수를 사용하기 위해 함수를 수정하세요.
      NEW Course 4 Artist Params 12: |-
        이 그림을 완성할 수 있겠나요?
        모든 모양의 한 변의 길이는 100 픽셀입니다.
      NEW Course 4 Artist Params 12a: |-
        이번 이미지는 이전 것과 비슷합니다.
        함수에 "~동안 반복" 을 이용해 이 디자인을 만들어보세요.
      NEW Course 4 Artist Params 13: "\"다각형 그리기\" 함수를 수정해 보세요. \"변의 길이\" 매개 변수가 있습니다.
        이제 \"길이\"를 매개 변수로 추가해 보세요. \\\r\n각 모양의 둘레의 길이는 200 픽셀입니다. 다각형에서 면의 개수가 달라질
        때, 같은 크기로 만드는 공식 기억하고 있으시죠?"
      NEW Course 4 Artist Params 14: |-
        "나선 그리기"를
        "길이"와 "한 변의 길이" 변수를 이용할 수 있도록 수정하고, 이 모양을 다시 만들어보세요.
      NEW Course 4 Artist Params 15: |-
        자유 플레이: 여기 여러분들이 작성한 함수들과 가지고 놀 수 있는 몇 개의 함수가 더 있습니다.
        멋진 것들을 그려보세요! 선 그리기로 얼마나 많은 것들을 그릴 수 있는지 해보세요.
      NEW Course 4 Artist Params 2: Create a `draw triangle` function from scratch
        that makes a triangle with  50 pixel sides.
      NEW Course 4 Artist Params 3: "이제 한 줄에 5개의 삼각형을 그리는 함수를 사용해보세요.\n각 삼각형들은 30
        픽셀씩 떨어져 있습니다.\\\r"
      NEW Course 4 Artist Params 4: |-
        이 함수 블록들이 뭔가 다르다는 것을 알아차리셨나요?
        "실행"을 눌러 어떤 일이 일어나나 살펴보세요.
      NEW Course 4 Artist Params 5: "입력 블록의 길이 매개변수에 입력 되어있는??? 를 채워보세요.\n육각형의 한 변의
        길이는 100 픽셀입니다. "
      NEW Course 4 Artist Params 6: |-
        이런 모양들을 그려내기 위해서, "???" 로 입력되어있는 "길이" 매개 변수의 정확한 값을 채워보세요.
        사각형과 삼각형의 각 변의 길이는 100 픽셀이고 육각형의 한 변의 길이는 75 픽셀입니다.
      NEW Course 4 Artist Params 7: 이 그림을 완성시켜보세요. 각 삼각형의 변의 길이는 바로 이전 것보다 25 픽셀만큼
        더 깁니다. 첫 번째 삼각형의 한 변의 길이는 25 픽셀입니다.
      NEW Course 4 Artist Params 8: |-
        이 삼각형 함수의 코드는 문제가 있습니다.
        함수를 고쳐서 25, 50, 75 길이의 삼각형을 그려보세요.
      NEW Course 4 Artist Params 9: |-
        "사각형 그리기" 함수의 정의를 "수정"해서 매개 변수를 추가해보세요.
        삼각형 그리기와 마찬가지로 길이를 매개 변수로 사용하면 됩니다.
        이번에는 3개의 사각형들을 그리면 됩니다: 한 변의 길이가 25, 50, 75 픽셀이고,
        100 픽셀 만큼씩 떨어져 있습니다.
      NEW Course 4 Artist Params inspire: "멋진 자유 플레이: 여러분들은 이런 패턴을 만들기 위해 필요한 모든 것들을
        배웠습니다.\n이 그림이 멋지다고 생각하면, 비슷하게 다른 것을 만들어보세요. 아니면, 만들고 싶은 것을\n만들어보세요.\\\r\n\\\r\n이런
        멋진 패턴이 어떻게 만들어졌는지 궁금한가요? "
      NEW Course 4 Artist Vars 12: |-
        자 이제, 이전 레벨에서의 알고리즘을 다시 만든 후,
        한 변의 길이가 150인 오각형을 만들어보세요.
      NEW Course 4 Artist Vars 2: '"길이 설정" 블록과 "\_번 반복하기" 블록에 숫자 블록을 넣어, 50 픽셀 크기의
        삼각형들을 만들어보세요.'
      NEW Course 4 Artist Vars 4: "다시 한 번 해보세요. \\\r\n\\\r\n육각형들로 이런 멋진 디자인을 만들기 위해
        \"길이\" 변수값을 60으로 설정해 보세요."
      NEW Course 4 Artist Vars 6: "\"길이\" 변수의 값을 정확히 입력하고 이 변수를 모든 알맞은 위치에 넣어서 100
        픽셀짜리 오각형 패턴을 그려보세요. \\\r\n\\\r\n길이 변수의 값을 한 번만 입력하면, 그 값을 계속 사용할 수 있다는 것을
        알 수 있습니다."
      NEW Course 4 Bee For Loops 1: 각 꽃에서 꽃꿀을 모으기 위해서 반복 구조를 사용하세요.
      NEW Course 4 Bee For Loops 10a: |-
        자 이제 도전해보세요! 반복에 대해 배웠던 것들을 이용해서, 이 문제를 풀어보세요.
        기억하세요: 어떤 단계들로 진행되는지 이해하기 위해서, 여러 번 실행시켜 봐야 할 거예요.
      NEW Course 4 Bee For Loops 2: |-
        꿀벌이 모든 꽃꿀을 모울 수 있도록 할 수 있는 코드를 추가해보세요.
        이 퍼즐을 해결하기 위해서, 코드가 얼마나 많이 필요한지 잘 살펴보세요!
        (다음 퍼즐에서는 더 간단한 방법을 배우게 될 것입니다.)
      NEW Course 4 Bee For Loops 3: "아! \"반복\" 구조는 더 쉽게 할 수 있어요! 필요한 모든 코드는 여기있으니,
        어떻게 사용할지 살펴본 후에\n\"실행\"을 눌러 결과를 살펴보세요. "
      NEW Course 4 Bee For Loops 4: '"반복(~인 동안)" 구조에서 ??? 부분에, 꿀벌이 모아야 하는 최대 꽃꿀의 양을
        입력해 보세요. '
      NEW Course 4 Bee For Loops 4 4: "이제 \"카운터\" 만큼 앞으로 이동시켜야 합니다.\n그 다음에 \"카운터\"
        만큼 꽃꿀을 얻으면 됩니다. 이 문제를 해결하기 위해서 \n2 개의 \"반복\" 블록을 사용하세요."
      NEW Course 4 Bee For Loops 5: |-
        카운트다운하는데 "반복(~인 동안)" 구조를 사용할 수도 있습니다.
        이 꽃꿀을 5 부터 1 까지, 1씩 카운트다운하면서 모아보세요.
      NEW Course 4 Bee For Loops 6: |-
        반복 함수의 마지막에 있는 수는 "증가값"이라고 부릅니다.
        반복 구조가 한 번 실행된 후에, 카운터에는 증가값만큼 더해집니다. 2만큼 증가시켜서
        이 꽃들로부터 모아보세요.
      NEW Course 4 Bee For Loops 7: "자 이제, \"카운터\" 변수를 수학 블록과 함께 사용해보세요!\n어떻게하면 최대한
        적은 블록들로, 이 정원을 돌아다닐 수 있을까요?\n이렇게 3, 6, 9, 12, 15 만큼씩 꽃꿀을 모으려면 어떻게 해야 할까요?\n\"카운터\"
        변수를 사용하면 됩니다!\\\r\n\\\r\n기억하시죠?: 반복 구조가 실행되면, 한 번 실행 하고 난 후에 \"카운터\"\n변수의
        값에 그 만큼 더합니다."
      NEW Course 4 Bee For Loops 8: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야
        할까요?
      NEW Course 4 Bee For Loops 9: |-
        반복 카운팅이 줄어드는 과정에서는 반복이 한 번씩 끝날 때마다 카운터 변수의 값이 줄어듭니다.
        15, 12, 9, 6, 3의 꽃꿀을 모으기 위해서는 카운터 변수에 더할 값이 어떻게 되어야 할까요?
      NEW Course 4 Play Lab Params 11: "자유 시간입니다!\n도구 상자에 있는 모든 블록들을 이용해보세요. "
      NetSim Standalone Automatic DNS: In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast: In this version of the Internet Simulator, you
        can connect to up to 5 other people in a room. When you send messages in the
        room, everyone receives them. What are some of the challenges of this system,
        and how might you solve them?
      NetSim Standalone Classroom Routers: In this version of the Internet Simulator,
        everyone connects to a router and has a specific address. To send messages,
        you have to address your message to the specific address of the recipient,
        and the router will take care of delivering it to the right computer. If there
        are other routers created in your class, ask for the address of one of your
        classmates and send them a message! View the Log Router to see the path the
        messages have taken through the network.
      NetSim Standalone Freeplay: In this configuration, most of the options are turned
        on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS: In this version of the simulator you can't see
        the other students' addresses.  Instead, one of you must act as a name service,
        to help share addresses with each other.
      NetSim Standalone Packets TCP: 'Messages on the Internet can take many paths
        to get to their destination, and sometimes along the way the message gets
        dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters. '
      NetSim Standalone SendAB: You and your partner share a single wire that can
        only be in state A or state B. You can set the wire to either state at any
        time, and you can read the state of the wire at any time. Can you figure out
        a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers: 'You and your partner can now reliably send
        messages back and forth without extra coordination! While you''re always sending
        bits back and forth, you can also represent those bits as decimal numbers.
        What kinds of information can you represent with this system? '
      NetSim Standalone Sending Numbers Ascii: 'Now that you''ve transmitted information
        represented as decimal numbers, you can map those numbers to text characters
        to send text-based information back and forth. With a text-based protocol,
        you can easily represent and communicate all kinds of information. '
      New Artist Project: Draw something awesome! Your code is saved as a project
        that you can return to at any time.
      New Basketball Project: Create your own Basketball game. You can change all
        the rules. When you're done, click Share to let friends try your game on their
        phones.
      New Bounce Project: Create your own Bounce game. You can change all the visuals
        and the rules. When you're done, click Share to let friends try your game
        on their phones.
      New Gumball Project: 원하는대로 만들고 친구들에게 공유해 보세요.
      New Ice Age Project: 원하는대로 만들고 친구들에게 공유해 보세요.
      New Infinity Project: 원하는대로 만들고 친구들에게 공유해 보세요.
      New Minecraft Hero Project: "**무료플레이:** 스스로 직접 탐험해보세요!"
      New Sports Project: |-
        게임을 직접 만들어보세요. 모든 것을 마음대로 할 수 있습니다: 모든 규칙들을 바꿀 수 있고, 여러
         가지 스포츠게임들을 창의적으로 섞을 수 있습니다! 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      OPD-K5 whats your plan: Take a moment now to consider how and when you will
        complete this online course to ensure you get the most benefit from the experience.
        When you've got a good plan sketched out, continue on to dive more deeply
        into Computer Science Fundamentals.
      OPD-K5-events-2: Attach the `flap normal amount` block to the `when click` event,
        then press "Run".    Click or tap on the play space to move Flappy to the
        target.
      OPD-K5-events-3: Try adding a block that sets the level speed when the "Run"
        button is pressed.  Play the game and flap to the target to continue.
      OPD-K5-events-4: Attach the `end game` block to the `when hit the ground` event.   Play
        the game and crash the bird into the ground to continue.
      OPD-K5-events-5: Attach a block to the `when hit an obstacle` event so that
        the game ends when Flappy crashes into the first set of pipes.
      OPD-K5-events-6: Add a block to the `when pass an obstacle` event, then press
        "Run" to score a point by flying Flappy through the first set of pipes.
      OPD-K5-forloops-1: Collect the nectar from each flower using the fewest blocks
        possible.
      OPD-K5-forloops-2: Write the code to help the bee collect all of the nectar.
      OPD-K5-forloops-5: Help the bee collect all of the nectar.
      OPD-K5-forloops-6: Try gathering this nectar by counting down from 5 to 1 by
        1.
      OPD-K5-forloops-7: Try collecting these flowers using an increment of 2.
      OPD-K5-projects-2: Choose a background and map, and pick an actor to be your
        game's hero.
      OPD-K5-projects-3: Use events and actions to make your hero move. Get to the
        targets.
      OPD-K5-projects-4: Add two or more additional actors to your game and make them
        move.
      OPD-K5-projects-5: Find some interesting ways to change the score in your game.
        Get the score to show something other than 0 to continue.
      OPD-K5-projects-6: Great job! You have all the basic components of a working
        game. Now spend some time making sure the game works the way you want.
      OPD-K5-projects-7: You've finished! Now you can play your game or share it with
        your friends and classmates!
      OPD-K5-spritelab-2: Change the tumbleweed into any kind of fish!
      OPD-K5-spritelab-3: Change the fish's behavior so that it swims left and right.
      OPD-K5-spritelab-4: Use the `set background color` block to make the background
        any color.
      OPD-K5-spritelab-6: The fish is adventurous and wants to meet new creatures
        in the sea. Add another sprite to the fish tank. This sprite can have any
        costume other than the one you use for your fish!
      OPD-K5-spritelab-7: Add a behavior to the fish's new friend.
      OPD-K5-variables-2: 'Now draw three of those triangles right next to each other.   '
      OPD-K5-variables-5: Move the length of 50 into a variable so we can use it in
        the next few puzzles.
      OPD-K5-variables-6: Now, use the `length` variable to have the artist jump forward
        and down by `length` pixels between triangles.
      OPD-K5-variables-7: Add another set of loops at the end of your code to add
        three more triangles. This time, move forward and up!
      Overworld Avoid Monsters: 크리퍼와 마주치는 건 좋지 않습니다. 크리퍼를 조심스럽게 지나쳐서 안전한 집에 도달하세요.
      Overworld Avoid Monsters_2019: 크리퍼와 마주치는 건 좋지 않습니다. 크리퍼를 조심스럽게 지나쳐서 안전한 집에 도달하세요.
      Overworld Chop Tree: 나무는 매우 중요한 자원입니다. 나무로 많은 것들을 만들 수 있지요. 나무로 걸어간 후 "블록 부수기"
        명령을 이용해 나무를 베세요.
      Overworld Chop Tree_2019: 나무는 매우 중요한 자원입니다. 나무로 많은 것들을 만들 수 있지요. 나무로 걸어간 후 "블록
        부수기" 명령을 이용해 나무를 베세요.
      Overworld Chop Trees: 해가 지기 전에 집을 지어야 해요. 집을 지으려면 나무가 많이 필요하죠. 나무 3그루를 모두 베세요.
      Overworld Chop Trees_2019: 해가 지기 전에 집을 지어야 해요. 집을 지으려면 나무가 많이 필요하죠. 나무 3그루를
        모두 베세요.
      Overworld Free Play 20x20: 축하해요! 모든 퍼즐을 완료했어요! 이제 여태까지 배운 모든 것을 이용해서 채굴하고 건설하며
        무언가 독특한 것을 만들어보세요.
      Overworld Free Play 20x20_2019: 축하해요! 모든 퍼즐을 완료했어요! 이제 여태까지 배운 모든 것을 이용해서 채굴하고
        건설하며 무언가 독특한 것을 만들어보세요.
      Overworld House Frame Chosen: |-
        여러분이 원하는 재료를 이용해서, 집의 나머지 부분을 완성해보세요.
        "repeat" 명령은 편리하게 사용할 수 있습니다.
      Overworld House Frame Chosen_2019: |-
        여러분이 원하는 재료를 이용해서, 집의 나머지 부분을 완성해보세요.
        "repeat" 명령은 편리하게 사용할 수 있습니다.
      Overworld Move to Sheep: 두 번째 "앞으로 이동" 명령을 더해서 양에게 도달하세요.
      Overworld Move to Sheep_2019: 두 번째 "앞으로 이동" 명령을 더해서 양에게 도달하세요.
      Overworld Place Wall: 모든 집은 벽을 짓는 것부터 시작합니다. "놓기"와 "앞으로 이동" 명령을 반복문 안에 놓아서 집의
        첫 번째 부분을 지어보세요.
      Overworld Place Wall_2019: 모든 집은 벽을 짓는 것부터 시작합니다. "놓기"와 "앞으로 이동" 명령을 반복문 안에
        놓아서 집의 첫 번째 부분을 지어보세요.
      Overworld Plant Crops: 미리 계획을 짜는 것이 좋습니다. 물의 양쪽에 작물을 심으면 나중에 배가 고프지 않아요.
      Overworld Plant Crops_2019: 미리 계획을 짜는 것이 좋습니다. 물의 양쪽에 작물을 심으면 나중에 배가 고프지 않아요.
      Overworld Powered Minecart: 잘했어요! 많은 자원을 모으고 안정적인 집을 지었어요. 이제 지도 가장자리에서 여러분의
        집 문까지 레일을 놓으세요.
      Overworld Powered Minecart_2019: 잘했어요! 많은 자원을 모으고 안정적인 집을 지었어요. 이제 지도 가장자리에서
        여러분의 집 문까지 레일을 놓으세요.
      Overworld Shear Sheep: 양털 깎기 시간이에요! 두 마리 양에게서 양털을 채집하려면, "털 깎기" 명령을 사용하세요.
      Overworld Shear Sheep_2019: 양털 깎기 시간이에요! 두 마리 양에게서 양털을 채집하려면, "털 깎기" 명령을 사용하세요.
      Pixelation - Lesson 15 - Color Shades: We start you out with the row of shades
        of red that Maddie created in the video. Experiment with 6-bit color by filling
        in the bottom row of the image with shades of a different color. Here is an
        example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Color Shades 4x4: 'We start you out with the 4x4 image
        Maddie created in the video. Your task is to fill a 4x4 grid with colors using
        12-bits per pixel. Here are the requirements: Row 1 - fill with shades of
        red. Row 2 - shades of green. Row 3 - shades of blue. Row 4 - shades of gray.'
      Pixelation - Lesson 15 - Complete 3-bit color: We start you with the 4x2 image
        Maddie was creating, but we've left out the last two squares. Finish off the
        image by figuring out which two colors are missing and encode them.
      Pixelation 4x4 Empty: The width and height are now encoded in the pixel data.
        Can you figure out how to adjust the dimensions?
      Pixelation Bee: 'This larger image of a bee encodes color with 12 bits per pixel,
        but viewing in hex makes it easier to see the color of each pixel. If you
        switch to binary mode - hold on to your hat - it''s a lot of bits. Here''s
        another mind-blowing thing to try: slide the bits per pixel up to 24 bits
        per pixel. What happens? Can you explain this behavior?'
      Pixelation Flappy: Here is a bigger image at 9 bits per pixel. With 9 bits per
        pixel you can express 512 different colors. Click through to see the next
        image which is even more sophisticated, but easier to understand.
      Robot Doodle: 'Project Idea: Create a picture of something familiar from the
        real world. This requires persistence and planning!'
      Robot Doodle_2018: 'Project Idea: Create a picture of something familiar from
        the real world. This requires persistence and planning!'
      Standalone_Artist_1: |-
        화가 퍼즐에 오신 것을 환영합니다.
        처음으로 오른쪽으로 이동 블럭과 앞으로 이동 블럭을 이용해서 간단한 사각형을 만들어 보겠습니다.
        한 변의 길이는 정확히 100 픽셀이 되어야 합니다.
      Standalone_Artist_2: 120도, 60도의 각과 150 픽셀 만큼의 길이로 이 다이아몬드를 그려보세요.
      Standalone_Artist_3: 100 픽셀 길이와 60도 회전으로 이 육각형을 그려 줄 수 있나요?
      Standalone_Artist_4: 이제 반복(loop) 이라는 새로운 블럭을 이용할 수 있습니다. 이 블럭은 원하는 명령어들을 반복시켜줄
        것입니다. 이 명령어들을 6번 반복하면 어떻게 될까요?
      Standalone_Artist_5: 이 다이아몬드 모양을 이용해서 꽃을 그리려면 반복(loop) 을 몇 번 시켜야 할까요?
      Standalone_Artist_5.5: '다이아몬드 모양을 반복 블럭 안에 넣어서 회전시키면서 아주 쉽게 코드를 만드는 방법을 잘 보세요.
        순서대로 실행시켜야하는 명령어들을 12번 반복시킬 수 있습니다. 힌트: 다이아몬드 반복(loop) 를 30도만큼 회전시키면 됩니다.
        다이아몬드를 또 그릴 필요가 없습니다.'
      Standalone_Artist_6: '이 6각형 코드를 반복적으로 이용해서 디자인 해보세요. 한 번 실행할 때마다 몇 도를 회전시켜야
        할까요? 힌트: 원의 각도를 반복시키려고 하는 횟수로 나누면 됩니다.'
      Standalone_Artist_7: '함수는 한번 만들어둔 것을 다시 사용하는 프로그래밍 방법입니다. 이 함수는 꽃을 그려주는데, 이
        함수를 이용하면 원하는 만큼의 꽃을 편리하게 그릴 수 있습니다. 이 함수와 점프 블록을 이용해서 이 꽃들을 그려주세요. 힌트: 꽃들은
        150 픽셀만큼 떨어져 있습니다.'
      Standalone_Artist_8: '"모양 그리기" 라는 이름의 6각형 그리기 함수 블럭이 있습니다. 일단 먼저 코드를 실행시켜 어떻게
        실행되는지 살펴보고, 실험해 보세요. 사각형, 삼각형, 8각형을 그릴 수 있겠어요?'
      Standalone_Artist_9: 자 이제 계속해서, 원하는 그림을 마음껏 그려보세요! 원하는 것이 어떤 것이든지, 빈 함수를 이용해
        마음대로 만들고 사용할 수 있습니다.
      U4 Model Design 1: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      U4 Model Design 1_2018: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      U4 Model Design 1_2019: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      Underground Avoiding Lava: 이 블록들 아래에 용암이 숨어있습니다. 앞으로 이동하기 전에 덮어야 해요. "if"(만약)
        명령은 여기서 유용할 거에요. 올바른 곳에 "앞으로 이동" 명령을 더해서 이 블록을 채굴하세요.
      Underground Avoiding Lava_2019: 이 블록들 아래에 용암이 숨어있습니다. 앞으로 이동하기 전에 덮어야 해요. "if"(만약)
        명령은 여기서 유용할 거에요. 올바른 곳에 "앞으로 이동" 명령을 더해서 이 블록을 채굴하세요.
      Underground If Statements: 퍼즐이 점점 더 어려워지고 있어요. 레드스톤 3개를 채굴하세요. 하지만 용암으로 떨어지지는
        마세요. "if"(만약) 명령을 사용해서 발견한 용암 위에 조약돌을 놓으세요.
      Underground If Statements_2019: 퍼즐이 점점 더 어려워지고 있어요. 레드스톤 3개를 채굴하세요. 하지만 용암으로
        떨어지지는 마세요. "if"(만약) 명령을 사용해서 발견한 용암 위에 조약돌을 놓으세요.
      Underground Iron: 녹은 용암 속으로 걸어 들어가는 건 좋은 생각이 아니에요. 조약돌을 놓아서 다리를 만든 후 철 블록을 2개
        이상 채굴하세요.
      Underground Iron_2019: 녹은 용암 속으로 걸어 들어가는 건 좋은 생각이 아니에요. 조약돌을 놓아서 다리를 만든 후 철
        블록을 2개 이상 채굴하세요.
      Underground Mining Coal: 가장 귀중한 자원은 땅속에서 찾을 수 있어요. 하지만, 땅속은 어두울 수 있지요. 횃불을 2개
        이상 놓고 석탄을 2개 이상 채굴하세요.
      Underground Mining Coal_2019: 가장 귀중한 자원은 땅속에서 찾을 수 있어요. 하지만, 땅속은 어두울 수 있지요.
        횃불을 2개 이상 놓고 석탄을 2개 이상 채굴하세요.
      Vigenere: Test
      Virtual Pet 1: What do you think will happen if you press "Run" and then click
        on her?
      Virtual Pet 1 Predict: 'What do you think will happen when you click on the
        alien?  '
      Virtual Pet 2: Create an **event** so that when Geraldine touches the puddle,
        her color changes to brown.
      Virtual Pet 3: Add a new soap sprite to the screen.  Can you make it so that
        when the giraffe and the soap touch, the giraffe goes back to its normal color?
      Virtual Pet 4: Add a behavior to your soap to make it draggable, then drag it
        over to clean the giraffe!
      Virtual Pet 5: Add actions to each event so that when the giraffe collides with
        each sprite, it shrinks by 5.
      Virtual Pet 6: Add an apple that returns the giraffe back to regular size when
        they touch.
      Virtual Pet 8_2019: "**Free Play:** What more can you make your pet do? Try
        anything you like!"
      Virtual Pet Freeplay: 'Freeplay: What more can you make your giraffe do? '
      'Widget: Text Compression': Look for patterns (repeated words or phrases) in
        the text. Enter the patterns you see into the dictionary on the right. As
        you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      behaviors 1: Make a prediction!
      behaviors 2: Fly the rocket to the stars!
      behaviors 3: Help the rover outrun the robot!
      behaviors 3a: 'Debug: Make all of the stars spin the same way!'
      behaviors 4: Make a prediction!
      behaviors 5: Move the astronaut diagonally.
      behaviors 6: Make the ball roll.
      behaviors 7: Drive off into the horizon!
      behaviors free play: 'Free play: Create your own outer space scene!'
      bounce_1: '"왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, "실행하기"를 눌러 보세요. 왼쪽 방향키를 사용해 목표 지점까지
        이동시켜 보세요.'
      bounce_10: 이번 목표지점은 위쪽입니다! "내 점수 올리기", "상대 점수 올리기" 블록을 붙여, "공이 들어갔을 때", "공이
        라켓을 벗어났을 때" 블록으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 되기 전까지 얼마나 많은 점수를 얻을 수 있는지
        해보세요.
      bounce_10_basketball: 이번 목표지점은 위쪽입니다! "내 점수 올리기", "상대 점수 올리기" 블록을 붙여, "공이 들어갔을
        때", "공이 손을 벗어났을 때" 블록으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 되기 전까지 얼마나 많은 점수를 얻을
        수 있는지 해보세요.
      bounce_10_sports: 이번 목표지점은 위쪽입니다! "내 점수 올리기", "상대 점수 올리기" 블록을 붙여, "공이 들어갔을 때",
        "공이 손을 벗어났을 때" 블록으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 되기 전까지 얼마나 많은 점수를 얻을 수
        있는지 해보세요.
      bounce_11: '"프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 만들기" 블럭을 한 군데 이상 붙여야
        합니다. 그리고 배경도 바꾸어 보고, 상대방 케릭터의 점수가 2배가 되지 않도록 케릭터의 스피드를 바꿔 보세요.'
      bounce_11_basketball: 이제 "프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 넣기" 블럭을
        한 군데 이상 붙여야 합니다. 그리고 배경도 바꾸어 보고, 상대방 캐릭터의 점수가 2배가 되지 않도록 손의 스피드를 바꿔 보세요.
      bounce_11_sports: 이제 "프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 넣기" 블럭을 한
        군데 이상 붙여야 합니다. 그리고 배경도 바꾸어 보고, 상대방 캐릭터의 점수가 2배가 되지 않도록 손의 스피드를 바꿔 보세요.
      bounce_12: 바운스 게임을 직접 만들어보세요. 화면에 보이는 것들과 규칙을 마음대로 바꿀 수 있습니다. 게임을 완성하면 만든 게임을
        친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      bounce_12_basketball: 농구 게임을 직접 만들어보세요. 모든 규칙을 마음대로 바꿀 수 있습니다. 게임을 완성하면 만든 게임을
        친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      bounce_12_sports: |-
        게임을 직접 만들어보세요. 모든 것을 마음대로 할 수 있습니다: 모든 규칙들을 바꿀 수 있고, 여러
         가지 스포츠게임들을 창의적으로 섞을 수 있습니다! 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      bounce_1_basketball: '"왼쪽 방향키가 눌렸을 때" 블록에 다른 블록을 붙인 후, "실행하기"를 눌러 보세요. 왼쪽 방향키를
        사용해 목표 지점까지 손을 이동시켜 보세요.'
      bounce_1_sports: 깃발을 잡으세요! "왼쪽 방향키를 누르면" 블록에 다른 블록을 붙이고, "실행하기"를 눌러 깃발로 이동시키세요.
      bounce_2: '"오른쪽 방향키가 눌렸을 때", "왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, 양쪽의 목표 지점까지 이동시켜
        보세요.'
      bounce_2_basketball: '"오른쪽 방향키가 눌렸을 때", "왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, 양쪽의
        목표 지점까지 손을 이동시켜 보세요.'
      bounce_2_sports: 이번에는 두 개의 깃발이 있습니다! "왼쪽 방향키를 누르면" 블록과 "오른쪽 방향키를 누르면" 블록에 다른
        블록을 붙여 두 가지 방향으로 움직일 수 있도록 해보세요.
      bounce_3: '"위쪽 방향키가 눌렸을 때" 을 비슷하게 사용해 보세요. 위쪽 목표 지점까지 이동시켜 보세요.'
      bounce_4: 이번에는 4개의 블럭을 사용해야 합니다. 퍼즐을 해결하기 위해서 4개의 목표지점으로 이동시켜 보세요.
      bounce_5: 공을 아래로 내려보낼 것입니다. "라켓에 닿으면" 블럭을 붙여 공이 목표지점에 도착하게 만들어 보세요.
      bounce_5_basketball: 손을 향해 공을 아래로 내려보낼 것입니다. "공이 손에 닿으면" 블럭을 붙여 공이 깃발에 닿는 것을
        확인할 수 있게 해보세요.
      bounce_5_sports: 하키퍽이 플레이어를 향해 아래쪽으로 날라갑니다! "공이 플레이어에 맞으면" 블록을 붙여 깃발을 맞춰보세요.
      bounce_6: 이번 목표지점은 가장 위쪽 입니다. "공이 부딪치면"블럭을 사용해 퍼즐을 해결해 보세요.
      bounce_6_basketball: 이제 깃발이 가장 위에 있습니다. 이 퍼즐을 풀기 위해서는 "공이 닿으면" 블록의 양쪽에 블록들을
        붙여야 합니다.
      bounce_6_sports: 이제 깃발이 가장 위에 있습니다. 이 퍼즐을 풀기 위해서는 "공이 닿으면" 블록의 양쪽에 블록들을 붙여야
        합니다.
      bounce_7: '"~할 때" 블럭에 블럭들을 붙여보세요. 목표 지점에 닿을 때까지 공이 튀기도록 해보세요. '
      bounce_7_basketball: '"~할 때" 블록에 다른 블록들을 붙여보세요. 깃발에 닿을 때까지 공이 튀기도록 해보세요.'
      bounce_7_sports: '"~할 때" 블록에 다른 블록들을 붙여보세요. 깃발에 닿을 때까지 공이 튀기도록 해보세요.'
      comment_intro_maze_2018: Use the new `comment` block to leave yourself quick
        reminders.
      course1_artist_loops_challenge1: |-
        You can use a loop to draw many lines in a row.

        Can you draw a house? Make it look just the way you like it!  Try looking for patterns that repeat!
      course1_artist_loops_challenge2: Let's play a game! Draw as many X's as you
        can! Can you get 3 in a row?
      course1_artist_loops_challenge3: '"Can you help me make two bird houses?"'
      course1_artist_loops_challenge4: '"It''s time to toss the dice! Can you help
        me draw these?"'
      course1_collector_loops_challenge1: '"Can you help me spot some bugs? I know
        which way I want to go, but I''m not sure how many steps to take."'
      course1_collector_loops_challenge2: 'This time you can only use one of each
        arrow block. Get all of the treasure! '
      course1_collector_loops_challenge3: 'This time you can only use one of each
        arrow block. Get all of the treasure! '
      course1_collector_loops_challenge4: Let's get the treasure! Help me across each
        row then come back to start the next row. Can you find a pattern?
      course1_maze_debugging_challenge1: Debug this level. Remove the extra blocks
        and add the missing blocks. Get the bird to the pig!
      course1_maze_debugging_challenge2: Debug this level. These are the right blocks,
        but they're in the wrong order!
      course1_maze_seq_challenge1: 길을 따라 움직여서, 바보 같은 돼지 녀석을 잡아줘. TNT 폭탄을 피하고, 깃털들이
        헝클어지지 않도록 해야 돼!
      course1_maze_seq_challenge2: You can only move up to four times in each direction.
        Can you find a path before you run out of blocks?
      course1_playlab_events_challenge1: '"Where are my friends hiding? Can you write
        code to show the rest of my friends?"'
      course1_playlab_events_challenge2: '"Let''s have a party! Give my friends something
        to do when you click or tap them."'
      course2_artist_nestedLoops_challenge1: Can you figure out how to make a picture
        like this?
      course2_artist_nestedLoops_challenge2: Can you figure out how to make a picture
        like this?
      course2_artist_prog_challenge1: 동물들을 위한 공간을 그려주세요. 동물들을 위한 공간을 그리는 방법은 많이 있으니
        마음껏 시도해보세요.  가장 적은 블럭을 사용해서 그린다면 6블럭이면 돼요. 하지만 원하는 만큼 블럭을 사용해서 그려도 됩니다!!
      course2_artist_prog_challenge2: 길위에 있는 노란색 선을 그릴  수 있게 도와주세요!
      course2_bee_conditionals_challenge1: Collect all of the nectar or make all the
        honey.
      course2_bee_conditionals_challenge2: Collect all of the nectar or make all the
        honey.
      course2_collector_loops_challenge2: Get all of the treasure!
      course2_collector_prog_challenge1: Look carefully! Can you collect all _10_
        pieces of treasure?
      course2_collector_prog_challenge2: There are 20 pieces of treasure to be found.
        Collect at least half to finish this challenge!
      course2_harvester_loops_challenge1: Collect all of the corn.
      course2_harvester_loops_challenge2: Collect all of the lettuce. Avoid the trees
        and fields!
      course2_maze_loops_challenge1: 'Now Scrat wants to try using loops to find his
        acorn! '
      course2_maze_programming_challenge1: 돼지가 숨어 있어요! 돼지에게 가는 길을 찾을 수 있게 도와줄래요?
      course2_maze_programming_challenge2: Sometimes there is more than one way to
        solve the same problem. Sometimes it's faster to go backwards than it is to
        go forwards!
      course3_artist_functions_challenge1: Once you define a function, you can call
        it over and over again - whenever and wherever you want! Try this code to
        see how it works, then change it to make your own impressive design!
      course3_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      course3_bee_debugging_challenge1: Watch how the bee gets the nectar. Can you
        use the same kind of pattern to help the bee make all of the honey?
      course3_bee_functions_challenge1: You are on your own for this challenge. This
        could "bee" harder than it looks!
      course3_bee_functions_challenge2: You are on your own for this challenge!
      course3_bee_functions_challenge3: Create a new function to collect all the nectar
        and honey while there is a path ahead. Use it to complete the puzzle!
      course3_bee_functions_challenge4: Use everything you have learned to complete
        this puzzle!
      course3_collector_debugging_challenge2: Are you an expert of nested loops? Use
        what you have learned so far to collect all of the treasure!
      course3_farmer_condLoops_challenge1: Turn right at the pumpkins. Collect everything
        to complete the level. Each hidden crop has only one corn or lettuce.
      course3_farmer_condLoops_challenge2: Collect everything to complete the level.
      course3_farmer_until_challenge2: Use If/Else blocks to follow the curvy path.
        At each corner, use the `remove 1` command in a loop to clear the piles.
      course3_maze_debugging_challenge1: _"Am I just going around in circles?"_
      course3_maze_debugging_challenge2: _"If I turn too often, I might get dizzy!
        Help me reach the acorn with only four `turn` commands."_
      course3_maze_until_challenge1: No hints, just challenge. Get the zombie to the
        sunflower.
      course3_playLab_challenge1: "Something should happen when you get enough points
        or when you run out of points. Add some code to the `win game` and `lose game`
        functions to make the game work the way it should. \nClick the hints for ideas!"
      course4_artist_binary_challenge1: You can only use each binary value (0 or 1)
        once each in this puzzle. Try using nested loops to complete this drawing.
      course4_artist_binary_challenge2: Are you persistent enough to restore this
        logo back to normal?
      course4_artist_concept_challenge2: Create five pinwheel designs using the code
        below.
      course4_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      course4_artist_fwp_challenge1: 프로그램을 실행시켜보고 어떤 일이 일어나는지 살펴보세요. 이해할 수 있을까요?(블럭들을
        모두 지우고 완전히 새로 만들어 봐도 됩니다.)
      course4_artist_variables_challenge1: You've now learned everything you need
        to know to make a pattern like this! This puzzle is meant to be difficult.  Can
        you stick with it until you figure out the solution?
      course4_bee_for_challenge1: Use this for loop to collect all of the nectar.
        There are a few actions that you will want to repeat 'counter' times.
      course4_bee_fwp_challenge1: Use one `for loop` in a function to collect all
        of the corn. The same `for loop` can count to different maximum values by
        using the `length` parameter.
      course4_bee_fwp_challenge2: Use one `for loop` in a function to collect all
        of the vegetables in the row. Make the `for loop` can count to different maximum
        values by using the `length` parameter. Make your program as short as possible
        by using a second `for loop` outside the function.
      course4_collector_nested_loops_challenge2: Help the collector reach at least
        two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      course4_harvester_nested_loops_challenge1: '"I need some help on the farm! Help
        me harvest this corn using only the blocks in your toolbox."'
      course4_playlab_variables_challenge1: Use these blocks to make the actors share
        a knock-knock joke. Change the setup and punchline to tell your own joke!
      courseA_artist_loops1: This is a new type of puzzle called "Artist". Play with
        the level and draw something fun.
      courseA_artist_loops10: Help me put down stones so I don't fall in!
      courseA_artist_loops10_2018: Help me put down stones so I don't fall in!
      courseA_artist_loops10_2019: Help me put down stones so I don't fall in!
      courseA_artist_loops11: Help me build steps to watch the ship sail away.
      courseA_artist_loops11_2018: Help me build steps to watch the ship sail away.
      courseA_artist_loops11_2019: Help me build steps to watch the ship sail away.
      courseA_artist_loops12: The artist saw something funny in the distance.  Draw
        what you think he saw.
      courseA_artist_loops12_2018: The artist saw something funny in the distance.  Draw
        what you think he saw.
      courseA_artist_loops12_2019: The artist saw something funny in the distance.  Draw
        what you think he saw.
      courseA_artist_loops1_2018: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseA_artist_loops1_2019: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseA_artist_loops2: Help the artist draw this line two times forward.
      courseA_artist_loops2_2018: Help the artist draw this line two times forward.
      courseA_artist_loops2_2019: Help the artist draw this line two times forward.
      courseA_artist_loops3: Draw a line forward five times.
      courseA_artist_loops3_2018: Draw a line forward five times.
      courseA_artist_loops3_2019: Draw a line forward five times.
      courseA_artist_loops4: Now, use a `repeat` loop to draw this line five times!
      courseA_artist_loops4_2018: Now, use a `repeat` loop to draw this line five
        times!
      courseA_artist_loops4_2019: Now, use a `repeat` loop to draw this line five
        times!
      courseA_artist_loops5: Draw a line seven steps long. This will become our horizon.
      courseA_artist_loops5_2018: Draw a line seven steps long. This will become our
        horizon.
      courseA_artist_loops5_2019: Draw a line seven steps long. This will become our
        horizon.
      courseA_artist_loops6: Let's put a nice hill in the back.
      courseA_artist_loops6_2018: Let's put a nice hill in the back.
      courseA_artist_loops6_2019: Let's put a nice hill in the back.
      courseA_artist_loops7: Use the `repeat` loop to add waves to the water.
      courseA_artist_loops7_2018: Use the `repeat` loop to add waves to the water.
      courseA_artist_loops7_2019: Use the `repeat` loop to add waves to the water.
      courseA_artist_loops8: We need a ladder up to the boat.
      courseA_artist_loops8_2018: We need a ladder up to the boat.
      courseA_artist_loops8_2019: We need a ladder up to the boat.
      courseA_artist_loops9: 'Challenge: Fix the stairs.'
      courseA_artist_loops9_2018: 'Challenge: Fix the stairs.'
      courseA_artist_loops9_2019: 'Challenge: Fix the stairs.'
      courseA_artist_loops_challenge1: Can you draw a house? Make it look just the
        way you like it!
      courseA_artist_loops_challenge1_2018: Can you draw a house? Make it look just
        the way you like it!
      courseA_artist_loops_challenge1_2019: Can you draw a house? Make it look just
        the way you like it!
      courseA_artist_loops_challenge2a: _"Help me get these three tents set up!"_
      courseA_artist_loops_challenge2a_2018: _"Help me get these three tents set up!"_
      courseA_artist_loops_challenge2a_2019: _"Help me get these three tents set up!"_
      courseA_collector_loops1: Move Laurel around and get as much treasure as you
        can!
      courseA_collector_loops10: Help Laurel get all of the treasure along this path.
      courseA_collector_loops10_2018: Help Laurel get all of the treasure along this
        path.
      courseA_collector_loops10_2019: Help Laurel get all of the treasure along this
        path.
      courseA_collector_loops11: Help Laurel get all of the treasure from this cave.
      courseA_collector_loops11_2018: Help Laurel get all of the treasure from this
        cave.
      courseA_collector_loops11_2019: Help Laurel get all of the treasure from this
        cave.
      courseA_collector_loops12: _"Eureka!  Get as much treasure as you can!"_
      courseA_collector_loops12_2018: _"Eureka!  Get as much treasure as you can!"_
      courseA_collector_loops12_2019: _"Eureka!  Get as much treasure as you can!"_
      courseA_collector_loops1_2018: Move Laurel around and get as much treasure as
        you can!
      courseA_collector_loops1_2019: Move Laurel around and get as much treasure as
        you can!
      courseA_collector_loops2: Get all three piles to pass this level.
      courseA_collector_loops2_2018: Get all three piles to pass this level.
      courseA_collector_loops2_2019: Get all three piles! Move Laurel to each piece
        of treasure, then use the collect block.
      courseA_collector_loops4: Fix Laurel's path to get all of this treasure.
      courseA_collector_loops4_2018: Fix Laurel's path to get all of this treasure.
      courseA_collector_loops4_2019: Fix Laurel's path to get all of this treasure.
      courseA_collector_loops5: Use what you learned to get all of the treasure.
      courseA_collector_loops5_2018: Use what you learned to get all of the treasure.
      courseA_collector_loops5_2019: Use what you learned to get all of the treasure.
      courseA_collector_loops6: Add blocks to this code to get all of the treasure.
      courseA_collector_loops6_2018: Add blocks to this code to get all of the treasure.
      courseA_collector_loops6_2019: Add blocks to this code to get all of the treasure.
      courseA_collector_loops7: What should you add to this code to get all of the
        treasure?
      courseA_collector_loops7_2018: What should you add to this code to get all of
        the treasure?
      courseA_collector_loops7_2019: What should you add to this code to get all of
        the treasure?
      courseA_collector_loops8: Write code to get all of this treasure.
      courseA_collector_loops8_2018: Write code to get all of this treasure.
      courseA_collector_loops8_2019: Write code to get all of this treasure.
      courseA_collector_loops9: "**Challenge:** The treasure goes all the way up these
        stairs!  Write the code to help Laurel get it all."
      courseA_collector_loops9_2018: "**Challenge:** The treasure goes all the way
        up these stairs!  Write the code to help Laurel get it all."
      courseA_collector_loops9_2019: "**Challenge:** The treasure goes all the way
        up these stairs!  Write the code to help Laurel get it all."
      courseA_collector_loops_challenge1: _"Can you help me spot some bugs?"_
      courseA_collector_loops_challenge1_2018: _"Can you help me spot some bugs?"_
      courseA_collector_loops_challenge1_2019: _"Can you help me spot some bugs?"_
      courseA_collector_loops_challenge2: 'Get all of the treasure! '
      courseA_collector_loops_challenge2kp: Collect at least **3** pieces of treasure
        to pass this level.
      courseA_collector_loops_challenge2kp_2018: Collect at least **3** pieces of
        treasure to pass this level.
      courseA_collector_loops_challenge2kp_2019: Collect at least **3** pieces of
        treasure to pass this level.
      courseA_collector_preLoops1: "This is Laurel the Adventurer! \n\nPress \"Run\"
        to see her walk up to the treasure and grab it."
      courseA_collector_preLoops2: "Great!  Now you get to add code yourself!  \n\nSnap
        a `get treasure` block to the bottom of the program and click \"Run\"."
      courseA_collector_preLoops3: Snap two `E -->` blocks and one `get treasure`
        block to the bottom of the program, then click "Run".
      courseA_collector_preLoops4: Can you figure out how to solve this puzzle?
      courseA_collector_preLoops5: Get 1 of these 2 gems to solve this puzzle.
      courseA_collector_preLoops6: Get both pieces of treasure to solve this puzzle.
      courseA_collector_preLoops7: Get all three piles to pass this level.
      courseA_harvester_loops1: Help the harvester pick all the corn!
      courseA_harvester_loops10: Help the harvester pick all five ears of corn!
      courseA_harvester_loops10_2019: Help the harvester pick all five ears of corn!
      courseA_harvester_loops11: 'Try one more on your own! '
      courseA_harvester_loops11_2019: 'Try one more on your own! '
      courseA_harvester_loops1_2019: Help the harvester pick all the corn!
      courseA_harvester_loops2: Make sure to pick all the corn!
      courseA_harvester_loops2_2019: Make sure to pick all the corn!
      courseA_harvester_loops3: Can you pick all the corn using only **one** move
        block?
      courseA_harvester_loops3_2019: Can you pick all the corn using only **one**
        move block?
      courseA_harvester_loops4: Can you help the harvester find the bug in her code?
      courseA_harvester_loops4_2019: Can you help the harvester find the bug in her
        code?
      courseA_harvester_loops5: Try it yourself! Can you pick the corn at the end
        too?
      courseA_harvester_loops5_2019: Try it yourself! Can you pick the corn at the
        end too?
      courseA_harvester_loops5a: Look at all this corn! Can you pick it all by yourself?
      courseA_harvester_loops5a_2019: Look at all this corn! Can you pick it all by
        yourself?
      courseA_harvester_loops5b: Can you change your code to make the harvester pick
        all the corn?
      courseA_harvester_loops5b_2019: Can you change your code to make the harvester
        pick all the corn?
      courseA_harvester_loops6: You will need **one** `Move West` block and **one**
        `Move North` block.
      courseA_harvester_loops6_2019: You will need **one** `Move South` block and
        **one** `Move West` block.
      courseA_harvester_loops7: 'Try it on your own! '
      courseA_harvester_loops7_2019: 'Try it on your own! '
      courseA_harvester_loops9: Can you figure out how to pick all the corn?
      courseA_harvester_loops9_2019: Can you figure out how to pick all the corn?
      courseA_harvester_seq1: Play with these blocks to help the harvester pick the
        piece of corn.
      courseA_harvester_seq10: Make sure to pick all the corn!
      courseA_harvester_seq10_2019: Make sure to pick all the corn!
      courseA_harvester_seq11: Try it by yourself! Pick all the corn.
      courseA_harvester_seq11_2019: Try it by yourself! Pick all the corn.
      courseA_harvester_seq12: Pick all the corn.
      courseA_harvester_seq12_2019: Pick all the corn.
      courseA_harvester_seq13: Play with these blocks to help the harvester pick corn.
      courseA_harvester_seq13_2019: Play with these blocks to help the harvester pick
        corn.
      courseA_harvester_seq1_2019: Play with these blocks to help the harvester pick
        the piece of corn.
      courseA_harvester_seq2: Use three `move west` blocks and one `pick corn` block
        to solve this puzzle.
      courseA_harvester_seq2_2019: Use three `move west` blocks and one `pick corn`
        block to solve this puzzle.
      courseA_harvester_seq3: Use three `Move North` blocks and one `Pick Corn` block.
      courseA_harvester_seq3_2019: Use three `Move North` blocks and one `Pick Corn`
        block.
      courseA_harvester_seq4: Add one block to help the harvester pick the corn.
      courseA_harvester_seq4_2019: Add one block to help the harvester pick the corn.
      courseA_harvester_seq5: Find the bug and fix it!
      courseA_harvester_seq5_2019: Find the bug and fix it!
      courseA_harvester_seq6: Try it yourself!
      courseA_harvester_seq6_2019: Try it yourself!
      courseA_harvester_seq7: Try it yourself!
      courseA_harvester_seq7_2019: Try it yourself!
      courseA_harvester_seq8: Now the harvester needs to pick corn two times!
      courseA_harvester_seq8_2019: Now the harvester needs to pick corn two times!
      courseA_harvester_seq9: Add two blocks to finish this puzzle!
      courseA_harvester_seq9_2019: Add two blocks to finish this puzzle!
      courseA_maze_ramp2_2018: Snap all blocks together to finish your code, then
        click "Run".
      courseA_maze_ramp2_2019: Snap all blocks together to finish your code, then
        click "Run".
      courseA_maze_ramp3a_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseA_maze_ramp3a_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseA_maze_ramp3b_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "Run".
      courseA_maze_ramp3b_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "Run".
      courseA_maze_ramp4a_2018: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseA_maze_ramp4a_2019: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseA_maze_ramp5a_2018: Get the bird to the pig!
      courseA_maze_ramp5a_2019: Get the bird to the pig!
      courseA_maze_seq1: Get the bird to the bad pig!
      courseA_maze_seq10: 'Challenge: Go around the TNT to get the bird to the pig! '
      courseA_maze_seq10_2018: 'Challenge: Avoid the TNT to get the bird to the pig! '
      courseA_maze_seq10_2019: 'Challenge: Avoid the TNT to get the bird to the pig! '
      courseA_maze_seq10_copy: 'Challenge: Go around the TNT to get the bird to the
        pig! '
      courseA_maze_seq11: Move one way, then another to get the bird to the pig.
      courseA_maze_seq11_2018: Move one way, then another to get the bird to the pig.
      courseA_maze_seq11_2019: Move one way, then another to get the bird to the pig.
      courseA_maze_seq12: 'Get that pig! '
      courseA_maze_seq12_2018: 'Get that pig! '
      courseA_maze_seq12_2019: 'Get that pig! '
      courseA_maze_seq13: Get the pig any way you can!
      courseA_maze_seq13_2018: Get the pig any way you can!
      courseA_maze_seq13_2019: Get the pig any way you can!
      courseA_maze_seq1_2018: Get the bird to the bad pig!
      courseA_maze_seq1_2019: Get the bird to the bad pig!
      courseA_maze_seq2: 코드를 수정해서 돼지를 잡을 수 있게 해주세요!
      courseA_maze_seq3: Fix the code to get the bird to the pig!
      courseA_maze_seq4: REMOVE a block to get the bird to the pig!
      courseA_maze_seq5: Try this one yourself from the beginning.
      courseA_maze_seq5_2018: Give this one a try.
      courseA_maze_seq5_2019: Give this one a try.
      courseA_maze_seq5_copy: Try this one yourself from the beginning.
      courseA_maze_seq5a_2018: What can you add to the end of this code to get the
        bird to the pig?
      courseA_maze_seq5a_2019: What can you add to the end of this code to get the
        bird to the pig?
      courseA_maze_seq6: Move one way, then another to get the bird to the pig!
      courseA_maze_seq6_2018: Move one way, then another to get the bird to the pig!
      courseA_maze_seq6_2019: Move one way, then another to get the bird to the pig!
      courseA_maze_seq6_copy: Move one way, then another to get the bird to the pig!
      courseA_maze_seq7: Figure out what is missing and then add blocks to get the
        bird to the pig!
      courseA_maze_seq7_copy: Figure out what is missing and then add blocks to get
        the bird to the pig!
      courseA_maze_seq8: Solve this level and get the bird to the pig!
      courseA_maze_seq8_2018: Solve this level and get the bird to the pig!
      courseA_maze_seq8_2019: Solve this level and get the bird to the pig!
      courseA_maze_seq8_copy: Solve this level and get the bird to the pig!
      courseA_maze_seq9: Debug this level by adding blocks to get the bird to the
        pig!
      courseA_maze_seq_challenge1: Something is wrong here. Help fix the code to get
        the bird to the pig!
      courseA_maze_seq_challenge1_2018: Something is wrong here. Help fix the code
        to get the bird to the pig!
      courseA_maze_seq_challenge1_2019: Something is wrong here. Help fix the code
        to get the bird to the pig!
      courseA_maze_seq_challenge2: Trace the path to lead the bird to the pig. Avoid
        TNT or feathers will fly!
      courseA_maze_seq_challenge2_2018: Trace the path to lead the bird to the pig.
        Avoid TNT or feathers will fly!
      courseA_maze_seq_challenge2_2019: Trace the path to lead the bird to the pig.
        Avoid TNT or feathers will fly!
      courseA_playLab_events1: This is a Play Lab level.  Move blocks to the workspace
        and see what happens!
      courseA_playLab_events1_2018: This is a Play Lab level.  Move blocks to the
        workspace and see what happens!
      courseA_playLab_events1_2019: This is a Play Lab level. Move blocks to the workspace
        and see what happens!
      courseA_playLab_events2: Jorge the Dog wants to say "Hi there."  Can you help
        him?
      courseA_playLab_events2_2018: Jorge the Dog wants to say "Hi there."  Can you
        help him?
      courseA_playLab_events2_2019: Jorge the Dog wants to say "Hi there." Can you
        help him?
      courseA_playLab_events3: Connect the `move left` block to the `when left` event
        block that is already in the workspace.
      courseA_playLab_events3_2018: Connect the `move left` block to the `when left`
        event block that is already in the workspace.
      courseA_playLab_events3_2019: Connect the `move left` block to the `when left`
        event block that is already in the workspace. Use the arrow keys or press
        the arrow buttons to move Jorge to the flag and finish the level!
      courseA_playLab_events4: Add blocks for moving right when the `right` button
        is clicked.
      courseA_playLab_events4_2018: Add another event block to get Jorge to move right
        when the `right` button is clicked.
      courseA_playLab_events4_2019: Now, add another event block to get Jorge to move
        right when the right arrow button is clicked. Use the arrow keys or press
        the arrow buttons to move Jorge to both flags and finish the level!
      courseA_playLab_events5: Add events to have Jorge move up and down when the
        `up` and `down` buttons are pressed.
      courseA_playLab_events5_2018: Add events to have Jorge move up and down when
        the `up` and `down` buttons are pressed.
      courseA_playLab_events5_2019: Add events to have Jorge move up and down when
        the `up` and `down` buttons are pressed. Make Jorge get the flags to finish
        the level!
      courseA_playLab_events6: Make this more interesting by changing the background
        and playing a random sound when Jorge is clicked.
      courseA_playLab_events6_2018: Make this more interesting by changing the background
        and playing a random sound when Jorge is clicked.
      courseA_playLab_events6_2019: Make this more interesting by changing the background
        and playing a random sound when Jorge is clicked. When your code is ready,
        click on Jorge to try it out!
      courseA_playLab_events7: Add anything you want to this game.  Can you make the
        dinosaur disappear when Jorge runs into him?
      courseA_playLab_events7_2018: _Freeplay:_ Add anything you want to this game.
      courseA_playLab_events7_2019: _Freeplay:_ Add anything you want to this game.
      courseA_playlab_events_challenge1: Can you write code to show the rest of my
        friends? The hints will help you do this project step-by-step.
      courseA_playlab_events_challenge1_2018: Can you write code to show the rest
        of my friends? The hints will help you do this project step-by-step.
      courseA_playlab_events_challenge1_2019: Can you write code to show the rest
        of my friends? The hints will help you do this project step-by-step.
      courseA_playlab_events_challenge2: Give everyone something to do when you click
        on them.
      courseA_playlab_events_challenge2_2018: Give everyone something to do when you
        click on them.
      courseA_playlab_events_challenge2_2019: Give everyone something to do when you
        click on them.
      courseA_video_events: Need a better playlab/events combo
      courseA_video_events_2018: Need a better playlab/events combo
      courseA_video_events_2019: Need a better playlab/events combo
      courseB_Scrat_ramp1_2018: For this puzzle, snap the blocks together and press
        "▶ Run"!
      courseB_Scrat_ramp1_2019: For this puzzle, snap the blocks together and press
        "▶ Run"!
      courseB_Scrat_ramp2_2018: Snap all blocks together to finish your code, then
        click "▶ Run".
      courseB_Scrat_ramp2_2019: Snap all blocks together to finish your code, then
        click "▶ Run".
      courseB_Scrat_ramp3a_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseB_Scrat_ramp3a_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseB_Scrat_ramp3b_2018: Drag the extra block back to the toolbox to throw
        it away.
      courseB_Scrat_ramp3b_2019: Drag the extra block back to the toolbox to throw
        it away.
      courseB_Scrat_ramp4a_2018: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseB_Scrat_ramp4a_2019: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseB_Scrat_ramp5a_2018: Try this one all by yourself!
      courseB_Scrat_ramp5a_2019: Try this one all by yourself!
      courseB_artist_loops1: This is a new type of puzzle called "Artist". Play with
        the level and draw something fun.
      courseB_artist_loops10: Use what you have learned to draw a picture of what
        you think the artist saw when he got home.
      courseB_artist_loops10_2018: Use what you have learned to draw a picture of
        what you think the artist saw when he got home.
      courseB_artist_loops10_2019: Use what you have learned to draw a picture of
        what you think the artist saw when he got home.
      courseB_artist_loops1_2018: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseB_artist_loops1_2019: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseB_artist_loops2: The Artist is trying to draw a line **6** times, but
        can't get it right.  Can you help?
      courseB_artist_loops2_2018: The Artist is trying to draw a line **6** times,
        but can't get it right.  Can you help?
      courseB_artist_loops2_2019: The Artist is trying to draw a line **6** times,
        but can't get it right.  Can you help?
      courseB_artist_loops3: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops3_2018: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops3_2019: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops4: 'Now we need to get the soil ready to plant. Find the
        bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops4_2018: 'Now we need to get the soil ready to plant. Find
        the bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops4_2019: 'Now we need to get the soil ready to plant. Find
        the bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops5: Time to fix the stairs!  Repeat this pattern **5** times
        so the artist can reach the top of the bushes.
      courseB_artist_loops5_2018: Time to fix the stairs!  Repeat this pattern **5**
        times so the artist can reach the top of the bushes.
      courseB_artist_loops5_2019: Time to fix the stairs!  Repeat this pattern **5**
        times so the artist can reach the top of the bushes.
      courseB_artist_loops6: Climb the vine and see where it goes?
      courseB_artist_loops6_2018: Climb the vine and see where it goes?
      courseB_artist_loops6_2019: Climb the vine and see where it goes?
      courseB_artist_loops7: "**Challenge:**  It's a hidden garden! Let's walk around."
      courseB_artist_loops7_2018: "**Challenge:**  It's a hidden garden! Let's walk
        around."
      courseB_artist_loops7_2019: "**Challenge:**  It's a hidden garden! Let's walk
        around."
      courseB_artist_loops8: Time to head home. Can you fix this ladder using only
        one block to help the artist get down?
      courseB_artist_loops8_2018: Time to head home. Can you fix this ladder using
        only one block to help the artist get down?
      courseB_artist_loops8_2019: Time to head home. Can you fix this ladder using
        only one block to help the artist get down?
      courseB_artist_loops9: Let's take the short way home, over the pond. Can you
        help the artist stay on the stones?
      courseB_artist_loops9_2018: Let's take the short way home, over the pond. Can
        you help the artist stay on the stones?
      courseB_artist_loops9_2019: Let's take the short way home, over the pond. Can
        you help the artist stay on the stones?
      courseB_artist_loops_challenge1: '"It''s time to toss the dice! Can you help
        me draw these?"'
      courseB_artist_loops_challenge1_2018: '"It''s time to toss the dice! Can you
        help me draw these?"'
      courseB_artist_loops_challenge1_2019: '"It''s time to toss the dice! Can you
        help me draw these?"'
      courseB_artist_loops_challenge2: Draw as many X's as you can. Can you get 3
        in a row?
      courseB_artist_loops_challenge2_2018: Draw as many X's as you can. Can you get
        3 in a row?
      courseB_artist_loops_challenge2_2019: Draw as many X's as you can. Can you get
        3 in a row?
      courseB_collector_loops1: This is Laurel the Adventurer!  Can you move her around
        and get treasure?
      courseB_collector_loops10: Help Laurel get all of the treasure from this cave.
      courseB_collector_loops10_2018: Help Laurel get all of the treasure from this
        cave.
      courseB_collector_loops10_2019: Help Laurel get all of the treasure from this
        cave.
      courseB_collector_loops11: Eureka!  Get as much treasure as you can!
      courseB_collector_loops11_2018: Eureka!  Get as much treasure as you can!
      courseB_collector_loops11_2019: Eureka!  Get as much treasure as you can!
      courseB_collector_loops1_2018: Get at least one piece of treasure without mistakes
        to pass!
      courseB_collector_loops1_2019: Get at least one piece of treasure without mistakes
        to pass!
      courseB_collector_loops2: Get all four piles to pass this level.
      courseB_collector_loops2_2018: Get all four piles to pass this level.
      courseB_collector_loops2_2019: Get all four piles to pass this level.
      courseB_collector_loops3: How can Laurel get all five piles of treasure using
        only one `E -->` block?
      courseB_collector_loops3_2018: How can Laurel get all five piles of treasure
        using only one `E -->` block?
      courseB_collector_loops3_2019: How can Laurel get all five piles of treasure
        using only one `E -->` block?
      courseB_collector_loops4: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops4_2018: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops4_2019: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops5: 'Add to the code from the last puzzle to get all of
        the treasure. '
      courseB_collector_loops5_2018: 'Add to the code from the last puzzle to get
        all of the treasure. '
      courseB_collector_loops5_2019: 'Add to the code from the last puzzle to get
        all of the treasure. '
      courseB_collector_loops6: Figure out the code to help Laurel get all of the
        treasure!
      courseB_collector_loops6_2018: Figure out the code to help Laurel get all of
        the treasure!
      courseB_collector_loops6_2019: Figure out the code to help Laurel get all of
        the treasure!
      courseB_collector_loops7: Write the code to get all of this treasure.
      courseB_collector_loops7_2018: Write the code to get all of this treasure.
      courseB_collector_loops7_2019: Write the code to get all of this treasure.
      courseB_collector_loops8: "**Challenge:** The treasure goes all the way down
        these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops8_2018: "**Challenge:** The treasure goes all the way
        down these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops8_2019: "**Challenge:** The treasure goes all the way
        down these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops9: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops9_2018: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops9_2019: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops_challenge1: 'This time you have limited blocks. Get
        all of the treasure! '
      courseB_collector_loops_challenge1_2018: 'This time you have limited blocks.
        Get all of the treasure! '
      courseB_collector_loops_challenge1_2019: 'This time you have limited blocks.
        Get all of the treasure! '
      courseB_collector_loops_challenge2: Let's get the treasure! Help me across each
        row then come back to start the next row. Can you find a pattern?
      courseB_collector_loops_challenge2a: Help Laurel get at least **5** pieces of
        treasure to finish this puzzle.
      courseB_collector_loops_challenge2a_2018: Help Laurel get at least **5** pieces
        of treasure to finish this puzzle.
      courseB_collector_loops_challenge2a_2019: Help Laurel get at least **5** pieces
        of treasure to finish this puzzle.
      courseB_iceage_loops1: Help Scrat across the ice to get to the acorn!
      courseB_iceage_loops10: Help Scrat get all the way over to the acorn!
      courseB_iceage_loops10_2019: Help Scrat get all the way over to the acorn!
      courseB_iceage_loops11: Help Scrat get to the acorn!
      courseB_iceage_loops11_2019: Help Scrat get to the acorn!
      courseB_iceage_loops12: Get to the acorn any way you can!
      courseB_iceage_loops12_2019: Get to the acorn any way you can!
      courseB_iceage_loops1_2019: Help Scrat across the ice to get to the acorn!
      courseB_iceage_loops2: Use two different move blocks to get to the acorn!
      courseB_iceage_loops2_2019: Use two different move blocks to get to the acorn!
      courseB_iceage_loops3: Can you get to the acorn with just one `W` block?
      courseB_iceage_loops3_2019: Can you get to the acorn with just one `W` block?
      courseB_iceage_loops4: Add one more block to get Scrat all the way to the acorn!
      courseB_iceage_loops4_2019: Add one more block to get Scrat all the way to the
        acorn!
      courseB_iceage_loops6: Can you add a loop to get to the acorn?
      courseB_iceage_loops6_2019: Can you add a loop to get to the acorn?
      courseB_iceage_loops7: 'Scrat really wants that acorn! '
      courseB_iceage_loops7_2019: 'Scrat really wants that acorn! '
      courseB_iceage_loops8: 'Can you fix this code? '
      courseB_iceage_loops8_2019: 'Can you fix this code? '
      courseB_iceage_loops9: The acorn is so far away! Can you use loops to help Scrat
        get there?
      courseB_iceage_loops9_2019: The acorn is so far away! Can you use loops to help
        Scrat get there?
      courseB_maze_seq1: "Play with these blocks to see what they make the bird do!
        \n\nGet the bird to the pig to complete the level."
      courseB_maze_seq10: Fix the bugs to get the bird to the pig.
      courseB_maze_seq10_2018: Fix the bugs to get Scrat to the acorn.
      courseB_maze_seq10_2019: Fix the bugs to get Scrat to the acorn.
      courseB_maze_seq11: It's all you!  Get the bird to the pig.
      courseB_maze_seq11_2018: It's all you!  Get Scrat to the acorn.
      courseB_maze_seq11_2019: It's all you!  Get Scrat to the acorn.
      courseB_maze_seq12: Now get that pig any way you can!
      courseB_maze_seq12_2018: Now get that acorn any way you can!
      courseB_maze_seq12_2019: Now get that acorn any way you can!
      courseB_maze_seq1_2018: "Play with these blocks to see what they make Scrat
        do! \n\nGet Scrat to the acorn to complete the level."
      courseB_maze_seq1_2019: "Play with these blocks to see what they make Scrat
        do! \n\nGet Scrat to the acorn to complete the level."
      courseB_maze_seq2: _"A bug! Fix the code to get me to the pig."_
      courseB_maze_seq3: '"Fix the code to get me to the pig!"'
      courseB_maze_seq4: Add 2 blocks to get the bird to the pig.
      courseB_maze_seq4_2018: Use **2** movement blocks to get the Scrat to the acorn.
      courseB_maze_seq4_2019: Use **2** movement blocks to get the Scrat to the acorn.
      courseB_maze_seq5: Now try this puzzle from the start!
      courseB_maze_seq5_2018: This puzzle is a little tricky!
      courseB_maze_seq5_2019: This puzzle is a little tricky!
      courseB_maze_seq6: Move one way, then another to get the bird to the pig!
      courseB_maze_seq6_2018: Move one way, then another to get Scrat to the acorn!
      courseB_maze_seq6_2019: Move one way, then another to get Scrat to the acorn!
      courseB_maze_seq7: Figure out what is missing and then add blocks to get the
        bird to the pig!
      courseB_maze_seq7_2018: Figure out what is missing and then add blocks to get
        Scrat to the acorn!
      courseB_maze_seq7_2019: Figure out what is missing and then add blocks to get
        Scrat to the acorn!
      courseB_maze_seq8: Your turn!  What do you need to do to get the bird to the
        pig?
      courseB_maze_seq8_2018: Your turn!  What do you need to do to get Scrat to the
        acorn?
      courseB_maze_seq8_2019: Your turn!  What do you need to do to get Scrat to the
        acorn?
      courseB_maze_seq9: 'Challenge: Move around the TNT to get the bird to the pig.'
      courseB_maze_seq9_2018: 'Challenge: Move around the broken ice to get Scrat
        to the acorn.'
      courseB_maze_seq9_2019: 'Challenge: Move around the broken ice to get Scrat
        to the acorn.'
      courseB_maze_seq_challenge1: Can you find a path before you run out of blocks?
      courseB_maze_seq_challenge1_2018: Can you find a path before you run out of
        blocks?
      courseB_maze_seq_challenge1_2019: Can you find a path before you run out of
        blocks?
      courseB_maze_seq_challenge2: Debug this level. These are the right blocks, but
        they're in the wrong order!
      courseB_maze_seq_challenge2_2018: Debug this level. These are the right blocks,
        but they're in the wrong order!
      courseB_maze_seq_challenge2_2019: Debug this level. These are the right blocks,
        but they're in the wrong order!
      courseB_playLab_events1: See if you can figure out what each block does.
      courseB_playLab_events1_2018: See if you can figure out what each block does.
      courseB_playLab_events1_2019: See if you can figure out what each block does.
      courseB_playlab_events2: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events2_2018: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events2_2019: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events3: Use an event to make Daisy the Dragon switch to a random
        mood when you click on her.
      courseB_playlab_events3_2018: Use an event to make Daisy the Dragon switch to
        a random mood when you click on her.
      courseB_playlab_events3_2019: Use an event to make Daisy the Dragon switch to
        a random mood when you click on her.
      courseB_playlab_events4: Knight time!  Add an event so that the knight moves
        toward the dragon when the left arrow is clicked.
      courseB_playlab_events4_2018: Get the dragon to finish this level!
      courseB_playlab_events4_2019: Get the dragon to finish this level!
      courseB_playlab_events5: Now add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events5_2018: Add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events5_2019: Add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events6: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events6_2018: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events6_2019: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events7: Make this game fun by setting the knight to vanish
        when he runs into the dragon on his way to get the flags!  Play a sound when
        they collide to make it feel more real.
      courseB_playlab_events7_2018: "1.  Set the knight to vanish when he runs into
        the dragon.    \n2.  Play a sound when they collide to make it feel more real.
        \ "
      courseB_playlab_events7_2019: "1.  Set the knight to vanish when he runs into
        the dragon.    \n2.  Play a sound when they collide to make it feel more real.
        \ "
      courseB_playlab_eventsFP: Use your imagination. What can you do to make this
        game more fun?
      courseB_playlab_eventsFP_2018: "**Free play:** Use your imagination. What can
        you do to make this game more fun?"
      courseB_playlab_eventsFP_2019: "**Free play:** Use your imagination. What can
        you do to make this game more fun?"
      courseB_playlab_events_challenge1: 'Make the animals move down when you press
        ▼. '
      courseB_playlab_events_challenge1_2018: 'Make the animals move down when you
        press ▼. '
      courseB_playlab_events_challenge1_2019: 'Make the animals move down when you
        press ▼. '
      courseB_playlab_events_challenge2: Make the animals disappear when you click
        on them.
      courseB_playlab_events_challenge2_2018: Make the animals disappear when you
        click on them.
      courseB_playlab_events_challenge2_2019: Make the animals disappear when you
        click on them.
      courseB_starWars_prog1: '"Go get the scrap metal, BB-8!"'
      courseB_starWars_prog10: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog10_2018: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog10_2019: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog11: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog11_2018: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog11_2019: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog1_2018: '"Go get the scrap metal, BB-8!"'
      courseB_starWars_prog1_2019: '"Go get the scrap metal, BB-8!"'
      courseB_starWars_prog2: Get all the metal.
      courseB_starWars_prog2_2018: Get all the metal.
      courseB_starWars_prog2_2019: Get all the metal.
      courseB_starWars_prog3: Get all the scrap metal
      courseB_starWars_prog3_2018: Get all the scrap metal
      courseB_starWars_prog3_2019: Get all the scrap metal
      courseB_starWars_prog4: Get all the scrap metal
      courseB_starWars_prog4_2018: Get all the scrap metal
      courseB_starWars_prog4_2019: Get all the scrap metal
      courseB_starWars_prog5: Get the scrap metal
      courseB_starWars_prog5_2018: Get the scrap metal
      courseB_starWars_prog5_2019: Get the scrap metal
      courseB_starWars_prog6: Get all the scrap metal
      courseB_starWars_prog6_2018: Get all the scrap metal
      courseB_starWars_prog6_2019: Get all the scrap metal
      courseB_starWars_prog7: Go get it!
      courseB_starWars_prog7_2018: Go get it!
      courseB_starWars_prog7_2019: Go get it!
      courseB_starWars_prog8: "**Challenge:** Help BB-8 gather the glowing scrap metal"
      courseB_starWars_prog8_2018: "**Challenge:** Help BB-8 gather the glowing scrap
        metal"
      courseB_starWars_prog8_2019: "**Challenge:** Help BB-8 gather the glowing scrap
        metal"
      courseB_starWars_prog9: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog9_2018: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog9_2019: Help BB-8 gather the glowing scrap metal
      courseC19_playLab_EOC1: Choose a background and map, and pick an actor to be
        your game's hero.
      courseC19_playLab_EOC2: Use events and actions to make your hero move. Get to
        the targets.
      courseC19_playLab_EOC3: Add two or more additional actors to your game and make
        them move.
      courseC19_playLab_EOC4: Find some interesting ways to change the score in your
        game. Get the score to show something other than 0 to continue.
      courseC19_playLab_EOC5: Great job! You have all the basic components of a working
        game. Now spend some time making sure the game works the way you want.
      courseC19_playLab_EOC6: You've finished! Now you can play your game or share
        it with your friends and classmates!
      courseC_PlayLab_events1: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events1_2018: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events1_2019: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events2: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events2_2018: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events2_2019: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events3: 이 강아지를 고양이에게 가도록 프로그램을 짜보세요!
      courseC_PlayLab_events3_2018: 이 강아지를 고양이에게 가도록 프로그램을 짜보세요!
      courseC_PlayLab_events3_2019: 이 강아지를 고양이에게 가도록 프로그램을 짜보세요!
      courseC_PlayLab_events4: Can you write a program that makes Jorge (actor 1)
        move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches her?
      courseC_PlayLab_events4_2018: Can you write a program that makes Jorge (actor
        1) move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches
        her?
      courseC_PlayLab_events4_2019: Can you write a program that makes Jorge (actor
        1) move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches
        her?
      courseC_PlayLab_events5: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events5_2018: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events5_2019: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events6: Now, write a program to make Waddles the Penguin move
        around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events6_2018: Now, write a program to make Waddles the Penguin
        move around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events6_2019: Now, write a program to make Waddles the Penguin
        move around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events7: The `repeat forever` block allows you to run code over
        and over forever.  Use this block to move Chomp the Dino (actor 2) up and
        down by 400 pixels forever.
      courseC_PlayLab_events7_2018: The `repeat forever` block allows you to run code
        over and over forever.  Use this block to move Chomp the Dino (actor 2) up
        and down by 400 pixels forever.
      courseC_PlayLab_events7_2019: The `repeat forever` block allows you to run code
        over and over forever.  Use this block to move Chomp the Dino (actor 2) up
        and down by 400 pixels forever.
      courseC_PlayLab_events8: "Can you have Waddles (actor 1) play a \"hit\" sound
        and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the game
        to make that happen."
      courseC_PlayLab_events8_2018: "Can you have Waddles (actor 1) play a \"hit\"
        sound and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the
        game to make that happen."
      courseC_PlayLab_events8_2019: "Can you have Waddles (actor 1) play a \"hit\"
        sound and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the
        game to make that happen."
      courseC_PlayLab_events9: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_events9_2018: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_events9_2019: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_eventsA: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_2018: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_2019: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_embed_2019: Let's play a game. Score 5 points by moving
        the Penguin to the Octopus!
      courseC_PlayLab_eventsFP: Create your own story. When you're done, click "Finish"
        to share with friends. See story ideas in the hints.
      courseC_PlayLab_eventsFP_2018: Create your own story. When you're done, click
        "Finish" to share with friends. See story ideas in the hints.
      courseC_PlayLab_eventsFP_2019: Create your own story. When you're done, click
        "Finish" to share with friends. See story ideas in the hints.
      courseC_PlayLab_events_challenge1: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_PlayLab_events_challenge1_2018: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_PlayLab_events_challenge1_2019: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_artist_loop1: Let's add some pizazz!
      courseC_artist_loop1_2018: Let's add some pizazz with a `set pattern` block.
      courseC_artist_loop1_2019: Let's add some pizazz with a `set pattern` block.
      courseC_artist_loops1a: 'Get the artist to the center of the play area, then
        draw a bird using a sticker. '
      courseC_artist_loops1a_2018: 'Get the artist to the center of the play area,
        then draw a bird using a sticker. '
      courseC_artist_loops1a_2019: 'Get the artist to the center of the play area,
        then draw a sticker. '
      courseC_artist_loops1b_2019: 'Change the direction your sticker is facing by
        adding a `turn` command to your code. '
      courseC_artist_loops2a: Now, use a loop to spin your bird around 12 times with
        a 30 degree turn.
      courseC_artist_loops2a_2018: Now, use a loop to spin your bird around 12 times
        with a 30 degree turn.
      courseC_artist_loops2a_2019: Now, use a loop to make more copies of your sticker.
        Try changing the numbers in the turn and repeat blocks to make different patterns.
      courseC_artist_loops3a: Now add a bat!
      courseC_artist_loops3a_2018: Now add a bat!
      courseC_artist_loops3a_2019: Now add a second sticker!
      courseC_artist_loops4a: Try jumping forward by 75 pixels.
      courseC_artist_loops4a_2018: Try jumping forward by 75 pixels.
      courseC_artist_loops4a_2019: Edit your code so that you jump forward between
        drawing the two stickers.
      courseC_artist_loops5a: Try new stickers!
      courseC_artist_loops5a_2018: Try new stickers!
      courseC_artist_loops5a_2019: Try new stickers!
      courseC_artist_loops5b: Try adding lines!
      courseC_artist_loops5b_2018: Try adding lines!
      courseC_artist_loops5b_2019: Try adding lines!
      courseC_artist_loops6a: Add another sticker!
      courseC_artist_loops6a_2018: Add another sticker!
      courseC_artist_loops6a_2019: Add another sticker!
      courseC_artist_loops7a: Play with the loops and angles.
      courseC_artist_loops7a_2018: Play with the loops and angles.
      courseC_artist_loops7a_2019: Play with the loops and angles.
      courseC_artist_loops8a: Now try something on your own!
      courseC_artist_loops8a_2018: Now try something on your own!
      courseC_artist_loops8a_2019: Now try something on your own!
      courseC_artist_loopsPre1a: Time to spin that line around!
      courseC_artist_loopsPre1a_2018: Time to spin that line around!
      courseC_artist_loopsPre1a_2019: Time to spin that line around!
      courseC_artist_loopsPrePre1a: 'Get the artist to the center of the play area,
        then draw a line. '
      courseC_artist_loopsPrePre1a_2018: 'Get the artist to the center of the play
        area, then draw a line. '
      courseC_artist_loopsPrePre1a_2019: 'Get the artist to the center of the play
        area, then draw a line. '
      courseC_artist_prog1: Play with the blocks in the toolbox to see what they do!
      courseC_artist_prog1_2018: Play with the blocks in the toolbox to see what they
        do!
      courseC_artist_prog1_2019: Play with the blocks in the toolbox to see what they
        do!
      courseC_artist_prog2: Drag blocks onto the screen to have the artist draw over
        the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog2_2018: Drag blocks onto the screen to have the artist draw
        over the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog2_2019: Drag blocks onto the screen to have the artist draw
        over the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog3: Each side of the inner square is 100 pixels and all of
        the angles are 90 degrees.
      courseC_artist_prog3_2018: Each side of the inner square is 100 pixels and all
        of the angles are 90 degrees.
      courseC_artist_prog3_2019: Each side of the inner square is 100 pixels and all
        of the angles are 90 degrees.
      courseC_artist_prog4: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog4_2018: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog4_2019: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog5: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      courseC_artist_prog5_2018: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      courseC_artist_prog5_2019: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      courseC_artist_prog6: Draw this diamond with 200 pixel sides.
      courseC_artist_prog6_2018: Draw this diamond with 200 pixel sides.
      courseC_artist_prog6_2019: Draw this diamond with 200 pixel sides.
      courseC_artist_prog7: "**Challenge:** This tag is a special one!  Can you figure
        out how to draw the outline?"
      courseC_artist_prog7_2018: "**Challenge:** This tag is a special one!  Can you
        figure out how to draw the outline?"
      courseC_artist_prog7_2019: "**Challenge:** This tag is a special one!  Can you
        figure out how to draw the outline?"
      courseC_artist_prog8: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog8_2018: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog8_2019: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog_challenge1: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge1_2018: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge1_2019: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge2a: _"Help me paint the yellow lines on this road!"_
      courseC_artist_prog_challenge2a_2018: _"Help me paint the yellow lines on this
        road!"_
      courseC_artist_prog_challenge2a_2019: _"Help me paint the yellow lines on this
        road!"_
      courseC_collector_loops_challenge2: Get at least **5** pieces of treasure!
      courseC_collector_loops_challenge2_2018: Get at least **5** pieces of treasure!
      courseC_collector_loops_challenge2_2019: Get at least **5** pieces of treasure!
      courseC_collector_prog1: Play around with the blocks to see if you can help
        Laurel collect some treasure.
      courseC_collector_prog1_2018: Play around with the blocks to see if you can
        help Laurel collect some treasure.
      courseC_collector_prog1_2019: Play around with the blocks to see if you can
        help Laurel collect some treasure.
      courseC_collector_prog2: Move Laurel to the treasure, then use `collect` to
        pick it up.
      courseC_collector_prog2_2018: Move Laurel to the treasure, then use `collect`
        to pick it up.
      courseC_collector_prog2_2019: Move Laurel to the treasure, then use `collect`
        to pick it up.
      courseC_collector_prog3: Order these blocks to collect the treasure and solve
        the puzzle.
      courseC_collector_prog3_2018: Order these blocks to collect the treasure and
        solve the puzzle.
      courseC_collector_prog3_2019: Order these blocks to collect the treasure and
        solve the puzzle.
      courseC_collector_prog4: Put these blocks in order to collect all of the treasure
        and solve the puzzle.
      courseC_collector_prog4_2018: Put these blocks in order to collect all of the
        treasure and solve the puzzle.
      courseC_collector_prog4_2019: Put these blocks in order to collect all of the
        treasure and solve the puzzle.
      courseC_collector_prog5: These blocks are in the wrong order. Can you fix them?
      courseC_collector_prog5_2018: These blocks are in the wrong order. Can you fix
        them?
      courseC_collector_prog5_2019: These blocks are in the wrong order. Can you fix
        them?
      courseC_collector_prog6: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog6_2018: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog6_2019: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog7: Use blocks from the toolbox to collect all of the treasure.
      courseC_collector_prog7_2018: Use blocks from the toolbox to collect all of
        the treasure.
      courseC_collector_prog7_2019: Use blocks from the toolbox to collect all of
        the treasure.
      courseC_collector_prog8: _"Keep up the good work! Help me collect all of the
        treasure."_
      courseC_collector_prog8_2018: _"Keep up the good work! Help me collect all of
        the treasure."_
      courseC_collector_prog8_2019: _"Keep up the good work! Help me collect all of
        the treasure."_
      courseC_collector_prog9: _"Let's get all of the treasure!"_
      courseC_collector_prog9_2018: _"Let's get all of the treasure!"_
      courseC_collector_prog9_2019: _"Let's get all of the treasure!"_
      courseC_collector_prog_challenge1: Look carefully! Can you collect all **10**
        pieces of treasure?
      courseC_collector_prog_challenge1_2018: Look carefully! Can you collect all
        **10** pieces of treasure?
      courseC_collector_prog_challenge1_2019: Look carefully! Can you collect all
        **10** pieces of treasure?
      courseC_collector_prog_challenge2: Collect at least **10** pieces of treasure
        to finish this challenge!
      courseC_collector_prog_challenge2_2018: Collect at least **10** pieces of treasure
        to finish this challenge!
      courseC_collector_prog_challenge2_2019: Collect at least **10** pieces of treasure
        to finish this challenge!
      courseC_data wizard: "Press Run. \nThe wizard will make animals appear. \n\nCount
        them. \nWhat do you notice?"
      courseC_flappy_events1: Attach the `flap normal amount` block to the `when click`
        event, then press "Run".    Click or tap on the play space to move Flappy
        to the target.
      courseC_flappy_events10: 'Create your own Flappy game! '
      courseC_flappy_events10_2018: 'Create your own Flappy game! '
      courseC_flappy_events10_2019: 'Create your own Flappy game! '
      courseC_flappy_events1_2018: Attach the `flap normal amount` block to the `when
        click` event, then press "Run".    Click or tap on the play space to move
        Flappy to the target.
      courseC_flappy_events1_2019: Attach the `flap normal amount` block to the `when
        click` event, then press "Run".    Click or tap on the play space to move
        Flappy to the target.
      courseC_flappy_events2: Try adding a block that sets the level speed when the
        "Run" button is pressed.  Play the game and flap to the target to continue.
      courseC_flappy_events2_2018: Try adding a block that sets the level speed when
        the "Run" button is pressed.  Play the game and flap to the target to continue.
      courseC_flappy_events2_2019: Try adding a block that sets the level speed when
        the "Run" button is pressed.  Play the game and flap to the target to continue.
      courseC_flappy_events3: Attach the `end game` block to the `when hit the ground`
        event.   Play the game and crash the bird into the ground to continue.
      courseC_flappy_events3_2018: Attach the `end game` block to the `when hit the
        ground` event.   Play the game and crash the bird into the ground to continue.
      courseC_flappy_events3_2019: Attach the `end game` block to the `when hit the
        ground` event.   Play the game and crash the bird into the ground to continue.
      courseC_flappy_events4: Attach a block to the `when hit an obstacle` event so
        that the game ends when Flappy crashes into the first set of pipes.
      courseC_flappy_events4_2018: Attach a block to the `when hit an obstacle` event
        so that the game ends when Flappy crashes into the first set of pipes.
      courseC_flappy_events4_2019: Attach a block to the `when hit an obstacle` event
        so that the game ends when Flappy crashes into the first set of pipes.
      courseC_flappy_events5: Add a block to the `when pass an obstacle` event, then
        press "Run" to score a point by flying Flappy through the first set of pipes.
      courseC_flappy_events5_2018: Add a block to the `when pass an obstacle` event,
        then press "Run" to score a point by flying Flappy through the first set of
        pipes.
      courseC_flappy_events5_2019: Add a block to the `when pass an obstacle` event,
        then press "Run" to score a point by flying Flappy through the first set of
        pipes.
      courseC_flappy_events6: See if you can still score a point after making Flappy
        flap either a smaller or larger amount each time you click.
      courseC_flappy_events6_2018: See if you can still score a point after making
        Flappy flap either a smaller or larger amount each time you click.
      courseC_flappy_events6_2019: See if you can still score a point after making
        Flappy flap either a smaller or larger amount each time you click.
      courseC_flappy_events7: Next, try changing the scene by attaching a block to
        the `when run` event.
      courseC_flappy_events7_2018: Next, try changing the scene by attaching a block
        to the `when run` event.
      courseC_flappy_events7_2019: Next, try changing the scene by attaching a block
        to the `when run` event.
      courseC_flappy_events8: Try setting a **random** scene when other events happen...for
        example, when passing an obstacle.
      courseC_flappy_events8_2018: Try setting a **random** scene when other events
        happen...for example, when passing an obstacle.
      courseC_flappy_events8_2019: Try setting a **random** scene when other events
        happen...for example, when passing an obstacle.
      courseC_flappy_events9: To mix things up, instead of ending the game when Flappy
        hits an obstacle, try setting the score back to 0.
      courseC_flappy_events9_2018: To mix things up, instead of ending the game when
        Flappy hits an obstacle, try setting the score back to 0.
      courseC_flappy_events9_2019: To mix things up, instead of ending the game when
        Flappy hits an obstacle, try setting the score back to 0.
      courseC_harvester_loops1: Use loops to pick all of the pumpkins.
      courseC_harvester_loops10: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops10_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops10_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops11: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops11_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops11_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops1_2018: Use loops to pick all of the pumpkins.
      courseC_harvester_loops1_2019: Use loops to pick all of the pumpkins.
      courseC_harvester_loops2: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops2_2018: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops2_2019: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops3: Collect all of the pumpkins.
      courseC_harvester_loops3_2018: Collect all of the pumpkins.
      courseC_harvester_loops3_2019: Collect all of the pumpkins.
      courseC_harvester_loops4: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops4_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops4_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops5: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops5_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops5_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops6: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops6_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops6_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops7: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops7_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops7_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops8: "**Challenge:** Collect all of the corn and all of
        the pumpkins."
      courseC_harvester_loops8_2018: "**Challenge:** Collect all of the corn and all
        of the pumpkins."
      courseC_harvester_loops8_2019: "**Challenge:** Collect all of the corn and all
        of the pumpkins."
      courseC_harvester_loops9: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops9_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops9_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops_challenge1a: Collect all of the corn.
      courseC_harvester_loops_challenge1a_2018: Collect all of the corn.
      courseC_harvester_loops_challenge1a_2019: Collect all of the corn.
      courseC_harvester_loops_challenge2: Collect all of the lettuce. Avoid the trees
        and fields!
      courseC_harvester_loops_challenge2_2018: Collect all of the lettuce. Avoid the
        trees and fields!
      courseC_harvester_loops_challenge2_2019: Collect all of the lettuce. Avoid the
        trees and fields!
      courseC_maze_debugging1: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging1_2018: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging1_2019: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging2: Use your debugging skills to get Scrat to the acorn.
      courseC_maze_debugging2_2018: Use your debugging skills to get Scrat to the
        acorn.
      courseC_maze_debugging2_2019: Use your debugging skills to get Scrat to the
        acorn.
      courseC_maze_debugging3: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging3_2018: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging3_2019: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging4: Someone has their directions mixed up! Can you help?
      courseC_maze_debugging4_2018: Someone has their directions mixed up! Can you
        help?
      courseC_maze_debugging4_2019: Someone has their directions mixed up! Can you
        help?
      courseC_maze_debugging5: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging5_2018: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging5_2019: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging6: Figure out what is wrong and get Scrat to the acorn.
      courseC_maze_debugging6_2018: Figure out what is wrong and get Scrat to the
        acorn.
      courseC_maze_debugging6_2019: Figure out what is wrong and get Scrat to the
        acorn.
      courseC_maze_debugging7: "**Challenge:** Debug this level by rearranging, adding,
        and deleting blocks."
      courseC_maze_debugging7_2018: "**Challenge:** Debug this level by rearranging,
        adding, and deleting blocks."
      courseC_maze_debugging7_2019: "**Challenge:** Debug this level by rearranging,
        adding, and deleting blocks."
      courseC_maze_debugging9: Debug this level to get Scrat to the acorn.
      courseC_maze_debugging9_2018: Debug this level to get Scrat to the acorn.
      courseC_maze_debugging9_2019: Use the blocks in the toolbox to build your program.
        Get the bird to the pig.
      courseC_maze_debugging_challenge1: Help Scrat decide which way to turn to get
        to the acorn.
      courseC_maze_debugging_challenge1_2018: Help Scrat decide which way to turn
        to get to the acorn.
      courseC_maze_debugging_challenge1_2019: Help Scrat decide which way to turn
        to get to the acorn.
      courseC_maze_debugging_challenge2: Help Scrat reach the acorn with only four
        `turn` commands.
      courseC_maze_debugging_challenge2_2018: Help Scrat reach the acorn with only
        four `turn` commands.
      courseC_maze_debugging_challenge2_2019: Help Scrat reach the acorn with only
        four `turn` commands.
      courseC_maze_loops_challenge1a: 'Now Scrat wants to try using loops to find
        his acorn! '
      courseC_maze_loops_challenge1a_2018: 'Now Scrat wants to try using loops to
        find his acorn! '
      courseC_maze_loops_challenge1a_2019: 'Now Scrat wants to try using loops to
        find his acorn! '
      courseC_maze_programming1: For this puzzle, drag all of the blocks together
        and click "Run" to watch it go!
      courseC_maze_programming1_2018: For this puzzle, drag all of the blocks together
        and click "Run" to watch it go!
      courseC_maze_programming1_2019: For this puzzle, drag all of the blocks together
        and click "Run" to watch it go!
      courseC_maze_programming2: Drag an extra `move forward` block out of the toolbox
        to finish your code.
      courseC_maze_programming2_2018: Drag an extra `move forward` block out of the
        toolbox to finish your code.
      courseC_maze_programming2_2019: Drag an extra `move forward` block out of the
        toolbox to finish your code.
      courseC_maze_programming3: There is one extra block that is going to cause the
        bird to crash. Throw it away by dragging it back to the toolbox.
      courseC_maze_programming3_2018: There is one extra block that is going to cause
        the bird to crash. Throw it away by dragging it back to the toolbox.
      courseC_maze_programming3_2019: There is one extra block that is going to cause
        the bird to crash. Throw it away by dragging it back to the toolbox.
      courseC_maze_programming4: Avoid TNT or feathers will fly!
      courseC_maze_programming4_2018: Avoid TNT or feathers will fly!
      courseC_maze_programming4_2019: Avoid TNT or feathers will fly!
      courseC_maze_programming5: Avoid the TNT.
      courseC_maze_programming5_2018: Avoid the TNT.
      courseC_maze_programming5_2019: Avoid the TNT.
      courseC_maze_programming6: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면, 화가 날
        것 같아!
      courseC_maze_programming6_2018: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면,
        화가 날 것 같아!
      courseC_maze_programming6_2019: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면,
        화가 날 것 같아!
      courseC_maze_programming7: "**Challenge:** This code has a lot of bugs. You'll
        need to remove some blocks and add others."
      courseC_maze_programming7_2018: "**Challenge:** This code has a lot of bugs.
        You'll need to remove some blocks and add others."
      courseC_maze_programming7_2019: "**Challenge:** This code has a lot of bugs.
        You'll need to remove some blocks and add others."
      courseC_maze_programming8: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_2018: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_2019: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_predict1: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_predict1_2018: _"Keep calm and help me find the bad
        pig."_
      courseC_maze_programming8_predict1_2019: _"Keep calm and help me find the bad
        pig."_
      courseC_maze_programming9: _"Now, help me sneak up on the pig any way you want
        to!"_
      courseC_maze_programming9_2018: _"Now, help me sneak up on the pig any way you
        want to!"_
      courseC_maze_programming9_2019: _"Now, help me sneak up on the pig any way you
        want to!"_
      courseC_maze_programming_challenge1: 'The pig is hiding, and the goal is to
        find it. '
      courseC_maze_programming_challenge1_2018: 'The pig is hiding, and the goal is
        to find it. '
      courseC_maze_programming_challenge1_2019: 'The pig is hiding, and the goal is
        to find it. '
      courseC_maze_programming_challenge2: Sometimes there is more than one way to
        solve the same problem. Sometimes it's faster to go backwards than it is to
        go forwards!
      courseC_maze_programming_challenge2_2018: Sometimes there is more than one way
        to solve the same problem. Sometimes it's faster to go backwards than it is
        to go forwards!
      courseC_maze_programming_challenge2_2019: Sometimes there is more than one way
        to solve the same problem. Sometimes it's faster to go backwards than it is
        to go forwards!
      courseC_starWars_loops1: BB-8 will pick up any metal scraps along the path where
        he moves. Use 5 of the same block to get BB-8 to pick up all of the scrap
        metal in the play area.
      courseC_starWars_loops10: You are doing great! Keep it up!
      courseC_starWars_loops10_2018: You are doing great! Keep it up!
      courseC_starWars_loops10_2019: You are doing great! Keep it up!
      courseC_starWars_loops10_predict2: You are doing great! Keep it up!
      courseC_starWars_loops10_predict2_2018: You are doing great! Keep it up!
      courseC_starWars_loops10_predict2_2019: You are doing great! Keep it up!
      courseC_starWars_loops11: You are almost there! This time, choose any path you
        like!
      courseC_starWars_loops11_2018: You are almost there! This time, choose any path
        you like!
      courseC_starWars_loops11_2019: You are almost there! This time, choose any path
        you like!
      courseC_starWars_loops1_2018: BB-8 will pick up any metal scraps along the path
        where he moves. Use 5 of the same block to get BB-8 to pick up all of the
        scrap metal in the play area.
      courseC_starWars_loops1_2019: BB-8 will pick up any metal scraps along the path
        where he moves. Use 5 of the same block to get BB-8 to pick up all of the
        scrap metal in the play area.
      courseC_starWars_loops1_predict1: BB-8 will pick up any metal scraps along the
        path where he moves. Use 5 of the same block to get BB-8 to pick up all of
        the scrap metal in the play area.
      courseC_starWars_loops1_predict1_2018: BB-8 will pick up any metal scraps along
        the path where he moves. Use 5 of the same block to get BB-8 to pick up all
        of the scrap metal in the play area.
      courseC_starWars_loops1_predict1_2019: BB-8 will pick up any metal scraps along
        the path where he moves. Use 5 of the same block to get BB-8 to pick up all
        of the scrap metal in the play area.
      courseC_starWars_loops2: To get all the scrap metal, try creating a loop that
        uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_2018: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_2019: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_copy: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops4: In this puzzle, two `repeat` loops will help you get
        BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops4_2018: In this puzzle, two `repeat` loops will help you
        get BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops4_2019: In this puzzle, two `repeat` loops will help you
        get BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops4_copy: In this puzzle, two `repeat` loops will help you
        get BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops5: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops5_2018: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops5_2019: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops5_copy: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops6: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_2018: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_2019: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_copy: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops7: Can you try to get all the scrap metal using just one
        loop? Try programming it all out then finding the repeating code to put in
        a loop.
      courseC_starWars_loops7_2018: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops7_2019: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops7_copy: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops9: Use what you have learned to pick up all of the scrap
        metal!
      courseC_starWars_loops9_2018: Use what you have learned to pick up all of the
        scrap metal!
      courseC_starWars_loops9_2019: Use what you have learned to pick up all of the
        scrap metal!
      courseD_artist_1_2018: 'Draw a hexagon with **50** pixel long sides.  '
      courseD_artist_1_2018_2019: 'Draw a hexagon with **50** pixel long sides.  '
      courseD_artist_2_2018: Now, turn right by **60** degrees, then draw a straight
        line **150** pixels long and jump back to the center of the play area.
      courseD_artist_2_2018_2019: Now, turn right by **60** degrees, then draw a straight
        line **150** pixels long and jump back to the center of the play area.
      courseD_artist_3_2018: 'Nest all of the code inside of another `repeat` loop
        and run it a total of **6** times. '
      courseD_artist_3_2018_2019: 'Nest all of the code inside of another `repeat`
        loop and run it a total of **6** times. '
      courseD_artist_4_2018: Add a tiny shape to the end of your line!
      courseD_artist_4_2018_2019: Add a tiny shape to the end of your line!
      courseD_artist_5_2018: Play with the snowflakes!
      courseD_artist_5_2018_2019: Play with the snowflakes!
      courseD_artist_6_2018: Try changing your long 150 pixel line into 6 short lines
        of **25** pixels, with little turns at the end.
      courseD_artist_6_2018_2019: Try changing your long 150 pixel line into 6 short
        lines of **25** pixels, with little turns at the end.
      courseD_artist_binary1: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는 0
        으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\\r\n\\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면,
        그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을
        그리도록 해보세요."
      courseD_artist_binary1_2018: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는
        0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\\r\n\\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면,
        그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을
        그리도록 해보세요."
      courseD_artist_binary1_2019: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는
        0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\\r\n\\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면,
        그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을
        그리도록 해보세요."
      courseD_artist_binary2: Run this code to see how the artist uses binary to draw
        this pattern.
      courseD_artist_binary2_2018: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_artist_binary2_2019: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_artist_binary3: Which of the binary strings below could you loop 8 times
        to draw this image?
      courseD_artist_binary3_2018: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_artist_binary3_2019: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_artist_binary4: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      courseD_artist_binary4_2018: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      courseD_artist_binary4_2019: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      courseD_artist_binary5: "Each binary string below represents one row of this
        picture. \n\nCan you rearrange them so it draws a smiley face instead of a
        frown?"
      courseD_artist_binary5_2018: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_artist_binary5_2019: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_artist_binary6: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것 일까요?
      courseD_artist_binary6_2018: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것
        일까요?
      courseD_artist_binary6_2019: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것
        일까요?
      courseD_artist_binary7: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      courseD_artist_binary7_2018: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      courseD_artist_binary7_2019: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      courseD_artist_binary8: Finish the code to create this drawing.
      courseD_artist_binary8_2018: Finish the code to create this drawing.
      courseD_artist_binary8_2019: Finish the code to create this drawing.
      courseD_artist_binary8_predict1: Finish the code to create this drawing.
      courseD_artist_binary8_predict1_2018: Finish the code to create this drawing.
      courseD_artist_binary8_predict1_2019: Finish the code to create this drawing.
      courseD_artist_binaryFP: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binaryFP8: "**Free Play:**  Draw whatever you want in binary! "
      courseD_artist_binaryFP_2018: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binaryFP_2019: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binary_challenge1_2018: You can only use each binary value (0
        or 1) once each in this puzzle. Try using nested loops to complete this drawing.
      courseD_artist_binary_challenge1_2019: You can only use each binary value (0
        or 1) once each in this puzzle. Try using nested loops to complete this drawing.
      courseD_artist_binary_challenge2_2018: Are you persistent enough to restore
        this logo back to normal?
      courseD_artist_binary_challenge2_2019: Are you persistent enough to restore
        this logo back to normal?
      courseD_artist_nestedLoops1: |-
        이번 단계를 시작하기 위해 삼각형을 그리세요.
        (각각의 변은 100픽셀이고, 매번 바깥으로 120도를 돌아야 합니다.)
      courseD_artist_nestedLoops10: Take the squares from before, but this time only
        make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops10_2018: Take the squares from before, but this time
        only make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops10_2019: Take the squares from before, but this time
        only make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops1_2018: |-
        이번 단계를 시작하기 위해 삼각형을 그리세요.
        (각각의 변은 100픽셀이고, 매번 바깥으로 120도를 돌아야 합니다.)
      courseD_artist_nestedLoops1_2019: |-
        이번 단계를 시작하기 위해 삼각형을 그리세요.
        (각각의 변은 100픽셀이고, 매번 바깥으로 120도를 돌아야 합니다.)
      courseD_artist_nestedLoops1a: '이번에는 삼각형을 6번 반복해서 그려보세요. '
      courseD_artist_nestedLoops1a_2018: '이번에는 삼각형을 6번 반복해서 그려보세요. '
      courseD_artist_nestedLoops1a_2019: '이번에는 삼각형을 6번 반복해서 그려보세요. '
      courseD_artist_nestedLoops2: 이번에는 가능한 한 가장 적은 개수의 블록을 사용해서 문제를 해결해보세요.
      courseD_artist_nestedLoops2_2018: 이번에는 가능한 한 가장 적은 개수의 블록을 사용해서 문제를 해결해보세요.
      courseD_artist_nestedLoops2_2019: 이번에는 가능한 한 가장 적은 개수의 블록을 사용해서 문제를 해결해보세요.
      courseD_artist_nestedLoops3: |-
        건물의 창문을 그리기 위해 새로운 기술을 사용하세요.

        창문은 한 변의 길이가 20픽셀인 정사각형이고, 각 창문은 20픽셀씩 떨어져 있습니다.
      courseD_artist_nestedLoops3_2018: |-
        건물의 창문을 그리기 위해 새로운 기술을 사용하세요.

        창문은 한 변의 길이가 20픽셀인 정사각형이고, 각 창문은 20픽셀씩 떨어져 있습니다.
      courseD_artist_nestedLoops3_2019: |-
        건물의 창문을 그리기 위해 새로운 기술을 사용하세요.

        창문은 한 변의 길이가 20픽셀인 정사각형이고, 각 창문은 20픽셀씩 떨어져 있습니다.
      courseD_artist_nestedLoops4: 잘했어요! 원으로 똑같은 일을 해보세요.
      courseD_artist_nestedLoops4_2018: 잘했어요! 원으로 똑같은 일을 해보세요.
      courseD_artist_nestedLoops4_2019: 잘했어요! 원으로 똑같은 일을 해보세요.
      courseD_artist_nestedLoops5: 만약 원 사이에서 90도 돌면 어떻게 될까요?
      courseD_artist_nestedLoops5_2018: 만약 원 사이에서 90도 돌면 어떻게 될까요?
      courseD_artist_nestedLoops5_2019: 만약 원 사이에서 90도 돌면 어떻게 될까요?
      courseD_artist_nestedLoops7: 이 그림을 그리기 위해서 지금까지 배운 것들을 사용해보세요.
      courseD_artist_nestedLoops7_2018: 이 그림을 그리기 위해서 지금까지 배운 것들을 사용해보세요.
      courseD_artist_nestedLoops7_2019: 이 그림을 그리기 위해서 지금까지 배운 것들을 사용해보세요.
      courseD_artist_nestedLoops8: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops8_2018: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops8_2019: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops9: "**Challenge:** Can you figure out how to make
        a picture like this?"
      courseD_artist_nestedLoops9_2018: "**Challenge:** Can you figure out how to
        make a picture like this?"
      courseD_artist_nestedLoops9_2019: "**Challenge:** Can you figure out how to
        make a picture like this?"
      courseD_artist_nestedLoops9_predict1: "**Challenge:** Can you figure out how
        to make a picture like this?"
      courseD_artist_nestedLoops9_predict1_2018: "**Challenge:** Can you figure out
        how to make a picture like this?"
      courseD_artist_nestedLoops9_predict1_2019: "**Challenge:** Can you figure out
        how to make a picture like this?"
      courseD_artist_nestedLoopsFP: 이제 당신 차례입니다. 지금까지 배운 것들을 이용해 좋아하는 것을 그려보세요!
      courseD_artist_nestedLoopsFP_2018: 이제 당신 차례입니다. 지금까지 배운 것들을 이용해 좋아하는 것을 그려보세요!
      courseD_artist_nestedLoopsFP_2019: 이제 당신 차례입니다. 지금까지 배운 것들을 이용해 좋아하는 것을 그려보세요!
      courseD_artist_nestedLoops_challenge1: Can you figure out how to make a picture
        like this?
      courseD_artist_nestedLoops_challenge1_2018: Can you figure out how to make a
        picture like this?
      courseD_artist_nestedLoops_challenge1_2019: Can you figure out how to make a
        picture like this?
      courseD_artist_nestedLoops_challenge2: Fix the code to make this picture!
      courseD_artist_nestedLoops_challenge2_2018: Fix the code to make this picture!
      courseD_artist_nestedLoops_challenge2_2019: Fix the code to make this picture!
      courseD_artist_project1: 'Draw a small shape, between **20 and 50** pixels wide.  It
        can be any shape that you like.  '
      courseD_artist_project1_2018: 'Draw a small shape, between **20 and 50** pixels
        wide.  It can be any shape that you like.  '
      courseD_artist_project1_2019: 'Draw a small shape, between **20 and 50** pixels
        wide.  It can be any shape that you like.  '
      courseD_artist_project1a: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project1a_2018: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project1a_2019: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project2: Now take your shape and draw two or three in a row!
      courseD_artist_project2_2018: Now take your shape and draw two or three in a
        row!
      courseD_artist_project2_2019: Now take your shape and draw two or three in a
        row!
      courseD_artist_project2a: Now, turn around 180 degrees and draw the stair pattern
        again!
      courseD_artist_project2a_2018: Now, turn around 180 degrees and draw the stair
        pattern again!
      courseD_artist_project2a_2019: Now, turn around 180 degrees and draw the stair
        pattern again!
      courseD_artist_project3: Let's spin that line of shapes around!
      courseD_artist_project3_2018: Let's spin that line of shapes around!
      courseD_artist_project3_2019: Let's spin that line of shapes around!
      courseD_artist_project3a: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project3a_2018: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project3a_2019: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project4: Time to layer those shapes!
      courseD_artist_project4_2018: Time to layer those shapes!
      courseD_artist_project4_2019: Time to layer those shapes!
      courseD_artist_project4a: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project4a_2018: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project4a_2019: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project5: Play with the snowflakes!
      courseD_artist_project5_2018: Play with the snowflakes!
      courseD_artist_project5_2019: Play with the snowflakes!
      courseD_artist_ramp11: Now make a square using Artist!
      courseD_artist_ramp12: Use what you've learned to draw this triangle inside
        of a square.
      courseD_autorun_binary2_2019: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_autorun_binary3_2019: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_autorun_binary4_2019: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      courseD_autorun_binary5_2019: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_autorun_binary6_2019: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것
        일까요?
      courseD_autorun_binary7_2019: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      courseD_autorun_binary8_2019: Finish the code to create this drawing.
      courseD_autorun_binary8_predict1_2019: Finish the code to create this drawing.
      courseD_bee_conditionals10: Collect all of the nectar and make all of the honey.
      courseD_bee_conditionals10_2018: Collect all of the nectar and make all of the
        honey.
      courseD_bee_conditionals10_2019: Collect all of the nectar and make all of the
        honey.
      courseD_bee_conditionals1_predict1: Check to see if there's a flower under the
        cloud. If there's a flower, get nectar.
      courseD_bee_conditionals1_predict1_2018: Check to see if there's a flower under
        the cloud. If there's a flower, get nectar.
      courseD_bee_conditionals1_predict1_2019: Check to see if there's a flower under
        the cloud. If there's a flower, get nectar.
      courseD_bee_conditionals1_predict1_copy: Check to see if there's a flower under
        the cloud. If there's a flower, get nectar.
      courseD_bee_conditionals2: 'Check underneath every cloud to see if it is hiding
        a flower before you get nectar.  '
      courseD_bee_conditionals2_2018: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals2_2019: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals2_copy: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals3: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_2018: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_2019: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_copy: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals4: Get all of the nectar using as few blocks as possible.
      courseD_bee_conditionals4_2018: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals4_2019: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals4_copy: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals5: Collect all of the nectar using as few blocks as
        possible
      courseD_bee_conditionals5_2018: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals5_2019: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals5_copy: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals6: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals6_2018: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals6_2019: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals7: Use the `if/else` block to collect nectar at flowers
        and make honey at honeycomb.
      courseD_bee_conditionals7_2018: Use the `if/else` block to collect nectar at
        flowers and make honey at honeycomb.
      courseD_bee_conditionals7_2019: Use the `if/else` block to collect nectar at
        flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2: Use the `if/else` block to collect nectar
        at flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2_2018: Use the `if/else` block to collect
        nectar at flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2_2019: Use the `if/else` block to collect
        nectar at flowers and make honey at honeycomb.
      courseD_bee_conditionals8: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseD_bee_conditionals8_2018: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseD_bee_conditionals8_2019: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseD_bee_conditionals9: Collect all of the nectar or make all the honey.
      courseD_bee_conditionals9_2018: Collect all of the nectar or make all the honey.
      courseD_bee_conditionals9_2019: Collect all of the nectar or make all the honey.
      courseD_bee_conditionals_challenge1: Collect all the nectar and make all the
        honey.
      courseD_bee_conditionals_challenge1_2018: Collect all the nectar and make all
        the honey.
      courseD_bee_conditionals_challenge1_2019: Collect all the nectar and make all
        the honey.
      courseD_bee_conditionals_challenge2: Collect all of the nectar and make all
        the honey.
      courseD_bee_conditionals_challenge2_2018: Collect all of the nectar and make
        all the honey.
      courseD_bee_conditionals_challenge2_2019: Collect all of the nectar and make
        all the honey.
      courseD_bee_debugging_challenge1: Watch how the bees gets the nectar. Can you
        use the same kind of pattern to help the bee make all of the honey?
      courseD_bee_debugging_challenge1a: Watch how the bee gets the nectar. Use the
        same pattern to help the bee make all the honey.
      courseD_bee_nestedLoops1: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1_2018: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1_2019: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1a: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1a_2018: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1a_2019: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops2: This time, help the bee collect all of the nectar
        using as few blocks as possible.
      courseD_bee_nestedLoops2_2018: This time, help the bee collect all of the nectar
        using as few blocks as possible.
      courseD_bee_nestedLoops2_2019: This time, help the bee collect all of the nectar
        using as few blocks as possible.
      courseD_bee_nestedLoops2_predict1: This time, help the bee collect all of the
        nectar using as few blocks as possible.
      courseD_bee_nestedLoops2_predict1_2018: This time, help the bee collect all
        of the nectar using as few blocks as possible.
      courseD_bee_nestedLoops2_predict1_2019: This time, help the bee collect all
        of the nectar using as few blocks as possible.
      courseD_bee_nestedLoops7: 'Challenge: Figure out how to get all of the nectar
        using only the blocks available.'
      courseD_bee_nestedLoops7_2018: 'Challenge: Figure out how to get all of the
        nectar using only the blocks available.'
      courseD_bee_nestedLoops7_2019: 'Challenge: Figure out how to get all of the
        nectar using only the blocks available.'
      courseD_bee_nestedLoops8: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩
        반복을 사용하면 됩니다. "
      courseD_bee_nestedLoops8_2018: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩
        반복을 사용하면 됩니다. "
      courseD_bee_nestedLoops8_2019: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩
        반복을 사용하면 됩니다. "
      courseD_bee_nestedLoops9: Make all of the honey.
      courseD_bee_nestedLoops9_2018: Make all of the honey.
      courseD_bee_nestedLoops9_2019: Make all of the honey.
      courseD_bee_nestedLoops9_predict2: Make all of the honey.
      courseD_bee_nestedLoops9_predict2_2018: Make all of the honey.
      courseD_bee_nestedLoops9_predict2_2019: Make all of the honey.
      courseD_bounce_events10s_2018: 'Attach the `score point` block to the `when
        ball in goal` event and the `score opponent point` block to the `when ball
        misses hand` event to make a game. '
      courseD_bounce_events10s_2019: 'Attach the `score point` block to the `when
        ball in goal` event and the `score opponent point` block to the `when ball
        misses hand` event to make a game. '
      courseD_bounce_events11s_2018: 'Attach the `throw new ball` block in all of
        the places where the game needs a new ball. '
      courseD_bounce_events11s_2019: 'Attach the `throw new ball` block in all of
        the places where the game needs a new ball. '
      courseD_bounce_events12s_2018: Make this game your own. You can change all the
        visuals and the rules. When you're done, click "Finish" to let friends try
        your game on their phones.
      courseD_bounce_events12s_2019: Make this game your own. You can change all the
        visuals and the rules. When you're done, click "Finish" to let friends try
        your game on their phones.
      courseD_bounce_events1s_2018: Attach a block to the "when left arrow" block
        and press "Run" to move the player to the net.
      courseD_bounce_events1s_2019: Attach a block to the "when left arrow" block
        and press "Run" to move the player to the net.
      courseD_bounce_events2s_2018: Now, attach a block to the `when right event`
        so that the hand can get to both baskets.
      courseD_bounce_events2s_2019: Now, attach a block to the `when right event`
        so that the hand can get to both baskets.
      courseD_bounce_events5s_2018: Attach a block to the `when ball hits hand` event
        to ensure the ball reaches the basket.
      courseD_bounce_events5s_2019: Attach a block to the `when ball hits hand` event
        to ensure the ball reaches the basket.
      courseD_bounce_events6s_2018: Attach code to make the ball bounce when it hits
        the wall so you can solve this puzzle.
      courseD_bounce_events6s_2019: Attach code to make the ball bounce when it hits
        the wall so you can solve this puzzle.
      courseD_bounce_events7s_2018: Attach sound blocks to make the net swish when
        you hit the basket and have the whistle blow when the ball misses your hand.
        Bounce the ball until it hits the finish target.
      courseD_bounce_events7s_2019: Attach sound blocks to make the net swish when
        you hit the basket and have the whistle blow when the ball misses your hand.
        Bounce the ball until it hits the finish target.
      courseD_collector_debugging1: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging1a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging1a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging2: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging2a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging2a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging3: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging3a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging3a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging4: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging4a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging4a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging5: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging5a_2018: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging5a_2019: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging6: 'Challenge: Use your debugging skills to fix the
        errors and collect all of the treasure.'
      courseD_collector_debugging6a_2018: 'Challenge: Use the code in the work area
        to get at least **6** pieces of treasure!'
      courseD_collector_debugging6a_2019: 'Challenge: Use the code in the work area
        to get at least **6** pieces of treasure!'
      courseD_collector_debugging_challenge2: Are you an expert at nested loops? Use
        what you have learned so far to collect all the treasure!
      courseD_collector_nested_loops_challenge2: Help the collector reach at least
        two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2_2018: Help the collector reach at
        least two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2_2019: Help the collector reach at
        least two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2a: Help Laurel collect at least two
        piles of treasure.
      courseD_collector_ramp10: Help Laurel collect all of the treasure.
      courseD_collector_ramp8: Help Laurel collect all of the treasure.
      courseD_collector_ramp9: Help Laurel collect all of the treasure.
      courseD_farmer_condLoops1: Use conditionals to make sure that you pick corn
        only when it's there.
      courseD_farmer_condLoops1_2018: Use conditionals to make sure that you pick
        corn only when it's there.
      courseD_farmer_condLoops1_2019: Use conditionals to make sure that you pick
        corn only when it's there.
      courseD_farmer_condLoops2: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops2_2018: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops2_2019: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops3: _"Corn, lettuce, AND pumpkins! Help me harvest them
        all."_
      courseD_farmer_condLoops3_2018: _"Corn, lettuce, AND pumpkins! Help me harvest
        them all."_
      courseD_farmer_condLoops3_2019: _"Corn, lettuce, AND pumpkins! Help me harvest
        them all."_
      courseD_farmer_condLoops4: Help the harvester pick all of the lettuce in each
        cluster before moving on to the next bunch.
      courseD_farmer_condLoops4_2018: Help the harvester pick all of the lettuce in
        each cluster before moving on to the next bunch.
      courseD_farmer_condLoops4_2019: Help the harvester pick all of the lettuce in
        each cluster before moving on to the next bunch.
      courseD_farmer_condLoops5: Collect all of the corn and lettuce, then grab the
        pumpkin at the end.
      courseD_farmer_condLoops5_2018: Collect all of the corn and lettuce, then grab
        the pumpkin at the end.
      courseD_farmer_condLoops5_2019: Collect all of the corn and lettuce, then grab
        the pumpkin at the end.
      courseD_farmer_condLoops6: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops6_2018: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops6_2019: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops7: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops7_2018: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops7_2019: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops8: Collect all of the corn and lettuce, then pick the
        pumpkin.
      courseD_farmer_condLoops8_2018: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops8_2019: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9: Collect all of the corn and lettuce, then pick the
        pumpkin.
      courseD_farmer_condLoops9_2018: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9_2019: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9_predict1: Collect all of the corn and lettuce, then
        pick the pumpkin.
      courseD_farmer_condLoops9_predict1_2018: Collect all of the corn and lettuce,
        then pick the pumpkin.
      courseD_farmer_condLoops9_predict1_2019: Collect all of the corn and lettuce,
        then pick the pumpkin.
      courseD_farmer_condLoops_challenge1: Collect everything to complete the level.
        Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge1_2018: Collect everything to complete the
        level. Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge1_2019: Collect everything to complete the
        level. Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge2: Collect everything to complete the level.
      courseD_farmer_condLoops_challenge2_2018: Collect everything to complete the
        level.
      courseD_farmer_condLoops_challenge2_2019: Collect everything to complete the
        level.
      courseD_farmer_until_challenge2: Use If/Else blocks to follow the curvy path.
        At each corner, use the `remove 1` command in a loop to clear the piles.
      courseD_farmer_while1: Move to the pile of dirt and use the `remove` block to
        remove it.
      courseD_farmer_while10: 'Flatten all of these piles using as few blocks as possible. '
      courseD_farmer_while10_2018: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_2019: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_predict2: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_predict2_2018: 'Flatten all of these piles using as few
        blocks as possible. '
      courseD_farmer_while10_predict2_2019: 'Flatten all of these piles using as few
        blocks as possible. '
      courseD_farmer_while1_2018: Move to the pile of dirt and use the `remove` block
        to remove it.
      courseD_farmer_while1_2019: Move to the pile of dirt and use the `remove` block
        to remove it.
      courseD_farmer_while2: Move to the hole and fill it with six shovelfuls of dirt,
        using the `fill` block.
      courseD_farmer_while2_2018: Move to the hole and fill it with six shovelfuls
        of dirt, using the `fill` block.
      courseD_farmer_while2_2019: Move to the hole and fill it with six shovelfuls
        of dirt, using the `fill` block.
      courseD_farmer_while3: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while3_2018: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while3_2019: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while4: Help the farmer remove this entire pile using a `while`
        loop.
      courseD_farmer_while4_2018: Help the farmer remove this entire pile using a
        `while` loop.
      courseD_farmer_while4_2019: Help the farmer remove this entire pile using a
        `while` loop.
      courseD_farmer_while4_predict1: Help the farmer remove this entire pile using
        a `while` loop.
      courseD_farmer_while4_predict1_2018: Help the farmer remove this entire pile
        using a `while` loop.
      courseD_farmer_while4_predict1_2019: Help the farmer remove this entire pile
        using a `while` loop.
      courseD_farmer_while5: 'Help me remove all of this dirt. '
      courseD_farmer_while5_2018: 'Help me remove all of this dirt. '
      courseD_farmer_while5_2019: 'Help me remove all of this dirt. '
      courseD_farmer_while6: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while6_2018: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while6_2019: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while7: Fill in the hole at the end of each of these paths.
      courseD_farmer_while7_2018: Fill in the hole at the end of each of these paths.
      courseD_farmer_while7_2019: Fill in the hole at the end of each of these paths.
      courseD_farmer_while8: 'Challenge: Fill all of these holes using as few blocks
        as possible. '
      courseD_farmer_while8_2018: 'Challenge: Fill all of these holes using as few
        blocks as possible. '
      courseD_farmer_while8_2019: 'Challenge: Fill all of these holes using as few
        blocks as possible. '
      courseD_farmer_while9: 'Flatten all of these piles using as few blocks as possible. '
      courseD_farmer_while9_2018: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while9_2019: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while_challenge1: Fill all of the holes and remove all of the
        piles.
      courseD_farmer_while_challenge1_2018: Fill all of the holes and remove all of
        the piles.
      courseD_farmer_while_challenge1_2019: Fill all of the holes and remove all of
        the piles.
      courseD_farmer_while_challenge2: Fill all of the holes and remove all of the
        piles.
      courseD_harvester_nested_loops_challenge1: '"I need some help on the farm! Help
        me harvest this corn using only the blocks in your toolbox."'
      courseD_harvester_nested_loops_challenge1_2018: '"I need some help on the farm!
        Help me harvest this corn using only the blocks in your toolbox."'
      courseD_harvester_nested_loops_challenge1_2019: '"I need some help on the farm!
        Help me harvest this corn using only the blocks in your toolbox."'
      courseD_iceage_loops1: Help Scrat across the ice to get to the acorn!
      courseD_iceage_loops10: Help Scrat get all the way over to the acorn!
      courseD_iceage_loops10_2019: Help Scrat get all the way over to the acorn!
      courseD_iceage_loops11: Help Scrat get to the acorn!
      courseD_iceage_loops11_2019: Help Scrat get to the acorn!
      courseD_iceage_loops12: Get to the acorn any way you can!
      courseD_iceage_loops12_2019: Get to the acorn any way you can!
      courseD_iceage_loops1_2019: Help Scrat across the ice to get to the acorn!
      courseD_iceage_loops2: Use a `turn left` block to get to the acorn!
      courseD_iceage_loops2_2019: Use a `turn left` block to get to the acorn!
      courseD_iceage_loops3: Can you get to the acorn with just one `move forward`
        block?
      courseD_iceage_loops3_2019: Can you get to the acorn with just one `move forward`
        block?
      courseD_iceage_loops4: Add one more block to get Scrat all the way to the acorn!
      courseD_iceage_loops4_2019: Add one more block to get Scrat all the way to the
        acorn!
      courseD_iceage_loops6: Can you add a loop to get to the acorn?
      courseD_iceage_loops6_2019: Can you add a loop to get to the acorn?
      courseD_iceage_loops7: 'Scrat really wants that acorn! '
      courseD_iceage_loops7_2019: 'Scrat really wants that acorn! '
      courseD_iceage_loops8: 'Can you fix this code? '
      courseD_iceage_loops8_2019: 'Can you fix this code? '
      courseD_iceage_loops9: The acorn is so far away! Can you use loops to help Scrat
        get there?
      courseD_iceage_loops9_2019: The acorn is so far away! Can you use loops to help
        Scrat get there?
      courseD_maze_intro4_2019: Help Red reach the pig.
      courseD_maze_intro5a_2019: Count the spaces on the grid carefully!
      courseD_maze_intro5c_2019: Watch out for TNT! Help Red get to the pig.
      courseD_maze_nestedLoops3: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops3_2018: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops3_2019: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops4: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복 실행
        구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseD_maze_nestedLoops4_2018: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복
        실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseD_maze_nestedLoops4_2019: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복
        실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseD_maze_nestedLoops5: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops5_2018: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops5_2019: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops6: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\\r\n최소한의 반복 실행 구조를
        사용해서 해바라기로 이동시켜주세요."
      courseD_maze_nestedLoops6_2018: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\\r\n최소한의 반복
        실행 구조를 사용해서 해바라기로 이동시켜주세요."
      courseD_maze_nestedLoops6_2019: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\\r\n최소한의 반복
        실행 구조를 사용해서 해바라기로 이동시켜주세요."
      courseD_maze_ramp1: For this puzzle, snap all of the blocks together and click
        "Run" to watch it go!
      courseD_maze_ramp1_2018: For this puzzle, snap all of the blocks together and
        click "Run" to watch it go!
      courseD_maze_ramp1_2019: For this puzzle, snap all of the blocks together and
        click "Run" to watch it go!
      courseD_maze_ramp2: Drag an extra `move forward` block out of the toolbox, then
        attach all blocks to `when run` to finish your code.
      courseD_maze_ramp2_2018: Drag an extra `move forward` block out of the toolbox,
        then attach all blocks to `when run` to finish your code.
      courseD_maze_ramp2_2019: Drag an extra `move forward` block out of the toolbox,
        then attach all blocks to `when run` to finish your code.
      courseD_maze_ramp3: There is one extra block that is going to cause the bird
        to crash. Throw it away by dragging it back to the toolbox.
      courseD_maze_ramp3_2018: There is one extra block that is going to cause the
        bird to crash. Throw it away by dragging it back to the toolbox.
      courseD_maze_ramp3_2019: Throw away the extra "move forward" block.
      courseD_maze_ramp4: Avoid TNT or feathers will fly!
      courseD_maze_ramp4_2018: Avoid TNT or feathers will fly!
      courseD_maze_ramp4_2019: Help Scrat reach the acorn.
      courseD_maze_ramp5: Avoid the TNT.
      courseD_maze_ramp5_2018: Avoid the TNT.
      courseD_maze_ramp5_2019: Avoid the TNT.
      courseD_maze_ramp5a: Pay attention to the sequence and see if you can figure
        out how to get to that pig!
      courseD_maze_ramp5a_2018: Pay attention to the sequence and see if you can figure
        out how to get to that pig!
      courseD_maze_ramp5a_2019: Count the spaces on the grid carefully!
      courseD_maze_ramp5b: Navigate this maze to help the bird find the pig!
      courseD_maze_ramp5b_2018: Navigate this maze to help the bird find the pig!
      courseD_maze_ramp5b_2019: Navigate this maze to help the bird find the pig!
      courseD_maze_ramp5c: Help the bird get to the pig.
      courseD_maze_ramp5c_2018: Help the bird get to the pig.
      courseD_maze_ramp5c_2019: Watch out for cracking ice! Help Scrat get to the
        acorn.
      courseD_maze_ramp5d: Get the bird to the pig.
      courseD_maze_ramp5d_2018: Get the bird to the pig.
      courseD_maze_ramp5d_2019: Get the bird to the pig.
      courseD_maze_ramp6: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면, 화가 날 것 같아!
      courseD_maze_ramp7: Get the bird to the pig!
      courseD_maze_until1: 화난 새를 돼지에게 이동시켜주세요!
      courseD_maze_until10: Help the zombie get to the sunflower.
      courseD_maze_until10_2018: Help the zombie get to the sunflower.
      courseD_maze_until10_2019: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2_2018: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2_2019: Help the zombie get to the sunflower.
      courseD_maze_until1_2018: 화난 새를 돼지에게 이동시켜주세요!
      courseD_maze_until1_2019: 화난 새를 돼지에게 이동시켜주세요!
      courseD_maze_until3: Get the bird to the pig.
      courseD_maze_until3_2018: Get the bird to the pig.
      courseD_maze_until3_2019: Get the bird to the pig.
      courseD_maze_until4: Can you get the zombie to the sunflower using only the
        blocks that are available?
      courseD_maze_until4_2018: Can you get the zombie to the sunflower using only
        the blocks that are available?
      courseD_maze_until4_2019: Can you get the zombie to the sunflower using only
        the blocks that are available?
      courseD_maze_until5: Use the `if` block to help the zombie decide when to turn,
        then get the zombie to the sunflower.
      courseD_maze_until5_2018: Use the `if` block to help the zombie decide when
        to turn, then get the zombie to the sunflower.
      courseD_maze_until5_2019: Use the `if` block to help the zombie decide when
        to turn, then get the zombie to the sunflower.
      courseD_maze_until6: Help the zombie get to the sunflower.
      courseD_maze_until6_2018: Help the zombie get to the sunflower.
      courseD_maze_until6_2019: Help the zombie get to the sunflower.
      courseD_maze_until7: Help the zombie get to the sunflower.
      courseD_maze_until7_2018: Help the zombie get to the sunflower.
      courseD_maze_until7_2019: Help the zombie get to the sunflower.
      courseD_maze_until8: Help the zombie get to the sunflower.
      courseD_maze_until9: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until9_2018: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until9_2019: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until_challenge1: No hints, just challenge. Get the zombie to the
        sunflower.
      courseD_playLab_cond1: Get Pegleg to the flags to solve this puzzle.
      courseD_playLab_cond1_2018: Get Pegleg to the flags to solve this puzzle.
      courseD_playLab_cond2: 'Give Pegleg a point every time he makes it to the dragon. '
      courseD_playLab_cond2_2018: 'Give Pegleg a point every time he makes it to the
        dragon. '
      courseD_playLab_cond3: 'Make the dragon change between random emotions every
        second.  '
      courseD_playLab_cond3_2018: 'Make the dragon change between random emotions
        every second.  '
      courseD_playLab_cond3a: Make it so when Pegleg gets to the dragon, he gets 2
        points if the dragon is happy and 1 otherwise.
      courseD_playLab_cond3a_2018: Make it so when Pegleg gets to the dragon, he gets
        2 points if the dragon is happy and 1 otherwise.
      courseD_playLab_cond4: Add some code so that the ninja (actor 3) starts chasing
        Pegleg as soon as the game begins.  End the game as a loss if the ninja catches
        him.
      courseD_playLab_cond4_2018: Add some code so that the ninja (actor 3) starts
        chasing Pegleg as soon as the game begins.  End the game as a loss if the
        ninja catches him.
      courseD_playLab_cond5: Add a `repeat forever` loop that continuously checks
        if the score is greater than 5, then ends the game as a win when it is.
      courseD_playLab_cond5_2018: Add a `repeat forever` loop that continuously checks
        if the score is greater than 5, then ends the game as a win when it is.
      courseD_playLab_cond6: "1.  Slow the ninja (actor 3) down before you set him
        to chase the pirate.  \n2.  If the pirate is greater than 225 pixels down,
        set the ninja to **flee** the pirate.  Otherwise, set the ninja to **chase**
        the pirate.  "
      courseD_playLab_cond6_2018: "1.  Slow the ninja (actor 3) down before you set
        him to chase the pirate.  \n2.  If the pirate is greater than 225 pixels down,
        set the ninja to **flee** the pirate.  Otherwise, set the ninja to **chase**
        the pirate.  "
      courseD_playLab_cond6a: If the pirate (actor 1) is in the safe zone, wait one
        second, then deduct a point as long as he stays beneath the octopus line.
      courseD_playLab_cond6a_2018: If the pirate (actor 1) is in the safe zone, wait
        one second, then deduct a point as long as he stays beneath the octopus line.
      courseD_playLab_condFP: Now, build your own game to show off to your friends!
      courseD_playLab_condFP_2018: Now, build your own game to show off to your friends!
      courseD_scrat_ramp1: For this puzzle, snap all of the blocks together and click
        "Run" to watch it go!
      courseD_scrat_ramp2: Drag an extra `move forward` block out of the toolbox,
        then attach all blocks to `when run` to finish your code.
      courseD_scrat_ramp3: There is one extra block that is going to cause Scrat to
        crash. Throw it away by dragging it back to the toolbox.
      courseD_scrat_ramp4: Avoid the cracked ice to keep Scrat safe!
      courseD_scrat_ramp5: Avoid the cracked ice.
      courseD_scrat_ramp6: Help Scrat get to the acorn using a loop!
      courseD_scrat_ramp7: Help Scrat get to the acorn!
      courseD_scrat_ramp8: Use what you've learned to get Scrat to the acorn!
      courseE_aboutme_6: 'Keep going! Try adding more features to your poster to make
        it even better. '
      courseE_artist_concept1: 'Recreate this image. '
      courseE_artist_concept1_2018: 'Recreate this image. '
      courseE_artist_concept4: Recreate this drawing.
      courseE_artist_concept4_2018: Recreate this drawing.
      courseE_artist_concept_challenge1: 'Help the artist draw this unique shape. '
      courseE_artist_concept_challenge1_2018: 'Help the artist draw this unique shape. '
      courseE_artist_concept_challenge2: Create five pinwheel designs using the code
        below.
      courseE_artist_concept_challenge2_2018: Create five pinwheel designs using the
        code below.
      courseE_artist_functions1: "\"나 화가. 좀비... 그리기 좋아..!\" \\\r\n\\\r\n사각형 안경을 그릴
        수 있게 도와주세요. \\\r\n\\\r\n안경 알 사이의 다리는 안경 한 변의 길이보다 25 픽셀 만큼 작습니다."
      courseE_artist_functions10: This time, use lines of 8 hexagons with 25 pixel
        sides.
      courseE_artist_functions10_2018: This time, use lines of 8 hexagons with 25
        pixel sides.
      courseE_artist_functions10_2019: This time, use lines of 8 hexagons with 25
        pixel sides.
      courseE_artist_functions1_copy: "\"나 화가. 좀비... 그리기 좋아..!\" \\\r\n\\\r\n사각형 안경을
        그릴 수 있게 도와주세요. \\\r\n\\\r\n안경 알 사이의 다리는 안경 한 변의 길이보다 25 픽셀 만큼 작습니다."
      courseE_artist_functions2: 'This time, use the `draw a square` function to create
        the glasses. '
      courseE_artist_functions2_2018: 'Use the `draw a square` function to create
        the glasses. '
      courseE_artist_functions2_2019: 'Use the `draw a square` function to create
        the glasses. '
      courseE_artist_functions2_copy: 'This time, use the `draw a square` function
        to create the glasses. '
      courseE_artist_functions3: You can make this drawing by adding a repeat block.
      courseE_artist_functions3_2018: Build a function that will create this star.
      courseE_artist_functions3_2019: Build a function that will create this star.
      courseE_artist_functions3_copy: You can make this drawing by adding a repeat
        block.
      courseE_artist_functions4: Now that you can draw a star, try drawing four stars!
      courseE_artist_functions4_copy: Now that you can draw a star, try drawing four
        stars!
      courseE_artist_functions5: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_2018: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_2019: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_copy: Draw only those three stars to finish this puzzle.
      courseE_artist_functions6: Make this window by drawing a square, then turning
        90 degrees before drawing another, and so on.
      courseE_artist_functions7: Try solving this puzzle by creating `draw a window`
        and calling it five times. Watch out for the door!
      courseE_artist_functions7_2018: Try solving this puzzle by creating `draw a
        window` and calling it five times. Watch out for the door!
      courseE_artist_functions7_2019: Try solving this puzzle by creating `draw a
        window` and calling it five times. Watch out for the door!
      courseE_artist_functions8: 'Challenge: Create as many functions as you think
        you need to make this drawing of 50 pixel squares.'
      courseE_artist_functions8_2018: Use everything you've learned so far to recreate
        this design.
      courseE_artist_functions8_2019: Use everything you've learned so far to recreate
        this design.
      courseE_artist_functions8a_2018: Create a function for a single square.
      courseE_artist_functions8a_2019: Create a function for a single square.
      courseE_artist_functions8b_2018: Call the `draw a square` function from inside
        your `draw a line of squares` function to make this even easier!
      courseE_artist_functions8b_2019: Call the `draw a square` function from inside
        your `draw a line of squares` function to make this even easier!
      courseE_artist_functions8c_2018: Add one more function that creates this stack
        of staggered squares.
      courseE_artist_functions8c_2019: Add one more function that creates this stack
        of staggered squares.
      courseE_artist_functions9: Create this image using only the blocks provided.
      courseE_artist_functions9_2018: "**Challenge:** Create this image using only
        the blocks provided."
      courseE_artist_functions9_2019: "**Challenge:** Create this image using only
        the blocks provided."
      courseE_artist_functionsProj_2018: "**Inspiration:** Use what you've learned
        to make whatever you want!"
      courseE_artist_functionsProj_2019: "**Inspiration:** Use what you've learned
        to make whatever you want!"
      courseE_artist_functions_challenge1: Once you define a function, you can call
        it over and over again - whenever and wherever you want! Try this code to
        see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge1_2018: Once you define a function, you can
        call it over and over again - whenever and wherever you want! Try this code
        to see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge1_2019: Once you define a function, you can
        call it over and over again - whenever and wherever you want! Try this code
        to see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      courseE_artist_functions_challenge2_2018: Try this code to see how it works,
        then make the program your own!
      courseE_artist_functions_challenge2_2019: Try this code to see how it works,
        then make the program your own!
      courseE_artist_ramp8: Now make a square using Artist!
      courseE_artist_ramp8_2: Now make a square using Artist!
      courseE_artist_ramp9: Use what you've learned to draw this triangle.
      courseE_artist_ramp9_2: Use what you've learned to draw this triangle.
      courseE_bee_concept1: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      courseE_bee_concept1_2018: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      courseE_bee_concept2: 'Help the bee make all of the honey. '
      courseE_bee_concept2_2018: 'Help the bee make all of the honey. '
      courseE_bee_concept3: Collect all of the nectar using  as few blocks as possible.
      courseE_bee_concept3_2018: Collect all of the nectar using  as few blocks as
        possible.
      courseE_bee_concept4: Uh oh! The bee is not sure if he should collect nectar
        or make honey. Can you help him out?
      courseE_bee_concept4_2018: Uh oh! The bee is not sure if he should collect nectar
        or make honey. Can you help him out?
      courseE_bee_concept5: Help the bee collect the nectar from the flowers?
      courseE_bee_concept5_2018: Help the bee collect the nectar from the flowers?
      courseE_bee_functions1: 각 꽃에서 꽃꿀을 모두 모아주세요.
      courseE_bee_functions10: Solve this puzzle by creating a function that helps
        the bee go get all of the honey before returning back to the main path.
      courseE_bee_functions2: Use the `get 2 nectar` function to collect the nectar
        from each flower.
      courseE_bee_functions3: "함수들은 어떤 작업을 수행하는데 블럭들의 집합이라고 볼 수 있습니다.  \\\r\n\\\r\n\"5번
        모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      courseE_bee_functions4: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는
        함수입니다.  \\\r\n\\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      courseE_bee_functions5: Now write the function to collect nectar from the flowers.
      courseE_bee_functions6: Create a function and call it to collect nectar at each
        flower and make honey at each honeycomb.
      courseE_bee_functions7: Create your own function that goes down a path, gets
        nectar, makes honey, and then returns the bee to the top of the path. Collect
        all the nectar and make all the honey!
      courseE_bee_functions8: Create a function that collects all of the nectar from
        each flower.
      courseE_bee_functions9: Create a function to collect all of the nectar from
        each flower.
      courseE_bee_functions_challenge1: You are on your own for this challenge. This
        could "bee" harder than it looks!
      courseE_bee_functions_challenge2: You are on your own for this challenge. Sweet!
      courseE_farmer_concept1: Can you write a program that fills these holes until
        the ground is even?
      courseE_farmer_concept1_2018: Can you write a program that fills these holes
        until the ground is even?
      courseE_farmer_concept2: Collect all of the pumpkins.
      courseE_farmer_concept2_2018: Collect all of the pumpkins.
      courseE_farmer_concept3: Fill in the hole at the end of each of these paths.
      courseE_farmer_concept3_2018: Fill in the hole at the end of each of these paths.
      courseE_farmer_functions1: Help the harvester get to the pumpkin and pick it.
      courseE_farmer_functions10a1_2018: Use everything that you've learned so far
        to solve this puzzle!
      courseE_farmer_functions10a1_2019: Use everything that you've learned so far
        to solve this puzzle!
      courseE_farmer_functions10b: Use your new function twice to solve this puzzle.
      courseE_farmer_functions13_2018: Solve this puzzle in 23 blocks or less.
      courseE_farmer_functions13_2019: Solve this puzzle in 23 blocks or less.
      courseE_farmer_functions1_2018: Help the harvester get to the pumpkin and pick
        it.
      courseE_farmer_functions1_2019: Help the harvester get to the pumpkin and pick
        it.
      courseE_farmer_functions1a: Now help the harvester pick the corn, lettuce, **and**
        pumpkin.
      courseE_farmer_functions1a_2018: Help the harvester pick all of the corn, then
        the pumpkin.
      courseE_farmer_functions1a_2019: Help the harvester pick all of the corn, then
        the pumpkin.
      courseE_farmer_functions2b: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2b_2018: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2b_2019: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2ba: Help the farmer pick the corn and pumpkins using
        the `corn and pumpkin` function.
      courseE_farmer_functions2ba_2018: Use the functions below to help the farmer
        pick the corn and pumpkins.
      courseE_farmer_functions2ba_2019: Help the farmer pick the corn and pumpkins
        using the `corn and pumpkin` function.
      courseE_farmer_functions3c: Now, fill-in the function yourself by pulling the
        blocks from the code and dropping them into the **function definition**.
      courseE_farmer_functions3c1_2018: This function calls other functions!
      courseE_farmer_functions3c1_2019: This function calls other functions!
      courseE_farmer_functions3c_2018: Try on a longer path.
      courseE_farmer_functions3c_2019: Try on a longer path.
      courseE_farmer_functions4b: Use your new function to solve this puzzle.
      courseE_farmer_functions5c: Your function will come in handy here.
      courseE_farmer_functions6c: What do you need to add this program to check whether
        a sprout is corn or lettuce?
      courseE_farmer_functions7a1_2018: Create a function that sends the harvester
        down a square path to pick a single head of lettuce from the middle of each
        row.
      courseE_farmer_functions7a1_2019: Create a function that sends the harvester
        down a square path to pick a single head of lettuce from the middle of each
        row.
      courseE_farmer_functions7b: Help the harvester find her way down this confusing
        path and to the pumpkin by turning left at the corn and right at the lettuce.
      courseE_farmer_functions8a1_2018: Is your function still helpful?
      courseE_farmer_functions8a1_2019: Is your function still helpful?
      courseE_farmer_functions8b: "**Challenge:** Collect all of the pumpkins using
        the method from the last puzzle. "
      courseE_farmer_functions9a1_2018: Is your function still helpful?
      courseE_farmer_functions9a1_2019: Is your function still helpful?
      courseE_farmer_functions9b: Can you figure out the pattern that you need to
        solve this puzzle?
      courseE_farmer_ramp11a: While there is a pile, remove dirt.
      courseE_farmer_ramp11a_2018: While there is a pile, remove dirt.
      courseE_farmer_ramp11a_2019: While there is a pile, remove dirt.
      courseE_farmer_ramp11b: While there is a pile, remove dirt.
      courseE_farmer_ramp11b_2018: While there is a pile, remove dirt.
      courseE_farmer_ramp11b_2019: While there is a pile, remove dirt.
      courseE_farmer_ramp12_forswap: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12_forswap_2018: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12_forswap_2019: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12b: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12b_2018: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12b_2019: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12c: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12c_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12c_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12d: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12d_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12d_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12e: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12e_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12e_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12f: Move forward until you reach the lettuce, then turn
        left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12f_2018: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12f_2019: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g: Move forward until you reach the lettuce, then turn
        left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g_2018: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g_2019: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_playLab_challenge1: "Something should happen when you get enough points
        or when you run out of points. Add some code to the `win game` and `lose game`
        functions to make the game work the way it should. \nClick the hints for ideas!"
      courseE_playLab_scaffold1: Choose a background and map, and pick an actor to
        be your game's hero.
      courseE_playLab_scaffold2: Use event handlers and actions to make your hero
        move.
      courseE_playLab_scaffold3: Add two or more additional actors to your game and
        make them move.
      courseE_playLab_scaffold4: Find some interesting ways to change the score in
        your game. Get the score to show something other than 0 to continue.
      courseE_playLab_scaffold5: Now spend some time making sure the game works the
        way you want. Include a way to win or lose your game, then play until you
        meet one of those conditions.
      courseE_playLab_scaffold6: You've finished! Now you can play your game or share
        it with your friends and classmates!
      courseE_video_createFunctions: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2_2018: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2_2019: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseF_artist_for1: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for10: 'Free Play: Try using the `counter` variable with other
        drawing elements to make magical images like this one.'
      courseF_artist_for10_2018: 'Free Play: Try using the `counter` variable with
        other drawing elements to make magical images like this one.'
      courseF_artist_for10_2019: 'Free Play: Try using the `counter` variable with
        other drawing elements to make magical images like this one.'
      courseF_artist_for1_2018: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for1_2019: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for2: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for2_2018: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for2_2019: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for3: 'These triangles go from 20 pixel sides to 200 pixel sides,
        and each triangle is 20 pixels larger than the last. '
      courseF_artist_for3_2018: 'These triangles go from 20 pixel sides to 200 pixel
        sides, and each triangle is 20 pixels larger than the last. '
      courseF_artist_for3_2019: 'These triangles go from 20 pixel sides to 200 pixel
        sides, and each triangle is 20 pixels larger than the last. '
      courseF_artist_for4: 'These squares start at 15 pixels long. The largest is
        300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for4_2018: 'These squares start at 15 pixels long. The largest
        is 300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for4_2019: 'These squares start at 15 pixels long. The largest
        is 300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for5: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for5_2018: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for5_2019: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for6: Recreate your code from the last level, but turn 89 degrees
        to create this twisted square spiral.
      courseF_artist_for6_2018: Recreate your code from the last level, but turn 89
        degrees to create this twisted square spiral.
      courseF_artist_for6_2019: Recreate your code from the last level, but turn 89
        degrees to create this twisted square spiral.
      courseF_artist_for7: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      courseF_artist_for7_2018: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      courseF_artist_for7_2019: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      courseF_artist_for8: Take the angle down to 72 degrees to get a spiraled pentagon.
      courseF_artist_for8_2018: Take the angle down to 72 degrees to get a spiraled
        pentagon.
      courseF_artist_for8_2019: Take the angle down to 72 degrees to get a spiraled
        pentagon.
      courseF_artist_for9: "**Inspiration:**  Use the counter inside the `set alpha`
        block to get this faded center."
      courseF_artist_for9_2018: "**Inspiration:**  Use the counter inside the `set
        alpha` block to get this faded center."
      courseF_artist_for9_2019: "**Inspiration:**  Use the counter inside the `set
        alpha` block to get this faded center."
      courseF_artist_for_challenge1: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge1_2018: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge1_2019: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge2: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge2_2018: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge2_2019: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_fwp1: Edit the function 'draw a square' to find bugs.
      courseF_artist_fwp2: Edit the function to accept a parameter called `length`.
      courseF_artist_fwp2_predict1: Edit the function to accept a parameter called
        `length`.
      courseF_artist_fwp3: Create a function called 'draw a square' and use it to
        outline these four boxes using parameters.
      courseF_artist_fwp4: Edit this function to add a parameter for the number of
        sides in your polygon.
      courseF_artist_fwp5: 'Use the function from the last puzzle to draw this series
        of shapes.  '
      courseF_artist_fwp6: 'Challenge: Edit `draw a spiral edge` to use `length` and
        `sides` parameters, then recreate these shapes.'
      courseF_artist_fwp7: Finish off the `draw a spiral edge` function to also ask
        for a minimum length for the center of the spiral.
      courseF_artist_fwp8: Can you figure out how to make this drawing using the function
        that you just created?
      courseF_artist_fwp9: 'Freeplay: Draw something awesome! Play with the pen width
        to see how different your drawings look!'
      courseF_artist_fwp_challenge1: Can you figure out how this program works?
      courseF_artist_fwp_challenge2: Use what you learned in the previous level to
        draw an image like this.
      courseF_artist_variables10: 'Here''s your code from the last puzzle.  Try editing
        the variable in other ways.  '
      courseF_artist_variables10_2018: 'Here''s your code from the last puzzle.  Try
        editing the variable in other ways.  '
      courseF_artist_variables10_2019: 'Here''s your code from the last puzzle.  Try
        editing the variable in other ways.  '
      courseF_artist_variables2: 'Now draw three of those triangles right next to
        each other.   '
      courseF_artist_variables2_2018: 'Now draw three of those triangles right next
        to each other.   '
      courseF_artist_variables2_2019: 'Now draw three of those triangles right next
        to each other.   '
      courseF_artist_variables3: Move the length of 50 into a variable so we can use
        it in the next few puzzles.
      courseF_artist_variables3_2018: Move the length of 50 into a variable so we
        can use it in the next few puzzles.
      courseF_artist_variables3_2019: Move the length of 50 into a variable so we
        can use it in the next few puzzles.
      courseF_artist_variables4: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables4_2018: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables4_2019: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables5: Add another set of loops at the end of your code
        to add three more triangles. This time, move forward and up!
      courseF_artist_variables5_2018: Add another set of loops at the end of your
        code to add three more triangles. This time, move forward and up!
      courseF_artist_variables5_2019: Add another set of loops at the end of your
        code to add three more triangles. This time, move forward and up!
      courseF_artist_variables6: 'Now make the triangles to be 60 pixels wide, with
        60 pixel jumps.  '
      courseF_artist_variables6_2018: 'Now make the triangles to be 60 pixels wide,
        with 60 pixel jumps.  '
      courseF_artist_variables6_2019: 'Now make the triangles to be 60 pixels wide,
        with 60 pixel jumps.  '
      courseF_artist_variables6a: Build this design where the squares have 80 pixel
        sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables6a_2018: Build this design where the squares have 80
        pixel sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables6a_2019: Build this design where the squares have 80
        pixel sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables7: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables7_2018: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables7_2019: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables8: Rebuild the triangle code from the last puzzle, but
        this time use the `set length to` block to reset the `length` variable to
        `length`+10 at the end of each loop iteration.
      courseF_artist_variables8_2018: Rebuild the triangle code from the last puzzle,
        but this time use the `set length to` block to reset the `length` variable
        to `length`+10 at the end of each loop iteration.
      courseF_artist_variables8_2019: Rebuild the triangle code from the last puzzle,
        but this time use the `set length to` block to reset the `length` variable
        to `length`+10 at the end of each loop iteration.
      courseF_artist_variables9: See what happens when you repeat the code from the
        last puzzle 30 times instead of only 3!  Feel free to make your lines any
        color or pattern for some extra zest.
      courseF_artist_variables9_2018: See what happens when you repeat the code from
        the last puzzle 30 times instead of only 3!  Feel free to make your lines
        any color or pattern for some extra zest.
      courseF_artist_variables9_2019: See what happens when you repeat the code from
        the last puzzle 30 times instead of only 3!  Feel free to make your lines
        any color or pattern for some extra zest.
      courseF_artist_variablesFP: "**Freeplay:** Take what you've learned and make
        your own drawing. "
      courseF_artist_variablesFP_2018: "**Freeplay:** Take what you've learned and
        make your own drawing. "
      courseF_artist_variablesFP_2019: "**Freeplay:** Take what you've learned and
        make your own drawing. "
      courseF_artist_variables_challenge1: Can you create a `length` variable and
        use it to create this pattern?
      courseF_artist_variables_challenge1_2018: Can you create a `length` variable
        and use it to create this pattern?
      courseF_artist_variables_challenge1_2019: Can you create a `length` variable
        and use it to create this pattern?
      courseF_artist_variables_challenge2: You've now learned everything you need
        to know to make a pattern like this!
      courseF_artist_variables_challenge2_2018: You've now learned everything you
        need to know to make a pattern like this!
      courseF_artist_variables_challenge2_2019: You've now learned everything you
        need to know to make a pattern like this!
      courseF_bee_conditionals10: Collect all of the nectar and make all of the honey.
      courseF_bee_conditionals1_predict1: Check to see if there's a flower under the
        cloud. If there's a flower, get nectar.
      courseF_bee_conditionals2: 'Check underneath each cloud to see if it is hiding
        a flower before you get nectar.  '
      courseF_bee_conditionals3: 'Help the bee collect all of the nectar. '
      courseF_bee_conditionals4: Get all of the nectar using as few blocks as possible.
      courseF_bee_conditionals5: Collect all of the nectar using as few blocks as
        possible
      courseF_bee_conditionals7_predict2: Use the `if/else` block to collect nectar
        at flowers and make honey at honeycomb.
      courseF_bee_conditionals8: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseF_bee_for1: Collect the nectar from each flower using the fewest blocks
        possible.
      courseF_bee_for10: "**Challenge:** Take what you've learned about `for` loops
        and try to solve this problem. "
      courseF_bee_for10_2018: "**Challenge:** Take what you've learned about `for`
        loops and try to solve this problem. "
      courseF_bee_for10_2019: "**Challenge:** Take what you've learned about `for`
        loops and try to solve this problem. "
      courseF_bee_for11: What should your increment be to collect 15, then 12, then
        9, 6, 3 nectar?
      courseF_bee_for11_2018: What should your increment be to collect 15, then 12,
        then 9, 6, 3 nectar?
      courseF_bee_for11_2019: What should your increment be to collect 15, then 12,
        then 9, 6, 3 nectar?
      courseF_bee_for1_2018: Collect the nectar from each flower using the fewest
        blocks possible.
      courseF_bee_for1_2019: Collect the nectar from each flower using the fewest
        blocks possible.
      courseF_bee_for2: Write the code to help the bee collect all of the nectar.
      courseF_bee_for2_2018: Write the code to help the bee collect all of the nectar.
      courseF_bee_for2_2019: Write the code to help the bee collect all of the nectar.
      courseF_bee_for4: Help the bee collect all of the nectar.
      courseF_bee_for4_2018: Help the bee collect all of the nectar.
      courseF_bee_for4_2019: Help the bee collect all of the nectar.
      courseF_bee_for5: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for5_2018: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for5_2019: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for6: Try gathering this nectar by counting down from 5 to 1 by
        1.
      courseF_bee_for6_2018: Try gathering this nectar by counting down from 5 to
        1 by 1.
      courseF_bee_for6_2019: Try gathering this nectar by counting down from 5 to
        1 by 1.
      courseF_bee_for7: Try collecting these flowers using an increment of 2.
      courseF_bee_for7_2018: Try collecting these flowers using an increment of 2.
      courseF_bee_for7_2019: Try collecting these flowers using an increment of 2.
      courseF_bee_for8: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?
      courseF_bee_for8_2018: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?
      courseF_bee_for8_2019: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?
      courseF_bee_for9: Use the `counter` variable to navigate this garden with the
        fewest number of blocks possible.
      courseF_bee_for9_2018: Use the `counter` variable to navigate this garden with
        the fewest number of blocks possible.
      courseF_bee_for9_2019: Use the `counter` variable to navigate this garden with
        the fewest number of blocks possible.
      courseF_bee_for_challenge1: 'Use this `for loop` to collect all of the nectar. '
      courseF_bee_for_challenge1_2018: 'Use this `for loop` to collect all of the
        nectar. '
      courseF_bee_for_challenge1_2019: 'Use this `for loop` to collect all of the
        nectar. '
      courseF_bee_for_challenge2: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      courseF_bee_for_challenge2_2018: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      courseF_bee_for_challenge2_2019: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      courseF_bee_functions2: Use the `get only nectar` function to collect the nectar
        from each flower.
      courseF_bee_functions3: Click "edit" to put code inside the `only make honey`
        function, then use it to solve this puzzle.
      courseF_bee_functions3a: Write a function that gets nectar if the bee is at
        a flower, otherwise it gets honey.  Use your function to solve the puzzle!
      courseF_bee_functions4: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는
        함수입니다.  \\\r\n\\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      courseF_bee_functions5a: Use the `move and check` function to collect all of
        the nectar.
      courseF_bee_functions6: Help the bee through the maze by turning left at flowers
        and right at honeycomb.
      courseF_bee_functions7: Rebuild your function from the last puzzle to solve
        this maze.
      courseF_bee_functions8a: Collect all the nectar or make all of the honey!
      courseF_bee_functionsPre7: Now try building a function to solve this maze.  How
        is it different from last time?
      courseF_bee_functions_challenge1: Create a new function to collect all the nectar
        and honey while there is a path ahead.
      courseF_bee_functions_challenge2: Use everything you have learned to complete
        this puzzle!
      courseF_bee_fwp2: Pull this code into a function, then call the function to
        check this row for nectar.
      courseF_bee_fwp3: Let's see if the function makes collecting these three rows
        of nectar any easier.
      courseF_bee_fwp4: Add a `length` parameter to the function so that it will still
        work when the row is a different length.
      courseF_bee_fwp5: Use this function to collect the nectar.
      courseF_bee_fwp6: Build a short and sweet solution to this puzzle.
      courseF_bee_fwp7: "**Challenge:** Modify your function to make honey as well."
      courseF_bee_fwp8: Use your new function to solve this spiral.
      courseF_bee_fwp9_predict1: Use your new function to solve this puzzle.
      courseF_bee_fwp_challenge1: Use one `for loop` in a function with a `length`
        parameter to collect all of the corn.
      courseF_bee_fwp_challenge2: 'Use one `for loop` in a function with a `length`
        parameter to collect all of the vegetables in each row. '
      courseF_bee_variables_1_2018: Finish this code so that the bee can collect all
        of the honey and nectar.
      courseF_bee_variables_1_2019: Finish this code so that the bee can collect all
        of the honey and nectar.
      courseF_bee_variables_2_2018: Edit your solution in one place so that the bee
        can collect all of the honey and nectar.
      courseF_bee_variables_2_2019: Edit your solution in one place so that the bee
        can collect all of the honey and nectar.
      courseF_bee_variables_3_2018: Subtract one from the variable each time through
        the loop if you want to use the same function to solve this level.
      courseF_bee_variables_3_2019: Subtract one from the variable each time through
        the loop if you want to use the same function to solve this level.
      courseF_bee_variables_4_2018: Edit the code to work for this puzzle.
      courseF_bee_variables_4_2019: Edit the code to work for this puzzle.
      courseF_bee_variables_5_2018: Create your own code to solve this puzzle
      courseF_bee_variables_5_2019: Create your own code to solve this puzzle
      courseF_bee_variables_6_2018: "**Challenge** Now give this puzzle a try!"
      courseF_bee_variables_6_2019: "**Challenge** Now give this puzzle a try!"
      courseF_bee_variables_7_2018: This puzzle is a little different.  What do you
        need to do to solve it?
      courseF_bee_variables_7_2019: This puzzle is a little different.  What do you
        need to do to solve it?
      courseF_bee_variables_8_2018: How many nectar will the bee collect from this
        flower?
      courseF_bee_variables_8_2019: How many nectar will the bee collect from this
        flower?
      courseF_playlab_variables1a: Variables can be used to store text that you want
        to use later.  Have Kiki, the soccer player,  scream "Goal!" by assigning
        that text to the `shout` variable.
      courseF_playlab_variables2b: Insert the variable `color` into the middle of
        a sentence by putting it into the empty slot in the `join` block.
      courseF_playlab_variables3b_josh: 'Help Kiki have a conversation with Brian
        by using the variable `age` in all of the places where age `12` should be
        used. '
      courseF_playlab_variables4b: Put the variables in the correct places to create
        this conversation.
      courseF_playlab_variables5c: Let's combine the `ask` block with an `if/else`
        statement to have some fun!
      courseF_playlab_variables6c: In the rest of this stage, we're going to build
        a game that you control!
      courseF_playlab_variables7b: Create some questions and weave the answers together
        into your very own story.
      courseF_playlab_variables7c: Make the game do something by asking the user to
        guess a color.
      courseF_playlab_variables8c: Use the variables to make the game more personal.
      courseF_playlab_variables_challenge1: 'Use these blocks to make the actors share
        a knock-knock joke. '
      courseF_playlab_variables_challenge2: This game will use variables to keep track
        of points.  Tag Cat to get 2 points. Tag Penguin to get 3 points.  When Cat
        and Penguin touch, take points away. Get exactly 10 points to win!
      courseF_video_createFunctions: We don't have a video for creating functions,
        yet. This is a placeholder.
      coursea_maze_ramp1_2018: For this puzzle, snap the blocks together and click
        "▶ Run"!
      coursea_maze_ramp1_2019: For this puzzle, snap the blocks together and click
        "▶ Run"!
      express_maze_debugging9_2019: Use the blocks in the toolbox to build your program.
        Get the Scrat to the acorn.
      flappy_1: '"클릭되면"블럭을 붙인 후 "실행하기"를 누르세요. 플래피 버드가 목표 지점에 도착할 수 있도록 화면을 클릭하거나 터치하면
        됩니다.'
      flappy_11: 자신만의 플래피 게임을 만들어보세요. 화면에 보이는 것들과 규칙들, 떨어지는 중력마저도 마음대로 만들어보세요. 친구들이
        스마트폰에서 해볼 수 있도록 공유해 보세요.
      flappy_2: 바닥 땅을 만들었습니다. "땅에 떨어지면" 블럭에 다른 블럭을 붙여보세요. 플래피가 땅에 닿으면 게임이 끝나도록 해야합니다.
      flappy_3: '"실행하면" 블럭은 프로그램을 실행시켰을 때 코드들이 동작하게 합니다. 목표 지점에 도착하기 위한 레벨, 스피드, 날개
        펄럭이기를 설정해 보세요.'
      flappy_4: 여러가지 물체에 부딪치지 않도록 플래피 버드를 날려 목적지에 도착하도록 해보세요. "물체에 부딪치면" 블럭을 사용하고,
        첫번째 파이프로 들어가면 "게임 끝"이 나오도록 해보세요.
      flappy_5: 스코어보드를 만들고 플래피 버드가 물체를 피해 지나가면 점수가 올라가게 해보세요. "물체를 피하면" 블럭을 사용하고,
        첫 번째 파이프에 도착하면 점수가 올라가게 해보세요.
      flappy_6: 플래피 버드의 펄럭이면 점수가 어떻게 올라가는지 확인해보세요.
      flappy_7: 자 이번에는 "실행하면" 블럭에 다른 블럭을 붙여 배경 그림을 바꾸어보세요.
      flappy_8: 화면에 보이는 것들은 언제 든지 바꿀 수 있습니다. 물체를 피해 통과하는 것과 같은 이벤트들이 발생했을 때 랜덤 배경으로
        바뀌도록 해보세요.
      flappy_9: 사물들을 뒤섞으려면, 장애물에 부딪혔을 때 게임을 끝내는 대신 점수를 0으로 설정하세요.
      frozen circle: 원은 특별한 도형입니다. 원을 그리기 위해서 물음표 부분에 어떤 수가 들어가야 할까요?
      frozen circle function: 새로운 "원 그리기" 블럭을 이용해 10개의 원을 겹쳐 그리세요. 원을 그리기 위해 점프 하는
        것을 잊지 마세요.
      frozen circle function in circle: 이제 20개의 원을 겹치고, 각각을 18도씩 회전시키세요.
      frozen circle function with parameter: 원하는 크기로 그릴 수 있는 "원 그리기" 블럭이 있습니다. 이 블럭을
        사용해 5 크기의 원과 10 크기의 원을 그릴 수 있겠어요?
      frozen cross: |-
        더하기 기호를 만들기 위해서 이 명령어들을 "반복" 블럭 안에 넣어보세요.
        엘사가 앞 뒤로 움직일 수 있는 것 아시죠?
      frozen cross rotate: 이제 10번 반복해보세요. 각 선들을 그리면서 회전하기 위해서 몇 도가 필요할까요?
      frozen cross rotate dense: '이제 90번 반복해 보세요. 360도를 회전하려면 90도를 몇 번 회전해야 할까요? 힌트:
        생각보다 작은 수입니다.'
      frozen diamond: |-
        이 블록들을 반복 블록 안에 넣어서 평행사변형을 만들어보세요.
        사각형하고 비슷하지만 각이 다릅니다. 4개의 각이 모두 90도가 아니라, 한 가지는 60도 이고 다른 한가지는 120도 입니다.
      frozen diamond mini snowflake: 모든 눈송이들이 서로 다른 모양을 하고 있다는 것을 아시나요? 평행 사변형을 4번
        그리기 위해 "반복"블럭을 사용하고, 각각을 90도 만큼씩 회전시켜 새로운 눈송이를 만들어보세요.
      frozen diamond snowflake: 이제, 평행 사변형을 10번 그릴 수 있도록 반복 블럭을 사용하고, 각각을 36도 만큼씩
        오른쪽으로 돌려 새로운 눈송이를 그려보겠습니다.
      frozen freeplay: 여러분은 이제 진짜 화가가 된 것 같아요! 겨울왕국을 만들어 보세요.
      frozen line: 안녕하세요! 저는 아렌델의 엘사입니다. 선 1개를 그릴 수 있도록 도와주세요.
      frozen perpendicular: 이제 두 개의 선을 90도 만큼 교차시켜 그릴 수 있는지 살펴보세요. "회전"블럭과 "이동" 블럭을
        사용해야 할 것 입니다.
      frozen snowflake branch: '"눈송이 가지 만들기" 블럭을 이용해 3개의 가지로 뻗어나가는 그럴 듯한 눈송이를 만들어보세요.'
      frozen snowflake full: 이제 이쁜 눈송이를 만들기 위해 8번 반복해 보세요.
      frozen snowflower: 아주 복잡한 눈송이 모양도 아주 간단한 모양들을 이용해 만들 수 있습니다. 5크기의 원을 5개, 10크기의
        원을 5개 이용해 패턴을 만들 수 있겠어요?
      frozen square iterative: 사각형을 만들기 위한 과정에 반 정도 왔습니다. 4개의 선을 모아 사각형을 그려보세요.
      frozen square loop: |-
        안녕하세요. 저는 아렌델의 안나입니다!
        더 적은 블록들을 사용하는 "반복" 블록을 이용해서 사각형을 1개 만들어보세요.
        사각형 1개를 만들기 위해서 "반복" 블록 안 (???) 값으로 얼마나 넣어야 할까요?
      frozen square loop 3x: 이제 3개의 사각형을 회전시켜 만들어 보세요! 새로운 사각형을 그리기 전에 120도 만큼 회전하는
        것을 잊지 마세요.
      frozen square snowflake: |-
        "반복" 블록을 사용해서 사각형을 10번 만들어 보세요.
        삼각형을 한 번씩 그릴 때마다, 회전 블록을 이용해서 36 도 만큼 씩 회전시켜주세요.
      grade2_collector_10: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_10_2018: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_10_2019: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_A: Help Laurel collect all of the treasure.
      grade2_collector_A_2018: Help Laurel collect all of the treasure.
      grade2_collector_A_2019: Help Laurel collect all of the treasure.
      grade5_artist_binary11: '자유 플레이: 빈 캔버스가 있습니다. 마음대로 재미있게 그려보세요!'
      grade5_artist_binary4: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      grade5_artist_binary5: 각 2진 문자는 이 그림의 한 줄을 의미합니다. 2진 문자열을 재배치해서 찡그린 얼굴 모양을 웃는
        얼굴 모양으로 만들어 주세요.
      grade5_artist_binary8: 이 그림을 마무리 해보세요.
      grade5_artist_binary9: "좀 더 높은 해상도로 표현할 수 있는 캔버스가 여기 있습니다. - 16 픽셀 \\* 16 픽셀!\\\r\n\\\r\n2진
        비트 문자열로 어떤 것이 그려지는 지 살펴보세요."
      grade5_pixelation: Encode an image of anything you like using binary. The binary
        language will be represented with '0' and '1' only.
      iceage_click_hello: 'Can you help Sid call for his friends when you click on
        him? '
      iceage_free_play: 'Time to create your own game or story! '
      iceage_hello1: Help Sid say "Hello!" by dragging the `say` block out and connecting
        it to the bottom of the `when run` event.
      iceage_hello2: Help Manny and Sid greet each other by using the the `actor ___
        say` block twice.
      iceage_move_events: Write the code to help Scrat get all of the acorns!
      iceage_move_to_actor: Connect a block to the `when actor touches` event to play
        a sound when Diego finds Manny.
      iceage_move_to_flag: Scrat is looking for his acorn! Can you help him move the
        last 200 pixels?
      iceage_repeat: Help Granny get some exercise by moving left and right repeatedly.
      iceage_sound_and_points: 'Can you finish this program to make it so that you
        both **play a sound** and **score a point** when Sid and Granny collide? '
      iceage_throw_hearts: Use the `actor __ throw` command to have Sid (actor 1)
        throw hearts at Granny (actor 2) and set Granny's mood to happy when she gets
        hit with them.
      iceage_warn_ice_age: Change the scene to an icy background and set Sid’s (actor
        1) speed to fast.
      k-1 maze 1: 오른쪽 돼지에게 보내주세요.
      mike3bit: We start you with the 4x2 image Maddie was creating, but we've left
        out the last few pixels. Finish off the image by figuring out which colors
        are missing and encoding them.
      mike3bitbird: Here's an example of an image made with 3-bit color. Try changing
        it to understand how it works. If you want to reset the image, press "Start
        Over".
      mike3bitfreeplay: Make something awesome and share it with your classmates!
        You can copy and paste the value of a pixel to use it repeatedly.
      mike3bitmario: "A careless binary coder typed in ONE extra 0 or 1 somewhere
        within this image's data. The extra bit that is causing Mario to glitch out!
        \n\nDelete the extra bit to restore Mario back to normal!"
      ramp_artist_loops1: Move forward by 60 pixels to complete this puzzle.
      ramp_artist_loops1_2018: Move forward by 60 pixels to complete this puzzle.
      ramp_artist_loops1_2019: Move forward by 60 pixels to complete this puzzle.
      ramp_artist_loops2: Move forward five times and make this colored line.
      ramp_artist_loops2_2018: Move forward five times and make this colored line.
      ramp_artist_loops2_2019: Move forward five times and make this colored line.
      ramp_artist_loops3: Use a `repeat` loop to draw five colored dashes.
      ramp_artist_loops3_2018: Use a `repeat` loop to draw five colored dashes.
      ramp_artist_loops3_2019: Use a `repeat` loop to draw five colored dashes.
      ramp_artist_loops4: What happens when you add a 72 degree right turn after everything
        else inside your loop?
      ramp_artist_loops4_2018: What happens when you add a 72 degree right turn after
        everything else inside your loop?
      ramp_artist_loops4_2019: Create this star pattern by looping a sequence of "move
        forward" and "turn right by 144 degrees" blocks.
      ramp_artist_loops5: Use loops to draw this staircase.
      ramp_artist_loops5_2018: Use loops to draw this staircase.
      ramp_artist_loops5_2019: Use loops to draw this staircase.
      ramp_artist_loops6: Edit your loop to draw this staircase.
      ramp_artist_loops6_2018: Edit your loop to draw this staircase.
      ramp_artist_loops6_2019: Edit your loop to draw this staircase.
      ramp_artist_loops7: Look for a pattern and make this code shorter using loops!
      ramp_artist_loops7_2018: Look for a pattern and make this code shorter using
        loops!
      ramp_artist_loops7_2019: Look for a pattern and make this code shorter using
        loops!
      ramp_artist_loops8: Look for a pattern and make this code shorter using loops.
      ramp_artist_loops8_2018: Look for a pattern and make this code shorter using
        loops.
      ramp_artist_loops8_2019: Look for a pattern and make this code shorter using
        loops.
      ramp_artist_loops9: Solve this puzzle by drawing a square.
      ramp_artist_loops9_2018: Solve this puzzle by drawing a square.
      ramp_artist_loops9_2019: Solve this puzzle by drawing a square.
