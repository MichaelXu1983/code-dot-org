---
hi-IN:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: If you use the block to have me `move forward by 100 pixels`,
          I will draw a line automatically.
        2-3_Artist_1_new_b: Having trouble turning the corner? Use the `turn right
          90 degrees` block.
      2-3 Artist 11:
        2-3_Artist_11_a: 'Having trouble with the angles? You need to go 360 degrees
          in 8 turns.  What is 360/8? '
      2-3 Artist 12:
        2-3_Artist_12_a: There are 360 degrees in a circle, so if the artist turns
          1 degree each time through the loop, he'll need to go through 360 times.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: The artist doesn't seem to be pointing in the correct
          direction. Can you make them turn first before drawing the line?
      2-3 Artist 3new:
        2-3_Artist_3new_a: What is 100-70?  Based on the story problem, that's how
          tall the hat needs to be!
        2-3_Artist_3new_b: The artist doesn't seem to be pointing in the correct direction.
          Can you make them turn first before drawing the line?
      2-3 Artist 4:
        2-3_Artist_4_a: To finish the house, all we need to do is draw a square!
      2-3 Artist 6:
        2-3_Artist_6_a: 'To make those little angles, you have to turn _farther_ each
          time than you did with the square.   '
        2-3_Artist_6_b: Since I'm already facing to the right, it's easiest to start
          by moving forward, then make left turns to create the triangle.
        2-3_Artist_6_c: Each side of the triangle is the same length as each side
          of the square...100 pixels!
      2-3 Artist 7:
        2-3_Artist_7_a: The easiest way to solve this puzzle is to draw the first
          square and end with the artist pointing down before starting your second
          square.
      2-3 Artist 8:
        2-3_Artist_8_a: If you cut 200 in half, how many pixels wide does each square
          need to be?
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: This diamond is really just a square on its side
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_a: Remember, you want the control panel 10 pixels
          _wider_...so be sure to **add** 10 to whatever number you change.
        2-3_Artist_Debugging_10_b: "**Trial and error is perfectly fine here!**  \n\nStart
          by changing one number at a time.   \n\nWhich numbers do what?  \n\nIf you
          get too lost, just click \"Start over\" and your code will be reset."
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'Hint: Each whisker is 75 pixels long.'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: One of the turns is 15 degrees too small.
        2-3_Artist_Debugging_3_b: If the program runs too fast to see what's happening,
          try slowing it down with the slider.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: What happens if you have the artist move or jump
          backward after he draws the first line?
      2-3 Artist Debugging 8:
        2-3_Artist_Debugging_8_a: |-
          How many times did my shape repeat?

          How many times _should_ the shape repeat?

          Where can you change that in the program?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: The artist needs to turn 60 degrees farther left
          before starting to draw!
        2-3_Artist_Debugging_9_b: You don't need to add another block to get the full
          turn, just add 60 degrees to the `turn left` block that's already there!
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: प्रत्येक वर्ग की 100 पिक्सल की भुजाएं हैं, जिसका
          अर्थ है कि आपको अपना दूसरा वर्ग खींचने से पहले 175 पिक्सल आगे की ओर मूव
          करना होगा।
        2-3_Artist_Functions_1_b: अपने गिलास बनाने के लिए आप एक ही बार में लाइनें
          खींच सकते हैं।
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: You will need to change not only the number and
          length of sides within the function, but also the angle the artist turns
          between each side.
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: Try running the code first to see what you need
          to add.
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: |-
          आपके प्रोग्राम को यह करना चाहिए:

          -   फंक्शन का उपयोग
          -   100 + 75 पिक्सल आगे की ओर मूव करना
          -   फंक्शन का उपयोग
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: The artist needs to turn 120 degrees between each
          square to complete this design.
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_a: |-
          Remember that the code from the last puzzle was:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">8</title>
                  <statement name="DO">
                    <block type="draw_colour" inline="true">
                      <value name="COLOUR">
                        <block type="colour_random"/>
                      </value>
                      <next>
                        <block type="draw_turn_by_constant_dropdown">
                          <title name="DIR">turnRight</title>
                          <title name="VALUE" config="45,60,90,120,180">45</title>
                          <next>
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">50</title>
                              <next>
                                <block type="draw_turn_by_constant_dropdown">
                                  <title name="DIR">turnLeft</title>
                                  <title name="VALUE" config="45,60,90,120,180">90</title>
                                  <next>
                                    <block type="draw_move_by_constant">
                                      <title name="DIR">moveForward</title>
                                      <title name="VALUE">50</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
        2-3_Artist_Loops_New_11_b: Your new turn should go at the **end** of the code
          inside the loop.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: Before starting the diamond, the artist needs to
          turn left by 60 degrees to get on the right path.
        2-3_Artist Loops_New_12_b: After the artist goes forward 100 pixels, he will
          need to turn right 120 degrees to make the sharp corner.
        2-3_Artist Loops_New_12_c: The artist will need to turn right only 60 degrees
          to create a wide corner.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: "At the end of each diamond, the artist is already
          facing the right direction to start the next one.  \n\nBecause of this,
          we don't need to add an extra `turn left by` block before we start again."
        2-3_Artist_Loops_New_13_b: "To make each diamond, the artist needs to:   \n\n-
          \  move\n-   turn right 120 degrees\n-   move\n-   turn right 60 degrees
          \ \n\nThen do it all again!"
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: The artist needs to turn 45 degrees to the right
          before he starts drawing.
        2-3_Artist_Loops_New_9_b: This V is really just half of a square.  What would
          the code be to draw half of a square?
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: Remember to put all of the grey blocks inside
          of your loop.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: |-
          Need help with the angles?\
          **360/12 = 30**
        2-3_Artist_Nested_Loops_3_b: Remember to put all of the grey code and your
          turn block inside of a loop.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: |-
          Need help with the angles?\
          **360/12 = 30**
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: |-
          एक वर्ग के ऊपर से उस स्थान तक जाने के लिए `आगे की ओर कूदें` ब्लॉक का उपयोग करने का प्रयास करें, जहां आप अगला शुरू करेंगे।

          यदि आपके वर्ग 20 पिक्सल लंबे हैं और वे 20 पिक्सल की दूरी पर हैं, तो आपको कितनी दूर कूदने की जरूरत है?
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: "How far should you turn in each loop?  \n\nWhat
          is 360/10?"
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          Need help finding the correct angle?

          **360 / 12 = 30**
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: Having a hard time figuring out how to get the
          blocks down?  Try treating the red flower exactly the same as a purple flower!
        2-3_Bee_Conditionals_14_b: If the red flower were purple, could you figure
          out how to use an extra `repeat` loop to cut down on code?
        2-3_Bee_Conditionals_14_c: |-
          Try breaking this up into two separate chunks:

          ![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)

          1.  Gather nectar 3 times
              -   Move forward 5 times
              -   Check to see if nectar, if so: get it
              -   Turn left

          2.  Make honey
              -   Move forward one time
              -   Make two honey
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 'Remember: Purple flowers only have either 0 or
          1 nectar and they can change each time you run the program.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: The code will be shortest if you use a loop each
          time you move forward, another loop to gather nectar, and another one to
          make honey.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 'Remember: Purple flowers change between 0 and 1
          nectar when you run your program!'
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: Once you find and fix the incorrect block, do you see
          any patterns that could be made more simple using a `repeat` loop?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: Once you find and fix the incorrect block, do you see
          any patterns that could be made more simple using a `repeat` loop?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: Is there any place where the bee does something that
          doesn't make sense? What happens when you change that block?
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: You don't have to use a loop with a function. Try moving,
          using the function, then moving and using the function again.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: You don't have to use a loop with a function. Try moving,
          using the function, then moving and using the function again.
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: यदि पहेली चुनौतीपूर्ण प्रतीत हो, तो थोड़े समय में अपना
          फंक्शन बनाने का प्रयास करें। कुछ ब्लॉक्स जोड़ें, फिर इसे आजमाएं। और जोड़ें,
          फिर दुबारा आजमाएं।  जल्दी ही, आप वहां पहुंच जाएंगे![][0]
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: यदि पहेली चुनौतीपूर्ण प्रतीत हो, तो थोड़े समय में अपना
          फंक्शन बनाने का प्रयास करें। कुछ ब्लॉक्स जोड़ें, फिर इसे आजमाएं। और जोड़ें,
          फिर दुबारा आजमाएं।  जल्दी ही, आप वहां पहुंच जाएंगे![][0]
        2-3_Bee_Functions_8_b: |-
          हरे फंक्शन ब्लॉक के अंदर अपना कोड बनाना याद रखें।
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: You should end up with four blocks inside your loop.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: You should have 6 blocks inside your loop.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: You will need two different `repeat` loops, one after
          the other.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: You should end up with five blocks inside your loop.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: The first action will be a turn, rather than a move.
        2-3_Bee_Loops_4A_b: The last piece of the program can be finished by writing
          code at the end of your program outside of your loop.
        2-3_Bee_Loops_4A_c: If you can't spot the loops yet, try coding it out the
          long way first, then see what you can combine into a `repeat` loop at the
          end.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: If you can't spot the blocks to put inside `repeat` right
          away, start by coding out each move and look for a pattern.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: If you can't tell what should go into the `repeat` loop,
          try dragging blocks out one by one and see if you can find a pattern.
        2-3_Bee_Loops_6_b: There should be 6 blocks inside your `repeat` loop when
          you're done.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: The first action will be a turn, rather than a move.
        2-3_Bee_Loops_7_b: 'If you can''t quite picture the loop from the beginning,
          try coding it out the long way, then look for a pattern.  '
      2-3 Maze 1:
        2-3_Maze_1_a: To use a `move forward` block, drag it from the toolbar area
          out into the workspace and connect it to the `when run` block.
      2-3 Maze 16:
        2-3_Maze_16_a: If the pattern is hard to see, try coding it all out first
          and see what things repeat over and over before you put the loops in.
        2-3_Maze_16_b: "To put lots of blocks inside a `repeat` loop, just drag a
          loop out into the workspace, then drag all of the blocks from the starting
          program inside of it.  \n\nConnect it all back to the `when run` block and
          you're good to go!"
      2-3 Maze 6:
        2-3_Maze_6_a: इस पहेली को हल करने के दो तरीके हैं!
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: If the pattern is hard to see, try coding it all out
          first and see what things repeat over and over before you put the loops
          in.
        2-3_Maze_Loops_17_b: Did the starting code get deleted?  Click `start over`
          to get it back!
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: If the pattern is hard to see, try coding it all out
          first and see what things repeat over and over before you put the loops
          in.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: If you are stuck, try writing out the code without loops
          first and looking for patterns.
        2-3_Maze_Loops_19_b: Putting one repeat loop inside of another can help decrease
          the number of blocks used.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: Look for a stair-step pattern in this maze to find where
          a loop can be used.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: If you are having trouble finding the stair-step pattern,
          try covering the blocked paths with your finger.
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: Within your loop, make sure the artist jumps backwards and
          upwards after drawing each line.
      4-5 Artist 3:
        4-5_Artist_3_a: |-
          If the flower bed is 600 pixels around and two of the sides are 200 pixels long, here is how to figure out what the short sides add up to:

          **600 - 200 - 200 = 200**

          That means both short sides add up to 200 pixels.

          **What is 200 / 2?**
        4-5_Artist_3_b: If you can't see where the `repeat` loop goes right away,
          try coding out the whole solution and look for a pattern.
      4-5 Artist 4:
        4-5_Artist_4_a: "There are 360 degrees in a circle! \n\nThat's how many times
          you need to repeat this code (turning 1 degree at a time) before the circle
          is done!"
      4-5 Artist 5:
        4-5_Artist_5_a: |-
          Trial and error is a great method, but you can also solve the problem by dividing the 90 degree angle into thirds.

          **90 / 3 = \_\_\_\_\_**
      4-5 Artist 7:
        4-5_Artist_7_a: 'Which angle is the smallest?  At which angle is the artist
          standing? '
      4-5 Artist 8:
        4-5_Artist_8_a: "The long sides are 240 pixels each.  That means that the
          2 short sides must total:\n\n**800 - 240 - 240 = 320**\n\nWhat is **320/2**
          ? "
        4-5_Artist_8_b: "This image can be done 2 ways!  \n\n-   Draw two rectangles
          that are **120** long and **160** tall, with an overlapping side\n\n-   Draw
          one rectangle that is **240** long and **160** tall, then add a line in
          the middle."
      4-5 Artist 9:
        4-5_Artist_9_a: 'When a triangle is an equilateral, all sides and all angles
          are the same.  '
        4-5_Artist_9_b: You will need to draw three triangles of the same size. Don't
          forget to jump to your new position after each one.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: You only need to draw the outside triangle to complete
          this puzzle.
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: If there are 360 degrees in a circle and each loop
          turns 3 degrees, how many times would you need to loop draw half of a full
          circle?
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: Notice that since the squares are 20 pixels long,
          you'll need to jump 20 pixels before you start your next square.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: Be careful to pull out the full block of "code from
          the toolbar each time you try a new one.
        4-5_Artist_Patterns_3_b: If your code becomes too confusing, you can always
          click "Start Over" and try again!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: "Now, when the artist finished each diamond, he's
          facing the opposite direction from where he needs to be to start the next
          one.  \n\nHow many degrees does he need to be turned to set himself straight?"
      4-5 Bee Conditionals 4:
        remember_quantum: "**याद रखें:** यह पहेली हर बार चलाने पर बदल जाती है। \n\nआप
          चुनौती को हल करने के लिए नियमबद्ध ब्लॉक ( `इफ` या `इफ/एल्स`) का उपयोग करना
          चाहेंगे।"
      4-5 Bee Conditionals 5:
        remember_quantum: "**याद रखें:** यह पहेली हर बार चलाने पर बदल जाती है। \n\nआप
          चुनौती को हल करने के लिए नियमबद्ध ब्लॉक ( `इफ` या `इफ/एल्स`) का उपयोग करना
          चाहेंगे।"
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: You can solve this puzzle using only the blocks
          on the workspace.  What order should they go in?
        4-5 Bee Conditionals 6_b: Make sure that you are checking to see if the flower
          has more than **0** nectar at least **3** times to solve this puzzle.
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: If you are having trouble figuring out what's not right,
          try running it to see where things go wrong.
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: Try treating this puzzle like a long rectangle
          where the bee needs to move forward, then turn left several times to complete
          the path.
      4-5 Maze 10:
        4-5_Maze_10_a: |-
          If you can't see how to use loops to solve the puzzle right away, try solving it the long way first, then looking for a pattern.

          What should you put a `repeat` around to make the code shorter?
      4-5 Maze 4:
        4-5_Maze_4_a: If you are having a hard time figuring out where to put the
          repeat, try coding everything out and looking for a pattern.
      4-5 Maze 5:
        4-5_Maze_5_a: Try using a `repeat` loop anytime you need to `move forward`
          more than two steps.
        4-5_Maze_5_b: You can use more than one `repeat` loop in a puzzle.
      4-5 Maze 6:
        4-5_Maze_6_a: |-
          Try tracing out a path with your finger.\
          Is it the shortest path you can find?
      4-5 Maze 7:
        4-5_Maze_7_a: "**Want to get your code as small as it can be?** \n\nLook for
          patterns in your blocks. Do you see something that repeats?  Try putting
          a loop around it instead!"
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: |-
          Don't forget to make a turn after your inner loop.

          You'll be looping 6 triangles over 360 degrees.

          **360 / 6 = ?**
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: |-
          This design will loop 10 times over 360 degrees.

          **360 / 10 = ?**
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: |-
          You will be looping this shape 6 times over 360 degrees.

          **360 / 6 = ?**
      4-5 While Loops 8:
        4-5_While_Loops_8_a: Each item will need its own `while` loop.
      Course 4 Artist 11:
        Course_4_Artist_11_a: 'आधे षट्कोण की \*30 की लंबाई\*\* है और यह **60 डिग्री**
          दाएं मुड़ता है।  '
        Course_4_Artist_11_b: '2/3 त्रिकोण की \*80 की लंबाई\*\* है और यह **120 डिग्री**
          दाएं मुड़ता है। '
      Course 4 Artist 12:
        Course_4_Artist_12_a: 'Each repeated shape is the combination of **half of
          a hexagon**, followed by **2/3 of a triangle**. '
        Course_4_Artist_12_b: 'The unit shape is almost the same as in the last puzzle,
          except the half-hexagon is a bit bigger. '
        Course_4_Artist_12_c: |-
          1.  The first three lines are 60 pixels long and you need to turn 60 degrees.

          2.  The next two lines are 80 pixels long and you need to turn 120 degrees
        Course_4_Artist_12_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#843179</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat">
                      <title name="TIMES">6</title>
                      <statement name="DO">
                        <block type="controls_repeat">
                          <title name="TIMES">3</title>
                          <statement name="DO">
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">60</title>
                              <next>
                                <block type="draw_turn_by_constant">
                                  <title name="DIR">turnRight</title>
                                  <title name="VALUE">60</title>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="controls_repeat">
                              <title name="TIMES">2</title>
                              <statement name="DO">
                                <block type="draw_move_by_constant">
                                  <title name="DIR">moveForward</title>
                                  <title name="VALUE">80</title>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">120</title>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 Artist 6:
        Course_4_Artist_6_a: There are 3 triangles within the 360 degree rotation...how
          many times does 3 go into 360?
      Course 4 Artist 8a:
        Course_4_Artist_8a: |-
          Need help figuring out how far to turn?

          There are 3 triangles within the 360 degree rotation.

          How many times does 3 go into 360?
      Course 4 Artist 9:
        Course_4_Artist_9_a: "Need to know how much to turn? \n\nWhat is 360 divided
          by 10?"
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_a: This code uses two `for loops`. One
          counts up from 1 to 8, the other counts down from 8 to 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Each `for loop` has three repeats.  The
          first draws the leftmost set of 1s, the second draws the 0s in the middle
          and the third draws the 1s on the right.
        Course_4_Artist_Binary_Free_Play_2b_c: In each repeat you need `counter` for
          1s and `16-(2 x counter)` for 0s.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **समाधान:**

          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops 11:
        Course_4_Artist_For_Loops_11_a: "The turn angle will change with each shape!
          \ \n\nUse the math block to enter 360 divided by the number of sides the
          shape has to get the angle right. "
      Course 4 Artist For Loops 11a:
        Course_4_Artist_For_Loops_11a_a: '360 divided by the number of sides a shape
          has is the number of degrees you''ll need to turn. '
        Course_4_Artist_For_Loops_11a_b: 'Each time, you will need to move forward
          by 10 times the length of the current number of sides. '
      Course 4 Artist For Loops 3:
        Course_4_Artist_For_Loops_3_a: To have the `for` loop drive your movement,
          make sure that you're using `counter` as your distance.
      Course 4 Artist For Loops 4:
        Course_4_Artist_For_Loops_4_a: |-
          **आपको कौन-सी सबसे छोटी संख्या की जरूरत होगी?\
          सबसे बड़ी संख्या कौन-सी है?\
          हर बार वृद्धि कितनी बड़ी है?**

          वो वही सवाल हैं, जिन्हें आपको `फॉर` लूप के खाली स्थानों को भरने के लिए पूछने की जरूरत है।
      Course 4 Artist For Loops Challenge:
        Course_4_Artist_For_Loops_Challenge_a: The largest shape has 19 sides. The
          smallest has just two.
        Course_4_Artist_For_Loops_Challenge_b: The `for` loop counts up by two each
          time through.
      Course 4 Artist For Loops inspire:
        Course_4_Artist_For_Loops_inspire_a: The foundation of this code is the same
          as the solution to the previous challenge puzzle...with a couple of changes.
        Course_4_Artist_For_Loops_inspire_b: Try a `for` loop that goes from 3 to
          10 with an increment of 1.
        Course_4_Artist_For_Loops_inspire_c: There are two iterations of the same
          repeat loop inside the `for` loop, but the second repeat turns the opposite
          direction.
        Course_4_Artist_For_Loops_inspire_d: "**Solution:**  \n\n<xml>\n  <block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\"
          inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n
          \       <value name=\"FROM\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">3</title>\n          </block>\n        </value>\n
          \       <value name=\"TO\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value
          name=\"BY\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement
          name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n
          \           <value name=\"TIMES\">\n              <block type=\"math_arithmetic\"
          inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value
          name=\"A\">\n                  <block type=\"variables_get\">\n                    <title
          name=\"VAR\">counter</title>\n                  </block>\n                </value>\n
          \               <value name=\"B\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">1</title>\n                  </block>\n
          \               </value>\n              </block>\n            </value>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move\"
          inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n
          \               <value name=\"VALUE\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">40</title>\n                  </block>\n
          \               </value>\n                <next>\n                  <block
          type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n
          \                   <value name=\"VALUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">360</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n            <next>\n              <block
          type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n
          \                 <block type=\"math_arithmetic\" inline=\"true\">\n                    <title
          name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block
          type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n
          \                     </block>\n                    </value>\n                    <value
          name=\"B\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">1</title>\n                      </block>\n                    </value>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">40</title>\n                      </block>\n                    </value>\n
          \                   <next>\n                      <block type=\"draw_turn\"
          inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">360</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_a: Start with the code from the last
          puzzle and add an extra `turn right` of three degrees inside the repeat
          loop.
        Course_4_Artist_Functions_Inspiration_b: Try turning by more than 90 degrees
          outside of the `repeat loop`, but still inside the `for loop`.
        Course_4_Artist_Functions_Inspiration_c: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">14</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_random"/>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="procedures_callnoreturn">
                            <mutation name="draw a square 20"></mutation>
                              <next>
                                <block type="jump_by_constant">
                                  <title name="DIR">jumpForward</title>
                                  <title name="VALUE">20</title>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">3</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="draw_turn_by_constant">
                              <title name="DIR">turnLeft</title>
                              <title name="VALUE">100</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            </xml>
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: Part of understanding how to use functions
          is figuring out which ones you need, and which ones you don't.
        Course_4_Artist_Functions_challenge_b: Use a `for loop`, then use its counter
          variable inside of a nested `repeat` loop.
        Course_4_Artist_Functions_challenge_c: Each iteration, you should draw a square
          then jump forward.
        Course_4_Artist_Functions_challenge_d: You will need to turn left by 90 degrees
          outside of your `repeat`, but still inside the `for loop`.
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_a: After you complete one square, try jumping forward
          half of its length before turning and making another.
        Course_4_Artist_Inspire_b: Each square and jump is repeated four times (using
          a left turn inbetween) to make a full pinwheel-like unit.
        Course_4_Artist_Inspire_c: Each pinwheel is also repeated four times, with
          a right turn of **360/sides**.
        Course_4_Artist_Inspire_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#843179</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">sides</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">4</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">length</title>
                          <value name="VALUE">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">sides</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">sides</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="draw_move" inline="true">
                                          <title name="DIR">moveForward</title>
                                          <value name="VALUE">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </statement>
                                      <next>
                                        <block type="jump" inline="true">
                                          <title name="DIR">jumpForward</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">length</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="math_number">
                                                  <title name="NUM">2</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnLeft</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="math_number">
                                                  <title name="NUM">360</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 Artist Vars 13:
        Course_4_Artist_Vars_13_a: You need two repeat loops (one inside the other)
          both repeating `sides` times.
        Course_4_Artist_Vars_13_b: "The inner repeat loop draws an octagon (turning
          to the left).   \n\nAfterwards, you need to move forward and turn right
          only in the outer loop."
        Course_4_Artist_Vars_13_c: To adjust the shape to stay the same size when
          the number of sides change, use the math block to divide the length in pixels
          by the number of sides.
      Course 4 Artist Vars 6:
        Course_4_Artist_Vars_6_a: To draw a regular polygon, turn **360/sides** each
          time.
      Course 4 Artist Vars 8:
        Course_4_Artist_Vars_8_a: If you divide your starting length by the number
          of sides, the length of each side will get shorter as the number of sides
          gets higher.
      Course 4 Bee Params 7:
        notice_pattern: 'Do you see a pattern in how the number of nectar changes? '
        count_with_for: Notice that the nectar goes up in steps. What kind of block
          can you use to do the same thing many times while counting up?
      Course 4 Bee Params 8:
        Course_4_Bee_Params_8_a: It's okay to ask for a honey number and a nectar
          number each time.  If there's none of something, the number can be 0.
      Course 4 Play Lab Params 2:
        Course_4_Play_Lab_Params_2_a: You will need to click "edit" on the jump function
          and update it so that it uses the `height` parameter.
      Course 4 Play Lab Vars 2:
        Course_4_Play_Lab_Vars_2_a: Make sure to set the number for `dog_speed` to
          something larger than `cat_speed`.
      Course 4 Play Labs For Loops 2:
        Course_4_Play_Labs_For_Loops_2_a: What would you add to your `for` loop every
          time to skip the even numbers?
      Course 4 Playlab For Loops 4b:
        Course_4_Playlab_For_Loops_4b_a: The flags are about 330 pixels away from
          the characters.
        Course_4_Playlab_For_Loops_4b_b: How can you make each character reach 330
          pixels in the same number of moves with different starting and stopping
          numbers?
        Course_4_Playlab_For_Loops_4b_c: Remember, it doesn't matter how much a character
          passes the flag by on its last step, as long as it takes each character
          the same number of steps to get to the flag.
      Course 4 Playlab For Loops 5b:
        Course_4_Playlab_For_Loops_5b_a: The characters are about 175 pixels away
          from the center.
        Course_4_Playlab_For_Loops_5b_b: Remember, a character's next step will be
          longer than their last, since the counter keeps getting larger.
      Course 4 SCF 1:
        Course_4_SCF_1_a: Each hexagon has 40 pixel sides.
        Course_4_SCF_1_b: There is a 120 pixel jump between each hexagon in each horizontal
          line.
        Course_4_SCF_1_c: "Before you draw the second row of hexagons, you need to
          turn right by 60 degrees and jump forward 40 pixels.  \n\nOnce you're in
          the correct vertical location, you have to turn your artist back again and
          jump backward 320 pixels."
        Course_4_SCF_1_d: "Before you draw the third row of hexagons, you need to
          turn right by 60 degrees and jump forward 40 pixels.  \n\nOnce you're in
          the correct vertical location, you have to turn your artist back again and
          jump backward 440 pixels (120 pixels farther than your `shift down/forward`
          function. "
        Course_4_SCF_1_e: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw a line of hexagons"></mutation>
                      <next>
                        <block type="procedures_callnoreturn">
                        <mutation name="shift down/forward"></mutation>
                          <next>
                            <block type="procedures_callnoreturn">
                            <mutation name="draw a line of hexagons"></mutation>
                              <next>
                                <block type="procedures_callnoreturn">
                                <mutation name="shift down/backward"></mutation>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">draw a hexagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">6</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">shift down/backward</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">60</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">440</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">draw a line of hexagons</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw a hexagon"></mutation>
                      <next>
                        <block type="jump" inline="true">
                          <title name="DIR">jumpForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">120</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">shift down/forward</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">60</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">320</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: Remember your functions from stage 16.
        Course_4_SCF_1a_b: "Look at this path as your main route:  \n\n![](https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)"
        Course_4_SCF_1a_c: You should consider using a `for loop`. Not for the steps,
          but for the function parameter.
        Course_4_SCF_1a_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false" uservisible="false" y="14">
              <next>
                <block type="variables_set" inline="false" uservisible="false">
                  <title name="VAR">left</title>
                  <value name="VALUE">
                    <block type="math_number" uservisible="false">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false" uservisible="false">
                      <title name="VAR">right</title>
                      <value name="VALUE">
                        <block type="math_number" uservisible="false">
                          <title name="NUM">0</title>
                        </block>
                      </value>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">21</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_if">
                          <title name="DIR">isPathLeft</title>
                          <statement name="DO">
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="get nectar">
                              <arg name="dir"></arg>
                              <arg name="counter"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="variables_get">
                                  <title name="VAR">left</title>
                                </block>
                              </value>
                              <value name="ARG1">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_if">
                                          <title name="DIR">isPathRight</title>
                                          <statement name="DO">
                                            <block type="procedures_callnoreturn" inline="false">
                                              <mutation name="get nectar">
                                              <arg name="dir"></arg>
                                              <arg name="counter"></arg>
                                              </mutation>
                                              <value name="ARG0">
                                                <block type="variables_get">
                                                  <title name="VAR">right</title>
                                                </block>
                                              </value>
                                              <value name="ARG1">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation>
              <arg name="dir"></arg>
              <arg name="counter"></arg>
              </mutation>
              <title name="NAME">get nectar</title>
              <statement name="STACK">
                <block type="controls_if" inline="false">
                <mutation else="1"></mutation>
                  <value name="IF0">
                    <block type="logic_compare" inline="true" movable="false">
                      <title name="OP">EQ</title>
                      <value name="A">
                        <block type="parameters_get">
                          <title name="VAR">dir</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="variables_get">
                          <title name="VAR">left</title>
                        </block>
                      </value>
                    </block>
                  </value>
                  <statement name="DO0">
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                          <block type="maze_nectar"></block>
                          </statement>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveBackward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="controls_if" inline="false">
                                <mutation else="1"></mutation>
                                  <value name="IF0">
                                    <block type="logic_compare" inline="true" movable="false">
                                      <title name="OP">EQ</title>
                                      <value name="A">
                                        <block type="parameters_get">
                                          <title name="VAR">dir</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">left</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <statement name="DO0">
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </statement>
                                  <statement name="ELSE">
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                    </block>
                                  </statement>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: "Notice that the shape of all honey points is similar.
          \ \n\nGood place for a function!"
        Course_4_SCF_1b_b: "Look at this idea for how the bee might travel:  \n\n![](https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)"
        Course_4_SCF_1b_c: You should consider using a `for loop` for the distance
          the bee travels.
        Course_4_SCF_1b_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="make honey up and over"></mutation>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_move">
                                          <title name="DIR">moveForward</title>
                                        </block>
                                      </statement>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
            <mutation></mutation>
              <title name="NAME">make honey up and over</title>
              <statement name="STACK">
                <block type="maze_move">
                  <title name="DIR">moveForward</title>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_honey">
                              <next>
                                <block type="maze_honey">
                                  <next>
                                    <block type="maze_move">
                                      <title name="DIR">moveBackward</title>
                                      <next>
                                        <block type="maze_turn">
                                          <title name="DIR">turnLeft</title>
                                          <next>
                                            <block type="maze_move">
                                              <title name="DIR">moveBackward</title>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 2:
        Course_4_SCF_2_a: Each octagon has 40 pixel sides.
        Course_4_SCF_2_b: There is a 136 pixel jump between each octagon in each horizontal
          line.
        Course_4_SCF_2_c: "Before you draw the second row of octagons, you need to
          turn right by 45 degrees and jump forward 96 pixels.  \n\nOnce you're in
          the correct vertical location, you have to turn your artist back again and
          jump backward 408 pixels. "
        Course_4_SCF_2_d: "Notice that because there are fewer octagons in the even
          rows, you don't have to jump back any further to get to the starting place
          for the odd rows.  \n\nThis means you can use the same function for all
          rows."
        Course_4_SCF_2_e: |-
          **समाधान:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn" inline="false">
                      <mutation name="draw octagons">
                      <arg name="numOctagons"></arg>
                      </mutation>
                      <value name="ARG0">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <next>
                        <block type="procedures_callnoreturn">
                        <mutation name="shift down"></mutation>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="draw octagons">
                              <arg name="numOctagons"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <next>
                                <block type="procedures_callnoreturn">
                                <mutation name="shift down"></mutation>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="procedures_callnoreturn" inline="false">
                      <mutation name="draw octagons">
                      <arg name="numOctagons"></arg>
                      </mutation>
                      <value name="ARG0">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false">
              <mutation>
              <arg name="numOctagons"></arg>
              </mutation>
              <title name="NAME">draw octagons</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="parameters_get">
                      <title name="VAR">numOctagons</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw an octagon"></mutation>
                      <next>
                        <block type="jump" inline="true">
                          <title name="DIR">jumpForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">136</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">draw an octagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">8</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">shift down</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">45</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">96</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">408</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_b: यह ऐसी भुजाओं वाली अष्टभुजों की श्रृंखला है, जो `काउंटर`
          पिक्सल लंबी हैं।
        Course_4_SCF_3_c: प्रत्येक अष्टभुज को `फॉर` लूप के अंदर से बोला जाता है, जो
          200 नीचे से 2 गुणा 2 तक जाती है।
        Course_4_SCF_3_d: प्रत्येक पुनरावृत्ति के अंत में 22.5 डिग्री तक मुड़ना न
          भूलें।
        Course_4_SCF_3_e: प्रत्येक अष्टभुज का रंग और पेन की चौड़ाई दोनों `काउंटर`
          वेरिएबल द्वारा नियंत्रित हैं।
        Course_4_SCF_3_f: |-
          **समाधान:**

          <xml>
            <block type="procedures_defnoreturn" editable="false">
              <mutation>
              <arg name="length"></arg>
              </mutation>
              <title name="NAME">draw an octagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">8</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">200</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_rgb" inline="false">
                          <value name="RED">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">MINUS</title>
                              <value name="A">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <value name="GREEN">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <value name="BLUE">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">MULTIPLY</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                            </block>
                          </value>
                        </block>
                      </value>
                      <next>
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">4</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="draw an octagon">
                              <arg name="length"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">22.5</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1:
        Course_4_SCFL_1_a: |-
          गतिविधि के लिए इस विकल्प पर एक नज़र डालें।

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        Course_4_SCFL_1_b: 'दो `फॉर` लूप्स का उपयोग करने के प्रयास करें: एक ऊपर चढ़ने
          और मधुरस प्राप्त करने और दूसरी नीचे उतरने और शहद बनाने के लिए।'
        Course_4_SCFL_1_c: |-
          ध्यान दें कि एक `फॉर` लूप को अंदर कई नियमित लूप्स की जरूरत हैं, जो वृद्धि वाला सीढ़ी पैटर्न बनाने के लिए `काउंटर` बार दोहराती हों।

          अन्य `फॉर` लूप को `काउंटर` मात्रा में शहद बनाने के लिए केवल एक नियमित लूप की जरूरत है।
        Course_4_SCFL_1_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_a: You may have to travel farther overall to use the smallest
          number of blocks.
        Course_4_SCFL_1a_b: |-
          गतिविधि के लिए इस विकल्प पर एक नज़र डालें।

          ![](https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)
        Course_4_SCFL_1a_c: A `for loop` will help you execute the same pattern, but
          with a changing number of steps.  Notice that the number of steps needed
          decreases from 7 to 5 by 1.
        Course_4_SCFL_1a_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">7</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">5</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnLeft</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="math_number">
                                          <title name="NUM">2</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_moveForward"/>
                                      </statement>
                                      <next>
                                        <block type="maze_turn">
                                          <title name="DIR">turnLeft</title>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_a: Try using a `for loop`.
        Course_4_SCFL_1b_b: |-
          गतिविधि के लिए इस विकल्प पर एक नज़र डालें।

          ![](https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)
        Course_4_SCFL_1b_c: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 2:
        Course_4_SCFL_2_a: |-
          गतिविधि के लिए इस विकल्प पर एक नज़र डालें।

          ![](https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)
        Course_4_SCFL_2_b: Notice that there are three points during each iteration
          of this `for` loop where you stop to interact with objects.
        Course_4_SCFL_2_c: During each iteration of the `for` loop, the number for
          each object relates to the `counter` variable in some way.
        Course_4_SCFL_2_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_moveForward">
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_moveForward">
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">MULTIPLY</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="math_number">
                                                  <title name="NUM">3</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="maze_honey"/>
                                          </statement>
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnLeft</title>
                                              <next>
                                                <block type="maze_moveForward">
                                                  <next>
                                                    <block type="maze_moveForward">
                                                      <next>
                                                        <block type="maze_turn">
                                                          <title name="DIR">turnRight</title>
                                                          <next>
                                                            <block type="controls_repeat_ext" inline="true">
                                                              <value name="TIMES">
                                                                <block type="math_arithmetic" inline="true">
                                                                  <title name="OP">POWER</title>
                                                                  <value name="A">
                                                                    <block type="math_number">
                                                                      <title name="NUM">2</title>
                                                                    </block>
                                                                  </value>
                                                                  <value name="B">
                                                                    <block type="variables_get">
                                                                      <title name="VAR">counter</title>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </value>
                                                              <statement name="DO">
                                                                <block type="maze_nectar"/>
                                                              </statement>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 3:
        Course_4_SCFL_3_a: "`पेन चौड़ाई` 1 है। पहले वर्ग की 50 पिक्सल की भुजाएं हैं,
          और प्रत्येक वर्ग पिछले के मुकाबले 50 पिक्सल अधिक चौड़ा है।"
        Course_4_SCFL_3_b: ब्रुश पर अपारदर्शिता हमेशा `काउंटर`/2 होती है।
        Course_4_SCFL_3_c: जब आप प्रत्येक वर्ग बना लें, तो पीछे की ओर कूदना, मुड़ना,
          दुबारा कूदना, फिर वापस मुड़ना न भूलें!
        Course_4_SCFL_3_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 4:
        Course_4_SCFL_4_a: The color change happens using the `set color with red,
          green, blue` block.  Red is always the value of `counter`, green is always
          `255 - counter`, and blue remains constant at 255 exactly.
        Course_4_SCFL_4_b: Each shape is a square with sides that are `counter` pixels
          long, starting with 5px, and increasing by 5px all the way up to 200px.
        Course_4_SCFL_4_c: The artist turns 15 degrees between each square.
        Course_4_SCFL_4_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">200</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">4</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">90</title>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">15</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 6:
        Course_4_SCFL_6_a: रंग बदलाव `लाल, हरे, नीले के साथ रंग सेट करें` ब्लॉक से
          होता है।  लाल को निरंतर 255 पर सेट है, हरे का मूल्य हमेशा `काउंटर` होता
          है और नीला हमेशा `255 - काउंटर` होता है।
        Course_4_SCFL_6_b: The code for this is much more simple than you might think.  Just
          set the color inside the `for loop`, move forward, then turn.
        Course_4_SCFL_6_c: "`फॉर` लूप 5 से 250 गुणा 2 तक जाती है।"
        Course_4_SCFL_6_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 7:
        Course_4_SCFL_7_a: The color change happens using the `set color with red,
          green, blue` block.  Red is set to `counter`. Green is  `255 - counter`,
          and blue is set constant at 255.
        Course_4_SCFL_7_b: 'This drawing is made using two similar `for loops`.  One
          goes from 5 to 200 by 2, the other goes from 200 to 5 by 2. '
        Course_4_SCFL_7_c: Inside each `for loop` you move forward 5 pixels before
          you turn by `360 / counter`. Don't forget to set your brush to width `counter`
          before you do!
        Course_4_SCFL_7_d: You'll need to turn left by 225 degrees between the two
          `for loops`.
        Course_4_SCFL_7_e: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="alpha" inline="true" id="alpha">
                  <value name="VALUE">
                    <block type="math_number_dropdown">
                      <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">200</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_colour" inline="true" id="draw-color">
                              <value name="COLOUR">
                                <block type="colour_rgb" inline="false">
                                  <value name="RED">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="GREEN">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">MINUS</title>
                                      <value name="A">
                                        <block type="math_number">
                                          <title name="NUM">255</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <value name="BLUE">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">5</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnLeft</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">DIVIDE</title>
                                          <value name="A">
                                            <block type="math_number">
                                              <title name="NUM">360</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="variables_get">
                                              <title name="VAR">counter</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">225</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_for_counter" inline="true">
                            <mutation counter="counter"></mutation>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">5</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_width" inline="false">
                                  <value name="WIDTH">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_colour" inline="true" id="draw-color">
                                      <value name="COLOUR">
                                        <block type="colour_rgb" inline="false">
                                          <value name="RED">
                                            <block type="variables_get">
                                              <title name="VAR">counter</title>
                                            </block>
                                          </value>
                                          <value name="GREEN">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">MINUS</title>
                                              <value name="A">
                                                <block type="math_number">
                                                  <title name="NUM">255</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <value name="BLUE">
                                            <block type="math_number">
                                              <title name="NUM">255</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_move" inline="true">
                                          <title name="DIR">moveForward</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">5</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 1:
        Course_4_SCV_1_a: 'Variables are helpful because you can add to them each
          time through a loop. '
        Course_4_SCV_1_b: This puzzle has one loop that creates the polygon, one loop
          that repeats the polygon `sides` times, then another loop that does it all
          again after adding 5 to `sides`.
        Course_4_SCV_1_c: Using a variable for `sides` and one for `length` makes
          the code cleaner because you can loop the same code multiple times, instead
          of creating a new copy for each set of numbers.
        Course_4_SCV_1_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">length</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">500</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">sides</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">0</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_colour" inline="true" id="draw-color">
                                  <value name="COLOUR">
                                    <block type="colour_random"/>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">sides</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">5</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="controls_repeat_ext" inline="true">
                                              <value name="TIMES">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                              <statement name="DO">
                                                <block type="draw_move" inline="true">
                                                  <title name="DIR">moveForward</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_turn" inline="true">
                                                      <title name="DIR">turnLeft</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">DIVIDE</title>
                                                          <value name="A">
                                                            <block type="math_number">
                                                              <title name="NUM">360</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </statement>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnRight</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="math_number">
                                                          <title name="NUM">360</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 2:
        Course_4_SCV_2_a: |-
          The completed image is made up of 10 of these "flowers":\
          ![](https://images.code.org/bac2a606dfa59c00409294499540267d-image-1469641972385.png)

          ...which are made up of 10 of these decagons:\
          ![](https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4-image-1469642051512.png)
        Course_4_SCV_2_b: 'This design uses nested loops (three deep). All loops run
          `sides` times. '
        Course_4_SCV_2_c: The artist turns to the left when creating each decagon,
          but turns to the right in both of the other loops.
        Course_4_SCV_2_d: To prevent all of your 10 petal "flowers" from getting drawn
          in the same place, make sure to jump forward by `length`/`sides` before
          you turn 360/`sides` degrees as part of your outermost loop.
        Course_4_SCV_2_e: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">length</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">400</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">sides</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_colour" inline="true" id="draw-color">
                                  <value name="COLOUR">
                                    <block type="colour_picker">
                                      <title name="COLOUR">#ff0000</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">sides</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="variables_get">
                                                      <title name="VAR">length</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="math_number">
                                                          <title name="NUM">360</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </statement>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </statement>
                                      <next>
                                        <block type="jump" inline="true">
                                          <title name="DIR">jumpForward</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">length</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 3:
        Course_4_SCV_3_a: 'Use your math block to add and subtract points to the `points`
          variable when sprites collide. '
        Course_4_SCV_3_b: You can change the parameter for how far you move your sprite
          each time one of the arrow keys is pressed.
        Course_4_SCV_3_c: |-
          **समाधान:**

          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">up</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">down</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">left</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">right</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">points</title>
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">points</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 4:
        Course_4_SCV_4_a: Three variables will help you out here.  One for units of
          nectar, one for units of honey, and one for how far the bee should move
          each iteration.
        Course_4_SCV_4_b: 'It will be very helpful to use three loops inside of your
          main loop.  One for moving forward, one for collecting nectar and one for
          making honey. '
        Course_4_SCV_4_c: |-
          गतिविधि के लिए इस विकल्प पर एक नज़र डालें।

          ![](https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)
        Course_4_SCV_4_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">honey</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">nectar</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">6</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">5</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">nectar</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">1</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">nectar</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_nectar"/>
                                  </statement>
                                  <next>
                                    <block type="maze_moveForward">
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">honey</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="maze_honey"/>
                                          </statement>
                                          <next>
                                            <block type="maze_moveForward">
                                              <next>
                                                <block type="maze_turn">
                                                  <title name="DIR">turnRight</title>
                                                  <next>
                                                    <block type="variables_set" inline="false">
                                                      <title name="VAR">honey</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">ADD</title>
                                                          <value name="A">
                                                            <block type="variables_get">
                                                              <title name="VAR">honey</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="math_number">
                                                              <title name="NUM">1</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">nectar</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">MINUS</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">nectar</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">1</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 5:
        Course_4_SCV_5_a: |-
          Take a look at this option for movement:

          ![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_b: Each time through the loop, the flowers have two less nectar
          and the bee needs to make one more honey.
        Course_4_SCV_5_c: Notice that at the beginning of the outside loop, the bee
          moves as many times as there is nectar in the next flower.
        Course_4_SCV_5_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">honey</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">nectar</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">nectar</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">nectar</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_nectar"/>
                                      </statement>
                                      <next>
                                        <block type="maze_move">
                                          <title name="DIR">moveForward</title>
                                          <next>
                                            <block type="controls_repeat_ext" inline="true">
                                              <value name="TIMES">
                                                <block type="variables_get">
                                                  <title name="VAR">honey</title>
                                                </block>
                                              </value>
                                              <statement name="DO">
                                                <block type="maze_honey"/>
                                              </statement>
                                              <next>
                                                <block type="variables_set" inline="false">
                                                  <title name="VAR">honey</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">honey</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="variables_set" inline="false">
                                                      <title name="VAR">nectar</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">nectar</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 6:
        Course_4_SCV_6_a: |-
          Take a look at what a single completed shape looks like

          ![](https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)
        Course_4_SCV_6_b: 'You will benefit from creating 8 variables: red1, green1,
          blue1, red2, green2, blue2, length, and sides.'
        Course_4_SCV_6_c: Each of the shape's 5 sides is broken up into pieces of
          `length`/`sides` where the zig is teal (rgb = 0,175,200) and the zag is
          purple (rgb = 100, 50, 150).
        Course_4_SCV_6_d: 'To zig, turn left by `360`/`sides`.  To zag, turn right
          by `360`/`sides`. '
        Course_4_SCV_6_e: 'The rest of the program is very standard for making a full
          360 degree rotation from a shape, except that we are overlapping the shapes
          by half, so we have to turn right by `180`/`sides`, which means that we
          need twice as many of them as usual (`sides`\*`2` repetitions). '
        Course_4_SCV_6_f: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">red1</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">0</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">green1</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">175</title>
                            </block>
                          </value>
                          <next>
                            <block type="variables_set" inline="false">
                              <title name="VAR">blue1</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <next>
                                <block type="variables_set" inline="false">
                                  <title name="VAR">red2</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">100</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">green2</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">50</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="variables_set" inline="false">
                                          <title name="VAR">blue2</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">150</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="variables_set" inline="false">
                                              <title name="VAR">length</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">70</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="variables_set" inline="false">
                                                  <title name="VAR">sides</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">5</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="controls_repeat_ext" inline="true">
                                                      <value name="TIMES">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">MULTIPLY</title>
                                                          <value name="A">
                                                            <block type="math_number">
                                                              <title name="NUM">2</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                      <statement name="DO">
                                                        <block type="controls_repeat_ext" inline="true">
                                                          <value name="TIMES">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                          <statement name="DO">
                                                            <block type="controls_repeat_ext" inline="true">
                                                              <value name="TIMES">
                                                                <block type="variables_get">
                                                                  <title name="VAR">sides</title>
                                                                </block>
                                                              </value>
                                                              <statement name="DO">
                                                                <block type="draw_colour" inline="true" id="draw-color">
                                                                  <value name="COLOUR">
                                                                    <block type="colour_rgb" inline="false">
                                                                      <value name="RED">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">red1</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="GREEN">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">green1</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="BLUE">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">blue1</title>
                                                                      </block>
                                                                      </value>
                                                                    </block>
                                                                  </value>
                                                                  <next>
                                                                    <block type="draw_move" inline="true">
                                                                      <title name="DIR">moveForward</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">length</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_turn" inline="true">
                                                                      <title name="DIR">turnLeft</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_colour" inline="true" id="draw-color">
                                                                      <value name="COLOUR">
                                                                      <block type="colour_rgb" inline="false">
                                                                      <value name="RED">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">red2</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="GREEN">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">green2</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="BLUE">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">blue2</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_move" inline="true">
                                                                      <title name="DIR">moveForward</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">length</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_turn" inline="true">
                                                                      <title name="DIR">turnRight</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                    </block>
                                                                  </next>
                                                                </block>
                                                              </statement>
                                                              <next>
                                                                <block type="draw_turn" inline="true">
                                                                  <title name="DIR">turnRight</title>
                                                                  <value name="VALUE">
                                                                    <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </next>
                                                            </block>
                                                          </statement>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_arithmetic" inline="true">
                                                                  <title name="OP">DIVIDE</title>
                                                                  <value name="A">
                                                                    <block type="math_number">
                                                                      <title name="NUM">180</title>
                                                                    </block>
                                                                  </value>
                                                                  <value name="B">
                                                                    <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </statement>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      CourseD_Dance_Party_01:
        validation: "\\*\\* मैं इस लेवल को कैसे पास करूं? \\*\\*\n\n-   आपके स्क्रीन
          पर एक डांसर दिखना चाहिए \n\n\\_ यह  लेवल 4 उपायों के बाद ख़त्म होता है"
        challenges: |-
          "**वैकल्पिक चुनौतियां**

          -   प्ले करने के लिए अलग गाना चुनें।
          -   अपने डांसर को दुबारा नाम दें।"
      CourseD_Dance_Party_02:
        validation: |-
          "**मैं यह स्तर कैसे पास करूं?**

          -   डांसर को 4 संगीत प्रविधियों के बाद नए मूव के लिए अदला-बदली करने की आवश्यकता है।

          _स्तर 7 संगीत प्रविधियों के बाद समाप्त होता है।_"
      CourseD_Dance_Party_03:
        validation: |-
          "**मैं यह स्तर कैसे पास करूं?**

          -   6 संगीत प्रविधियों के बाद, आपके डांसर को 4 संगीत प्रविधियों के बाद वाले डांस से अलग डांसर करने की आवश्यकता होती है।

          _स्तर 11 संगीत प्रविधियों के बाद समाप्त होता है।_"
      CourseD_Dance_Party_04:
        validation: |-
          **मैं यह स्तर कैसे पास करूं?**

          -   कभी-कभार आपको गाने की सातवीं संगीत प्रविधि से पहले पृष्ठभूमि प्रभाव बदलने की आवश्यकता होती है।

          _यह स्तर 9 संगीत प्रविधियों के बाद समाप्त होता है।_
        challenges: |-
          **वैकल्पिक चुनौती**

          <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> इवेंट्स के नीचे नए ब्लॉक से जोड़ते हुए गाने के दौरान अलग बिंदुओं पर पृष्ठभूमि प्रभाव बदलें।
      CourseD_Dance_Party_06:
        validation: |-
          "**मैं यह स्तर कैसे पास करूं?**

          -   आपको कम से कम दो डांसर लेने की आवश्यकता है।

          _यह स्तर 5 संगीत प्रविधियों के बाद समाप्त होता है।_"
        challenges: "**वैकल्पिक चुनौती** - अन्य विशेषताओं (चौड़ाई, ऊंचाई, आवर्तन)
          को बदलकर प्रयोग करें"
      CourseD_Dance_Party_08:
        validation: "**मैं यह स्तर कैसे पास करूं?** - दो डांसरों को 100 के अलावा कोई
          और आकार देने की आवश्यकता है। _यह स्तर 5 संगीत प्रविधियों के बाद समाप्त होता
          है।_"
        challenges: "**वैकल्पिक चुनौती** - अन्य विशेषताओं (चौड़ाई, ऊंचाई, आवर्तन)
          को बदलकर प्रयोग करें"
      CourseD_Dance_Party_09:
        validation: "**मैं यह स्तर कैसे पास करूं?** - कम से कम एक डांसर की रंगत बदलें।
          _यह स्तर 7 संगीत प्रविधियों के बाद समाप्त होता है।_"
      CourseD_Dance_Party_10:
        validation: "**मैं यह स्तर कैसे पास करूं?** - दो या अधिक डांसरों के लिए विशेषताएं
          को बदलना आवश्यक हैं। _यह स्तर 7 संगीत प्रविधियों के बाद समाप्त होता है।_"
      CourseD_Dance_Party_11:
        validation: "**मैं यह स्तर कैसे पास करूं?** - रचनात्मक बनें! _यह स्तर 7 संगीत
          प्रविधियों के बाद समाप्त होता है।_"
      CourseD_Dance_Party_11_5:
        validation: "**मैं यह स्तर कैसे पास करूं?** - रचनात्मक बनें! _यह स्तर 7 संगीत
          प्रविधियों के बाद समाप्त होता है।_"
      CourseD_Dance_Party_11b:
        validation: "**मैं यह स्तर कैसे पास करूं?** - आपके दबाने पर रोबोट को डांस
          मूव के लिए सक्रिय करने हेतु `जब दाएं तीर वाला बटन दबाया जाए` ब्लॉक का उपयोग
          करें। _यह स्तर 7 संगीत प्रविधियों के बाद समाप्त होता है।_"
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: See the **Sea Lanterns** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          How can you use a conditional with them to get through the Ocean Monument?
      CourseE_HOC 2018 Level_7a:
        aquatic7: You can use the if path block to help you make the right turns.
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: See the red and blue coral blocks? Use them as guideposts
          to turn right and left through the reef.
      Dance_2019_01:
        validation: "\\*\\* मैं इस लेवल को कैसे पास करूं? \\*\\*\n\n-   आपके स्क्रीन
          पर एक डांसर दिखना चाहिए \n\n\\_ यह  लेवल 4 उपायों के बाद ख़त्म होता है"
        challenges: |-
          **ऐच्छिक चुनौतियां**

          -   चलाने के लिए कोई और गीत चुनें।
          -   अपने किरदार को किसी और जगह पर ले जाएं।
          -   एक से ज़्यादा डांसर बनाएं।
      Dance_2019_02:
        validation: |-
          **मैं यह स्तर कैसे पास करूं?**

          -   डांसर को कोई मूव करनी ज़रूरी है।
          -   आपको एक तीर का बटन दबाना है।

          _यह स्तर 4 संगीत प्रविधियों के बाद खत्म होगा।_
        challenges: |-
          **ऐच्छिक चुनौती**

          -   एक से ज़्यादा <xml><block type="Dancelab_whenKey"><title name="KEY"></title></block></xml> ब्लॉक इस्तेमाल करें।
      Dance_2019_03:
        validation: |-
          **मैं यह स्तर कैसे पास करूं?**

          -   दोनों डासरों को एक मूव करनी होगी।
          -   आपको तीर के बटन दबाने हैं।

          _यह स्तर 4 संगीत प्रविधियों के बाद खत्म होगा।_
        challenges: |-
          **ऐच्छिक चुनौती**

          -   एक डांसर से बाएँ और दाएँ तीर के बटन दबाने पर कुछ कराएं।
      Dance_2019_04:
        validation: |-
          "**मैं यह स्तर कैसे पास करूं?**

          -   डांसर को 4 संगीत प्रविधियों के बाद नए मूव के लिए अदला-बदली करने की आवश्यकता है।

          _स्तर 7 संगीत प्रविधियों के बाद समाप्त होता है।_"
      Dance_2019_05:
        validation: |-
          "**मैं यह स्तर कैसे पास करूं?**

          -   6 संगीत प्रविधियों के बाद, आपके डांसर को 4 संगीत प्रविधियों के बाद वाले डांस से अलग डांसर करने की आवश्यकता होती है।

          _स्तर 11 संगीत प्रविधियों के बाद समाप्त होता है।_"
        challenges: |-
          **ऐच्छिक चुनौती**

          -   जब भी डांसर मूव बदलें तब बैकग्राउंड को भी बदलें।
      Dance_2019_06:
        validation: |-
          **मैं यह स्तर कैसे पास करूं?**

          -   एक मुख्य डांसर और पीछे डांस करने वाले डांसरों का एक समूह बनाएं।

          _यह स्तर 7 संगीत प्रविधियों के बाद समाप्त होता है।_
        challenges: |-
          **ऐच्छिक चुनौती**

          -   पीछे डांस करने वाले डांसरों के कई समूह बनाएं।
      Dance_2019_07:
        validation: |-
          **मैं यह स्तर कैसे पास करूं?**

          -   संगीत शुरू होने के बाद कम से कम एक डांसर का आकर बदलें।

          _यह स्तर 6 संगीत प्रविधियों के बाद समाप्त होता है।_
        challenges: "**वैकल्पिक चुनौती** - अन्य विशेषताओं (चौड़ाई, ऊंचाई, आवर्तन)
          को बदलकर प्रयोग करें"
      Dance_2019_08:
        validation: |-
          **मैं यह स्तर कैसे पास करूं?**

          -   कम से कम एक डांसर का रंग बदलें।

          _यह स्तर 6 संगीत प्रविधियों के बाद समाप्त होता है।_
        tint_hint: क्या आपने देखा कि आपके डांसर का रंग ठीक वैसा नहीं हुआ जैसा आपने
          चुना था? इसकी वजह यह है कि **tints** से आपका चुना हुआ रंग डांसर के रंग में
          मिल जाता है।
      Dance_2019_09:
        validation: |-
          **मैं यह स्तर कैसे पास करूं?**

          -   बस “Finish" का बटन दबा दें!
        repeat_every_ideas: |-
          **कुछ नए आइडिया चाहिए?**

          -   किसी डांसर का आकार लगातार बदल कर उसे बड़ा करें।
          -   किसी डांसर के घूमने की प्रॉपर्टी को लगातार बदल कर उसे गोल घुमाएं।
          -   किसी डांसर की क्षैतिज या लम्बवत स्थिति को लगातार बदल कर उसे स्क्रीनपर चलाएं।

          _उल्टा परिणाम पाने के लिए आप ऋणात्मक संख्याओं का इस्तेमाल भी कर सकते हैं!_
        next_previous: |-
          **ऐच्छिक चुनौती**

          -   आप मूव को `(Random)`, `(Next)`, या `(Previous)` पर सेट करके और इस नए इवेंट ब्लॉक का इस्तेमाल करके कई डांस मूव एक के बाद एक करा सकते हैं।
              <xml><block type="Dancelab_changeMoveEachLR">
              <title name="GROUP" config="sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DOG&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;ROBOT&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;">???</title>
              <title name="MOVE">"rand"</title>
              <title name="DIR">-1</title>
              </block></xml>
      Dance_Party_01:
        validation: "\\*\\* मैं इस लेवल को कैसे पास करूं? \\*\\*\n\n-   आपके स्क्रीन
          पर एक डांसर दिखना चाहिए \n\n\\_ यह  लेवल 4 उपायों के बाद ख़त्म होता है"
        challenges: |-
          "**वैकल्पिक चुनौतियां**

          -   प्ले करने के लिए अलग गाना चुनें।
          -   अपने डांसर को दुबारा नाम दें।"
      Dance_Party_02:
        validation: |-
          "**मैं यह स्तर कैसे पास करूं?**

          -   डांसर को 4 संगीत प्रविधियों के बाद नए मूव के लिए अदला-बदली करने की आवश्यकता है।

          _स्तर 7 संगीत प्रविधियों के बाद समाप्त होता है।_"
      Dance_Party_03:
        validation: |-
          "**मैं यह स्तर कैसे पास करूं?**

          -   6 संगीत प्रविधियों के बाद, आपके डांसर को 4 संगीत प्रविधियों के बाद वाले डांस से अलग डांसर करने की आवश्यकता होती है।

          _स्तर 11 संगीत प्रविधियों के बाद समाप्त होता है।_"
      Dance_Party_04:
        validation: |-
          **मैं यह स्तर कैसे पास करूं?**

          -   कभी-कभार आपको गाने की सातवीं संगीत प्रविधि से पहले पृष्ठभूमि प्रभाव बदलने की आवश्यकता होती है।

          _यह स्तर 9 संगीत प्रविधियों के बाद समाप्त होता है।_
        challenges: |-
          **वैकल्पिक चुनौती**

          <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> इवेंट्स के नीचे नए ब्लॉक से जोड़ते हुए गाने के दौरान अलग बिंदुओं पर पृष्ठभूमि प्रभाव बदलें।
      Dance_Party_05:
        validation: |-
          **मैं यह स्तर कैसे पास करूं?**

          -   स्तर खत्म होने से पहले आपके डांसर को कम से कम 4 अलग-अलग डांस मूव्स के द्वारा चक्कर बनाने की जरूरत है।

          _यह स्तर 12 संगीत प्रविधियों के बाद समाप्त होता है।_
      Dance_Party_06:
        validation: |-
          "**मैं यह स्तर कैसे पास करूं?**

          -   आपको कम से कम दो डांसर लेने की आवश्यकता है।

          _यह स्तर 5 संगीत प्रविधियों के बाद समाप्त होता है।_"
        challenges: "**वैकल्पिक चुनौती** - अन्य विशेषताओं (चौड़ाई, ऊंचाई, आवर्तन)
          को बदलकर प्रयोग करें"
      Dance_Party_08:
        validation: "**मैं यह स्तर कैसे पास करूं?** - दो डांसरों को 100 के अलावा कोई
          और आकार देने की आवश्यकता है। _यह स्तर 5 संगीत प्रविधियों के बाद समाप्त होता
          है।_"
        challenges: "**वैकल्पिक चुनौती** - अन्य विशेषताओं (चौड़ाई, ऊंचाई, आवर्तन)
          को बदलकर प्रयोग करें"
      Dance_Party_09:
        validation: "**मैं यह स्तर कैसे पास करूं?** - कम से कम एक डांसर की रंगत बदलें।
          _यह स्तर 7 संगीत प्रविधियों के बाद समाप्त होता है।_"
      Dance_Party_10:
        validation: "**मैं यह स्तर कैसे पास करूं?** - दो या अधिक डांसरों के लिए विशेषताएं
          को बदलना आवश्यक हैं। _यह स्तर 7 संगीत प्रविधियों के बाद समाप्त होता है।_"
      Dance_Party_11:
        validation: "**मैं यह स्तर कैसे पास करूं?** - रचनात्मक बनें! _यह स्तर 7 संगीत
          प्रविधियों के बाद समाप्त होता है।_"
      Dance_Party_11_5:
        validation: "**मैं यह स्तर कैसे पास करूं?** - रचनात्मक बनें! _यह स्तर 7 संगीत
          प्रविधियों के बाद समाप्त होता है।_"
      Dance_Party_11b:
        validation: "**मैं यह स्तर कैसे पास करूं?** - आपके दबाने पर रोबोट को डांस
          मूव के लिए सक्रिय करने हेतु `जब दाएं तीर वाला बटन दबाया जाए` ब्लॉक का उपयोग
          करें। _यह स्तर 7 संगीत प्रविधियों के बाद समाप्त होता है।_"
      Dance_Party_extras_alternate_2019:
        alternate: वैकल्पिक ब्लॉक "डांसर्स" श्रेणी में हैं।
      Function intro Ryan:
        Function_intro_Ryan_b: If you call the functions correctly, this is the path
          you will travel...
        Function_intro_Ryan_a: You can call a function many times inside of your program!  Try
          calling it twice to solve this puzzle.
      Function intro Ryan_2019:
        Function_intro_Ryan_b: If you call the functions correctly, this is the path
          you will travel...
        Function_intro_Ryan_a: You can call a function many times inside of your program!  Try
          calling it twice to solve this puzzle.
      HOC 2018 Level_10:
        voyage_aquatic_10a: See the **Sea Lanterns** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          How can you use a conditional with them to get through the Ocean Monument?
      HOC 2018 Level_7a:
        aquatic7: You can use the if path block to help you make the right turns.
      HOC 2018 Level_9b:
        voyage_aquatic_9a: See the red and blue coral blocks? Use them as guideposts
          to turn right and left through the reef.
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: Drag one `move forward` block from the toolbox to
          the workspace, and snap it into place beneath the `when run` block.
        MC_HOC_2017_01_RETRY_b: Don't forget to click "Run" to run the code for the
          Agent.
        MC_HOC_2017_01_RETRY_c: Once the Agent has run all of its code, you can move
          the player with the arrow keys!
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: Drag one `move forward` block from the toolbox to
          the workspace, and snap it into place beneath the `when run` block.
        MC_HOC_2017_01_RETRY_b: Don't forget to click "Run" to run the code for the
          Agent.
        MC_HOC_2017_01_RETRY_c: Once the Agent has run all of its code, you can move
          the player with the arrow keys!
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Move the Agent forward two spaces to stand on the pressure
          plate.  That will open the door for your player.
        MC_HOC_2017_02_Cole_b: |-
          Press "Run"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_02_Cole_c: Once the Agent has opened the door, use the arrow keys
          to move the player to the map!
        MC_HOC_2017_02_Cole_d: Make sure the Agent is following the path outlined
          on the map!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Move the Agent forward two spaces to stand on the pressure
          plate.  That will open the door for your player.
        MC_HOC_2017_02_Cole_b: |-
          Press "Run"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_02_Cole_c: Once the Agent has opened the door, use the arrow keys
          to move the player to the map!
        MC_HOC_2017_02_Cole_d: Make sure the Agent is following the path outlined
          on the map!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Once you get the Agent to the pressure plate, you can
          use your arrow keys to walk the player to the compass!
        MC_HOC_2017_03_Cole_b: Does the code feel a little long?  Try using a `repeat`
          loop and see if you can figure out how to make it shorter!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Once you get the Agent to the pressure plate, you can
          use your arrow keys to walk the player to the compass!
        MC_HOC_2017_03_Cole_b: Does the code feel a little long?  Try using a `repeat`
          loop and see if you can figure out how to make it shorter!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: 'Use the `turn right` block to change the agent''s
          direction '
        MC_HOC_2017_04POINT5_RYAN_a: The Agent only needs to get to the first pressure
          plate to let Alex or Steve through to the axe.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: 'Use the `turn right` block to change the agent''s
          direction '
        MC_HOC_2017_04POINT5_RYAN_a: The Agent only needs to get to the first pressure
          plate to let Alex or Steve through to the axe.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: The Agent needs to `move forward` 7 times.  How can
          you use a `repeat` loop to make that happen?
        MC_HOC_2017_04_Cole_c: |-
          Press "Run"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_04_Cole_b: Once the Agent gets to the pressure plate, the Agent
          will open the door for the player.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: The Agent needs to `move forward` 7 times.  How can
          you use a `repeat` loop to make that happen?
        MC_HOC_2017_04_Cole_c: |-
          Press "Run"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_04_Cole_b: Once the Agent gets to the pressure plate, the Agent
          will open the door for the player.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: Did you know that you can put more than one piece of
          code inside of a loop?  Try moving forward **and** placing a plank inside
          of a `repeat` to complete this puzzle.
        MC_HOC_2017_05_Cole_b: Get the Agent across the river, building a bridge as
          you go.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: Did you know that you can put more than one piece of
          code inside of a loop?  Try moving forward **and** placing a plank inside
          of a `repeat` to complete this puzzle.
        MC_HOC_2017_05_Cole_b: Get the Agent across the river, building a bridge as
          you go.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: How many times does this loop run?  How many times
          _should_ it run?
        MC_HOC_2017_06_Cole_b: 'Help the Agent build a bridge all the way across the
          water! '
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: How many times does this loop run?  How many times
          _should_ it run?
        MC_HOC_2017_06_Cole_b: 'Help the Agent build a bridge all the way across the
          water! '
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: All you need to have the Agent do is clear the path
          to the Minecart.
        MC_HOC_2017_07_Cole_a: To solve this puzzle, figure out what the `clear path`
          function does and call it as many times as you need using the small green
          `clear path` block from the toolbox.
        MC_HOC_2017_07_Cole_b: Try mixing the function blocks with other blocks from
          the toolbox to help you solve this puzzle.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: All you need to have the Agent do is clear the path
          to the Minecart.
        MC_HOC_2017_07_Cole_a: To solve this puzzle, figure out what the `clear path`
          function does and call it as many times as you need using the small green
          `clear path` block from the toolbox.
        MC_HOC_2017_07_Cole_b: Try mixing the function blocks with other blocks from
          the toolbox to help you solve this puzzle.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: Don't know where to go?  See if you can find the dotted
          line!
        MC_HOC_2017_10_Cole_a: Use functions to make solving this puzzle easier!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: Don't know where to go?  See if you can find the dotted
          line!
        MC_HOC_2017_10_Cole_a: Use functions to make solving this puzzle easier!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: |-
          Press "Run"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_08_RY_b: There are LOTS of ways to solve this puzzle.  Try a few!
        MC_HOC_2017_08_RY_c: Try following the dotted line for a simple path through
          the lava.
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: |-
          Press "Run"!

          You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.
        MC_HOC_2017_08_RY_b: There are LOTS of ways to solve this puzzle.  Try a few!
        MC_HOC_2017_08_RY_c: Try following the dotted line for a simple path through
          the lava.
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Try having the Agent build some minecart tracks so
          you can explore the world!
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Try having the Agent build some minecart tracks so
          you can explore the world!
      NEW Course 4 Artist Functions 13:
        NEW_Course_4_Artist_Functions_13_a: Try editing the `draw a line of squares`
          function so that you don't have to call it twice.
        NEW_Course_4_Artist_Functions_13_c: What code would you need if you were going
          to try to make a star using regular lines instead of boxes?
      NEW Course 4 Artist Functions 4:
        NEW_Course_4_Artist_Functions_4_a: You will have to use a `turn right by 120
          degrees` block after each square.
      NEW Course 4 Artist Functions 9:
        NEW_Course_4_Artist_Functions_9_a: Try running the code before you add any
          blocks.   What makes the drawing look a little off?
        NEW_Course_4_Artist_Functions_9_b: If you can't quite put your finger on what's
          going wrong, try slowing down the artist's by moving the slider to the left.
      NEW Course 4 Artist Params 11:
        NEW_Course_4_Artist_Params_11_a: There is more than one number that needs
          to be replaced by a variable inside the function.
      NEW Course 4 Artist Params 13:
        NEW_Course_4_Artist_Params_13_a: 'You will need to divide the _perimeter_
          by the number of sides in order to keep the shapes the same size overall. '
      NEW Course 4 Artist Params 14:
        NEW_Course_4_Artist_Params_14_a: यह पता लगाने के लिए थोड़ी बार प्रोग्राम चलाना
          सही है कि अलग-अलग मापदंडों के साथ आपका फंक्शन कैसे काम करता है।
      NEW Course 4 Artist Params inspire:
        brush_width: We set the brush width to 1, then the color to blue before we
          did anything else.
        double_loop: Try putting a `for loop` inside of a `repeat` loop.
        specifics: |-
          The `for loop` runs from three to seventeen for each of the six "petals" before moving on to create the next, drawing shapes with only an odd number of sides.

          The `set alpha` block uses division to fade the color as the counter gets higher.
        after: When you're done with each "petal", be sure to `move forward` 20 pixels
          before you make a 60 degree rotation.
        solution: |-
          **Solution**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">6</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_for_counter" inline="true">
                            <mutation counter="counter"></mutation>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">17</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="alpha" inline="true" id="alpha">
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">DIVIDE</title>
                                      <value name="A">
                                        <block type="math_number">
                                          <title name="NUM">500</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="procedures_callnoreturn" inline="false">
                                      <mutation name="draw a polygon">
                                      <arg name="length"></arg>
                                      <arg name="sides"></arg>
                                      </mutation>
                                      <value name="ARG0">
                                        <block type="math_number">
                                          <title name="NUM">30</title>
                                        </block>
                                      </value>
                                      <value name="ARG1">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">20</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">60</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            </xml>
      NEW Course 4 Bee For Loops 10a:
        NEW_Course_4_Bee_For_Loops_10a_a: क्या आप स्टेप्स की संख्या के बीच पैटर्न
          ढूंढ सकते हैं, जिसे आपको लेने और मधुरस एकत्र करने के लिए जरूरत है?
        NEW_Course_4_Bee_For_Loops_10a_b: आपको 2 दोहराव प्राप्त करने की जरूरत होगी,
          एक गणित ब्लॉक का उपयोग करेगा।
      NEW Course 4 Bee For Loops 7:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          काउंटर वेरिएबल के साथ थोड़ा गणित करने का प्रयास करें।

          मधुरस की जितनी मात्रा आपको एकत्र करने की जरूरत है, उसके बराबर प्रत्येक फूल पर काउंटर के लिए आपको क्या करने की जरूरत है?
      NEW Course 4 Bee For Loops 8:
        NEW_Course_4_Bee_For_Loops_8_a: "If your loop is counting up, the increment
          is added to your counter variable each time through. \n\nWhat do you need
          to add to each number to get the number after it?"
      New Minecraft Hero Project:
        MC_HOC_2017_13_Cole_a: Try having the Agent build some bridges so that Alex
          or Steve can walk around beyond the edges of the map.
      OPD-K5-events-2:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      OPD-K5-events-3:
        courseC_flappy_events2_a: आपको जो ब्लॉक जोड़ने की जरूरत है, उसे `गति तय करें`
          कहा जाता है।
        courseC_flappy_events2_b: इस पहेली को हल करने के लिए `गति तय करें` ब्लॉक को
          `जब चलाया जाए` ब्लॉक से जोड़ें।
      OPD-K5-events-4:
        courseC_flappy_events3_a: यदि कुछ सही ढंग से काम नहीं कर रहा है, तो सुनिश्चित
          करें कि आपके ब्लॉक्स वर्कस्पेस में सही इवेंट्स से जुड़े हुए नहीं हैं।
      OPD-K5-events-5:
        courseC_flappy_events4_a: इस पहेली को हल करने के लिए `गेम खत्म करें` ब्लॉक
          को `जब किसी बाधा से टकराएं` के साथ जोड़ें।
      OPD-K5-events-6:
        courseC_flappy_events5_a: इस स्तर को पास करने के लिए आपको `अंक हासिल करें`
          ब्लॉक का उपयोग करने की जरूरत होगी।
      OPD-K5-forloops-1:
        courseF_bee_for1_a: इसे यह बताने के लिए कि यह कितनी बार दोहराए, `दोहराएं`
          लूप पर खाली स्थान में बैंगनी नंबर ब्लॉक को खींचें।
        courseF_bee_for1_b: सारा मधुरस एकत्र करने के लिए आपको अपनी ‘दोहराएं’ लूप में
          दो ब्लॉक्स की जरूरत होगी।
      OPD-K5-forloops-2:
        courseF_bee_for2_a: यदि आप उलझन में हैं, तो एक बार एक फूल पर काम करें और बार-बार
          परीक्षण करें।
        courseF_bee_for2_b: प्रत्येक लूप के बीच में आगे की ओर मूव करना याद रखें, ताकि
          आप प्रत्येक फूल के पास पहुंच सकें।
      OPD-K5-forloops-5:
        courseF_bee_for4_a: इस पहेली को हल करने के लिए `फॉर` लूप का उपयोग करें, जो
          1 की वृद्धि के साथ 1 से 7 तक जाती है।
        courseF_bee_for4_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for4_c: पर्याप्त मधुरस प्राप्त करने के लिए अपनी नेस्टड `दोहराएं`
          लूप के अंदर `काउंटर` वेरिएबल का उपयोग करना सुनिश्चित करें!
      OPD-K5-forloops-6:
        courseF_bee_for6_a: अपनी `दोहराएं` लूप के अंदर `काउंटर` वेरिएबल का उपयोग करना
          न भूलें।
        courseF_bee_for6_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for6_c: आपकी लूप **5 से 1 तक** की गिनती करेगी।
      OPD-K5-forloops-7:
        courseF_bee_for7_a: आपकी `फॉर` लूप को 1 से 7 गुणा 2 तक गिनने की जरूरत होगी।
        courseF_bee_for7_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for7_c: अपनी `दोहराएं` लूप में `काउंटर` वेरिएबल का उपयोग करना
          याद रखें।
      OPD-K5-projects-2:
        courseE_playLab_scaffold1_a: "`अभिनेता 1 को ??? चित्र पर सेट करें` ब्लॉक का
          उपयोग स्टेज पर अभिनेता जोड़ने के लिए किया जा सकता है।"
        courseE_playLab_scaffold1_b: प्रोग्राम के शुरू में अपने अभिनेता को प्रकट करने
          के लिए `जब चलाया जाए` के अंतर्गत `अभिनेता सेट करें` ब्लॉक रखें।
        courseE_playLab_scaffold1_c: अपने दृश्य में पृष्ठभूमि चुनने के लिए `??? पृष्ठभूमि
          सेट करें` का उपयोग करें।
      OPD-K5-projects-3:
        courseE_playLab_scaffold1_a: ब्लॉक नियंत्रणों की दिशा को बदलने के लिए `जब
          ____ तीर` इवेंट के ड्रॉपडाउन मेन्यु चलाएं।
        courseE_playLab_scaffold1_b: प्रत्येक को नीचे मूव करने की दिशा के साथ, आपके
          पास चार `जब तीर` इवेंट ब्लॉक्स होने चाहिएं।
        courseE_playLab_scaffold1_c: जब आप पूरा कर लें, तो आप तीर वाली कुंजियों के
          साथ अपने हीरो को इधर-उधर मूव करने में सक्षम होंगे!
      OPD-K5-projects-5:
        courseE_playLab_scaffold4_a: अंक जोड़ने के लिए `अंक स्कोर करें` और एक घटाने
          के लिए `अंक हटाएं` का उपयोग करें।
      OPD-K5-variables-1:
        grade5_artist_variables_triangles1_a: इस त्रिकोण में 60 डिग्री का अंदरूनी
          कोण बनाने के लिए, कलाकार को 120 डिग्री मोड़ना याद रखें।
        grade5_artist_variables_triangles1_b: अपने कोड को और छोटा बनाने के लिए `दोहराएं`
          लूप का उपयोग करें।
        grade5_artist_variables_triangles1_c: अपनी लूप के अंदर, आप 50 पिक्सल आगे मूव
          करना, फिर 120 डिग्री बाएं मुड़ना चाहेंगे।
      OPD-K5-variables-2:
        courseF_artist_variables2_a: प्रत्येक त्रिकोण बनाने के बार आगे की ओर मूव करना
          याद रखें।
        courseF_artist_variables2_b: आपकी नई लूप में आपके त्रिकोण, फिर `आगे की ओर
          मूव करें` कमांड के लिए लूप होगी।
      OPD-K5-variables-5:
        courseF_artist_variables3_a: 'वेरिएबल `लंबाई` आपके कोड में दो स्थानों पर उपयोग
          की जाएगी: आपके त्रिकोण की भुजा लंबाई में, और उस मात्रा में, जितना आप त्रिकोणों
          के बीच आगे की ओर मूव करते हैं।'
        courseF_artist_variables3_b: 'A number block with value 50 should only be
          in one place: after the `set length` block.'
      OPD-K5-variables-6:
        courseF_artist_variables4_a: Your code won't be much different than it was
          in the last puzzle, except that you will need to turn the artist to jump
          down, then turn him back to get ready to draw the next triangle.
        courseF_artist_variables4_c: |-
          यह वह पैटर्न है, जिसका अनुसरण आपका कलाकार करेगा:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: |-
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">50</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="controls_repeat_ext">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">120</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="jump">
                              <title name="DIR">jumpForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">90</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="jump">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      OPD-K5-variables-7:
        courseF_artist_variables5_a: आपके कोड का दूसरा आधा हिस्सा लगभग पहले आधे हिस्से
          की तरह दिखाई देगा, सिवाय इसके कि आप मुड़ना_बाएं_, कूदना, फिर मुड़ना _दाएं_
          करेंगे।
        courseF_artist_variables5_b: आपके कोड का पहला आधा हिस्सा तीन त्रिकोण खींचेगा,
          और दूसरा आधा हिस्सा अन्य तीन खींचेगा।
        courseF_artist_variables5_c: अपने प्रोग्राम के पहले आधे हिस्से में कोड की
          प्रतिलिपि तैयार करके शुरुआत करें, फिर इसे दिखाया गया डिज़ाइन बनाने के लिए
          बदलें।
        courseF_artist_variables5_d: |-
          यह वह पैटर्न है, जिसका अनुसरण आपका कलाकार करेगा:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      Overworld Avoid Monsters:
        mc_8_a: कुछे रास्ते हैं, जिन्हें आप ले सकते हैं। कौन-सा सबसे छोटा है?
        mc_8_b: अपने कोड को सरल बनाने के लिए `दोहराएं` लूप्स का उपयोग करें।
        mc_8_c: आपका लक्ष्य स्क्रीन के सबसे ऊपर स्थित घर के दरवाजे पर जाना है।
      Overworld Avoid Monsters_2019:
        mc_8_a: कुछे रास्ते हैं, जिन्हें आप ले सकते हैं। कौन-सा सबसे छोटा है?
        mc_8_b: अपने कोड को सरल बनाने के लिए `दोहराएं` लूप्स का उपयोग करें।
        mc_8_c: आपका लक्ष्य स्क्रीन के सबसे ऊपर स्थित घर के दरवाजे पर जाना है।
      Overworld Chop Tree:
        mc_2_a: आपको पेड़ के सामने खड़े होने के लिए दो बार `आगे की ओर मूव करें` की
          जरूरत है।
        mc_2_b: "`नष्ट करें ब्लॉक` कमांड आपके सामने के पेड़ काटती है।"
      Overworld Chop Tree_2019:
        mc_2_a: आपको पेड़ के सामने खड़े होने के लिए दो बार `आगे की ओर मूव करें` की
          जरूरत है।
        mc_2_b: "`नष्ट करें ब्लॉक` कमांड आपके सामने के पेड़ काटती है।"
      Overworld Chop Trees:
        mc_4_a: आप किसी भी क्रम में पेड़ों को काट सकते हैं। कौन-सा तरीका सबसे कम संख्या
          में ब्लॉक्स लेता है?
        mc_4_b: "`नष्ट करें ब्लॉक` कमांड आपके सामने के पेड़ काटती है।"
      Overworld Chop Trees_2019:
        mc_4_a: आप किसी भी क्रम में पेड़ों को काट सकते हैं। कौन-सा तरीका सबसे कम संख्या
          में ब्लॉक्स लेता है?
        mc_4_b: "`नष्ट करें ब्लॉक` कमांड आपके सामने के पेड़ काटती है।"
      Overworld House Frame Chosen:
        mc_6_a: आप क्या रखना चाहते हैं, उसे चुनने के लिए `रखें` ब्लॉक पर स्थित तीर
          पर क्लिक करें।
        mc_6_b: गलती होने से न डरें! यह देखने के लिए कि क्या होता है, कोड चलाएं, चाहे
          आपने अभी तक पहेली को हल नहीं किया है।
        mc_6_c: आप `दोहराएं` लूप के अंदर एक से अधिक ब्लॉक रख सकते हैं।
      Overworld House Frame Chosen_2019:
        mc_6_a: आप क्या रखना चाहते हैं, उसे चुनने के लिए `रखें` ब्लॉक पर स्थित तीर
          पर क्लिक करें।
        mc_6_b: गलती होने से न डरें! यह देखने के लिए कि क्या होता है, कोड चलाएं, चाहे
          आपने अभी तक पहेली को हल नहीं किया है।
        mc_6_c: आप `दोहराएं` लूप के अंदर एक से अधिक ब्लॉक रख सकते हैं।
      Overworld Move to Sheep:
        mc_1_a: "`आगे की ओर मूव करें` ब्लॉक टूलबॉक्स के ऊपर स्थित है।"
        mc_1_b: सुनिश्चित करें कि `आगे की ओर मूव करें` ब्लॉक्स `जब चलाया जाए` ब्लॉक
          के लिए इस्तेमाल किए गए हैं।
      Overworld Move to Sheep_2019:
        mc_1_a: "`आगे की ओर मूव करें` ब्लॉक टूलबॉक्स के ऊपर स्थित है।"
        mc_1_b: सुनिश्चित करें कि `आगे की ओर मूव करें` ब्लॉक्स `जब चलाया जाए` ब्लॉक
          के लिए इस्तेमाल किए गए हैं।
      Overworld Place Wall:
        mc_5_a: पहले `रखें` ब्लॉक का और फिर `मूव करें` ब्लॉक का उपयोग करें।
        mc_5_b: सुनिश्चित करें कि कोड को एक से अधिक बार चलाने के लिए दोनों ब्लॉक्स
          `दोहराएं` लूप के अंदर हैं।
        mc_5_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता है, कोड चलाएं, चाहे
          आपने अभी तक पहेली को हल नहीं किया है।
      Overworld Place Wall_2019:
        mc_5_a: पहले `रखें` ब्लॉक का और फिर `मूव करें` ब्लॉक का उपयोग करें।
        mc_5_b: सुनिश्चित करें कि कोड को एक से अधिक बार चलाने के लिए दोनों ब्लॉक्स
          `दोहराएं` लूप के अंदर हैं।
        mc_5_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता है, कोड चलाएं, चाहे
          आपने अभी तक पहेली को हल नहीं किया है।
      Overworld Plant Crops:
        mc_7_a: जहां आप खड़ें हैं, उस स्थान में फसल रोपने के लिए `फसल रोपें` ब्लॉक
          का उपयोग करें।
        mc_7_b: पानी के पास गहरी भूरी जमीन की दोनों पट्टियों को फसलों से भरने की जरूरत
          है।
        mc_7_c: आप `दोहराएं` लूप के अंदर एक से अधिक ब्लॉक रख सकते हैं।
      Overworld Plant Crops_2019:
        mc_7_a: जहां आप खड़ें हैं, उस स्थान में फसल रोपने के लिए `फसल रोपें` ब्लॉक
          का उपयोग करें।
        mc_7_b: पानी के पास गहरी भूरी जमीन की दोनों पट्टियों को फसलों से भरने की जरूरत
          है।
        mc_7_c: आप `दोहराएं` लूप के अंदर एक से अधिक ब्लॉक रख सकते हैं।
      Overworld Powered Minecart:
        mc_13_a: जिस वर्ग पर आप खड़े हैं, उस पर रेल की पटरी बिछाने के लिए `रेल की
          पटरी रखें` का उपयोग करें।
        mc_13_b: अपने कोड को और छोटा बनाने के लिए `दोहराएं` लूप्स का उपयोग करें।
      Overworld Powered Minecart_2019:
        mc_13_a: जिस वर्ग पर आप खड़े हैं, उस पर रेल की पटरी बिछाने के लिए `रेल की
          पटरी रखें` का उपयोग करें।
        mc_13_b: अपने कोड को और छोटा बनाने के लिए `दोहराएं` लूप्स का उपयोग करें।
      Overworld Shear Sheep:
        mc_3_a: "`ऊन कतरें` ब्लॉक आपके सामने भेड़ को प्राप्त करता है। क्या आप भेड़
          के सामने हैं?"
        mc_3_b: यदि आपको अपने सामने का रास्ता बदलने की जरूरत है, तो `मुड़ें` ब्लॉक
          का उपयोग करें।
        mc_3_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता है, कोड चलाएं, चाहे
          आपने अभी तक पहेली को हल नहीं किया है।
      Overworld Shear Sheep_2019:
        mc_3_a: "`ऊन कतरें` ब्लॉक आपके सामने भेड़ को प्राप्त करता है। क्या आप भेड़
          के सामने हैं?"
        mc_3_b: यदि आपको अपने सामने का रास्ता बदलने की जरूरत है, तो `मुड़ें` ब्लॉक
          का उपयोग करें।
        mc_3_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता है, कोड चलाएं, चाहे
          आपने अभी तक पहेली को हल नहीं किया है।
      Underground Avoiding Lava:
        mc_11_a: सारा कोड लावा को देखने और इससे निपटने के लिए स्थापित किया गया है।
          आपको बस मूव करने के लिए ब्लॉक जोड़ने की जरूरत है।
        mc_11_b: क्या आपकी `आगे की ओर मूव करें` कमांड `इफ` स्टेटमेंट या बाद में अंदर
          जाती है?
      Underground Avoiding Lava_2019:
        mc_11_a: सारा कोड लावा को देखने और इससे निपटने के लिए स्थापित किया गया है।
          आपको बस मूव करने के लिए ब्लॉक जोड़ने की जरूरत है।
        mc_11_b: क्या आपकी `आगे की ओर मूव करें` कमांड `इफ` स्टेटमेंट या बाद में अंदर
          जाती है?
      Underground If Statements:
        mc_12_a: लाल धब्बों वाले स्थान वे हैं, जहां आप लाल पत्थर पाएंगे।
        mc_12_b: क्या आप अपने कोड को और छोटा बनाने के लिए `दोहराएं` लूप का उपयोग कर
          सकते हैं?
        mc_12_c: लावा के लिए स्थान देखने हेतु `इफ` स्टेटमेंट का उपयोग करें, फिर फर्शी
          पत्थर रखें।
      Underground If Statements_2019:
        mc_12_a: लाल धब्बों वाले स्थान वे हैं, जहां आप लाल पत्थर पाएंगे।
        mc_12_b: क्या आप अपने कोड को और छोटा बनाने के लिए `दोहराएं` लूप का उपयोग कर
          सकते हैं?
        mc_12_c: लावा के लिए स्थान देखने हेतु `इफ` स्टेटमेंट का उपयोग करें, फिर फर्शी
          पत्थर रखें।
      Underground Iron:
        mc_10_a: आयरन ब्लॉक्स टॉर्च के पीछे के धब्बेदार स्थान हैं! आप वहां पहुंचने
          के लिए कैसे जाएंगे?
        mc_10_b: जब आप लावा के किनारे पर खड़े हों, तो सुरक्षित रास्ता बनाने के लिए
          `आगे फर्शी पत्थर रखें` का उपयोग करें। फिर, आप इसके ऊपर चल सकते हैं!
        mc_10_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता है, कोड चलाएं,
          चाहे आपने अभी तक पहेली को हल नहीं किया है।
      Underground Iron_2019:
        mc_10_a: आयरन ब्लॉक्स टॉर्च के पीछे के धब्बेदार स्थान हैं! आप वहां पहुंचने
          के लिए कैसे जाएंगे?
        mc_10_b: जब आप लावा के किनारे पर खड़े हों, तो सुरक्षित रास्ता बनाने के लिए
          `आगे फर्शी पत्थर रखें` का उपयोग करें। फिर, आप इसके ऊपर चल सकते हैं!
        mc_10_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता है, कोड चलाएं,
          चाहे आपने अभी तक पहेली को हल नहीं किया है।
      Underground Mining Coal:
        mc_9_a: क्या आप सही रास्ते के सामने हैं? `नष्ट करें ब्लॉक` आपके सामने के ब्लॉक
          का खनन करता है।
        mc_9_b: दीवार में काले धब्बे कोयला हैं! कोयले का खनन करने के लिए इन पर `नष्ट
          करें ब्लॉक` का उपयोग करें।
        mc_9_c: जहां आप खड़ें हैं, उस स्थान में टॉर्च रखने के लिए `टॉर्च रखें` का
          उपयोग करें।
      Underground Mining Coal_2019:
        mc_9_a: क्या आप सही रास्ते के सामने हैं? `नष्ट करें ब्लॉक` आपके सामने के ब्लॉक
          का खनन करता है।
        mc_9_b: दीवार में काले धब्बे कोयला हैं! कोयले का खनन करने के लिए इन पर `नष्ट
          करें ब्लॉक` का उपयोग करें।
        mc_9_c: जहां आप खड़ें हैं, उस स्थान में टॉर्च रखने के लिए `टॉर्च रखें` का
          उपयोग करें।
      behaviors 2:
        behavior hint: "Try editing the behaviors! \n\n-   Which direction does the
          rocket need to move?"
      behaviors 3:
        behavior hint: "Try editing the behaviors! \n\n-   Which value is controlling
          the speed of each sprite?"
      behaviors 3a:
        behavior hint: "Try editing the behaviors! \n\n-   Which value is controlling
          the speed of each sprite?"
      behaviors 5:
        target hint: You can pick any of the four ships. Which one does the astronaut
          want?
        behavior hint: Edit the behavior to solve this puzzle. The astronaut sprite
          needs to move in two different directions to end up going diagonally.
      behaviors 6:
        behavior hint: "Try editing the behaviors! \n\n-   Which value is controlling
          the speed of each sprite?"
      behaviors 7:
        behaviors_hint1: You can create a new behavior that uses two different actions
          or combine two existing behaviors.
        sprites_idea1: |-
          For fun, you can use a similar behavior to make a ship fly off into space or a character run to the foreground. Try changing the background and sprite costumes in your scene!

          ![](<https://images.code.org/7070e44239b53f4b33a5b4fe054bb61c-image-1567714335486.2019-09-05 16_05_19.gif>)

          ![](<https://images.code.org/278494432d56f1f5d41e345a51223695-image-1567714335485.2019-09-05 16_11_12.gif>)
      comment_intro_maze_2018:
        courseC_maze_programming4_a: Comments are also helpful when other people try
          to read your code.
        courseC_maze_programming4_b: Add a comment when you change directions- what
          would have happened if you turned the other way?
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_a: |-
          You can use loops like this to create the walls and the roof. Try repeating different blocks.

          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          Design your own or click the ![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) for some ideas!
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge2:
        harvey_tictactoe: You can use `jump` blocks to move to other spaces.
      course1_artist_loops_challenge3:
        courseA_artist_loops_challenge2_a: इस <xml>  <block type="simple_move_up_left"/></xml>
          तरह के ब्लॉक्स से आपका कलाकार तिरछा मूव कर पाएगा!
        courseA_artist_loops_challenge2_b: When you finish one bird house, `jump`
          to the next!
        courseA_artist_loops_challenge2_c: You will need a LOT of blocks inside the
          loop for this challenge.
      course1_artist_loops_challenge4:
        courseB_artist_loops_challenge1_a: इस <xml>  <block type="simple_move_up_right"/></xml>
          तरह के ब्लॉक्स से आपका कलाकार तिरछा मूव कर पाएगा!
        courseB_artist_loops_challenge1_b: जब एक पासा समाप्त करते हैं, तो अगले पर
          `कूदें`!
        courseB_artist_loops_challenge1_c: आपको कुछ समान लाइनों पर दो बार `मूव करने`
          या `कूदने` की जरूरत होगी।
      course1_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: यदि कुछ गलत प्रतीत होता है तो प्रत्येक
          लूप में नंबर बदलने की कोशिश करें।
        courseA_collector_loops_challenge1_b: यदि आप केवल एक बार कुछ कर रहे हैं तो
          आपको लूप का उपयोग करने की जरूरत नहीं है।
        courseA_collector_loops_challenge1_c: There are 6 gems on the right side of
          the cave, but you only need to move and collect 5 times. Do you know why?
      course1_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: You only need to use one ![](<https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png>) block to solve this.
        courseA_collector_loops_challenge2_a: |-
          You can move back over the path a second time before moving south.

          ![](<https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png>)
      course1_collector_loops_challenge3:
        courseB_collector_loops_challenge1_b: |-
          Start by looping the commands `move south` and `get treasure`.

          <xml>
            <block type="maze_moveSouth"/><next>
            <block type="collector_collect"/></next>
            </xml>
        courseB_collector_loops_challenge1_a: |-
          The north pattern is a little different than the south pattern.

          <xml>
            <block type="collector_collect"/><next>
            <block type="maze_moveNorth"/></next>next>
            </xml>
        courseB_collector_loops_challenge1_c: |-
          प्रत्येक रास्ते के बीच दो बार पूर्व की ओर मूव करें।

          <xml>
            <block type="maze_moveEast"/><next>
            <block type="maze_moveEast"/></next>next>
            </xml>

          आप ऐसा केवल 14 ब्लॉक्स के साथ कर सकते हैं। समाधान देखने के लिए एक और संकेत के लिए क्लिक करें।
        courseB_collector_loops_challenge1_d: |-
          Try this!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course1_collector_loops_challenge4:
        courseB_collector_loops_challenge2_a: If something goes wrong, don't be afraid
          to start over. Don't give up!
        courseB_collector_loops_challenge2_b: |-
          If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!

          <xml><block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block></xml>
        courseB_collector_loops_challenge2_c: Try using a `repeat` block to collect
          the final pile of treasure!
        courseB_collector_loops_challenge2_d: |-
          Try this solution:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified_dropdown">
                  <title name="TIMES" config="3-10">4</title>
                  <statement name="DO">
                    <block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_simplified_dropdown">
                      <title name="TIMES" config="3-10">6</title>
                      <statement name="DO">
                        <block type="collector_collect"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course1_maze_debugging_challenge1:
        courseA_maze_seq_challenge1_a: Some paths will lead to TNT, if you move too
          far.
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_a: इस पहेली को हल करने के लिए आपको ब्लॉक्स जोड़ने
          या हटाने की जरूरत नहीं है।
        courseB_maze_seq_challenge2_b: Rearrange the blocks and take the middle path.
      course1_maze_seq_challenge1:
        courseA_maze_seq_challenge2_a: अपनी उंगली से खाली स्थान गिनने की कोशिश करें।
          याद रखें कि वह खाली स्थान न गिनें, जहां से आप शुरू करते हैं!
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_a: इस बार सबसे छोटा रास्ता शायद काम नहीं करेगा।
        courseB_maze_seq_challenge1_b: Try moving west to start.
      course1_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "जब आप रॉबिन पर क्लिक करें तो वैड्लेस
          द पेंगुइन को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "जब आप वैड्डलेस पर क्लिक करें तो बू द
          घोस्ट को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "जब आप बू पर क्लिक करें तो जेडन द फज्जी
          मोन्स्टर को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "जब आप दैत्य पर क्लिक करें को स्पिफ द
          रोबोट को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "अंत में, जब आप स्पिफ पर क्लिक करें तो
          वेंडल द विज़ार्ड को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "आप पक्षी को गाना गाने के लिए सक्रिय
          कर सकते हैं।\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "आप रोबोट से बीप की आवाज़ निकालने के
          लिए सक्रिय कर सकते हैं।\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block
          type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n
          \         </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          आप किसी भी गुस्सैल दैत्य को गुर्राने के लिए सक्रिय कर सकते हैं।

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      course2_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: Start by making a nested loop to
          create four octagons. Turn 45 degrees to make the octagon. Jump, then turn
          90 degrees after each one.
        courseD_artist_nestedLoops_challenge1_b: Add code to draw a triangle inside
          of your nested loop. Use 120 degree turns for your triangle.
        courseD_artist_nestedLoops_challenge1_c: |-
          Use a nested loop:

          -   Repeat 8 times
              -   draw an octagon
              -   draw a triangle
              -   jump forward 50 pixels
              -   turn right by 90 degrees
      course2_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: नियमित अष्टभुज खींचने के लिए, कलाकार
          को 8 बार 45 डिग्री मुड़ने की जरूरत है।
        courseD_artist_nestedLoops_challenge2_b: वर्ग खींचने के लिए, कलाकार को 4 बार
          90 डिग्री मुड़ने की जरूरत है।
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: 'The rectangle is 200 pixels wide and 100
          pixels tall. '
      course2_artist_prog_challenge2:
        courseC_artist_prog_challenge2_a: "You can put commands inside `repeat` block
          to loop them over and over. Try it!\n\n<xml>\n  \n          <block type=\"controls_repeat\">\n
          \           <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n
          \             <block type=\"draw_move_by_constant_dropdown\">\n                <title
          name=\"DIR\">moveForward</title>\n                <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                <next>\n                  <block
          type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">jumpForward</title>\n
          \                   <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n
          \                 </block>\n                </next>\n              </block>\n
          \             </statement></block></xml>"
      course2_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: |-
          Can you find a path that reaches every flower and honeycomb without hitting any trees? The best path is a spiral.

          **You can solve this without ever turning left.**
        courseD_bee_conditionals_challenge1_b: इस पहेली में, प्रत्येक स्थान के पास
          फूल, मधु का छत्ता हो सकता है या कुछ नहीं भी हो सकता है।  इसका अर्थ है कि
          आप प्रत्येक वर्ग में  अपने नियमबद्ध `इफ/एल्स` को दोहरा सकते हैं।
      course2_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The main differences is that the code inside will run repetitively until there is no nectar left.  Try this pattern:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      course2_collector_loops_challenge2:
        courseC_maze_loops_challenge2_a: The original code would work great - if there
          was only one piece of treasure in each pile!
        courseC_maze_loops_challenge2_b: लूप्स का उपयोग करें ताकि आपके पास `एकत्र
          करें` ब्लॉक खत्म न हो जाएं!
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: You can use the `collect` command more
          often to collect the extra treasure.
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: You can use the `collect` command more
          often to collect the extra treasure.
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: Don't even think about try about trying
          this without loops!
        courseC_harvester_loops_challenge1_b: आप `आगे की ओर मूव करें` और `कॉर्न लें`
          को जितनी बार जरूरत हो, दोहरा सकते हैं, फिर प्रत्येक कोने पर `दाएं मुड़`
          सकते हैं।
        courseC_harvester_loops_challenge1_c: |-
          The best way to collect the first four corn uses a `repeat` block inside of another `repeat` block. You can use this pattern for the rest of the puzzle too!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">2</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></next></block></xml>
      course2_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: इसे हल करने का एक रास्ता मोड़दार प्रतीत
          होता है। दूसरा रास्ता घुमावदार लगता है! इस तरह की पहेली को हल करने के बहुत
          से अलग-अलग समाधान हैं। स्थायी रहें!
        courseC_harvester_loops_challenge2_b: आप `आगे की ओर मूव करें` और `लेट्स लें`
          को जितनी बार जरूरत हो, दोहरा सकते हैं, फिर प्रत्येक कोने पर मुड़ सकते हैं।
        courseC_harvester_loops_challenge2_c: |-
          पहेली पूरी करने के लिए इस मोड़दार पैटर्न को केवल 20 ब्लॉक्स के साथ दो बार दोहराया जा सकता है!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          इस घुमावदार पैटर्न को केवल 18 ब्लॉक्स के साथ कोडबद्ध किया जा सकता है!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: इस रास्ते के बारे में दो अलग हिस्सों की तरह
          सोचें। हर एक में पैटर्न है, जिसे आप दोहरा सकते हैं।
        courseC_maze_loops_challenge1_b: In between each `repeat` block, you will
          need to `turn left` or `turn right` to get ready Scrat for the next pattern.
        courseC_maze_loops_challenge1_c: |-
          If you make it this far, you just need to `turn left` then `move forward` a few times. Don't give up!

          ![](<https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png>)
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _"यदि आप मुझे पीछे की ओर भेजते हैं,
          तो अतिरिक्त सावधानी बरतें कि मैं सही तरफ मुड़ जाऊं!"_
        courseC_maze_programming_challenge2_b: The shortest solution use only 5 blocks,
          but it uses the `repeat` block!
      course3_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: If you call the function one more time,
          you can create the same design in the final corner. You can also `jump to`
          other positions or change the whole thing around however you want!
      course3_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          इस `कूदें` ब्लॉक से आप जब भी चाहें, ज़ोम्बी कलाकार को ग्रिड पर किसी भी पिक्सल की ओर मूव कर सकते हैं। यह उसे कई पिक्सल दाएं और कई पिक्सल बाएं मूव करके काम करता है। इसे हमेशा ऊपर बाएं कोने से गिना जाता है, जिससे इसका अर्थ होता है कि इससे कोई फर्क नहीं पड़ता कि ज़ोम्बी कलाकार कमांड चलाने _से पहले_ कहां था![][0]
      course3_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_a: इस प्रोग्राम का पहला आधा भाग क्या काम
          करता है? इस बारे में सोचें कि मधुमक्खी को पीछे की ओर मूव करने की जरूरत क्यों
          है। मधुमक्खी जब हर बार फूल की ओर मूव करती है तो कितना मधुरस एकत्र कर लेती
          है?
        courseD_bee_debugging_challenge1_b: On the way back, have the bee follow the
          same pattern. How much honey does the bee need to make each time it moves
          over a honey comb?
        courseD_bee_debugging_challenge1_c: |-
          After the bee makes it to the bottom row, have it repeat these commands:

          -   Repeat 2 times:
              -   Move forward
              -   Make 3 honey
          -   Move backward
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: यदि पहेली चुनौतीपूर्ण प्रतीत हो, तो थोड़े
          समय में अपना फंक्शन बनाने का प्रयास करें। कुछ ब्लॉक्स जोड़ें, फिर इसे आजमाएं।
          और जोड़ें, फिर दुबारा आजमाएं।  जल्दी ही, आप वहां पहुंच जाएंगे![][0]
        courseE_bee_functions_challenge1_b: हरे फंक्शन ब्लॉक के अंदर अपना कोड बनाना
          याद रखें।
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: यदि पहेली चुनौतीपूर्ण प्रतीत हो, तो थोड़े
          समय में अपना फंक्शन बनाने का प्रयास करें। कुछ ब्लॉक्स जोड़ें, फिर इसे आजमाएं।
          और जोड़ें, फिर दुबारा आजमाएं।  जल्दी ही, आप वहां पहुंच जाएंगे![][0]
        courseE_bee_functions_challenge1_b: हरे फंक्शन ब्लॉक के अंदर अपना कोड बनाना
          याद रखें।
      course3_bee_functions_challenge3:
        courseF_bee_functions_challenge1_a: आप मदद के लिए टूल बॉक्स में से फंक्शनों
          का उपयोग कर सकते हैं। आप दूसरे फंक्शन की परिभाषा के अंदर फंक्शन बोल सकते
          हैं!
      course3_bee_functions_challenge4:
        courseF_bee_functions_challenge2_a: |-
          यदि दाएं रास्ता हो, तो आपको निम्नलिखित करना चाहिए:

          -   कोई भी मधुरस प्राप्त करें या कोई भी शहद बनाएं।
          -   एक तरफ के रास्ते की ओर दाएं मुड़ें।
          -   एक तरफ के रास्ते के अंत की ओर मूव करें।
          -   दाएं मुड़ें।

          यदि आप उपरोक्त क्रियाओं को दो बार दोहराते हैं, तो आप मुख्य रास्ते पर वापस नीचे मूव करने के लिए तैयार होंगे।

          **यदि आप पूरा समाधान देखना चाहते हैं, केवल तभी दूसरे संकेत के लिए क्लिक करें!**
        courseF_bee_functions_challenge2_b: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_if">
                              <title name="DIR">isPathRight</title>
                              <statement name="DO">
                                <block type="procedures_callnoreturn" id="function">
                                  <mutation name="move and check"/>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation/>
              <title name="NAME">check nectar or honey</title>
              <statement name="STACK">
                <block type="bee_ifElseFlower">
                  <title name="LOC">atFlower</title>
                  <statement name="DO">
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">nectarRemaining</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_nectar"/>
                      </statement>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">honeyAvailable</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_honey"/>
                      </statement>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
              <mutation/>
              <title name="NAME">move and check</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                      <mutation name="check nectar or honey"/>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_untilBlocked">
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
          </xml>
      course3_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_a: "Start by focusing on collect TWO
          gems from each of the first two piles.\n\n![](<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png>)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Next, collect the remaining gems
          in this row.\n\n![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png>)\nAdd these blocks to your program.\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Finally, collect the remaining
          treasure. Add these blocks to your program.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">turnRight</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Here is the complete solution for this puzzle.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">4</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="controls_repeat">
                          <title name="TIMES">2</title>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveForward</title>
                              <next>
                                <block type="controls_repeat">
                                  <title name="TIMES">2</title>
                                  <statement name="DO">
                                    <block type="collector_collect"/>
                                  </statement>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      course3_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: The `STEP` button could be very helpful
          in this challenge.
        courseD_farmer_condLoops_challenge1_b: सामान्य तौर पर आप केवल `कद्दू लें`
          उपयोग करेंगे, यदि आप कद्दू पर हैं। यदि आप कद्दू पर हैं तो आपको और क्या करने
          की जरूरत होगी?
      course3_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: The amount of each vegetable in each
          space varies. Use `while` loops for these.
      course3_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: दाएं या बाएं? यह आपकी मर्जी है!
        courseC_maze_debugging_challenge1_b: Scrat's path is the shape of a rectangle!
          He needs to turn the same way each time!
        courseC_maze_debugging_challenge1_c: If you are getting stuck, you can always
          start over, or remove all the code and find your own way!
      course3_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_a: One way to solve this is to add more
          steps forward in between the turns.
        courseC_maze_debugging_challenge2_b: If you are getting stuck, you can always
          start over or remove all the code and find your own way!
        courseC_maze_debugging_challenge2_c: |-
          There are two different paths you can follow just using `move forward`, and only four turns. If you find a way to use the `repeat` block, there may be even more!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      course3_playLab_challenge1:
        courseE_playLab_challenge1_a: यहां कुछ कार्य दिए गए हैं, जो आप तब कर सकते
          हैं, जब खिलाड़ी गेम जीतता है:-   डायनासोर को गायब करें।-   गिलहरियों को
          रोकें।-   गिलहरियों और नाइट को खुश करें।-   नई पृष्ठभूमि सेट करें।-   मदद
          करने के लिए खिलाड़ी का धन्यवाद करने हेतु नाइट को सक्रिय करें।-   सभी अभिनेताओं
          को गायब करें और "आप जीते!" संदेश दिखाएं।
        courseE_playLab_challenge1_b: यहां कुछ कार्य दिए गए हैं, जो आप तब कर सकते
          हैं, जब खिलाड़ी गेम हारता है:-   नाइट को गायब करें।-   गिलहरियों को उदास
          करें।-   डायनासोर को कुछ कहने के लिए सक्रिय करें।-   नई पृष्ठभूमि सेट करें।-   मदद
          करने के लिए खिलाड़ी का धन्यवाद करने हेतु नाइट को सक्रिय करें।-   सभी अभिनेताओं
          को गायब करें और "गेम समाप्त!" संदेश दिखाएं।
      course4_artist_binary_challenge2:
        courseD_artist_binary_challenge2_a: |-
          The best tip I have for you is to press `⟲ Start Over` if it starts to get really messy.

          There are only few lines wrong in the original program. If one approach fails, back up and try again. There is a solution!
      course4_artist_concept_challenge2:
        courseE_artist_concept_challenge2_a: जब आप फंक्शन परिभाषित कर लें, तो आप इसे
          बार-बार बोल सकते हैं - जब भी और जहां भी आप चाहें!
        courseE_artist_concept_challenge2_b: |-
          आप इस कमांड का उपयोग करते हुए कैनवास पर अलग-अलग पोजीशनों पर कूद सकते हैं:
          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      course4_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          इस `कूदें` ब्लॉक से आप जब भी चाहें, ज़ोम्बी कलाकार को ग्रिड पर किसी भी पिक्सल की ओर मूव कर सकते हैं। यह उसे कई पिक्सल दाएं और कई पिक्सल बाएं मूव करके काम करता है। इसे हमेशा ऊपर बाएं कोने से गिना जाता है, जिससे इसका अर्थ होता है कि इससे कोई फर्क नहीं पड़ता कि ज़ोम्बी कलाकार कमांड चलाने _से पहले_ कहां था![][0]
      course4_artist_variables_challenge1:
        courseF_artist_variables_challenge1_a: प्रत्येक लंबवत लाइन की लंबाई `10` है।
          प्रत्येक क्षैतिज लाईन `लंबाई` लंबी होनी चाहिए।
        courseF_artist_variables_challenge1_b: आप लूप के अंदर **दो बार** `लंबाई` 10
          तक बढ़ाना चाहेंगे।
        courseF_artist_variables_challenge1_c: पैटर्न को पूरा करने के लिए आपको दो
          बार बाएं मुड़ने, दो बार दाएं मुड़ने और कुल चार बार आगे की ओर मूव करने की
          जरूरत होगी।
        courseF_artist_variables_challenge1_d: |-
          यह पहेली केवल एक लूप का उपयोग करती है। किसी भी वेरिएबल के बिना, समान रास्ता केवल भूलभुलैया हो सकता है।

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          यदि आपको समस्या आ रही है, तो यह चित्र बनाकर शुरुआत करें, फिर यह देखने का प्रयास करें कि आप क्षैतिज लाइनों की लंबाई बदलने के लिए वेरिएबल्स का उपयोग कहां पर कर सकते हैं।
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course4_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_a: |-
          The main program should look something like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="procedures_callnoreturn" inline="false">
                  <mutation name="pick row">
                    <arg name="length"/>
                  </mutation>
                  <value name="ARG0">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <next>
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="pick row">
                                <arg name="length"/>
                              </mutation>
                              <value name="ARG0">
                                <block type="math_number">
                                  <title name="NUM">5</title>
                                </block>
                              </value>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                      <next>
                                        <block type="procedures_callnoreturn" inline="false">
                                          <mutation name="pick row">
                                            <arg name="length"/>
                                          </mutation>
                                          <value name="ARG0">
                                            <block type="math_number">
                                              <title name="NUM">6</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                              <next>
                                                <block type="maze_move">
                                                  <title name="DIR">moveForward</title>
                                                  <next>
                                                    <block type="procedures_callnoreturn" inline="false">
                                                      <mutation name="pick row">
                                                        <arg name="length"/>
                                                      </mutation>
                                                      <value name="ARG0">
                                                        <block type="math_number">
                                                          <title name="NUM">4</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
        courseF_bee_fwp_challenge1_b: |-
          Look at how much corn is available to harvest in each space. Do you see the counter pattern? The `length` parameter should be used to set the maximum value in the `for loop`.

          Don't forget to have the farmer move back to the main path after harvesting!
        courseF_bee_fwp_challenge1_c: |-
          Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.
          Inside this loop, you should move forward and pick all of the corn.

          <xml>
          <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                      </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: |-
          Inside the `for loop` you will want to `move forward` then `get nectar` **counter times**.
          After the `for loop` you can just `move backward` **length times**.

          You may need to read this hint several times to understand it. The part in **bold** is a hint about how to use the two `repeat` loops you will need.
        courseF_bee_fwp_challenge1_e: |-
          **Here is the solution:**

          <xml>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_corn"/>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
              </block></xml>
      course4_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_a: |-
          यह सुनिश्चित करके शुरुआत करें कि आप समझते हैं कि यह फंक्शन किस प्रकार के काम के लिए_बनाया_ गया है। चूंकि किसान प्रत्येक रास्ते पर नीचे मूव करती है, वह केवल कॉर्न एकत्र करने का प्रयास करेगी। इसकी बजाय, आप उसे प्रत्येक 3 सब्जियां देखने और उसे जो मिलती है, वह केवल एक लेने के लिए किस प्रकार सक्रिय कर सकते हैं?

          कॉर्न, कद्दू और लेट्स देखने के लिए फंक्शन में सापेक्ष स्टेटमेंट्स जोड़ें।
        courseF_bee_fwp_challenge2_b: "Are you running out of `move forward` blocks?\nTry
          using a _second_ `for loop` in your main program. \n\n**Note:** Be careful
          not to confuse `counter` with `counter2` in your code."
        courseF_bee_fwp_challenge2_c: |-
          **Here is what your function should look like:**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_ifHasCrop">
                                  <title name="LOC">Corn</title>
                                  <statement name="DO">
                                    <block type="harvester_corn"/>
                                  </statement>
                                  <next>
                                    <block type="harvester_ifHasCrop">
                                      <title name="LOC">Pumpkin</title>
                                      <statement name="DO">
                                        <block type="harvester_pumpkin"/>
                                      </statement>
                                      <next>
                                        <block type="harvester_ifHasCrop">
                                          <title name="LOC">Lettuce</title>
                                          <statement name="DO">
                                            <block type="harvester_lettuce"/>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |-
          **Here is what your main program should look like:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter2</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">6</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="procedures_callnoreturn" inline="false">
                          <mutation name="pick row">
                            <arg name="length"/>
                          </mutation>
                          <value name="ARG0">
                            <block type="variables_get">
                              <title name="VAR">counter2</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
              </block></xml>
      course4_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: यह न भूलें कि आप एकल कमांड या लंबे
          पैटर्न को `दोहरा` सकते हैं। यहां तक कि आप `दोहराएं` ब्लॉक को भी `दोहरा`
          सकते हैं!
        courseD_bee_nested_loops_challenge2_b: To get all 4 gems, first use a loop
          to move away from the center. Turn left or right, then use a nested loop
          to move from the first pile of treasure to the second. If you repeat the
          nested loop enough times, the collector will move around the _entire_ cave!
        courseD_bee_nested_loops_challenge2_c: The shortest program that reaches all
          the treasure uses only one `collect` block and two turns.
        courseD_bee_nested_loops_challenge2_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course4_harvester_nested_loops_challenge1:
        courseD_harvester_nested_loops_challenge1_a: You have probably already used
          a loop to create a zig-zag pattern. If you remember that algorithm, you
          can make a few additions to it here.
      course4_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          You will need additional blocks from the tool box to get the actors to talk.

          <xml><block type="studio_saySpriteParamsTime" inline="true">
                <value name="SPRITE">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                                <value name="TEXT">
                            <block type="text">
                              <title name="TEXT">Knock knock.</title>
                            </block>
                          </value>
                <value name="TIME">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                </block></xml>
      courseA_artist_loops2:
        courseA_artist_loops2_a: क्या आप पता नहीं लगा पा रहे हैं कि लाइन कैसे खींचनी
          है?  यह देखने के लिए <xml><block type="when_run"/></xml> ब्लॉक में ब्लॉक्स
          जोड़ना शुरू करें कि क्या होता है।
        courseA_artist_loops2_b: इस पहेली को हल करने के लिए इस ब्लॉक <xml><block type="simple_move_right"/></xml>
          का उपयोग करें।
      courseA_artist_loops2_2018:
        courseA_artist_loops2_a: क्या आप पता नहीं लगा पा रहे हैं कि लाइन कैसे खींचनी
          है?  यह देखने के लिए <xml><block type="when_run"/></xml> ब्लॉक में ब्लॉक्स
          जोड़ना शुरू करें कि क्या होता है।
        courseA_artist_loops2_b: इस पहेली को हल करने के लिए इस ब्लॉक <xml><block type="simple_move_right"/></xml>
          का उपयोग करें।
      courseA_artist_loops2_2019:
        courseA_artist_loops2_a: क्या आप पता नहीं लगा पा रहे हैं कि लाइन कैसे खींचनी
          है?  यह देखने के लिए <xml><block type="when_run"/></xml> ब्लॉक में ब्लॉक्स
          जोड़ना शुरू करें कि क्या होता है।
        courseA_artist_loops2_b: इस पहेली को हल करने के लिए इस ब्लॉक <xml><block type="simple_move_right"/></xml>
          का उपयोग करें।
      courseA_artist_loops3:
        courseA_artist_loops3_a: यह देखने के लिए अपनी उंगली के साथ धीरे-धीरे प्रोग्राम
          खोजें कि यह कहां गलत होता है।
        courseA_artist_loops3_b: |-
          इस पहेली को हल करने के लिए आप इस तरह के ब्लॉक का उपयोग करना चाहेंगे।

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2018:
        courseA_artist_loops3_a: यह देखने के लिए अपनी उंगली के साथ धीरे-धीरे प्रोग्राम
          खोजें कि यह कहां गलत होता है।
        courseA_artist_loops3_b: |-
          इस पहेली को हल करने के लिए आप इस तरह के ब्लॉक का उपयोग करना चाहेंगे।

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2019:
        courseA_artist_loops3_a: यह देखने के लिए अपनी उंगली के साथ धीरे-धीरे प्रोग्राम
          खोजें कि यह कहां गलत होता है।
        courseA_artist_loops3_b: |-
          इस पहेली को हल करने के लिए आप इस तरह के ब्लॉक का उपयोग करना चाहेंगे।

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops4:
        courseA_artist_loops4_a: यदि आप चाहते हैं कि लूप 4 बार से अधिक दोहराया जाए,
          तो आप ब्लॉक के सबसे ऊपर नंबर बदल सकते हैं।
        courseA_artist_loops4_b: |-
          चूंकि आप केवल एक <xml><block type="simple_move_right"/></xml>

          ब्लॉक का उपयोग कर सकते हैं, इसे <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> लूप के अंदर रखने की कोशिश करें।
      courseA_artist_loops4_2018:
        courseA_artist_loops4_a: यदि आप चाहते हैं कि लूप 4 बार से अधिक दोहराया जाए,
          तो आप ब्लॉक के सबसे ऊपर नंबर बदल सकते हैं।
        courseA_artist_loops4_b: |-
          चूंकि आप केवल एक <xml><block type="simple_move_right"/></xml>

          ब्लॉक का उपयोग कर सकते हैं, इसे <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> लूप के अंदर रखने की कोशिश करें।
      courseA_artist_loops4_2019:
        courseA_artist_loops4_a: यदि आप चाहते हैं कि लूप 4 बार से अधिक दोहराया जाए,
          तो आप ब्लॉक के सबसे ऊपर नंबर बदल सकते हैं।
        courseA_artist_loops4_b: |-
          चूंकि आप केवल एक <xml><block type="simple_move_right"/></xml>

          ब्लॉक का उपयोग कर सकते हैं, इसे <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> लूप के अंदर रखने की कोशिश करें।
      courseA_artist_loops5:
        courseA_artist_loops5_a: इस पहेली को पूरा करने के लिए उसका उपयोग करने की कोशिश
          करें, जो आपने <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ब्लॉक्स के बारे में
          सीखा है!
        courseA_artist_loops5_b: यदि आप चाहते हैं कि लूप 4 बार से अधिक दोहराया जाए,
          तो आप ब्लॉक के सबसे ऊपर नंबर बदल सकते हैं।
        courseA_artist_loops5_c: "चूंकि आप केवल एक <xml><block type=\"simple_move_right\"/></xml>
          ब्लॉक का उपयोग कर सकते हैं, इसे \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\nलूप के अंदर
          रखने की कोशिश करें।"
      courseA_artist_loops5_2018:
        courseA_artist_loops5_a: इस पहेली को पूरा करने के लिए उसका उपयोग करने की कोशिश
          करें, जो आपने <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ब्लॉक्स के बारे में
          सीखा है!
        courseA_artist_loops5_b: यदि आप चाहते हैं कि लूप 4 बार से अधिक दोहराया जाए,
          तो आप ब्लॉक के सबसे ऊपर नंबर बदल सकते हैं।
        courseA_artist_loops5_c: "चूंकि आप केवल एक <xml><block type=\"simple_move_right\"/></xml>
          ब्लॉक का उपयोग कर सकते हैं, इसे \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\nलूप के अंदर
          रखने की कोशिश करें।"
      courseA_artist_loops5_2019:
        courseA_artist_loops5_a: इस पहेली को पूरा करने के लिए उसका उपयोग करने की कोशिश
          करें, जो आपने <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ब्लॉक्स के बारे में
          सीखा है!
        courseA_artist_loops5_b: यदि आप चाहते हैं कि लूप 4 बार से अधिक दोहराया जाए,
          तो आप ब्लॉक के सबसे ऊपर नंबर बदल सकते हैं।
        courseA_artist_loops5_c: "चूंकि आप केवल एक <xml><block type=\"simple_move_right\"/></xml>
          ब्लॉक का उपयोग कर सकते हैं, इसे \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\nलूप के अंदर
          रखने की कोशिश करें।"
      courseA_artist_loops6:
        courseA_artist_loops6_a: क्या आप पता नहीं लगा पा रहे हैं कि पहाड़ी कैसे बनानी
          है?  यह देखने के लिए ब्लॉक्स के साथ थोड़ा खेलने की कोशिश करें कि इनमें से
          प्रत्येक क्या चित्रित करता है।
        courseA_artist_loops6_b: इस पहेली को हल करने के लिए आपको 2 दिशाओं में 2 ब्लॉक्स
          की जरूरत होगी।
      courseA_artist_loops6_2018:
        courseA_artist_loops6_a: क्या आप पता नहीं लगा पा रहे हैं कि पहाड़ी कैसे बनानी
          है?  यह देखने के लिए ब्लॉक्स के साथ थोड़ा खेलने की कोशिश करें कि इनमें से
          प्रत्येक क्या चित्रित करता है।
        courseA_artist_loops6_b: इस पहेली को हल करने के लिए आपको 2 दिशाओं में 2 ब्लॉक्स
          की जरूरत होगी।
      courseA_artist_loops6_2019:
        courseA_artist_loops6_a: क्या आप पता नहीं लगा पा रहे हैं कि पहाड़ी कैसे बनानी
          है?  यह देखने के लिए ब्लॉक्स के साथ थोड़ा खेलने की कोशिश करें कि इनमें से
          प्रत्येक क्या चित्रित करता है।
        courseA_artist_loops6_b: इस पहेली को हल करने के लिए आपको 2 दिशाओं में 2 ब्लॉक्स
          की जरूरत होगी।
      courseA_artist_loops7:
        courseA_artist_loops7_a: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां रखना
          है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
        courseA_artist_loops7_b: पहले एक तरंग के लिए कोड लिखें, फिर अन्य दो को चित्रित
          करने के लिए उसे दोहराएं।
        courseA_artist_loops7_c: याद रखें कि आप <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप में एक से अधिक
          ब्लॉक रख सकते हैं।
      courseA_artist_loops7_2018:
        courseA_artist_loops7_a: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां रखना
          है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
        courseA_artist_loops7_b: पहले एक तरंग के लिए कोड लिखें, फिर अन्य दो को चित्रित
          करने के लिए उसे दोहराएं।
        courseA_artist_loops7_c: |-
          याद रखें कि आप <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> लूप में एक से अधिक ब्लॉक रख सकते हैं।
      courseA_artist_loops7_2019:
        courseA_artist_loops7_a: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां रखना
          है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
        courseA_artist_loops7_b: पहले एक तरंग के लिए कोड लिखें, फिर अन्य दो को चित्रित
          करने के लिए उसे दोहराएं।
        courseA_artist_loops7_c: |-
          याद रखें कि आप <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> लूप में एक से अधिक ब्लॉक रख सकते हैं।
      courseA_artist_loops8:
        courseA_artist_loops8_a: यह देखने के लिए कोड चलाने की कोशिश करें कि आपके लिए
          क्या लिखा गया है।
        courseA_artist_loops8_b: आप उस कोड को कैसे लूप करेंगे, जो आपको दिया गया है?
        courseA_artist_loops8_c: |-
          कोड क्या करता है?\
          यह क्या करने के लिए बनाया गया है?\
          यह आपको क्या बताता है?
      courseA_artist_loops8_2018:
        courseA_artist_loops8_a: यह देखने के लिए कोड चलाने की कोशिश करें कि आपके लिए
          क्या लिखा गया है।
        courseA_artist_loops8_b: आप उस कोड को कैसे लूप करेंगे, जो आपको दिया गया है?
        courseA_artist_loops8_c: |-
          कोड क्या करता है?\
          यह क्या करने के लिए बनाया गया है?\
          यह आपको क्या बताता है?
      courseA_artist_loops8_2019:
        courseA_artist_loops8_a: यह देखने के लिए कोड चलाने की कोशिश करें कि आपके लिए
          क्या लिखा गया है।
        courseA_artist_loops8_b: आप उस कोड को कैसे लूप करेंगे, जो आपको दिया गया है?
        courseA_artist_loops8_c: |-
          कोड क्या करता है?\
          यह क्या करने के लिए बनाया गया है?\
          यह आपको क्या बताता है?
      courseA_artist_loops9:
        courseA_artist_loops9_a: बाकी सीढ़ियां चित्रित करने के लिए आपको दिए कोड में
          दूसरा ब्लॉक जोड़ें।
        courseA_artist_loops9_b: "जो ब्लॉक आप जोड़ते हैं, वह \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>\n\nलूप के अंदर
          जाना चाहिए।"
        courseA_artist_loops9_c: यदि आप पता नहीं लगा पाते हैं कि लूप को कहां रखना
          है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
      courseA_artist_loops9_2018:
        courseA_artist_loops9_a: बाकी सीढ़ियां चित्रित करने के लिए आपको दिए कोड में
          दूसरा ब्लॉक जोड़ें।
        courseA_artist_loops9_b: |-
          The block you add should go inside of the <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml> loop.
        courseA_artist_loops9_c: यदि आप पता नहीं लगा पाते हैं कि लूप को कहां रखना
          है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
      courseA_artist_loops9_2019:
        courseA_artist_loops9_a: बाकी सीढ़ियां चित्रित करने के लिए आपको दिए कोड में
          दूसरा ब्लॉक जोड़ें।
        courseA_artist_loops9_b: "जो ब्लॉक आप जोड़ते हैं, वह \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>\n\nलूप के अंदर
          जाना चाहिए।"
        courseA_artist_loops9_c: यदि आप पता नहीं लगा पाते हैं कि लूप को कहां रखना
          है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
      courseA_artist_loops_challenge2a:
        courseA_artist_loops_challenge2_a: इस <xml>  <block type="simple_move_up_left"/></xml>
          तरह के ब्लॉक्स से आपका कलाकार तिरछा मूव कर पाएगा!
        courseA_artist_loops_challenge2_b: जब आप एक टेंट पूरा कर लें, तो अगला तक जाने
          के लिए दो बार ऊपर `कूदें`!
        courseA_artist_loops_challenge2_c: इस पहेली को खत्म करने के लिए आपके सभी ब्लॉक्स
          को लूप के अंदर होने की जरूरत होगी।
      courseA_artist_loops_challenge2a_2018:
        courseA_artist_loops_challenge2_a: इस <xml>  <block type="simple_move_up_left"/></xml>
          तरह के ब्लॉक्स से आपका कलाकार तिरछा मूव कर पाएगा!
        courseA_artist_loops_challenge2_b: जब आप एक टेंट पूरा कर लें, तो अगला तक जाने
          के लिए दो बार ऊपर `कूदें`!
        courseA_artist_loops_challenge2_c: इस पहेली को खत्म करने के लिए आपके सभी ब्लॉक्स
          को लूप के अंदर होने की जरूरत होगी।
      courseA_artist_loops_challenge2a_2019:
        courseA_artist_loops_challenge2_a: इस <xml>  <block type="simple_move_up_left"/></xml>
          तरह के ब्लॉक्स से आपका कलाकार तिरछा मूव कर पाएगा!
        courseA_artist_loops_challenge2_b: जब आप एक टेंट पूरा कर लें, तो अगला तक जाने
          के लिए दो बार ऊपर `कूदें`!
        courseA_artist_loops_challenge2_c: इस पहेली को खत्म करने के लिए आपके सभी ब्लॉक्स
          को लूप के अंदर होने की जरूरत होगी।
      courseA_collector_loops1:
        courseA_collector_loops1_a: |-
          जब आप खजाने के साथ स्कवेयर तक मूव कर लें, तो इसे लेने के लिए इस ब्लॉक का उपयोग करें।

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: एक आसान समाधान 2 बार पूर्व की ओर मूव करना, फिर
          खजाना प्राप्त करना होगा।
      courseA_collector_loops1_2018:
        courseA_collector_loops1_a: |-
          जब आप खजाने के साथ स्कवेयर तक मूव कर लें, तो इसे लेने के लिए इस ब्लॉक का उपयोग करें।

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: एक आसान समाधान 2 बार पूर्व की ओर मूव करना, फिर
          खजाना प्राप्त करना होगा।
      courseA_collector_loops1_2019:
        courseA_collector_loops1_a: |-
          जब आप खजाने के साथ स्कवेयर तक मूव कर लें, तो इसे लेने के लिए इस ब्लॉक का उपयोग करें।

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: एक आसान समाधान 2 बार पूर्व की ओर मूव करना, फिर
          खजाना प्राप्त करना होगा।
      courseA_collector_loops2:
        courseA_collector_loops2_a: इससे पहले कि आप कोई खजाना एकत्र कर पाएं, आपको
          मूव करना होगा।
        courseA_collector_loops2_b: |-
          जब आप खजाने के साथ स्कवेयर तक मूव कर लें, तो इसे लेने के लिए इस ब्लॉक का उपयोग करें।

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018:
        courseA_collector_loops2_a: इससे पहले कि आप कोई खजाना एकत्र कर पाएं, आपको
          मूव करना होगा।
        courseA_collector_loops2_b: |-
          जब आप खजाने के साथ स्कवेयर तक मूव कर लें, तो इसे लेने के लिए इस ब्लॉक का उपयोग करें।

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2019:
        courseA_collector_loops2_a: इससे पहले कि आप कोई खजाना एकत्र कर पाएं, आपको
          मूव करना होगा।
        courseA_collector_loops2_b: |-
          जब आप खजाने के साथ स्कवेयर तक मूव कर लें, तो इसे लेने के लिए इस ब्लॉक का उपयोग करें।

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3:
        courseA_collector_loops3_a: एक <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप का उपयोग करने की
          कोशिश करें!
        courseA_collector_loops3_b: याद रखें, आप <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप के अंदर 1 से अधिक
          ब्लॉक रख सकते हैं।
      courseA_collector_loops3_2018:
        courseA_collector_loops3_a: एक <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप का उपयोग करने की
          कोशिश करें!
        courseA_collector_loops3_b: याद रखें, आप <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप के अंदर 1 से अधिक
          ब्लॉक रख सकते हैं।
      courseA_collector_loops3_2019:
        courseA_collector_loops3_a: "Try using a \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\n loop!"
        courseA_collector_loops3_b: याद रखें, आप <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप के अंदर 1 से अधिक
          ब्लॉक रख सकते हैं।
      courseA_collector_loops4:
        courseA_collector_loops4_a: लॉरेल के जाने की दूर को बदलने के लिए, लूप के चलने
          की संख्या को बदलें।
        courseA_collector_loops4_b: यह न भूलें कि लॉरेल को <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप पूरा करने के बाद
          नीचे जाकर खजाना एकत्र करने की जरूरत है!
      courseA_collector_loops4_2018:
        courseA_collector_loops4_a: लॉरेल के जाने की दूर को बदलने के लिए, लूप के चलने
          की संख्या को बदलें।
        courseA_collector_loops4_b: यह न भूलें कि लॉरेल को <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप पूरा करने के बाद
          नीचे जाकर खजाना एकत्र करने की जरूरत है!
      courseA_collector_loops4_2019:
        courseA_collector_loops4_a: लॉरेल के जाने की दूर को बदलने के लिए, लूप के चलने
          की संख्या को बदलें।
        courseA_collector_loops4_b: यह न भूलें कि लॉरेल को <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप पूरा करने के बाद
          नीचे जाकर खजाना एकत्र करने की जरूरत है!
      courseA_collector_loops5:
        courseA_collector_loops5_a: यदि आप तुरंत जवाब का पता नहीं लगा सकते, तो यह
          पता लगाने के लिए कागज़ का उपयोग करने की कोशिश करें कि आपको कौन-से तीरों
          की जरूरत होगी और पैटर्न खोजें।
        courseA_collector_loops5_b: एक तरफ़ और फिर नीचे मूव करते हुए, समस्या को 2
          भागों में बांटने की कोशिश करें।
        courseA_collector_loops5_c: आप <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप के साथ शुरू करना
          चाहेंगे, जो लॉरेल को पश्चिम की ओर मूव करके खजाना एकत्र करता है।
      courseA_collector_loops5_2018:
        courseA_collector_loops5_a: यदि आप तुरंत जवाब का पता नहीं लगा सकते, तो यह
          पता लगाने के लिए कागज़ का उपयोग करने की कोशिश करें कि आपको कौन-से तीरों
          की जरूरत होगी और पैटर्न खोजें।
        courseA_collector_loops5_b: एक तरफ़ और फिर नीचे मूव करते हुए, समस्या को 2
          भागों में बांटने की कोशिश करें।
        courseA_collector_loops5_c: आप <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप के साथ शुरू करना
          चाहेंगे, जो लॉरेल को पश्चिम की ओर मूव करके खजाना एकत्र करता है।
      courseA_collector_loops5_2019:
        courseA_collector_loops5_a: यदि आप तुरंत जवाब का पता नहीं लगा सकते, तो यह
          पता लगाने के लिए कागज़ का उपयोग करने की कोशिश करें कि आपको कौन-से तीरों
          की जरूरत होगी और पैटर्न खोजें।
        courseA_collector_loops5_b: एक तरफ़ और फिर नीचे मूव करते हुए, समस्या को 2
          भागों में बांटने की कोशिश करें।
        courseA_collector_loops5_c: आप <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप के साथ शुरू करना
          चाहेंगे, जो लॉरेल को पश्चिम की ओर मूव करके खजाना एकत्र करता है।
      courseA_collector_loops6:
        courseA_collector_loops6_a: क्या आप पता नहीं लगा पा रहें कि क्या गलत है? यह
          देखने के लिए कई बार कोड चलाने की कोशिश करें कि क्या होता है।
        courseA_collector_loops6_b: सबसे छोटे समाधान में 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप्स हैं, एक के बाद
          दूसरी।
      courseA_collector_loops6_2018:
        courseA_collector_loops6_a: क्या आप पता नहीं लगा पा रहें कि क्या गलत है? यह
          देखने के लिए कई बार कोड चलाने की कोशिश करें कि क्या होता है।
        courseA_collector_loops6_b: सबसे छोटे समाधान में 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप्स हैं, एक के बाद
          दूसरी।
      courseA_collector_loops6_2019:
        courseA_collector_loops6_a: क्या आप पता नहीं लगा पा रहें कि क्या गलत है? यह
          देखने के लिए कई बार कोड चलाने की कोशिश करें कि क्या होता है।
        courseA_collector_loops6_b: सबसे छोटे समाधान में 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप्स हैं, एक के बाद
          दूसरी।
      courseA_collector_loops7:
        courseA_collector_loops7_a: यदि आप पता नहीं लगा पा रहे हैं कि आगे क्या होगा,
          तो यह देखने के लिए कोड चलाने की कोशिश करें कि लॉरेल कहां पहुंचती है।
      courseA_collector_loops7_2018:
        courseA_collector_loops7_a: यदि आप पता नहीं लगा पा रहे हैं कि आगे क्या होगा,
          तो यह देखने के लिए कोड चलाने की कोशिश करें कि लॉरेल कहां पहुंचती है।
      courseA_collector_loops7_2019:
        courseA_collector_loops7_a: यदि आप पता नहीं लगा पा रहे हैं कि आगे क्या होगा,
          तो यह देखने के लिए कोड चलाने की कोशिश करें कि लॉरेल कहां पहुंचती है।
      courseA_collector_loops8:
        courseA_collector_loops8_a: यदि आपको इस पहेली का पता लगाने में मुश्किल हो
          रही है, तो मूव्स को कागज़ पर लिखने और पैटर्न खोजने की कोशिश करें।
        courseA_collector_loops8_b: इस पहेली को 3 अलग-अलग समस्याओं में बांटने और प्रत्येक
          के लिए लूप्स लिखने की कोशिश करें।
        courseA_collector_loops8_c: याद रखें कि आप उसी समय कोड को कागज़ पर लिख सकते
          हैं, फिर यह पता लगाने के लिए "चलाएं" को दबा सकते हैं कि वहां से आपको कहां
          जाने की जरूरत है।
      courseA_collector_loops8_2018:
        courseA_collector_loops8_a: यदि आपको इस पहेली का पता लगाने में मुश्किल हो
          रही है, तो मूव्स को कागज़ पर लिखने और पैटर्न खोजने की कोशिश करें।
        courseA_collector_loops8_b: इस पहेली को 3 अलग-अलग समस्याओं में बांटने और प्रत्येक
          के लिए लूप्स लिखने की कोशिश करें।
        courseA_collector_loops8_c: याद रखें कि आप उसी समय कोड को कागज़ पर लिख सकते
          हैं, फिर यह पता लगाने के लिए "चलाएं" को दबा सकते हैं कि वहां से आपको कहां
          जाने की जरूरत है।
      courseA_collector_loops8_2019:
        courseA_collector_loops8_a: यदि आपको इस पहेली का पता लगाने में मुश्किल हो
          रही है, तो मूव्स को कागज़ पर लिखने और पैटर्न खोजने की कोशिश करें।
        courseA_collector_loops8_b: इस पहेली को 3 अलग-अलग समस्याओं में बांटने और प्रत्येक
          के लिए लूप्स लिखने की कोशिश करें।
        courseA_collector_loops8_c: याद रखें कि आप उसी समय कोड को कागज़ पर लिख सकते
          हैं, फिर यह पता लगाने के लिए "चलाएं" को दबा सकते हैं कि वहां से आपको कहां
          जाने की जरूरत है।
      courseA_collector_loops9:
        courseA_collector_loops9_a: 'यदि आप लूप्स का उपयोग करने के लिए बेहतर स्थानों
          का पता नहीं लगा पाते हैं, तो इसे कदम-दर-कदम कोड करने की कोशिश करें और पैटर्न
          खोजें। '
        courseA_collector_loops9_b: अपने कोड को और छोटा बनाने के लिए दूसरे लूप के
          अंदर अपने <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप्स में से 2 को रखने
          की कोशिश करें!
      courseA_collector_loops9_2018:
        courseA_collector_loops9_a: 'यदि आप लूप्स का उपयोग करने के लिए बेहतर स्थानों
          का पता नहीं लगा पाते हैं, तो इसे कदम-दर-कदम कोड करने की कोशिश करें और पैटर्न
          खोजें। '
        courseA_collector_loops9_b: अपने कोड को और छोटा बनाने के लिए दूसरे लूप के
          अंदर अपने <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप्स में से 2 को रखने
          की कोशिश करें!
      courseA_collector_loops9_2019:
        courseA_collector_loops9_a: 'यदि आप लूप्स का उपयोग करने के लिए बेहतर स्थानों
          का पता नहीं लगा पाते हैं, तो इसे कदम-दर-कदम कोड करने की कोशिश करें और पैटर्न
          खोजें। '
        courseA_collector_loops9_b: अपने कोड को और छोटा बनाने के लिए दूसरे लूप के
          अंदर अपने <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> लूप्स में से 2 को रखने
          की कोशिश करें!
      courseA_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: यदि कुछ गलत प्रतीत होता है तो प्रत्येक
          लूप में नंबर बदलने की कोशिश करें।
        courseA_collector_loops_challenge1_b: यदि आप केवल एक बार कुछ कर रहे हैं तो
          आपको लूप का उपयोग करने की जरूरत नहीं है।
        courseA_collector_loops_challenge1_c: जब आप शुरू करते हैं तो गुफा के दाईं
          ओर 6 रतन हैं, लेकिन आपको दक्षिण की ओर मूव करते हुए केवल 5 बार खजाना प्राप्त
          करने की जरूरत है। क्या आपको पता है क्यों?
        courseA_collector_loops_challenge1_d: |-
          शुरूआती प्रोग्राम अंतिम 2 रतन एकत्र नहीं करता। बिल्कुल अंत में यह कोड जोड़ने की कोशिश करें:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2018:
        courseA_collector_loops_challenge1_a: यदि कुछ गलत प्रतीत होता है तो प्रत्येक
          लूप में नंबर बदलने की कोशिश करें।
        courseA_collector_loops_challenge1_b: यदि आप केवल एक बार कुछ कर रहे हैं तो
          आपको लूप का उपयोग करने की जरूरत नहीं है।
        courseA_collector_loops_challenge1_c: जब आप शुरू करते हैं तो गुफा के दाईं
          ओर 6 रतन हैं, लेकिन आपको दक्षिण की ओर मूव करते हुए केवल 5 बार खजाना प्राप्त
          करने की जरूरत है। क्या आपको पता है क्यों?
        courseA_collector_loops_challenge1_d: |-
          शुरूआती प्रोग्राम अंतिम 2 रतन एकत्र नहीं करता। बिल्कुल अंत में यह कोड जोड़ने की कोशिश करें:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2019:
        courseA_collector_loops_challenge1_a: यदि कुछ गलत प्रतीत होता है तो प्रत्येक
          लूप में नंबर बदलने की कोशिश करें।
        courseA_collector_loops_challenge1_b: यदि आप केवल एक बार कुछ कर रहे हैं तो
          आपको लूप का उपयोग करने की जरूरत नहीं है।
        courseA_collector_loops_challenge1_c: जब आप शुरू करते हैं तो गुफा के दाईं
          ओर 6 रतन हैं, लेकिन आपको दक्षिण की ओर मूव करते हुए केवल 5 बार खजाना प्राप्त
          करने की जरूरत है। क्या आपको पता है क्यों?
        courseA_collector_loops_challenge1_d: |-
          शुरूआती प्रोग्राम अंतिम 2 रतन एकत्र नहीं करता। बिल्कुल अंत में यह कोड जोड़ने की कोशिश करें:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: You only need to use 1 block to solve
          this.
        courseA_collector_loops_challenge2_a: You can move back over the path a second
          time before moving south.
      courseA_collector_loops_challenge2kp:
        courseA_collector_loops_challenge2kp_b: समाधान पाने के लिए इस रास्ते को आजमाएं।
        courseA_collector_loops_challenge2kp_a: क्या आप इस पहेली को हल करने के लिए
          लूप्स का उपयोग कर सकते हैं?
      courseA_collector_loops_challenge2kp_2018:
        courseA_collector_loops_challenge2kp_b: समाधान पाने के लिए इस रास्ते को आजमाएं।
        courseA_collector_loops_challenge2kp_a: क्या आप इस पहेली को हल करने के लिए
          लूप्स का उपयोग कर सकते हैं?
      courseA_collector_loops_challenge2kp_2019:
        courseA_collector_loops_challenge2kp_b: समाधान पाने के लिए इस रास्ते को आजमाएं।
        courseA_collector_loops_challenge2kp_a: क्या आप इस पहेली को हल करने के लिए
          लूप्स का उपयोग कर सकते हैं?
      courseA_collector_preLoops4:
        courseA_collector_preLoops4_a: To grab the treasure, snap two ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png)
          blocks and one ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          block to the bottom of the program and click "Run"!
      courseA_collector_preLoops5:
        courseA_collector_preLoops5_a: You'll need to go two different directions
          to get even one gem!
      courseA_collector_preLoops6:
        courseA_collector_preLoops6_a: You will need to use two ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          blocks to solve this puzzle.
      courseA_collector_preLoops7:
        courseA_collector_loops2_b: |-
          जब आप खजाने के साथ स्कवेयर तक मूव कर लें, तो इसे लेने के लिए इस ब्लॉक का उपयोग करें।

          <xml>  <block type="collector_collect"/></xml>
      courseA_harvester_loops1:
        courseA_harvester_loops1_a: |-
          Once you move to some corn, use this block to pick it!

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops1_2019:
        courseA_harvester_loops1_a: |-
          Once you move to some corn, use this block to pick it!

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops2:
        courseA_harvester_loops2_a: |-
          Your code will have **four** `move west` <xml><block type="maze_moveWest"/></xml> blocks

          and **four** `pick corn` <xml><block type="harvester_corn"/></xml> blocks.
        courseA_harvester_loops2_b: 'If you''re still having trouble, try saying the
          steps out loud. '
      courseA_harvester_loops2_2019:
        courseA_harvester_loops2_a: "Your code will have **four** `move west`\n\n<xml><block
          type=\"maze_moveWest\"/></xml>\n\nblocks and **four** <xml>\n`pick corn`\n
          \ <block type=\"harvester_corn\"/>\n</xml> blocks. "
        courseA_harvester_loops2_b: 'If you''re still having trouble, try saying the
          steps out loud. '
      courseA_harvester_loops3:
        courseA_harvester_loops3_a: |-
          Use a `repeat` block like this to help you!

          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">4</title>
            </block></xml>
        courseA_harvester_loops3_b: "To repeat code, drag out a `repeat` (<xml><block
          type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\"
          config=\"2-10\">4</title>\n  </block></xml> )loop, then put the block you
          want inside of it. "
      courseA_harvester_loops3_2019:
        courseA_harvester_loops3_a: |-
          Use a `repeat` block like this to help you!

          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">4</title>
            </block></xml>
        courseA_harvester_loops3_b: "To repeat code, drag out a `repeat` (<xml><block
          type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\"
          config=\"2-10\">4</title>\n  </block></xml> )loop, then put the block you
          want inside of it. "
      courseA_harvester_loops4:
        courseA_harvester_loops4_a: Don't be afraid to press `Run` to see what happens!
        courseA_harvester_loops4_b: How many pieces of corn are there? How many times
          does your code repeat?
      courseA_harvester_loops4_2019:
        courseA_harvester_loops4_a: Don't be afraid to press `Run` to see what happens!
        courseA_harvester_loops4_b: How many pieces of corn are there? How many times
          does your code repeat?
      courseA_harvester_loops5:
        courseA_harvester_loops5_a: यदि आप अटक जाएं, तो पहेली को 2 भागों में हल करने
          की कोशिश करें, एक भाग कोने से पहले और एक भाग कोने के बाद।
        courseA_harvester_loops5_b: |-
          Your final code will have **one** `repeat`  <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
              </block></xml> loop, **one** `move South`   <xml><block type="maze_moveSouth" limit="1"/></xml> block, and **one** `move East`   <xml><block type="maze_moveEast" limit="1"/> </xml>block.
        courseA_harvester_loops5_c: Use this path to pick all the corn!
      courseA_harvester_loops5_2019:
        courseA_harvester_loops5_a: यदि आप अटक जाएं, तो पहेली को 2 भागों में हल करने
          की कोशिश करें, एक भाग कोने से पहले और एक भाग कोने के बाद।
        courseA_harvester_loops5_b: |-
          Your final code will have **one** `repeat`  <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
              </block></xml> loop, **one** `move South`   <xml><block type="maze_moveSouth" limit="1"/></xml> block, and **one** `move East`   <xml><block type="maze_moveEast" limit="1"/> </xml>block.
        courseA_harvester_loops5_c: Use this path to pick all the corn!
      courseA_harvester_loops5a:
        courseA_harvester_loops5a_a: |-
          You will need one `repeat` <xml> <block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
            </block></xml> loop after another.
        courseA_harvester_loops5a_b: One loop will repeat `move South`<xml><block
          type="maze_moveSouth" limit="1"/></xml>, and the other will repeat `move
          East` <xml><block type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Use this path to move one way, and then the other.
      courseA_harvester_loops5a_2019:
        courseA_harvester_loops5a_a: |-
          You will need one `repeat` <xml> <block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
            </block></xml> loop after another.
        courseA_harvester_loops5a_b: One loop will repeat `move South`<xml><block
          type="maze_moveSouth" limit="1"/></xml>, and the other will repeat `move
          East` <xml><block type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Use this path to move one way, and then the other.
      courseA_harvester_loops5b:
        courseA_harvester_loops5b_a: Press `Run` and see what happens!
        courseA_harvester_loops5b_b: Are your loops repeating the right number of
          times?
        courseA_harvester_loops5b_c: Move one way, then the other with this path.
      courseA_harvester_loops5b_2019:
        courseA_harvester_loops5b_a: Press `Run` and see what happens!
        courseA_harvester_loops5b_b: Are your loops repeating the right number of
          times?
        courseA_harvester_loops5b_c: Move one way, then the other with this path.
      courseA_harvester_loops6:
        courseA_harvester_loops6_a: यदि आप अटक जाएं, तो कागज़ पर स्टेप्स लिखने और
          दोहराने वाले पैटर्नों की खोज करने की कोशिश करें।
        courseA_harvester_loops6_b: This is the path you should take to pick all the
          corn.
      courseA_harvester_loops6_2019:
        courseA_harvester_loops6_a: यदि आप अटक जाएं, तो कागज़ पर स्टेप्स लिखने और
          दोहराने वाले पैटर्नों की खोज करने की कोशिश करें।
        courseA_harvester_loops6_b: This is the path you should take to pick all the
          corn.
      courseA_harvester_loops7:
        courseA_harvester_loops7_a: |-
          You will need two `repeat` <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>loops after each other!
        courseA_harvester_loops7_b: Use two loops to follow this path.
      courseA_harvester_loops7_2019:
        courseA_harvester_loops7_a: |-
          You will need two `repeat` <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>loops after each other!
        courseA_harvester_loops7_b: Use two loops to follow this path.
      courseA_harvester_loops9:
        courseA_harvester_loops9_a: Break this puzzle up into three different parts.
          One part to the first corner, one part to the second corner, and one part
          to the end.
        courseA_harvester_loops9_b: Don't be afraid to run your code after every part
          to see what happens!
        courseA_harvester_loops9_c: Follow this path to pick all the corn.
      courseA_harvester_loops9_2019:
        courseA_harvester_loops9_a: Break this puzzle up into three different parts.
          One part to the first corner, one part to the second corner, and one part
          to the end.
        courseA_harvester_loops9_b: Don't be afraid to run your code after every part
          to see what happens!
        courseA_harvester_loops9_c: Follow this path to pick all the corn.
      courseA_harvester_seq1:
        courseA_harvester_seq1_a: |-
          Use this block to pick the corn when the harvester finds it!

          <xml>
            <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          The harvester will need to move East three times to get to the corn. Use this block:

          <xml>
            <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10:
        courseA_harvester_seq10_a: Are you stuck? Try writing down the steps on a
          piece of paper first.
        courseA_harvester_seq10_b: You need to `Move East`, then `Move North`. Do
          this two times. Don't forget to get all the corn too!
        courseA_harvester_seq10_c: Try using this path to pick all the corn.
      courseA_harvester_seq10_2019:
        courseA_harvester_seq10_a: Are you stuck? Try writing down the steps on a
          piece of paper first.
        courseA_harvester_seq10_b: You need to `Move East`, then `Move North`. Do
          this two times. Don't forget to get all the corn too!
        courseA_harvester_seq10_c: Try using this path to pick all the corn.
      courseA_harvester_seq13:
        courseA_bee_seq1_a: |-
          Use this block to pick corn once the harvester gets to it.

          <xml>
            <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq13_2019:
        courseA_bee_seq1_a: |-
          Use this block to pick corn once the harvester gets to it.

          <xml>
            <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq1_2019:
        courseA_harvester_seq1_a: |-
          Use this block to pick the corn when the harvester finds it!

          <xml>
            <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          The harvester will need to move East three times to get to the corn. Use this block:

          <xml>
            <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq2:
        courseA_harvester_seq2_a: Don't forget to use <xml><block type="harvester_corn"/></xml>
          to pick the corn!
        courseA_harvester_seq2_b: समाधान ढूंढने के लिए कागज़ पर स्टेप्स लिखने की कोशिश
          करें!
      courseA_harvester_seq2_2019:
        courseA_harvester_seq2_a: Don't forget to use <xml><block type="harvester_corn"/></xml>
          to pick the corn!
        courseA_harvester_seq2_b: समाधान ढूंढने के लिए कागज़ पर स्टेप्स लिखने की कोशिश
          करें!
      courseA_harvester_seq3:
        courseA_harvester_seq3_a: |-
          Did you remember to use this block?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Say the steps out loud and see if it helps you figure
          out the answer.
      courseA_harvester_seq3_2019:
        courseA_harvester_seq3_a: |-
          Did you remember to use this block?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Say the steps out loud and see if it helps you figure
          out the answer.
      courseA_harvester_seq4:
        courseA_harvester_seq4_a: How many spaces are between the Harvester and the
          corn? How many blocks are already in your workspace?
        courseA_harvester_seq4_b: |-
          You will need five `Move East` blocks and one `Pick Corn` block:

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq4_2019:
        courseA_harvester_seq4_a: How many spaces are between the Harvester and the
          corn? How many blocks are already in your workspace?
        courseA_harvester_seq4_b: |-
          You will need five `Move East` blocks and one `Pick Corn` block:

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5:
        courseA_harvester_seq5_a: Which block moves the harvester the wrong way?
        courseA_harvester_seq5_b: You need to remove one block.
        courseA_harvester_seq5_c: |-
          Throw this block in the trash!

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq5_2019:
        courseA_harvester_seq5_a: Which block moves the harvester the wrong way?
        courseA_harvester_seq5_b: You need to remove one block.
        courseA_harvester_seq5_c: |-
          Throw this block in the trash!

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6:
        courseA_harvester_seq6_a: If you're stuck, try saying the steps out loud.
          It could help you figure out the right path.
      courseA_harvester_seq6_2019:
        courseA_harvester_seq6_a: If you're stuck, try saying the steps out loud.
          It could help you figure out the right path.
      courseA_harvester_seq7:
        courseA_harvester_seq7_a: Try solving the puzzle in 2 parts, one part before
          the corner and one part after the corner.
        courseA_harvester_seq7_b: Having trouble? This is the path the harvester should
          take.
      courseA_harvester_seq7_2019:
        courseA_harvester_seq7_a: Try solving the puzzle in 2 parts, one part before
          the corner and one part after the corner.
        courseA_harvester_seq7_b: Having trouble? This is the path the harvester should
          take.
      courseA_harvester_seq8:
        courseA_harvester_seq8_a: Your final code should have **4** movement blocks
          and **2** pick blocks.
      courseA_harvester_seq8_2019:
        courseA_harvester_seq8_a: Your final code should have **4** movement blocks
          and **2** pick blocks.
      courseA_harvester_seq9:
        courseA_harvester_seq9_a: Run the code a few times to see what happens. Where
          does the harvester stop?
        courseA_harvester_seq9_b: Don't forget to pick all the corn! You will need
          **3** pick corn blocks.
        courseA_harvester_seq9_c: You should take this path to pick all the corn.
      courseA_harvester_seq9_2019:
        courseA_harvester_seq9_a: Run the code a few times to see what happens. Where
          does the harvester stop?
        courseA_harvester_seq9_b: Don't forget to pick all the corn! You will need
          **3** pick corn blocks.
        courseA_harvester_seq9_c: You should take this path to pick all the corn.
      courseA_maze_ramp2_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp2_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3b_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveWest">
                      <next>
                        <block type="maze_moveWest"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3b_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveWest">
                      <next>
                        <block type="maze_moveWest"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp4a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp4a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp5a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp5a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_seq1:
        courseA_maze_seq1_a: |-
          यदि आपको पक्षी को मूव कराने में मुश्किल हो रही है, तो सुनिश्चित करें कि ब्लॉक्स <xml>
            <block type="when_run"/>
          </xml> के नीचे अनियोजित रखे हैं
        courseA_maze_seq1_b: |-
          पक्षी को सूअर के पास जाने के लिए उसे 3 बार पश्चिमकी ओर मूव करना होगा। इस ब्लॉक का उपयोग करें:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10:
        courseA_maze_seq10_a: यदि आपको मुश्किल हो रही है, तो पहले स्टेप्स को कागज़
          पर लिखने की कोशिश करें।
        courseA_maze_seq10_b: इस पहेली को हल करने के लिए आपको 3 दिशाओं में जाने की
          जरूरत होगी।
      courseA_maze_seq10_2018:
        courseA_maze_seq10_a: यदि आपको मुश्किल हो रही है, तो पहले स्टेप्स को कागज़
          पर लिखने की कोशिश करें।
        courseA_maze_seq10_b: You will need to go 3 different directions to solve
          this puzzle.
      courseA_maze_seq10_2019:
        courseA_maze_seq10_a: यदि आपको मुश्किल हो रही है, तो पहले स्टेप्स को कागज़
          पर लिखने की कोशिश करें।
        courseA_maze_seq10_b: You will need to go 3 different directions to solve
          this puzzle.
      courseA_maze_seq10_copy:
        courseA_maze_seq10_a: यदि आपको मुश्किल हो रही है, तो पहले स्टेप्स को कागज़
          पर लिखने की कोशिश करें।
        courseA_maze_seq10_b: इस पहेली को हल करने के लिए आपको 3 दिशाओं में जाने की
          जरूरत होगी।
      courseA_maze_seq13:
        courseA_maze_seq13_a: जो रास्ता आपको चाहिए, यदि वह अस्पष्ट है, तो पक्षी से
          सूअर तक अपने रास्ते को खोजने के लिए अपनी उंगली का उपयोग करें।
        courseA_maze_seq13_b: गलती होने से न डरें! ब्लॉक्स जोड़ने और यह देखने के लिए
          कोड चलाने की कोशिश करें कि क्या होगा।
        courseA_maze_seq13_c: ये <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> ब्लॉक्स सूअर के अधिक पास मूव करने में आपकी
          मदद करेंगे।
      courseA_maze_seq13_2018:
        courseA_maze_seq13_a: जो रास्ता आपको चाहिए, यदि वह अस्पष्ट है, तो पक्षी से
          सूअर तक अपने रास्ते को खोजने के लिए अपनी उंगली का उपयोग करें।
        courseA_maze_seq13_b: गलती होने से न डरें! ब्लॉक्स जोड़ने और यह देखने के लिए
          कोड चलाने की कोशिश करें कि क्या होगा।
        courseA_maze_seq13_c: ये <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> ब्लॉक्स सूअर के अधिक पास मूव करने में आपकी
          मदद करेंगे।
      courseA_maze_seq13_2019:
        courseA_maze_seq13_a: जो रास्ता आपको चाहिए, यदि वह अस्पष्ट है, तो पक्षी से
          सूअर तक अपने रास्ते को खोजने के लिए अपनी उंगली का उपयोग करें।
        courseA_maze_seq13_b: गलती होने से न डरें! ब्लॉक्स जोड़ने और यह देखने के लिए
          कोड चलाने की कोशिश करें कि क्या होगा।
        courseA_maze_seq13_c: ये <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> ब्लॉक्स सूअर के अधिक पास मूव करने में आपकी
          मदद करेंगे।
      courseA_maze_seq1_2018:
        courseA_maze_seq1_a: |-
          यदि आपको पक्षी को मूव कराने में मुश्किल हो रही है, तो सुनिश्चित करें कि ब्लॉक्स <xml>
            <block type="when_run"/>
          </xml> के नीचे अनियोजित रखे हैं
        courseA_maze_seq1_b: |-
          पक्षी को सूअर के पास जाने के लिए उसे 3 बार पश्चिमकी ओर मूव करना होगा। इस ब्लॉक का उपयोग करें:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq1_2019:
        courseA_maze_seq1_a: |-
          यदि आपको पक्षी को मूव कराने में मुश्किल हो रही है, तो सुनिश्चित करें कि ब्लॉक्स <xml>
            <block type="when_run"/>
          </xml> के नीचे अनियोजित रखे हैं
        courseA_maze_seq1_b: |-
          पक्षी को सूअर के पास जाने के लिए उसे 3 बार पश्चिमकी ओर मूव करना होगा। इस ब्लॉक का उपयोग करें:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2:
        courseA_maze_seq2_a: इस प्रोग्राम में 1 ब्लॉक गायब है। क्या आप पता लगा सकते
          हैं कि वह कौन-सा है?
        courseA_maze_seq2_b: यह देखने के लिए पहले कोड चलाने की कोशिश करें कि पक्षी
          कहां पहुंचता है। वहां से आपको कहां जाने की जरूरत है?
      courseA_maze_seq3:
        courseA_maze_seq3_a: 1 ब्लॉक पक्षी को गलत दिशा में मूव कर रहा है। क्या आप
          पता लगा सकते हैं कि वह कौन-सा है और इसे सही ब्लॉक से बदल सकते हैं?
        courseA_maze_seq3_b: यह जानने के लिए स्टेप बटन का उपयोग करने की कोशिश करें
          कि प्रोग्राम कहां गलत हुआ है। क्या यह पहला स्टेप नहीं है? दूसरा?
        courseA_maze_seq3_c: यह <xml><block type="maze_moveNorth"/></xml> ब्लॉक पक्षी
          को सही दिशा में मूव कर रहा प्रतीत नहीं होता। क्या आप किसी और ब्लॉक से इसकी
          अदला-बदली कर सकते हैं?
      courseA_maze_seq4:
        courseA_maze_seq4_a: यदि आपको मुश्किल हो रही है, तो यह पता लगाने की कोशिश
          करें कि सही रास्ता कौन-सा है और फिर उस ब्लॉक को हटाएं, जो अनुकूल नहीं है।
        courseA_maze_seq4_b: कोड को उसी तरह चलाने की कोशिश करें, जैसा वह है। क्या
          कुछ गलत हुआ? आप कौन-से ब्लॉक को हटा सकते हैं? आप इसे कैसे ठीक कर सकते हैं?
      courseA_maze_seq5:
        courseA_maze_seq5_a: समाधान ढूंढने के लिए कागज़ पर स्टेप्स लिखने की कोशिश
          करें!
        courseA_maze_seq5_b: आपको 2 दिशाओं में संकेत करते हुए, 2 ब्लॉक्स की जरूरत
          होगी।
      courseA_maze_seq5_2018:
        '1': समाधान ढूंढने के लिए कागज़ पर स्टेप्स लिखने की कोशिश करें!
        '2': |-
          You will need to use this block:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5_2019:
        '1': समाधान ढूंढने के लिए कागज़ पर स्टेप्स लिखने की कोशिश करें!
        '2': |-
          You will need to use this block:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5_copy:
        courseA_maze_seq5_a: समाधान ढूंढने के लिए कागज़ पर स्टेप्स लिखने की कोशिश
          करें!
        courseA_maze_seq5_b: आपको 2 दिशाओं में संकेत करते हुए, 2 ब्लॉक्स की जरूरत
          होगी।
      courseA_maze_seq5a_2018:
        '1': Say the steps out loud and see if it helps you figure out the answer.
      courseA_maze_seq5a_2019:
        '1': Say the steps out loud and see if it helps you figure out the answer.
      courseA_maze_seq6:
        courseA_maze_seq6_a: आपके अंतिम कोड में 3 गतिविधि ब्लॉक होने चाहिएं।
        courseA_maze_seq6_b: यदि आप अटक जाएं, तो पहेली को 2 भागों में हल करने की कोशिश
          करें, एक भाग कोने से पहले और एक भाग कोने के बाद।
      courseA_maze_seq6_2018:
        courseA_maze_seq6_a: आपके अंतिम कोड में 3 गतिविधि ब्लॉक होने चाहिएं।
        courseA_maze_seq6_b: यदि आप अटक जाएं, तो पहेली को 2 भागों में हल करने की कोशिश
          करें, एक भाग कोने से पहले और एक भाग कोने के बाद।
      courseA_maze_seq6_2019:
        courseA_maze_seq6_a: आपके अंतिम कोड में 3 गतिविधि ब्लॉक होने चाहिएं।
        courseA_maze_seq6_b: यदि आप अटक जाएं, तो पहेली को 2 भागों में हल करने की कोशिश
          करें, एक भाग कोने से पहले और एक भाग कोने के बाद।
      courseA_maze_seq6_copy:
        courseA_maze_seq6_a: आपके अंतिम कोड में 3 गतिविधि ब्लॉक होने चाहिएं।
        courseA_maze_seq6_b: यदि आप अटक जाएं, तो पहेली को 2 भागों में हल करने की कोशिश
          करें, एक भाग कोने से पहले और एक भाग कोने के बाद।
      courseA_maze_seq7:
        courseA_maze_seq7_a: 1 ब्लॉक है, जिसकी आपको पक्षी को सूअर तक मूव करने के लिए
          जोड़ने की जरूरत है।
        courseA_maze_seq7_b: यदि आप पता नहीं लगा पाते हैं कि क्या करना है, कागज़ पर
          पहेली को चित्रित करने की कोशिश करें और यह पता लगाने के लिए किस तरफ मूव करना
          है, अपनी उंगली का उपयोग करें।
      courseA_maze_seq7_copy:
        courseA_maze_seq7_a: 1 ब्लॉक है, जिसकी आपको पक्षी को सूअर तक मूव करने के लिए
          जोड़ने की जरूरत है।
        courseA_maze_seq7_b: यदि आप पता नहीं लगा पाते हैं कि क्या करना है, कागज़ पर
          पहेली को चित्रित करने की कोशिश करें और यह पता लगाने के लिए किस तरफ मूव करना
          है, अपनी उंगली का उपयोग करें।
      courseA_maze_seq8:
        courseA_maze_seq8_a: यदि आप अटक जाएं, तो यह देखने के लिए काग़ज पर चित्र बनाने
          की कोशिश करें कि पक्षी को कैसे मूव करना चाहिए।
      courseA_maze_seq8_2018:
        courseA_maze_seq8_a: यदि आप अटक जाएं, तो यह देखने के लिए काग़ज पर चित्र बनाने
          की कोशिश करें कि पक्षी को कैसे मूव करना चाहिए।
      courseA_maze_seq8_2019:
        courseA_maze_seq8_a: यदि आप अटक जाएं, तो यह देखने के लिए काग़ज पर चित्र बनाने
          की कोशिश करें कि पक्षी को कैसे मूव करना चाहिए।
      courseA_maze_seq8_copy:
        courseA_maze_seq8_a: यदि आप अटक जाएं, तो यह देखने के लिए काग़ज पर चित्र बनाने
          की कोशिश करें कि पक्षी को कैसे मूव करना चाहिए।
      courseA_maze_seq9:
        courseA_maze_seq9_a: अटक गए हैं? अपनी उंगली से पक्षी का रास्ता खोजने की कोशिश
          करें।
        courseA_maze_seq9_b: यदि आप निश्चित नहीं हैं कि क्या करना है, तो "फिर से शुरू
          करें” को दबाने और यह देखने के लिए कोड चलाने की कोशिश करें कि क्या गलत हो
          रहा है।
        courseA_maze_seq9_c: इस पहेली को हल करने के लिए आपको 3 दिशाओं में मूव करने
          की जरूरत होगी।
      courseA_maze_seq_challenge1:
        courseA_maze_seq_challenge1_a: इस पहेली के दो समाधान हैं।
      courseA_maze_seq_challenge1_2018:
        courseA_maze_seq_challenge1_a: इस पहेली के दो समाधान हैं।
      courseA_maze_seq_challenge1_2019:
        courseA_maze_seq_challenge1_a: इस पहेली के दो समाधान हैं।
      courseA_maze_seq_challenge2:
        courseA_maze_seq_challenge2_a: अपनी उंगली से खाली स्थान गिनने की कोशिश करें।
          याद रखें कि वह खाली स्थान न गिनें, जहां से आप शुरू करते हैं!
      courseA_maze_seq_challenge2_2018:
        courseA_maze_seq_challenge2_a: अपनी उंगली से खाली स्थान गिनने की कोशिश करें।
          याद रखें कि वह खाली स्थान न गिनें, जहां से आप शुरू करते हैं!
      courseA_maze_seq_challenge2_2019:
        courseA_maze_seq_challenge2_a: अपनी उंगली से खाली स्थान गिनने की कोशिश करें।
          याद रखें कि वह खाली स्थान न गिनें, जहां से आप शुरू करते हैं!
      courseA_playLab_events2:
        courseA_playLab_events2_a: वह ब्लॉक खोजें, जिससे कुत्ता कुछ कह पाए।
        courseA_playLab_events2_b: |-
          यह वही कोड है, जिसकी जरूरत आपको यह पहेली पूरी करने के लिए है:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018:
        courseA_playLab_events2_a: वह ब्लॉक खोजें, जिससे कुत्ता कुछ कह पाए।
        courseA_playLab_events2_b: |-
          यह वही कोड है, जिसकी जरूरत आपको यह पहेली पूरी करने के लिए है:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2019:
        courseA_playLab_events2_a: वह ब्लॉक खोजें, जिससे कुत्ता कुछ कह पाए।
        courseA_playLab_events2_b: |-
          यह वही कोड है, जिसकी जरूरत आपको यह पहेली पूरी करने के लिए है:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3:
        courseA_playLab_events3_a: |-
          इस ब्लॉक <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> को बाहर खींचें और इसे <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> नीचे की ओर काटें
        courseA_playLab_events3_b: जब आप अपना प्रोग्राम लिख चुके हों तो जॉर्ज को झंडे
          तक मूव करने के लिए बाएं तीर वाली कुंजी का उपयोग करना याद रखें। जब झंडा हरा
          हो जाए, आपने पूरा कर लिया!
      courseA_playLab_events3_2018:
        courseA_playLab_events3_a: |-
          इस ब्लॉक <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> को बाहर खींचें और इसे <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> नीचे की ओर काटें
        courseA_playLab_events3_b: जब आप अपना प्रोग्राम लिख चुके हों तो जॉर्ज को झंडे
          तक मूव करने के लिए बाएं तीर वाली कुंजी का उपयोग करना याद रखें। जब झंडा हरा
          हो जाए, आपने पूरा कर लिया!
      courseA_playLab_events3_2019:
        courseA_playLab_events3_a: |-
          इस ब्लॉक <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> को बाहर खींचें और इसे <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> नीचे की ओर काटें
        courseA_playLab_events3_b: जब आप अपना प्रोग्राम लिख चुके हों तो जॉर्ज को झंडे
          तक मूव करने के लिए बाएं तीर वाली कुंजी का उपयोग करना याद रखें। जब झंडा हरा
          हो जाए, आपने पूरा कर लिया!
      courseA_playLab_events4:
        courseA_playLab_events4_a: |-
          यहां वह इवेंट ब्लॉक दिया गया है, जिसकी जरूरत आपको जॉर्ज को दाईं ओर मूव करने के लिए होगी:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          यह वही कोड है, जिसकी जरूरत आपको यह पहेली पूरी करने के लिए होगी:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events4_2018:
        courseA_playLab_events4_a: |-
          यहां वह इवेंट ब्लॉक दिया गया है, जिसकी जरूरत आपको जॉर्ज को दाईं ओर मूव करने के लिए होगी:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          यह वही कोड है, जिसकी जरूरत आपको यह पहेली पूरी करने के लिए होगी:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events4_2019:
        courseA_playLab_events4_a: |-
          यहां वह इवेंट ब्लॉक दिया गया है, जिसकी जरूरत आपको जॉर्ज को दाईं ओर मूव करने के लिए होगी:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          यह वही कोड है, जिसकी जरूरत आपको यह पहेली पूरी करने के लिए होगी:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events5:
        courseA_playLab_events5_a: |-
          यहां वे इवेंट ब्लॉक्स दिए गए हैं, जिनका उपयोग आपको जॉर्ज को ऊपर और नीचे मूव करने के लिए करना होगा:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>

          और

          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: |-
          क्या आपको पता है कि आप ब्लॉक में तस्वीर पर क्लिक करके और नई कुंजी चुनकर इवेंट तीर के लिए कुंजी बदल सकते हैं?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018:
        courseA_playLab_events5_a: |-
          यहां वे इवेंट ब्लॉक्स दिए गए हैं, जिनका उपयोग आपको जॉर्ज को ऊपर और नीचे मूव करने के लिए करना होगा:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>

          और

          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: |-
          क्या आपको पता है कि आप ब्लॉक में तस्वीर पर क्लिक करके और नई कुंजी चुनकर इवेंट तीर के लिए कुंजी बदल सकते हैं?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2019:
        courseA_playLab_events5_a: |-
          यहां वे इवेंट ब्लॉक्स दिए गए हैं, जिनका उपयोग आपको जॉर्ज को ऊपर और नीचे मूव करने के लिए करना होगा:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>

          और

          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: |-
          क्या आपको पता है कि आप ब्लॉक में तस्वीर पर क्लिक करके और नई कुंजी चुनकर इवेंट तीर के लिए कुंजी बदल सकते हैं?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6:
        courseA_playLab_events6_a: |-
          यहां वह इवेंट ब्लॉक दिया गया है, जिसका उपयोग आप क्लिक किए जाने पर जॉर्ज से कुछ करवाने के लिए करेंगे:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          यहां वह ब्लॉक दिया गया है, जिसका उपयोग आप पृष्ठभूमि बदलने के लिए करेंगे:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          यहां वह ब्लॉक दिया गया है, जिसका उपयोग आप बेतरतीब ध्वनि प्ले करने के लिए करेंगे:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events6_2018:
        courseA_playLab_events6_a: |-
          यहां वह इवेंट ब्लॉक दिया गया है, जिसका उपयोग आप क्लिक किए जाने पर जॉर्ज से कुछ करवाने के लिए करेंगे:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          यहां वह ब्लॉक दिया गया है, जिसका उपयोग आप पृष्ठभूमि बदलने के लिए करेंगे:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          यहां वह ब्लॉक दिया गया है, जिसका उपयोग आप बेतरतीब ध्वनि प्ले करने के लिए करेंगे:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events6_2019:
        courseA_playLab_events6_a: |-
          यहां वह इवेंट ब्लॉक दिया गया है, जिसका उपयोग आप क्लिक किए जाने पर जॉर्ज से कुछ करवाने के लिए करेंगे:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          यहां वह ब्लॉक दिया गया है, जिसका उपयोग आप पृष्ठभूमि बदलने के लिए करेंगे:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          यहां वह ब्लॉक दिया गया है, जिसका उपयोग आप बेतरतीब ध्वनि प्ले करने के लिए करेंगे:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events7:
        courseA_playLab_events7_a: |-
          अभिनेताओं के टकराने पर जो होता है, उसे नियंत्रित करने के लिए इस ब्लॉक का उपयोग करें

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playLab_events7_2018:
        courseA_playLab_events7_a: |-
          अभिनेताओं के टकराने पर जो होता है, उसे नियंत्रित करने के लिए इस ब्लॉक का उपयोग करें

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playLab_events7_2019:
        courseA_playLab_events7_a: |-
          अभिनेताओं के टकराने पर जो होता है, उसे नियंत्रित करने के लिए इस ब्लॉक का उपयोग करें

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "जब आप रॉबिन पर क्लिक करें तो वैड्लेस
          द पेंगुइन को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "जब आप वैड्डलेस पर क्लिक करें तो बू द
          घोस्ट को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "जब आप बू पर क्लिक करें तो जेडन द फज्जी
          मोन्स्टर को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "जब आप दैत्य पर क्लिक करें को स्पिफ द
          रोबोट को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "अंत में, जब आप स्पिफ पर क्लिक करें तो
          वेंडल द विज़ार्ड को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2018:
        courseA_playlab_events_challenge1_a: "जब आप रॉबिन पर क्लिक करें तो वैड्लेस
          द पेंगुइन को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "जब आप वैड्डलेस पर क्लिक करें तो बू द
          घोस्ट को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "जब आप बू पर क्लिक करें तो जेडन द फज्जी
          मोन्स्टर को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "जब आप दैत्य पर क्लिक करें को स्पिफ द
          रोबोट को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "अंत में, जब आप स्पिफ पर क्लिक करें तो
          वेंडल द विज़ार्ड को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2019:
        courseA_playlab_events_challenge1_a: "जब आप रॉबिन पर क्लिक करें तो वैड्लेस
          द पेंगुइन को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "जब आप वैड्डलेस पर क्लिक करें तो बू द
          घोस्ट को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "जब आप बू पर क्लिक करें तो जेडन द फज्जी
          मोन्स्टर को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "जब आप दैत्य पर क्लिक करें को स्पिफ द
          रोबोट को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "अंत में, जब आप स्पिफ पर क्लिक करें तो
          वेंडल द विज़ार्ड को आने के लिए सक्रिय करें!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "आप पक्षी को गाना गाने के लिए सक्रिय
          कर सकते हैं।\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "आप रोबोट से बीप की आवाज़ निकालने के
          लिए सक्रिय कर सकते हैं।\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block
          type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n
          \         </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          आप किसी भी गुस्सैल दैत्य को गुर्राने के लिए सक्रिय कर सकते हैं।

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseA_playlab_events_challenge2_2018:
        courseA_playlab_events_challenge2_a: "आप पक्षी को गाना गाने के लिए सक्रिय
          कर सकते हैं।\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "आप रोबोट से बीप की आवाज़ निकालने के
          लिए सक्रिय कर सकते हैं।\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block
          type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n
          \         </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          आप किसी भी गुस्सैल दैत्य को गुर्राने के लिए सक्रिय कर सकते हैं।

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseA_playlab_events_challenge2_2019:
        courseA_playlab_events_challenge2_a: "आप पक्षी को गाना गाने के लिए सक्रिय
          कर सकते हैं।\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title
          name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "आप रोबोट से बीप की आवाज़ निकालने के
          लिए सक्रिय कर सकते हैं।\n\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block
          type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n
          \         </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          आप किसी भी गुस्सैल दैत्य को गुर्राने के लिए सक्रिय कर सकते हैं।

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseB_Scrat_ramp1_2018:
        '1': If Scrat isn't doing what you want, make sure both of the blocks have
          been fully clicked together, then click "Run" again.
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work,
          try something else!
      courseB_Scrat_ramp1_2019:
        '1': If Scrat isn't doing what you want, make sure both of the blocks have
          been fully clicked together, then click "Run" again.
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work,
          try something else!
      courseB_Scrat_ramp2_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp2_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3b_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3b_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp4a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp4a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp5a_2018:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp5a_2019:
        '1': |-
          Your code should look like this:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_artist_loops2:
        courseB_artist_loops2_a: यदि आप चाहते हैं कि लूप 4 बार से अधिक दोहराया जाए,
          तो आप ब्लॉक के सबसे ऊपर नंबर बदल सकते हैं।
        courseB_artist_loops2_b: पहले यह देखने के लिए कोड चलाने की कोशिश करें कि कलाकार
          कहां पहुंचता है।
      courseB_artist_loops2_2018:
        courseB_artist_loops2_a: यदि आप चाहते हैं कि लूप 4 बार से अधिक दोहराया जाए,
          तो आप ब्लॉक के सबसे ऊपर नंबर बदल सकते हैं।
        courseB_artist_loops2_b: पहले यह देखने के लिए कोड चलाने की कोशिश करें कि कलाकार
          कहां पहुंचता है।
      courseB_artist_loops2_2019:
        courseB_artist_loops2_a: यदि आप चाहते हैं कि लूप 4 बार से अधिक दोहराया जाए,
          तो आप ब्लॉक के सबसे ऊपर नंबर बदल सकते हैं।
        courseB_artist_loops2_b: पहले यह देखने के लिए कोड चलाने की कोशिश करें कि कलाकार
          कहां पहुंचता है।
      courseB_artist_loops3:
        courseB_artist_loops3_a: बेहतर कोड के लिए `दोहराएं` लूप का उपयोग करना याद
          रखें!
        courseB_artist_loops3_b: कलाकार यह लाइन खींचने के लिए दक्षिण की ओर मूव करना
          चाहेगा।
      courseB_artist_loops3_2018:
        courseB_artist_loops3_a: |-
          Remember to use a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loop for better code!
        courseB_artist_loops3_b: कलाकार यह लाइन खींचने के लिए दक्षिण की ओर मूव करना
          चाहेगा।
      courseB_artist_loops3_2019:
        courseB_artist_loops3_a: |-
          Remember to use a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loop for better code!
        courseB_artist_loops3_b: कलाकार यह लाइन खींचने के लिए दक्षिण की ओर मूव करना
          चाहेगा।
      courseB_artist_loops4:
        courseB_artist_loops4_a: कूदना ब्लॉक आपको लाइन खींचे बिना आगे मूव करने देता
          है।
        courseB_artist_loops4_b: इस पहेली को हल करने के लिए आपको दोहराने वाले लूप
          के दर एक ब्लॉक जोड़ने की जरूरत होगी।
        courseB_artist_loops4_c: लूप के दोहराए जाने की संख्या को बदलना न भूलें।
      courseB_artist_loops4_2018:
        courseB_artist_loops4_a: कूदना ब्लॉक आपको लाइन खींचे बिना आगे मूव करने देता
          है।
        courseB_artist_loops4_b: इस पहेली को हल करने के लिए आपको दोहराने वाले लूप
          के दर एक ब्लॉक जोड़ने की जरूरत होगी।
        courseB_artist_loops4_c: लूप के दोहराए जाने की संख्या को बदलना न भूलें।
      courseB_artist_loops4_2019:
        courseB_artist_loops4_a: कूदना ब्लॉक आपको लाइन खींचे बिना आगे मूव करने देता
          है।
        courseB_artist_loops4_b: इस पहेली को हल करने के लिए आपको दोहराने वाले लूप
          के दर एक ब्लॉक जोड़ने की जरूरत होगी।
        courseB_artist_loops4_c: लूप के दोहराए जाने की संख्या को बदलना न भूलें।
      courseB_artist_loops5:
        courseB_artist_loops5_a: "`दोहराएं` लूप को खींचें, फिर अन्य ब्लॉक्स को इसके
          अंदर रखें। आपको कितनी बार दोहराने की जरूरत है?"
      courseB_artist_loops5_2018:
        courseB_artist_loops5_a: |-
          Drag out a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loop, then put the other blocks inside of it. How many times do you need to repeat?
      courseB_artist_loops5_2019:
        courseB_artist_loops5_a: |-
          Drag out a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loop, then put the other blocks inside of it. How many times do you need to repeat?
      courseB_artist_loops6:
        courseB_artist_loops6_b: मूव्स को कागज़ पर लिखने की कोशिश करें और पैटर्न खोजें।
      courseB_artist_loops6_2018:
        courseB_artist_loops6_b: मूव्स को कागज़ पर लिखने की कोशिश करें और पैटर्न खोजें।
      courseB_artist_loops6_2019:
        courseB_artist_loops6_b: मूव्स को कागज़ पर लिखने की कोशिश करें और पैटर्न खोजें।
      courseB_artist_loops7:
        courseB_artist_loops7_a: यह चुनौती **4** लूप्स का उपयोग करती है, दूसरे के
          तुरंत बाद एक!
        courseB_artist_loops7_b: |-
          देखें कि प्रत्येक लूप सीढ़ी का पैटर्न बनाता है, जो अलग दिशा में जाती है।

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: |-
          लूप्स ऐसा करेंगे:

          -   लूप 1

              -   दाएं
              -   नीचे

          -   लूप 2

              -   दाएं
              -   ऊपर

          -   लूप 3

              -   बाएं
              -   ऊपर

          -   लूप 4
              -   बाएं
              -   नीचे
      courseB_artist_loops7_2018:
        courseB_artist_loops7_a: यह चुनौती **4** लूप्स का उपयोग करती है, दूसरे के
          तुरंत बाद एक!
        courseB_artist_loops7_b: |-
          देखें कि प्रत्येक लूप सीढ़ी का पैटर्न बनाता है, जो अलग दिशा में जाती है।

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: |-
          लूप्स ऐसा करेंगे:

          -   लूप 1

              -   दाएं
              -   नीचे

          -   लूप 2

              -   दाएं
              -   ऊपर

          -   लूप 3

              -   बाएं
              -   ऊपर

          -   लूप 4
              -   बाएं
              -   नीचे
      courseB_artist_loops7_2019:
        courseB_artist_loops7_a: यह चुनौती **4** लूप्स का उपयोग करती है, दूसरे के
          तुरंत बाद एक!
        courseB_artist_loops7_b: |-
          देखें कि प्रत्येक लूप सीढ़ी का पैटर्न बनाता है, जो अलग दिशा में जाती है।

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: |-
          लूप्स ऐसा करेंगे:

          -   लूप 1

              -   दाएं
              -   नीचे

          -   लूप 2

              -   दाएं
              -   ऊपर

          -   लूप 3

              -   बाएं
              -   ऊपर

          -   लूप 4
              -   बाएं
              -   नीचे
      courseB_artist_loops8:
        courseB_artist_loops8_a: आप सीढ़ी बनाने के लिए पैटर्न को कितनी बार दोहराएंगे?
        courseB_artist_loops8_b: यह देखने के लिए आपको दिए कोड को चलाने की कोशिश करें
          कि यह क्या करता है।
      courseB_artist_loops8_2018:
        courseB_artist_loops8_a: आप सीढ़ी बनाने के लिए पैटर्न को कितनी बार दोहराएंगे?
        courseB_artist_loops8_b: यह देखने के लिए आपको दिए कोड को चलाने की कोशिश करें
          कि यह क्या करता है।
      courseB_artist_loops8_2019:
        courseB_artist_loops8_a: आप सीढ़ी बनाने के लिए पैटर्न को कितनी बार दोहराएंगे?
        courseB_artist_loops8_b: यह देखने के लिए आपको दिए कोड को चलाने की कोशिश करें
          कि यह क्या करता है।
      courseB_artist_loops9:
        courseB_artist_loops9_a: याद रखें कि कूदना ब्लॉक्स का उपयोग लाइन खींचे बिना
          मूव करने के लिए किया जा सकता है।
        courseB_artist_loops9_b: इस पहेली को हल करने के लिए आप W ब्लॉक का उपयोग करना
          चाहेंगे।
        courseB_artist_loops9_c: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां रखना
          है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
      courseB_artist_loops9_2018:
        courseB_artist_loops9_a: याद रखें कि कूदना ब्लॉक्स का उपयोग लाइन खींचे बिना
          मूव करने के लिए किया जा सकता है।
        courseB_artist_loops9_b: इस पहेली को हल करने के लिए आप W ब्लॉक का उपयोग करना
          चाहेंगे।
        courseB_artist_loops9_c: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां रखना
          है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
      courseB_artist_loops9_2019:
        courseB_artist_loops9_a: याद रखें कि कूदना ब्लॉक्स का उपयोग लाइन खींचे बिना
          मूव करने के लिए किया जा सकता है।
        courseB_artist_loops9_b: इस पहेली को हल करने के लिए आप W ब्लॉक का उपयोग करना
          चाहेंगे।
        courseB_artist_loops9_c: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां रखना
          है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
      courseB_artist_loops_challenge1:
        courseB_artist_loops_challenge1_a: इस <xml>  <block type="simple_move_up_right"/></xml>
          तरह के ब्लॉक्स से आपका कलाकार तिरछा मूव कर पाएगा!
        courseB_artist_loops_challenge1_b: जब एक पासा समाप्त करते हैं, तो अगले पर
          `कूदें`!
        courseB_artist_loops_challenge1_c: आपको कुछ समान लाइनों पर दो बार `मूव करने`
          या `कूदने` की जरूरत होगी।
      courseB_artist_loops_challenge1_2018:
        courseB_artist_loops_challenge1_a: इस <xml>  <block type="simple_move_up_right"/></xml>
          तरह के ब्लॉक्स से आपका कलाकार तिरछा मूव कर पाएगा!
        courseB_artist_loops_challenge1_b: जब एक पासा समाप्त करते हैं, तो अगले पर
          `कूदें`!
        courseB_artist_loops_challenge1_c: आपको कुछ समान लाइनों पर दो बार `मूव करने`
          या `कूदने` की जरूरत होगी।
      courseB_artist_loops_challenge1_2019:
        courseB_artist_loops_challenge1_a: इस <xml>  <block type="simple_move_up_right"/></xml>
          तरह के ब्लॉक्स से आपका कलाकार तिरछा मूव कर पाएगा!
        courseB_artist_loops_challenge1_b: जब एक पासा समाप्त करते हैं, तो अगले पर
          `कूदें`!
        courseB_artist_loops_challenge1_c: आपको कुछ समान लाइनों पर दो बार `मूव करने`
          या `कूदने` की जरूरत होगी।
      courseB_artist_loops_challenge2:
        courseB_artist_loops_challenge2_a: X चित्रित करने के लिए आपको पहले ही कोड
          दे दिया गया है। आपको बस X को दोहराना है और अगले स्थान पर `कूदना` है।
        courseB_artist_loops_challenge2_b: आप बिना चित्रित किए अन्य खाली स्थानों पर
          मून करने के लिए `कूदना` ब्लॉक्स का उपयोग कर सकते हैं।
      courseB_artist_loops_challenge2_2018:
        courseB_artist_loops_challenge2_a: X चित्रित करने के लिए आपको पहले ही कोड
          दे दिया गया है। आपको बस X को दोहराना है और अगले स्थान पर `कूदना` है।
        courseB_artist_loops_challenge2_b: आप बिना चित्रित किए अन्य खाली स्थानों पर
          मून करने के लिए `कूदना` ब्लॉक्स का उपयोग कर सकते हैं।
      courseB_artist_loops_challenge2_2019:
        courseB_artist_loops_challenge2_a: X चित्रित करने के लिए आपको पहले ही कोड
          दे दिया गया है। आपको बस X को दोहराना है और अगले स्थान पर `कूदना` है।
        courseB_artist_loops_challenge2_b: आप बिना चित्रित किए अन्य खाली स्थानों पर
          मून करने के लिए `कूदना` ब्लॉक्स का उपयोग कर सकते हैं।
      courseB_collector_loops1:
        courseB_collector_loops1_a: <xml><block type="collector_collect_simplified"/></xml>
          ब्लॉक का उपयोग खजाने को चुनने के लिए किया जा सकता है, जब आप इसके बिल्कुल
          ऊपर खड़े हों।
      courseB_collector_loops10:
        courseB_collector_loops10_a: यदि आप पता नहीं लगा सकते कि `दोहराएं` लूप्स को
          कहां रखना है, तो कदम-दर-कदम कोड लिखें और पैटर्न खोजें।
        courseB_collector_loops10_b: मूव्स को कागज़ पर लिखने और पैटर्न खोजने की कोशिश
          करें।
      courseB_collector_loops10_2018:
        courseB_collector_loops10_a: यदि आप पता नहीं लगा सकते कि `दोहराएं` लूप्स को
          कहां रखना है, तो कदम-दर-कदम कोड लिखें और पैटर्न खोजें।
        courseB_collector_loops10_b: मूव्स को कागज़ पर लिखने और पैटर्न खोजने की कोशिश
          करें।
      courseB_collector_loops10_2019:
        courseB_collector_loops10_a: यदि आप पता नहीं लगा सकते कि `दोहराएं` लूप्स को
          कहां रखना है, तो कदम-दर-कदम कोड लिखें और पैटर्न खोजें।
        courseB_collector_loops10_b: मूव्स को कागज़ पर लिखने और पैटर्न खोजने की कोशिश
          करें।
      courseB_collector_loops1_2018:
        courseB_collector_loops1_a: <xml><block type="collector_collect_simplified"/></xml>
          ब्लॉक का उपयोग खजाने को चुनने के लिए किया जा सकता है, जब आप इसके बिल्कुल
          ऊपर खड़े हों।
      courseB_collector_loops1_2019:
        courseB_collector_loops1_a: <xml><block type="collector_collect_simplified"/></xml>
          ब्लॉक का उपयोग खजाने को चुनने के लिए किया जा सकता है, जब आप इसके बिल्कुल
          ऊपर खड़े हों।
      courseB_collector_loops2:
        courseB_collector_loops2_a: इससे पहले कि आप कोई खजाना एकत्र कर पाएं, आपको
          मूव करना होगा।
        courseB_collector_loops2_b: जब आप खजाने के साथ किसी स्थान पर पहुंच जाएं, तो
          इसे उठाने के लिए \<<xml><block type="collector_collect"/></xml> ब्लॉक का
          उपयोग करें।
      courseB_collector_loops2_2018:
        courseB_collector_loops2_a: इससे पहले कि आप कोई खजाना एकत्र कर पाएं, आपको
          मूव करना होगा।
        courseB_collector_loops2_b: जब आप खजाने के साथ किसी स्थान पर पहुंच जाएं, तो
          इसे उठाने के लिए \<<xml><block type="collector_collect"/></xml> ब्लॉक का
          उपयोग करें।
      courseB_collector_loops2_2019:
        courseB_collector_loops2_a: इससे पहले कि आप कोई खजाना एकत्र कर पाएं, आपको
          मूव करना होगा।
        courseB_collector_loops2_b: जब आप खजाने के साथ किसी स्थान पर पहुंच जाएं, तो
          इसे उठाने के लिए \<<xml><block type="collector_collect"/></xml> ब्लॉक का
          उपयोग करें।
      courseB_collector_loops3:
        courseB_collector_prog3_a: Try using a <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml> block to collect your
          treasure.
        courseB_collector_prog3_b: याद रखें कि आप दोहराने वाले लूप के अंदर एक से अधिक
          ब्लॉक रख सकते हैं।
      courseB_collector_loops3_2018:
        courseB_collector_prog3_a: Try using a <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml> block to collect your
          treasure.
        courseB_collector_prog3_b: याद रखें कि आप दोहराने वाले लूप के अंदर एक से अधिक
          ब्लॉक रख सकते हैं।
      courseB_collector_loops3_2019:
        courseB_collector_prog3_a: Try using a <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml> block to collect your
          treasure.
        courseB_collector_prog3_b: याद रखें कि आप दोहराने वाले लूप के अंदर एक से अधिक
          ब्लॉक रख सकते हैं।
      courseB_collector_loops4:
        courseB_collector_loops4_a: यह पता लगाने के लिए स्टेप बटन का उपयोग करने की
          कोशिश करें कि चीजें कहां गलत हो रही हैं।
        courseB_collector_loops4_b: लॉरेल के जाने की दूर को बदलने के लिए, लूप के चलने
          की संख्या को बदलें।
        courseB_collector_loops4_c: लॉरेल नीचे उतरने और `दोहराएं` लूप पूरा करने के
          बाद खजाना एकत्र करने की जरूरत है!
      courseB_collector_loops4_2018:
        courseB_collector_loops4_a: यह पता लगाने के लिए स्टेप बटन का उपयोग करने की
          कोशिश करें कि चीजें कहां गलत हो रही हैं।
        courseB_collector_loops4_b: लॉरेल के जाने की दूर को बदलने के लिए, लूप के चलने
          की संख्या को बदलें।
        courseB_collector_loops4_c: |-
          Laurel needs to walk down and collect the treasure after she finishes the `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml>loop!
      courseB_collector_loops4_2019:
        courseB_collector_loops4_a: यह पता लगाने के लिए स्टेप बटन का उपयोग करने की
          कोशिश करें कि चीजें कहां गलत हो रही हैं।
        courseB_collector_loops4_b: लॉरेल के जाने की दूर को बदलने के लिए, लूप के चलने
          की संख्या को बदलें।
        courseB_collector_loops4_c: |-
          Laurel needs to walk down and collect the treasure after she finishes the `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml>loop!
      courseB_collector_loops5:
        courseB_collector_loops5_a: काम पूरा करने के लिए एक से अधिक लूप का उपयोग करें।
        courseB_collector_loops5_b: यह देखने के लिए कई बार कोड चलाने की कोशिश करें
          कि क्या होता है।
      courseB_collector_loops5_2018:
        courseB_collector_loops5_a: काम पूरा करने के लिए एक से अधिक लूप का उपयोग करें।
        courseB_collector_loops5_b: यह देखने के लिए कई बार कोड चलाने की कोशिश करें
          कि क्या होता है।
      courseB_collector_loops5_2019:
        courseB_collector_loops5_a: काम पूरा करने के लिए एक से अधिक लूप का उपयोग करें।
        courseB_collector_loops5_b: यह देखने के लिए कई बार कोड चलाने की कोशिश करें
          कि क्या होता है।
      courseB_collector_loops6:
        courseB_collector_loops6_a: क्या आप पता नहीं लगा पा रहे हैं कि चीज़ें कहां
          गलत होना शुरू हुई हैं? अपने प्रोग्राम एक बार में एक ब्लॉक को दोहराने के
          लिए "स्टेप" बटन का उपयोग करें।
        courseB_collector_loops6_b: आप "3" पर क्लिक करके और अलग संख्या चुनकर दोहराने
          वाले लूप को चलाने की संख्या बदल सकते हैं।
        courseB_collector_loops6_c: इस पहेली को हल करने के लिए आप 3 `दोहराएं` लूप्स
          का उपयोग करना चाहेंगे।
        courseB_collector_loops6_d: यदि आप उलझन में हैं, तो इस पहेली को 3 भागों में
          बांटने की कोशिश करें।
      courseB_collector_loops6_2018:
        courseB_collector_loops6_a: क्या आप पता नहीं लगा पा रहे हैं कि चीज़ें कहां
          गलत होना शुरू हुई हैं? अपने प्रोग्राम एक बार में एक ब्लॉक को दोहराने के
          लिए "स्टेप" बटन का उपयोग करें।
        courseB_collector_loops6_b: आप "3" पर क्लिक करके और अलग संख्या चुनकर दोहराने
          वाले लूप को चलाने की संख्या बदल सकते हैं।
        courseB_collector_loops6_c: |-
          You will want to use 3 `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loops to solve this puzzle.
        courseB_collector_loops6_d: यदि आप उलझन में हैं, तो इस पहेली को 3 भागों में
          बांटने की कोशिश करें।
      courseB_collector_loops6_2019:
        courseB_collector_loops6_a: क्या आप पता नहीं लगा पा रहे हैं कि चीज़ें कहां
          गलत होना शुरू हुई हैं? अपने प्रोग्राम एक बार में एक ब्लॉक को दोहराने के
          लिए "स्टेप" बटन का उपयोग करें।
        courseB_collector_loops6_b: आप "3" पर क्लिक करके और अलग संख्या चुनकर दोहराने
          वाले लूप को चलाने की संख्या बदल सकते हैं।
        courseB_collector_loops6_c: |-
          You will want to use 3 `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> loops to solve this puzzle.
        courseB_collector_loops6_d: यदि आप उलझन में हैं, तो इस पहेली को 3 भागों में
          बांटने की कोशिश करें।
      courseB_collector_loops7:
        courseB_collector_loops7_a: यदि आपको पहेली को हल करने में मुश्किल हो रही है,
          तो इसे समझने में आपकी मदद के लिए इसे कागज़ पर चित्रित करने की कोशिश करें।
        courseB_collector_loops7_b: आपको इस पहेली को हल करने के लिए 3 दोहराने वाले
          लूप्स की जरूरत होगी और अंत में अतिरिक्त खजाने को न भूलें!
      courseB_collector_loops7_2018:
        courseB_collector_loops7_a: यदि आपको पहेली को हल करने में मुश्किल हो रही है,
          तो इसे समझने में आपकी मदद के लिए इसे कागज़ पर चित्रित करने की कोशिश करें।
        courseB_collector_loops7_b: आपको इस पहेली को हल करने के लिए 3 दोहराने वाले
          लूप्स की जरूरत होगी और अंत में अतिरिक्त खजाने को न भूलें!
      courseB_collector_loops7_2019:
        courseB_collector_loops7_a: यदि आपको पहेली को हल करने में मुश्किल हो रही है,
          तो इसे समझने में आपकी मदद के लिए इसे कागज़ पर चित्रित करने की कोशिश करें।
        courseB_collector_loops7_b: आपको इस पहेली को हल करने के लिए 3 दोहराने वाले
          लूप्स की जरूरत होगी और अंत में अतिरिक्त खजाने को न भूलें!
      courseB_collector_loops8:
        courseB_collector_loops8_challenge_a: यदि आप पता नहीं लगा सकते कि दोहराने
          वाले लूप्स को कहां रखना है, तो कदम-दर-कदम कोड लिखें और पैटर्न खोजें।
      courseB_collector_loops8_2018:
        courseB_collector_loops8_challenge_a: यदि आप पता नहीं लगा सकते कि दोहराने
          वाले लूप्स को कहां रखना है, तो कदम-दर-कदम कोड लिखें और पैटर्न खोजें।
      courseB_collector_loops8_2019:
        courseB_collector_loops8_challenge_a: यदि आप पता नहीं लगा सकते कि दोहराने
          वाले लूप्स को कहां रखना है, तो कदम-दर-कदम कोड लिखें और पैटर्न खोजें।
      courseB_collector_loops9:
        courseB_collector_loops9_a: क्या यह बहुत मुश्किल लगता है?  इसे अधिक आसान बनाने
          के लिए 3 छोटी समस्याओं में बांटें।
        courseB_collector_loops9_b: इस समाधान के लिए आपको 3 दोहराने वाले लूप्स की
          जरूरत होगी, दूसरे के बाद एक।
      courseB_collector_loops9_2018:
        courseB_collector_loops9_a: क्या यह बहुत मुश्किल लगता है?  इसे अधिक आसान बनाने
          के लिए 3 छोटी समस्याओं में बांटें।
        courseB_collector_loops9_b: इस समाधान के लिए आपको 3 दोहराने वाले लूप्स की
          जरूरत होगी, दूसरे के बाद एक।
      courseB_collector_loops9_2019:
        courseB_collector_loops9_a: क्या यह बहुत मुश्किल लगता है?  इसे अधिक आसान बनाने
          के लिए 3 छोटी समस्याओं में बांटें।
        courseB_collector_loops9_b: इस समाधान के लिए आपको 3 दोहराने वाले लूप्स की
          जरूरत होगी, दूसरे के बाद एक।
      courseB_collector_loops_challenge1:
        courseB_collector_loops_challenge1_b: |-
          Start by looping the following commands:

          <xml>
            <block type="maze_moveSouth">
              <next>
              <block type="collector_collect"></block>
              </next>
              </block>
          </xml>
        courseB_collector_loops_challenge1_c: |-
          प्रत्येक रास्ते के बीच दो बार पूर्व की ओर मूव करें।

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          आप ऐसा केवल 14 ब्लॉक्स के साथ कर सकते हैं। समाधान देखने के लिए एक और संकेत के लिए क्लिक करें।
        courseB_collector_loops_challenge1_d: |-
          Try this!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge1_2018:
        courseB_collector_loops_challenge1_b: |-
          Start by looping the following commands:

          <xml>
            <block type="maze_moveSouth">
              <next>
              <block type="collector_collect"></block>
              </next>
              </block>
          </xml>
        courseB_collector_loops_challenge1_c: |-
          प्रत्येक रास्ते के बीच दो बार पूर्व की ओर मूव करें।

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          आप ऐसा केवल 14 ब्लॉक्स के साथ कर सकते हैं। समाधान देखने के लिए एक और संकेत के लिए क्लिक करें।
        courseB_collector_loops_challenge1_d: |-
          Try this!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge1_2019:
        courseB_collector_loops_challenge1_b: |-
          Start by looping the following commands:

          <xml>
            <block type="maze_moveSouth">
              <next>
              <block type="collector_collect"></block>
              </next>
              </block>
          </xml>
        courseB_collector_loops_challenge1_c: |-
          प्रत्येक रास्ते के बीच दो बार पूर्व की ओर मूव करें।

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          आप ऐसा केवल 14 ब्लॉक्स के साथ कर सकते हैं। समाधान देखने के लिए एक और संकेत के लिए क्लिक करें।
        courseB_collector_loops_challenge1_d: |-
          Try this!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge2:
        courseB_collector_loops_challenge2_a: If something goes wrong, don't be afraid
          to start over. Don't give up!
        courseB_collector_loops_challenge2_b: |-
          If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!

          <xml><block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block></xml>
        courseB_collector_loops_challenge2_c: Try using a `repeat` block to collect
          the final pile of treasure!
        courseB_collector_loops_challenge2_d: |-
          Try this solution:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified_dropdown">
                  <title name="TIMES" config="3-10">4</title>
                  <statement name="DO">
                    <block type="maze_moveEast">
                      <next>
                        <block type="collector_collect">
                          <next>
                            <block type="maze_moveWest">
                              <next>
                                <block type="maze_moveWest">
                                  <next>
                                    <block type="maze_moveSouth"/>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_simplified_dropdown">
                      <title name="TIMES" config="3-10">6</title>
                      <statement name="DO">
                        <block type="collector_collect"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge2a:
        courseB_collector_loops_challenge2a_a: यदि कुछ गलत होता है, तो इसे डीबग करने
          की कोशिश करें। हार न मानें!
        courseB_collector_loops_challenge2a_b: भूलभुलैया को पार करने के लिए इस विकल्प
          को देखें। क्या आपको कोई ऐसा पैटर्न दिखाई दे रहा है, जिसे आप दोहरा सकते हों?
        courseB_collector_loops_challenge2a_c: सारा खजाना एकत्र करने के लिए, आपको
          अपने लूप के अंदर दो  <xml> <block type="collector_collect"/></xml> ब्लॉक्स
          जोड़ने या इसके अपने `दोहराएं` ब्लॉक के अंदर ब्लॉक रखने की जरूरत होगी।
      courseB_collector_loops_challenge2a_2018:
        courseB_collector_loops_challenge2a_a: यदि कुछ गलत होता है, तो इसे डीबग करने
          की कोशिश करें। हार न मानें!
        courseB_collector_loops_challenge2a_b: भूलभुलैया को पार करने के लिए इस विकल्प
          को देखें। क्या आपको कोई ऐसा पैटर्न दिखाई दे रहा है, जिसे आप दोहरा सकते हों?
        courseB_collector_loops_challenge2a_c: सारा खजाना एकत्र करने के लिए, आपको
          अपने लूप के अंदर दो  <xml> <block type="collector_collect"/></xml> ब्लॉक्स
          जोड़ने या इसके अपने `दोहराएं` ब्लॉक के अंदर ब्लॉक रखने की जरूरत होगी।
      courseB_collector_loops_challenge2a_2019:
        courseB_collector_loops_challenge2a_a: यदि कुछ गलत होता है, तो इसे डीबग करने
          की कोशिश करें। हार न मानें!
        courseB_collector_loops_challenge2a_b: भूलभुलैया को पार करने के लिए इस विकल्प
          को देखें। क्या आपको कोई ऐसा पैटर्न दिखाई दे रहा है, जिसे आप दोहरा सकते हों?
        courseB_collector_loops_challenge2a_c: सारा खजाना एकत्र करने के लिए, आपको
          अपने लूप के अंदर दो  <xml> <block type="collector_collect"/></xml> ब्लॉक्स
          जोड़ने या इसके अपने `दोहराएं` ब्लॉक के अंदर ब्लॉक रखने की जरूरत होगी।
      courseB_iceage_loops1:
        courseB_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseB_iceage_loops1_b: |-
          You will have to use this block:

          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops10:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the
          water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down
          on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseB_iceage_loops10_2019:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the
          water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down
          on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseB_iceage_loops1_2019:
        courseB_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseB_iceage_loops1_b: |-
          You will have to use this block:

          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops2:
        courseB_iceage_loops2_a: Break this puzzle into two pieces, one before the
          corner, and one after the corner.
        courseB_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseB_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseB_iceage_loops2_2019:
        courseB_iceage_loops2_a: Break this puzzle into two pieces, one before the
          corner, and one after the corner.
        courseB_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseB_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseB_iceage_loops3:
        courseB_iceage_loops3_a: |-
          Use this new block! <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">5</title>
              </block></xml>
        courseB_iceage_loops3_b: |-
          To repeat code, drag out a `repeat` loop,

          <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml>

          then put the block you want inside of it.
      courseB_iceage_loops3_2019:
        courseB_iceage_loops3_a: |-
          Use this new block!
           <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">5</title>
              </block></xml>
        courseB_iceage_loops3_b: |-
          To repeat code, drag out a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml>loop, then put the block you want inside of it.
      courseB_iceage_loops4:
        courseB_iceage_loops4_a: Try writing down the steps Scrat would take to get
          to the acorn. Do you see a pattern?
        courseB_iceage_loops4_b: Don't be afraid to run your code and see what happens!
        courseB_iceage_loops4_c: This is the path Scrat should take.
      courseB_iceage_loops4_2019:
        courseB_iceage_loops4_a: Try writing down the steps Scrat would take to get
          to the acorn. Do you see a pattern?
        courseB_iceage_loops4_b: Don't be afraid to run your code and see what happens!
        courseB_iceage_loops4_c: This is the path Scrat should take.
      courseB_iceage_loops6:
        courseB_iceage_loops6_a: Your final code will have **three** movement blocks.
        courseB_iceage_loops6_b: You only need to add **one** more loop!
        courseB_iceage_loops6_c: Your final path should look like this.
      courseB_iceage_loops6_2019:
        courseB_iceage_loops6_a: Your final code will have **three** movement blocks.
        courseB_iceage_loops6_b: You only need to add **one** more loop!
        courseB_iceage_loops6_c: Your final path should look like this.
      courseB_iceage_loops7:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece
          of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the
          acorn.
      courseB_iceage_loops7_2019:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece
          of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the
          acorn.
      courseB_iceage_loops8:
        courseB_iceage_loops8_a: Are the movement blocks right? What else can you
          change?
        courseB_iceage_loops8_b: The first loop should repeat **3** times, the second
          should repeat **5** times, the third loop should repeat **4** times, and
          the last loop should repeat **4** times.
        courseB_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseB_iceage_loops8_2019:
        courseB_iceage_loops8_a: Are the movement blocks right? What else can you
          change?
        courseB_iceage_loops8_b: The first loop should repeat **3** times, the second
          should repeat **5** times, the third loop should repeat **4** times, and
          the last loop should repeat **4** times.
        courseB_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseB_iceage_loops9:
        courseB_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller
          pieces. Don't be afraid to run your puzzle as you code!
        courseB_iceage_loops9_b: Your final code should have **4** loops.
        courseB_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseB_iceage_loops9_2019:
        courseB_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller
          pieces. Don't be afraid to run your puzzle as you code!
        courseB_iceage_loops9_b: Your final code should have **4** loops.
        courseB_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseB_maze_seq1:
        courseB_maze_seq1_a: पक्षी को मूव करने के लिए ब्लॉक्स को <xml><block type="when_run"/></xml>  ब्लॉक
          के साथ जोड़ें!
        courseB_maze_seq1_b: इनमें से तीन  <xml><block type="maze_moveSouth"/></xml>
          तीरों को बाहर खींचें और फिर अपने पक्षी को सूअर तक ले जाने के लिए उन्हें
          <xml><block type="when_run"/></xml>  ब्लॉक से जोड़ें।
      courseB_maze_seq10:
        courseB_maze_seq10_a: पहले कागज़ पर स्टेप्स को लिखने की कोशिश करें।
        courseB_maze_seq10_b: सूअर तक पहुंचने के लिए आपको दो अलग दिशाओं में मूव करने
          की जरूरत होगी।
      courseB_maze_seq11:
        courseB_maze_seq11_a: पहले कागज़ पर स्टेप्स को लिखने की कोशिश करें।
        courseB_maze_seq11_b: 'पहेली को दो भागों में हल करें: एक कोने से पहले और एक
          कोने के बाद।'
      courseB_maze_seq1_2018:
        courseB_maze_seq1_a: Connect blocks to the <xml><block type="when_run"/></xml>
          block to make Scrat move!
        courseB_maze_seq1_b: Drag three of these <xml><block type="maze_moveSouth"/></xml>
          arrows out and connect them to the <xml><block type="when_run"/></xml> block
          to get Scrat to the acorn.
      courseB_maze_seq1_2019:
        courseB_maze_seq1_a: Connect blocks to the <xml><block type="when_run"/></xml>
          block to make Scrat move!
        courseB_maze_seq1_b: Drag three of these <xml><block type="maze_moveSouth"/></xml>
          arrows out and connect them to the <xml><block type="when_run"/></xml> block
          to get Scrat to the acorn.
      courseB_maze_seq2:
        courseB_maze_seq2_a: इस प्रोग्राम में 1 ब्लॉक गायब है। क्या आप पता लगा सकते
          हैं कि वह कौन-सा है?
        courseB_maze_seq2_b: यह देखने के लिए आपको दिए कोड को चलाने की कोशिश करें कि
          पक्षी को आगे क्या करने की जरूरत है।
      courseB_maze_seq3:
        courseB_maze_seq3_a: 1 ब्लॉक पक्षी को गलत दिशा में मूव कर रहा है। क्या आप
          पता लगा सकते हैं कि वह कौन-सा है और इसे सही ब्लॉक से बदल सकते हैं?
        courseB_maze_seq3_b: यह जानने के लिए स्टेप बटन का उपयोग करने की कोशिश करें
          कि प्रोग्राम कहां गलत हुआ है। क्या यह पहला स्टेप नहीं है? दूसरा?
        courseB_maze_seq3_c: <xml><block type="maze_moveWest"/></xml>  ब्लॉक पक्षी
          को सही दिशा में मूव कर रहा प्रतीत नहीं होता।
      courseB_maze_seq4:
        courseB_maze_seq4_a: जब तक आप सूअर तक न पहुंच जाएं, एक बार में एक निर्देश
          जोड़ने की कोशिश करें।
        courseB_maze_seq4_b: इस पहेली को हल करने के लिए आप <xml><block type="maze_moveEast"/></xml>  ब्लॉक
          का उपयोग करना चाहेंगे।
      courseB_maze_seq4_2018:
        courseB_maze_seq4_a: Try adding one instruction at a time until you get to
          the acorn.
        courseB_maze_seq4_b: इस पहेली को हल करने के लिए आप <xml><block type="maze_moveEast"/></xml>  ब्लॉक
          का उपयोग करना चाहेंगे।
      courseB_maze_seq4_2019:
        courseB_maze_seq4_a: Try adding one instruction at a time until you get to
          the acorn.
        courseB_maze_seq4_b: इस पहेली को हल करने के लिए आप <xml><block type="maze_moveEast"/></xml>  ब्लॉक
          का उपयोग करना चाहेंगे।
      courseB_maze_seq5:
        courseB_maze_seq5_a: यदि आप अटक जाते हैं, तो रास्ते को कागज़ पर चित्रित करने
          की कोशिश करें।
        courseB_maze_seq5_b: इस पहेली को हल करने के 2 तरीके हैं!
        courseB_maze_seq5_c: क्या आप निश्चित नहीं हैं कि सूअर तक कैसे पहुंचना है?  इस
          रास्ते को आजमाएं।
      courseB_maze_seq5_2018:
        courseB_maze_seq5_a: यदि आप अटक जाते हैं, तो रास्ते को कागज़ पर चित्रित करने
          की कोशिश करें।
        courseB_maze_seq5_b: इस पहेली को हल करने के 2 तरीके हैं!
        courseB_maze_seq5_c: Not sure how to get to the acorn?  Try this path.
      courseB_maze_seq5_2019:
        courseB_maze_seq5_a: यदि आप अटक जाते हैं, तो रास्ते को कागज़ पर चित्रित करने
          की कोशिश करें।
        courseB_maze_seq5_b: इस पहेली को हल करने के 2 तरीके हैं!
        courseB_maze_seq5_c: Not sure how to get to the acorn?  Try this path.
      courseB_maze_seq6:
        courseB_maze_seq6_a: आपके अंतिम कोड में तीन गतिविधि ब्लॉक होने चाहिएं।
        courseB_maze_seq6_b: यदि आप अटक जाते हैं, तो पहेली को दो भागों में हल करने
          की कोशिश करें, एक तिरछे और एक ऊपर-नीचे।
        courseB_maze_seq5_c: इस पहेली को हल करने के दो तरीके हैं।
        courseB_maze_seq5_d: क्या आप निश्चित नहीं हैं कि सूअर तक कैसे पहुंचना है?
          इस रास्ते को आजमाएं!
      courseB_maze_seq6_2018:
        courseB_maze_seq6_a: आपके अंतिम कोड में तीन गतिविधि ब्लॉक होने चाहिएं।
        courseB_maze_seq6_b: यदि आप अटक जाते हैं, तो पहेली को दो भागों में हल करने
          की कोशिश करें, एक तिरछे और एक ऊपर-नीचे।
        courseB_maze_seq5_c: इस पहेली को हल करने के दो तरीके हैं।
        courseB_maze_seq5_d: Not sure how to get to the acorn? Try this path!
      courseB_maze_seq6_2019:
        courseB_maze_seq6_a: आपके अंतिम कोड में तीन गतिविधि ब्लॉक होने चाहिएं।
        courseB_maze_seq6_b: यदि आप अटक जाते हैं, तो पहेली को दो भागों में हल करने
          की कोशिश करें, एक तिरछे और एक ऊपर-नीचे।
        courseB_maze_seq5_c: इस पहेली को हल करने के दो तरीके हैं।
        courseB_maze_seq5_d: Not sure how to get to the acorn? Try this path!
      courseB_maze_seq7:
        courseB_maze_seq7_a: पक्षी को सूअर के पास ले जाने के लिए 1 ब्लॉक जोड़ें।
        courseB_maze_seq7_b: आपको दिए कोड को चलाने की कोशिश करें और देखें कि आप कहां
          पहुंचते हैं।
        courseB_maze_seq7_c: क्या आप सूअर तक नहीं पहुंच पा रहे हैं?  इस रास्ते को
          आजमाएं!
      courseB_maze_seq7_2018:
        courseB_maze_seq7_a: Add 1 block to move Scrat to the acorn.
        courseB_maze_seq7_b: आपको दिए कोड को चलाने की कोशिश करें और देखें कि आप कहां
          पहुंचते हैं।
        courseB_maze_seq7_c: Can't get to the acorn?  Try this path!
      courseB_maze_seq7_2019:
        courseB_maze_seq7_a: Add 1 block to move Scrat to the acorn.
        courseB_maze_seq7_b: आपको दिए कोड को चलाने की कोशिश करें और देखें कि आप कहां
          पहुंचते हैं।
        courseB_maze_seq7_c: Can't get to the acorn?  Try this path!
      courseB_maze_seq8:
        courseB_maze_seq8_a: जब तक आप पहेली हल न कर लें, एक बार में एक ब्लॉक जोड़ने
          की कोशिश करें।
        courseB_maze_seq8_b: इस पहेली को हल करने के दो तरीके हैं!
        courseB_maze_seq8_c: क्या आपको पता नहीं है कि किस रास्ते पर जाना है? इस रास्ते
          को आजमाएं!
      courseB_maze_seq8_2018:
        courseB_maze_seq8_a: जब तक आप पहेली हल न कर लें, एक बार में एक ब्लॉक जोड़ने
          की कोशिश करें।
        courseB_maze_seq8_b: There is more than one way to solve this puzzle!
        courseB_maze_seq8_c: क्या आपको पता नहीं है कि किस रास्ते पर जाना है? इस रास्ते
          को आजमाएं!
      courseB_maze_seq8_2019:
        courseB_maze_seq8_a: जब तक आप पहेली हल न कर लें, एक बार में एक ब्लॉक जोड़ने
          की कोशिश करें।
        courseB_maze_seq8_b: There is more than one way to solve this puzzle!
        courseB_maze_seq8_c: क्या आपको पता नहीं है कि किस रास्ते पर जाना है? इस रास्ते
          को आजमाएं!
      courseB_maze_seq9:
        courseB_maze_seq9_a: पहले कागज़ पर सभी स्टेप्स को लिखने की कोशिश करें।
        courseB_maze_seq9_b: अपना प्रोग्राम एक बार में एक ब्लॉक बनाएं और जैसे-जैसे
          आप बनाएं, तो टेस्ट करें।
        courseB_maze_seq9_c: इस पहेली को हल करने के दो तरीके हैं।
        courseB_maze_seq9_d: क्या आप अटक गए हैं?  इस रास्ते को आजमाएं!
      courseB_maze_seq9_2018:
        courseB_maze_seq9_a: पहले कागज़ पर सभी स्टेप्स को लिखने की कोशिश करें।
        courseB_maze_seq9_b: अपना प्रोग्राम एक बार में एक ब्लॉक बनाएं और जैसे-जैसे
          आप बनाएं, तो टेस्ट करें।
        courseB_maze_seq9_c: इस पहेली को हल करने के दो तरीके हैं।
        courseB_maze_seq9_d: क्या आप अटक गए हैं?  इस रास्ते को आजमाएं!
      courseB_maze_seq9_2019:
        courseB_maze_seq9_a: पहले कागज़ पर सभी स्टेप्स को लिखने की कोशिश करें।
        courseB_maze_seq9_b: अपना प्रोग्राम एक बार में एक ब्लॉक बनाएं और जैसे-जैसे
          आप बनाएं, तो टेस्ट करें।
        courseB_maze_seq9_c: इस पहेली को हल करने के दो तरीके हैं।
        courseB_maze_seq9_d: क्या आप अटक गए हैं?  इस रास्ते को आजमाएं!
      courseB_maze_seq_challenge1:
        courseB_maze_seq_challenge1_a: इस बार सबसे छोटा रास्ता शायद काम नहीं करेगा।
        courseB_maze_seq_challenge1_b: Try using the <xml><block type="maze_moveWest"/></xml>
          block to start.
      courseB_maze_seq_challenge1_2018:
        courseB_maze_seq_challenge1_a: इस बार सबसे छोटा रास्ता शायद काम नहीं करेगा।
        courseB_maze_seq_challenge1_b: Try using the <xml><block type="maze_moveWest"/></xml>
          block to start.
      courseB_maze_seq_challenge1_2019:
        courseB_maze_seq_challenge1_a: इस बार सबसे छोटा रास्ता शायद काम नहीं करेगा।
        courseB_maze_seq_challenge1_b: Try using the <xml><block type="maze_moveWest"/></xml>
          block to start.
      courseB_maze_seq_challenge2:
        courseB_maze_seq_challenge2_a: इस पहेली को हल करने के लिए आपको ब्लॉक्स जोड़ने
          या हटाने की जरूरत नहीं है।
        courseB_maze_seq_challenge2_b: ब्लॉक्स को दुबारा क्रम में लगाएं और सीढ़ियों
          के पैटर्न वाला रास्ता लें।
      courseB_maze_seq_challenge2_2018:
        courseB_maze_seq_challenge2_a: इस पहेली को हल करने के लिए आपको ब्लॉक्स जोड़ने
          या हटाने की जरूरत नहीं है।
        courseB_maze_seq_challenge2_b: ब्लॉक्स को दुबारा क्रम में लगाएं और सीढ़ियों
          के पैटर्न वाला रास्ता लें।
      courseB_maze_seq_challenge2_2019:
        courseB_maze_seq_challenge2_a: इस पहेली को हल करने के लिए आपको ब्लॉक्स जोड़ने
          या हटाने की जरूरत नहीं है।
        courseB_maze_seq_challenge2_b: ब्लॉक्स को दुबारा क्रम में लगाएं और सीढ़ियों
          के पैटर्न वाला रास्ता लें।
      courseB_playlab_events2:
        courseB_playlab_events2_a: |-
          This is the block to have Daisy say something:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
            </xml>
      courseB_playlab_events2_2018:
        courseB_playlab_events2_a: |-
          This is the block to have Daisy say something:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
            </xml>
      courseB_playlab_events2_2019:
        courseB_playlab_events2_a: |-
          This is the block to have Daisy say something:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
            </xml>
      courseB_playlab_events3:
        courseB_playlab_events3_a: |-
          This is the block you should use to add the event:

          <xml>
          <block type="studio_whenSpriteClicked">
              <title name="SPRITE">0</title>
            </block>
            </xml>
        courseB_playlab_events3_b: |-
          This is the block you need to switch Daisy's mood:

          <xml>
          <block type="studio_setSpriteEmotion">
              <title name="SPRITE">0</title>
              <title name="VALUE">random</title>
            </block>
            </xml>
      courseB_playlab_events3_2018:
        courseB_playlab_events3_a: |-
          This is the block you should use to add the event:

          <xml>
          <block type="studio_whenSpriteClicked">
              <title name="SPRITE">0</title>
            </block>
            </xml>
        courseB_playlab_events3_b: |-
          This is the block you need to switch Daisy's mood:

          <xml>
          <block type="studio_setSpriteEmotion">
              <title name="SPRITE">0</title>
              <title name="VALUE">random</title>
            </block>
            </xml>
      courseB_playlab_events3_2019:
        courseB_playlab_events3_a: |-
          This is the block you should use to add the event:

          <xml>
          <block type="studio_whenSpriteClicked">
              <title name="SPRITE">0</title>
            </block>
            </xml>
        courseB_playlab_events3_b: |-
          This is the block you need to switch Daisy's mood:

          <xml>
          <block type="studio_setSpriteEmotion">
              <title name="SPRITE">0</title>
              <title name="VALUE">random</title>
            </block>
            </xml>
      courseB_playlab_events4:
        courseB_playlab_events4_a: |-
          This is the event that controls the left arrow:

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block>
            </xml>
        courseB_playlab_events4_b: |-
          This is the block that makes the knight move left.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block>
            </xml>
      courseB_playlab_events4_2018:
        courseB_playlab_events4_a: |-
          This is the event that controls the left arrow:

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block>
            </xml>
        courseB_playlab_events4_b: |-
          This is the block that makes the knight move left.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block>
            </xml>
      courseB_playlab_events4_2019:
        courseB_playlab_events4_a: |-
          This is the event that controls the left arrow:

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block>
            </xml>
        courseB_playlab_events4_b: |-
          This is the block that makes the knight move left.

          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block>
            </xml>
      courseB_playlab_events5:
        courseB_playlab_events5_a: "This is the event block that controls the right
          arrow: \n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n
          \ </block>\n  </xml>"
        courseB_playlab_events5_b: "This is the block that makes the knight run away.
          \n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n
          \   <title name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events5_2018:
        courseB_playlab_events5_a: "This is the event block that controls the right
          arrow: \n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n
          \ </block>\n  </xml>"
        courseB_playlab_events5_b: "This is the block that makes the knight run away.
          \n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n
          \   <title name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events5_2019:
        courseB_playlab_events5_a: "This is the event block that controls the right
          arrow: \n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n
          \ </block>\n  </xml>"
        courseB_playlab_events5_b: "This is the block that makes the knight run away.
          \n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n
          \   <title name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events6:
        courseB_playlab_events6_a: |-
          You will need these event blocks:

          <xml>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">up</title>
            </block>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">down</title>
            </block>
            </xml>
        courseB_playlab_events6_b: |-
          विभिन्न दिशाएं चुनने के लिए हरे `जब ___ तीर को दबाया गया हो` इवेंट ब्लॉक्स पर ड्रॉप डाउन तीरों का उपयोग करें।

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: पास करने के लिए सभी झंडों तक पहुंचें!
      courseB_playlab_events6_2018:
        courseB_playlab_events6_a: |-
          You will need these event blocks:

          <xml>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">up</title>
            </block>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">down</title>
            </block>
            </xml>
        courseB_playlab_events6_b: |-
          विभिन्न दिशाएं चुनने के लिए हरे `जब ___ तीर को दबाया गया हो` इवेंट ब्लॉक्स पर ड्रॉप डाउन तीरों का उपयोग करें।

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: पास करने के लिए सभी झंडों तक पहुंचें!
      courseB_playlab_events6_2019:
        courseB_playlab_events6_a: |-
          You will need these event blocks:

          <xml>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">up</title>
            </block>
            <block type="studio_whenArrow" id="callMe">
              <title name="VALUE">down</title>
            </block>
            </xml>
        courseB_playlab_events6_b: |-
          विभिन्न दिशाएं चुनने के लिए हरे `जब ___ तीर को दबाया गया हो` इवेंट ब्लॉक्स पर ड्रॉप डाउन तीरों का उपयोग करें।

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: पास करने के लिए सभी झंडों तक पहुंचें!
      courseB_playlab_events7:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:

          <xml>
          <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">1</title>
            </block>
          </xml>
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.

          <xml>
          <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
          </xml>
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:

          <xml>
          <block type="studio_vanish">
              <title name="SPRITE">1</title>
            </block>
          </xml>
      courseB_playlab_events7_2018:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:

          <xml>
          <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">1</title>
            </block>
          </xml>
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.

          <xml>
          <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
          </xml>
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:

          <xml>
          <block type="studio_vanish">
              <title name="SPRITE">1</title>
            </block>
          </xml>
      courseB_playlab_events7_2019:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:

          <xml>
          <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">1</title>
            </block>
          </xml>
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.

          <xml>
          <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
          </xml>
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:

          <xml>
          <block type="studio_vanish">
              <title name="SPRITE">1</title>
            </block>
          </xml>
      courseB_playlab_events_challenge1:
        courseB_playlab_events_challenge1_a: "जब आप ▼ को दबाएं तो अन्य जानवरों को
          नीचे मूव हों। \n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n
          \   <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Change the speed of the animals by using this block:

          <xml>
            <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
            </block></xml>
        courseB_playlab_events_challenge1_c: |-
          What will the everyone say when the race is over? Make them talk with this event:

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">2</title>
              <next>
                <block type="studio_saySpriteChoices">
                  <title name="SPRITE">2</title>
                  <title name="VALUE">Woo hoo!</title>
                </block>
              </next>
            </block>
          </xml>
      courseB_playlab_events_challenge1_2018:
        courseB_playlab_events_challenge1_a: "जब आप ▼ को दबाएं तो अन्य जानवरों को
          नीचे मूव हों। \n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n
          \   <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Change the speed of the animals by using this block:

          <xml>
            <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
            </block></xml>
        courseB_playlab_events_challenge1_c: |-
          What will the everyone say when the race is over? Make them talk with this event:

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">2</title>
              <next>
                <block type="studio_saySpriteChoices">
                  <title name="SPRITE">2</title>
                  <title name="VALUE">Woo hoo!</title>
                </block>
              </next>
            </block>
          </xml>
      courseB_playlab_events_challenge1_2019:
        courseB_playlab_events_challenge1_a: "जब आप ▼ को दबाएं तो अन्य जानवरों को
          नीचे मूव हों। \n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n
          \   <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Change the speed of the animals by using this block:

          <xml>
            <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
            </block></xml>
        courseB_playlab_events_challenge1_c: |-
          What will the everyone say when the race is over? Make them talk with this event:

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">2</title>
              <next>
                <block type="studio_saySpriteChoices">
                  <title name="SPRITE">2</title>
                  <title name="VALUE">Woo hoo!</title>
                </block>
              </next>
            </block>
          </xml>
      courseB_playlab_events_challenge2:
        courseB_playlab_events_challenge2_a: जब क्लिक किया जाए तो गेम में प्रत्येक
          जानवर गायब हो जाएगा। यह एक या दो सेकंड के बाद वापस भी आ जाएगा!
        courseB_playlab_events_challenge2_b: |-
          Use other event blocks to make the other animals disappear!

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block>
            </xml>
        courseB_playlab_events_challenge2_c: |-
          Use extra commands to play sounds or score points when you click the animals!

          <xml>
            <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
            <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          इसे मिलाएं!

          कुछ जानवरों को अन्य के मुकाबले अधिक अंक दिलवाएं।
          अलग-अलग ध्वनियों का उपयोग करें।
          जानवरों के मूड बदलें!
      courseB_playlab_events_challenge2_2018:
        courseB_playlab_events_challenge2_a: जब क्लिक किया जाए तो गेम में प्रत्येक
          जानवर गायब हो जाएगा। यह एक या दो सेकंड के बाद वापस भी आ जाएगा!
        courseB_playlab_events_challenge2_b: |-
          Use other event blocks to make the other animals disappear!

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block>
            </xml>
        courseB_playlab_events_challenge2_c: |-
          Use extra commands to play sounds or score points when you click the animals!

          <xml>
            <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
            <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          इसे मिलाएं!

          कुछ जानवरों को अन्य के मुकाबले अधिक अंक दिलवाएं।
          अलग-अलग ध्वनियों का उपयोग करें।
          जानवरों के मूड बदलें!
      courseB_playlab_events_challenge2_2019:
        courseB_playlab_events_challenge2_a: जब क्लिक किया जाए तो गेम में प्रत्येक
          जानवर गायब हो जाएगा। यह एक या दो सेकंड के बाद वापस भी आ जाएगा!
        courseB_playlab_events_challenge2_b: |-
          Use other event blocks to make the other animals disappear!

          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block>
            </xml>
        courseB_playlab_events_challenge2_c: |-
          Use extra commands to play sounds or score points when you click the animals!

          <xml>
            <block type="studio_playSound">
              <title name="SOUND">slap</title>
            </block>
            <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          इसे मिलाएं!

          कुछ जानवरों को अन्य के मुकाबले अधिक अंक दिलवाएं।
          अलग-अलग ध्वनियों का उपयोग करें।
          जानवरों के मूड बदलें!
      courseB_starWars_prog1:
        courseB_starWars_prog1_a: एक बार में ब्लॉक्स जोड़ने की कोशिश करें, फिर यह
          देखने के लिए कि क्या हुआ, "रन" पर क्लिक करें।
        courseB_starWars_prog1_b: |-
          आप इस पहेली को हल करने के लिए पूर्व की ओर मूव करना चाहेंगे। आपको कितनी दूर मूव करने की जरूरत है?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2018:
        courseB_starWars_prog1_a: एक बार में ब्लॉक्स जोड़ने की कोशिश करें, फिर यह
          देखने के लिए कि क्या हुआ, "रन" पर क्लिक करें।
        courseB_starWars_prog1_b: |-
          आप इस पहेली को हल करने के लिए पूर्व की ओर मूव करना चाहेंगे। आपको कितनी दूर मूव करने की जरूरत है?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2019:
        courseB_starWars_prog1_a: एक बार में ब्लॉक्स जोड़ने की कोशिश करें, फिर यह
          देखने के लिए कि क्या हुआ, "रन" पर क्लिक करें।
        courseB_starWars_prog1_b: |-
          आप इस पहेली को हल करने के लिए पूर्व की ओर मूव करना चाहेंगे। आपको कितनी दूर मूव करने की जरूरत है?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog2:
        courseB_starWars_prog2_a: इस समस्या को दो भागों में बांटें। लोहे के चूरे का
          एक-एक ढेर प्राप्त करें, फिर यह पता करें कि दूसरे तक कैसे पहुंचना है।
      courseB_starWars_prog2_2018:
        courseB_starWars_prog2_a: Split this problem into two parts. Get one pile
          of scrap metal, then figure out how to get to the other one.
      courseB_starWars_prog2_2019:
        courseB_starWars_prog2_a: इस समस्या को दो भागों में बांटें। लोहे के चूरे का
          एक-एक ढेर प्राप्त करें, फिर यह पता करें कि दूसरे तक कैसे पहुंचना है।
      courseB_starWars_prog3:
        courseB_starWars_prog3_a: इस पहेली को हल करने के लिए आपको 3 तरीके से मूव करने
          की जरूरत होगी।
        courseB_starWars_prog3_b: एक बार में कोड के एक पीस का निर्माण करें। यह पता
          लगाने के लिए इसे संचालित करें कि वहां से कहां जाना है।
      courseB_starWars_prog3_2018:
        courseB_starWars_prog3_a: इस पहेली को हल करने के लिए आपको 3 तरीके से मूव करने
          की जरूरत होगी।
        courseB_starWars_prog3_b: एक बार में कोड के एक पीस का निर्माण करें। यह पता
          लगाने के लिए इसे संचालित करें कि वहां से कहां जाना है।
      courseB_starWars_prog3_2019:
        courseB_starWars_prog3_a: इस पहेली को हल करने के लिए आपको 3 तरीके से मूव करने
          की जरूरत होगी।
        courseB_starWars_prog3_b: एक बार में कोड के एक पीस का निर्माण करें। यह पता
          लगाने के लिए इसे संचालित करें कि वहां से कहां जाना है।
      courseB_starWars_prog4:
        courseB_starWars_prog4_a: एक बार में कोड के एक पीस का निर्माण करें। यह पता
          लगाने के लिए इसे संचालित करें कि वहां से कहां जाना है।
        courseB_starWars_prog4_b: |-
          Try using the `repeat` block for shorter code.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog4_2018:
        courseB_starWars_prog4_a: एक बार में कोड के एक पीस का निर्माण करें। यह पता
          लगाने के लिए इसे संचालित करें कि वहां से कहां जाना है।
        courseB_starWars_prog4_b: |-
          Try using the `repeat` block for shorter code.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog4_2019:
        courseB_starWars_prog4_a: एक बार में कोड के एक पीस का निर्माण करें। यह पता
          लगाने के लिए इसे संचालित करें कि वहां से कहां जाना है।
        courseB_starWars_prog4_b: |-
          Try using the `repeat` block for shorter code.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog5:
        courseB_starWars_prog5_a: क्या यह पैटर्न पिछली पहेली की तरह छोटा दिखाई नहीं
          देता?
        courseB_starWars_prog5_b: BB-8 लोहे के चूरे को खींचेगा, जब वह इस पर लुढ़केगा।
        courseB_starWars_prog5_c: अपनी उंगली से इस पैटर्न को ट्रेस करें। जब आप मूव
          करें तो मेटल के टुकड़ों को गिनें।
        courseB_starWars_prog5_da: |-
          देखें कि क्या होता है, यदि आप सीढ़ी-स्टेप पहेली वाला हल ही उपयोग करते हैं:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2018:
        courseB_starWars_prog5_a: क्या यह पैटर्न पिछली पहेली की तरह छोटा दिखाई नहीं
          देता?
        courseB_starWars_prog5_b: BB-8 लोहे के चूरे को खींचेगा, जब वह इस पर लुढ़केगा।
        courseB_starWars_prog5_c: अपनी उंगली से इस पैटर्न को ट्रेस करें। जब आप मूव
          करें तो मेटल के टुकड़ों को गिनें।
        courseB_starWars_prog5_da: |-
          देखें कि क्या होता है, यदि आप सीढ़ी-स्टेप पहेली वाला हल ही उपयोग करते हैं:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2019:
        courseB_starWars_prog5_a: क्या यह पैटर्न पिछली पहेली की तरह छोटा दिखाई नहीं
          देता?
        courseB_starWars_prog5_b: BB-8 लोहे के चूरे को खींचेगा, जब वह इस पर लुढ़केगा।
        courseB_starWars_prog5_c: अपनी उंगली से इस पैटर्न को ट्रेस करें। जब आप मूव
          करें तो मेटल के टुकड़ों को गिनें।
        courseB_starWars_prog5_da: |-
          देखें कि क्या होता है, यदि आप सीढ़ी-स्टेप पहेली वाला हल ही उपयोग करते हैं:

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog6:
        courseB_starWars_prog6_a: यह पैटर्न प्रति दिशा दो मूव्स वाला सीढ़ी स्टेप है!
        courseB_starWars_prog6_b: |-
          Try using the `repeat` block for shorter code.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog6_2018:
        courseB_starWars_prog6_a: यह पैटर्न प्रति दिशा दो मूव्स वाला सीढ़ी स्टेप है!
        courseB_starWars_prog6_b: |-
          Try using the `repeat` block for shorter code.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog6_2019:
        courseB_starWars_prog6_a: यह पैटर्न प्रति दिशा दो मूव्स वाला सीढ़ी स्टेप है!
        courseB_starWars_prog6_b: |-
          Try using the `repeat` block for shorter code.

          <xml>  <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog7:
        courseB_starWars_prog7_a: क्या यह पैटर्न पिछली पहेली की तरह छोटा दिखाई नहीं
          देता?
        courseB_starWars_prog7_b: BB-8 लोहे के चूरे को खींचेगा, जब वह इस पर लुढ़केगा।
        courseB_starWars_prog7_c: इस पहेली के ऊपर बड़ा सीढ़ी स्टेप पैटर्न चित्रित
          करने की कोशिश करें। क्या यह सारे लोहे के चूरे को ढकता है?
      courseB_starWars_prog7_2018:
        courseB_starWars_prog7_a: क्या यह पैटर्न पिछली पहेली की तरह छोटा दिखाई नहीं
          देता?
        courseB_starWars_prog7_b: BB-8 लोहे के चूरे को खींचेगा, जब वह इस पर लुढ़केगा।
        courseB_starWars_prog7_c: इस पहेली के ऊपर बड़ा सीढ़ी स्टेप पैटर्न चित्रित
          करने की कोशिश करें। क्या यह सारे लोहे के चूरे को ढकता है?
      courseB_starWars_prog7_2019:
        courseB_starWars_prog7_a: क्या यह पैटर्न पिछली पहेली की तरह छोटा दिखाई नहीं
          देता?
        courseB_starWars_prog7_b: BB-8 लोहे के चूरे को खींचेगा, जब वह इस पर लुढ़केगा।
        courseB_starWars_prog7_c: इस पहेली के ऊपर बड़ा सीढ़ी स्टेप पैटर्न चित्रित
          करने की कोशिश करें। क्या यह सारे लोहे के चूरे को ढकता है?
      courseB_starWars_prog8:
        courseB_starWars_prog8_a: खाली स्थानों के सेट पर वापस जाना ठीक है, जहां आप
          पहले ही जा चुके हैं।
        courseB_starWars_prog8_b: |-
          यह देखने के लिए `दोहराएं` ब्लॉक का उपयोग करने की कोशिश करें कि उस कोड के साथ क्या होता है, जिसे आप अंदर रखते हैं।

          <xml>
            <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog8_2018:
        courseB_starWars_prog8_a: खाली स्थानों के सेट पर वापस जाना ठीक है, जहां आप
          पहले ही जा चुके हैं।
        courseB_starWars_prog8_b: |-
          यह देखने के लिए `दोहराएं` ब्लॉक का उपयोग करने की कोशिश करें कि उस कोड के साथ क्या होता है, जिसे आप अंदर रखते हैं।

          <xml>
            <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog8_2019:
        courseB_starWars_prog8_a: खाली स्थानों के सेट पर वापस जाना ठीक है, जहां आप
          पहले ही जा चुके हैं।
        courseB_starWars_prog8_b: |-
          यह देखने के लिए `दोहराएं` ब्लॉक का उपयोग करने की कोशिश करें कि उस कोड के साथ क्या होता है, जिसे आप अंदर रखते हैं।

          <xml>
            <block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block>
          </xml>
      courseB_starWars_prog9:
        courseB_starWars_prog9_a: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
        courseB_starWars_prog9_b: इस पहेली को हल करने के कई तरीके हैं।
        courseB_starWars_prog9_c: क्या `दोहराएं` लूप यहां मददगार होगा?
      courseB_starWars_prog9_2018:
        courseB_starWars_prog9_a: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
        courseB_starWars_prog9_b: इस पहेली को हल करने के कई तरीके हैं।
        courseB_starWars_prog9_c: |-
          Could a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block></xml>loop help out here?
      courseB_starWars_prog9_2019:
        courseB_starWars_prog9_a: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
        courseB_starWars_prog9_b: इस पहेली को हल करने के कई तरीके हैं।
        courseB_starWars_prog9_c: |-
          Could a `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block></xml>loop help out here?
      courseC19_playLab_EOC1:
        courseE_playLab_scaffold1_a: "`अभिनेता 1 को ??? चित्र पर सेट करें` ब्लॉक का
          उपयोग स्टेज पर अभिनेता जोड़ने के लिए किया जा सकता है।"
        courseE_playLab_scaffold1_b: प्रोग्राम के शुरू में अपने अभिनेता को प्रकट करने
          के लिए `जब चलाया जाए` के अंतर्गत `अभिनेता सेट करें` ब्लॉक रखें।
        courseE_playLab_scaffold1_c: अपने दृश्य में पृष्ठभूमि चुनने के लिए `??? पृष्ठभूमि
          सेट करें` का उपयोग करें।
      courseC19_playLab_EOC2:
        courseE_playLab_scaffold1_a: ब्लॉक नियंत्रणों की दिशा को बदलने के लिए `जब
          ____ तीर` इवेंट के ड्रॉपडाउन मेन्यु चलाएं।
        courseE_playLab_scaffold1_b: प्रत्येक को नीचे मूव करने की दिशा के साथ, आपके
          पास चार `जब तीर` इवेंट ब्लॉक्स होने चाहिएं।
        courseE_playLab_scaffold1_c: जब आप पूरा कर लें, तो आप तीर वाली कुंजियों के
          साथ अपने हीरो को इधर-उधर मूव करने में सक्षम होंगे!
      courseC19_playLab_EOC4:
        courseE_playLab_scaffold4_a: अंक जोड़ने के लिए `अंक स्कोर करें` और एक घटाने
          के लिए `अंक हटाएं` का उपयोग करें।
      courseC_PlayLab_events1:
        courseC_PlayLab_events1_a: |-
          इस ब्लॉक को `जब चलाया जाए` ब्लॉक में जोड़ें:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events1_2018:
        courseC_PlayLab_events1_a: |-
          इस ब्लॉक को `जब चलाया जाए` ब्लॉक में जोड़ें:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events1_2019:
        courseC_PlayLab_events1_a: |-
          इस ब्लॉक को `जब चलाया जाए` ब्लॉक में जोड़ें:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events2:
        courseC_PlayLab_events2_a: |-
          इन दो ब्लॉक्स को `जब चलाया जाए` ब्लॉक में जोड़ें:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: कौन-सा अभिनेता बोलता है, इसमें बदलाव करने के लिए
          दूसरे `अभिनेता __ कहता है` ब्लॉक पर ड्रॉपडाउन मेन्यु का उपयोग करें।
      courseC_PlayLab_events2_2018:
        courseC_PlayLab_events2_a: |-
          इन दो ब्लॉक्स को `जब चलाया जाए` ब्लॉक में जोड़ें:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: कौन-सा अभिनेता बोलता है, इसमें बदलाव करने के लिए
          दूसरे `अभिनेता __ कहता है` ब्लॉक पर ड्रॉपडाउन मेन्यु का उपयोग करें।
      courseC_PlayLab_events2_2019:
        courseC_PlayLab_events2_a: |-
          इन दो ब्लॉक्स को `जब चलाया जाए` ब्लॉक में जोड़ें:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: कौन-सा अभिनेता बोलता है, इसमें बदलाव करने के लिए
          दूसरे `अभिनेता __ कहता है` ब्लॉक पर ड्रॉपडाउन मेन्यु का उपयोग करें।
      courseC_PlayLab_events3:
        courseC_PlayLab_events3_a: इस पहेली को हल करने के लिए आपको जॉर्ज को लगभग 25
          पिक्सल तक दाएं की ओर मूव करने की जरूरत है।
        courseC_PlayLab_events3_b: क्या टूलबॉक्स में कोई ऐसा ब्लॉक है, जो अभिनेता
          को मूव करने वाला प्रतीत होता हो?
        courseC_PlayLab_events3_c: |-
          इस ब्लॉक को `जब चलाया जाए` ब्लॉक में जोड़ें:

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events3_2018:
        courseC_PlayLab_events3_a: इस पहेली को हल करने के लिए आपको जॉर्ज को लगभग 25
          पिक्सल तक दाएं की ओर मूव करने की जरूरत है।
        courseC_PlayLab_events3_b: क्या टूलबॉक्स में कोई ऐसा ब्लॉक है, जो अभिनेता
          को मूव करने वाला प्रतीत होता हो?
        courseC_PlayLab_events3_c: |-
          इस ब्लॉक को `जब चलाया जाए` ब्लॉक में जोड़ें:

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events3_2019:
        courseC_PlayLab_events3_a: इस पहेली को हल करने के लिए आपको जॉर्ज को लगभग 25
          पिक्सल तक दाएं की ओर मूव करने की जरूरत है।
        courseC_PlayLab_events3_b: क्या टूलबॉक्स में कोई ऐसा ब्लॉक है, जो अभिनेता
          को मूव करने वाला प्रतीत होता हो?
        courseC_PlayLab_events3_c: |-
          इस ब्लॉक को `जब चलाया जाए` ब्लॉक में जोड़ें:

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events4:
        courseC_PlayLab_events4_b: जब "चलाएं" बटन पर क्लिक किया जाता है, तो ऑलिव द
          कैट तक पहुंचने के लिए जॉर्ज को **100** पिक्सल दाएं मूव करने की जरूरत है।
        courseC_PlayLab_events4_a: इस पहेली को हल करने के लिए आपको `अभिनेता __ कहता
          है` ब्लॉक को `जब अभिनेता छूता है` इवेंट के साथ जोड़ने की जरूरत होगी।
      courseC_PlayLab_events4_2018:
        courseC_PlayLab_events4_b: जब "चलाएं" बटन पर क्लिक किया जाता है, तो ऑलिव द
          कैट तक पहुंचने के लिए जॉर्ज को **100** पिक्सल दाएं मूव करने की जरूरत है।
        courseC_PlayLab_events4_a: इस पहेली को हल करने के लिए आपको `अभिनेता __ कहता
          है` ब्लॉक को `जब अभिनेता छूता है` इवेंट के साथ जोड़ने की जरूरत होगी।
      courseC_PlayLab_events4_2019:
        courseC_PlayLab_events4_b: जब "चलाएं" बटन पर क्लिक किया जाता है, तो ऑलिव द
          कैट तक पहुंचने के लिए जॉर्ज को **100** पिक्सल दाएं मूव करने की जरूरत है।
        courseC_PlayLab_events4_a: इस पहेली को हल करने के लिए आपको `अभिनेता __ कहता
          है` ब्लॉक को `जब अभिनेता छूता है` इवेंट के साथ जोड़ने की जरूरत होगी।
      courseC_PlayLab_events5:
        courseC_PlayLab_events5_a: "\"नया क्या है?” टेक्सट ढूंढने के लिए आपको `अभिनेता
          बोल` ब्लॉक में ड्रॉपडाउन मेन्यु पर क्लिक करने की जरूरत होगी।"
        courseC_PlayLab_events5_b: जब आप यह देखने के लिए अपना प्रोग्राम चलाएं कि यह
          काम कर रहा है तो ऑक्टविया पर क्लिक करें!
      courseC_PlayLab_events5_2018:
        courseC_PlayLab_events5_a: "\"नया क्या है?” टेक्सट ढूंढने के लिए आपको `अभिनेता
          बोल` ब्लॉक में ड्रॉपडाउन मेन्यु पर क्लिक करने की जरूरत होगी।"
        courseC_PlayLab_events5_b: जब आप यह देखने के लिए अपना प्रोग्राम चलाएं कि यह
          काम कर रहा है तो ऑक्टविया पर क्लिक करें!
      courseC_PlayLab_events5_2019:
        courseC_PlayLab_events5_a: "\"नया क्या है?” टेक्सट ढूंढने के लिए आपको `अभिनेता
          बोल` ब्लॉक में ड्रॉपडाउन मेन्यु पर क्लिक करने की जरूरत होगी।"
        courseC_PlayLab_events5_b: जब आप यह देखने के लिए अपना प्रोग्राम चलाएं कि यह
          काम कर रहा है तो ऑक्टविया पर क्लिक करें!
      courseC_PlayLab_events6:
        courseC_PlayLab_events6_a: प्रत्येक हरे `जब तीर हो` ब्लॉक के नीचे एक गतिविधि
          होनी चाहिए।
        courseC_PlayLab_events6_b: वैड्डलेस के मूव करने की दिशा को बदलने के लिए `अभिनेता
          1 को मूव करें` ब्लॉक पर ड्रॉप डाउन मेन्यू का उपयोग करें।
        courseC_PlayLab_events6_c: जब आप पूरा कर लें, तो आप अपने कंप्यूटर पर तीर वाली
          कुंजियों का उपयोग करते हुए वैड्डलेस को इधर-उधर मूव करने में सक्षम होंगे!
      courseC_PlayLab_events6_2018:
        courseC_PlayLab_events6_a: प्रत्येक हरे `जब तीर हो` ब्लॉक के नीचे एक गतिविधि
          होनी चाहिए।
        courseC_PlayLab_events6_b: वैड्डलेस के मूव करने की दिशा को बदलने के लिए `अभिनेता
          1 को मूव करें` ब्लॉक पर ड्रॉप डाउन मेन्यू का उपयोग करें।
        courseC_PlayLab_events6_c: जब आप पूरा कर लें, तो आप अपने कंप्यूटर पर तीर वाली
          कुंजियों का उपयोग करते हुए वैड्डलेस को इधर-उधर मूव करने में सक्षम होंगे!
      courseC_PlayLab_events6_2019:
        courseC_PlayLab_events6_a: प्रत्येक हरे `जब तीर हो` ब्लॉक के नीचे एक गतिविधि
          होनी चाहिए।
        courseC_PlayLab_events6_b: वैड्डलेस के मूव करने की दिशा को बदलने के लिए `अभिनेता
          1 को मूव करें` ब्लॉक पर ड्रॉप डाउन मेन्यू का उपयोग करें।
        courseC_PlayLab_events6_c: जब आप पूरा कर लें, तो आप अपने कंप्यूटर पर तीर वाली
          कुंजियों का उपयोग करते हुए वैड्डलेस को इधर-उधर मूव करने में सक्षम होंगे!
      courseC_PlayLab_events7:
        courseC_PlayLab_events7_a: इस पहेली को हल करने के लिए `हमेशा दोहराएं` लूप
          के अंदर  `अभिनेता 2 को 400 पिक्सल्स तक ऊपर मूव करें` ब्लॉक `अभिनेता 2 को
          400 पिक्सल्स तक नीचे मूव करें` ब्लॉक दोनों का उपयोग करें।
        courseC_PlayLab_events7_b: "`हमेशा दोहराएं` लूप को किसी अन्य इवेंट ब्लॉक्स
          से जोड़ने की जरूरत नहीं होती; यह अपने आप चलेगा।"
      courseC_PlayLab_events7_2018:
        courseC_PlayLab_events7_a: इस पहेली को हल करने के लिए `हमेशा दोहराएं` लूप
          के अंदर  `अभिनेता 2 को 400 पिक्सल्स तक ऊपर मूव करें` ब्लॉक `अभिनेता 2 को
          400 पिक्सल्स तक नीचे मूव करें` ब्लॉक दोनों का उपयोग करें।
        courseC_PlayLab_events7_b: "`हमेशा दोहराएं` लूप को किसी अन्य इवेंट ब्लॉक्स
          से जोड़ने की जरूरत नहीं होती; यह अपने आप चलेगा।"
      courseC_PlayLab_events7_2019:
        courseC_PlayLab_events7_a: इस पहेली को हल करने के लिए `हमेशा दोहराएं` लूप
          के अंदर  `अभिनेता 2 को 400 पिक्सल्स तक ऊपर मूव करें` ब्लॉक `अभिनेता 2 को
          400 पिक्सल्स तक नीचे मूव करें` ब्लॉक दोनों का उपयोग करें।
        courseC_PlayLab_events7_b: "`हमेशा दोहराएं` लूप को किसी अन्य इवेंट ब्लॉक्स
          से जोड़ने की जरूरत नहीं होती; यह अपने आप चलेगा।"
      courseC_PlayLab_events8:
        courseC_PlayLab_events8_a: इसे सही ढंग से घटित होने देने के लिए आपको ब्लॉक्स
          को `जब अभिनेता छूता है` ब्लॉक से जोड़ने की जरूरत होगी।
        courseC_PlayLab_events8_b: टूलबॉक्स में `अभिनेता बोल है` और `ध्वनि प्ले करें`
          ब्लॉक्स आपकी मदद करेंगे!
      courseC_PlayLab_events8_2018:
        courseC_PlayLab_events8_a: इसे सही ढंग से घटित होने देने के लिए आपको ब्लॉक्स
          को `जब अभिनेता छूता है` ब्लॉक से जोड़ने की जरूरत होगी।
        courseC_PlayLab_events8_b: टूलबॉक्स में `अभिनेता बोल है` और `ध्वनि प्ले करें`
          ब्लॉक्स आपकी मदद करेंगे!
      courseC_PlayLab_events8_2019:
        courseC_PlayLab_events8_a: इसे सही ढंग से घटित होने देने के लिए आपको ब्लॉक्स
          को `जब अभिनेता छूता है` ब्लॉक से जोड़ने की जरूरत होगी।
        courseC_PlayLab_events8_b: टूलबॉक्स में `अभिनेता बोल है` और `ध्वनि प्ले करें`
          ब्लॉक्स आपकी मदद करेंगे!
      courseC_PlayLab_events9:
        courseC_PlayLab_events9_a: इस पहेली को हल करने में `अंक हासिल करें` ब्लॉक
          आपकी मदद करेगा।
        courseC_PlayLab_events9_b: सुनिश्चित करें कि आपका नया `जब अभिनेता छूता है`
          ब्लॉक अभिनेता **1** और अभिनेता **3** कहता है।
        courseC_PlayLab_events9_c: आपके पास एक ही समय पर अपने वर्कस्पेस में एक से
          अधिक `जब अभिनेता छूता है` इवेंट हो सकती हैं, ताकि आपको पहले को मिटाने की
          जरूरत न पड़े!
      courseC_PlayLab_events9_2018:
        courseC_PlayLab_events9_a: इस पहेली को हल करने में `अंक हासिल करें` ब्लॉक
          आपकी मदद करेगा।
        courseC_PlayLab_events9_b: सुनिश्चित करें कि आपका नया `जब अभिनेता छूता है`
          ब्लॉक अभिनेता **1** और अभिनेता **3** कहता है।
        courseC_PlayLab_events9_c: आपके पास एक ही समय पर अपने वर्कस्पेस में एक से
          अधिक `जब अभिनेता छूता है` इवेंट हो सकती हैं, ताकि आपको पहले को मिटाने की
          जरूरत न पड़े!
      courseC_PlayLab_events9_2019:
        courseC_PlayLab_events9_a: इस पहेली को हल करने में `अंक हासिल करें` ब्लॉक
          आपकी मदद करेगा।
        courseC_PlayLab_events9_b: सुनिश्चित करें कि आपका नया `जब अभिनेता छूता है`
          ब्लॉक अभिनेता **1** और अभिनेता **3** कहता है।
        courseC_PlayLab_events9_c: आपके पास एक ही समय पर अपने वर्कस्पेस में एक से
          अधिक `जब अभिनेता छूता है` इवेंट हो सकती हैं, ताकि आपको पहले को मिटाने की
          जरूरत न पड़े!
      courseC_PlayLab_eventsA:
        courseC_PlayLab_eventsA_a: इस पहेली को हल करने के लिए `पृष्ठभूमि सेट करें`
          ब्लॉक और `अभिनेता की गति ____ तक तय करें` ब्लॉक का उपयोग करें।
        courseC_PlayLab_eventsA_b: इस पहेली को हल करने के लिए आपको वर्कस्पेस में विशेषरूप
          से `जब चलाया जाए` इवेंट ब्लॉक खींचने की जरूरत होगी।
      courseC_PlayLab_eventsA_2018:
        courseC_PlayLab_eventsA_a: इस पहेली को हल करने के लिए `पृष्ठभूमि सेट करें`
          ब्लॉक और `अभिनेता की गति ____ तक तय करें` ब्लॉक का उपयोग करें।
        courseC_PlayLab_eventsA_b: इस पहेली को हल करने के लिए आपको वर्कस्पेस में विशेषरूप
          से `जब चलाया जाए` इवेंट ब्लॉक खींचने की जरूरत होगी।
      courseC_PlayLab_eventsA_2019:
        courseC_PlayLab_eventsA_a: इस पहेली को हल करने के लिए `पृष्ठभूमि सेट करें`
          ब्लॉक और `अभिनेता की गति ____ तक तय करें` ब्लॉक का उपयोग करें।
        courseC_PlayLab_eventsA_b: इस पहेली को हल करने के लिए आपको वर्कस्पेस में विशेषरूप
          से `जब चलाया जाए` इवेंट ब्लॉक खींचने की जरूरत होगी।
      courseC_PlayLab_eventsA_embed_2019:
        courseC_PlayLab_eventsA_a: Use the arrow keys to move the penguin. You do
          not need to write any code to finish this level.
      courseC_PlayLab_eventsFP:
        idea1: |-
          _क्या आपको कोई सुझाव चाहिए?_

          **वहां कौन है?** चरित्रों को बेतरतीब चित्रों के साथ प्रकट करें, ताकि किसी को पता न हो कि अगला कौन आने वाला है।

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _क्या आपको कोई सुझाव चाहिए?_

          **एडवेंचर पर जाना** - पृष्ठभूमि बदलें, फिर चरित्रों से इस बारे में बात करवाएं कि वे अब कहां लें।

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _क्या आपको कोई सुझाव चाहिए?_

          **पिनबॉल** - तीर वाली कुंजियों का उपयोग करते हुए एक चरित्र को मूव करवाएं (`जब ऊपर वाला तीर हो`, `जब नीचे वाला तीर हो` ब्लॉक्स का उपयोग करें), फिर बेतरतीब ध्वनियां प्ले करें, जब यह स्क्रीन पर अन्य चरित्रों के साथ टकराए।
      courseC_PlayLab_eventsFP_2018:
        idea1: |-
          _क्या आपको कोई सुझाव चाहिए?_

          **वहां कौन है?** चरित्रों को बेतरतीब चित्रों के साथ प्रकट करें, ताकि किसी को पता न हो कि अगला कौन आने वाला है।

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _क्या आपको कोई सुझाव चाहिए?_

          **एडवेंचर पर जाना** - पृष्ठभूमि बदलें, फिर चरित्रों से इस बारे में बात करवाएं कि वे अब कहां लें।

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _क्या आपको कोई सुझाव चाहिए?_

          **पिनबॉल** - तीर वाली कुंजियों का उपयोग करते हुए एक चरित्र को मूव करवाएं (`जब ऊपर वाला तीर हो`, `जब नीचे वाला तीर हो` ब्लॉक्स का उपयोग करें), फिर बेतरतीब ध्वनियां प्ले करें, जब यह स्क्रीन पर अन्य चरित्रों के साथ टकराए।
      courseC_PlayLab_eventsFP_2019:
        idea1: |-
          _Need an idea?_

          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.

          <img src= "https://images.code.org/dbd6ece9d0fb213039ea5dccb91fc425-image-1563577859889.gif" style="width: 200px">
        idea2: |-
          _Need an idea?_

          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.

          <img src= "https://images.code.org/a7f740d73074deb128cdc2826abda9e6-image-1563576781779.gif" style="width: 200px">
        idea3: |-
          _क्या आपको कोई सुझाव चाहिए?_

          **पिनबॉल** - तीर वाली कुंजियों का उपयोग करते हुए एक चरित्र को मूव करवाएं (`जब ऊपर वाला तीर हो`, `जब नीचे वाला तीर हो` ब्लॉक्स का उपयोग करें), फिर बेतरतीब ध्वनियां प्ले करें, जब यह स्क्रीन पर अन्य चरित्रों के साथ टकराए।
      courseC_PlayLab_events_challenge1:
        courseC_PlayLab_events_challenge_a: |-
          आप अभिनेताओं को गेम स्पेस पर अलग-अलग स्थानों पर मूव करने के लिए इस ब्लॉक का उपयोग कर सकते हैं।

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: "`अभिनेता 1 को मध्य बाईं पोजीशन पर सेट
          करें` का उपयोग करने की कोशिश करें, जब यह अन्य अभिनेताओं में से किसी एक को
          छूता है। इससे गेम रीसेट हो जाएगी ताकि खिलाड़ी कोशिश करना जारी रख सके !"
        courseC_PlayLab_events_challenge_c: |-
          आप गेम को और आसान या अधिक चुनौतीपूर्ण बनाने के लिए विभिन्न अभिनेताओं की गति को बदलने का प्रयास भी करना चाह सकते हैं!

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_PlayLab_events_challenge1_2018:
        courseC_PlayLab_events_challenge_a: |-
          आप अभिनेताओं को गेम स्पेस पर अलग-अलग स्थानों पर मूव करने के लिए इस ब्लॉक का उपयोग कर सकते हैं।

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: "`अभिनेता 1 को मध्य बाईं पोजीशन पर सेट
          करें` का उपयोग करने की कोशिश करें, जब यह अन्य अभिनेताओं में से किसी एक को
          छूता है। इससे गेम रीसेट हो जाएगी ताकि खिलाड़ी कोशिश करना जारी रख सके !"
        courseC_PlayLab_events_challenge_c: |-
          आप गेम को और आसान या अधिक चुनौतीपूर्ण बनाने के लिए विभिन्न अभिनेताओं की गति को बदलने का प्रयास भी करना चाह सकते हैं!

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_PlayLab_events_challenge1_2019:
        courseC_PlayLab_events_challenge_a: |-
          आप अभिनेताओं को गेम स्पेस पर अलग-अलग स्थानों पर मूव करने के लिए इस ब्लॉक का उपयोग कर सकते हैं।

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: "`अभिनेता 1 को मध्य बाईं पोजीशन पर सेट
          करें` का उपयोग करने की कोशिश करें, जब यह अन्य अभिनेताओं में से किसी एक को
          छूता है। इससे गेम रीसेट हो जाएगी ताकि खिलाड़ी कोशिश करना जारी रख सके !"
        courseC_PlayLab_events_challenge_c: |-
          आप गेम को और आसान या अधिक चुनौतीपूर्ण बनाने के लिए विभिन्न अभिनेताओं की गति को बदलने का प्रयास भी करना चाह सकते हैं!

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_artist_loop1:
        courseC_artist_loop1_a: आपको लूप में कोई बदलाव करने की जरूरत नहीं है, बस एक
          ब्लॉक को इसके ऊपर रखें।
        courseC_artist_loop1_b: |-
          यह वह ब्लॉक है, जिसके लिए आपको एक पैटर्न सेट करने की जरूरत होगी:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          अपनी पसंद का कोई भी पैटर्न चुनें!
      courseC_artist_loop1_2018:
        courseC_artist_loop1_a: आपको लूप में कोई बदलाव करने की जरूरत नहीं है, बस एक
          ब्लॉक को इसके ऊपर रखें।
        courseC_artist_loop1_b: |-
          यह वह ब्लॉक है, जिसके लिए आपको एक पैटर्न सेट करने की जरूरत होगी:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          अपनी पसंद का कोई भी पैटर्न चुनें!
      courseC_artist_loop1_2019:
        courseC_artist_loop1_a: आपको लूप में कोई बदलाव करने की जरूरत नहीं है, बस एक
          ब्लॉक को इसके ऊपर रखें।
        courseC_artist_loop1_b: |-
          यह वह ब्लॉक है, जिसके लिए आपको एक पैटर्न सेट करने की जरूरत होगी:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          अपनी पसंद का कोई भी पैटर्न चुनें!
      courseC_artist_loops1a:
        courseC_artist_loops1a_a: |-
          यह पहला ब्लॉक, जिसकी आपको जरूरत है, वह है:

          <xml>
          <block type="jump_to_xy">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Use this block to draw the sticker!

          <xml>
          <block type="sticker">
              <title name="VALUE">Bird</title>
            </block>
          </xml>
      courseC_artist_loops1a_2018:
        courseC_artist_loops1a_a: |-
          यह पहला ब्लॉक, जिसकी आपको जरूरत है, वह है:

          <xml>
          <block type="jump_to_xy">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Use this block to draw the sticker!

          <xml>
          <block type="sticker">
              <title name="VALUE">Bird</title>
            </block>
          </xml>
      courseC_artist_loops1a_2019:
        courseC_artist_loops1a_a: |-
          यह पहला ब्लॉक, जिसकी आपको जरूरत है, वह है:

          <xml>
            <block type="jump_to">
              <title name="VALUE">13</title>
            </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Use this block to draw the sticker!

          <xml>
          <block type="sticker">
              <title name="VALUE">Bird</title>
            </block>
          </xml>
      courseC_artist_loops1b_2019:
        courseC_artist_loops1b_a: |-
          This is the first block you will need:

          <xml>
            <block type="draw_turn_by_constant_dropdown">
              <title name="DIR">???</title>
              <title name="VALUE" config="45,60,90,120,180">???</title>
            </block>
          </xml>

          You can choose either left or right and any number of degrees.
      courseC_artist_loops2a:
        courseC_artist_loops2a_a: अपने लूप के अंदर, आप 200 ऊपर 200 नीचे कूदना चाहेंगे,
          फिर पक्षी का स्टिकर चित्रित करना, फिर 30 डिग्री मुड़ना चाहेंगे।
        courseC_artist_loops2a_b: इसे दोहराने की संख्या को बदलने के लिए `दोहराएं`
          लूप के सबसे ऊपर दिए नंबर पर क्लिक करें।
      courseC_artist_loops2a_2018:
        courseC_artist_loops2a_a: अपने लूप के अंदर, आप 200 ऊपर 200 नीचे कूदना चाहेंगे,
          फिर पक्षी का स्टिकर चित्रित करना, फिर 30 डिग्री मुड़ना चाहेंगे।
        courseC_artist_loops2a_b: इसे दोहराने की संख्या को बदलने के लिए `दोहराएं`
          लूप के सबसे ऊपर दिए नंबर पर क्लिक करें।
      courseC_artist_loops2a_2019:
        courseC_artist_loops2a_a: Inside your loop, you will want to jump to the middle,
          then turn, then draw a sticker.
        courseC_artist_loops2a_b: इसे दोहराने की संख्या को बदलने के लिए `दोहराएं`
          लूप के सबसे ऊपर दिए नंबर पर क्लिक करें।
      courseC_artist_loops3a:
        courseC_artist_loops3a_a: आप पक्षी के स्टिकर के बाद, अपने लूप के अंदर केवल
          एक ब्लॉक जोड़ना चाहेंगे।
        courseC_artist_loops3a_b: चमगादड़ का स्टिकर ढूंढने के लिए `स्टिकर चित्रित
          करें` ब्लॉक पर ड्रॉप डाउन मेन्यु का उपयोग करें।
      courseC_artist_loops3a_2018:
        courseC_artist_loops3a_a: आप पक्षी के स्टिकर के बाद, अपने लूप के अंदर केवल
          एक ब्लॉक जोड़ना चाहेंगे।
        courseC_artist_loops3a_b: चमगादड़ का स्टिकर ढूंढने के लिए `स्टिकर चित्रित
          करें` ब्लॉक पर ड्रॉप डाउन मेन्यु का उपयोग करें।
      courseC_artist_loops3a_2019:
        courseC_artist_loops3a_a: You will want to add just one block inside of your
          loop, after the first sticker.
        courseC_artist_loops3a_b: |-
          Your program should look like this!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">???</title>
                  <statement name="DO">
                    <block type="jump_to">
                      <title name="VALUE">13</title>
                      <next>
                        <block type="draw_turn_by_constant_dropdown">
                          <title name="DIR">???</title>
                          <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
                          <next>
                            <block type="sticker">
                              <title name="VALUE">Cat</title>
                              <next>
                                <block type="sticker">
                                  <title name="VALUE">Dog</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>

          You can use any stickers you like!
      courseC_artist_loops4a:
        courseC_artist_loops4a_a: |-
          Use this block to jump forward:

          <xml>
          <block type="jump_by_constant">
              <title name="DIR">jumpForward</title>
              <title name="VALUE">100</title>
            </block>
          </xml>

          Don't forget to change how far!
      courseC_artist_loops4a_2018:
        courseC_artist_loops4a_a: |-
          Use this block to jump forward:

          <xml>
          <block type="jump_by_constant">
              <title name="DIR">jumpForward</title>
              <title name="VALUE">100</title>
            </block>
          </xml>

          Don't forget to change how far!
      courseC_artist_loops4a_2019:
        courseC_artist_loops4a_a: |-
          Use this block to jump forward:

          <xml>
          <block type="jump_by_constant">
              <title name="DIR">jumpForward</title>
              <title name="VALUE">???</title>
            </block>
          </xml>

          Don't forget to change how far!
        courseC_artist_loops4a_b: |-
          Your program should look like this!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">???</title>
                  <statement name="DO">
                    <block type="jump_to">
                      <title name="VALUE">13</title>
                      <next>
                        <block type="draw_turn_by_constant_dropdown">
                          <title name="DIR">???</title>
                          <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
                          <next>
                            <block type="sticker">
                              <title name="VALUE">Cat</title>
                              <next>
                                <block type="jump_by_constant">
                                  <title name="DIR">jumpForward</title>
                                  <title name="VALUE">???</title>
                                  <next>
                                    <block type="sticker">
                                      <title name="VALUE">Dog</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      courseC_artist_loops5a:
        courseC_artist_loops5a_a: उनके चित्र बदलने के लिए `स्टिकर चित्रित करें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें।
      courseC_artist_loops5a_2018:
        courseC_artist_loops5a_a: उनके चित्र बदलने के लिए `स्टिकर चित्रित करें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें।
      courseC_artist_loops5a_2019:
        courseC_artist_loops5a_a: उनके चित्र बदलने के लिए `स्टिकर चित्रित करें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें।
      courseC_artist_loops5b:
        courseC_artist_loops5b_a: |-
          Use this block to set the pattern of your lines:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>
        courseC_artist_loops5b_b: उपरोक्त जैसा डिज़ाइन बनाने के लिए, आप उसी मात्रा
          में पीछे की ओर मूव करना चाहेंगे, जैसे आप आगे की ओर मूव करते हैं।
      courseC_artist_loops5b_2018:
        courseC_artist_loops5b_a: |-
          Use this block to set the pattern of your lines:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>
        courseC_artist_loops5b_b: उपरोक्त जैसा डिज़ाइन बनाने के लिए, आप उसी मात्रा
          में पीछे की ओर मूव करना चाहेंगे, जैसे आप आगे की ओर मूव करते हैं।
      courseC_artist_loops5b_2019:
        courseC_artist_loops5b_a: |-
          Use this block to set the pattern of your lines:

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>
        courseC_artist_loops5b_b: उपरोक्त जैसा डिज़ाइन बनाने के लिए, आप उसी मात्रा
          में पीछे की ओर मूव करना चाहेंगे, जैसे आप आगे की ओर मूव करते हैं।
        courseC_artist_loops5b_c: |-
          Your program should look like this!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_line_style_pattern">
                  <title name="VALUE">rainbowLine</title>
                  <next>
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="jump_to">
                          <title name="VALUE">13</title>
                          <next>
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">???</title>
                              <next>
                                <block type="draw_move_by_constant">
                                  <title name="DIR">moveBackward</title>
                                  <title name="VALUE">???</title>
                                  <next>
                                    <block type="draw_turn_by_constant_dropdown">
                                      <title name="DIR">???</title>
                                      <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
                                      <next>
                                        <block type="sticker">
                                          <title name="VALUE">Cat</title>
                                          <next>
                                            <block type="jump_by_constant">
                                              <title name="DIR">jumpForward</title>
                                              <title name="VALUE">???</title>
                                              <next>
                                                <block type="sticker">
                                                  <title name="VALUE">Dog</title>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseC_artist_loops6a:
        courseC_artist_loops6a_a: उपरोक्त जैसा डिज़ाइन बनाने के लिए, प्रत्येक स्टिकर
          के बीच 75 पिक्सल से कम आगे की ओर कूदें।
      courseC_artist_loops6a_2018:
        courseC_artist_loops6a_a: उपरोक्त जैसा डिज़ाइन बनाने के लिए, प्रत्येक स्टिकर
          के बीच 75 पिक्सल से कम आगे की ओर कूदें।
      courseC_artist_loops6a_2019:
        courseC_artist_loops6a_a: उपरोक्त जैसा डिज़ाइन बनाने के लिए, प्रत्येक स्टिकर
          के बीच 75 पिक्सल से कम आगे की ओर कूदें।
      courseC_artist_loops7a:
        courseC_artist_loops7a_a: |-
          एक गोले में 360 डिग्री हैं। डिग्री को आपके दोहराने की संख्या से अपनी बारी से गुणा करें। क्या यह 360 के बराबर है?
          यह देखने के लिए सुझाए गए आवर्तन देखें कि यह काम करता है!
      courseC_artist_loops7a_2018:
        courseC_artist_loops7a_a: |-
          एक गोले में 360 डिग्री हैं। डिग्री को आपके दोहराने की संख्या से अपनी बारी से गुणा करें। क्या यह 360 के बराबर है?
          यह देखने के लिए सुझाए गए आवर्तन देखें कि यह काम करता है!
      courseC_artist_loops7a_2019:
        courseC_artist_loops7a_a: |-
          एक गोले में 360 डिग्री हैं। डिग्री को आपके दोहराने की संख्या से अपनी बारी से गुणा करें। क्या यह 360 के बराबर है?
          यह देखने के लिए सुझाए गए आवर्तन देखें कि यह काम करता है!
      courseC_artist_loopsPre1a:
        courseC_artist_loopsPre1a_a: लूप के अंदर `मुड़ें` ब्लॉक रखना याद रखें।
        courseC_artist_loopsPre1a_b: 'आपके `दोहराएं` लूप के अंदर 3 ब्लॉक होने चाहिएं:
          `200 ऊपर 200 नीचे कूदें`, `50 पिक्सल तक आगे की ओर मूव करें`, और `60 डिग्री
          तक दाईं ओर मुड़ें।`'
      courseC_artist_loopsPre1a_2018:
        courseC_artist_loopsPre1a_a: लूप के अंदर `मुड़ें` ब्लॉक रखना याद रखें।
        courseC_artist_loopsPre1a_b: 'आपके `दोहराएं` लूप के अंदर 3 ब्लॉक होने चाहिएं:
          `200 ऊपर 200 नीचे कूदें`, `50 पिक्सल तक आगे की ओर मूव करें`, और `60 डिग्री
          तक दाईं ओर मुड़ें।`'
      courseC_artist_loopsPre1a_2019:
        courseC_artist_loopsPre1a_a: लूप के अंदर `मुड़ें` ब्लॉक रखना याद रखें।
        courseC_artist_loopsPre1a_b: 'आपके `दोहराएं` लूप के अंदर 3 ब्लॉक होने चाहिएं:
          `200 ऊपर 200 नीचे कूदें`, `50 पिक्सल तक आगे की ओर मूव करें`, और `60 डिग्री
          तक दाईं ओर मुड़ें।`'
      courseC_artist_loopsPrePre1a:
        courseC_artist_loopsPrePre1a_a: |-
          पहला ब्लॉक, जिसकी आपको जरूरत है, वह है:

          ![](<https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png>)
        courseC_artist_loopsPrePre1a_b: |-
          50 पिक्सल आगे की ओर मूव करने के लिए, इस ब्लॉक का उपयोग करें:

          ![](<https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png>)
      courseC_artist_loopsPrePre1a_2018:
        courseC_artist_loopsPrePre1a_a: |-
          The first block you will need is:

          <xml>  <block type="jump_to_xy" id="callMe">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block></xml>
        courseC_artist_loopsPrePre1a_b: |-
          To move forward 50 pixels, use this block:

          <xml><block type="draw_move_by_constant">
              <title name="DIR">moveForward</title>
              <title name="VALUE">50</title>
            </block></xml>
      courseC_artist_loopsPrePre1a_2019:
        courseC_artist_loopsPrePre1a_a: |-
          The first block you will need is:

          <xml>  <block type="jump_to_xy" id="callMe">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block></xml>
        courseC_artist_loopsPrePre1a_b: |-
          To move forward 50 pixels, use this block:

          <xml><block type="draw_move_by_constant">
              <title name="DIR">moveForward</title>
              <title name="VALUE">50</title>
            </block></xml>
      courseC_artist_prog2:
        courseC_artist_prog2_a: '*"यदि आप <xml><block type="draw_move_by_constant"><title
          name="DIR">moveForward</title><title name="VALUE">100</title></block></xml>
          block ब्लॉक का उपयोग करते हैं, तो मैं एक लाइन खींच दूंगा।"*'
        courseC_artist_prog2_b: क्या कोने में मुड़ने में मुश्किल हो रही है? <xml><block
          type="draw_turn_by_constant_dropdown"><title name="DIR">turnRight</title><title
          name="VALUE" config="45,60,90,120,180">90</title></block></xml> ब्लॉक का
          उपयोग करें।
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: '*"यदि आप <xml><block type="draw_move_by_constant"><title
          name="DIR">moveForward</title><title name="VALUE">100</title></block></xml>
          block ब्लॉक का उपयोग करते हैं, तो मैं एक लाइन खींच दूंगा।"*'
        courseC_artist_prog2_b: क्या कोने में मुड़ने में मुश्किल हो रही है? <xml><block
          type="draw_turn_by_constant_dropdown"><title name="DIR">turnRight</title><title
          name="VALUE" config="45,60,90,120,180">90</title></block></xml> ब्लॉक का
          उपयोग करें।
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: '*"यदि आप <xml><block type="draw_move_by_constant"><title
          name="DIR">moveForward</title><title name="VALUE">100</title></block></xml>
          block ब्लॉक का उपयोग करते हैं, तो मैं एक लाइन खींच दूंगा।"*'
        courseC_artist_prog2_b: क्या कोने में मुड़ने में मुश्किल हो रही है? <xml><block
          type="draw_turn_by_constant_dropdown"><title name="DIR">turnRight</title><title
          name="VALUE" config="45,60,90,120,180">90</title></block></xml> ब्लॉक का
          उपयोग करें।
      courseC_artist_prog3:
        courseC_artist_prog3_a: |-
          यह खिड़की बनाने के लिए, बस 100 पिक्सल भुजाओं वाला वर्ग खींचें।

          -   आगे की ओर मूव करें
          -   मुड़ें
          -   आगे की ओर मूव करें
          -   मुड़ें
          -   आगे की ओर मूव करें
          -   मुड़ें
          -   आगे की ओर मूव करें
        courseC_artist_prog3_b: क्या आप कोड को अधिक छोटा बनाना चाहते हैं? इस पहेली
          में लूप का उपयोग करने का प्रयास करें।
      courseC_artist_prog3_2018:
        courseC_artist_prog3_a: |-
          यह खिड़की बनाने के लिए, बस 100 पिक्सल भुजाओं वाला वर्ग खींचें।

          -   आगे की ओर मूव करें
          -   मुड़ें
          -   आगे की ओर मूव करें
          -   मुड़ें
          -   आगे की ओर मूव करें
          -   मुड़ें
          -   आगे की ओर मूव करें
        courseC_artist_prog3_b: क्या आप कोड को अधिक छोटा बनाना चाहते हैं? इस पहेली
          में लूप का उपयोग करने का प्रयास करें।
      courseC_artist_prog3_2019:
        courseC_artist_prog3_a: |-
          यह खिड़की बनाने के लिए, बस 100 पिक्सल भुजाओं वाला वर्ग खींचें।

          -   आगे की ओर मूव करें
          -   मुड़ें
          -   आगे की ओर मूव करें
          -   मुड़ें
          -   आगे की ओर मूव करें
          -   मुड़ें
          -   आगे की ओर मूव करें
        courseC_artist_prog3_b: क्या आप कोड को अधिक छोटा बनाना चाहते हैं? इस पहेली
          में लूप का उपयोग करने का प्रयास करें।
      courseC_artist_prog4:
        courseC_artist_prog4_a: रॉकेट पूरा करने के लिए, बस ऊपर त्रिकोण खींचें!
        courseC_artist_prog4_b: यह देखने के लिए आपको कौन-से कोण की जरूरत है, आप `मुड़ें`
          ब्लॉक्स पर ड्रॉप डाउन मेन्यु का उपयोग कर सकते हैं!
        courseC_artist_prog4_c: |-
          त्रिकोण खींचने के लिए, आप यह करना चाहेंगे:

          -   आगे की ओर मूव करें
          -   120 डिग्री बाएं मुड़ें
          -   आगे की ओर मूव करें
          -   120 डिग्री बाएं मुड़ें
          -   आगे की ओर मूव करें
      courseC_artist_prog4_2018:
        courseC_artist_prog4_a: रॉकेट पूरा करने के लिए, बस ऊपर त्रिकोण खींचें!
        courseC_artist_prog4_b: यह देखने के लिए आपको कौन-से कोण की जरूरत है, आप `मुड़ें`
          ब्लॉक्स पर ड्रॉप डाउन मेन्यु का उपयोग कर सकते हैं!
        courseC_artist_prog4_c: |-
          त्रिकोण खींचने के लिए, आप यह करना चाहेंगे:

          -   आगे की ओर मूव करें
          -   120 डिग्री बाएं मुड़ें
          -   आगे की ओर मूव करें
          -   120 डिग्री बाएं मुड़ें
          -   आगे की ओर मूव करें
      courseC_artist_prog4_2019:
        courseC_artist_prog4_a: रॉकेट पूरा करने के लिए, बस ऊपर त्रिकोण खींचें!
        courseC_artist_prog4_b: यह देखने के लिए आपको कौन-से कोण की जरूरत है, आप `मुड़ें`
          ब्लॉक्स पर ड्रॉप डाउन मेन्यु का उपयोग कर सकते हैं!
        courseC_artist_prog4_c: |-
          त्रिकोण खींचने के लिए, आप यह करना चाहेंगे:

          -   आगे की ओर मूव करें
          -   120 डिग्री बाएं मुड़ें
          -   आगे की ओर मूव करें
          -   120 डिग्री बाएं मुड़ें
          -   आगे की ओर मूव करें
      courseC_artist_prog5:
        courseC_artist_prog5_a: पूरा रास्ता स्लाइडर की गति धीमी करें, जब तक कि आप
          यह देखने के लिए चीज़ें कहां गलत हो जाती हैं, अपने कोड को लाइन-दर-लाइन चला
          न लें।
        courseC_artist_prog5_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
        courseC_artist_prog5_c: यह देखने के लिए आपको कौन-से कोण की जरूरत है, आप `मुड़ें`
          ब्लॉक्स पर ड्रॉप डाउन मेन्यु का उपयोग कर सकते हैं!
        courseC_artist_prog5_d: प्रत्येक मोड़ दाईं ओर 90 डिग्री होना चाहिए।
      courseC_artist_prog5_2018:
        courseC_artist_prog5_a: पूरा रास्ता स्लाइडर की गति धीमी करें, जब तक कि आप
          यह देखने के लिए चीज़ें कहां गलत हो जाती हैं, अपने कोड को लाइन-दर-लाइन चला
          न लें।
        courseC_artist_prog5_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
        courseC_artist_prog5_c: You can use the drop down menus in the blocks to change
          what they do!
        courseC_artist_prog5_d: प्रत्येक मोड़ दाईं ओर 90 डिग्री होना चाहिए।
      courseC_artist_prog5_2019:
        courseC_artist_prog5_a: पूरा रास्ता स्लाइडर की गति धीमी करें, जब तक कि आप
          यह देखने के लिए चीज़ें कहां गलत हो जाती हैं, अपने कोड को लाइन-दर-लाइन चला
          न लें।
        courseC_artist_prog5_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
        courseC_artist_prog5_c: You can use the drop down menus in the blocks to change
          what they do!
        courseC_artist_prog5_d: प्रत्येक मोड़ दाईं ओर 90 डिग्री होना चाहिए।
      courseC_artist_prog6:
        courseC_artist_prog6_a: कलाकार अपनी पहली लाइन खींचने के लिए पहले से ही सही
          रास्ते के सामने है।
        courseC_artist_prog6_b: यह हीरा वास्तव में केवल एक वर्ग है, जो अपने कोने पर
          खड़ा है।
        courseC_artist_prog6_c: चूंकि यह हीरा एक वर्ग भी है, कोनों पर 90 डिग्री मुड़ना
          सुनिश्चित करें।
      courseC_artist_prog6_2018:
        courseC_artist_prog6_a: कलाकार अपनी पहली लाइन खींचने के लिए पहले से ही सही
          रास्ते के सामने है।
        courseC_artist_prog6_b: यह हीरा वास्तव में केवल एक वर्ग है, जो अपने कोने पर
          खड़ा है।
        courseC_artist_prog6_c: चूंकि यह हीरा एक वर्ग भी है, कोनों पर 90 डिग्री मुड़ना
          सुनिश्चित करें।
      courseC_artist_prog6_2019:
        courseC_artist_prog6_a: कलाकार अपनी पहली लाइन खींचने के लिए पहले से ही सही
          रास्ते के सामने है।
        courseC_artist_prog6_b: यह हीरा वास्तव में केवल एक वर्ग है, जो अपने कोने पर
          खड़ा है।
        courseC_artist_prog6_c: चूंकि यह हीरा एक वर्ग भी है, कोनों पर 90 डिग्री मुड़ना
          सुनिश्चित करें।
      courseC_artist_prog7:
        courseC_artist_prog7_a: प्रत्येक कोण या तो 45 डिग्री का है या 90 डिग्री का
          है।
        courseC_artist_prog7_b: |-
          क्या यह पहले स्टेप पर काम करता है?\
           दूसरे स्टेप के बारे में क्या कहेंगे?\
          यह कहां गलत हो जाता है?
        courseC_artist_prog7_c: यह देखने के लिए आपको कौन-से कोण की जरूरत है, आप मुड़ें
          ब्लॉक्स पर ड्रॉपडाउन मेन्यु का उपयोग कर सकते हैं!
        courseC_artist_prog7_d: |-
          आप यह करना चाहेंगे:

          -   आगे की ओर मूव करें
          -   45 डिग्री दाएं मुड़ें
          -   आगे की ओर मूव करें
          -   90 डिग्री दाएं मुड़ें
          -   आगे की ओर मूव करें
          -   45 डिग्री दाएं मुड़ें

          इस पैटर्न को 2 बार दोहराएं!
        courseC_artist_prog7_e: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseC_artist_prog7_2018:
        courseC_artist_prog7_a: प्रत्येक कोण या तो 45 डिग्री का है या 90 डिग्री का
          है।
        courseC_artist_prog7_b: |-
          क्या यह पहले स्टेप पर काम करता है?\
           दूसरे स्टेप के बारे में क्या कहेंगे?\
          यह कहां गलत हो जाता है?
        courseC_artist_prog7_c: यह देखने के लिए आपको कौन-से कोण की जरूरत है, आप मुड़ें
          ब्लॉक्स पर ड्रॉपडाउन मेन्यु का उपयोग कर सकते हैं!
        courseC_artist_prog7_d: |-
          आप यह करना चाहेंगे:

          -   आगे की ओर मूव करें
          -   45 डिग्री दाएं मुड़ें
          -   आगे की ओर मूव करें
          -   90 डिग्री दाएं मुड़ें
          -   आगे की ओर मूव करें
          -   45 डिग्री दाएं मुड़ें

          इस पैटर्न को 2 बार दोहराएं!
        courseC_artist_prog7_e: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseC_artist_prog7_2019:
        courseC_artist_prog7_a: प्रत्येक कोण या तो 45 डिग्री का है या 90 डिग्री का
          है।
        courseC_artist_prog7_b: |-
          क्या यह पहले स्टेप पर काम करता है?\
           दूसरे स्टेप के बारे में क्या कहेंगे?\
          यह कहां गलत हो जाता है?
        courseC_artist_prog7_c: यह देखने के लिए आपको कौन-से कोण की जरूरत है, आप मुड़ें
          ब्लॉक्स पर ड्रॉपडाउन मेन्यु का उपयोग कर सकते हैं!
        courseC_artist_prog7_d: |-
          आप यह करना चाहेंगे:

          -   आगे की ओर मूव करें
          -   45 डिग्री दाएं मुड़ें
          -   आगे की ओर मूव करें
          -   90 डिग्री दाएं मुड़ें
          -   आगे की ओर मूव करें
          -   45 डिग्री दाएं मुड़ें

          इस पैटर्न को 2 बार दोहराएं!
        courseC_artist_prog7_e: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseC_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: आप मध्य में या दो अलग-अलग वर्गों में लाइन
          के साथ इसे आयत के तौर पर खींच सकते हैं!
      courseC_artist_prog_challenge1_2018:
        courseC_artist_prog_challenge1_a: आप मध्य में या दो अलग-अलग वर्गों में लाइन
          के साथ इसे आयत के तौर पर खींच सकते हैं!
      courseC_artist_prog_challenge1_2019:
        courseC_artist_prog_challenge1_a: आप मध्य में या दो अलग-अलग वर्गों में लाइन
          के साथ इसे आयत के तौर पर खींच सकते हैं!
      courseC_artist_prog_challenge2a:
        courseC_artist_prog_challenge2_a: जब आप पहली लाइन खींच लें, तो अपनी दूसरी
          लाइन खींचने से पहले बाएं मुड़ें।
        courseC_artist_prog_challenge2_b: जब आप दूसरी लाइन खींच लें, तो अपनी तीसरी
          लाइन खींचने से पहले दाएं मुड़ें।
      courseC_artist_prog_challenge2a_2018:
        courseC_artist_prog_challenge2_a: जब आप पहली लाइन खींच लें, तो अपनी दूसरी
          लाइन खींचने से पहले बाएं मुड़ें।
        courseC_artist_prog_challenge2_b: जब आप दूसरी लाइन खींच लें, तो अपनी तीसरी
          लाइन खींचने से पहले दाएं मुड़ें।
      courseC_artist_prog_challenge2a_2019:
        courseC_artist_prog_challenge2_a: जब आप पहली लाइन खींच लें, तो अपनी दूसरी
          लाइन खींचने से पहले बाएं मुड़ें।
        courseC_artist_prog_challenge2_b: जब आप दूसरी लाइन खींच लें, तो अपनी तीसरी
          लाइन खींचने से पहले दाएं मुड़ें।
      courseC_collector_loops_challenge2:
        courseC_maze_loops_challenge2_b: लूप्स का उपयोग करें ताकि आपके पास `एकत्र
          करें` ब्लॉक खत्म न हो जाएं!
      courseC_collector_loops_challenge2_2018:
        courseC_maze_loops_challenge2_b: लूप्स का उपयोग करें ताकि आपके पास `एकत्र
          करें` ब्लॉक खत्म न हो जाएं!
      courseC_collector_loops_challenge2_2019:
        courseC_maze_loops_challenge2_b: लूप्स का उपयोग करें ताकि आपके पास `एकत्र
          करें` ब्लॉक खत्म न हो जाएं!
      courseC_collector_prog1:
        courseC_collector_prog1_a: जब आप खजाने के साथ स्थान पर खड़े हों, तो इसे उठाने
          के लिए <xml><block type="collector_collect"/></xml> ब्लॉक का उपयोग करें।
        courseC_collector_prog1_b: सबसे आसान समाधान एक बार आगे की ओर मूव करके, फिर
          खजाना एकत्र करना होगा।
      courseC_collector_prog1_2018:
        courseC_collector_prog1_a: जब आप खजाने के साथ स्थान पर खड़े हों, तो इसे उठाने
          के लिए <xml><block type="collector_collect"/></xml> ब्लॉक का उपयोग करें।
        courseC_collector_prog1_b: सबसे आसान समाधान एक बार आगे की ओर मूव करके, फिर
          खजाना एकत्र करना होगा।
      courseC_collector_prog1_2019:
        courseC_collector_prog1_a: जब आप खजाने के साथ स्थान पर खड़े हों, तो इसे उठाने
          के लिए <xml><block type="collector_collect"/></xml> ब्लॉक का उपयोग करें।
        courseC_collector_prog1_b: सबसे आसान समाधान एक बार आगे की ओर मूव करके, फिर
          खजाना एकत्र करना होगा।
      courseC_collector_prog2:
        courseC_collector_prog2_a: आप अपने प्रोग्राम को और छोटा बनाने के लिए चार <xml><block
          type="maze_move"><title name="DIR">moveForward</title></block></xml> ब्लॉक्स
          का उपयोग कर सकते हैं या <xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ब्लॉक का उपयोग कर सकते
          हैं।
        courseC_collector_prog2_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseC_collector_prog2_2018:
        courseC_collector_prog2_a: आप अपने प्रोग्राम को और छोटा बनाने के लिए चार <xml><block
          type="maze_move"><title name="DIR">moveForward</title></block></xml> ब्लॉक्स
          का उपयोग कर सकते हैं या <xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ब्लॉक का उपयोग कर सकते
          हैं।
        courseC_collector_prog2_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseC_collector_prog2_2019:
        courseC_collector_prog2_a: आप अपने प्रोग्राम को और छोटा बनाने के लिए चार <xml><block
          type="maze_move"><title name="DIR">moveForward</title></block></xml> ब्लॉक्स
          का उपयोग कर सकते हैं या <xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ब्लॉक का उपयोग कर सकते
          हैं।
        courseC_collector_prog2_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseC_collector_prog3:
        courseC_collector_prog3_a: प्रोग्राम केवल वही ब्लॉक्स चलाएगा, जो <xml><block
          type="when_run"/></xml> ब्लॉक से जुड़े हुए हैं।
        courseC_collector_prog3_b: एक बार में अपने कोड की एक लाइन चलाने के लिए "स्टेप"
          बटन का उपयोग करने की कोशिश करें। क्या आपको दिखाई दे रहा है कि कोड कहां गलत
          है?
        courseC_collector_prog3_c: यदि आपको इस पहेली का पता लगाने में मुश्किल हो रही
          है, तो मूव्स को कागज़ पर लिखने की कोशिश करें।
      courseC_collector_prog3_2018:
        courseC_collector_prog3_a: प्रोग्राम केवल वही ब्लॉक्स चलाएगा, जो <xml><block
          type="when_run"/></xml> ब्लॉक से जुड़े हुए हैं।
        courseC_collector_prog3_b: एक बार में अपने कोड की एक लाइन चलाने के लिए "स्टेप"
          बटन का उपयोग करने की कोशिश करें। क्या आपको दिखाई दे रहा है कि कोड कहां गलत
          है?
        courseC_collector_prog3_c: यदि आपको इस पहेली का पता लगाने में मुश्किल हो रही
          है, तो मूव्स को कागज़ पर लिखने की कोशिश करें।
      courseC_collector_prog3_2019:
        courseC_collector_prog3_a: प्रोग्राम केवल वही ब्लॉक्स चलाएगा, जो <xml><block
          type="when_run"/></xml> ब्लॉक से जुड़े हुए हैं।
        courseC_collector_prog3_b: एक बार में अपने कोड की एक लाइन चलाने के लिए "स्टेप"
          बटन का उपयोग करने की कोशिश करें। क्या आपको दिखाई दे रहा है कि कोड कहां गलत
          है?
        courseC_collector_prog3_c: यदि आपको इस पहेली का पता लगाने में मुश्किल हो रही
          है, तो मूव्स को कागज़ पर लिखने की कोशिश करें।
      courseC_collector_prog4:
        courseC_collector_prog4_a: यदि आप अटक जाते हैं, तो स्टेप्स को कागज़ पर लिखने
          की कोशिश करें।
        courseC_collector_prog4_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
        courseC_collector_prog4_c: रास्ते के लिए यह विकल्प आजमाएं।
      courseC_collector_prog4_2018:
        courseC_collector_prog4_a: यदि आप अटक जाते हैं, तो स्टेप्स को कागज़ पर लिखने
          की कोशिश करें।
        courseC_collector_prog4_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
        courseC_collector_prog4_c: रास्ते के लिए यह विकल्प आजमाएं।
      courseC_collector_prog4_2019:
        courseC_collector_prog4_a: यदि आप अटक जाते हैं, तो स्टेप्स को कागज़ पर लिखने
          की कोशिश करें।
        courseC_collector_prog4_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
        courseC_collector_prog4_c: रास्ते के लिए यह विकल्प आजमाएं।
      courseC_collector_prog5:
        courseC_collector_prog5_a: "\"क्या यह पहले स्टेप पर काम करता है?\nक्या यह
          दूसरे स्टेप पर काम करता है? \nचीज़ें कहां गलत हो रही हैं?”"
        courseC_collector_prog5_b: यदि आपने एक बग ठीक किया है और प्रोग्राम अभी भी
          काम नहीं करता, तो और बग ढूंढने के लिए उपरोक्त स्टेप्स का उपयोग करें।
        courseC_collector_prog5_c: यदि आप अटक जाते हैं, तो स्टेप्स को कागज़ पर लिखने
          की कोशिश करें।
        courseC_collector_prog5_d: खजाना एकत्र करने के लिए रास्ते का अनुसरण करें।
      courseC_collector_prog5_2018:
        courseC_collector_prog5_a: "\"क्या यह पहले स्टेप पर काम करता है?\nक्या यह
          दूसरे स्टेप पर काम करता है? \nचीज़ें कहां गलत हो रही हैं?”"
        courseC_collector_prog5_b: यदि आपने एक बग ठीक किया है और प्रोग्राम अभी भी
          काम नहीं करता, तो और बग ढूंढने के लिए उपरोक्त स्टेप्स का उपयोग करें।
        courseC_collector_prog5_c: यदि आप अटक जाते हैं, तो स्टेप्स को कागज़ पर लिखने
          की कोशिश करें।
        courseC_collector_prog5_d: खजाना एकत्र करने के लिए रास्ते का अनुसरण करें।
      courseC_collector_prog5_2019:
        courseC_collector_prog5_a: "\"क्या यह पहले स्टेप पर काम करता है?\nक्या यह
          दूसरे स्टेप पर काम करता है? \nचीज़ें कहां गलत हो रही हैं?”"
        courseC_collector_prog5_b: यदि आपने एक बग ठीक किया है और प्रोग्राम अभी भी
          काम नहीं करता, तो और बग ढूंढने के लिए उपरोक्त स्टेप्स का उपयोग करें।
        courseC_collector_prog5_c: यदि आप अटक जाते हैं, तो स्टेप्स को कागज़ पर लिखने
          की कोशिश करें।
        courseC_collector_prog5_d: खजाना एकत्र करने के लिए रास्ते का अनुसरण करें।
      courseC_collector_prog6:
        courseC_collector_prog6_a: "क्या आप पता लगा सकते हैं कि क्या गलत हो रहा है?
          \ \n\nअपने कोड को एक-एक लाइन से चलाकर त्रुटियां ढूंढने के लिए \"स्टेप\"
          बटन का उपयोग करने की कोशिश करें।"
        courseC_collector_prog6_b: अटक गए हैं?  खजाना एकत्र करने के लिए इस रास्ते
          का अनुसरण करें।
      courseC_collector_prog6_2018:
        courseC_collector_prog6_a: "क्या आप पता लगा सकते हैं कि क्या गलत हो रहा है?
          \ \n\nअपने कोड को एक-एक लाइन से चलाकर त्रुटियां ढूंढने के लिए \"स्टेप\"
          बटन का उपयोग करने की कोशिश करें।"
        courseC_collector_prog6_b: अटक गए हैं?  खजाना एकत्र करने के लिए इस रास्ते
          का अनुसरण करें।
      courseC_collector_prog6_2019:
        courseC_collector_prog6_a: "क्या आप पता लगा सकते हैं कि क्या गलत हो रहा है?
          \ \n\nअपने कोड को एक-एक लाइन से चलाकर त्रुटियां ढूंढने के लिए \"स्टेप\"
          बटन का उपयोग करने की कोशिश करें।"
        courseC_collector_prog6_b: अटक गए हैं?  खजाना एकत्र करने के लिए इस रास्ते
          का अनुसरण करें।
      courseC_collector_prog7:
        courseC_collector_prog7_a: वर्कस्पेस में पहले से ही बहुत अच्छा कोड है।  इस
          पहेली को हल करने के लिए आपको इनमें से किसी को भी मिटाने की जरूरत नहीं है।
        courseC_collector_prog7_b: क्या आपको वह ब्लॉक दिखाई नहीं दे रहा, जिसकी जरूरत
          आपको एडवेंचर्र को सही दिशा में मूव करने के लिए है?  टूलबॉक्स में से एक खींचें।
        courseC_collector_prog7_c: क्या आपको सारा खजाना एकत्र करने के लिए रूट देखने
          में मुश्किल हो रही है?  यह रास्ता आजमाएं!
      courseC_collector_prog7_2018:
        courseC_collector_prog7_a: वर्कस्पेस में पहले से ही बहुत अच्छा कोड है।  इस
          पहेली को हल करने के लिए आपको इनमें से किसी को भी मिटाने की जरूरत नहीं है।
        courseC_collector_prog7_b: क्या आपको वह ब्लॉक दिखाई नहीं दे रहा, जिसकी जरूरत
          आपको एडवेंचर्र को सही दिशा में मूव करने के लिए है?  टूलबॉक्स में से एक खींचें।
        courseC_collector_prog7_c: क्या आपको सारा खजाना एकत्र करने के लिए रूट देखने
          में मुश्किल हो रही है?  यह रास्ता आजमाएं!
      courseC_collector_prog7_2019:
        courseC_collector_prog7_a: वर्कस्पेस में पहले से ही बहुत अच्छा कोड है।  इस
          पहेली को हल करने के लिए आपको इनमें से किसी को भी मिटाने की जरूरत नहीं है।
        courseC_collector_prog7_b: क्या आपको वह ब्लॉक दिखाई नहीं दे रहा, जिसकी जरूरत
          आपको एडवेंचर्र को सही दिशा में मूव करने के लिए है?  टूलबॉक्स में से एक खींचें।
        courseC_collector_prog7_c: क्या आपको सारा खजाना एकत्र करने के लिए रूट देखने
          में मुश्किल हो रही है?  यह रास्ता आजमाएं!
      courseC_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: आप अतिरिक्त खजाना एकत्र करने के लिए कई
          बार `एकत्र करें` ब्लॉक का उपयोग कर सकते हैं।
      courseC_collector_prog_challenge1_2018:
        courseC_collector_prog_challenge1_a: आप अतिरिक्त खजाना एकत्र करने के लिए कई
          बार `एकत्र करें` ब्लॉक का उपयोग कर सकते हैं।
      courseC_collector_prog_challenge1_2019:
        courseC_collector_prog_challenge1_a: आप अतिरिक्त खजाना एकत्र करने के लिए कई
          बार `एकत्र करें` ब्लॉक का उपयोग कर सकते हैं।
      courseC_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: आप हर स्थान पर एक से अधिक `एकत्र करें`
          ब्लॉक उपयोग कर सकते हैं।
        courseC_collector_prog_challenge1_b: क्या आप रास्ता भूल गए हैं?  पहेली को
          हल करने के लिए यह रास्ता आजमाएं!
      courseC_collector_prog_challenge2_2018:
        courseC_collector_prog_challenge1_a: आप हर स्थान पर एक से अधिक `एकत्र करें`
          ब्लॉक उपयोग कर सकते हैं।
        courseC_collector_prog_challenge1_b: क्या आप रास्ता भूल गए हैं?  पहेली को
          हल करने के लिए यह रास्ता आजमाएं!
      courseC_collector_prog_challenge2_2019:
        courseC_collector_prog_challenge1_a: आप हर स्थान पर एक से अधिक `एकत्र करें`
          ब्लॉक उपयोग कर सकते हैं।
        courseC_collector_prog_challenge1_b: क्या आप रास्ता भूल गए हैं?  पहेली को
          हल करने के लिए यह रास्ता आजमाएं!
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events2:
        courseC_flappy_events2_a: आपको जो ब्लॉक जोड़ने की जरूरत है, उसे `गति तय करें`
          कहा जाता है।
        courseC_flappy_events2_b: इस पहेली को हल करने के लिए `गति तय करें` ब्लॉक को
          `जब चलाया जाए` ब्लॉक से जोड़ें।
      courseC_flappy_events2_2018:
        courseC_flappy_events2_a: आपको जो ब्लॉक जोड़ने की जरूरत है, उसे `गति तय करें`
          कहा जाता है।
        courseC_flappy_events2_b: इस पहेली को हल करने के लिए `गति तय करें` ब्लॉक को
          `जब चलाया जाए` ब्लॉक से जोड़ें।
      courseC_flappy_events2_2019:
        courseC_flappy_events2_a: आपको जो ब्लॉक जोड़ने की जरूरत है, उसे `गति तय करें`
          कहा जाता है।
        courseC_flappy_events2_b: इस पहेली को हल करने के लिए `गति तय करें` ब्लॉक को
          `जब चलाया जाए` ब्लॉक से जोड़ें।
      courseC_flappy_events3:
        courseC_flappy_events3_a: यदि कुछ सही ढंग से काम नहीं कर रहा है, तो सुनिश्चित
          करें कि आपके ब्लॉक्स वर्कस्पेस में सही इवेंट्स से जुड़े हुए नहीं हैं।
      courseC_flappy_events3_2018:
        courseC_flappy_events3_a: यदि कुछ सही ढंग से काम नहीं कर रहा है, तो सुनिश्चित
          करें कि आपके ब्लॉक्स वर्कस्पेस में सही इवेंट्स से जुड़े हुए नहीं हैं।
      courseC_flappy_events3_2019:
        courseC_flappy_events3_a: यदि कुछ सही ढंग से काम नहीं कर रहा है, तो सुनिश्चित
          करें कि आपके ब्लॉक्स वर्कस्पेस में सही इवेंट्स से जुड़े हुए नहीं हैं।
      courseC_flappy_events4:
        courseC_flappy_events4_a: इस पहेली को हल करने के लिए `गेम खत्म करें` ब्लॉक
          को `जब किसी बाधा से टकराएं` के साथ जोड़ें।
      courseC_flappy_events4_2018:
        courseC_flappy_events4_a: इस पहेली को हल करने के लिए `गेम खत्म करें` ब्लॉक
          को `जब किसी बाधा से टकराएं` के साथ जोड़ें।
      courseC_flappy_events4_2019:
        courseC_flappy_events4_a: इस पहेली को हल करने के लिए `गेम खत्म करें` ब्लॉक
          को `जब किसी बाधा से टकराएं` के साथ जोड़ें।
      courseC_flappy_events5:
        courseC_flappy_events5_a: इस स्तर को पास करने के लिए आपको `अंक हासिल करें`
          ब्लॉक का उपयोग करने की जरूरत होगी।
      courseC_flappy_events5_2018:
        courseC_flappy_events5_a: इस स्तर को पास करने के लिए आपको `अंक हासिल करें`
          ब्लॉक का उपयोग करने की जरूरत होगी।
      courseC_flappy_events5_2019:
        courseC_flappy_events5_a: इस स्तर को पास करने के लिए आपको `अंक हासिल करें`
          ब्लॉक का उपयोग करने की जरूरत होगी।
      courseC_flappy_events6:
        courseC_flappy_events6_a: "`____ मात्रा में हिलाएं` ब्लॉक को `जब क्लिक किया
          जाए` इवेंट \nसे जोड़ने की कोशिश करें।"
      courseC_flappy_events6_2018:
        courseC_flappy_events6_a: "`____ मात्रा में हिलाएं` ब्लॉक को `जब क्लिक किया
          जाए` इवेंट \nसे जोड़ने की कोशिश करें।"
      courseC_flappy_events6_2019:
        courseC_flappy_events6_a: "`____ मात्रा में हिलाएं` ब्लॉक को `जब क्लिक किया
          जाए` इवेंट \nसे जोड़ने की कोशिश करें।"
      courseC_flappy_events7:
        courseC_flappy_events7_a: आप `दृश्य सेट करें` ब्लॉक का उपयोग करते हुए पृष्ठभूमि
          को बदल सकते हैं।
      courseC_flappy_events7_2018:
        courseC_flappy_events7_a: आप `दृश्य सेट करें` ब्लॉक का उपयोग करते हुए पृष्ठभूमि
          को बदल सकते हैं।
      courseC_flappy_events7_2019:
        courseC_flappy_events7_a: आप `दृश्य सेट करें` ब्लॉक का उपयोग करते हुए पृष्ठभूमि
          को बदल सकते हैं।
      courseC_flappy_events8:
        courseC_flappy_events8_a: इस स्तर को पास करने के लिए `जब बाधा से गुजरें` इवेंट
          के नीचे दूसरे `दृश्य सेट करें` ब्लॉक से जोड़ने की कोशिश करें।
      courseC_flappy_events8_2018:
        courseC_flappy_events8_a: इस स्तर को पास करने के लिए `जब बाधा से गुजरें` इवेंट
          के नीचे दूसरे `दृश्य सेट करें` ब्लॉक से जोड़ने की कोशिश करें।
      courseC_flappy_events8_2019:
        courseC_flappy_events8_a: इस स्तर को पास करने के लिए `जब बाधा से गुजरें` इवेंट
          के नीचे दूसरे `दृश्य सेट करें` ब्लॉक से जोड़ने की कोशिश करें।
      courseC_flappy_events9:
        courseC_flappy_events9_a: इस स्तर को पास करने के लिए `स्कोर 0 सेट करें` ब्लॉक
          को `जब किसी बाधा से टकराएं` इवेंट से जोड़ें।
      courseC_flappy_events9_2018:
        courseC_flappy_events9_a: इस स्तर को पास करने के लिए `स्कोर 0 सेट करें` ब्लॉक
          को `जब किसी बाधा से टकराएं` इवेंट से जोड़ें।
      courseC_flappy_events9_2019:
        courseC_flappy_events9_a: इस स्तर को पास करने के लिए `स्कोर 0 सेट करें` ब्लॉक
          को `जब किसी बाधा से टकराएं` इवेंट से जोड़ें।
      courseC_harvester_loops1:
        courseC_harvester_loops1_a: जब आप कद्दू की ओर मूव कर लें, तो इसे एकत्र करने
          के लिए <xml><block type="harvester_pumpkin"/></xml> का उपयोग करें।
        courseC_harvester_loops1_b: आप एक सक्वेयर से एक से अधिक कद्दू लेने के लिए  <xml><block
          type="harvester_pumpkin"/></xml> ब्लॉक के साथ लूप का उपयोग कर सकते हैं।
      courseC_harvester_loops1_2018:
        courseC_harvester_loops1_a: जब आप कद्दू की ओर मूव कर लें, तो इसे एकत्र करने
          के लिए <xml><block type="harvester_pumpkin"/></xml> का उपयोग करें।
        courseC_harvester_loops1_b: आप एक सक्वेयर से एक से अधिक कद्दू लेने के लिए  <xml><block
          type="harvester_pumpkin"/></xml> ब्लॉक के साथ लूप का उपयोग कर सकते हैं।
      courseC_harvester_loops1_2019:
        courseC_harvester_loops1_a: जब आप कद्दू की ओर मूव कर लें, तो इसे एकत्र करने
          के लिए <xml><block type="harvester_pumpkin"/></xml> का उपयोग करें।
        courseC_harvester_loops1_b: आप एक सक्वेयर से एक से अधिक कद्दू लेने के लिए  <xml><block
          type="harvester_pumpkin"/></xml> ब्लॉक के साथ लूप का उपयोग कर सकते हैं।
      courseC_harvester_loops2:
        courseC_harvester_loops2_a: यदि आप अटक जाएं, तो कागज़ पर स्टेप्स लिखने और
          दोहराने वाले पैटर्नों की खोज करने की कोशिश करें।
        courseC_harvester_loops2_b: आपको एक के बाद एक `दोहराएं` लूप की जरूरत होगी।
        courseC_harvester_loops2_c: एक लूप `आगे की ओर मूव करें` कमांड को दोहराएहा,
          और दूसरा `कद्दू लें` कमांड को दोहराएगा।
      courseC_harvester_loops2_2018:
        courseC_harvester_loops2_a: यदि आप अटक जाएं, तो कागज़ पर स्टेप्स लिखने और
          दोहराने वाले पैटर्नों की खोज करने की कोशिश करें।
        courseC_harvester_loops2_b: आपको एक के बाद एक `दोहराएं` लूप की जरूरत होगी।
        courseC_harvester_loops2_c: एक लूप `आगे की ओर मूव करें` कमांड को दोहराएहा,
          और दूसरा `कद्दू लें` कमांड को दोहराएगा।
      courseC_harvester_loops2_2019:
        courseC_harvester_loops2_a: यदि आप अटक जाएं, तो कागज़ पर स्टेप्स लिखने और
          दोहराने वाले पैटर्नों की खोज करने की कोशिश करें।
        courseC_harvester_loops2_b: आपको एक के बाद एक `दोहराएं` लूप की जरूरत होगी।
        courseC_harvester_loops2_c: एक लूप `आगे की ओर मूव करें` कमांड को दोहराएहा,
          और दूसरा `कद्दू लें` कमांड को दोहराएगा।
      courseC_harvester_loops3:
        courseC_harvester_loops3_a: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
        courseC_harvester_loops3_b: पहले कद्दुओं के लिए, आप पिछली पहेली से काफी मिलते-जुलते
          कोड का उपयोग कर सकते हैं। उसके बाद आपको किस तरफ मुड़ने की जरूरत होगी?
        courseC_harvester_loops3_c: यदि आप अपने कोड को आसान बनाना चाहते हैं, तो आप
          वास्तव में एक लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड लूप** कहा जाता
          है।
      courseC_harvester_loops3_2018:
        courseC_harvester_loops3_a: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
        courseC_harvester_loops3_b: पहले कद्दुओं के लिए, आप पिछली पहेली से काफी मिलते-जुलते
          कोड का उपयोग कर सकते हैं। उसके बाद आपको किस तरफ मुड़ने की जरूरत होगी?
        courseC_harvester_loops3_c: यदि आप अपने कोड को आसान बनाना चाहते हैं, तो आप
          वास्तव में एक लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड लूप** कहा जाता
          है।
      courseC_harvester_loops3_2019:
        courseC_harvester_loops3_a: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
        courseC_harvester_loops3_b: पहले कद्दुओं के लिए, आप पिछली पहेली से काफी मिलते-जुलते
          कोड का उपयोग कर सकते हैं। उसके बाद आपको किस तरफ मुड़ने की जरूरत होगी?
        courseC_harvester_loops3_c: यदि आप अपने कोड को आसान बनाना चाहते हैं, तो आप
          वास्तव में एक लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड लूप** कहा जाता
          है।
      courseC_harvester_loops4:
        courseC_harvester_loops4_a: कॉर्न एकत्र करने के लिए नए `कॉर्न लें` ब्लॉक का
          उपयोग करें।
        courseC_harvester_loops4_b: आप अपने कोड में कई दोहराने वाले लूप्स का उपयोग
          कर सकते हैं, कुछ का कॉर्न लेने के लिए और कुछ का कद्दू लेने के लिए।
        courseC_harvester_loops4_c: यदि आप अपने कोड को आसान बनाना चाहते हैं, तो आप
          वास्तव में एक लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड लूप** कहा जाता
          है।
      courseC_harvester_loops4_2018:
        courseC_harvester_loops4_a: कॉर्न एकत्र करने के लिए नए `कॉर्न लें` ब्लॉक का
          उपयोग करें।
        courseC_harvester_loops4_b: आप अपने कोड में कई दोहराने वाले लूप्स का उपयोग
          कर सकते हैं, कुछ का कॉर्न लेने के लिए और कुछ का कद्दू लेने के लिए।
        courseC_harvester_loops4_c: यदि आप अपने कोड को आसान बनाना चाहते हैं, तो आप
          वास्तव में एक लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड लूप** कहा जाता
          है।
      courseC_harvester_loops4_2019:
        courseC_harvester_loops4_a: कॉर्न एकत्र करने के लिए नए `कॉर्न लें` ब्लॉक का
          उपयोग करें।
        courseC_harvester_loops4_b: आप अपने कोड में कई दोहराने वाले लूप्स का उपयोग
          कर सकते हैं, कुछ का कॉर्न लेने के लिए और कुछ का कद्दू लेने के लिए।
        courseC_harvester_loops4_c: यदि आप अपने कोड को आसान बनाना चाहते हैं, तो आप
          वास्तव में एक लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड लूप** कहा जाता
          है।
      courseC_harvester_loops5:
        courseC_harvester_loops5_a: यदि आप अटक जाएं, तो पूरे प्रोग्राम को चित्रित
          करने और फिर दोहराने वाले पैटर्नों की खोज करने की कोशिश करें।
        courseC_harvester_loops5_b: क्या यह सीढी स्टेप अन्य पहेलियों से परिचित दिखाई
          देता है? गतिविधियां एक जैसी होनी चाहिएं, बस इस दौरान फसलें एकत्र करना याद
          रखें।
      courseC_harvester_loops5_2018:
        courseC_harvester_loops5_a: यदि आप अटक जाएं, तो पूरे प्रोग्राम को चित्रित
          करने और फिर दोहराने वाले पैटर्नों की खोज करने की कोशिश करें।
        courseC_harvester_loops5_b: क्या यह सीढी स्टेप अन्य पहेलियों से परिचित दिखाई
          देता है? गतिविधियां एक जैसी होनी चाहिएं, बस इस दौरान फसलें एकत्र करना याद
          रखें।
      courseC_harvester_loops5_2019:
        courseC_harvester_loops5_a: यदि आप अटक जाएं, तो पूरे प्रोग्राम को चित्रित
          करने और फिर दोहराने वाले पैटर्नों की खोज करने की कोशिश करें।
        courseC_harvester_loops5_b: क्या यह सीढी स्टेप अन्य पहेलियों से परिचित दिखाई
          देता है? गतिविधियां एक जैसी होनी चाहिएं, बस इस दौरान फसलें एकत्र करना याद
          रखें।
      courseC_harvester_loops6:
        courseC_harvester_loops6_a: याद रखें कि आप एक दोहराने वाले लूप में कई ब्लॉक्स
          रख सकते हैं।
        courseC_harvester_loops6_b: कॉर्न की पंक्ति के अंत में मुड़ना न भूलें।
      courseC_harvester_loops6_2018:
        courseC_harvester_loops6_a: याद रखें कि आप एक दोहराने वाले लूप में कई ब्लॉक्स
          रख सकते हैं।
        courseC_harvester_loops6_b: कॉर्न की पंक्ति के अंत में मुड़ना न भूलें।
      courseC_harvester_loops6_2019:
        courseC_harvester_loops6_a: याद रखें कि आप एक दोहराने वाले लूप में कई ब्लॉक्स
          रख सकते हैं।
        courseC_harvester_loops6_b: कॉर्न की पंक्ति के अंत में मुड़ना न भूलें।
      courseC_harvester_loops7:
        courseC_harvester_loops7_a: आप दो तरीकों से इस पहेली को हल कर सकते हैं, या
          तो पहले कॉर्न या कद्दू प्राप्त करें।
        courseC_harvester_loops7_b: इस पहेली को हल करने के लिए आपको कई `दोहराएं` लूप्स
          की जरूरत होगी।
      courseC_harvester_loops7_2018:
        courseC_harvester_loops7_a: आप दो तरीकों से इस पहेली को हल कर सकते हैं, या
          तो पहले कॉर्न या कद्दू प्राप्त करें।
        courseC_harvester_loops7_b: इस पहेली को हल करने के लिए आपको कई `दोहराएं` लूप्स
          की जरूरत होगी।
      courseC_harvester_loops7_2019:
        courseC_harvester_loops7_a: आप दो तरीकों से इस पहेली को हल कर सकते हैं, या
          तो पहले कॉर्न या कद्दू प्राप्त करें।
        courseC_harvester_loops7_b: इस पहेली को हल करने के लिए आपको कई `दोहराएं` लूप्स
          की जरूरत होगी।
      courseC_harvester_loops8:
        courseC_harvester_loops8_a: क्या यह सीढी स्टेप पिछली पहेली से परिचित दिखाई
          देता है? गतिविधियां एक जैसी होनी चाहिएं, बस इस दौरान फसलें एकत्र करना याद
          रखें।
        courseC_harvester_loops8_b: यदि आप अपने कोड को और आसान बनाना चाहते हैं, तो
          आप वास्तव में एक `दोहराएं` लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड
          लूप** कहा जाता है।
      courseC_harvester_loops8_2018:
        courseC_harvester_loops8_a: क्या यह सीढी स्टेप पिछली पहेली से परिचित दिखाई
          देता है? गतिविधियां एक जैसी होनी चाहिएं, बस इस दौरान फसलें एकत्र करना याद
          रखें।
        courseC_harvester_loops8_b: यदि आप अपने कोड को और आसान बनाना चाहते हैं, तो
          आप वास्तव में एक `दोहराएं` लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड
          लूप** कहा जाता है।
      courseC_harvester_loops8_2019:
        courseC_harvester_loops8_a: क्या यह सीढी स्टेप पिछली पहेली से परिचित दिखाई
          देता है? गतिविधियां एक जैसी होनी चाहिएं, बस इस दौरान फसलें एकत्र करना याद
          रखें।
        courseC_harvester_loops8_b: यदि आप अपने कोड को और आसान बनाना चाहते हैं, तो
          आप वास्तव में एक `दोहराएं` लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड
          लूप** कहा जाता है।
      courseC_harvester_loops_challenge1a:
        courseC_harvester_loops_challenge1_a: लूप्स के बिना यह बहुत ज्यादा मुश्किल
          है!
        courseC_harvester_loops_challenge1_b: आप `आगे की ओर मूव करें` और `कॉर्न लें`
          को जितनी बार जरूरत हो, दोहरा सकते हैं, फिर प्रत्येक कोने पर `दाएं मुड़`
          सकते हैं।
        courseC_harvester_loops_challenge1_c: |-
          बीच में कॉर्न एकत्र करने का बेहतर तरीका है, `दोहराएं` ब्लॉक को दूसरे `दोहराएं` ब्लॉक के अंदर रखना।

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge1a_2018:
        courseC_harvester_loops_challenge1_a: लूप्स के बिना यह बहुत ज्यादा मुश्किल
          है!
        courseC_harvester_loops_challenge1_b: आप `आगे की ओर मूव करें` और `कॉर्न लें`
          को जितनी बार जरूरत हो, दोहरा सकते हैं, फिर प्रत्येक कोने पर `दाएं मुड़`
          सकते हैं।
        courseC_harvester_loops_challenge1_c: |-
          After picking corn the first two times, you can use a nested loop to pick the next eight pieces.

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge1a_2019:
        courseC_harvester_loops_challenge1_a: लूप्स के बिना यह बहुत ज्यादा मुश्किल
          है!
        courseC_harvester_loops_challenge1_b: आप `आगे की ओर मूव करें` और `कॉर्न लें`
          को जितनी बार जरूरत हो, दोहरा सकते हैं, फिर प्रत्येक कोने पर `दाएं मुड़`
          सकते हैं।
        courseC_harvester_loops_challenge1_c: |-
          बीच में कॉर्न एकत्र करने का बेहतर तरीका है, `दोहराएं` ब्लॉक को दूसरे `दोहराएं` ब्लॉक के अंदर रखना।

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: इसे हल करने का एक रास्ता मोड़दार प्रतीत
          होता है। दूसरा रास्ता घुमावदार लगता है! इस तरह की पहेली को हल करने के बहुत
          से अलग-अलग समाधान हैं। स्थायी रहें!
        courseC_harvester_loops_challenge2_b: आप `आगे की ओर मूव करें` और `लेट्स लें`
          को जितनी बार जरूरत हो, दोहरा सकते हैं, फिर प्रत्येक कोने पर मुड़ सकते हैं।
        courseC_harvester_loops_challenge2_c: |-
          पहेली पूरी करने के लिए इस मोड़दार पैटर्न को केवल 20 ब्लॉक्स के साथ दो बार दोहराया जा सकता है!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          इस घुमावदार पैटर्न को केवल 18 ब्लॉक्स के साथ कोडबद्ध किया जा सकता है!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2018:
        courseC_harvester_loops_challenge2_a: इसे हल करने का एक रास्ता मोड़दार प्रतीत
          होता है। दूसरा रास्ता घुमावदार लगता है! इस तरह की पहेली को हल करने के बहुत
          से अलग-अलग समाधान हैं। स्थायी रहें!
        courseC_harvester_loops_challenge2_b: आप `आगे की ओर मूव करें` और `लेट्स लें`
          को जितनी बार जरूरत हो, दोहरा सकते हैं, फिर प्रत्येक कोने पर मुड़ सकते हैं।
        courseC_harvester_loops_challenge2_c: |-
          पहेली पूरी करने के लिए इस मोड़दार पैटर्न को केवल 20 ब्लॉक्स के साथ दो बार दोहराया जा सकता है!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          इस घुमावदार पैटर्न को केवल 18 ब्लॉक्स के साथ कोडबद्ध किया जा सकता है!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2019:
        courseC_harvester_loops_challenge2_a: इसे हल करने का एक रास्ता मोड़दार प्रतीत
          होता है। दूसरा रास्ता घुमावदार लगता है! इस तरह की पहेली को हल करने के बहुत
          से अलग-अलग समाधान हैं। स्थायी रहें!
        courseC_harvester_loops_challenge2_b: आप `आगे की ओर मूव करें` और `लेट्स लें`
          को जितनी बार जरूरत हो, दोहरा सकते हैं, फिर प्रत्येक कोने पर मुड़ सकते हैं।
        courseC_harvester_loops_challenge2_c: |-
          पहेली पूरी करने के लिए इस मोड़दार पैटर्न को केवल 20 ब्लॉक्स के साथ दो बार दोहराया जा सकता है!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          इस घुमावदार पैटर्न को केवल 18 ब्लॉक्स के साथ कोडबद्ध किया जा सकता है!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_maze_debugging1:
        courseC_maze_debugging1_a: |-
          -   क्या सब कुछ पहले स्टेप के बाद काम करता है?
          -   क्या यह दूसरे के बाद भी काम करता है?
          -   यह कहां गलत हो जाता है?
        courseC_maze_debugging1_b: 1 ब्लॉक है, जिसे आपको इस पहेली को पूरा करने के
          लिए जोड़ने की जरूरत है।
      courseC_maze_debugging1_2018:
        courseC_maze_debugging1_a: |-
          -   क्या सब कुछ पहले स्टेप के बाद काम करता है?
          -   क्या यह दूसरे के बाद भी काम करता है?
          -   यह कहां गलत हो जाता है?
        courseC_maze_debugging1_b: 1 ब्लॉक है, जिसे आपको इस पहेली को पूरा करने के
          लिए जोड़ने की जरूरत है।
      courseC_maze_debugging1_2019:
        courseC_maze_debugging1_a: |-
          -   क्या सब कुछ पहले स्टेप के बाद काम करता है?
          -   क्या यह दूसरे के बाद भी काम करता है?
          -   यह कहां गलत हो जाता है?
        courseC_maze_debugging1_b: 1 ब्लॉक है, जिसे आपको इस पहेली को पूरा करने के
          लिए जोड़ने की जरूरत है।
      courseC_maze_debugging2:
        courseC_maze_debugging2_a: वर्कस्पेस में बहुत-सा मूल्यवान कोड है।  इस पूरे
          को न मिटाएं और शुरू करें!
        courseC_maze_debugging2_b: |-
          -   क्या सब कुछ पहले स्टेप के बाद काम करता है?
          -   क्या यह दूसरे के बाद भी काम करता है?
          -   यह कहां गलत हो जाता है?
        courseC_maze_debugging2_c: क्या आप पता नहीं लगा पा रहें कि क्या गलत है? यह
          देखने के लिए कई बार कोड चलाने की कोशिश करें कि क्या होता है।
      courseC_maze_debugging2_2018:
        courseC_maze_debugging2_a: वर्कस्पेस में बहुत-सा मूल्यवान कोड है।  इस पूरे
          को न मिटाएं और शुरू करें!
        courseC_maze_debugging2_b: |-
          -   क्या सब कुछ पहले स्टेप के बाद काम करता है?
          -   क्या यह दूसरे के बाद भी काम करता है?
          -   यह कहां गलत हो जाता है?
        courseC_maze_debugging2_c: क्या आप पता नहीं लगा पा रहें कि क्या गलत है? यह
          देखने के लिए कई बार कोड चलाने की कोशिश करें कि क्या होता है।
      courseC_maze_debugging2_2019:
        courseC_maze_debugging2_a: वर्कस्पेस में बहुत-सा मूल्यवान कोड है।  इस पूरे
          को न मिटाएं और शुरू करें!
        courseC_maze_debugging2_b: |-
          -   क्या सब कुछ पहले स्टेप के बाद काम करता है?
          -   क्या यह दूसरे के बाद भी काम करता है?
          -   यह कहां गलत हो जाता है?
        courseC_maze_debugging2_c: क्या आप पता नहीं लगा पा रहें कि क्या गलत है? यह
          देखने के लिए कई बार कोड चलाने की कोशिश करें कि क्या होता है।
      courseC_maze_debugging3:
        courseC_maze_debugging3_a: |-
          अपने कोड के मध्य से ब्लॉक को मिटाने के लिए, सभी ब्लॉक्स को वर्कस्पेस के दूसरे भाग तक खींचें।

          जिस ब्लॉक को आप मिटाना चाहते हैं, उसे वापस टूलबॉक्स तक खींचें।

          अंत में, अपने अन्य ब्लॉक्स को वापस वहां रखें, जहां से वे संबंधित हैं।

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: क्या आप पता नहीं लगा पा रहें कि क्या गलत है? यह
          देखने के लिए कई बार कोड चलाने की कोशिश करें कि क्या होता है।
      courseC_maze_debugging3_2018:
        courseC_maze_debugging3_a: |-
          अपने कोड के मध्य से ब्लॉक को मिटाने के लिए, सभी ब्लॉक्स को वर्कस्पेस के दूसरे भाग तक खींचें।

          जिस ब्लॉक को आप मिटाना चाहते हैं, उसे वापस टूलबॉक्स तक खींचें।

          अंत में, अपने अन्य ब्लॉक्स को वापस वहां रखें, जहां से वे संबंधित हैं।

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: क्या आप पता नहीं लगा पा रहें कि क्या गलत है? यह
          देखने के लिए कई बार कोड चलाने की कोशिश करें कि क्या होता है।
      courseC_maze_debugging3_2019:
        courseC_maze_debugging3_a: |-
          अपने कोड के मध्य से ब्लॉक को मिटाने के लिए, सभी ब्लॉक्स को वर्कस्पेस के दूसरे भाग तक खींचें।

          जिस ब्लॉक को आप मिटाना चाहते हैं, उसे वापस टूलबॉक्स तक खींचें।

          अंत में, अपने अन्य ब्लॉक्स को वापस वहां रखें, जहां से वे संबंधित हैं।

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: क्या आप पता नहीं लगा पा रहें कि क्या गलत है? यह
          देखने के लिए कई बार कोड चलाने की कोशिश करें कि क्या होता है।
      courseC_maze_debugging4:
        courseC_maze_debugging4_a: एक बार में एक निर्देश चलाने के लिए "स्टेप" बटन
          का उपयोग करें  क्या वह उस लाइन को ढूंढने में आपकी मदद करता है, जहां चीज़ें
          गलत हो जाती हैं?
        courseC_maze_debugging4_b: एक मोड़ स्क्रैट को गलत दिशा में ले जा रहा है। क्या
          आप पता लगा सकते हैं कि वह कौन-सा है?
      courseC_maze_debugging4_2018:
        courseC_maze_debugging4_a: एक बार में एक निर्देश चलाने के लिए "स्टेप" बटन
          का उपयोग करें  क्या वह उस लाइन को ढूंढने में आपकी मदद करता है, जहां चीज़ें
          गलत हो जाती हैं?
        courseC_maze_debugging4_b: एक मोड़ स्क्रैट को गलत दिशा में ले जा रहा है। क्या
          आप पता लगा सकते हैं कि वह कौन-सा है?
      courseC_maze_debugging4_2019:
        courseC_maze_debugging4_a: एक बार में एक निर्देश चलाने के लिए "स्टेप" बटन
          का उपयोग करें  क्या वह उस लाइन को ढूंढने में आपकी मदद करता है, जहां चीज़ें
          गलत हो जाती हैं?
        courseC_maze_debugging4_b: एक मोड़ स्क्रैट को गलत दिशा में ले जा रहा है। क्या
          आप पता लगा सकते हैं कि वह कौन-सा है?
      courseC_maze_debugging5:
        courseC_maze_debugging5_a: "वर्कस्पेस में पहले से ही बहुत से उपयोगी ब्लॉक्स
          हैं।  उन सभी को न मिटाएं! \n\nपूरा करने के लिए \"स्टेप\" बटन का उपयोग करें
          और पता लगाएं कि चीज़ें कहां गलत हो जाती हैं।"
        courseC_maze_debugging5_b: यह कहने का प्रयास करें कि स्क्रैट को आवाज़ के लिए
          क्या करना चाहिए।   क्या यह वर्कस्पेस में मौजूद कोड के समान है?  क्या गलत
          हो जाता है?
      courseC_maze_debugging5_2018:
        courseC_maze_debugging5_a: "वर्कस्पेस में पहले से ही बहुत से उपयोगी ब्लॉक्स
          हैं।  उन सभी को न मिटाएं! \n\nपूरा करने के लिए \"स्टेप\" बटन का उपयोग करें
          और पता लगाएं कि चीज़ें कहां गलत हो जाती हैं।"
        courseC_maze_debugging5_c: You can change the direction of the turn block
          by clicking on the dropdown.
        courseC_maze_debugging5_b: यह कहने का प्रयास करें कि स्क्रैट को आवाज़ के लिए
          क्या करना चाहिए।   क्या यह वर्कस्पेस में मौजूद कोड के समान है?  क्या गलत
          हो जाता है?
      courseC_maze_debugging5_2019:
        courseC_maze_debugging5_a: "वर्कस्पेस में पहले से ही बहुत से उपयोगी ब्लॉक्स
          हैं।  उन सभी को न मिटाएं! \n\nपूरा करने के लिए \"स्टेप\" बटन का उपयोग करें
          और पता लगाएं कि चीज़ें कहां गलत हो जाती हैं।"
        courseC_maze_debugging5_c: You can change the direction of the turn block
          by clicking on the dropdown.
        courseC_maze_debugging5_b: यह कहने का प्रयास करें कि स्क्रैट को आवाज़ के लिए
          क्या करना चाहिए।   क्या यह वर्कस्पेस में मौजूद कोड के समान है?  क्या गलत
          हो जाता है?
      courseC_maze_debugging6:
        courseC_maze_debugging6_a: "-   स्क्रैट क्या करने के लिए बनाया गया है? \n-
          \  स्क्रैट क्या करता है?  \n-   यह आपको क्या बताता है?"
        courseC_maze_debugging6_b: |-
          जब आप पहला बग ढूंढकर उसे ठीक कर लें, तो दूसरे को ढूंढने के लिए डीबगिंग प्रक्रिया को दुबारा पूरा करें।

          तब तक प्रक्रिया को दोहराएं, जब तक कि प्रोग्राम काम न करने लगे!
      courseC_maze_debugging6_2018:
        courseC_maze_debugging6_a: "-   स्क्रैट क्या करने के लिए बनाया गया है? \n-
          \  स्क्रैट क्या करता है?  \n-   यह आपको क्या बताता है?"
        courseC_maze_debugging6_b: |-
          जब आप पहला बग ढूंढकर उसे ठीक कर लें, तो दूसरे को ढूंढने के लिए डीबगिंग प्रक्रिया को दुबारा पूरा करें।

          तब तक प्रक्रिया को दोहराएं, जब तक कि प्रोग्राम काम न करने लगे!
      courseC_maze_debugging6_2019:
        courseC_maze_debugging6_a: "-   स्क्रैट क्या करने के लिए बनाया गया है? \n-
          \  स्क्रैट क्या करता है?  \n-   यह आपको क्या बताता है?"
        courseC_maze_debugging6_b: |-
          जब आप पहला बग ढूंढकर उसे ठीक कर लें, तो दूसरे को ढूंढने के लिए डीबगिंग प्रक्रिया को दुबारा पूरा करें।

          तब तक प्रक्रिया को दोहराएं, जब तक कि प्रोग्राम काम न करने लगे!
      courseC_maze_debugging7:
        courseC_maze_debugging7_a: |-
          -   क्या सब कुछ पहले स्टेप पर काम करता है?
          -   दूसरे स्टेप के बारे में क्या कहेंगे?
          -   यह कहां गलत हो जाता है?
        courseC_maze_debugging7_b: लाइन दर लाइन प्रोग्राम चलाने के लिए "स्टेप" बटन
          का उपयोग करना न भूलें!
        courseC_maze_debugging7_c: |-
          जब आप पहला बग ढूंढकर उसे ठीक कर लें, तो अगले को ढूंढने के लिए डीबगिंग प्रक्रिया का दुबारा उपयोग करना सुनिश्चित करें।

          तब तक डीबगिंग प्रक्रिया को दोहराएं, जब तक कि प्रोग्राम काम न करने लगे!
      courseC_maze_debugging7_2018:
        courseC_maze_debugging7_a: |-
          -   क्या सब कुछ पहले स्टेप पर काम करता है?
          -   दूसरे स्टेप के बारे में क्या कहेंगे?
          -   यह कहां गलत हो जाता है?
        courseC_maze_debugging7_b: लाइन दर लाइन प्रोग्राम चलाने के लिए "स्टेप" बटन
          का उपयोग करना न भूलें!
        courseC_maze_debugging7_c: |-
          जब आप पहला बग ढूंढकर उसे ठीक कर लें, तो अगले को ढूंढने के लिए डीबगिंग प्रक्रिया का दुबारा उपयोग करना सुनिश्चित करें।

          तब तक डीबगिंग प्रक्रिया को दोहराएं, जब तक कि प्रोग्राम काम न करने लगे!
      courseC_maze_debugging7_2019:
        courseC_maze_debugging7_a: |-
          -   क्या सब कुछ पहले स्टेप पर काम करता है?
          -   दूसरे स्टेप के बारे में क्या कहेंगे?
          -   यह कहां गलत हो जाता है?
        courseC_maze_debugging7_b: लाइन दर लाइन प्रोग्राम चलाने के लिए "स्टेप" बटन
          का उपयोग करना न भूलें!
        courseC_maze_debugging7_c: |-
          जब आप पहला बग ढूंढकर उसे ठीक कर लें, तो अगले को ढूंढने के लिए डीबगिंग प्रक्रिया का दुबारा उपयोग करना सुनिश्चित करें।

          तब तक डीबगिंग प्रक्रिया को दोहराएं, जब तक कि प्रोग्राम काम न करने लगे!
      courseC_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: दाएं या बाएं? यह आपकी मर्जी है!
        courseC_maze_debugging_challenge1_b: स्क्रैट का रास्ता आयत के आकार में है!
          उसे हर बार एक ही तरफ मुड़ने की जरूरत है।
        courseC_maze_debugging_challenge1_c: यदि आप अटक रहे हैं, तो आप हमेशा शुरूआत
          करके नया तरीका ढूंढ सकते हैं!
      courseC_maze_debugging_challenge1_2018:
        courseC_maze_debugging_challenge1_a: दाएं या बाएं? यह आपकी मर्जी है!
        courseC_maze_debugging_challenge1_b: स्क्रैट का रास्ता आयत के आकार में है!
          उसे हर बार एक ही तरफ मुड़ने की जरूरत है।
        courseC_maze_debugging_challenge1_c: यदि आप अटक रहे हैं, तो आप हमेशा शुरूआत
          करके नया तरीका ढूंढ सकते हैं!
      courseC_maze_debugging_challenge1_2019:
        courseC_maze_debugging_challenge1_a: दाएं या बाएं? यह आपकी मर्जी है!
        courseC_maze_debugging_challenge1_b: स्क्रैट का रास्ता आयत के आकार में है!
          उसे हर बार एक ही तरफ मुड़ने की जरूरत है।
        courseC_maze_debugging_challenge1_c: यदि आप अटक रहे हैं, तो आप हमेशा शुरूआत
          करके नया तरीका ढूंढ सकते हैं!
      courseC_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_b: यदि आप अटक रहे हैं, तो कोड को डीबग करने
          की कोशिश करें। यह कहां गलत है?
        courseC_maze_debugging_challenge2_c: |-
          दो अलग रास्ते हैं, जिनका अनुसरण आप बस आगे की ओर मूव करके और चार बार मुड़कर कर सकते हैं। यदि आप लूप का उपयोग करने का एक तरीका ढूंढ लें, तो और भी हो मिल सकते हैं!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2018:
        courseC_maze_debugging_challenge2_b: यदि आप अटक रहे हैं, तो कोड को डीबग करने
          की कोशिश करें। यह कहां गलत है?
        courseC_maze_debugging_challenge2_c: |-
          दो अलग रास्ते हैं, जिनका अनुसरण आप बस आगे की ओर मूव करके और चार बार मुड़कर कर सकते हैं। यदि आप लूप का उपयोग करने का एक तरीका ढूंढ लें, तो और भी हो मिल सकते हैं!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2019:
        courseC_maze_debugging_challenge2_b: यदि आप अटक रहे हैं, तो कोड को डीबग करने
          की कोशिश करें। यह कहां गलत है?
        courseC_maze_debugging_challenge2_c: |-
          दो अलग रास्ते हैं, जिनका अनुसरण आप बस आगे की ओर मूव करके और चार बार मुड़कर कर सकते हैं। यदि आप लूप का उपयोग करने का एक तरीका ढूंढ लें, तो और भी हो मिल सकते हैं!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_loops_challenge1a:
        courseC_maze_loops_challenge1_a: इस रास्ते के बारे में दो अलग हिस्सों की तरह
          सोचें। हर एक में पैटर्न है, जिसे आप दोहरा सकते हैं।
        courseC_maze_loops_challenge1_b: क्या आप याद कर सकते हैं कि सीढी के पैटर्न
          को दोहराने के लिए लूप्स का उपयोग कैसे करना है?
      courseC_maze_loops_challenge1a_2018:
        courseC_maze_loops_challenge1_a: इस रास्ते के बारे में दो अलग हिस्सों की तरह
          सोचें। हर एक में पैटर्न है, जिसे आप दोहरा सकते हैं।
        courseC_maze_loops_challenge1_b: क्या आप याद कर सकते हैं कि सीढी के पैटर्न
          को दोहराने के लिए लूप्स का उपयोग कैसे करना है?
      courseC_maze_loops_challenge1a_2019:
        courseC_maze_loops_challenge1_a: इस रास्ते के बारे में दो अलग हिस्सों की तरह
          सोचें। हर एक में पैटर्न है, जिसे आप दोहरा सकते हैं।
        courseC_maze_loops_challenge1_b: क्या आप याद कर सकते हैं कि सीढी के पैटर्न
          को दोहराने के लिए लूप्स का उपयोग कैसे करना है?
      courseC_maze_programming1:
        courseC_maze_programming1_0: सुनिश्चित करें कि सभी ब्लॉक्स पूरी तरह से एक
          साथ कटे हैं, फिर दुबारा "चलाएं" पर क्लिक करें।
      courseC_maze_programming1_2018:
        courseC_maze_programming1_0: सुनिश्चित करें कि सभी ब्लॉक्स पूरी तरह से एक
          साथ कटे हैं, फिर दुबारा "चलाएं" पर क्लिक करें।
      courseC_maze_programming1_2019:
        courseC_maze_programming1_0: सुनिश्चित करें कि सभी ब्लॉक्स पूरी तरह से एक
          साथ कटे हैं, फिर दुबारा "चलाएं" पर क्लिक करें।
      courseC_maze_programming2:
        courseC_maze_programming2_a: <xml><block type="maze_moveForward"/></xml> ब्लॉक
          का उपयोग करने के लिए, इसे टूलबॉक्स में से बाहर खींचें और इसे <xml><block
          type="when_run"/></xml> ब्लॉक के साथ जोड़ दें।
        courseC_maze_programming2_b: सुनिश्चित करें कि सभी ब्लॉक्स पूरी तरह से एक
          साथ कटे हैं, फिर दुबारा "चलाएं" पर क्लिक करें।
      courseC_maze_programming2_2018:
        courseC_maze_programming2_a: <xml><block type="maze_moveForward"/></xml> ब्लॉक
          का उपयोग करने के लिए, इसे टूलबॉक्स में से बाहर खींचें और इसे <xml><block
          type="when_run"/></xml> ब्लॉक के साथ जोड़ दें।
        courseC_maze_programming2_b: सुनिश्चित करें कि सभी ब्लॉक्स पूरी तरह से एक
          साथ कटे हैं, फिर दुबारा "चलाएं" पर क्लिक करें।
      courseC_maze_programming2_2019:
        courseC_maze_programming2_a: <xml><block type="maze_moveForward"/></xml> ब्लॉक
          का उपयोग करने के लिए, इसे टूलबॉक्स में से बाहर खींचें और इसे <xml><block
          type="when_run"/></xml> ब्लॉक के साथ जोड़ दें।
        courseC_maze_programming2_b: सुनिश्चित करें कि सभी ब्लॉक्स पूरी तरह से एक
          साथ कटे हैं, फिर दुबारा "चलाएं" पर क्लिक करें।
      courseC_maze_programming3:
        courseC_maze_programming3_a: पहले यह देखने के लिए कोड चलाने की कोशिश करें
          कि यह कहां गलत होता है।
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          अपने कोड के मध्य से ब्लॉक को मिटाने के लिए, सभी ब्लॉक्स को वर्कस्पेस के दूसरे भाग तक खींचें।

          जिस ब्लॉक को आप मिटाना चाहते हैं, उसे वापस टूलबॉक्स तक खींचें।

          अंत में, अपने अन्य ब्लॉक को वापस वहां रखें, जहां से वह संबंधित है।
      courseC_maze_programming3_2018:
        courseC_maze_programming3_a: पहले यह देखने के लिए कोड चलाने की कोशिश करें
          कि यह कहां गलत होता है।
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          अपने कोड के मध्य से ब्लॉक को मिटाने के लिए, सभी ब्लॉक्स को वर्कस्पेस के दूसरे भाग तक खींचें।

          जिस ब्लॉक को आप मिटाना चाहते हैं, उसे वापस टूलबॉक्स तक खींचें।

          अंत में, अपने अन्य ब्लॉक को वापस वहां रखें, जहां से वह संबंधित है।
      courseC_maze_programming3_2019:
        courseC_maze_programming3_a: पहले यह देखने के लिए कोड चलाने की कोशिश करें
          कि यह कहां गलत होता है।
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          अपने कोड के मध्य से ब्लॉक को मिटाने के लिए, सभी ब्लॉक्स को वर्कस्पेस के दूसरे भाग तक खींचें।

          जिस ब्लॉक को आप मिटाना चाहते हैं, उसे वापस टूलबॉक्स तक खींचें।

          अंत में, अपने अन्य ब्लॉक को वापस वहां रखें, जहां से वह संबंधित है।
      courseC_maze_programming4:
        courseC_maze_programming4_a: याद रखें कि जब आप मुड़ते हैं, तो आप the _bird's_
          point of view से मुड़ रहे होते हैं।  यदि आप दाएं मुड़ते हैं, तो पक्षी नीचे
          संकेत करेगा।
        courseC_maze_programming4_b: |-
          रास्ते का अनुसरण करने के लिए:

          -   आगे की ओर मूव करें
          -   एक तरफ मुड़ें
          -   आगे की ओर मूव करें
          -   दूसरी तरफ से वापस मुड़ें
          -   आगे की ओर मूव करें
      courseC_maze_programming4_2018:
        courseC_maze_programming4_a: याद रखें कि जब आप मुड़ते हैं, तो आप the _bird's_
          point of view से मुड़ रहे होते हैं।  यदि आप दाएं मुड़ते हैं, तो पक्षी नीचे
          संकेत करेगा।
        courseC_maze_programming4_b: |-
          रास्ते का अनुसरण करने के लिए:

          -   आगे की ओर मूव करें
          -   एक तरफ मुड़ें
          -   आगे की ओर मूव करें
          -   दूसरी तरफ से वापस मुड़ें
          -   आगे की ओर मूव करें
      courseC_maze_programming4_2019:
        courseC_maze_programming4_a: याद रखें कि जब आप मुड़ते हैं, तो आप the _bird's_
          point of view से मुड़ रहे होते हैं।  यदि आप दाएं मुड़ते हैं, तो पक्षी नीचे
          संकेत करेगा।
        courseC_maze_programming4_b: |-
          रास्ते का अनुसरण करने के लिए:

          -   आगे की ओर मूव करें
          -   एक तरफ मुड़ें
          -   आगे की ओर मूव करें
          -   दूसरी तरफ से वापस मुड़ें
          -   आगे की ओर मूव करें
      courseC_maze_programming5:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: इस पहेली को पूरा करने के लिए पक्षी को एक घुमाव
          की जरूरत होगी। क्या आप पता लगा सकते हैं कि किस तरफ?
        courseC_maze_programming5_c: समाधान में दो `आगे की ओर मूव करें` ब्लॉक्स होंगे,
          एक घुमाव, और दो और `आगे की ओर मूव करें` ब्लॉक।
      courseC_maze_programming5_2018:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: इस पहेली को पूरा करने के लिए पक्षी को एक घुमाव
          की जरूरत होगी। क्या आप पता लगा सकते हैं कि किस तरफ?
        courseC_maze_programming5_c: समाधान में दो `आगे की ओर मूव करें` ब्लॉक्स होंगे,
          एक घुमाव, और दो और `आगे की ओर मूव करें` ब्लॉक।
      courseC_maze_programming5_2019:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: इस पहेली को पूरा करने के लिए पक्षी को एक घुमाव
          की जरूरत होगी। क्या आप पता लगा सकते हैं कि किस तरफ?
        courseC_maze_programming5_c: समाधान में दो `आगे की ओर मूव करें` ब्लॉक्स होंगे,
          एक घुमाव, और दो और `आगे की ओर मूव करें` ब्लॉक।
      courseC_maze_programming6:
        courseC_maze_programming6_a: इस पहेली को हल करने के दो तरीके हैं!
        courseC_maze_programming6_b: अपनी उंगली को पक्षी से सूअर तक ले जाएं, आपने
          कौन-से पड़ाव लिए थे?
        courseC_maze_programming6_c: याद रखें कि पहले आपको मुड़ना है, क्योंकि पक्षी
          दीवार की तरफ जाना शुरू करता है।
        courseC_maze_programming6_d: क्या फंसे हुए महसूस कर रहे हैं?  यह रास्ता देखें!
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: इस पहेली को हल करने के दो तरीके हैं!
        courseC_maze_programming6_b: अपनी उंगली को पक्षी से सूअर तक ले जाएं, आपने
          कौन-से पड़ाव लिए थे?
        courseC_maze_programming6_c: याद रखें कि पहले आपको मुड़ना है, क्योंकि पक्षी
          दीवार की तरफ जाना शुरू करता है।
        courseC_maze_programming6_d: क्या फंसे हुए महसूस कर रहे हैं?  यह रास्ता देखें!
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: इस पहेली को हल करने के दो तरीके हैं!
        courseC_maze_programming6_b: अपनी उंगली को पक्षी से सूअर तक ले जाएं, आपने
          कौन-से पड़ाव लिए थे?
        courseC_maze_programming6_c: याद रखें कि पहले आपको मुड़ना है, क्योंकि पक्षी
          दीवार की तरफ जाना शुरू करता है।
        courseC_maze_programming6_d: क्या फंसे हुए महसूस कर रहे हैं?  यह रास्ता देखें!
      courseC_maze_programming7:
        courseC_maze_programming7_a: एक से दूसरा ब्लॉक पूरा करने और त्रुटियां देखने
          के लिए "स्टेप" बटन का उपयोग करना न भूलें।
        courseC_maze_programming7_b: यदि आपको इस पहेली का पता लगाने में मुश्किल हो
          रही है, तो मूव्स को कागज़ पर लिखने की कोशिश करें।
      courseC_maze_programming7_2018:
        courseC_maze_programming7_a: एक से दूसरा ब्लॉक पूरा करने और त्रुटियां देखने
          के लिए "स्टेप" बटन का उपयोग करना न भूलें।
        courseC_maze_programming7_b: यदि आपको इस पहेली का पता लगाने में मुश्किल हो
          रही है, तो मूव्स को कागज़ पर लिखने की कोशिश करें।
      courseC_maze_programming7_2019:
        courseC_maze_programming7_a: एक से दूसरा ब्लॉक पूरा करने और त्रुटियां देखने
          के लिए "स्टेप" बटन का उपयोग करना न भूलें।
        courseC_maze_programming7_b: यदि आपको इस पहेली का पता लगाने में मुश्किल हो
          रही है, तो मूव्स को कागज़ पर लिखने की कोशिश करें।
      courseC_maze_programming8:
        courseC_maze_programming8_a: याद रखें कि यदि आप अटक जाएं तो अपने कोड को एक-एक
          लाइन से देखने के लिए आप "स्टेप" बटन का उपयोग कर सकते हैं।
        courseC_maze_programming8_b: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseC_maze_programming8_2018:
        courseC_maze_programming8_a: याद रखें कि यदि आप अटक जाएं तो अपने कोड को एक-एक
          लाइन से देखने के लिए आप "स्टेप" बटन का उपयोग कर सकते हैं।
        courseC_maze_programming8_b: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseC_maze_programming8_2019:
        courseC_maze_programming8_a: याद रखें कि यदि आप अटक जाएं तो अपने कोड को एक-एक
          लाइन से देखने के लिए आप "स्टेप" बटन का उपयोग कर सकते हैं।
        courseC_maze_programming8_b: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseC_maze_programming_challenge1:
        courseC_maze_programming_challenge1_a: सूअर तक पहुंचने के कई रास्ते हैं। रास्ता
          ढूंढने के लिए अपनी उंगली का उपयोग करें और फिर इसे प्रोग्राम करें!
      courseC_maze_programming_challenge1_2018:
        courseC_maze_programming_challenge1_a: सूअर तक पहुंचने के कई रास्ते हैं। रास्ता
          ढूंढने के लिए अपनी उंगली का उपयोग करें और फिर इसे प्रोग्राम करें!
      courseC_maze_programming_challenge1_2019:
        courseC_maze_programming_challenge1_a: सूअर तक पहुंचने के कई रास्ते हैं। रास्ता
          ढूंढने के लिए अपनी उंगली का उपयोग करें और फिर इसे प्रोग्राम करें!
      courseC_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _"यदि आप मुझे पीछे की ओर भेजते हैं,
          तो अतिरिक्त सावधानी बरतें कि मैं सही तरफ मुड़ जाऊं!"_
        courseC_maze_programming_challenge2_b: |-
          सबसे छोटा समाधान केवल 5 ब्लॉक्स का उपयोग करता है, लेकिन यह इस ब्लॉक का उपयोग करता है:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018:
        courseC_maze_programming_challenge2_a: _"यदि आप मुझे पीछे की ओर भेजते हैं,
          तो अतिरिक्त सावधानी बरतें कि मैं सही तरफ मुड़ जाऊं!"_
        courseC_maze_programming_challenge2_b: |-
          सबसे छोटा समाधान केवल 5 ब्लॉक्स का उपयोग करता है, लेकिन यह इस ब्लॉक का उपयोग करता है:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2019:
        courseC_maze_programming_challenge2_a: _"यदि आप मुझे पीछे की ओर भेजते हैं,
          तो अतिरिक्त सावधानी बरतें कि मैं सही तरफ मुड़ जाऊं!"_
        courseC_maze_programming_challenge2_b: |-
          सबसे छोटा समाधान केवल 5 ब्लॉक्स का उपयोग करता है, लेकिन यह इस ब्लॉक का उपयोग करता है:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_starWars_loops1:
        courseC_starWars_loops1_a: जब BB-8 लोहे के चूरे पर उलटता है तो वह अपने आप
          इसे उठा लेता है।
        courseC_starWars_loops1_b: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
        courseC_starWars_loops1_c: इस पहेली को हल करने के लिए आप पांच बार `आगे की
          ओर मूव` करना चाहेंगे।
      courseC_starWars_loops10:
        courseC_starWars_loops10_a: क्या यह पैटर्न सीढी के स्टेप्स के बहुत बड़े सेट
          की तरह नहीं लग रहा? देखें कि क्या आप उसका उपयोग कर सकते हैं, जिसे आपने सभी
          मोड़ प्राप्त करने के लिए पिछली पहेलियों से सीखा था।
        courseC_starWars_loops10_b: |-
          यदि आप कम कोड का उपयोग करना चाहते हैं, तो आप दूसरे के अंदर एक `दोहराएं` लूप डाल सकते हैं!\
          इसे **नेस्टड लूप** कहा जाता है।
        courseC_starWars_loops10_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
      courseC_starWars_loops10_2018:
        courseC_starWars_loops10_a: क्या यह पैटर्न सीढी के स्टेप्स के बहुत बड़े सेट
          की तरह नहीं लग रहा? देखें कि क्या आप उसका उपयोग कर सकते हैं, जिसे आपने सभी
          मोड़ प्राप्त करने के लिए पिछली पहेलियों से सीखा था।
        courseC_starWars_loops10_b: |-
          यदि आप कम कोड का उपयोग करना चाहते हैं, तो आप दूसरे के अंदर एक `दोहराएं` लूप डाल सकते हैं!\
          इसे **नेस्टड लूप** कहा जाता है।
        courseC_starWars_loops10_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
      courseC_starWars_loops10_2019:
        courseC_starWars_loops10_a: क्या यह पैटर्न सीढी के स्टेप्स के बहुत बड़े सेट
          की तरह नहीं लग रहा? देखें कि क्या आप उसका उपयोग कर सकते हैं, जिसे आपने सभी
          मोड़ प्राप्त करने के लिए पिछली पहेलियों से सीखा था।
        courseC_starWars_loops10_b: |-
          यदि आप कम कोड का उपयोग करना चाहते हैं, तो आप दूसरे के अंदर एक `दोहराएं` लूप डाल सकते हैं!\
          इसे **नेस्टड लूप** कहा जाता है।
        courseC_starWars_loops10_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
      courseC_starWars_loops1_2018:
        courseC_starWars_loops1_a: जब BB-8 लोहे के चूरे पर उलटता है तो वह अपने आप
          इसे उठा लेता है।
        courseC_starWars_loops1_b: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
        courseC_starWars_loops1_c: इस पहेली को हल करने के लिए आप पांच बार `आगे की
          ओर मूव` करना चाहेंगे।
      courseC_starWars_loops1_2019:
        courseC_starWars_loops1_a: जब BB-8 लोहे के चूरे पर उलटता है तो वह अपने आप
          इसे उठा लेता है।
        courseC_starWars_loops1_b: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
        courseC_starWars_loops1_c: इस पहेली को हल करने के लिए आप पांच बार `आगे की
          ओर मूव` करना चाहेंगे।
      courseC_starWars_loops2:
        courseC_starWars_loops2_a: कोड को दोहराने के लिए, `दोहराएं` लूप को बाहर खींचें,
          फिर जो ब्लॉक आप चाहते हैं, उसे इसके अंदर रखें।
      courseC_starWars_loops2_2018:
        courseC_starWars_loops2_a: कोड को दोहराने के लिए, `दोहराएं` लूप को बाहर खींचें,
          फिर जो ब्लॉक आप चाहते हैं, उसे इसके अंदर रखें।
      courseC_starWars_loops2_2019:
        courseC_starWars_loops2_a: कोड को दोहराने के लिए, `दोहराएं` लूप को बाहर खींचें,
          फिर जो ब्लॉक आप चाहते हैं, उसे इसके अंदर रखें।
      courseC_starWars_loops2_copy:
        courseC_starWars_loops2_a: कोड को दोहराने के लिए, `दोहराएं` लूप को बाहर खींचें,
          फिर जो ब्लॉक आप चाहते हैं, उसे इसके अंदर रखें।
      courseC_starWars_loops4:
        courseC_starWars_loops4_c: मोड़ें ब्लॉक पर "बाएं" के पास वाले छोटे तीर पर
          क्लिक करने पर आप इसे  "दाएं” में बदल पाएंगे।
        courseC_starWars_loops4_a: दो `दोहराएं` ब्लॉक्स का उपयोग करें।
        courseC_starWars_loops4_b: 'प्रत्येक `दोहराएं` लूप में इसके अंदर केवल एक कमांड
          होगी: `आगे की ओर मूव करें।`'
      courseC_starWars_loops4_2018:
        courseC_starWars_loops4_c: मोड़ें ब्लॉक पर "बाएं" के पास वाले छोटे तीर पर
          क्लिक करने पर आप इसे  "दाएं” में बदल पाएंगे।
        courseC_starWars_loops4_a: दो `दोहराएं` ब्लॉक्स का उपयोग करें।
        courseC_starWars_loops4_b: 'प्रत्येक `दोहराएं` लूप में इसके अंदर केवल एक कमांड
          होगी: `आगे की ओर मूव करें।`'
      courseC_starWars_loops4_2019:
        courseC_starWars_loops4_c: मोड़ें ब्लॉक पर "बाएं" के पास वाले छोटे तीर पर
          क्लिक करने पर आप इसे  "दाएं” में बदल पाएंगे।
        courseC_starWars_loops4_a: दो `दोहराएं` ब्लॉक्स का उपयोग करें।
        courseC_starWars_loops4_b: 'प्रत्येक `दोहराएं` लूप में इसके अंदर केवल एक कमांड
          होगी: `आगे की ओर मूव करें।`'
      courseC_starWars_loops4_copy:
        courseC_starWars_loops4_c: मोड़ें ब्लॉक पर "बाएं" के पास वाले छोटे तीर पर
          क्लिक करने पर आप इसे  "दाएं” में बदल पाएंगे।
        courseC_starWars_loops4_a: दो `दोहराएं` ब्लॉक्स का उपयोग करें।
        courseC_starWars_loops4_b: 'प्रत्येक `दोहराएं` लूप में इसके अंदर केवल एक कमांड
          होगी: `आगे की ओर मूव करें।`'
      courseC_starWars_loops5:
        courseC_starWars_loops5_b: नीचे मूव करने के लिए, आपको मुड़ना होगा और फिर आगे
          की ओर मूव करना होगा।
        courseC_starWars_loops5_a: सबसे अच्छा समाधान एक घुमाव का, फिर एक बार `आगे
          की ओर मूव करें` का, दूसरे घुमाव का, फिर लूप का उपयोग करना है।
      courseC_starWars_loops5_2018:
        courseC_starWars_loops5_a: The best solution uses a single `move forward`,
          then a turn, then a loop.
      courseC_starWars_loops5_2019:
        courseC_starWars_loops5_a: The best solution uses a single `move forward`,
          then a turn, then a loop.
      courseC_starWars_loops5_copy:
        courseC_starWars_loops5_b: नीचे मूव करने के लिए, आपको मुड़ना होगा और फिर आगे
          की ओर मूव करना होगा।
        courseC_starWars_loops5_a: सबसे अच्छा समाधान एक घुमाव का, फिर एक बार `आगे
          की ओर मूव करें` का, दूसरे घुमाव का, फिर लूप का उपयोग करना है।
      courseC_starWars_loops6:
        courseC_starWars_loops6_a: सभी मूव्स को कागज़ पर लिखने और पैटर्न खोजने की
          कोशिश करें।
        courseC_starWars_loops6_b: |-
          यदि आप कम कोड का उपयोग करना चाहते हैं, तो आप दूसरे के अंदर एक `दोहराएं` लूप डाल सकते हैं!\
          इसे **नेस्टड लूप** कहा जाता है।
      courseC_starWars_loops6_2018:
        courseC_starWars_loops6_a: सभी मूव्स को कागज़ पर लिखने और पैटर्न खोजने की
          कोशिश करें।
        courseC_starWars_loops6_b: |-
          यदि आप कम कोड का उपयोग करना चाहते हैं, तो आप दूसरे के अंदर एक `दोहराएं` लूप डाल सकते हैं!\
          इसे **नेस्टड लूप** कहा जाता है।
      courseC_starWars_loops6_2019:
        courseC_starWars_loops6_a: सभी मूव्स को कागज़ पर लिखने और पैटर्न खोजने की
          कोशिश करें।
        courseC_starWars_loops6_b: |-
          यदि आप कम कोड का उपयोग करना चाहते हैं, तो आप दूसरे के अंदर एक `दोहराएं` लूप डाल सकते हैं!\
          इसे **नेस्टड लूप** कहा जाता है।
      courseC_starWars_loops6_copy:
        courseC_starWars_loops6_a: सभी मूव्स को कागज़ पर लिखने और पैटर्न खोजने की
          कोशिश करें।
        courseC_starWars_loops6_b: |-
          यदि आप कम कोड का उपयोग करना चाहते हैं, तो आप दूसरे के अंदर एक `दोहराएं` लूप डाल सकते हैं!\
          इसे **नेस्टड लूप** कहा जाता है।
      courseC_starWars_loops7:
        courseC_starWars_loops7_a: यह पैटर्न जितना मुश्किल दिखाई देता है, उतना मुश्किल
          है नहीं! साधारण सीढ़ी स्टेप से शुरू करें। क्या यह सारा लोहे का चूरा कवर
          करता है?
        courseC_starWars_loops7_b: यदि आपको इस पहेली में मुश्किल हो रही है, तो सभी
          मूव्स को कागज़ पर लिखने और पैटर्न खोजने की कोशिश करें।
        courseC_starWars_loops7_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
      courseC_starWars_loops7_2018:
        courseC_starWars_loops7_a: यह पैटर्न जितना मुश्किल दिखाई देता है, उतना मुश्किल
          है नहीं! साधारण सीढ़ी स्टेप से शुरू करें। क्या यह सारा लोहे का चूरा कवर
          करता है?
        courseC_starWars_loops7_b: यदि आपको इस पहेली में मुश्किल हो रही है, तो सभी
          मूव्स को कागज़ पर लिखने और पैटर्न खोजने की कोशिश करें।
        courseC_starWars_loops7_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
      courseC_starWars_loops7_2019:
        courseC_starWars_loops7_a: यह पैटर्न जितना मुश्किल दिखाई देता है, उतना मुश्किल
          है नहीं! साधारण सीढ़ी स्टेप से शुरू करें। क्या यह सारा लोहे का चूरा कवर
          करता है?
        courseC_starWars_loops7_b: यदि आपको इस पहेली में मुश्किल हो रही है, तो सभी
          मूव्स को कागज़ पर लिखने और पैटर्न खोजने की कोशिश करें।
        courseC_starWars_loops7_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
      courseC_starWars_loops7_copy:
        courseC_starWars_loops7_a: यह पैटर्न जितना मुश्किल दिखाई देता है, उतना मुश्किल
          है नहीं! साधारण सीढ़ी स्टेप से शुरू करें। क्या यह सारा लोहे का चूरा कवर
          करता है?
        courseC_starWars_loops7_b: यदि आपको इस पहेली में मुश्किल हो रही है, तो सभी
          मूव्स को कागज़ पर लिखने और पैटर्न खोजने की कोशिश करें।
        courseC_starWars_loops7_c: गलती होने से न डरें! यह देखने के लिए कि क्या होता
          है, कोड चलाएं, चाहे आपने अभी तक पहेली को हल नहीं किया है।
      courseC_starWars_loops8:
        course_starWars_loops8_a: इस समस्या के बारे में छोटे भागों में सोचने की कोशिश
          करें। पूरा समय लें। आपके लिए इसे पहली बार में ही हल जरूरी नहीं है!
        course_starWars_loops8_b: आधा समय इस समस्या को सीढी के स्टेप के तौर पर सोचें।
          आपने पहले उसे कैसे हल किया था?
        course_starWars_loops8_c: |-
          इस रास्ते पर एक नज़र डालें।

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2018:
        course_starWars_loops8_a: इस समस्या के बारे में छोटे भागों में सोचने की कोशिश
          करें। पूरा समय लें। आपके लिए इसे पहली बार में ही हल जरूरी नहीं है!
        course_starWars_loops8_b: आधा समय इस समस्या को सीढी के स्टेप के तौर पर सोचें।
          आपने पहले उसे कैसे हल किया था?
        course_starWars_loops8_c: |-
          इस रास्ते पर एक नज़र डालें।

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2019:
        course_starWars_loops8_a: इस समस्या के बारे में छोटे भागों में सोचने की कोशिश
          करें। पूरा समय लें। आपके लिए इसे पहली बार में ही हल जरूरी नहीं है!
        course_starWars_loops8_b: आधा समय इस समस्या को सीढी के स्टेप के तौर पर सोचें।
          आपने पहले उसे कैसे हल किया था?
        course_starWars_loops8_c: |-
          इस रास्ते पर एक नज़र डालें।

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_copy:
        course_starWars_loops8_a: इस समस्या के बारे में छोटे भागों में सोचने की कोशिश
          करें। पूरा समय लें। आपके लिए इसे पहली बार में ही हल जरूरी नहीं है!
        course_starWars_loops8_b: आधा समय इस समस्या को सीढी के स्टेप के तौर पर सोचें।
          आपने पहले उसे कैसे हल किया था?
        course_starWars_loops8_c: |-
          इस रास्ते पर एक नज़र डालें।

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops9:
        course_starWars_loops9_b: आप `दोहराएं` लूप के अंदर एक से अधिक ब्लॉक रख सकते
          हैं।
        course_starWars_loops9_c: |-
          इस पहेली को हल करने के लिए आपको बाएं मुड़ने की जरूरत नहीं है। आपके सभी मोड़ दाईं ओर हो सकते हैं।

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2018:
        course_starWars_loops9_b: आप `दोहराएं` लूप के अंदर एक से अधिक ब्लॉक रख सकते
          हैं।
        course_starWars_loops9_c: |-
          इस पहेली को हल करने के लिए आपको बाएं मुड़ने की जरूरत नहीं है। आपके सभी मोड़ दाईं ओर हो सकते हैं।

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2019:
        course_starWars_loops9_b: आप `दोहराएं` लूप के अंदर एक से अधिक ब्लॉक रख सकते
          हैं।
        course_starWars_loops9_c: |-
          इस पहेली को हल करने के लिए आपको बाएं मुड़ने की जरूरत नहीं है। आपके सभी मोड़ दाईं ओर हो सकते हैं।

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseD_artist_1_2018:
        courseD_artist_project1_a: अपनी जरूरत के कोण को चुनने के लिए आप `मुड़ें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें!
        courseD_artist_project1_b: याद रखें कि `आगे की ओर मूव करें` एक लाइन खींचता
          है, जबकि `आगे की ओर कूदें` नहीं।
      courseD_artist_1_2018_2019:
        courseD_artist_project1_a: अपनी जरूरत के कोण को चुनने के लिए आप `मुड़ें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें!
        courseD_artist_project1_b: याद रखें कि `आगे की ओर मूव करें` एक लाइन खींचता
          है, जबकि `आगे की ओर कूदें` नहीं।
      courseD_artist_2_2018:
        courseD_artist_project1_b: Remember that `move` draws a line, while `jump`
          does not.
        courseD_artist_project1_a: अपनी जरूरत के कोण को चुनने के लिए आप `मुड़ें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें!
      courseD_artist_2_2018_2019:
        courseD_artist_project1_b: Remember that `move` draws a line, while `jump`
          does not.
        courseD_artist_project1_a: अपनी जरूरत के कोण को चुनने के लिए आप `मुड़ें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें!
      courseD_artist_5_2018:
        '1': If you are switching your shapes, don't forget that you will need to
          switch their angles, too!
      courseD_artist_5_2018_2019:
        '1': If you are switching your shapes, don't forget that you will need to
          switch their angles, too!
      courseD_artist_binary1:
        courseD_artist_binary1_a: शून्य और इकाईयों में, आपकी पसंद के युग्मक चित्र
          के साथ टेक्सट ब्लॉक में "???" बदलें।
        courseD_artist_binary1_b: कलाकार प्रत्येक 1 के लिए सफेद स्थान और प्रत्येक
          0 के लिए काला स्थान चित्रित करेगा।
        courseD_artist_binary1_c: |-
          इस प्रकार से आप अपना युग्मक कोड इनपुट कर सकते हैं:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2018:
        courseD_artist_binary1_a: शून्य और इकाईयों में, आपकी पसंद के युग्मक चित्र
          के साथ टेक्सट ब्लॉक में "???" बदलें।
        courseD_artist_binary1_b: कलाकार प्रत्येक 1 के लिए सफेद स्थान और प्रत्येक
          0 के लिए काला स्थान चित्रित करेगा।
        courseD_artist_binary1_c: |-
          इस प्रकार से आप अपना युग्मक कोड इनपुट कर सकते हैं:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2019:
        courseD_artist_binary1_a: शून्य और इकाईयों में, आपकी पसंद के युग्मक चित्र
          के साथ टेक्सट ब्लॉक में "???" बदलें।
        courseD_artist_binary1_b: कलाकार प्रत्येक 1 के लिए सफेद स्थान और प्रत्येक
          0 के लिए काला स्थान चित्रित करेगा।
        courseD_artist_binary1_c: |-
          इस प्रकार से आप अपना युग्मक कोड इनपुट कर सकते हैं:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary2:
        courseD_artist_binary2_a: इस प्रोग्राम को क्रिया में देखने के लिए बस 'चलाएं'
          पर क्लिक करें!
      courseD_artist_binary2_2018:
        courseD_artist_binary2_a: इस प्रोग्राम को क्रिया में देखने के लिए बस 'चलाएं'
          पर क्लिक करें!
      courseD_artist_binary2_2019:
        courseD_artist_binary2_a: इस प्रोग्राम को क्रिया में देखने के लिए बस 'चलाएं'
          पर क्लिक करें!
      courseD_artist_binary3:
        courseD_artist_binary3_a: टूलबॉक्स में से चार युग्मक पैटर्नों में से एक इस
          पहेली को हल करेगा!
        courseD_artist_binary3_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं
          किया है।
      courseD_artist_binary3_2018:
        courseD_artist_binary3_a: टूलबॉक्स में से चार युग्मक पैटर्नों में से एक इस
          पहेली को हल करेगा!
        courseD_artist_binary3_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं
          किया है।
      courseD_artist_binary3_2019:
        courseD_artist_binary3_a: टूलबॉक्स में से चार युग्मक पैटर्नों में से एक इस
          पहेली को हल करेगा!
        courseD_artist_binary3_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं
          किया है।
      courseD_artist_binary4:
        courseD_artist_binary4_a: ऊपरी पंक्ति में पहले तीन वर्गों को देखें। क्या आप
          पूरा पैटर्न प्राप्त करने के लिए इन तीनों को दोहरा सकते हैं?
        courseD_artist_binary4_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseD_artist_binary4_2018:
        courseD_artist_binary4_a: ऊपरी पंक्ति में पहले तीन वर्गों को देखें। क्या आप
          पूरा पैटर्न प्राप्त करने के लिए इन तीनों को दोहरा सकते हैं?
        courseD_artist_binary4_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseD_artist_binary4_2019:
        courseD_artist_binary4_a: ऊपरी पंक्ति में पहले तीन वर्गों को देखें। क्या आप
          पूरा पैटर्न प्राप्त करने के लिए इन तीनों को दोहरा सकते हैं?
        courseD_artist_binary4_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseD_artist_binary5:
        courseD_artist_binary5_a: पहले यह देखने के लिए कोड चलाने का प्रयास करें कि
          आपको किसके साथ काम करना होगा।
        courseD_artist_binary5_b: एक मुस्कुराहट बनाने के लिए आपको केवल दो पंक्तियों
          को बदलने की जरूरत है।
        courseD_artist_binary5_c: यदि आपको इस पहेली का पता लगाने में मुश्किल हो रही
          है, तो युग्मक लाइनों को कागज़ पर लिखने और पैटर्न खोजने की कोशिश करें।
      courseD_artist_binary5_2018:
        courseD_artist_binary5_a: पहले यह देखने के लिए कोड चलाने का प्रयास करें कि
          आपको किसके साथ काम करना होगा।
        courseD_artist_binary5_b: एक मुस्कुराहट बनाने के लिए आपको केवल दो पंक्तियों
          को बदलने की जरूरत है।
        courseD_artist_binary5_c: यदि आपको इस पहेली का पता लगाने में मुश्किल हो रही
          है, तो युग्मक लाइनों को कागज़ पर लिखने और पैटर्न खोजने की कोशिश करें।
      courseD_artist_binary5_2019:
        courseD_artist_binary5_a: पहले यह देखने के लिए कोड चलाने का प्रयास करें कि
          आपको किसके साथ काम करना होगा।
        courseD_artist_binary5_b: एक मुस्कुराहट बनाने के लिए आपको केवल दो पंक्तियों
          को बदलने की जरूरत है।
        courseD_artist_binary5_c: यदि आपको इस पहेली का पता लगाने में मुश्किल हो रही
          है, तो युग्मक लाइनों को कागज़ पर लिखने और पैटर्न खोजने की कोशिश करें।
      courseD_artist_binary6:
        courseD_artist_binary6_a: ऊपर बाईं ओर से शुरुआत करें। पैटर्न द्वारा दोहराना
          शुरू करने से पहले आपको कितनी दूर तक पढ़ना होगा?
        courseD_artist_binary6_b: आप एक बार में अपनी थोड़ी सी युग्मक स्ट्रिंग बना
          सकते हैं और बार-बार इसका परीक्षण कर सकते हैं!
      courseD_artist_binary6_2018:
        courseD_artist_binary6_a: ऊपर बाईं ओर से शुरुआत करें। पैटर्न द्वारा दोहराना
          शुरू करने से पहले आपको कितनी दूर तक पढ़ना होगा?
        courseD_artist_binary6_b: आप एक बार में अपनी थोड़ी सी युग्मक स्ट्रिंग बना
          सकते हैं और बार-बार इसका परीक्षण कर सकते हैं!
      courseD_artist_binary6_2019:
        courseD_artist_binary6_a: ऊपर बाईं ओर से शुरुआत करें। पैटर्न द्वारा दोहराना
          शुरू करने से पहले आपको कितनी दूर तक पढ़ना होगा?
        courseD_artist_binary6_b: आप एक बार में अपनी थोड़ी सी युग्मक स्ट्रिंग बना
          सकते हैं और बार-बार इसका परीक्षण कर सकते हैं!
      courseD_artist_binary7:
        courseD_artist_binary7_a: ऊपर बाईं ओर से शुरुआत करें। पैटर्न द्वारा दोहराना
          शुरू करने से पहले आपको कितनी दूर तक पढ़ना होगा?
        courseD_artist_binary7_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseD_artist_binary7_2018:
        courseD_artist_binary7_a: ऊपर बाईं ओर से शुरुआत करें। पैटर्न द्वारा दोहराना
          शुरू करने से पहले आपको कितनी दूर तक पढ़ना होगा?
        courseD_artist_binary7_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseD_artist_binary7_2019:
        courseD_artist_binary7_a: ऊपर बाईं ओर से शुरुआत करें। पैटर्न द्वारा दोहराना
          शुरू करने से पहले आपको कितनी दूर तक पढ़ना होगा?
        courseD_artist_binary7_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseD_artist_binary8:
        courseD_artist_binary8_a: घुमावदार कभी-कभार उलझन भरा हो सकता है। जब आप यह
          डिज़ाइन बनाएं तो अपने दिमाग में आने वाली हर क्षैतिज लाइन को अलग करें।
        courseD_artist_binary8_b: पहले यह देखने के लिए कोड चलाने का प्रयास करें कि
          आपको किसके साथ काम करना होगा।
        courseD_artist_binary8_c: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं
          किया है।
      courseD_artist_binary8_2018:
        courseD_artist_binary8_a: घुमावदार कभी-कभार उलझन भरा हो सकता है। जब आप यह
          डिज़ाइन बनाएं तो अपने दिमाग में आने वाली हर क्षैतिज लाइन को अलग करें।
        courseD_artist_binary8_b: पहले यह देखने के लिए कोड चलाने का प्रयास करें कि
          आपको किसके साथ काम करना होगा।
        courseD_artist_binary8_c: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं
          किया है।
      courseD_artist_binary8_2019:
        courseD_artist_binary8_a: घुमावदार कभी-कभार उलझन भरा हो सकता है। जब आप यह
          डिज़ाइन बनाएं तो अपने दिमाग में आने वाली हर क्षैतिज लाइन को अलग करें।
        courseD_artist_binary8_b: पहले यह देखने के लिए कोड चलाने का प्रयास करें कि
          आपको किसके साथ काम करना होगा।
        courseD_artist_binary8_c: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं
          किया है।
      courseD_artist_binary_challenge2_2018:
        courseD_artist_binary_challenge2_a: There are only few lines wrong in the
          original program.
      courseD_artist_binary_challenge2_2019:
        courseD_artist_binary_challenge2_a: There are only few lines wrong in the
          original program.
      courseD_artist_nestedLoops1:
        courseD_artist_nestedLoops1_a: इसे चित्रित करने का सबसे आसान तरीका आगे की
          ओर मूव करना और दाएं मोड़ों का उपयोग करना है।
        courseD_artist_nestedLoops1_b: आप इस त्रिकोण को अंदर दो ब्लॉक्स वाली `दोहराएं`
          लूप के साथ खींच सकते हैं। आपको कौन-से ब्लॉक्स की जरूरत है?
        courseD_artist_nestedLoops1_c: चरणों को कागज़ पर लिखने और ऐसे पैटर्न खोजने
          का प्रयास करें, जिन्हें लूप्स के साथ सरल बनाया जा सके।
      courseD_artist_nestedLoops1_2018:
        courseD_artist_nestedLoops1_a: इसे चित्रित करने का सबसे आसान तरीका आगे की
          ओर मूव करना और दाएं मोड़ों का उपयोग करना है।
        courseD_artist_nestedLoops1_b: आप इस त्रिकोण को अंदर दो ब्लॉक्स वाली `दोहराएं`
          लूप के साथ खींच सकते हैं। आपको कौन-से ब्लॉक्स की जरूरत है?
        courseD_artist_nestedLoops1_c: चरणों को कागज़ पर लिखने और ऐसे पैटर्न खोजने
          का प्रयास करें, जिन्हें लूप्स के साथ सरल बनाया जा सके।
      courseD_artist_nestedLoops1_2019:
        courseD_artist_nestedLoops1_a: इसे चित्रित करने का सबसे आसान तरीका आगे की
          ओर मूव करना और दाएं मोड़ों का उपयोग करना है।
        courseD_artist_nestedLoops1_b: आप इस त्रिकोण को अंदर दो ब्लॉक्स वाली `दोहराएं`
          लूप के साथ खींच सकते हैं। आपको कौन-से ब्लॉक्स की जरूरत है?
        courseD_artist_nestedLoops1_c: चरणों को कागज़ पर लिखने और ऐसे पैटर्न खोजने
          का प्रयास करें, जिन्हें लूप्स के साथ सरल बनाया जा सके।
      courseD_artist_nestedLoops1a:
        courseD_artist_nestedLoops1a_a: |-
          आपको कुल 6 त्रिकोण खींचने की जरूरत होगी। प्रत्येक त्रिकोण समाप्त करने के बाद, 60 डिग्री घुमाएं और अगला त्रिकोण शुरू करने के लिए मूव करें।

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: यदि आप लूप के साथ अपना त्रिकोण बनाते हैं,
          तो कलाकार को शुरू करते ही उसी रास्ते के सामने होना चाहिए। यह 60 डिग्री के
          मोड़ों को काफी आसान बना देगा।
        courseD_artist_nestedLoops1a_c: यदि आप रंग चाहते हैं, तो अपने कोड में `रंग
          सेट करें` ब्लॉक का उपयोग करें। आपको टेम्प्लेट चित्र में रंगों का मिलान करने
          की जरूरत नहीं है।
      courseD_artist_nestedLoops1a_2018:
        courseD_artist_nestedLoops1a_a: |-
          You will need to draw a total of 6 triangles (tip: use your code from the last puzzle to get started). After finishing each triangle, rotate 60 degrees and move to start the next triangle.

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: यदि आप लूप के साथ अपना त्रिकोण बनाते हैं,
          तो कलाकार को शुरू करते ही उसी रास्ते के सामने होना चाहिए। यह 60 डिग्री के
          मोड़ों को काफी आसान बना देगा।
        courseD_artist_nestedLoops1a_c: यदि आप रंग चाहते हैं, तो अपने कोड में `रंग
          सेट करें` ब्लॉक का उपयोग करें। आपको टेम्प्लेट चित्र में रंगों का मिलान करने
          की जरूरत नहीं है।
      courseD_artist_nestedLoops1a_2019:
        courseD_artist_nestedLoops1a_a: |-
          आपको कुल 6 त्रिकोण खींचने की जरूरत होगी। प्रत्येक त्रिकोण समाप्त करने के बाद, 60 डिग्री घुमाएं और अगला त्रिकोण शुरू करने के लिए मूव करें।

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: यदि आप लूप के साथ अपना त्रिकोण बनाते हैं,
          तो कलाकार को शुरू करते ही उसी रास्ते के सामने होना चाहिए। यह 60 डिग्री के
          मोड़ों को काफी आसान बना देगा।
        courseD_artist_nestedLoops1a_c: यदि आप रंग चाहते हैं, तो अपने कोड में `रंग
          सेट करें` ब्लॉक का उपयोग करें। आपको टेम्प्लेट चित्र में रंगों का मिलान करने
          की जरूरत नहीं है।
      courseD_artist_nestedLoops2:
        courseD_artist_nestedLoops2_a: अपनी लूप्स को दूसरी `दोहराएं` लूप के साथ अपने
          त्रिकोण कोड से घेरकर नेस्ट करें।
        courseD_artist_nestedLoops2_b: लूप के अंदर `मुड़ें` ब्लॉक रखना याद रखें ताकि
          कलाकार प्रत्येक त्रिकोण के बाद मुड़ जाए।
      courseD_artist_nestedLoops2_2018:
        courseD_artist_nestedLoops2_a: अपनी लूप्स को दूसरी `दोहराएं` लूप के साथ अपने
          त्रिकोण कोड से घेरकर नेस्ट करें।
        courseD_artist_nestedLoops2_b: लूप के अंदर `मुड़ें` ब्लॉक रखना याद रखें ताकि
          कलाकार प्रत्येक त्रिकोण के बाद मुड़ जाए।
      courseD_artist_nestedLoops2_2019:
        courseD_artist_nestedLoops2_a: अपनी लूप्स को दूसरी `दोहराएं` लूप के साथ अपने
          त्रिकोण कोड से घेरकर नेस्ट करें।
        courseD_artist_nestedLoops2_b: लूप के अंदर `मुड़ें` ब्लॉक रखना याद रखें ताकि
          कलाकार प्रत्येक त्रिकोण के बाद मुड़ जाए।
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: |-
          एक वर्ग के ऊपर से उस स्थान तक जाने के लिए `आगे की ओर कूदें` ब्लॉक का उपयोग करने का प्रयास करें, जहां आप अगला शुरू करेंगे।

          यदि आपके वर्ग 20 पिक्सल लंबे हैं और वे 20 पिक्सल की दूरी पर हैं, तो आपको कितनी दूर कूदने की जरूरत है?
        courseD_artist_nestedLoops3_b: 'इस पहेली को जल्दी से हल करने के लिए नेस्टड
          लूप का उपयोग करना न भूलें। '
        courseD_artist_nestedLoops3_c: 'एक वर्ग बनाने के लिए `दोहराएं` लूप का उपयोग
          करके शुरुआत करें।  इसके बाद, 40 पिक्सल बीच में कूदते हुए, 8 बार उस वर्ग
          को दोहराएं। '
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: |-
          एक वर्ग के ऊपर से उस स्थान तक जाने के लिए `आगे की ओर कूदें` ब्लॉक का उपयोग करने का प्रयास करें, जहां आप अगला शुरू करेंगे।

          यदि आपके वर्ग 20 पिक्सल लंबे हैं और वे 20 पिक्सल की दूरी पर हैं, तो आपको कितनी दूर कूदने की जरूरत है?
        courseD_artist_nestedLoops3_b: 'इस पहेली को जल्दी से हल करने के लिए नेस्टड
          लूप का उपयोग करना न भूलें। '
        courseD_artist_nestedLoops3_c: 'एक वर्ग बनाने के लिए `दोहराएं` लूप का उपयोग
          करके शुरुआत करें।  इसके बाद, 40 पिक्सल बीच में कूदते हुए, 8 बार उस वर्ग
          को दोहराएं। '
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: |-
          एक वर्ग के ऊपर से उस स्थान तक जाने के लिए `आगे की ओर कूदें` ब्लॉक का उपयोग करने का प्रयास करें, जहां आप अगला शुरू करेंगे।

          यदि आपके वर्ग 20 पिक्सल लंबे हैं और वे 20 पिक्सल की दूरी पर हैं, तो आपको कितनी दूर कूदने की जरूरत है?
        courseD_artist_nestedLoops3_b: 'इस पहेली को जल्दी से हल करने के लिए नेस्टड
          लूप का उपयोग करना न भूलें। '
        courseD_artist_nestedLoops3_c: 'एक वर्ग बनाने के लिए `दोहराएं` लूप का उपयोग
          करके शुरुआत करें।  इसके बाद, 40 पिक्सल बीच में कूदते हुए, 8 बार उस वर्ग
          को दोहराएं। '
      courseD_artist_nestedLoops4:
        courseD_artist_nestedLoops4_d: इसे ठीक से हल करने के लिए, आपको मुड़ने से **पहले**
          मूव करने की जरूरत होगी, नहीं तो आपके चक्कर बेहद मामूली मात्रा तक अलग हो
          जाएंगे!
        courseD_artist_nestedLoops4_a: "चक्कर बनाने के लिए:\n\n-   360 बार दोहराएं
          \   \n-   1 पिक्सल आगे की ओर मूव करें    \n-   1 डिग्री बाएं मुड़ें"
        courseD_artist_nestedLoops4_b: चक्करों के बीच 50 पिक्सल तक आगे की ओर कूदना
          न भूलें।
        courseD_artist_nestedLoops4_c: अपने चक्कर 4 बार चित्रित करने के लिए नेस्टड
          लूप का उपयोग करें।
      courseD_artist_nestedLoops4_2018:
        courseD_artist_nestedLoops4_d: इसे ठीक से हल करने के लिए, आपको मुड़ने से **पहले**
          मूव करने की जरूरत होगी, नहीं तो आपके चक्कर बेहद मामूली मात्रा तक अलग हो
          जाएंगे!
        courseD_artist_nestedLoops4_a: "चक्कर बनाने के लिए:\n\n-   360 बार दोहराएं
          \   \n-   1 पिक्सल आगे की ओर मूव करें    \n-   1 डिग्री बाएं मुड़ें"
        courseD_artist_nestedLoops4_b: चक्करों के बीच 50 पिक्सल तक आगे की ओर कूदना
          न भूलें।
        courseD_artist_nestedLoops4_c: अपने चक्कर 4 बार चित्रित करने के लिए नेस्टड
          लूप का उपयोग करें।
      courseD_artist_nestedLoops4_2019:
        courseD_artist_nestedLoops4_d: इसे ठीक से हल करने के लिए, आपको मुड़ने से **पहले**
          मूव करने की जरूरत होगी, नहीं तो आपके चक्कर बेहद मामूली मात्रा तक अलग हो
          जाएंगे!
        courseD_artist_nestedLoops4_a: "चक्कर बनाने के लिए:\n\n-   360 बार दोहराएं
          \   \n-   1 पिक्सल आगे की ओर मूव करें    \n-   1 डिग्री बाएं मुड़ें"
        courseD_artist_nestedLoops4_b: चक्करों के बीच 50 पिक्सल तक आगे की ओर कूदना
          न भूलें।
        courseD_artist_nestedLoops4_c: अपने चक्कर 4 बार चित्रित करने के लिए नेस्टड
          लूप का उपयोग करें।
      courseD_artist_nestedLoops5:
        courseD_artist_nestedLoops5_a: "इसे आसानी से करने के लिए:\n\n-   4 बार दोहराएं
          \   \n-   चक्कर बनाएं    \n-   50 पिक्सल आगे की ओर कूदें    \n-   90 डिग्री
          दाएं मुड़ें"
        courseD_artist_nestedLoops5_b: चक्कर बनाने के लिए आपको दोहराएं लूप को 360
          बार दोहराने की जरूरत होगी। लूप के अंदर, 1 पिक्सल आगे की ओर मूव करें और 1
          डिग्री तक मुड़ें।
      courseD_artist_nestedLoops5_2018:
        courseD_artist_nestedLoops5_a: "इसे आसानी से करने के लिए:\n\n-   4 बार दोहराएं
          \   \n-   चक्कर बनाएं    \n-   50 पिक्सल आगे की ओर कूदें    \n-   90 डिग्री
          दाएं मुड़ें"
        courseD_artist_nestedLoops5_b: चक्कर बनाने के लिए आपको दोहराएं लूप को 360
          बार दोहराने की जरूरत होगी। लूप के अंदर, 1 पिक्सल आगे की ओर मूव करें और 1
          डिग्री तक मुड़ें।
      courseD_artist_nestedLoops5_2019:
        courseD_artist_nestedLoops5_a: "इसे आसानी से करने के लिए:\n\n-   4 बार दोहराएं
          \   \n-   चक्कर बनाएं    \n-   50 पिक्सल आगे की ओर कूदें    \n-   90 डिग्री
          दाएं मुड़ें"
        courseD_artist_nestedLoops5_b: चक्कर बनाने के लिए आपको दोहराएं लूप को 360
          बार दोहराने की जरूरत होगी। लूप के अंदर, 1 पिक्सल आगे की ओर मूव करें और 1
          डिग्री तक मुड़ें।
      courseD_artist_nestedLoops7:
        courseD_artist_nestedLoops7_a: आपको यहां नेस्टड लूप्स का उपयोग करने की जरूरत
          होगी। सबसे पहले, वर्ग चित्रित करने के लिए लूप का उपयोग करें। यदि अंदरूनी
          लूप वर्ग खींचती है तो बाहरी लूप क्या करेगी?
        courseD_artist_nestedLoops7_b: "नेस्टड लूप का उपयोग करें, जहां अंदरूनी लूप,
          वर्ग के लिए कोड है।\n\n-   6 बार दोहराएं    -   वर्ग बनाएं    \n-   **50
          पिक्सल** आगे की ओर कूदें    \n-   **60 डिग्री** मुड़ें"
      courseD_artist_nestedLoops7_2018:
        courseD_artist_nestedLoops7_a: आपको यहां नेस्टड लूप्स का उपयोग करने की जरूरत
          होगी। सबसे पहले, वर्ग चित्रित करने के लिए लूप का उपयोग करें। यदि अंदरूनी
          लूप वर्ग खींचती है तो बाहरी लूप क्या करेगी?
        courseD_artist_nestedLoops7_b: "नेस्टड लूप का उपयोग करें, जहां अंदरूनी लूप,
          वर्ग के लिए कोड है।\n\n-   6 बार दोहराएं    -   वर्ग बनाएं    \n-   **50
          पिक्सल** आगे की ओर कूदें    \n-   **60 डिग्री** मुड़ें"
      courseD_artist_nestedLoops7_2019:
        courseD_artist_nestedLoops7_a: आपको यहां नेस्टड लूप्स का उपयोग करने की जरूरत
          होगी। सबसे पहले, वर्ग चित्रित करने के लिए लूप का उपयोग करें। यदि अंदरूनी
          लूप वर्ग खींचती है तो बाहरी लूप क्या करेगी?
        courseD_artist_nestedLoops7_b: "नेस्टड लूप का उपयोग करें, जहां अंदरूनी लूप,
          वर्ग के लिए कोड है।\n\n-   6 बार दोहराएं    -   वर्ग बनाएं    \n-   **50
          पिक्सल** आगे की ओर कूदें    \n-   **60 डिग्री** मुड़ें"
      courseD_artist_nestedLoops8:
        courseD_artist_nestedLoops8_a: अपनी ड्राइंग में षट्कोण प्राप्त करने के लिए,
          आपको उनमें से प्रत्येक के बीच **45 डिग्री** मुड़ने की जरूरत होगी। क्यों?
          क्योंकि 360 डिग्री को (पूरा मुड़ना) को 8 (षट्कोणों की संख्या) से भाग देने
          पर 45 डिग्री आता है।
        courseD_artist_nestedLoops8_b: यदि आप अटक गए हैं, तो पिछली पहेली को देखना
          शुरू करें, फिर उन चीज़ों को बदलें, जो अलग हैं।
        courseD_artist_nestedLoops8_c: "नेस्टड लूप का उपयोग करें:-   8 बार दोहराएं
          \   \n\n-   षट्कोण खींचें    \n-   50 पिक्सल आगे की ओर कूदें    \n-   45
          डिग्री दाएं मुड़ें"
      courseD_artist_nestedLoops8_2018:
        courseD_artist_nestedLoops8_a: अपनी ड्राइंग में षट्कोण प्राप्त करने के लिए,
          आपको उनमें से प्रत्येक के बीच **45 डिग्री** मुड़ने की जरूरत होगी। क्यों?
          क्योंकि 360 डिग्री को (पूरा मुड़ना) को 8 (षट्कोणों की संख्या) से भाग देने
          पर 45 डिग्री आता है।
        courseD_artist_nestedLoops8_b: यदि आप अटक गए हैं, तो पिछली पहेली को देखना
          शुरू करें, फिर उन चीज़ों को बदलें, जो अलग हैं।
        courseD_artist_nestedLoops8_c: "नेस्टड लूप का उपयोग करें:-   8 बार दोहराएं
          \   \n\n-   षट्कोण खींचें    \n-   50 पिक्सल आगे की ओर कूदें    \n-   45
          डिग्री दाएं मुड़ें"
      courseD_artist_nestedLoops8_2019:
        courseD_artist_nestedLoops8_a: अपनी ड्राइंग में षट्कोण प्राप्त करने के लिए,
          आपको उनमें से प्रत्येक के बीच **45 डिग्री** मुड़ने की जरूरत होगी। क्यों?
          क्योंकि 360 डिग्री को (पूरा मुड़ना) को 8 (षट्कोणों की संख्या) से भाग देने
          पर 45 डिग्री आता है।
        courseD_artist_nestedLoops8_b: यदि आप अटक गए हैं, तो पिछली पहेली को देखना
          शुरू करें, फिर उन चीज़ों को बदलें, जो अलग हैं।
        courseD_artist_nestedLoops8_c: "नेस्टड लूप का उपयोग करें:-   8 बार दोहराएं
          \   \n\n-   षट्कोण खींचें    \n-   50 पिक्सल आगे की ओर कूदें    \n-   45
          डिग्री दाएं मुड़ें"
      courseD_artist_nestedLoops9:
        courseD_artist_nestedLoops9_a: नेस्टड लूप का उपयोग करते हुए शुरुआत करें, जैसे
          आपने पहले किया था, लेकिन इस बार, इसे वर्गों के साथ बनाएं।
        courseD_artist_nestedLoops9_b: पहले सेट के अंत में नेस्टड लूप्स का दूसरा सेट
          जोड़ें, लेकिन इस बार त्रिकोणों का उपयोग करें।
        courseD_artist_nestedLoops9_c: "दो नेस्टड लूप्स का उपयोग करें:\n\n-   8 बार
          दोहराएं    \n-   वर्ग खींचें    \n-   50 पिक्सल आगे की ओर कूदें    \n-   45
          डिग्री तक दाएं मुड़ें\n-   8 बार दोहराएं    \n-   त्रिकोण खींचें    \n-
          \  50 पिक्सल आगे की ओर कूदें    \n-   45 डिग्री तक दाएं मुड़ें"
      courseD_artist_nestedLoops9_2018:
        courseD_artist_nestedLoops9_a: नेस्टड लूप का उपयोग करते हुए शुरुआत करें, जैसे
          आपने पहले किया था, लेकिन इस बार, इसे वर्गों के साथ बनाएं।
        courseD_artist_nestedLoops9_b: पहले सेट के अंत में नेस्टड लूप्स का दूसरा सेट
          जोड़ें, लेकिन इस बार त्रिकोणों का उपयोग करें।
        courseD_artist_nestedLoops9_c: "दो नेस्टड लूप्स का उपयोग करें:\n\n-   8 बार
          दोहराएं    \n-   वर्ग खींचें    \n-   50 पिक्सल आगे की ओर कूदें    \n-   45
          डिग्री तक दाएं मुड़ें\n-   8 बार दोहराएं    \n-   त्रिकोण खींचें    \n-
          \  50 पिक्सल आगे की ओर कूदें    \n-   45 डिग्री तक दाएं मुड़ें"
      courseD_artist_nestedLoops9_2019:
        courseD_artist_nestedLoops9_a: नेस्टड लूप का उपयोग करते हुए शुरुआत करें, जैसे
          आपने पहले किया था, लेकिन इस बार, इसे वर्गों के साथ बनाएं।
        courseD_artist_nestedLoops9_b: पहले सेट के अंत में नेस्टड लूप्स का दूसरा सेट
          जोड़ें, लेकिन इस बार त्रिकोणों का उपयोग करें।
        courseD_artist_nestedLoops9_c: "दो नेस्टड लूप्स का उपयोग करें:\n\n-   8 बार
          दोहराएं    \n-   वर्ग खींचें    \n-   50 पिक्सल आगे की ओर कूदें    \n-   45
          डिग्री तक दाएं मुड़ें\n-   8 बार दोहराएं    \n-   त्रिकोण खींचें    \n-
          \  50 पिक्सल आगे की ओर कूदें    \n-   45 डिग्री तक दाएं मुड़ें"
      courseD_artist_nestedLoopsFP:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          यह चित्र एकल नेस्टड लूप का उपयोग करते हुए बनाया गया था, जो 48 डिग्री मोड़ का उपयोग करते हुए 15 बार षट्कोण ( 50px भुजाओं के साथ) को दोहराती है।
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>

          यह चित्र अन्य स्तरों के लिए उसी कोड का उपयोग करते हुए बनाया गया था, जो आपने पहले किया था, लेकिन चक्करों के साथ (360 बार दोहराएं: 1 आगे की ओर मूव करें, 1 डिग्री मुड़ें)।
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>

          यह चित्र एकल नेस्टड लूप का उपयोग करते हुए बनाया गया था, जो 48 डिग्री मोड़ का उपयोग करते हुए 15 बार पंचभुज ( 50px भुजाओं के साथ) को दोहराती है।
      courseD_artist_nestedLoopsFP_2018:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          यह चित्र एकल नेस्टड लूप का उपयोग करते हुए बनाया गया था, जो 48 डिग्री मोड़ का उपयोग करते हुए 15 बार षट्कोण ( 50px भुजाओं के साथ) को दोहराती है।
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>

          यह चित्र अन्य स्तरों के लिए उसी कोड का उपयोग करते हुए बनाया गया था, जो आपने पहले किया था, लेकिन चक्करों के साथ (360 बार दोहराएं: 1 आगे की ओर मूव करें, 1 डिग्री मुड़ें)।
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>

          यह चित्र एकल नेस्टड लूप का उपयोग करते हुए बनाया गया था, जो 48 डिग्री मोड़ का उपयोग करते हुए 15 बार पंचभुज ( 50px भुजाओं के साथ) को दोहराती है।
      courseD_artist_nestedLoopsFP_2019:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          यह चित्र एकल नेस्टड लूप का उपयोग करते हुए बनाया गया था, जो 48 डिग्री मोड़ का उपयोग करते हुए 15 बार षट्कोण ( 50px भुजाओं के साथ) को दोहराती है।
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>

          यह चित्र अन्य स्तरों के लिए उसी कोड का उपयोग करते हुए बनाया गया था, जो आपने पहले किया था, लेकिन चक्करों के साथ (360 बार दोहराएं: 1 आगे की ओर मूव करें, 1 डिग्री मुड़ें)।
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>

          यह चित्र एकल नेस्टड लूप का उपयोग करते हुए बनाया गया था, जो 48 डिग्री मोड़ का उपयोग करते हुए 15 बार पंचभुज ( 50px भुजाओं के साथ) को दोहराती है।
      courseD_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: रंग को नीले में बदलकर शुरुआत करें,
          फिर 50 पिक्सल की भुजाओं और 45 डिग्री बाएं मोड़ों वाला अष्टभुज बनाएं।
        courseD_artist_nestedLoops_challenge1_b: रंग को हरे में बदलने के लिए कोड जोड़ें,
          और 50 पिक्सल की भुजाओं और 120 डिग्री बाएं मोड़ों वाला त्रिकोण बनाएं।
        courseD_artist_nestedLoops_challenge1_c: जब आप दोनों आकृतियां चित्रित कर लें,
          आपको 90 डिग्री दाएं मुड़ने से पहले 50 पिक्सल तक आगे की ओर कूदने की जरूरत
          होगी।
        courseD_artist_nestedLoops_challenge1_d: इसे समाप्त करने के लिए अपना पूरा
          कोड `4 बार दोहराएं` लूप के अंदर रखें।
      courseD_artist_nestedLoops_challenge1_2018:
        courseD_artist_nestedLoops_challenge1_a: रंग को नीले में बदलकर शुरुआत करें,
          फिर 50 पिक्सल की भुजाओं और 45 डिग्री बाएं मोड़ों वाला अष्टभुज बनाएं।
        courseD_artist_nestedLoops_challenge1_b: रंग को हरे में बदलने के लिए कोड जोड़ें,
          और 50 पिक्सल की भुजाओं और 120 डिग्री बाएं मोड़ों वाला त्रिकोण बनाएं।
        courseD_artist_nestedLoops_challenge1_c: जब आप दोनों आकृतियां चित्रित कर लें,
          आपको 90 डिग्री दाएं मुड़ने से पहले 50 पिक्सल तक आगे की ओर कूदने की जरूरत
          होगी।
        courseD_artist_nestedLoops_challenge1_d: इसे समाप्त करने के लिए अपना पूरा
          कोड `4 बार दोहराएं` लूप के अंदर रखें।
      courseD_artist_nestedLoops_challenge1_2019:
        courseD_artist_nestedLoops_challenge1_a: रंग को नीले में बदलकर शुरुआत करें,
          फिर 50 पिक्सल की भुजाओं और 45 डिग्री बाएं मोड़ों वाला अष्टभुज बनाएं।
        courseD_artist_nestedLoops_challenge1_b: रंग को हरे में बदलने के लिए कोड जोड़ें,
          और 50 पिक्सल की भुजाओं और 120 डिग्री बाएं मोड़ों वाला त्रिकोण बनाएं।
        courseD_artist_nestedLoops_challenge1_c: जब आप दोनों आकृतियां चित्रित कर लें,
          आपको 90 डिग्री दाएं मुड़ने से पहले 50 पिक्सल तक आगे की ओर कूदने की जरूरत
          होगी।
        courseD_artist_nestedLoops_challenge1_d: इसे समाप्त करने के लिए अपना पूरा
          कोड `4 बार दोहराएं` लूप के अंदर रखें।
      courseD_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: नियमित अष्टभुज खींचने के लिए, कलाकार
          को 8 बार 45 डिग्री मुड़ने की जरूरत है।
        courseD_artist_nestedLoops_challenge2_b: वर्ग खींचने के लिए, कलाकार को 4 बार
          90 डिग्री मुड़ने की जरूरत है।
      courseD_artist_nestedLoops_challenge2_2018:
        courseD_artist_nestedLoops_challenge2_a: नियमित अष्टभुज खींचने के लिए, कलाकार
          को 8 बार 45 डिग्री मुड़ने की जरूरत है।
        courseD_artist_nestedLoops_challenge2_b: वर्ग खींचने के लिए, कलाकार को 4 बार
          90 डिग्री मुड़ने की जरूरत है।
      courseD_artist_nestedLoops_challenge2_2019:
        courseD_artist_nestedLoops_challenge2_a: नियमित अष्टभुज खींचने के लिए, कलाकार
          को 8 बार 45 डिग्री मुड़ने की जरूरत है।
        courseD_artist_nestedLoops_challenge2_b: वर्ग खींचने के लिए, कलाकार को 4 बार
          90 डिग्री मुड़ने की जरूरत है।
      courseD_artist_project1:
        courseD_artist_project1_a: अपनी जरूरत के कोण को चुनने के लिए आप `मुड़ें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें!
        courseD_artist_project1_b: याद रखें कि `आगे की ओर मूव करें` एक लाइन खींचता
          है, जबकि `आगे की ओर कूदें` नहीं।
      courseD_artist_project1_2018:
        courseD_artist_project1_a: अपनी जरूरत के कोण को चुनने के लिए आप `मुड़ें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें!
        courseD_artist_project1_b: याद रखें कि `आगे की ओर मूव करें` एक लाइन खींचता
          है, जबकि `आगे की ओर कूदें` नहीं।
      courseD_artist_project1_2019:
        courseD_artist_project1_a: अपनी जरूरत के कोण को चुनने के लिए आप `मुड़ें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें!
        courseD_artist_project1_b: याद रखें कि `आगे की ओर मूव करें` एक लाइन खींचता
          है, जबकि `आगे की ओर कूदें` नहीं।
      courseD_artist_project1a:
        courseD_artist_project1a_a: |-
          यह सीढ़ी स्टेप 76 डिग्री के मोड़ का उपयोग करता है और 4 बार दोहराता है।

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: ये पैटर्न काफी हद तक अन्य पहेलियों के सीढ़ी स्टेप्स
          जैसे हैं, लेकिन अलग कोण का उपयोग करते हैं।
      courseD_artist_project1a_2018:
        courseD_artist_project1a_a: |-
          यह सीढ़ी स्टेप 76 डिग्री के मोड़ का उपयोग करता है और 4 बार दोहराता है।

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: ये पैटर्न काफी हद तक अन्य पहेलियों के सीढ़ी स्टेप्स
          जैसे हैं, लेकिन अलग कोण का उपयोग करते हैं।
      courseD_artist_project1a_2019:
        courseD_artist_project1a_a: |-
          यह सीढ़ी स्टेप 76 डिग्री के मोड़ का उपयोग करता है और 4 बार दोहराता है।

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: ये पैटर्न काफी हद तक अन्य पहेलियों के सीढ़ी स्टेप्स
          जैसे हैं, लेकिन अलग कोण का उपयोग करते हैं।
      courseD_artist_project2:
        courseD_artist_project2_a: याद रखें कि `आगे की ओर मूव करें` एक लाइन खींचता
          है, जबकि `आगे की ओर कूदें` नहीं।
        courseD_artist_project2_b: आपके पहली बार चित्रित और मूव करने के बाद, आप बाहर
          की तरफ लूप जोड़कर कोड दोहरा सकते हैं।
      courseD_artist_project2_2018:
        courseD_artist_project2_a: याद रखें कि `आगे की ओर मूव करें` एक लाइन खींचता
          है, जबकि `आगे की ओर कूदें` नहीं।
        courseD_artist_project2_b: आपके पहली बार चित्रित और मूव करने के बाद, आप बाहर
          की तरफ लूप जोड़कर कोड दोहरा सकते हैं।
      courseD_artist_project2_2019:
        courseD_artist_project2_a: याद रखें कि `आगे की ओर मूव करें` एक लाइन खींचता
          है, जबकि `आगे की ओर कूदें` नहीं।
        courseD_artist_project2_b: आपके पहली बार चित्रित और मूव करने के बाद, आप बाहर
          की तरफ लूप जोड़कर कोड दोहरा सकते हैं।
      courseD_artist_project2a:
        courseD_artist_project2a_a: |-
          यह ड्राइंग 4 सीढ़ियों की लूप `180 डिग्री दाएं मुड़ें` ब्लॉक को `2 बार दोहराएं` ब्लॉक के अंदर नेस्ट करके बनाई गई थी।

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2018:
        courseD_artist_project2a_a: |-
          यह ड्राइंग 4 सीढ़ियों की लूप `180 डिग्री दाएं मुड़ें` ब्लॉक को `2 बार दोहराएं` ब्लॉक के अंदर नेस्ट करके बनाई गई थी।

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2019:
        courseD_artist_project2a_a: |-
          यह ड्राइंग 4 सीढ़ियों की लूप `180 डिग्री दाएं मुड़ें` ब्लॉक को `2 बार दोहराएं` ब्लॉक के अंदर नेस्ट करके बनाई गई थी।

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project3:
        courseD_artist_project3_a: अपनी जरूरत के कोण को चुनने के लिए आप `मुड़ें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें!
        courseD_artist_project3_b: "नेस्टड लूप्स आजमाएं!\n\nउस कोड का उपयोग करें,
          जो आपने आकृतियों की लाइन खींचने के लिए बनाया है और इसे दूसरी लूप के अंदर
          नेस्ट करें।   नीचे, बाहरी लूप के समाप्त होने से पहले, वह ब्लॉक जोड़ें, जो
          एल्सा को मोड़ देगा। \n\n-   यदि आप बाहरी लूप को 5 बार दोहरा रहे हैं तो 72
          डिग्री का प्रयास करें\n-   यदि आप बाहरी लूप को 6 बार दोहरा रहे हैं तो 60
          डिग्री का प्रयास करें"
      courseD_artist_project3_2018:
        courseD_artist_project3_a: अपनी जरूरत के कोण को चुनने के लिए आप `मुड़ें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें!
        courseD_artist_project3_b: "नेस्टड लूप्स आजमाएं!\n\nउस कोड का उपयोग करें,
          जो आपने आकृतियों की लाइन खींचने के लिए बनाया है और इसे दूसरी लूप के अंदर
          नेस्ट करें।   नीचे, बाहरी लूप के समाप्त होने से पहले, वह ब्लॉक जोड़ें, जो
          एल्सा को मोड़ देगा। \n\n-   यदि आप बाहरी लूप को 5 बार दोहरा रहे हैं तो 72
          डिग्री का प्रयास करें\n-   यदि आप बाहरी लूप को 6 बार दोहरा रहे हैं तो 60
          डिग्री का प्रयास करें"
      courseD_artist_project3_2019:
        courseD_artist_project3_a: अपनी जरूरत के कोण को चुनने के लिए आप `मुड़ें` ब्लॉक्स
          पर ड्रॉप डाउन मेन्यु का उपयोग करें!
        courseD_artist_project3_b: "नेस्टड लूप्स आजमाएं!\n\nउस कोड का उपयोग करें,
          जो आपने आकृतियों की लाइन खींचने के लिए बनाया है और इसे दूसरी लूप के अंदर
          नेस्ट करें।   नीचे, बाहरी लूप के समाप्त होने से पहले, वह ब्लॉक जोड़ें, जो
          एल्सा को मोड़ देगा। \n\n-   यदि आप बाहरी लूप को 5 बार दोहरा रहे हैं तो 72
          डिग्री का प्रयास करें\n-   यदि आप बाहरी लूप को 6 बार दोहरा रहे हैं तो 60
          डिग्री का प्रयास करें"
      courseD_artist_project3a:
        courseD_artist_project3a_a: आप अपनी आकृति को घुमाने के लिए अलग-अलग मात्राएं
          चुन सकते हैं! बीच में 20 डिग्री के मोड़ के साथ 18 बार के बारे में क्या विचार
          है?
      courseD_artist_project3a_2018:
        courseD_artist_project3a_a: आप अपनी आकृति को घुमाने के लिए अलग-अलग मात्राएं
          चुन सकते हैं! बीच में 20 डिग्री के मोड़ के साथ 18 बार के बारे में क्या विचार
          है?
      courseD_artist_project3a_2019:
        courseD_artist_project3a_a: आप अपनी आकृति को घुमाने के लिए अलग-अलग मात्राएं
          चुन सकते हैं! बीच में 20 डिग्री के मोड़ के साथ 18 बार के बारे में क्या विचार
          है?
      courseD_artist_project4:
        courseD_artist_project4_a: |-
          त्रिकोण हिम-पक्षी से पहले 36 डिग्री के मोड़ वाला बहुभुज हिम-पक्षी है:

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          यह वर्गों वाले षट्कोणों का सेट है:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: इसे आजमाने के लिए, अपना पहला हिम-पक्षी चित्रित
          करें, फिर दूसरा हिम-पक्षी चित्रित करें।
      courseD_artist_project4_2018:
        courseD_artist_project4_a: |-
          त्रिकोण हिम-पक्षी से पहले 36 डिग्री के मोड़ वाला बहुभुज हिम-पक्षी है:

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          यह वर्गों वाले षट्कोणों का सेट है:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: इसे आजमाने के लिए, अपना पहला हिम-पक्षी चित्रित
          करें, फिर दूसरा हिम-पक्षी चित्रित करें।
      courseD_artist_project4_2019:
        courseD_artist_project4_a: |-
          त्रिकोण हिम-पक्षी से पहले 36 डिग्री के मोड़ वाला बहुभुज हिम-पक्षी है:

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          यह वर्गों वाले षट्कोणों का सेट है:

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: इसे आजमाने के लिए, अपना पहला हिम-पक्षी चित्रित
          करें, फिर दूसरा हिम-पक्षी चित्रित करें।
      courseD_artist_project4a:
        courseD_artist_project4a_a: |-
          ये दो अलग-अलग लंबाई के हिम-पक्षी हैं, एक के बाद दूसरा चित्रित करें (बीच में 30 डिग्री के मोड़ के साथ।)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2018:
        courseD_artist_project4a_a: |-
          ये दो अलग-अलग लंबाई के हिम-पक्षी हैं, एक के बाद दूसरा चित्रित करें (बीच में 30 डिग्री के मोड़ के साथ।)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2019:
        courseD_artist_project4a_a: |-
          ये दो अलग-अलग लंबाई के हिम-पक्षी हैं, एक के बाद दूसरा चित्रित करें (बीच में 30 डिग्री के मोड़ के साथ।)

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project5:
        courseD_artist_project4_a: |-
          2 षट्कोणों और 4 त्रिकोणों की लाइनें:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2018:
        courseD_artist_project4_a: |-
          2 षट्कोणों और 4 त्रिकोणों की लाइनें:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2019:
        courseD_artist_project4_a: |-
          2 षट्कोणों और 4 त्रिकोणों की लाइनें:

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_ramp11:
        courseD_artist_ramp11a: To draw a side, use the `move forward by 100 pixels`
          block, and change the 100 to a 200.
        courseD_artist_ramp11b: |-
          4 भुजाएं खींचने के लिए, दोहराएं लूप के अंदर `200 पिक्सल तक आगे की ओर मूव करें` ब्लॉक रखें और सुनिश्चित करें कि लूप 4 बार खींचने के लिए सेट है।

          उसके बाद मुड़ना न भूलें!
        courseD_artist_ramp11_c: अपनी लूप के अंदर `मुड़ें` ब्लॉक रखना याद रखें!
      courseD_artist_ramp12:
        courseD_artist_ramp12_a: आप या तो पहले वर्ग खींच सकते हैं, फिर त्रिकोण, या
          अन्य तरीके से इसे कर सकते हैं!
        courseD_artist_ramp12_b: समस्या को 2 भागों में बांटने और 2 लूप्स का उपयोग
          करने की कोशिश करें।
        courseD_artist_ramp12_c: यह देखने के लिए आपको कौन-से कोण की जरूरत है, आप `मुड़ें`
          ब्लॉक्स पर ड्रॉप डाउन मेन्यु का उपयोग कर सकते हैं!
      courseD_autorun_binary2_2019:
        courseD_artist_binary2_a: इस प्रोग्राम को क्रिया में देखने के लिए बस 'चलाएं'
          पर क्लिक करें!
      courseD_autorun_binary3_2019:
        courseD_artist_binary3_a: टूलबॉक्स में से चार युग्मक पैटर्नों में से एक इस
          पहेली को हल करेगा!
        courseD_artist_binary3_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं
          किया है।
      courseD_autorun_binary4_2019:
        courseD_artist_binary4_a: ऊपरी पंक्ति में पहले तीन वर्गों को देखें। क्या आप
          पूरा पैटर्न प्राप्त करने के लिए इन तीनों को दोहरा सकते हैं?
        courseD_artist_binary4_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseD_autorun_binary5_2019:
        courseD_artist_binary5_a: पहले यह देखने के लिए कोड चलाने का प्रयास करें कि
          आपको किसके साथ काम करना होगा।
        courseD_artist_binary5_b: एक मुस्कुराहट बनाने के लिए आपको केवल दो पंक्तियों
          को बदलने की जरूरत है।
        courseD_artist_binary5_c: यदि आपको इस पहेली का पता लगाने में मुश्किल हो रही
          है, तो युग्मक लाइनों को कागज़ पर लिखने और पैटर्न खोजने की कोशिश करें।
      courseD_autorun_binary6_2019:
        courseD_artist_binary6_a: ऊपर बाईं ओर से शुरुआत करें। पैटर्न द्वारा दोहराना
          शुरू करने से पहले आपको कितनी दूर तक पढ़ना होगा?
        courseD_artist_binary6_b: आप एक बार में अपनी थोड़ी सी युग्मक स्ट्रिंग बना
          सकते हैं और बार-बार इसका परीक्षण कर सकते हैं!
      courseD_autorun_binary7_2019:
        courseD_artist_binary7_a: ऊपर बाईं ओर से शुरुआत करें। पैटर्न द्वारा दोहराना
          शुरू करने से पहले आपको कितनी दूर तक पढ़ना होगा?
        courseD_artist_binary7_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी
          तक पहेली को हल नहीं किया है।
      courseD_autorun_binary8_2019:
        courseD_artist_binary8_a: घुमावदार कभी-कभार उलझन भरा हो सकता है। जब आप यह
          डिज़ाइन बनाएं तो अपने दिमाग में आने वाली हर क्षैतिज लाइन को अलग करें।
        courseD_artist_binary8_b: पहले यह देखने के लिए कोड चलाने का प्रयास करें कि
          आपको किसके साथ काम करना होगा।
        courseD_artist_binary8_c: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,
          युग्मक लिखने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं
          किया है।
      courseD_bee_conditionals1_predict1:
        courseD_bee_conditionals1_a: इससे पहले कि आप मधुरस प्राप्त करने का प्रयास
          करें, आपको यह देखने के लिए `इफ` ब्लॉक का उपयोग करने की जरूरत होगी कि क्या
          बादल के नीचे फूल है।
      courseD_bee_conditionals1_predict1_2018:
        courseD_bee_conditionals1_a: इससे पहले कि आप मधुरस प्राप्त करने का प्रयास
          करें, आपको यह देखने के लिए `इफ` ब्लॉक का उपयोग करने की जरूरत होगी कि क्या
          बादल के नीचे फूल है।
      courseD_bee_conditionals1_predict1_2019:
        courseD_bee_conditionals1_a: इससे पहले कि आप मधुरस प्राप्त करने का प्रयास
          करें, आपको यह देखने के लिए `इफ` ब्लॉक का उपयोग करने की जरूरत होगी कि क्या
          बादल के नीचे फूल है।
      courseD_bee_conditionals1_predict1_copy:
        courseD_bee_conditionals1_a: इससे पहले कि आप मधुरस प्राप्त करने का प्रयास
          करें, आपको यह देखने के लिए `इफ` ब्लॉक का उपयोग करने की जरूरत होगी कि क्या
          बादल के नीचे फूल है।
      courseD_bee_conditionals2:
        courseD_bee_conditionals2_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals2_a: कभी वहां फूल होगा, कभी नहीं।  यदि आप अपने कोड
          को दोनों स्थितियों में चलाना चाहते हैं, तो `इफ` स्टेटमेंट का उपयोग करना
          सुनिश्चित करें।
        courseD_bee_conditionals2_b: इस पहेली का रास्ता बनाने के लिए आप `दोहराएं`
          लूप या `जब आगे रास्ता हो` का उपयोग कर सकते हैं।
        courseD_bee_conditionals2_c: आपको मधु के छत्तों को देखने की जरूरत नहीं है,
          बादलों की नीचे केवल फूल या खाली स्थान होंगे।
        courseD_bee_conditionals2_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals2_2018:
        courseD_bee_conditionals2_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals2_a: कभी वहां फूल होगा, कभी नहीं।  यदि आप अपने कोड
          को दोनों स्थितियों में चलाना चाहते हैं, तो `इफ` स्टेटमेंट का उपयोग करना
          सुनिश्चित करें।
        courseD_bee_conditionals2_b: इस पहेली का रास्ता बनाने के लिए आप `दोहराएं`
          लूप या `जब आगे रास्ता हो` का उपयोग कर सकते हैं।
        courseD_bee_conditionals2_c: आपको मधु के छत्तों को देखने की जरूरत नहीं है,
          बादलों की नीचे केवल फूल या खाली स्थान होंगे।
        courseD_bee_conditionals2_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals2_2019:
        courseD_bee_conditionals2_a: कभी वहां फूल होगा, कभी नहीं।  यदि आप अपने कोड
          को दोनों स्थितियों में चलाना चाहते हैं, तो `इफ` स्टेटमेंट का उपयोग करना
          सुनिश्चित करें।
        courseD_bee_conditionals2_c: आपको मधु के छत्तों को देखने की जरूरत नहीं है,
          बादलों की नीचे केवल फूल या खाली स्थान होंगे।
      courseD_bee_conditionals2_copy:
        courseD_bee_conditionals2_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals2_a: कभी वहां फूल होगा, कभी नहीं।  यदि आप अपने कोड
          को दोनों स्थितियों में चलाना चाहते हैं, तो `इफ` स्टेटमेंट का उपयोग करना
          सुनिश्चित करें।
        courseD_bee_conditionals2_b: इस पहेली का रास्ता बनाने के लिए आप `दोहराएं`
          लूप या `जब आगे रास्ता हो` का उपयोग कर सकते हैं।
        courseD_bee_conditionals2_c: आपको मधु के छत्तों को देखने की जरूरत नहीं है,
          बादलों की नीचे केवल फूल या खाली स्थान होंगे।
        courseD_bee_conditionals2_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals3:
        courseD_bee_conditionals3_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals3_a: यह देखने के लिए कि इसमें फूल है या कुछ नहीं है,
          प्रत्येक स्थान को देखने के लिए `इफ` स्टेटमेंट का उपयोग करना सुनिश्चित करें।
        courseD_bee_conditionals3_b: आप मधुमक्खी को आगे की ओर मूव करते रहने के लिए
          `दोहराएं` लूप या `व्हाइल` लूप का उपयोग कर सकते हैं। उसी का उपयोग करें, जो
          भी आपको पसंद हो!
        courseD_bee_conditionals3_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा,ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली
          को हल नहीं किया है।
        courseD_bee_conditionals3_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals3_2018:
        courseD_bee_conditionals3_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals3_a: यह देखने के लिए कि इसमें फूल है या कुछ नहीं है,
          प्रत्येक स्थान को देखने के लिए `इफ` स्टेटमेंट का उपयोग करना सुनिश्चित करें।
        courseD_bee_conditionals3_b: आप मधुमक्खी को आगे की ओर मूव करते रहने के लिए
          `दोहराएं` लूप या `व्हाइल` लूप का उपयोग कर सकते हैं। उसी का उपयोग करें, जो
          भी आपको पसंद हो!
        courseD_bee_conditionals3_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा,ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली
          को हल नहीं किया है।
        courseD_bee_conditionals3_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals3_2019:
        courseD_bee_conditionals3_a: यह देखने के लिए कि इसमें फूल है या कुछ नहीं है,
          प्रत्येक स्थान को देखने के लिए `इफ` स्टेटमेंट का उपयोग करना सुनिश्चित करें।
        courseD_bee_conditionals3_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा,ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली
          को हल नहीं किया है।
      courseD_bee_conditionals3_copy:
        courseD_bee_conditionals3_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals3_a: यह देखने के लिए कि इसमें फूल है या कुछ नहीं है,
          प्रत्येक स्थान को देखने के लिए `इफ` स्टेटमेंट का उपयोग करना सुनिश्चित करें।
        courseD_bee_conditionals3_b: आप मधुमक्खी को आगे की ओर मूव करते रहने के लिए
          `दोहराएं` लूप या `व्हाइल` लूप का उपयोग कर सकते हैं। उसी का उपयोग करें, जो
          भी आपको पसंद हो!
        courseD_bee_conditionals3_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा,ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली
          को हल नहीं किया है।
        courseD_bee_conditionals3_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals4:
        courseD_bee_conditionals4_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals4_a: आप तब भी प्रत्येक स्थान से इस तरह व्यवहार कर
          सकते हैं कि मानो इस पर बादल हो, चाहे आप पूरा रास्ता देख सकते हों।
        courseD_bee_conditionals4_b: मधुरस के प्रत्येक स्थान को देखने के लिए अपनी
          लूप के अंदर `इफ` स्टेटमेंट का उपयोग करें।
        courseD_bee_conditionals4_c: <xml><block type="maze_untilBlocked"/></xml>
          block ब्लॉक का उपयोग करते हुए, आपको आगे की ओर मूव करके फूल को देखें। यदि
          वहां फूल है, तो मधुमक्खी को क्या करना चाहिए?
        courseD_bee_conditionals4_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals4_2018:
        courseD_bee_conditionals4_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals4_a: आप तब भी प्रत्येक स्थान से इस तरह व्यवहार कर
          सकते हैं कि मानो इस पर बादल हो, चाहे आप पूरा रास्ता देख सकते हों।
        courseD_bee_conditionals4_b: मधुरस के प्रत्येक स्थान को देखने के लिए अपनी
          लूप के अंदर `इफ` स्टेटमेंट का उपयोग करें।
        courseD_bee_conditionals4_c: <xml><block type="maze_untilBlocked"/></xml>
          block ब्लॉक का उपयोग करते हुए, आपको आगे की ओर मूव करके फूल को देखें। यदि
          वहां फूल है, तो मधुमक्खी को क्या करना चाहिए?
        courseD_bee_conditionals4_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals4_2019:
        courseD_bee_conditionals4_a: आप तब भी प्रत्येक स्थान से इस तरह व्यवहार कर
          सकते हैं कि मानो इस पर बादल हो, चाहे आप पूरा रास्ता देख सकते हों।
        courseD_bee_conditionals4_b: मधुरस के प्रत्येक स्थान को देखने के लिए अपनी
          लूप के अंदर `इफ` स्टेटमेंट का उपयोग करें।
      courseD_bee_conditionals4_copy:
        courseD_bee_conditionals4_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals4_a: आप तब भी प्रत्येक स्थान से इस तरह व्यवहार कर
          सकते हैं कि मानो इस पर बादल हो, चाहे आप पूरा रास्ता देख सकते हों।
        courseD_bee_conditionals4_b: मधुरस के प्रत्येक स्थान को देखने के लिए अपनी
          लूप के अंदर `इफ` स्टेटमेंट का उपयोग करें।
        courseD_bee_conditionals4_c: <xml><block type="maze_untilBlocked"/></xml>
          block ब्लॉक का उपयोग करते हुए, आपको आगे की ओर मूव करके फूल को देखें। यदि
          वहां फूल है, तो मधुमक्खी को क्या करना चाहिए?
        courseD_bee_conditionals4_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals5:
        courseD_bee_conditionals5_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals5_a: आयताकार रास्ते की प्रत्येक भुजा को भी एक रास्ता
          मानें। बाहर की तरफ `दोहराएं` ब्लॉक के साथ नेस्टड लूप और अंदर `जब आगे रास्ता
          हो` लूप स्थापित करें। नीचे की ओर जाने के लिए मधुमक्खी को कितने रास्तों की
          जरूरत है, यदि मधुमक्खी को फूल के साथ हर तरफ नीचे की तरफ जाने की जरूरत है?
        courseD_bee_conditionals5_c: फूलों वाली आयत की 3 भुजाएं हैं, इसलिए कोड को
          `3 बार दोहराएं` की जरूरत है। प्रत्येक बार दोहराने में, मधुमक्खी को `जब आगे
          रास्ता हो` रास्ते को रखने की जरूरत होगी। नीचे की ओर रास्ता जारी रखने के
          लिए, मधुमक्खी को `आगे की ओर मूव करें` की जरूरत होगी। जब रास्ते पर हों, तो
          मधुमक्खी को फूल को देखने की जरूरत होती है। `यदि वहां फूल हो`, मधुमक्खी को
          `मधुरस प्राप्त करें` करना चाहिए।
        courseD_bee_conditionals5_b: "`जब आगे रास्ता हो` ब्लॉक के अंदर आपको आगे की
          ओर मूव करके फूल देखने की जरूरत होगी। आप कैसे देखेंगे कि वहां फूल है या नहीं?
          यदि वहां फूल हो तो आप क्या करेंगे?"
        courseD_bee_conditionals5_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals5_2018:
        courseD_bee_conditionals5_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals5_a: आयताकार रास्ते की प्रत्येक भुजा को भी एक रास्ता
          मानें। बाहर की तरफ `दोहराएं` ब्लॉक के साथ नेस्टड लूप और अंदर `जब आगे रास्ता
          हो` लूप स्थापित करें। नीचे की ओर जाने के लिए मधुमक्खी को कितने रास्तों की
          जरूरत है, यदि मधुमक्खी को फूल के साथ हर तरफ नीचे की तरफ जाने की जरूरत है?
        courseD_bee_conditionals5_c: फूलों वाली आयत की 3 भुजाएं हैं, इसलिए कोड को
          `3 बार दोहराएं` की जरूरत है। प्रत्येक बार दोहराने में, मधुमक्खी को `जब आगे
          रास्ता हो` रास्ते को रखने की जरूरत होगी। नीचे की ओर रास्ता जारी रखने के
          लिए, मधुमक्खी को `आगे की ओर मूव करें` की जरूरत होगी। जब रास्ते पर हों, तो
          मधुमक्खी को फूल को देखने की जरूरत होती है। `यदि वहां फूल हो`, मधुमक्खी को
          `मधुरस प्राप्त करें` करना चाहिए।
        courseD_bee_conditionals5_b: Inside the `while path ahead` block you will
          need to move forward and check for a flower. How do you check if there is
          a flower? What do you do if there is a flower?
        courseD_bee_conditionals5_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals5_2019:
        courseD_bee_conditionals5_a: If you use an `if at flower` block, you can solve
          this using a nested loop. Write a program for the left and bottom paths,
          then repeat everything twice!
        courseD_bee_conditionals5_c: To continue down the path, the bee will need
          to `move forward`. As it moves, the bee needs to check for a flower. `if
          there is a flower`, the bee should `get nectar`.
      courseD_bee_conditionals5_copy:
        courseD_bee_conditionals5_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals5_a: आयताकार रास्ते की प्रत्येक भुजा को भी एक रास्ता
          मानें। बाहर की तरफ `दोहराएं` ब्लॉक के साथ नेस्टड लूप और अंदर `जब आगे रास्ता
          हो` लूप स्थापित करें। नीचे की ओर जाने के लिए मधुमक्खी को कितने रास्तों की
          जरूरत है, यदि मधुमक्खी को फूल के साथ हर तरफ नीचे की तरफ जाने की जरूरत है?
        courseD_bee_conditionals5_c: फूलों वाली आयत की 3 भुजाएं हैं, इसलिए कोड को
          `3 बार दोहराएं` की जरूरत है। प्रत्येक बार दोहराने में, मधुमक्खी को `जब आगे
          रास्ता हो` रास्ते को रखने की जरूरत होगी। नीचे की ओर रास्ता जारी रखने के
          लिए, मधुमक्खी को `आगे की ओर मूव करें` की जरूरत होगी। जब रास्ते पर हों, तो
          मधुमक्खी को फूल को देखने की जरूरत होती है। `यदि वहां फूल हो`, मधुमक्खी को
          `मधुरस प्राप्त करें` करना चाहिए।
        courseD_bee_conditionals5_b: "`जब आगे रास्ता हो` ब्लॉक के अंदर आपको आगे की
          ओर मूव करके फूल देखने की जरूरत होगी। आप कैसे देखेंगे कि वहां फूल है या नहीं?
          यदि वहां फूल हो तो आप क्या करेंगे?"
        courseD_bee_conditionals5_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals6:
        courseD_bee_conditionals6_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals6_a: प्रत्येक बादल के नीचे मधु के छत्ते को देखने के
          लिए `इफ` स्टेटमेंट का उपयोग करना सुनिश्चित करें।
        courseD_bee_conditionals6_b: इस स्थिति में, आपको बादलों के नीचे फूलों को देखने
          की जरूरत नहीं है।
        courseD_bee_conditionals6_c: क्या ऐसी लूप है, जिसे आप अपने कोड को अधिक सरल
          बनाने के लिए उपयोग कर सकते हैं?
        courseD_bee_conditionals6_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals6_2018:
        courseD_bee_conditionals6_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals6_a: प्रत्येक बादल के नीचे मधु के छत्ते को देखने के
          लिए `इफ` स्टेटमेंट का उपयोग करना सुनिश्चित करें।
        courseD_bee_conditionals6_b: इस स्थिति में, आपको बादलों के नीचे फूलों को देखने
          की जरूरत नहीं है।
        courseD_bee_conditionals6_c: क्या ऐसी लूप है, जिसे आप अपने कोड को अधिक सरल
          बनाने के लिए उपयोग कर सकते हैं?
        courseD_bee_conditionals6_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals6_2019:
        courseD_bee_conditionals6_a: प्रत्येक बादल के नीचे मधु के छत्ते को देखने के
          लिए `इफ` स्टेटमेंट का उपयोग करना सुनिश्चित करें।
        courseD_bee_conditionals6_b: इस स्थिति में, आपको बादलों के नीचे फूलों को देखने
          की जरूरत नहीं है।
        courseD_bee_conditionals6_c: क्या ऐसी लूप है, जिसे आप अपने कोड को अधिक सरल
          बनाने के लिए उपयोग कर सकते हैं?
      courseD_bee_conditionals7:
        courseD_bee_conditionals7_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals7_a: "**यााद रखें:** यह पहेली हर बार चलाने पर बदल
          जाती है। \n\nआप चुनौती को हल करने के लिए नियमबद्ध ब्लॉक (`इफ/एल्स`) का उपयोग
          करना चाहेंगे।"
        courseD_bee_conditionals7_b: यदि बादल के नीचे फूल नहीं है, तो वहां मधु का
          छत्ता होना आवश्यक है, ताकि आपको खाली स्थान के केस के बारे में सोचने की जरूरत
          न पड़े।
        courseD_bee_conditionals7_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals7_2018:
        courseD_bee_conditionals7_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals7_a: "**यााद रखें:** यह पहेली हर बार चलाने पर बदल
          जाती है। \n\nआप चुनौती को हल करने के लिए नियमबद्ध ब्लॉक (`इफ/एल्स`) का उपयोग
          करना चाहेंगे।"
        courseD_bee_conditionals7_b: यदि बादल के नीचे फूल नहीं है, तो वहां मधु का
          छत्ता होना आवश्यक है, ताकि आपको खाली स्थान के केस के बारे में सोचने की जरूरत
          न पड़े।
        courseD_bee_conditionals7_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals7_2019:
        courseD_bee_conditionals7_a: "**यााद रखें:** यह पहेली हर बार चलाने पर बदल
          जाती है। \n\nआप चुनौती को हल करने के लिए नियमबद्ध ब्लॉक (`इफ/एल्स`) का उपयोग
          करना चाहेंगे।"
        courseD_bee_conditionals7_b: यदि बादल के नीचे फूल नहीं है, तो वहां मधु का
          छत्ता होना आवश्यक है, ताकि आपको खाली स्थान के केस के बारे में सोचने की जरूरत
          न पड़े।
      courseD_bee_conditionals7_predict2:
        courseD_bee_conditionals7_a: "**यााद रखें:** यह पहेली हर बार चलाने पर बदल
          जाती है। \n\nआप चुनौती को हल करने के लिए नियमबद्ध ब्लॉक (`इफ/एल्स`) का उपयोग
          करना चाहेंगे।"
      courseD_bee_conditionals7_predict2_2018:
        courseD_bee_conditionals7_a: "**यााद रखें:** यह पहेली हर बार चलाने पर बदल
          जाती है। \n\nआप चुनौती को हल करने के लिए नियमबद्ध ब्लॉक (`इफ/एल्स`) का उपयोग
          करना चाहेंगे।"
      courseD_bee_conditionals7_predict2_2019:
        courseD_bee_conditionals7_a: "**यााद रखें:** यह पहेली हर बार चलाने पर बदल
          जाती है। \n\nआप चुनौती को हल करने के लिए नियमबद्ध ब्लॉक (`इफ/एल्स`) का उपयोग
          करना चाहेंगे।"
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals8_a: "**याद रखें:** यह पहेली हर बार चलाने पर बदल जाती
          है। \n\nआप चुनौती को हल करने के लिए नियमबद्ध ब्लॉक ( `इफ` या `इफ/एल्स`)
          का उपयोग करना चाहेंगे।"
        courseD_bee_conditionals8_b: |-
          यह पहेली पेचीदा है, क्योंकि आप केवल एक एकल सापेक्ष के साथ खाली वर्ग, मधुरस, _और_ शहद नहीं देख सकते।

          अपने रास्ते के अंत में केवल मधुरस और शहद देखें।
        courseD_bee_conditionals8_c: आप प्रत्येक रास्ते के अंत तक जाना किस प्रकार
          सुनिश्चित कर सकते हैं, चाहे रास्ता कितना लंबा हो?
        courseD_bee_conditionals8_d: |-
          चाहे बादल बिल्कुल आपके सामने हो, तो भी आपको पहले इसके पास जाने की जरूरत नहीं है। वर्ग के दाईं ओर निचली तरफ बादल के साथ शुरुआत करें।

          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_hintVid1: क्या शुरुआत करने में मदद की जरूरत है?  वीडियो
          देखें!
        courseD_bee_conditionals8_a: "**याद रखें:** यह पहेली हर बार चलाने पर बदल जाती
          है। \n\nआप चुनौती को हल करने के लिए नियमबद्ध ब्लॉक ( `इफ` या `इफ/एल्स`)
          का उपयोग करना चाहेंगे।"
        courseD_bee_conditionals8_b: |-
          यह पहेली पेचीदा है, क्योंकि आप केवल एक एकल सापेक्ष के साथ खाली वर्ग, मधुरस, _और_ शहद नहीं देख सकते।

          अपने रास्ते के अंत में केवल मधुरस और शहद देखें।
        courseD_bee_conditionals8_c: आप प्रत्येक रास्ते के अंत तक जाना किस प्रकार
          सुनिश्चित कर सकते हैं, चाहे रास्ता कितना लंबा हो?
        courseD_bee_conditionals8_d: |-
          चाहे बादल बिल्कुल आपके सामने हो, तो भी आपको पहले इसके पास जाने की जरूरत नहीं है। वर्ग के दाईं ओर निचली तरफ बादल के साथ शुरुआत करें।

          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: इस पहेली को हल करने में मदद के लिए यह
          वीडियो देखें।
      courseD_bee_conditionals8_2019:
        courseD_bee_conditionals8_a: "**याद रखें:** यह पहेली हर बार चलाने पर बदल जाती
          है। \n\nआप चुनौती को हल करने के लिए नियमबद्ध ब्लॉक ( `इफ` या `इफ/एल्स`)
          का उपयोग करना चाहेंगे।"
        courseD_bee_conditionals8_b: |-
          यह पहेली पेचीदा है, क्योंकि आप केवल एक एकल सापेक्ष के साथ खाली वर्ग, मधुरस, _और_ शहद नहीं देख सकते।

          अपने रास्ते के अंत में केवल मधुरस और शहद देखें।
      courseD_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: क्या आप ऐसा रास्ता ढूंढ सकते हैं, जो
          बिना किन्हीं पेड़ों से टकराए प्रत्येक फूल और मधु के छत्ते के पास पहुंचता
          हो? सबसे अच्छा रास्ता घुमावदार है।
        courseD_bee_conditionals_challenge1_b: इस पहेली में, प्रत्येक स्थान के पास
          फूल, मधु का छत्ता हो सकता है या कुछ नहीं भी हो सकता है।  इसका अर्थ है कि
          आप प्रत्येक वर्ग में  अपने नियमबद्ध `इफ/एल्स` को दोहरा सकते हैं।
      courseD_bee_conditionals_challenge1_2018:
        courseD_bee_conditionals_challenge1_a: क्या आप ऐसा रास्ता ढूंढ सकते हैं, जो
          बिना किन्हीं पेड़ों से टकराए प्रत्येक फूल और मधु के छत्ते के पास पहुंचता
          हो? सबसे अच्छा रास्ता घुमावदार है।
        courseD_bee_conditionals_challenge1_b: इस पहेली में, प्रत्येक स्थान के पास
          फूल, मधु का छत्ता हो सकता है या कुछ नहीं भी हो सकता है।  इसका अर्थ है कि
          आप प्रत्येक वर्ग में  अपने नियमबद्ध `इफ/एल्स` को दोहरा सकते हैं।
      courseD_bee_conditionals_challenge1_2019:
        courseD_bee_conditionals_challenge1_a: क्या आप ऐसा रास्ता ढूंढ सकते हैं, जो
          बिना किन्हीं पेड़ों से टकराए प्रत्येक फूल और मधु के छत्ते के पास पहुंचता
          हो? सबसे अच्छा रास्ता घुमावदार है।
        courseD_bee_conditionals_challenge1_b: इस पहेली में, प्रत्येक स्थान के पास
          फूल, मधु का छत्ता हो सकता है या कुछ नहीं भी हो सकता है।  इसका अर्थ है कि
          आप प्रत्येक वर्ग में  अपने नियमबद्ध `इफ/एल्स` को दोहरा सकते हैं।
      courseD_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          बिल्कुल वैसे, जैसे `जब मधुरस > 0` के अंदर कोड, `यदि फूल पर` ब्लॉक्स केवल तभी चलेगा, यदि मधुमक्खी फूल पर हो।   इतना अंतर है कि अंदर का कोड बार-बार चलेगा, जब तक मधुरस नहीं बचेगा।  यह पैटर्न आजमाएं:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_conditionals_challenge2_2018:
        courseD_bee_conditionals_challenge1_b: |-
          बिल्कुल वैसे, जैसे `जब मधुरस > 0` के अंदर कोड, `यदि फूल पर` ब्लॉक्स केवल तभी चलेगा, यदि मधुमक्खी फूल पर हो।   इतना अंतर है कि अंदर का कोड बार-बार चलेगा, जब तक मधुरस नहीं बचेगा।  यह पैटर्न आजमाएं:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_conditionals_challenge2_2019:
        courseD_bee_conditionals_challenge1_b: |-
          बिल्कुल वैसे, जैसे `जब मधुरस > 0` के अंदर कोड, `यदि फूल पर` ब्लॉक्स केवल तभी चलेगा, यदि मधुमक्खी फूल पर हो।   इतना अंतर है कि अंदर का कोड बार-बार चलेगा, जब तक मधुरस नहीं बचेगा।  यह पैटर्न आजमाएं:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_a: इस प्रोग्राम का पहला आधा भाग क्या काम
          करता है? इस बारे में सोचें कि मधुमक्खी को पीछे की ओर मूव करने की जरूरत क्यों
          है। मधुमक्खी जब हर बार फूल की ओर मूव करती है तो कितना मधुरस एकत्र कर लेती
          है?
        courseD_bee_debugging_challenge1_b: On the way back, have the bee follow the
          same pattern. How much honey does the bee need to make each time it moves
          over a honey comb?
        courseD_bee_debugging_challenge1_c: |-
          After the bee makes it to the bottom row, have it repeat these commands:

          -   Repeat 2 times:
              -   Move forward
              -   Make 3 honey
          -   Move backward
      courseD_bee_debugging_challenge1a:
        courseD_bee_debugging_challenge1_a: इस प्रोग्राम का पहला आधा भाग क्या काम
          करता है? इस बारे में सोचें कि मधुमक्खी को पीछे की ओर मूव करने की जरूरत क्यों
          है। मधुमक्खी जब हर बार फूल की ओर मूव करती है तो कितना मधुरस एकत्र कर लेती
          है?
        courseD_bee_debugging_challenge1_b: इस पहेली को हल करने के लिए, शहद, जो यह
          मधुरस एकत्र करते समय करती है, बनाने के लिए समान पैटर्न का अनुसरण करने के
          लिए मधुमक्खी को सक्रिय करें।
        courseD_bee_debugging_challenge1_c: |-
          जब मधुमक्खी इसे निचली पंक्ति तक ले आए, तो इन कमांड्स को दोहराएं:

          <xml><block type="controls_repeat">
                              <title name="TIMES">2</title>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_honey"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveBackward</title>
                                </block>
                              </next>
                            </block></xml>
      courseD_bee_nestedLoops1:
        courseD_bee_nestedLoops1_a: काम नहीं कर रहा है?  यह देखने के लिए लाइन दर लाइन
          क्या होता है, "स्टेप" बटन का उपयोग करने का प्रयास करें।
        courseD_bee_nestedLoops1_b: पहले वर्ग की एक भुजा के लिए कोड लिखने का प्रयास
          करें। क्या आप सारा मधुरस प्राप्त करने के लिए इसे लूप कर सकते हैं?
        courseD_bee_nestedLoops1_c: जब आप फूल वाले वर्ग पर हों तो `मधुरस प्राप्त करें`
          ब्लॉक का उपयोग करना याद रखें।
      courseD_bee_nestedLoops1_2018:
        courseD_bee_nestedLoops1_a: काम नहीं कर रहा है?  यह देखने के लिए लाइन दर लाइन
          क्या होता है, "स्टेप" बटन का उपयोग करने का प्रयास करें।
        courseD_bee_nestedLoops1_b: पहले वर्ग की एक भुजा के लिए कोड लिखने का प्रयास
          करें। क्या आप सारा मधुरस प्राप्त करने के लिए इसे लूप कर सकते हैं?
        courseD_bee_nestedLoops1_c: जब आप फूल वाले वर्ग पर हों तो `मधुरस प्राप्त करें`
          ब्लॉक का उपयोग करना याद रखें।
      courseD_bee_nestedLoops1_2019:
        courseD_bee_nestedLoops1_a: काम नहीं कर रहा है?  यह देखने के लिए लाइन दर लाइन
          क्या होता है, "स्टेप" बटन का उपयोग करने का प्रयास करें।
        courseD_bee_nestedLoops1_b: पहले वर्ग की एक भुजा के लिए कोड लिखने का प्रयास
          करें। क्या आप सारा मधुरस प्राप्त करने के लिए इसे लूप कर सकते हैं?
        courseD_bee_nestedLoops1_c: जब आप फूल वाले वर्ग पर हों तो `मधुरस प्राप्त करें`
          ब्लॉक का उपयोग करना याद रखें।
      courseD_bee_nestedLoops1a:
        courseD_bee_nestedLoops1_a: काम नहीं कर रहा है?  यह देखने के लिए लाइन दर लाइन
          क्या होता है, "स्टेप" बटन का उपयोग करने का प्रयास करें।
        courseD_bee_nestedLoops1_c: जब आप फूल वाले वर्ग पर हों तो `मधुरस प्राप्त करें`
          ब्लॉक का उपयोग करना याद रखें।
      courseD_bee_nestedLoops1a_2018:
        courseD_bee_nestedLoops1_a: काम नहीं कर रहा है?  यह देखने के लिए लाइन दर लाइन
          क्या होता है, "स्टेप" बटन का उपयोग करने का प्रयास करें।
        courseD_bee_nestedLoops1_c: जब आप फूल वाले वर्ग पर हों तो `मधुरस प्राप्त करें`
          ब्लॉक का उपयोग करना याद रखें।
      courseD_bee_nestedLoops1a_2019:
        courseD_bee_nestedLoops1_a: काम नहीं कर रहा है?  यह देखने के लिए लाइन दर लाइन
          क्या होता है, "स्टेप" बटन का उपयोग करने का प्रयास करें।
        courseD_bee_nestedLoops1_c: जब आप फूल वाले वर्ग पर हों तो `मधुरस प्राप्त करें`
          ब्लॉक का उपयोग करना याद रखें।
      courseD_bee_nestedLoops2:
        courseD_bee_nestedLoops2_a: इस पहेली को हल करने के लिए, आपको दूसरी के अंदर
          एक `दोहराएं` लूप को नेस्ट करने की जरूरत होगी।
        courseD_bee_nestedLoops2_b: क्या आप पता नहीं लगा पा रहे हैं कि लूप्स को कहां
          रखना है, तो कागज़ पर कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
        courseD_bee_nestedLoops2_c: याद रखें कि आप लूप के अंदर एक से अधिक ब्लॉक रख
          सकते हैं।
      courseD_bee_nestedLoops2_2018:
        courseD_bee_nestedLoops2_a: इस पहेली को हल करने के लिए, आपको दूसरी के अंदर
          एक `दोहराएं` लूप को नेस्ट करने की जरूरत होगी।
        courseD_bee_nestedLoops2_b: क्या आप पता नहीं लगा पा रहे हैं कि लूप्स को कहां
          रखना है, तो कागज़ पर कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
        courseD_bee_nestedLoops2_c: याद रखें कि आप लूप के अंदर एक से अधिक ब्लॉक रख
          सकते हैं।
      courseD_bee_nestedLoops2_2019:
        courseD_bee_nestedLoops2_a: इस पहेली को हल करने के लिए, आपको दूसरी के अंदर
          एक `दोहराएं` लूप को नेस्ट करने की जरूरत होगी।
        courseD_bee_nestedLoops2_b: क्या आप पता नहीं लगा पा रहे हैं कि लूप्स को कहां
          रखना है, तो कागज़ पर कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
        courseD_bee_nestedLoops2_c: याद रखें कि आप लूप के अंदर एक से अधिक ब्लॉक रख
          सकते हैं।
      courseD_bee_nestedLoops7:
        courseD_bee_nestedLoops7_a: आपको दूसरी `दोहराएं` के अंदर `मधुरस प्राप्त करें`
          को दोहराने की जरूरत होगी, जिसके अंदर भी `आगे की ओर मूव करें` ब्लॉक है।
        courseD_bee_nestedLoops7_b: इस पहेली को हल करने के लिए आपको उपलब्ध सभी तीन
          `दोहराएं` ब्लॉक्स का उपयोग करने की जरूरत होगी।
        courseD_bee_nestedLoops7_c: "अपने ब्लॉक्स को तीन डीप नेस्ट करें, इस प्रकार:\n\n-
          \  दोहराएं 4 \n    -   दोहराएं 3\n        -   दोहराएं 12\n            -
          \  मधुरस प्राप्त करें\n        -   आगे की ओर मूव करें\n    -   दाएं मुड़ें"
      courseD_bee_nestedLoops7_2018:
        courseD_bee_nestedLoops7_a: आपको दूसरी `दोहराएं` के अंदर `मधुरस प्राप्त करें`
          को दोहराने की जरूरत होगी, जिसके अंदर भी `आगे की ओर मूव करें` ब्लॉक है।
        courseD_bee_nestedLoops7_b: इस पहेली को हल करने के लिए आपको उपलब्ध सभी तीन
          `दोहराएं` ब्लॉक्स का उपयोग करने की जरूरत होगी।
        courseD_bee_nestedLoops7_c: "अपने ब्लॉक्स को तीन डीप नेस्ट करें, इस प्रकार:\n\n-
          \  दोहराएं 4 \n    -   दोहराएं 3\n        -   दोहराएं 12\n            -
          \  मधुरस प्राप्त करें\n        -   आगे की ओर मूव करें\n    -   दाएं मुड़ें"
      courseD_bee_nestedLoops7_2019:
        courseD_bee_nestedLoops7_a: आपको दूसरी `दोहराएं` के अंदर `मधुरस प्राप्त करें`
          को दोहराने की जरूरत होगी, जिसके अंदर भी `आगे की ओर मूव करें` ब्लॉक है।
        courseD_bee_nestedLoops7_b: इस पहेली को हल करने के लिए आपको उपलब्ध सभी तीन
          `दोहराएं` ब्लॉक्स का उपयोग करने की जरूरत होगी।
        courseD_bee_nestedLoops7_c: "अपने ब्लॉक्स को तीन डीप नेस्ट करें, इस प्रकार:\n\n-
          \  दोहराएं 4 \n    -   दोहराएं 3\n        -   दोहराएं 12\n            -
          \  मधुरस प्राप्त करें\n        -   आगे की ओर मूव करें\n    -   दाएं मुड़ें"
      courseD_bounce_events10s_2018:
        courseD_bounce_events10s_a: |-
          You should have both of these events in your code:

          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">swish</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">whistle</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block></xml>
      courseD_bounce_events10s_2019:
        courseD_bounce_events10s_a: |-
          You should have both of these events in your code:

          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">swish</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">whistle</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block></xml>
      courseD_bounce_events11s_2018:
        courseD_bounce_events11s_a: You will need to throw a ball when the game starts,
          when you hit the basket, and when the hand misses the ball.
      courseD_bounce_events11s_2019:
        courseD_bounce_events11s_a: You will need to throw a ball when the game starts,
          when you hit the basket, and when the hand misses the ball.
      courseD_bounce_events12s_2018:
        courseD_bounce_events12s_a: You can speed up the basketball or the hand by
          attaching those blocks to the `when run` event.
        courseD_bounce_events12s_b: Try making each shot worth 2 points and changing
          the team logo to the one from your home town!
      courseD_bounce_events12s_2019:
        courseD_bounce_events12s_a: You can speed up the basketball or the hand by
          attaching those blocks to the `when run` event.
        courseD_bounce_events12s_b: Try making each shot worth 2 points and changing
          the team logo to the one from your home town!
      courseD_bounce_events1s_2018:
        courseD_bounce_events1s_a: |-
          You need to add the `move left` block to the `when left arrow` event to make this game work:

           <xml> <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>

             </xml>
        courseD_bounce_events1s_b: Don't forget to press "Run" and get the hand to
          the basket in order to solve this puzzle.
      courseD_bounce_events1s_2019:
        courseD_bounce_events1s_a: |-
          You need to add the `move left` block to the `when left arrow` event to make this game work:

           <xml> <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>

             </xml>
        courseD_bounce_events1s_b: Don't forget to press "Run" and get the hand to
          the basket in order to solve this puzzle.
      courseD_bounce_events2s_2018:
        courseD_bounce_events2s_a: |-
          You will need to have two sets of `move` events coded for this to work:

          <xml>
            <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>
            <block type="bounce_whenRight" deletable="false" x="180" y="20">
              <next>
                <block type="bounce_moveRight"/>
              </next>
            </block>
          </xml>
      courseD_bounce_events2s_2019:
        courseD_bounce_events2s_a: |-
          You will need to have two sets of `move` events coded for this to work:

          <xml>
            <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>
            <block type="bounce_whenRight" deletable="false" x="180" y="20">
              <next>
                <block type="bounce_moveRight"/>
              </next>
            </block>
          </xml>
      courseD_bounce_events5s_2018:
        courseD_bounce_events5s_a: You do not need to move the hand to solve this
          puzzle.
        courseD_bounce_events5s_b: |-
          Make sure you have added this code to your workspace:

          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events5s_2019:
        courseD_bounce_events5s_a: You do not need to move the hand to solve this
          puzzle.
        courseD_bounce_events5s_b: |-
          Make sure you have added this code to your workspace:

          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events6s_2018:
        courseD_bounce_events6s_a: |-
          Do you have an event that looks like this?

          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: If you've written the code correctly, you don't
          have to move the hand to win.
      courseD_bounce_events6s_2019:
        courseD_bounce_events6s_a: |-
          Do you have an event that looks like this?

          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: If you've written the code correctly, you don't
          have to move the hand to win.
      courseD_bounce_events7s_2018:
        courseD_bounce_events7s_a: You can add sounds in more places if you feel like
          it!
      courseD_bounce_events7s_2019:
        courseD_bounce_events7s_a: You can add sounds in more places if you feel like
          it!
      courseD_collector_debugging1:
        courseD_collector_debugging1_a: |-
          यह देखने के लिए पहले स्टेप में सब ठीक है, "स्टेप" बटन का उपयोग करें

          सेकंड के बारे में क्या कहेंगे?

          यह कहां गलत हो जाता है?
        courseD_collector_debugging1_b: क्या आप कोई ऐसे पैटर्न देखते हैं, जिन्हें
          `दोहराएं` लूप का उपयोग करते हुए और आसान बनाया जा सके?
        courseD_collector_debugging1_c: जब आप खजाने की ओर मूव कर लें तो इसे लेने के
          लिए `एकत्र करें` ब्लॉक का उपयोग करना याद रखें।
      courseD_collector_debugging10_predict1:
        courseD_collector_debugging9_a: इस समस्या को हल करने के कई तरीके हैं...लेकिन
          उन सभी में मोड़ शामिल हैं!
        courseD_collector_debugging9_b: पता लगाएं कि आप पहेली को कैसे हल करेंगे, फिर
          जो भी आपके दिमाग में है, कोड का मिलान करने का प्रयास करने के लिए कदम-दर-कदम
          मूव करें।
      courseD_collector_debugging1a_2018:
        courseD_collector_debugging1_a: |-
          यह देखने के लिए पहले स्टेप में सब ठीक है, "स्टेप" बटन का उपयोग करें

          सेकंड के बारे में क्या कहेंगे?

          यह कहां गलत हो जाता है?
        courseD_collector_debugging1_c: जब आप खजाने की ओर मूव कर लें तो इसे लेने के
          लिए `एकत्र करें` ब्लॉक का उपयोग करना याद रखें।
      courseD_collector_debugging1a_2019:
        courseD_collector_debugging1_a: |-
          यह देखने के लिए पहले स्टेप में सब ठीक है, "स्टेप" बटन का उपयोग करें

          सेकंड के बारे में क्या कहेंगे?

          यह कहां गलत हो जाता है?
        courseD_collector_debugging1_c: जब आप खजाने की ओर मूव कर लें तो इसे लेने के
          लिए `एकत्र करें` ब्लॉक का उपयोग करना याद रखें।
      courseD_collector_debugging2:
        courseD_collector_debugging2_a: |-
          यह देखने के लिए पहले स्टेप में सब ठीक है, "स्टेप" बटन का उपयोग करें

          सेकंड के बारे में क्या कहेंगे?

          यह कहां गलत हो जाता है?
        courseD_collector_debugging2_b: क्या आप कोई ऐसे पैटर्न देखते हैं, जिन्हें
          `दोहराएं` लूप का उपयोग करते हुए और आसान बनाया जा सके?
        courseD_collector_debugging2_c: इस पैटर्न की एक भुजा के लिए खजाना एकत्र करने
          का प्रयास करें। क्या आप अन्य दो भुजाओं पर खजाना एकत्र करने के लिए इसे दोहरा
          सकते हैं?
      courseD_collector_debugging2a_2018:
        courseD_collector_debugging2a_a: |-
          यह देखने के लिए पहले स्टेप में सब ठीक है, "स्टेप" बटन का उपयोग करें

          सेकंड के बारे में क्या कहेंगे?

          यह कहां गलत हो जाता है?
        courseD_collector_debugging2a_c: |-
          What happens?

          What is supposed to happen?

          What does that tell you?
      courseD_collector_debugging2a_2019:
        courseD_collector_debugging2a_a: |-
          यह देखने के लिए पहले स्टेप में सब ठीक है, "स्टेप" बटन का उपयोग करें

          सेकंड के बारे में क्या कहेंगे?

          यह कहां गलत हो जाता है?
        courseD_collector_debugging2a_c: |-
          What happens?

          What is supposed to happen?

          What does that tell you?
      courseD_collector_debugging3:
        courseD_collector_debugging3_a: क्या कोई ऐसा स्थान है, जहां लॉरेल कुछ ऐसा
          करती है, जिसका कोई अर्थ नहीं निकलता? जब आप उन ब्लॉक्स को बदलते हैं तो क्या
          होता है?
        courseD_collector_debugging3_b: नेस्टड लूप्स का उपयोग करते हुए कोड को सरल
          बनाने का प्रयास करें।
      courseD_collector_debugging3a_2018:
        courseD_collector_debugging3_a: क्या कोई ऐसा स्थान है, जहां लॉरेल कुछ ऐसा
          करती है, जिसका कोई अर्थ नहीं निकलता? जब आप उन ब्लॉक्स को बदलते हैं तो क्या
          होता है?
      courseD_collector_debugging3a_2019:
        courseD_collector_debugging3_a: क्या कोई ऐसा स्थान है, जहां लॉरेल कुछ ऐसा
          करती है, जिसका कोई अर्थ नहीं निकलता? जब आप उन ब्लॉक्स को बदलते हैं तो क्या
          होता है?
      courseD_collector_debugging4:
        courseD_collector_debugging4_a: |-
          लगातार कई बार डीबगिंग प्रक्रियाओं का उपयोग करने के प्रयास करें।

          पहली समस्या का क्या कारण है?

          जब वह समस्या ठीक हो जाती है, तो क्या गलत होता है?
        courseD_collector_debugging4_b: |-
          यदि आपको यह पता लगाने में मुश्किल हो रही है कि सीढ़ी स्टेप पैटर्न कैसे बनाना है, तो इसे अपनी उंगली से खींचने और फिर कमांड्स को ज़ोर से बोलने का प्रयास करें।

          मोड़ों की दिशा दिखाना न भूलें!
        courseD_collector_debugging4_c: इस लूप में केवल एक ब्लॉक गायब है। क्या आप
          पता लगा सकते हैं कि वह कौन-सा है?
      courseD_collector_debugging4a_2018:
        courseD_collector_debugging4_a: |-
          लगातार कई बार डीबगिंग प्रक्रियाओं का उपयोग करने के प्रयास करें।

          पहली समस्या का क्या कारण है?

          जब वह समस्या ठीक हो जाती है, तो क्या गलत होता है?
        courseD_collector_debugging4_b: |-
          यदि आपको यह पता लगाने में मुश्किल हो रही है कि सीढ़ी स्टेप पैटर्न कैसे बनाना है, तो इसे अपनी उंगली से खींचने और फिर कमांड्स को ज़ोर से बोलने का प्रयास करें।

          मोड़ों की दिशा दिखाना न भूलें!
      courseD_collector_debugging4a_2019:
        courseD_collector_debugging4_a: |-
          लगातार कई बार डीबगिंग प्रक्रियाओं का उपयोग करने के प्रयास करें।

          पहली समस्या का क्या कारण है?

          जब वह समस्या ठीक हो जाती है, तो क्या गलत होता है?
        courseD_collector_debugging4_b: |-
          यदि आपको यह पता लगाने में मुश्किल हो रही है कि सीढ़ी स्टेप पैटर्न कैसे बनाना है, तो इसे अपनी उंगली से खींचने और फिर कमांड्स को ज़ोर से बोलने का प्रयास करें।

          मोड़ों की दिशा दिखाना न भूलें!
      courseD_collector_debugging5:
        courseD_collector_debugging5_a: |-
          केवल पहली लूप को देखकर शुरुआत करें।

          यह क्या करती है?

          यह क्या करने के लिए है?

          वह आपको क्या बताती है?
        courseD_collector_debugging5_b: जब आपके पास उस तरीके से पहली लूप हो, जैसा
          आप इसे चाहते हैं, तो आपके कोड में क्या बाकी रहता है?
      courseD_collector_debugging5a_2018:
        courseD_collector_debugging5a_a: |-
          What does it do?

          What is it supposed to do?

          What does that tell you?
        courseD_collector_debugging5a_b: Once you have the first line of treasure
          collected, what is left over in your code?
      courseD_collector_debugging5a_2019:
        courseD_collector_debugging5a_a: |-
          What does it do?

          What is it supposed to do?

          What does that tell you?
        courseD_collector_debugging5a_b: Once you have the first line of treasure
          collected, what is left over in your code?
      courseD_collector_debugging6:
        courseD_collector_debugging6_a: "\"स्टेप\" बटन का उपयोग करते हुए कोड चलाने
          के प्रयास करें।  \n\nक्या पहले स्टेप में सब कुछ ठीक है?\n\nसेकंड के बारे
          में क्या कहेंगे? चीज़ें कहां गलत हो जाती हैं?"
        courseD_collector_debugging6_b: ऐसा प्रतीत होता है कि सभी सही स्टेप्स यहां
          हैं, बस आपको उनमें से ज्यादातर की जरूरत है। आप कई बार `एकत्र करें` क्रिया
          को कैसे दोहरा सकते हैं?
      courseD_collector_debugging6a_2018:
        courseD_collector_debugging6_a: "\"स्टेप\" बटन का उपयोग करते हुए कोड चलाने
          के प्रयास करें।  \n\nक्या पहले स्टेप में सब कुछ ठीक है?\n\nसेकंड के बारे
          में क्या कहेंगे? चीज़ें कहां गलत हो जाती हैं?"
        courseD_collector_debugging6_b: It looks like all of the blocks you need are
          in the workspace. Try clicking "start over" if things get too confusing.
      courseD_collector_debugging6a_2019:
        courseD_collector_debugging6_a: "\"स्टेप\" बटन का उपयोग करते हुए कोड चलाने
          के प्रयास करें।  \n\nक्या पहले स्टेप में सब कुछ ठीक है?\n\nसेकंड के बारे
          में क्या कहेंगे? चीज़ें कहां गलत हो जाती हैं?"
        courseD_collector_debugging6_b: It looks like all of the blocks you need are
          in the workspace. Try clicking "start over" if things get too confusing.
      courseD_collector_debugging8:
        courseD_collector_debugging8_a: क्या आपको ऐसा पैटर्न दिखाई दे रहा है, जिसे
          आप लूप के साथ सरल बना सकते हैं?
        courseD_collector_debugging8_b: इस कोड को और छोटा बनाने के लिए नेस्टड लूप
          का उपयोग करने का प्रयास करें।
      courseD_collector_debugging9:
        courseD_collector_debugging9_a: इस समस्या को हल करने के कई तरीके हैं...लेकिन
          उन सभी में मोड़ शामिल हैं!
        courseD_collector_debugging9_b: पता लगाएं कि आप पहेली को कैसे हल करेंगे, फिर
          जो भी आपके दिमाग में है, कोड का मिलान करने का प्रयास करने के लिए कदम-दर-कदम
          मूव करें।
      courseD_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_a: "Start by collecting just **two**
          gems from each of the first **two** piles.\n\n![](<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png>)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Next, collect the remaining gems
          in this row.\n\n![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png>)\nAdd these blocks to your program.\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Finally, collect the remaining
          treasure. Add these blocks to your program.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">turnRight</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Here is the complete solution for this puzzle.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">4</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="controls_repeat">
                          <title name="TIMES">2</title>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveForward</title>
                              <next>
                                <block type="controls_repeat">
                                  <title name="TIMES">2</title>
                                  <statement name="DO">
                                    <block type="collector_collect"/>
                                  </statement>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: यह न भूलें कि आप एकल कमांड या लंबे
          पैटर्न को `दोहरा` सकते हैं। यहां तक कि आप `दोहराएं` ब्लॉक को भी `दोहरा`
          सकते हैं!
        courseD_bee_nested_loops_challenge2_b: To get all 4 gems, first use a loop
          to move away from the center. Turn left or right, then use a nested loop
          to move from the first pile of treasure to the second. If you repeat the
          nested loop enough times, the collector will move around the _entire_ cave!
        courseD_bee_nested_loops_challenge2_c: The shortest program that reaches all
          the treasure uses only one `collect` block and two turns.
        courseD_bee_nested_loops_challenge2_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018:
        courseD_bee_nested_loops_challenge2_a: यह न भूलें कि आप एकल कमांड या लंबे
          पैटर्न को `दोहरा` सकते हैं। यहां तक कि आप `दोहराएं` ब्लॉक को भी `दोहरा`
          सकते हैं!
        courseD_bee_nested_loops_challenge2_b: To get all 4 gems, first use a loop
          to move away from the center. Turn left or right, then use a nested loop
          to move from the first pile of treasure to the second. If you repeat the
          nested loop enough times, the collector will move around the _entire_ cave!
        courseD_bee_nested_loops_challenge2_c: The shortest program that reaches all
          the treasure uses only one `collect` block and two turns.
        courseD_bee_nested_loops_challenge2_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2019:
        courseD_bee_nested_loops_challenge2_a: यह न भूलें कि आप एकल कमांड या लंबे
          पैटर्न को `दोहरा` सकते हैं। यहां तक कि आप `दोहराएं` ब्लॉक को भी `दोहरा`
          सकते हैं!
        courseD_bee_nested_loops_challenge2_b: To get all 4 gems, first use a loop
          to move away from the center. Turn left or right, then use a nested loop
          to move from the first pile of treasure to the second. If you repeat the
          nested loop enough times, the collector will move around the _entire_ cave!
        courseD_bee_nested_loops_challenge2_c: The shortest program that reaches all
          the treasure uses only one `collect` block and two turns.
        courseD_bee_nested_loops_challenge2_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2a:
        courseD_collector_nested_loops_challenge2a_a: यह न भूलें कि आप एकल कमांड या
          लंबे पैटर्न को `दोहरा` सकते हैं। यहां तक कि आप `दोहराएं` ब्लॉक को भी `दोहरा`
          सकते हैं!
        courseD_collector_nested_loops_challenge2a_b: क्या आप पता लगा सकते हैं कि
          दो प्राप्त करने में जितने ब्लॉक्स लगते हैं, उसके मुकाबले कोई भी और ब्लॉक
          का उपयोग किए बिना सबी चार रतन कैसे प्राप्त किए जा सकते हैं?
      courseD_collector_ramp10:
        courseD_artist_ramp10_a: |-
          हर भुजा के लिए चार `आगे की ओर मूव करें` ब्लॉक्स का उपयोग करने की बजाय, `दोहराएं` लूप के अंदर एक `आगे की ओर मूव करें` ब्लॉक रखने का प्रयास करें, इस तरह से:

          <xml><block type="controls_repeat">
                                                      <title name="TIMES">4</title>
                                                      <statement name="DO">
                                                        <block type="maze_moveForward"/>
                                                      </statement>
                                                    </block></xml>
        courseD_artist_ramp10_b: खजाने का एक भाग एकत्र करना न भूलें, फिर वर्ग की नई
          भुजा शुरू करने के लिए मुड़ें!
        courseD_artist_ramp10_c: यदि आप अपने कोड को और आसान बनाना चाहते हैं, तो आप
          एक लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड लूप** कहा जाता है।
      courseD_collector_ramp8:
        courseD_collector_ramp8_a: जब आप खजाने के साथ वर्ग तक पहुंच जाएं, तो इसे लेने
          के लिए `एकत्र करें` का उपयोग करें। इस पहेली के लिए, आपको एक से अधिक बार
          खजाना एकत्र करने की जरूरत होगी!
        courseD_collector_ramp8_b: यदि आप अपने कोड को और आसान बनाना चाहते हैं, तो
          आप वास्तव में एक `दोहराएं` लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड
          लूप** कहा जाता है।
      courseD_collector_ramp9:
        courseD_collector_ramp9_a: पहले लॉरेल को खजाने की तरफ मूव करके शुरू करें,
          फिर इसे एकत्र करें। क्या आप दूसरा ढेर प्राप्त करने के लिए इस क्रम को दोहरा
          सकते हैं?
        courseD_collector_ramp9_b: यदि आप अपने कोड को और आसान बनाना चाहते हैं, तो
          आप एक दोहराएं लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड लूप** कहा जाता
          है।
      courseD_farmer_condLoops1:
        courseD_farmer_condLoops1_a: आपको दोहराएं लूप का उपयोग करते हुए, 5 बार कॉर्न
          खोजने की जरूरत होगी।
        courseD_farmer_condLoops1_b: "`यदि कॉर्न पर` ब्लॉक का उपयोग करना सुनिश्चित
          करें या आप कुछ ऐसा लेने का प्रयास कर सकते हैं, जो वहां नहीं है!"
      courseD_farmer_condLoops1_2018:
        courseD_farmer_condLoops1_a: आपको दोहराएं लूप का उपयोग करते हुए, 5 बार कॉर्न
          खोजने की जरूरत होगी।
        courseD_farmer_condLoops1_b: "`यदि कॉर्न पर` ब्लॉक का उपयोग करना सुनिश्चित
          करें या आप कुछ ऐसा लेने का प्रयास कर सकते हैं, जो वहां नहीं है!"
      courseD_farmer_condLoops1_2019:
        courseD_farmer_condLoops1_a: आपको दोहराएं लूप का उपयोग करते हुए, 5 बार कॉर्न
          खोजने की जरूरत होगी।
        courseD_farmer_condLoops1_b: "`यदि कॉर्न पर` ब्लॉक का उपयोग करना सुनिश्चित
          करें या आप कुछ ऐसा लेने का प्रयास कर सकते हैं, जो वहां नहीं है!"
      courseD_farmer_condLoops2:
        courseD_farmer_condLoops2_a: ऐसा करने का सबसे अच्छा तरीका `इफ` स्टेटमेंट्स
          को एक को दूसरी के अंदर रखकर नेस्ट करना है।
        courseD_farmer_condLoops2_b: इस पहेली के लिए, आपके पास एक `इफ/एल्स` स्टेटमेंट
          और एक प्लेन `इफ` स्टेटमेंट होनी चाहिए।
        courseD_farmer_condLoops2_c: |-
          आपकी `इफ` स्टेटमेंट इससे काफी मिलती-जुलती हो सकती है:

          -   यदि कॉर्न पर है
              -   कॉर्न लें
          -   नहीं तो
              -   यदि लेट्स पर है
                  -   लेट्स लें

          यदि वहां कुछ नहीं है, तो आप कुछ नहीं लेंगे!
      courseD_farmer_condLoops2_2018:
        courseD_farmer_condLoops2_a: ऐसा करने का सबसे अच्छा तरीका `इफ` स्टेटमेंट्स
          को एक को दूसरी के अंदर रखकर नेस्ट करना है।
        courseD_farmer_condLoops2_b: इस पहेली के लिए, आपके पास एक `इफ/एल्स` स्टेटमेंट
          और एक प्लेन `इफ` स्टेटमेंट होनी चाहिए।
        courseD_farmer_condLoops2_c: |-
          आपकी `इफ` स्टेटमेंट इससे काफी मिलती-जुलती हो सकती है:

          -   यदि कॉर्न पर है
              -   कॉर्न लें
          -   नहीं तो
              -   यदि लेट्स पर है
                  -   लेट्स लें

          यदि वहां कुछ नहीं है, तो आप कुछ नहीं लेंगे!
      courseD_farmer_condLoops2_2019:
        courseD_farmer_condLoops2_a: ऐसा करने का सबसे अच्छा तरीका `इफ` स्टेटमेंट्स
          को एक को दूसरी के अंदर रखकर नेस्ट करना है।
        courseD_farmer_condLoops2_b: इस पहेली के लिए, आपके पास एक `इफ/एल्स` स्टेटमेंट
          और एक प्लेन `इफ` स्टेटमेंट होनी चाहिए।
        courseD_farmer_condLoops2_c: |-
          आपकी `इफ` स्टेटमेंट इससे काफी मिलती-जुलती हो सकती है:

          -   यदि कॉर्न पर है
              -   कॉर्न लें
          -   नहीं तो
              -   यदि लेट्स पर है
                  -   लेट्स लें

          यदि वहां कुछ नहीं है, तो आप कुछ नहीं लेंगे!
      courseD_farmer_condLoops3:
        courseD_farmer_condLoops3_a: |-
          सभी वस्तुओं को लेने के लिए, तीन डीप `इफ` स्टेटमेंट्स को नेस्ट करने का प्रयास करें।

          इसका अर्थ है कि आपको दूसरी के अंदर एक `इफ` स्टेटमेंट रखनी चाहिए, फिर दूसरी के अंदर तीसरी `इफ` स्टेटमेंट रखें।
        courseD_farmer_condLoops3_b: इस पहेली के लिए, आपके पास दो `इफ/एल्स` स्टेटमेंट्स
          और एक प्लेन `इफ` स्टेटमेंट होनी चाहिए।
      courseD_farmer_condLoops3_2018:
        courseD_farmer_condLoops3_a: |-
          सभी वस्तुओं को लेने के लिए, तीन डीप `इफ` स्टेटमेंट्स को नेस्ट करने का प्रयास करें।

          इसका अर्थ है कि आपको दूसरी के अंदर एक `इफ` स्टेटमेंट रखनी चाहिए, फिर दूसरी के अंदर तीसरी `इफ` स्टेटमेंट रखें।
        courseD_farmer_condLoops3_b: इस पहेली के लिए, आपके पास दो `इफ/एल्स` स्टेटमेंट्स
          और एक प्लेन `इफ` स्टेटमेंट होनी चाहिए।
      courseD_farmer_condLoops3_2019:
        courseD_farmer_condLoops3_a: |-
          सभी वस्तुओं को लेने के लिए, तीन डीप `इफ` स्टेटमेंट्स को नेस्ट करने का प्रयास करें।

          इसका अर्थ है कि आपको दूसरी के अंदर एक `इफ` स्टेटमेंट रखनी चाहिए, फिर दूसरी के अंदर तीसरी `इफ` स्टेटमेंट रखें।
        courseD_farmer_condLoops3_b: इस पहेली के लिए, आपके पास दो `इफ/एल्स` स्टेटमेंट्स
          और एक प्लेन `इफ` स्टेटमेंट होनी चाहिए।
      courseD_farmer_condLoops4:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          किसी को नहीं पता कि हर अंकुर में से लेट्स के कितने हेड उग जाएंगे।

          तब तक लेना जारी रखने के लिए `जब वहां लेट्स हो` लूप का उपयोग करें, जब तक प्रत्येक पीस एकत्र न कर लिया जाए।
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "`व्हाइल` लूप खाली स्थानों
          को भी संभाल लेगी। चूंकि वहां लेट्स नहीं है, यह इसे नहीं लेगी और कोड को आगे
          बढ़ने देगी।"
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: आप सभी फसलों को परखने के
          लिए `जब आगे रास्ता हो` लूप या `दोहराएं` लूप का उपयोग कर सकते हैं।
      courseD_farmer_condLoops4_2018:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          किसी को नहीं पता कि हर अंकुर में से लेट्स के कितने हेड उग जाएंगे।

          तब तक लेना जारी रखने के लिए `जब वहां लेट्स हो` लूप का उपयोग करें, जब तक प्रत्येक पीस एकत्र न कर लिया जाए।
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "`व्हाइल` लूप खाली स्थानों
          को भी संभाल लेगी। चूंकि वहां लेट्स नहीं है, यह इसे नहीं लेगी और कोड को आगे
          बढ़ने देगी।"
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: आप सभी फसलों को परखने के
          लिए `जब आगे रास्ता हो` लूप या `दोहराएं` लूप का उपयोग कर सकते हैं।
      courseD_farmer_condLoops4_2019:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          किसी को नहीं पता कि हर अंकुर में से लेट्स के कितने हेड उग जाएंगे।

          तब तक लेना जारी रखने के लिए `जब वहां लेट्स हो` लूप का उपयोग करें, जब तक प्रत्येक पीस एकत्र न कर लिया जाए।
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "`व्हाइल` लूप खाली स्थानों
          को भी संभाल लेगी। चूंकि वहां लेट्स नहीं है, यह इसे नहीं लेगी और कोड को आगे
          बढ़ने देगी।"
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: आप सभी फसलों को परखने के
          लिए `जब आगे रास्ता हो` लूप या `दोहराएं` लूप का उपयोग कर सकते हैं।
      courseD_farmer_condLoops5:
        courseD_farmer_condLoops5_a: 'एक नई लूप है: `कद्दू पर पहुंचने तक दोहराएं`।
          क्या आप देख सकते हैं कि इस पहेली में इसका उपयोग कैसे करना है?'
        courseD_farmer_condLoops5_b: प्रत्येक स्थान पर एक से अधिक कॉर्न या लेट्स का
          पौधा हो सकता है। उन सभी को एकत्र करने के लिए `व्हाइल` लूप का उपयोग करें!
      courseD_farmer_condLoops5_2018:
        courseD_farmer_condLoops5_a: 'एक नई लूप है: `कद्दू पर पहुंचने तक दोहराएं`।
          क्या आप देख सकते हैं कि इस पहेली में इसका उपयोग कैसे करना है?'
        courseD_farmer_condLoops5_b: प्रत्येक स्थान पर एक से अधिक कॉर्न या लेट्स का
          पौधा हो सकता है। उन सभी को एकत्र करने के लिए `व्हाइल` लूप का उपयोग करें!
      courseD_farmer_condLoops5_2019:
        courseD_farmer_condLoops5_a: 'There is a new loop: `repeat until there are
          pumpkins`. Can you see how to use it in this puzzle?'
        courseD_farmer_condLoops5_b: प्रत्येक स्थान पर एक से अधिक कॉर्न या लेट्स का
          पौधा हो सकता है। उन सभी को एकत्र करने के लिए `व्हाइल` लूप का उपयोग करें!
      courseD_farmer_condLoops6:
        courseD_farmer_condLoops6_a: यह सुनिश्चित करने के लिए `जब वहां कॉर्न हो` लूप
          का उपयोग करें कि आप रास्ते में सारा कॉर्न प्राप्त करते हैं। यदि वहां लेने
          के लिए कोई कॉर्न नहीं है तो यह ब्लॉक कुछ नहीं करेगा।
        courseD_farmer_condLoops6_b: अपना अगला कदम उठाने से पहले यह देखना सुनिश्चित
          करें कि `इफ` आगे रास्ता है!
      courseD_farmer_condLoops6_2018:
        courseD_farmer_condLoops6_a: Use a `while path ahead` loop or `if path ahead
          / else` block to move the farmer down each piece of the spiral.
        courseD_farmer_condLoops6_b: You only need to check for corn during most of
          the harvest.  Just pick one pumpkin at the very end of your program.
      courseD_farmer_condLoops6_2019:
        courseD_farmer_condLoops6_a: Use a `while path ahead` loop or a `if path ahead
          / else` block to move the farmer down each piece of the spiral.
        courseD_farmer_condLoops6_b: You only need to check for corn during most of
          the harvest.  Just pick one pumpkin at the very end of your program.
      courseD_farmer_condLoops7:
        courseD_farmer_condLoops7_a: |-
          ध्यान दें कि सभी फसलों को प्राप्त करने का सबसे आसान रास्ता अभी भी घुमावदार है।

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: कटाई मशीन का स्टेप्स की सही संख्या में मूव करना
          जारी रखने के लिए `जब आगे रास्ता हो` का उपयोग करने का प्रयास करें।
      courseD_farmer_condLoops7_2018:
        courseD_farmer_condLoops7_a: |-
          ध्यान दें कि सभी फसलों को प्राप्त करने का सबसे आसान रास्ता अभी भी घुमावदार है।

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: कटाई मशीन का स्टेप्स की सही संख्या में मूव करना
          जारी रखने के लिए `जब आगे रास्ता हो` का उपयोग करने का प्रयास करें।
      courseD_farmer_condLoops7_2019:
        courseD_farmer_condLoops7_a: |-
          ध्यान दें कि सभी फसलों को प्राप्त करने का सबसे आसान रास्ता अभी भी घुमावदार है।

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Try using `while path ahead` to keep the harvester
          moving the right number of steps.
      courseD_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: इस चुनौती में "स्टेप" बटन काफी उपयोगी
          हो सकता है।
        courseD_farmer_condLoops_challenge1_b: सामान्य तौर पर आप केवल `कद्दू लें`
          उपयोग करेंगे, यदि आप कद्दू पर हैं। यदि आप कद्दू पर हैं तो आपको और क्या करने
          की जरूरत होगी?
      courseD_farmer_condLoops_challenge1_2018:
        courseD_farmer_condLoops_challenge1_a: इस चुनौती में "स्टेप" बटन काफी उपयोगी
          हो सकता है।
        courseD_farmer_condLoops_challenge1_b: सामान्य तौर पर आप केवल `कद्दू लें`
          उपयोग करेंगे, यदि आप कद्दू पर हैं। यदि आप कद्दू पर हैं तो आपको और क्या करने
          की जरूरत होगी?
      courseD_farmer_condLoops_challenge1_2019:
        courseD_farmer_condLoops_challenge1_a: इस चुनौती में "स्टेप" बटन काफी उपयोगी
          हो सकता है।
        courseD_farmer_condLoops_challenge1_b: सामान्य तौर पर आप केवल `कद्दू लें`
          उपयोग करेंगे, यदि आप कद्दू पर हैं। यदि आप कद्दू पर हैं तो आपको और क्या करने
          की जरूरत होगी?
      courseD_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: प्रत्येक स्थान में प्रत्येक सब्जी की
          मात्रा बदल सकती है। `व्हाइल` लूप उपयोगी हो सकती है!
      courseD_farmer_condLoops_challenge2_2018:
        courseD_farmer_condLoops_challenge2_a: प्रत्येक स्थान में प्रत्येक सब्जी की
          मात्रा बदल सकती है। `व्हाइल` लूप उपयोगी हो सकती है!
      courseD_farmer_condLoops_challenge2_2019:
        courseD_farmer_condLoops_challenge2_a: प्रत्येक स्थान में प्रत्येक सब्जी की
          मात्रा बदल सकती है। `व्हाइल` लूप उपयोगी हो सकती है!
      courseD_farmer_while1:
        courseD_farmer_while1_a: आपको ढेर तक जाने के लिए चार बार आगे मूव करने की जरूरत
          होगी। क्या आप इसके लिए `दोहराएं` लूप का उपयोग कर सकते हैं?
        courseD_farmer_while1_b: जब आप मिट्टी के ढेर पर खड़े हों तो इसे हटाने के लिए
          `1 हटाएं` ब्लॉक का उपयोग करें।
      courseD_farmer_while1_2018:
        courseD_farmer_while1_a: आपको ढेर तक जाने के लिए चार बार आगे मूव करने की जरूरत
          होगी। क्या आप इसके लिए `दोहराएं` लूप का उपयोग कर सकते हैं?
        courseD_farmer_while1_b: जब आप मिट्टी के ढेर पर खड़े हों तो इसे हटाने के लिए
          `1 हटाएं` ब्लॉक का उपयोग करें।
      courseD_farmer_while1_2019:
        courseD_farmer_while1_a: आपको ढेर तक जाने के लिए चार बार आगे मूव करने की जरूरत
          होगी। क्या आप इसके लिए `दोहराएं` लूप का उपयोग कर सकते हैं?
        courseD_farmer_while1_b: जब आप मिट्टी के ढेर पर खड़े हों तो इसे हटाने के लिए
          `1 हटाएं` ब्लॉक का उपयोग करें।
      courseD_farmer_while2:
        courseD_farmer_while2_a: आपको सुराख के पास जाने के लिए केवल एक बार मूव करने
          की जरूरत होगी।
        courseD_farmer_while2_b: आपको छह बार `1 भरें` ब्लॉक की जरूरत होगी। क्या आप
          इसे अधिक आसान बनाने के लिए लूप का उपयोग कर सकते हैं?
      courseD_farmer_while2_2018:
        courseD_farmer_while2_a: आपको सुराख के पास जाने के लिए केवल एक बार मूव करने
          की जरूरत होगी।
        courseD_farmer_while2_b: आपको छह बार `1 भरें` ब्लॉक की जरूरत होगी। क्या आप
          इसे अधिक आसान बनाने के लिए लूप का उपयोग कर सकते हैं?
      courseD_farmer_while2_2019:
        courseD_farmer_while2_a: आपको सुराख के पास जाने के लिए केवल एक बार मूव करने
          की जरूरत होगी।
        courseD_farmer_while2_b: आपको छह बार `1 भरें` ब्लॉक की जरूरत होगी। क्या आप
          इसे अधिक आसान बनाने के लिए लूप का उपयोग कर सकते हैं?
      courseD_farmer_while3:
        courseD_farmer_while3_a: एक लूप यहां आपके कोड को सरल बनाने में आपकी मदद कर
          सकती है।
        courseD_farmer_while3_b: आपको ढेर के पास जाने के लिए किसी `मुड़ें` ब्लॉक्स
          की जरूरत नहीं होगी।
      courseD_farmer_while3_2018:
        courseD_farmer_while3_a: एक लूप यहां आपके कोड को सरल बनाने में आपकी मदद कर
          सकती है।
        courseD_farmer_while3_b: आपको ढेर के पास जाने के लिए किसी `मुड़ें` ब्लॉक्स
          की जरूरत नहीं होगी।
      courseD_farmer_while3_2019:
        courseD_farmer_while3_a: एक लूप यहां आपके कोड को सरल बनाने में आपकी मदद कर
          सकती है।
        courseD_farmer_while3_b: आपको ढेर के पास जाने के लिए किसी `मुड़ें` ब्लॉक्स
          की जरूरत नहीं होगी।
      courseD_farmer_while4:
        courseD_farmer_conditionals4_a: "`दोहराएं` लूप का उपयोग करने की बजाय, ढेर
          लगने तक खोदते रहने के लिए `व्हाइल` लूप का उपयोग करें।"
        courseD_farmer_conditionals4_b: यह एक पिछली पहेली से काफी मिलती-जुलती प्रतीत
          होती है, केवल इतना अंतर है कि इसके लिए आपको किस लूप की जरूरत है।
      courseD_farmer_while4_2018:
        courseD_farmer_conditionals4_a: "`दोहराएं` लूप का उपयोग करने की बजाय, ढेर
          लगने तक खोदते रहने के लिए `व्हाइल` लूप का उपयोग करें।"
        courseD_farmer_conditionals4_b: यह एक पिछली पहेली से काफी मिलती-जुलती प्रतीत
          होती है, केवल इतना अंतर है कि इसके लिए आपको किस लूप की जरूरत है।
      courseD_farmer_while4_2019:
        courseD_farmer_conditionals4_a: "`दोहराएं` लूप का उपयोग करने की बजाय, ढेर
          लगने तक खोदते रहने के लिए `व्हाइल` लूप का उपयोग करें।"
        courseD_farmer_conditionals4_b: यह एक पिछली पहेली से काफी मिलती-जुलती प्रतीत
          होती है, केवल इतना अंतर है कि इसके लिए आपको किस लूप की जरूरत है।
      courseD_farmer_while5:
        courseD_farmer_conditionals5a_a: "`दोहराएं` लूप की बजाय `व्हाइल` लूप को नेस्ट
          करने का प्रयास करें।"
        courseD_farmer_conditionals5a_b: किसान को पंक्ति के अंत तक जाने के लिए कुल
          पांच बार आगे की ओर मूव करने की जरूरत है। किसान को और क्या करने की जरूरत
          है?
        courseD_farmer_conditionals5a_c: 5 बार आगे की ओर मूव करें। हर बार जब आप आगे
          की ओर मूव करते हैं, तो `जब वहां ढेर हो` ब्लॉक का उपयोग करके मिट्टी के ढेर
          को हटाएं।
      courseD_farmer_while5_2018:
        courseD_farmer_conditionals5a_a: "`दोहराएं` लूप की बजाय `व्हाइल` लूप को नेस्ट
          करने का प्रयास करें।"
        courseD_farmer_conditionals5a_b: किसान को पंक्ति के अंत तक जाने के लिए कुल
          पांच बार आगे की ओर मूव करने की जरूरत है। किसान को और क्या करने की जरूरत
          है?
        courseD_farmer_conditionals5a_c: 5 बार आगे की ओर मूव करें। हर बार जब आप आगे
          की ओर मूव करते हैं, तो `जब वहां ढेर हो` ब्लॉक का उपयोग करके मिट्टी के ढेर
          को हटाएं।
      courseD_farmer_while5_2019:
        courseD_farmer_conditionals5a_a: "`दोहराएं` लूप की बजाय `व्हाइल` लूप को नेस्ट
          करने का प्रयास करें।"
        courseD_farmer_conditionals5a_b: किसान को पंक्ति के अंत तक जाने के लिए कुल
          पांच बार आगे की ओर मूव करने की जरूरत है। किसान को और क्या करने की जरूरत
          है?
        courseD_farmer_conditionals5a_c: 5 बार आगे की ओर मूव करें। हर बार जब आप आगे
          की ओर मूव करते हैं, तो `जब वहां ढेर हो` ब्लॉक का उपयोग करके मिट्टी के ढेर
          को हटाएं।
      courseD_farmer_while6:
        courseD_farmer_conditionals6_a: सुनिश्चित करें कि आप यह पता लगाने के लिए `व्हाइल`
          लूप का उपयोग कर रहे हैं कि प्रत्येक सुराख को कितनी बार भरना है।
        courseD_farmer_conditionals6_b: ध्यान दें कि किसान को सीढ़ी-स्टेप पैटर्न में
          कई बार आगे की ओर मूव करने और नीचे जाने की जरूरत है।
        courseD_farmer_conditionals6_c: |-
          सीढ़ी स्टेप पैटर्न निम्नलिखित ब्लॉक्स का उपयोग करता है

          -   आगे की ओर मूव करें
          -   सुराख भरें
          -   दाएं मुड़ें
          -   आगे की और मूव करें
          -   सुराख भरें
          -   बाएं मुड़ें

          आपको इस सीढ़ी स्टेप पैटर्न को कितनी बार उपयोग करने की जरूरत है?

          सुनिश्चित करें कि आप सुराख को भरने के लिए `जब वहां सुराख हो` का उपयोग कर रहे हैं।
      courseD_farmer_while6_2018:
        courseD_farmer_conditionals6_a: सुनिश्चित करें कि आप यह पता लगाने के लिए `व्हाइल`
          लूप का उपयोग कर रहे हैं कि प्रत्येक सुराख को कितनी बार भरना है।
        courseD_farmer_conditionals6_b: ध्यान दें कि किसान को सीढ़ी-स्टेप पैटर्न में
          कई बार आगे की ओर मूव करने और नीचे जाने की जरूरत है।
        courseD_farmer_conditionals6_c: |-
          सीढ़ी स्टेप पैटर्न निम्नलिखित ब्लॉक्स का उपयोग करता है

          -   आगे की ओर मूव करें
          -   सुराख भरें
          -   दाएं मुड़ें
          -   आगे की और मूव करें
          -   सुराख भरें
          -   बाएं मुड़ें

          आपको इस सीढ़ी स्टेप पैटर्न को कितनी बार उपयोग करने की जरूरत है?

          सुनिश्चित करें कि आप सुराख को भरने के लिए `जब वहां सुराख हो` का उपयोग कर रहे हैं।
      courseD_farmer_while6_2019:
        courseD_farmer_conditionals6_a: सुनिश्चित करें कि आप यह पता लगाने के लिए `व्हाइल`
          लूप का उपयोग कर रहे हैं कि प्रत्येक सुराख को कितनी बार भरना है।
        courseD_farmer_conditionals6_b: ध्यान दें कि किसान को सीढ़ी-स्टेप पैटर्न में
          कई बार आगे की ओर मूव करने और नीचे जाने की जरूरत है।
        courseD_farmer_conditionals6_c: |-
          सीढ़ी स्टेप पैटर्न निम्नलिखित ब्लॉक्स का उपयोग करता है

          -   आगे की ओर मूव करें
          -   सुराख भरें
          -   दाएं मुड़ें
          -   आगे की और मूव करें
          -   सुराख भरें
          -   बाएं मुड़ें

          आपको इस सीढ़ी स्टेप पैटर्न को कितनी बार उपयोग करने की जरूरत है?

          सुनिश्चित करें कि आप सुराख को भरने के लिए `जब वहां सुराख हो` का उपयोग कर रहे हैं।
      courseD_farmer_while7:
        courseD_farmer_conditionals8_a: "`जब आगे रास्ता हो` ब्लॉक से आप आगे जाना जारी
          रख सकते हैं, चाहे आपको पता न हो कि रास्ते में कितने वर्ग हैं।"
        courseD_farmer_conditionals8_b: दोहराएं लूप के अंदर `जब आगे रास्ता हो` लूप
          रखने से आपको इस पहेली में मदद मिल सकती है।
        courseD_farmer_conditionals8_c: प्रत्येक रास्ते के अंत में आपको क्या करने
          की जरूरत है?
      courseD_farmer_while7_2018:
        courseD_farmer_conditionals8_a: "`जब आगे रास्ता हो` ब्लॉक से आप आगे जाना जारी
          रख सकते हैं, चाहे आपको पता न हो कि रास्ते में कितने वर्ग हैं।"
        courseD_farmer_conditionals8_b: दोहराएं लूप के अंदर `जब आगे रास्ता हो` लूप
          रखने से आपको इस पहेली में मदद मिल सकती है।
        courseD_farmer_conditionals8_c: प्रत्येक रास्ते के अंत में आपको क्या करने
          की जरूरत है?
      courseD_farmer_while7_2019:
        courseD_farmer_conditionals8_a: "`जब आगे रास्ता हो` ब्लॉक से आप आगे जाना जारी
          रख सकते हैं, चाहे आपको पता न हो कि रास्ते में कितने वर्ग हैं।"
        courseD_farmer_conditionals8_b: दोहराएं लूप के अंदर `जब आगे रास्ता हो` लूप
          रखने से आपको इस पहेली में मदद मिल सकती है।
        courseD_farmer_conditionals8_c: प्रत्येक रास्ते के अंत में आपको क्या करने
          की जरूरत है?
      courseD_farmer_while8:
        courseD_farmer_conditionals8_a: आपको एक से अधिक `व्हाइल` लूप का उपयोग करने
          की जरूरत पड़ने वाली है।
        courseD_farmer_conditionals8_b: प्रत्येक सुराख रास्ते के अंत में है, इसलिए
          `जब वहां सुराख हो` का उपयोग करने से पहले `जब आगे रास्ता हो` का उपयोग करें।
        courseD_farmer_conditionals8_c: ध्यान दें कि आपको `जब आगे रास्ता हो`, `जब
          वहां सुराख हो` कोड को छह बार दोहराने की जरूरत है।
      courseD_farmer_while8_2018:
        courseD_farmer_conditionals8_a: आपको एक से अधिक `व्हाइल` लूप का उपयोग करने
          की जरूरत पड़ने वाली है।
        courseD_farmer_conditionals8_b: प्रत्येक सुराख रास्ते के अंत में है, इसलिए
          `जब वहां सुराख हो` का उपयोग करने से पहले `जब आगे रास्ता हो` का उपयोग करें।
        courseD_farmer_conditionals8_c: ध्यान दें कि आपको `जब आगे रास्ता हो`, `जब
          वहां सुराख हो` कोड को छह बार दोहराने की जरूरत है।
      courseD_farmer_while8_2019:
        courseD_farmer_conditionals8_a: आपको एक से अधिक `व्हाइल` लूप का उपयोग करने
          की जरूरत पड़ने वाली है।
        courseD_farmer_conditionals8_b: प्रत्येक सुराख रास्ते के अंत में है, इसलिए
          `जब वहां सुराख हो` का उपयोग करने से पहले `जब आगे रास्ता हो` का उपयोग करें।
        courseD_farmer_conditionals8_c: ध्यान दें कि आपको `जब आगे रास्ता हो`, `जब
          वहां सुराख हो` कोड को छह बार दोहराने की जरूरत है।
      courseD_farmer_while_challenge1:
        courseD_farmer_while_challenge1_a: प्रत्येक सुराख या ढेर रास्ते के अंत से
          एक स्थान **पीछे की ओर** स्थित है।
        courseD_farmer_while_challenge1_b: यदि आप `व्हाइल` लूप का उपयोग करते हैं,
          तो आप किसान को ढेर हटाने या सुराख भरने के लिए कह सकते हैं, चाहे वहां न हो।
          इसका अर्थ है कि आप उसे किसी भी मिट्टी को हटाने या किसी भी सुराख को भरने
          के लिए प्रोग्राम कर सकते हैं, चाहे वह कहीं भी हो।
        courseD_farmer_conditionals8_c: इस किसी भी `दोहराएं` लूप्स का उपयोग किए बिना
          हल करना संभव है। ऐसा करने के लिए, आपको चार `व्हाइल` लूप्स का उपयोग करने
          की जरूरत होगी।
      courseD_farmer_while_challenge1_2018:
        courseD_farmer_while_challenge1_a: प्रत्येक सुराख या ढेर रास्ते के अंत से
          एक स्थान **पीछे की ओर** स्थित है।
        courseD_farmer_while_challenge1_b: यदि आप `व्हाइल` लूप का उपयोग करते हैं,
          तो आप किसान को ढेर हटाने या सुराख भरने के लिए कह सकते हैं, चाहे वहां न हो।
          इसका अर्थ है कि आप उसे किसी भी मिट्टी को हटाने या किसी भी सुराख को भरने
          के लिए प्रोग्राम कर सकते हैं, चाहे वह कहीं भी हो।
        courseD_farmer_conditionals8_c: इस किसी भी `दोहराएं` लूप्स का उपयोग किए बिना
          हल करना संभव है। ऐसा करने के लिए, आपको चार `व्हाइल` लूप्स का उपयोग करने
          की जरूरत होगी।
      courseD_farmer_while_challenge1_2019:
        courseD_farmer_while_challenge1_a: प्रत्येक सुराख या ढेर रास्ते के अंत से
          एक स्थान **पीछे की ओर** स्थित है।
        courseD_farmer_while_challenge1_b: यदि आप `व्हाइल` लूप का उपयोग करते हैं,
          तो आप किसान को ढेर हटाने या सुराख भरने के लिए कह सकते हैं, चाहे वहां न हो।
          इसका अर्थ है कि आप उसे किसी भी मिट्टी को हटाने या किसी भी सुराख को भरने
          के लिए प्रोग्राम कर सकते हैं, चाहे वह कहीं भी हो।
        courseD_farmer_conditionals8_c: इस किसी भी `दोहराएं` लूप्स का उपयोग किए बिना
          हल करना संभव है। ऐसा करने के लिए, आपको चार `व्हाइल` लूप्स का उपयोग करने
          की जरूरत होगी।
      courseD_farmer_while_challenge2:
        courseD_farmer_while_challenge1_a: प्रत्येक सुराख या ढेर रास्ते के अंत से
          एक स्थान **पीछे की ओर** स्थित है।
        courseD_farmer_while_challenge1_b: यदि आप `व्हाइल` लूप का उपयोग करते हैं,
          तो आप किसान को ढेर हटाने या सुराख भरने के लिए कह सकते हैं, चाहे वहां न हो।
          इसका अर्थ है कि एक ही स्थान पर खड़े रहकर, आप उसे किसी भी मिट्टी को हटाने
          और किसी भी सुराख को भरने के लिए प्रोग्राम कर सकते हैं।
        courseD_farmer_conditionals8_c: इस किसी भी `दोहराएं` लूप्स का उपयोग किए बिना
          हल करना संभव है। ऐसा करने के लिए, आपको चार `व्हाइल` लूप्स का उपयोग करने
          की जरूरत होगी।
      courseD_harvester_nested_loops_challenge1:
        courseD_harvester_nested_loops_challenge1_a: सारे कॉर्न तक पहुंचने के लिए
          इस रास्ते का अनुसरण करने का प्रयास करें!
        courseD_harvester_nested_loops_challenge1_b: कॉर्न के एक से अधिक दाने एकत्र
          करने के लिए, आपको एक से अधिक बार `कॉर्न लें` का उपयोग करने की जरूरत है।
        courseD_harvester_nested_loops_challenge1_c: इस पहेली को हल करने के लिए आपको
          मुख्य लूप के अंदर एक छोटी लूप रखने की जरूरत होगी।
      courseD_harvester_nested_loops_challenge1_2018:
        courseD_harvester_nested_loops_challenge1_a: सारे कॉर्न तक पहुंचने के लिए
          इस रास्ते का अनुसरण करने का प्रयास करें!
        courseD_harvester_nested_loops_challenge1_b: कॉर्न के एक से अधिक दाने एकत्र
          करने के लिए, आपको एक से अधिक बार `कॉर्न लें` का उपयोग करने की जरूरत है।
        courseD_harvester_nested_loops_challenge1_c: इस पहेली को हल करने के लिए आपको
          मुख्य लूप के अंदर एक छोटी लूप रखने की जरूरत होगी।
      courseD_harvester_nested_loops_challenge1_2019:
        courseD_harvester_nested_loops_challenge1_a: सारे कॉर्न तक पहुंचने के लिए
          इस रास्ते का अनुसरण करने का प्रयास करें!
        courseD_harvester_nested_loops_challenge1_b: कॉर्न के एक से अधिक दाने एकत्र
          करने के लिए, आपको एक से अधिक बार `कॉर्न लें` का उपयोग करने की जरूरत है।
        courseD_harvester_nested_loops_challenge1_c: इस पहेली को हल करने के लिए आपको
          मुख्य लूप के अंदर एक छोटी लूप रखने की जरूरत होगी।
      courseD_iceage_loops1:
        courseD_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseD_iceage_loops1_b: |-
          You will have to use this block:

          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops10:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the
          water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down
          on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseD_iceage_loops10_2019:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the
          water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down
          on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseD_iceage_loops1_2019:
        courseD_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseD_iceage_loops1_b: |-
          You will have to use this block:

          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops2:
        courseD_iceage_loops2_a: Break this puzzle into two pieces, one before the
          corner, and one after the corner.
        courseD_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseD_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseD_iceage_loops2_2019:
        courseD_iceage_loops2_a: Break this puzzle into two pieces, one before the
          corner, and one after the corner.
        courseD_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseD_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseD_iceage_loops3:
        courseB_iceage_loops3_a: |-
          Use this new block! <xml><block type="controls_repeat_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>
        courseB_iceage_loops3_b: To repeat code, drag out a `repeat` loop, then put
          the block you want repeated inside.
      courseD_iceage_loops3_2019:
        courseB_iceage_loops3_a: |-
          Use this new block!

           <xml><block type="controls_repeat_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>
        courseB_iceage_loops3_b: To repeat code, drag out a `repeat` loop, then put
          the block you want repeated inside.
      courseD_iceage_loops4:
        courseD_iceage_loops4_a: Don't be afraid to run your code and see what happens!
        courseD_iceage_loops4_b: Try writing down the steps Scrat would take to get
          to the acorn.  Do you see a pattern?
        courseD_iceage_loops4_c: This is the path Scrat should take.
      courseD_iceage_loops4_2019:
        courseD_iceage_loops4_a: Don't be afraid to run your code and see what happens!
        courseD_iceage_loops4_b: Try writing down the steps Scrat would take to get
          to the acorn.  Do you see a pattern?
        courseD_iceage_loops4_c: This is the path Scrat should take.
      courseD_iceage_loops6:
        courseD_iceage_loops6_a: Your final code will have **three** `move forward`
          blocks.
        courseD_iceage_loops6_b: You only need to add **one** more loop!
        courseD_iceage_loops6_c: Your final path should look like this.
      courseD_iceage_loops6_2019:
        courseD_iceage_loops6_a: Your final code will have **three** `move forward`
          blocks.
        courseD_iceage_loops6_b: You only need to add **one** more loop!
        courseD_iceage_loops6_c: Your final path should look like this.
      courseD_iceage_loops7:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece
          of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the
          acorn.
      courseD_iceage_loops7_2019:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece
          of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the
          acorn.
      courseD_iceage_loops8:
        courseD_iceage_loops8_a: Are the `turn` blocks right? What else can you change?
        courseD_iceage_loops8_b: The first loop should repeat **3** times, the second
          should repeat **5** times, the third loop should repeat **4** times, and
          the last loop should repeat **4** times.
        courseD_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseD_iceage_loops8_2019:
        courseD_iceage_loops8_a: Are the `turn` blocks right? What else can you change?
        courseD_iceage_loops8_b: The first loop should repeat **3** times, the second
          should repeat **5** times, the third loop should repeat **4** times, and
          the last loop should repeat **4** times.
        courseD_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseD_iceage_loops9:
        courseD_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller
          pieces. Don't be afraid to run your puzzle as you code!
        courseD_iceage_loops9_b: Your final code should have **4** loops.
        courseD_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseD_iceage_loops9_2019:
        courseD_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller
          pieces. Don't be afraid to run your puzzle as you code!
        courseD_iceage_loops9_b: Your final code should have **4** loops.
        courseD_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseD_maze_intro4_2019:
        courseC_maze_programming4_a: आप पक्षी के दृष्टिकोण से दाएं या बाएं मुड़ सकते
          हैं। यदि आप दाईं तरफ के सामने हैं, तो दाएं मुड़ने से आप नीचे जा सकते हैं।
        courseC_maze_programming4_b: रास्ते का अनुसरण करने के लिए, आगे की ओर मूव करें
          और एक तरफ मुड़ें, फिर दुबारा मूव करें और विपरीत रास्ते पर मुड़ें। सूअर तक
          पहुंचने के लिए एक और बार आगे की ओर मूव करें।
      courseD_maze_intro5a_2019:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: Remember that turns are from Red's perspective.
        courseC_maze_programming5_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_nestedLoops3:
        courseD_maze_nestedLoops3_a: इस पहेली को हल करने के लिए, आपको दूसरी `दोहराएं`
          लूप के अंदर एक `दोहराएं` लूप को "नेस्ट" करने की जरूरत होगी।
        courseD_maze_nestedLoops3_b: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां
          रखना है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
        courseD_maze_nestedLoops3_c: रास्ते के सीधे भाग और मोड़ के लिए कोड लिखने का
          प्रयास करें। क्या आप सूर्यमुखी के फूल के पास जाने के लिए इसे दोहरा सकते
          हैं?
      courseD_maze_nestedLoops3_2018:
        courseD_maze_nestedLoops3_a: इस पहेली को हल करने के लिए, आपको दूसरी `दोहराएं`
          लूप के अंदर एक `दोहराएं` लूप को "नेस्ट" करने की जरूरत होगी।
        courseD_maze_nestedLoops3_b: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां
          रखना है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
        courseD_maze_nestedLoops3_c: रास्ते के सीधे भाग और मोड़ के लिए कोड लिखने का
          प्रयास करें। क्या आप सूर्यमुखी के फूल के पास जाने के लिए इसे दोहरा सकते
          हैं?
      courseD_maze_nestedLoops3_2019:
        courseD_maze_nestedLoops3_a: इस पहेली को हल करने के लिए, आपको दूसरी `दोहराएं`
          लूप के अंदर एक `दोहराएं` लूप को "नेस्ट" करने की जरूरत होगी।
        courseD_maze_nestedLoops3_b: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां
          रखना है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
        courseD_maze_nestedLoops3_c: रास्ते के सीधे भाग और मोड़ के लिए कोड लिखने का
          प्रयास करें। क्या आप सूर्यमुखी के फूल के पास जाने के लिए इसे दोहरा सकते
          हैं?
      courseD_maze_nestedLoops4:
        courseD_maze_nestedLoops4_a: |-
          पूरी पहेली में इस रास्ते का उपयोग करने का प्रयास करें।

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: यदि लूप पैटर्न को देखना मुश्किल है, तो पहले इसे
          पूरे को कोड करने का प्रयास करें और लूप्स को अंदर को रखने से पहले देखें कि
          कौन-सा कोड बार-बार दोहराया जाता है।
        courseD_maze_nestedLoops4_c: जितनी आपको जरूरत है, कोड की उतनी मात्रा काटने
          के लिए एक `दोहराएं` लूप को दूसरी के अंदर उपयोग करने का प्रयास करें।
      courseD_maze_nestedLoops4_2018:
        courseD_maze_nestedLoops4_a: |-
          पूरी पहेली में इस रास्ते का उपयोग करने का प्रयास करें।

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: यदि लूप पैटर्न को देखना मुश्किल है, तो पहले इसे
          पूरे को कोड करने का प्रयास करें और लूप्स को अंदर को रखने से पहले देखें कि
          कौन-सा कोड बार-बार दोहराया जाता है।
        courseD_maze_nestedLoops4_c: जितनी आपको जरूरत है, कोड की उतनी मात्रा काटने
          के लिए एक `दोहराएं` लूप को दूसरी के अंदर उपयोग करने का प्रयास करें।
      courseD_maze_nestedLoops4_2019:
        courseD_maze_nestedLoops4_a: |-
          पूरी पहेली में इस रास्ते का उपयोग करने का प्रयास करें।

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: यदि लूप पैटर्न को देखना मुश्किल है, तो पहले इसे
          पूरे को कोड करने का प्रयास करें और लूप्स को अंदर को रखने से पहले देखें कि
          कौन-सा कोड बार-बार दोहराया जाता है।
        courseD_maze_nestedLoops4_c: जितनी आपको जरूरत है, कोड की उतनी मात्रा काटने
          के लिए एक `दोहराएं` लूप को दूसरी के अंदर उपयोग करने का प्रयास करें।
      courseD_maze_nestedLoops5:
        courseD_maze_nestedLoops5_a: यह पता करने के लिए इस पहेली में सीढ़ी-स्टेप पैटर्न
          खोजें कि नेस्टड लूप का उपयोग कहां किया जा सकता है।
        courseD_maze_nestedLoops5_b: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां
          रखना है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
      courseD_maze_nestedLoops5_2018:
        courseD_maze_nestedLoops5_a: यह पता करने के लिए इस पहेली में सीढ़ी-स्टेप पैटर्न
          खोजें कि नेस्टड लूप का उपयोग कहां किया जा सकता है।
        courseD_maze_nestedLoops5_b: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां
          रखना है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
      courseD_maze_nestedLoops5_2019:
        courseD_maze_nestedLoops5_a: यह पता करने के लिए इस पहेली में सीढ़ी-स्टेप पैटर्न
          खोजें कि नेस्टड लूप का उपयोग कहां किया जा सकता है।
        courseD_maze_nestedLoops5_b: क्या आप पता नहीं लगा पा रहे हैं कि लूप को कहां
          रखना है, तो कदम-दर-कदम कोड लिखने की कोशिश करें और पैटर्न खोजें।
      courseD_maze_nestedLoops6:
        courseD_maze_nestedLoops6_a: यदि आप अटक जाते हैं, तो पहले बिना लूप्स के कोड
          को कागज़ पर लिखने का प्रयास करें और पैटर्न खोजें।
        courseD_maze_nestedLoops6_b: "`दोहराएं` लूप्स को नेस्ट करने से यह उपयोग किए
          ब्लॉक्स की संख्या कम करने में मदद कर सकता है।"
        courseD_maze_nestedLoops6_c: यह इस पहेली को हल करने के लिए नेस्टड लूप्स के
          दो सेट लेगा।
      courseD_maze_nestedLoops6_2018:
        courseD_maze_nestedLoops6_a: यदि आप अटक जाते हैं, तो पहले बिना लूप्स के कोड
          को कागज़ पर लिखने का प्रयास करें और पैटर्न खोजें।
        courseD_maze_nestedLoops6_b: "`दोहराएं` लूप्स को नेस्ट करने से यह उपयोग किए
          ब्लॉक्स की संख्या कम करने में मदद कर सकता है।"
        courseD_maze_nestedLoops6_c: यह इस पहेली को हल करने के लिए नेस्टड लूप्स के
          दो सेट लेगा।
      courseD_maze_nestedLoops6_2019:
        courseD_maze_nestedLoops6_a: यदि आप अटक जाते हैं, तो पहले बिना लूप्स के कोड
          को कागज़ पर लिखने का प्रयास करें और पैटर्न खोजें।
        courseD_maze_nestedLoops6_b: "`दोहराएं` लूप्स को नेस्ट करने से यह उपयोग किए
          ब्लॉक्स की संख्या कम करने में मदद कर सकता है।"
        courseD_maze_nestedLoops6_c: यह इस पहेली को हल करने के लिए नेस्टड लूप्स के
          दो सेट लेगा।
      courseD_maze_ramp1:
        courseC_maze_programming1_a: यदि पक्षी, सूअर के पास नहीं जा रहा है, तो सुनिश्चित
          करें कि सभी तीन ब्लॉक्स पर एक साथ पूरी तरह से क्लिक किया गया है, फिर दुबारा
          "चलाएं" पर क्लिक करें।
        courseC_maze_programming1_b: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp1_2018:
        courseC_maze_programming1_a: यदि पक्षी, सूअर के पास नहीं जा रहा है, तो सुनिश्चित
          करें कि सभी तीन ब्लॉक्स पर एक साथ पूरी तरह से क्लिक किया गया है, फिर दुबारा
          "चलाएं" पर क्लिक करें।
        courseC_maze_programming1_b: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp1_2019:
        courseC_maze_programming1_a: यदि पक्षी, सूअर के पास नहीं जा रहा है, तो सुनिश्चित
          करें कि सभी तीन ब्लॉक्स पर एक साथ पूरी तरह से क्लिक किया गया है, फिर दुबारा
          "चलाएं" पर क्लिक करें।
        courseC_maze_programming1_b: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp2:
        courseC_maze_programming2_a: "`आगे की ओर मूव करें` ब्लॉक का उपयोग करने के
          लिए, इसे टूलबॉक्स में से वर्कस्पेस में खींचें और इसे `जब चलाया जाए` ब्लॉक
          से कनेक्ट करें।"
        courseC_maze_programming2_b: सुनिश्चित करें कि सभी 3 ब्लॉक्स पर एक साथ क्लिक
          किया गया है और ये `जब चलाया जाए` ब्लॉक से जुड़े हैं।
      courseD_maze_ramp2_2018:
        courseC_maze_programming2_a: "`आगे की ओर मूव करें` ब्लॉक का उपयोग करने के
          लिए, इसे टूलबॉक्स में से वर्कस्पेस में खींचें और इसे `जब चलाया जाए` ब्लॉक
          से कनेक्ट करें।"
        courseC_maze_programming2_b: सुनिश्चित करें कि सभी 3 ब्लॉक्स पर एक साथ क्लिक
          किया गया है और ये `जब चलाया जाए` ब्लॉक से जुड़े हैं।
      courseD_maze_ramp2_2019:
        courseC_maze_programming2_a: "`आगे की ओर मूव करें` ब्लॉक का उपयोग करने के
          लिए, इसे टूलबॉक्स में से वर्कस्पेस में खींचें और इसे `जब चलाया जाए` ब्लॉक
          से कनेक्ट करें।"
        courseC_maze_programming2_b: सुनिश्चित करें कि सभी 3 ब्लॉक्स पर एक साथ क्लिक
          किया गया है और ये `जब चलाया जाए` ब्लॉक से जुड़े हैं।
      courseD_maze_ramp3:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          अपने कोड के मध्य से ब्लॉक को मिटाने के लिए, सभी ब्लॉक्स को दाएं से दूर इसके नीचे खींचें और उन्हें कुछ देर तक वर्कस्पेस में रखें।

          जिस ब्लॉक को आप मिटाना चाहते हैं, उस पर क्लिक करें और उसे वापस टूलबॉक्स तक खींचें।

          अंत में, अपने अन्य ब्लॉक्स को वापस उसी स्थान में रखें, जहां से वे संबंधित है।
      courseD_maze_ramp3_2018:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          अपने कोड के मध्य से ब्लॉक को मिटाने के लिए, सभी ब्लॉक्स को दाएं से दूर इसके नीचे खींचें और उन्हें कुछ देर तक वर्कस्पेस में रखें।

          जिस ब्लॉक को आप मिटाना चाहते हैं, उस पर क्लिक करें और उसे वापस टूलबॉक्स तक खींचें।

          अंत में, अपने अन्य ब्लॉक्स को वापस उसी स्थान में रखें, जहां से वे संबंधित है।
      courseD_maze_ramp3_2019:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          अपने कोड के मध्य से ब्लॉक को मिटाने के लिए, सभी ब्लॉक्स को दाएं से दूर इसके नीचे खींचें और उन्हें कुछ देर तक वर्कस्पेस में रखें।

          जिस ब्लॉक को आप मिटाना चाहते हैं, उस पर क्लिक करें और उसे वापस टूलबॉक्स तक खींचें।

          अंत में, अपने अन्य ब्लॉक्स को वापस उसी स्थान में रखें, जहां से वे संबंधित है।
      courseD_maze_ramp4:
        courseC_maze_programming4_a: आप पक्षी के दृष्टिकोण से दाएं या बाएं मुड़ सकते
          हैं। यदि आप दाईं तरफ के सामने हैं, तो दाएं मुड़ने से आप नीचे जा सकते हैं।
        courseC_maze_programming4_b: रास्ते का अनुसरण करने के लिए, आगे की ओर मूव करें
          और एक तरफ मुड़ें, फिर दुबारा मूव करें और विपरीत रास्ते पर मुड़ें। सूअर तक
          पहुंचने के लिए एक और बार आगे की ओर मूव करें।
      courseD_maze_ramp4_2018:
        courseC_maze_programming4_a: आप पक्षी के दृष्टिकोण से दाएं या बाएं मुड़ सकते
          हैं। यदि आप दाईं तरफ के सामने हैं, तो दाएं मुड़ने से आप नीचे जा सकते हैं।
        courseC_maze_programming4_b: रास्ते का अनुसरण करने के लिए, आगे की ओर मूव करें
          और एक तरफ मुड़ें, फिर दुबारा मूव करें और विपरीत रास्ते पर मुड़ें। सूअर तक
          पहुंचने के लिए एक और बार आगे की ओर मूव करें।
      courseD_maze_ramp4_2019:
        courseC_maze_programming4_a: You can turn right or left from Scrat's point
          of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: रास्ते का अनुसरण करने के लिए, आगे की ओर मूव करें
          और एक तरफ मुड़ें, फिर दुबारा मूव करें और विपरीत रास्ते पर मुड़ें। सूअर तक
          पहुंचने के लिए एक और बार आगे की ओर मूव करें।
      courseD_maze_ramp5:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: याद रखें कि मोड़ पक्षी के दृष्टिकोण से हैं।
        courseC_maze_programming5_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp5_2018:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: याद रखें कि मोड़ पक्षी के दृष्टिकोण से हैं।
        courseC_maze_programming5_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp5_2019:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: याद रखें कि मोड़ पक्षी के दृष्टिकोण से हैं।
        courseC_maze_programming5_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp5a:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: याद रखें कि मोड़ पक्षी के दृष्टिकोण से हैं।
        courseC_maze_programming5_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp5a_2018:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: याद रखें कि मोड़ पक्षी के दृष्टिकोण से हैं।
        courseC_maze_programming5_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp5a_2019:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: Remember that turns are from Scrat's perspective.
        courseC_maze_programming5_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp5b:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: याद रखें कि मोड़ पक्षी के दृष्टिकोण से हैं।
        courseC_maze_programming5_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp5b_2018:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: याद रखें कि मोड़ पक्षी के दृष्टिकोण से हैं।
        courseC_maze_programming5_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp5b_2019:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: याद रखें कि मोड़ पक्षी के दृष्टिकोण से हैं।
        courseC_maze_programming5_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_maze_ramp6:
        courseC_maze_programming6_a: इस पहेली को हल करने के दो तरीके हैं!
        courseC_maze_programming6_b: पक्षी दीवार की तरफ जाना शुरू करता है, इसलिए आप
          मूव करने से पहले मुड़ना याद रखें।
        courseC_maze_programming6_c: याद रखें कि आप उसी समय कोड को कागज़ पर लिख सकते
          हैं, फिर यह पता लगाने के लिए इसे चलाएं कि वहां से आपको कहां जाने की जरूरत
          है।
      courseD_maze_ramp7:
        courseD_maze_ramp7_b: एक से दूसरा ब्लॉक पूरा करने और त्रुटियां देखने के लिए
          "स्टेप" बटन का उपयोग करना न भूलें।
        courseD_maze_ramp7_a: एकल ब्लॉक चलाने या बार-बार कोड का कुछ भाग चलाने के लिए
          दोहराएं ब्लॉक्स का उपयोग करें।
        courseD_maze_ramp7_c: यदि आप अपने कोड को और आसान बनाना चाहते हैं, तो आप एक
          दोहराएं लूप को दूसरे के अंदर रख सकते हैं! इसे **नेस्टड लूप** कहा जाता है।
      courseD_maze_until1:
        courseD_maze_until1_a: क्या ऐसे कोई अनुक्रम हैं, जिन्हें आप अपने कोड को और
          छोटा बनाने के लिए लूप कर सकते हैं?
        courseD_maze_until1_b: इस पहेली को हल करने के लिए नेस्टड लूप का उपयोग करने
          का प्रयास करें।
      courseD_maze_until1_2018:
        courseD_maze_until1_a: क्या ऐसे कोई अनुक्रम हैं, जिन्हें आप अपने कोड को और
          छोटा बनाने के लिए लूप कर सकते हैं?
        courseD_maze_until1_b: इस पहेली को हल करने के लिए नेस्टड लूप का उपयोग करने
          का प्रयास करें।
      courseD_maze_until1_2019:
        courseD_maze_until1_a: क्या ऐसे कोई अनुक्रम हैं, जिन्हें आप अपने कोड को और
          छोटा बनाने के लिए लूप कर सकते हैं?
        courseD_maze_until1_b: इस पहेली को हल करने के लिए नेस्टड लूप का उपयोग करने
          का प्रयास करें।
      courseD_maze_until3:
        courseD_maze_until3_a: "-   आपका कोड क्या करता है?  \n-   यह क्या करने के
          लिए बनाया गया है?  \n-   यह आपको क्या बताता है?"
        courseD_maze_until3_b: यदि आप अटक रहे हैं, तो कागज़ पर स्टेप लिखने और ऐसे
          स्थान खोजने का प्रयास करें, जहां वे दोहराए जाते हैं।
        courseD_maze_until3_c: क्या कोई सीढ़ी स्टेप पैटर्न है, जिसका अनुसरण आप इस
          पहेली के लिए कर सकते हैं?
        courseD_maze_until3_d: अपने कोड को और छोटा बनाने के लिए `तक दोहराएं` ब्लॉक
          का उपयोग करना न भूलें।
      courseD_maze_until3_2018:
        courseD_maze_until3_a: "-   आपका कोड क्या करता है?  \n-   यह क्या करने के
          लिए बनाया गया है?  \n-   यह आपको क्या बताता है?"
        courseD_maze_until3_b: यदि आप अटक रहे हैं, तो कागज़ पर स्टेप लिखने और ऐसे
          स्थान खोजने का प्रयास करें, जहां वे दोहराए जाते हैं।
        courseD_maze_until3_c: क्या कोई सीढ़ी स्टेप पैटर्न है, जिसका अनुसरण आप इस
          पहेली के लिए कर सकते हैं?
        courseD_maze_until3_d: अपने कोड को और छोटा बनाने के लिए `तक दोहराएं` ब्लॉक
          का उपयोग करना न भूलें।
      courseD_maze_until3_2019:
        courseD_maze_until3_a: "-   आपका कोड क्या करता है?  \n-   यह क्या करने के
          लिए बनाया गया है?  \n-   यह आपको क्या बताता है?"
        courseD_maze_until3_b: यदि आप अटक रहे हैं, तो कागज़ पर स्टेप लिखने और ऐसे
          स्थान खोजने का प्रयास करें, जहां वे दोहराए जाते हैं।
        courseD_maze_until3_c: क्या कोई सीढ़ी स्टेप पैटर्न है, जिसका अनुसरण आप इस
          पहेली के लिए कर सकते हैं?
        courseD_maze_until3_d: अपने कोड को और छोटा बनाने के लिए `तक दोहराएं` ब्लॉक
          का उपयोग करना न भूलें।
      courseD_maze_until4:
        courseD_maze_until4_a: |-
          एक-एक लाइन में अपना कोड बनाने के लिए "स्टेप" बटन का उपयोग करें।

          -   क्या पहले स्टेप पर सब कुछ काम करता है?
          -   क्या दूसरे स्टेप पर सब कुछ काम करता है?
          -   यह कहां गलत हो जाता है?
        courseD_maze_until4_b: क्या कोई सीढ़ी स्टेप पैटर्न है, जिसका अनुसरण आप इस
          पहेली के लिए कर सकते हैं?
        courseD_maze_until4_c: अपने कोड को और छोटा बनाने के लिए `तक दोहराएं` ब्लॉक
          का उपयोग करना न भूलें।
      courseD_maze_until4_2018:
        courseD_maze_until4_a: |-
          एक-एक लाइन में अपना कोड बनाने के लिए "स्टेप" बटन का उपयोग करें।

          -   क्या पहले स्टेप पर सब कुछ काम करता है?
          -   क्या दूसरे स्टेप पर सब कुछ काम करता है?
          -   यह कहां गलत हो जाता है?
        courseD_maze_until4_b: क्या कोई सीढ़ी स्टेप पैटर्न है, जिसका अनुसरण आप इस
          पहेली के लिए कर सकते हैं?
        courseD_maze_until4_c: अपने कोड को और छोटा बनाने के लिए `तक दोहराएं` ब्लॉक
          का उपयोग करना न भूलें।
      courseD_maze_until4_2019:
        courseD_maze_until4_a: |-
          एक-एक लाइन में अपना कोड बनाने के लिए "स्टेप" बटन का उपयोग करें।

          -   क्या पहले स्टेप पर सब कुछ काम करता है?
          -   क्या दूसरे स्टेप पर सब कुछ काम करता है?
          -   यह कहां गलत हो जाता है?
        courseD_maze_until4_b: क्या कोई सीढ़ी स्टेप पैटर्न है, जिसका अनुसरण आप इस
          पहेली के लिए कर सकते हैं?
        courseD_maze_until4_c: अपने कोड को और छोटा बनाने के लिए `तक दोहराएं` ब्लॉक
          का उपयोग करना न भूलें।
      courseD_maze_until5:
        courseD_maze_until5_a: मुड़ने के लिए ज़ोम्बी द्वारा स्थान की खोज जारी रखने
          के लिए `यदि बाएं रास्ता हो` का उपयोग करना न भूलें।
        courseD_maze_until5_b: केवल एक `आगे की ओर मूव करें` का उपयोग करने के लिए,
          इसे `सूर्यमुखी के फूल तक दोहराएं` ब्लॉक के अंदर रखें।
        courseD_maze_until5_c: प्रत्येक स्टेप के बाद, ज़ोम्बी को देखना चाहिए कि क्या
          बाईं ओर रास्ता है। यदि उसे रास्ता मिल जाता है तो उसे क्या करना चाहिए?
      courseD_maze_until5_2018:
        courseD_maze_until5_b: केवल एक `आगे की ओर मूव करें` का उपयोग करने के लिए,
          इसे `सूर्यमुखी के फूल तक दोहराएं` ब्लॉक के अंदर रखें।
      courseD_maze_until5_2019:
        courseD_maze_until5_b: केवल एक `आगे की ओर मूव करें` का उपयोग करने के लिए,
          इसे `सूर्यमुखी के फूल तक दोहराएं` ब्लॉक के अंदर रखें।
      courseD_maze_until6:
        courseD_maze_until6_a: इस बार, ज़ोम्बी को सही रास्ते पर रखने के लिए `यदि दाएं
          रास्ता हो` आजमाएं।
        courseD_maze_until6_b: केवल एक `आगे की ओर मूव करें` का उपयोग करने के लिए,
          इसे `सूर्यमुखी के फूल तक दोहराएं` ब्लॉक के अंदर रखें।
        courseD_maze_until6_c: हालांकि यहां पिछली पहेली के मुकाबले अधिक मोड़ हैं,
          `तक दोहराएं` ब्लॉक के कारण आपका कोड लगभग एक जैसा हो सकता है!
      courseD_maze_until6_2018:
        courseD_maze_until6_b: केवल एक `आगे की ओर मूव करें` का उपयोग करने के लिए,
          इसे `सूर्यमुखी के फूल तक दोहराएं` ब्लॉक के अंदर रखें।
      courseD_maze_until6_2019:
        courseD_maze_until6_b: केवल एक `आगे की ओर मूव करें` का उपयोग करने के लिए,
          इसे `सूर्यमुखी के फूल तक दोहराएं` ब्लॉक के अंदर रखें।
      courseD_maze_until7:
        courseD_maze_until7_a: आपको पिछली बार के मुकाबले अब अपने कोड की जरूरत नहीं
          है, क्योंकि पहेली को है!
        courseD_maze_until7_b: हालांकि यहां पिछली पहेली के मुकाबले अधिक मोड़ हैं,
          `तक दोहराएं` ब्लॉक के कारण आपका कोड लगभग एक जैसा हो सकता है!
        courseD_maze_until7_c: बाईं ओर रास्ते देखना याद रखें, क्योंकि दाएं मुड़ना
          आपको गलत रास्ते पर ले जाएगा!
      courseD_maze_until7_2018:
        courseD_maze_until7_a: आपको पिछली बार के मुकाबले अब अपने कोड की जरूरत नहीं
          है, क्योंकि पहेली को है!
        courseD_maze_until7_b: हालांकि यहां पिछली पहेली के मुकाबले अधिक मोड़ हैं,
          `तक दोहराएं` ब्लॉक के कारण आपका कोड लगभग एक जैसा हो सकता है!
      courseD_maze_until7_2019:
        courseD_maze_until7_a: आपको पिछली बार के मुकाबले अब अपने कोड की जरूरत नहीं
          है, क्योंकि पहेली को है!
        courseD_maze_until7_b: हालांकि यहां पिछली पहेली के मुकाबले अधिक मोड़ हैं,
          `तक दोहराएं` ब्लॉक के कारण आपका कोड लगभग एक जैसा हो सकता है!
      courseD_maze_until8:
        courseD_maze_until8_a: सुनिश्चित करें के ज़ोम्बी को सही दिशा में रखने के लिए
          आप `इफ/एल्स` ब्लॉक का उपयोग कर रहे हैं।
        courseD_maze_until8_b: 'अपने `इफ/एल्स` ब्लॉक के साथ: यदि आगे रास्ता है, तो
          आपको क्या करना चाहिए?'
        courseD_maze_until8_c: 'अपने `इफ/एल्स` ब्लॉक के साथ: यदि आगे रास्ता नहीं है,
          तो आपको किस तरफ मुड़ना चाहिए?'
      courseD_maze_until9:
        courseD_maze_until8_a: "`यदि आगे रास्ता है` दंशनों वाले रास्ते छोड़ने में
          आपकी मदद करते हुए, आपको आगे ले जाता रहेगा, जब भी संभव हो।"
        courseD_maze_until8_b: यदि आगे की ओर कोई रास्ता नहीं है तो आपको किस दिशा में
          मुड़ना चाहिए?
        courseD_maze_until8_c: आपको सूर्यमुखी के फूल के पास ले जाने के लिए `तक दोहराएं`
          ब्लॉक का उपयोग करना याद रखें!
      courseD_maze_until9_2018:
        courseD_maze_until8_c: आपको सूर्यमुखी के फूल के पास ले जाने के लिए `तक दोहराएं`
          ब्लॉक का उपयोग करना याद रखें!
      courseD_maze_until9_2019:
        courseD_maze_until8_c: आपको सूर्यमुखी के फूल के पास ले जाने के लिए `तक दोहराएं`
          ब्लॉक का उपयोग करना याद रखें!
      courseD_playLab_cond1:
        courseD_playLab_cond1_a: इस चुनौती को हल करने के लिए, `जब ऊपरी तीर` इवेंट
          में `अभिनेता 1 को ऊपर मूव करें` ब्लॉक जोड़ें, फिर हर दूसरी दिशा के लिए वही
          करें।
        courseD_playLab_cond1_b: इसमें बदलाव करने के लिए कि वे किस दिशा में जाते हैं,
          `जब तीर` और `अभिनेता को मूव करें` ब्लॉक्स पर ड्रॉप डाउन मेन्यु का उपयोग
          करें।
        courseD_playLab_cond1_c: जब आप "चलाएं” पर क्लिक करें तो दोनों झंडों के लिए
          पेगलॉग को मूव करना याद रखें!
      courseD_playLab_cond1_2018:
        courseD_playLab_cond1_a: इस चुनौती को हल करने के लिए, `जब ऊपरी तीर` इवेंट
          में `अभिनेता 1 को ऊपर मूव करें` ब्लॉक जोड़ें, फिर हर दूसरी दिशा के लिए वही
          करें।
        courseD_playLab_cond1_b: इसमें बदलाव करने के लिए कि वे किस दिशा में जाते हैं,
          `जब तीर` और `अभिनेता को मूव करें` ब्लॉक्स पर ड्रॉप डाउन मेन्यु का उपयोग
          करें।
        courseD_playLab_cond1_c: जब आप "चलाएं” पर क्लिक करें तो दोनों झंडों के लिए
          पेगलॉग को मूव करना याद रखें!
      courseD_playLab_cond2:
        courseD_playLab_cond2_a: इस पहेली में सफल होने के लिए, `जब अभिनेता 1, अभिनेता
          2 को छूता है` इवेंट के नीचे `अंक प्राप्त करें` ब्लॉक का उपयोग करें।
      courseD_playLab_cond2_2018:
        courseD_playLab_cond2_a: इस पहेली में सफल होने के लिए, `जब अभिनेता 1, अभिनेता
          2 को छूता है` इवेंट के नीचे `अंक प्राप्त करें` ब्लॉक का उपयोग करें।
      courseD_playLab_cond3:
        courseD_playLab_cond3_a: आपको अपनी `हमेशा दोहराएं` लूप में दो ब्लॉक जोड़ने
          की जरूरत होगी।  एक ड्रैगन (अभिनेता 2) के लिए बेतरतीब भावों को चुनेगा और
          दूसरा दुबारा लूप बनाने से पहले 1 सेकंड प्रतीक्षा करेगा।
      courseD_playLab_cond3_2018:
        courseD_playLab_cond3_a: आपको अपनी `हमेशा दोहराएं` लूप में दो ब्लॉक जोड़ने
          की जरूरत होगी।  एक ड्रैगन (अभिनेता 2) के लिए बेतरतीब भावों को चुनेगा और
          दूसरा दुबारा लूप बनाने से पहले 1 सेकंड प्रतीक्षा करेगा।
      courseD_playLab_cond3a:
        courseD_playLab_cond3_c: "-   `इफ` ड्रैगन खुश है।\n    -   `अंक प्राप्त करें`\n
          \   -   `अंक प्राप्त करें`  \n\n-   `एल्स` `अंक प्राप्त करें`"
      courseD_playLab_cond3a_2018:
        courseD_playLab_cond3_c: "-   `इफ` ड्रैगन खुश है।\n    -   `अंक प्राप्त करें`\n
          \   -   `अंक प्राप्त करें`  \n\n-   `एल्स` `अंक प्राप्त करें`"
      courseD_playLab_cond4:
        courseD_playLab_cond4_a: आप समुद्री डाकू का पीछा करने के लिए निंजा को सक्रिय
          करने हेतु `जब चलाया जाए` इवेंट का उपयोग करना चाहेंगे।
        courseD_playLab_cond4_b: "`मुखौटे वाले हर निंजा को अभिनेता का पीछा करने के
          लिए सेट करें` नामक खास ब्लॉक है, जो समुद्री डाकू की खोज पर निंजा को गरम
          रखेगा!"
        courseD_playLab_cond4_c: "`जब अभिनेता 1, अभिनेता 3 को छूता है` इवेंट के नीचे
          `गेम को हार के तौर पर समाप्त करें` ब्लॉक रखें।"
      courseD_playLab_cond4_2018:
        courseD_playLab_cond4_a: आप समुद्री डाकू का पीछा करने के लिए निंजा को सक्रिय
          करने हेतु `जब चलाया जाए` इवेंट का उपयोग करना चाहेंगे।
        courseD_playLab_cond4_b: "`मुखौटे वाले हर निंजा को अभिनेता का पीछा करने के
          लिए सेट करें` नामक खास ब्लॉक है, जो समुद्री डाकू की खोज पर निंजा को गरम
          रखेगा!"
        courseD_playLab_cond4_c: "`जब अभिनेता 1, अभिनेता 3 को छूता है` इवेंट के नीचे
          `गेम को हार के तौर पर समाप्त करें` ब्लॉक रखें।"
      courseD_playLab_cond5:
        courseD_playLab_cond5_a: इस पहेली को हल करने के लिए `इफ` स्टेटमेंट का उपयोग
          करें, जो तुलना करती है कि `स्कोर` `>` 5 है या नहीं।
        courseD_playLab_cond5_b: आपके पास वर्कस्पेस में एक से अधिक `हमेशा दोहराएं`
          लूप हो सकती है।
      courseD_playLab_cond5_2018:
        courseD_playLab_cond5_a: इस पहेली को हल करने के लिए `इफ` स्टेटमेंट का उपयोग
          करें, जो तुलना करती है कि `स्कोर` `>` 5 है या नहीं।
        courseD_playLab_cond5_b: आपके पास वर्कस्पेस में एक से अधिक `हमेशा दोहराएं`
          लूप हो सकती है।
      courseD_playLab_cond6:
        courseD_playLab_cond6_a: निंजा की गति धीमी करने में मदद के लिए प्रोग्राम के
          शुरू में `मुखौटे वाले निंजा की गति सेट करें` ब्लॉक जोड़ें।
        courseD_playLab_cond6_b: आपको हमेशा यह देखने के लिए कि समुद्री डाकू ऑक्टोपस
          के नीचे तो नहीं है, `हमेशा दोहराएं` ब्लॉक के अंदर `यदि अभिनेता 1 y पोजीशन
          > 255` ब्लॉक का उपयोग करने की जरूरत होगी।
      courseD_playLab_cond6_2018:
        courseD_playLab_cond6_a: निंजा की गति धीमी करने में मदद के लिए प्रोग्राम के
          शुरू में `मुखौटे वाले निंजा की गति सेट करें` ब्लॉक जोड़ें।
        courseD_playLab_cond6_b: आपको हमेशा यह देखने के लिए कि समुद्री डाकू ऑक्टोपस
          के नीचे तो नहीं है, `हमेशा दोहराएं` ब्लॉक के अंदर `यदि अभिनेता 1 y पोजीशन
          > 255` ब्लॉक का उपयोग करने की जरूरत होगी।
      courseD_playLab_cond6a:
        courseD_playLab_cond6_c: "`हमेशा दोहराएं` लूप के ऊपर `1 सेकंड प्रतीक्षा करें`
          ब्लॉक जोड़ें, जो अंकों को बहुत ज्यादा जल्दी हटने से रोकने के लिए समुद्री
          डाकू की पोजीशन (लेकिन `इफ` स्टेटमेंट के अंदर नहीं) को देखता है।"
      courseD_playLab_cond6a_2018:
        courseD_playLab_cond6_c: "`हमेशा दोहराएं` लूप के ऊपर `1 सेकंड प्रतीक्षा करें`
          ब्लॉक जोड़ें, जो अंकों को बहुत ज्यादा जल्दी हटने से रोकने के लिए समुद्री
          डाकू की पोजीशन (लेकिन `इफ` स्टेटमेंट के अंदर नहीं) को देखता है।"
      courseD_scrat_ramp1:
        courseC_maze_programming1_a: If Scrat isn't getting to the acorn, make sure
          all three of the blocks have been fully snapped together, then click "Run"
          again.
        courseC_maze_programming1_b: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_scrat_ramp2:
        courseC_maze_programming2_a: "`आगे की ओर मूव करें` ब्लॉक का उपयोग करने के
          लिए, इसे टूलबॉक्स में से वर्कस्पेस में खींचें और इसे `जब चलाया जाए` ब्लॉक
          से कनेक्ट करें।"
        courseC_maze_programming2_b: सुनिश्चित करें कि सभी तीन `आगे की ओर मूव करें`
          ब्लॉक्स `जब चलाया जाए` ब्लॉक से जुड़े हैं।
      courseD_scrat_ramp3:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          अपने कोड के मध्य से ब्लॉक को मिटाने के लिए, सभी ब्लॉक्स को दाएं से दूर इसके नीचे खींचें और उन्हें कुछ देर तक वर्कस्पेस में रखें।

          जिस ब्लॉक को आप मिटाना चाहते हैं, उस पर क्लिक करें और उसे वापस टूलबॉक्स तक खींचें।

          अंत में, अपने अन्य ब्लॉक्स को वापस उसी स्थान में रखें, जहां से वे संबंधित है।
        courseC_maze_programming3_b: याद रखें कि दाएं और बाएं के मोड़ स्क्रैट के दृष्टिकोण
          से हैं।
      courseD_scrat_ramp4:
        courseC_maze_programming4_a: You can turn right or left from Scrat's point
          of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: रास्ते का अनुसरण करने के लिए, आगे की ओर मूव करें
          और एक तरफ मुड़ें, फिर दुबारा मूव करें और विपरीत रास्ते पर मुड़ें। सूअर तक
          पहुंचने के लिए एक और बार आगे की ओर मूव करें।
        courseC_maze_programming4_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_scrat_ramp5:
        courseC_maze_programming5_a: लाइन दर लाइन अपना कोड चलाने के लिए "स्टेप” बटन
          का उपयोग करने का प्रयास करें। क्या आप पता लगा सकते हैं कि आपको आगे क्या
          करने की जरूरत है?
        courseC_maze_programming5_b: किनारे तक जाने के लिए आपको कितनी दूर मूव करने
          की जरूरत है?
        courseC_maze_programming5_c: आपको एकोर्न के पास जाने के लिए कोने पर बाएं मुड़ने
          की जरूरत होगी।
      courseD_scrat_ramp6:
        courseC_maze_programming6a_a: Use a `repeat` loop to get Scrat moving!
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: इस पहेली को हल करने के दो तरीके हैं!
        courseD_scrat_programming6_b: मूव करने से पहले मुड़ना याद रखें, क्योंकि स्क्रैट
          गलत दिशा के सामने है।
        courseD_scrat_programming6_c: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा, ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने
          अभी तक पहेली को हल नहीं किया है।
      courseD_scrat_ramp8:
        courseD_maze_ramp7_b: एक से दूसरा ब्लॉक पूरा करने और त्रुटियां देखने के लिए
          "स्टेप" बटन का उपयोग करना न भूलें।
        courseD_maze_ramp7_a: एकल ब्लॉक चलाने या बार-बार कोड का कुछ भाग चलाने के लिए
          दोहराएं ब्लॉक्स का उपयोग करें।
        courseD_maze_ramp7_c: गलती होने से न डरें! यह देखने के लिए कि क्या होगा, ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपको लगता है कि आपने अभी तक पहेली
          को हल नहीं किया है।
      courseE_artist_concept1:
        courseE_artist_concept1_a: षट्कोणों की 50 पिक्सल की भुजाएं हैं और दाईं ओर
          60 डिग्री के मोड़ हैं।
        courseE_artist_concept1_b: यहां एक फंक्शन का उपयोग करने का प्रयास करें ताकि
          आपको बार-बार षट्कोण के लिए कोड न लिखना पड़े।
        courseE_artist_concept1_c: पेन चौड़ाई बदलने के लिए प्रत्येक फंक्शन बोलने से
          पहले `चौड़ाई सेट करें` ब्लॉक का उपयोग करें।
      courseE_artist_concept1_2018:
        courseE_artist_concept1_a: षट्कोणों की 50 पिक्सल की भुजाएं हैं और दाईं ओर
          60 डिग्री के मोड़ हैं।
        courseE_artist_concept1_b: यहां एक फंक्शन का उपयोग करने का प्रयास करें ताकि
          आपको बार-बार षट्कोण के लिए कोड न लिखना पड़े।
        courseE_artist_concept1_c: पेन चौड़ाई बदलने के लिए प्रत्येक फंक्शन बोलने से
          पहले `चौड़ाई सेट करें` ब्लॉक का उपयोग करें।
      courseE_artist_concept4:
        courseE_artist_concept4_a: इस पहेली को हल करने के कई तरीके हैं। क्या आप योजना
          बना सकते हैं?
        courseE_artist_concept4_b: एक वर्ग बनाने का प्रयास करें। फिर वर्गों की लाइन
          बनाएं।  आगे क्या करना है?
        courseE_artist_concept4_c: वर्गों की लाइन बनाने के बाद, आप चारों तरफ मुड़
          सकते हैं और बाएं जाते हुए वर्गों की दूसरी लाइन खींच सकते हैं, या आप दाएं
          जाते हुए वर्गों की दूसरी लाइन खींचने के लिए आकृति की बाईं भुजा के पीछे कूद
          सकते हैं। आप किसे प्राथमिकता देंगे?
      courseE_artist_concept4_2018:
        courseE_artist_concept4_a: इस पहेली को हल करने के कई तरीके हैं। क्या आप योजना
          बना सकते हैं?
        courseE_artist_concept4_b: एक वर्ग बनाने का प्रयास करें। फिर वर्गों की लाइन
          बनाएं।  आगे क्या करना है?
        courseE_artist_concept4_c: वर्गों की लाइन बनाने के बाद, आप चारों तरफ मुड़
          सकते हैं और बाएं जाते हुए वर्गों की दूसरी लाइन खींच सकते हैं, या आप दाएं
          जाते हुए वर्गों की दूसरी लाइन खींचने के लिए आकृति की बाईं भुजा के पीछे कूद
          सकते हैं। आप किसे प्राथमिकता देंगे?
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: 'आधे षट्कोण की \*30 की लंबाई\*\* है और
          यह **60 डिग्री** दाएं मुड़ता है।  '
        courseE_artist_concept_challenge1_b: '2/3 त्रिकोण की \*80 की लंबाई\*\* है
          और यह **120 डिग्री** दाएं मुड़ता है। '
        courseE_artist_concept_challenge1_c: |-
          यह वही डिज़ाइन है, जिसे आप पूरी आकृति बनाने के लिए दोहराना चाहते हैं:

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: 'आधे षट्कोण की \*30 की लंबाई\*\* है और
          यह **60 डिग्री** दाएं मुड़ता है।  '
        courseE_artist_concept_challenge1_b: '2/3 त्रिकोण की \*80 की लंबाई\*\* है
          और यह **120 डिग्री** दाएं मुड़ता है। '
        courseE_artist_concept_challenge1_c: |-
          यह वही डिज़ाइन है, जिसे आप पूरी आकृति बनाने के लिए दोहराना चाहते हैं:

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge2:
        courseE_artist_concept_challenge2_a: जब आप फंक्शन परिभाषित कर लें, तो आप इसे
          बार-बार बोल सकते हैं - जब भी और जहां भी आप चाहें!
        courseE_artist_concept_challenge2_b: |-
          आप इस कमांड का उपयोग करते हुए कैनवास पर अलग-अलग पोजीशनों पर कूद सकते हैं:
          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      courseE_artist_concept_challenge2_2018:
        courseE_artist_concept_challenge2_a: जब आप फंक्शन परिभाषित कर लें, तो आप इसे
          बार-बार बोल सकते हैं - जब भी और जहां भी आप चाहें!
        courseE_artist_concept_challenge2_b: |-
          आप इस कमांड का उपयोग करते हुए कैनवास पर अलग-अलग पोजीशनों पर कूद सकते हैं:
          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      courseE_artist_functions1:
        courseE_artist_functions1_a: प्रत्येक वर्ग की 100 पिक्सल की भुजाएं हैं, जिसका
          अर्थ है कि आपको अपना दूसरा वर्ग खींचने से पहले 175 पिक्सल आगे की ओर मूव
          करना होगा।
        courseE_artist_functions1_b: अपने गिलास बनाने के लिए आप एक ही बार में लाइनें
          खींच सकते हैं।
        courseE_artist_functions1_c: अधिक छोटे कोड के लिए, गिलासों के वर्ग फ्रेम खींचने
          हेतु `दोहराएं` लूप का उपयोग करने का प्रयास करें।
      courseE_artist_functions10:
        courseD_artist_functions10_b: यह ड्राइंग पिछली ड्राइंग के काफी मिलती-जुलती
          है, लेकिन `लाइन खींचे` फंक्शन अब अलग आकृति चित्रित कर रहा है।
        courseD_artist_functions10_a: बहुत-से `आगे की ओर मूव करें` ब्लॉक्स का उपयोग
          करने से बचने के लिए, `षट्कोण खींचें` फंक्शन बनाएं और उसे कई बार बोलें।
        courseD_artist_functions10_c: |-
          क्या आपको दिखाई दे रहा है कि यह ड्राइंग `षट्कोणों की लाइन` नामक फंक्शन को कहां उपयोग कर सकती है?

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2018:
        courseD_artist_functions10_b: यह ड्राइंग पिछली ड्राइंग के काफी मिलती-जुलती
          है, लेकिन `लाइन खींचे` फंक्शन अब अलग आकृति चित्रित कर रहा है।
        courseD_artist_functions10_a: बहुत-से `आगे की ओर मूव करें` ब्लॉक्स का उपयोग
          करने से बचने के लिए, `षट्कोण खींचें` फंक्शन बनाएं और उसे कई बार बोलें।
        courseD_artist_functions10_c: |-
          क्या आपको दिखाई दे रहा है कि यह ड्राइंग `षट्कोणों की लाइन` नामक फंक्शन को कहां उपयोग कर सकती है?

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2019:
        courseD_artist_functions10_b: यह ड्राइंग पिछली ड्राइंग के काफी मिलती-जुलती
          है, लेकिन `लाइन खींचे` फंक्शन अब अलग आकृति चित्रित कर रहा है।
        courseD_artist_functions10_a: बहुत-से `आगे की ओर मूव करें` ब्लॉक्स का उपयोग
          करने से बचने के लिए, `षट्कोण खींचें` फंक्शन बनाएं और उसे कई बार बोलें।
        courseD_artist_functions10_c: |-
          क्या आपको दिखाई दे रहा है कि यह ड्राइंग `षट्कोणों की लाइन` नामक फंक्शन को कहां उपयोग कर सकती है?

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions1_copy:
        courseE_artist_functions1_a: प्रत्येक वर्ग की 100 पिक्सल की भुजाएं हैं, जिसका
          अर्थ है कि आपको अपना दूसरा वर्ग खींचने से पहले 175 पिक्सल आगे की ओर मूव
          करना होगा।
        courseE_artist_functions1_b: अपने गिलास बनाने के लिए आप एक ही बार में लाइनें
          खींच सकते हैं।
        courseE_artist_functions1_c: अधिक छोटे कोड के लिए, गिलासों के वर्ग फ्रेम खींचने
          हेतु `दोहराएं` लूप का उपयोग करने का प्रयास करें।
      courseE_artist_functions2:
        courseD_artist_functions2_b: जो फंक्शन आप लिखें, उसमें आपका पूरा प्रोग्राम
          शामिल नहीं होना चाहिए, केवल आंशिक होना चाहिए, जो 100 पिक्सल की भुजाओं वाला
          वर्ग खींचता हो
        courseD_artist_functions2_c: '`जब चलाएं` ब्लॉक के अंतर्गत अपने फंक्शन को "बोलने”
          के लिए हरा `वर्ग खींचें` ब्लॉक का उपयोग करें। अन्यथा, आपके फंक्शन में कोड
          नहीं चलेगा।<xml><block type="procedures_callnoreturn" limit="2"><mutation
          name="draw a square"/></block></xml>'
        courseD_artist_functions2_a: |-
          आपके प्रोग्राम को यह करना चाहिए:

          -   फंक्शन का उपयोग
          -   100 + 75 पिक्सल आगे की ओर मूव करना
          -   फंक्शन का उपयोग
      courseE_artist_functions2_2018:
        courseD_artist_functions2_b: The function should not contain your whole program,
          just the part that draws a square with 100 pixel sides.
        courseD_artist_functions2_c: |-
          Make sure that you use the green `draw a square` block to "call" your function. Otherwise, the code in your function will not run.

          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Your program should:

          -   Use your function
          -   Move forward 100 + 75 pixels
          -   Use your function again
      courseE_artist_functions2_2019:
        courseD_artist_functions2_b: The function should not contain your whole program,
          just the part that draws a square with 100 pixel sides.
        courseD_artist_functions2_c: |-
          Make sure that you use the green `draw a square` block to "call" your function. Otherwise, the code in your function will not run.

          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Your program should:

          -   Use your function
          -   Move forward 100 + 75 pixels
          -   Use your function again
      courseE_artist_functions2_copy:
        courseD_artist_functions2_b: जो फंक्शन आप लिखें, उसमें आपका पूरा प्रोग्राम
          शामिल नहीं होना चाहिए, केवल आंशिक होना चाहिए, जो 100 पिक्सल की भुजाओं वाला
          वर्ग खींचता हो
        courseD_artist_functions2_c: '`जब चलाएं` ब्लॉक के अंतर्गत अपने फंक्शन को "बोलने”
          के लिए हरा `वर्ग खींचें` ब्लॉक का उपयोग करें। अन्यथा, आपके फंक्शन में कोड
          नहीं चलेगा।<xml><block type="procedures_callnoreturn" limit="2"><mutation
          name="draw a square"/></block></xml>'
        courseD_artist_functions2_a: |-
          आपके प्रोग्राम को यह करना चाहिए:

          -   फंक्शन का उपयोग
          -   100 + 75 पिक्सल आगे की ओर मूव करना
          -   फंक्शन का उपयोग
      courseE_artist_functions3:
        courseD_artist_functions3_a: इस पहेली को हल करने के लिए, आपको केवल ऐसी लूप
          जोड़ने की जरूरत है, जो 8 बार शुरुआती कोड को दोहराती हो।यदि आपको याद नहीं
          है कि शुरुआती कोड क्या था, वर्कस्पेस के ऊपरी दाएं कोने में "शुरू करें" पर
          क्लिक करें।
        courseD_artist_functions3_b: आपकी लूप के अंदर सभी 3 शुरुआती कोड ब्लॉक्स होने
          चाहिएं।
      courseE_artist_functions3_copy:
        courseD_artist_functions3_a: इस पहेली को हल करने के लिए, आपको केवल ऐसी लूप
          जोड़ने की जरूरत है, जो 8 बार शुरुआती कोड को दोहराती हो।यदि आपको याद नहीं
          है कि शुरुआती कोड क्या था, वर्कस्पेस के ऊपरी दाएं कोने में "शुरू करें" पर
          क्लिक करें।
        courseD_artist_functions3_b: आपकी लूप के अंदर सभी 3 शुरुआती कोड ब्लॉक्स होने
          चाहिएं।
      courseE_artist_functions4:
        courseD_artist_functions4_a: फंक्शन का उपयोग करने का प्रयास करें!
        courseD_artist_functions4_b: अपना फंक्शन बनाना शुरू करने के लिए टूलबॉक्स में
          से `तारा चित्रित करें` फंक्शन ब्लॉक को खींचें। इसमें पिछली पहेली वाला कोड
          ही होन चाहिए, क्योंकि आप वही तारा पैटर्न चित्रित कर रहे हैं।
        courseD_artist_functions4_c: अपने मुख्य प्रोग्राम में इस फंक्शन को बोलने के
          लिए हरा `तारा चित्रित करें` ब्लॉक उपयोग करें। प्रत्येक तारे के बीच आगे की
          ओर कूदना न भूलें!
      courseE_artist_functions4_copy:
        courseD_artist_functions4_a: फंक्शन का उपयोग करने का प्रयास करें!
        courseD_artist_functions4_b: अपना फंक्शन बनाना शुरू करने के लिए टूलबॉक्स में
          से `तारा चित्रित करें` फंक्शन ब्लॉक को खींचें। इसमें पिछली पहेली वाला कोड
          ही होन चाहिए, क्योंकि आप वही तारा पैटर्न चित्रित कर रहे हैं।
        courseD_artist_functions4_c: अपने मुख्य प्रोग्राम में इस फंक्शन को बोलने के
          लिए हरा `तारा चित्रित करें` ब्लॉक उपयोग करें। प्रत्येक तारे के बीच आगे की
          ओर कूदना न भूलें!
      courseE_artist_functions5:
        courseD_artist_functions5_a: हार न मानें!  जो आप सीख रहे हैं, उसे याद करें।
        courseD_artist_functions5_b: फंक्शन सुरक्षित किए कोड को किसी भी समय बोलने
          को आसान बनाते हैं, केवल लूप के बाहर से नहीं!
        courseD_artist_functions5_c: "`तारा चित्रित करें` फंक्शन में तारे की आकृति
          के लिए कोड को खींचने से शुरू करें, फिर तीन तारे चित्रित करने के लिए इस फंक्शन
          का उपयोग करें!"
      courseE_artist_functions5_2018:
        courseD_artist_functions5_a: हार न मानें!  जो आप सीख रहे हैं, उसे याद करें।
        courseD_artist_functions5_b: फंक्शन सुरक्षित किए कोड को किसी भी समय बोलने
          को आसान बनाते हैं, केवल लूप के बाहर से नहीं!
        courseD_artist_functions5_c: Start by creating your `draw a star` function,
          then use this function to draw the three stars!
      courseE_artist_functions5_2019:
        courseD_artist_functions5_a: हार न मानें!  जो आप सीख रहे हैं, उसे याद करें।
        courseD_artist_functions5_b: फंक्शन सुरक्षित किए कोड को किसी भी समय बोलने
          को आसान बनाते हैं, केवल लूप के बाहर से नहीं!
        courseD_artist_functions5_c: Start by creating your `draw a star` function,
          then use this function to draw the three stars!
      courseE_artist_functions5_copy:
        courseD_artist_functions5_a: हार न मानें!  जो आप सीख रहे हैं, उसे याद करें।
        courseD_artist_functions5_b: फंक्शन सुरक्षित किए कोड को किसी भी समय बोलने
          को आसान बनाते हैं, केवल लूप के बाहर से नहीं!
        courseD_artist_functions5_c: "`तारा चित्रित करें` फंक्शन में तारे की आकृति
          के लिए कोड को खींचने से शुरू करें, फिर तीन तारे चित्रित करने के लिए इस फंक्शन
          का उपयोग करें!"
      courseE_artist_functions6:
        grade4_artist_functions_windows0_a: अभी केवल एक खिड़की बनाने पर ध्यान केंद्रित
          करें।  हम अगली पहेली में फंक्शन बनाएंगे।
        grade4_artist_functions_windows0_b: नेस्टड लूप्स का उपयोग करने का प्रयास करें।
          अंदरूनी लूप वर्ग बनाएगी और बाहरी लूप वर्ग को चार बार घुमाएगी।
        grade4_artist_functions_windows0_c: गलती होने से न डरें! यह देखने के लिए कि
          क्या होगा,ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली
          को हल नहीं किया है।
      courseE_artist_functions7:
        courseD_artist_functions7_a: पहले अपना फंक्शन बनाने और फिर एक ही बार में खिड़कियां
          जोड़ने का प्रयास करें।
        courseD_artist_functions7_b: आपको कोई भी अतिरिक्त दोहराएं लूप्स जोड़ने की
          जरूरत नहीं होगी।  प्रत्येक ऊपरी खिड़की के बीच कलाकार को 100 पिक्सल, फिर
          नीचे की खिड़कियों तक जाने के लिए 150 पिक्सल नीचे कूदने के लिए सक्रिय करें।
      courseE_artist_functions7_2018:
        courseD_artist_functions7_a: पहले अपना फंक्शन बनाने और फिर एक ही बार में खिड़कियां
          जोड़ने का प्रयास करें।
        courseD_artist_functions7_b: To get from the top windows to the bottom windows,
          simply turn the artist right, jump 150 pixels, then turn the artist right
          again!  Now the artist will be facing the correct direction to finish the
          rest of the house!
      courseE_artist_functions7_2019:
        courseD_artist_functions7_a: पहले अपना फंक्शन बनाने और फिर एक ही बार में खिड़कियां
          जोड़ने का प्रयास करें।
        courseD_artist_functions7_b: To get from the top windows to the bottom windows,
          simply turn the artist right, jump 150 pixels, then turn the artist right
          again!  Now the artist will be facing the correct direction to finish the
          rest of the house!
      courseE_artist_functions8:
        courseD_artist_functions8_f: आपको केवल एक `आगे की ओर जाएं` ब्लॉक की जरूरत
          है, लेकिन आपको कुछ `आगे की ओर कूदें` और/या `पीछे की ओर कूदें` ब्लॉक्स की
          जरूरत होगी!
        courseD_artist_functions8_a: |-
          वर्ग के लिए फंक्शन बनाकर शुरुआत करें, फिर वर्गों की लाइनों के लिए फंक्शन बनाने का प्रयास करें।
          यह चित्र बनाने के लिए आप `वर्गों की लाइन खींचें` फंक्शन का उपयोग कैसे करेंगे?
        courseD_artist_functions8_d: "वर्गों की लाइन बनाने के लिए,\n\n-   3 बार दोहराएं
          \   \n-   **50 पिक्सल** भुजा की लंबाई वाला वर्ग खींचें    \n-   **100 पिक्सल**
          आगे की ओर कूदें"
        courseD_artist_functions8_b: |-
          इस तस्वीर में प्रत्येक पंक्ति की कल्पना 3 वर्गों की लाइन के तौर पर करें। वहां वर्गों की कितनी लाइनें है और आप उनमें से प्रत्येक को कहां खींचना शुरू करेंगे?

          ![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png>)
        courseD_artist_functions8_c: वर्गों की प्रत्येक लाइन के अंत में, कलाकार को
          वर्गों की अगली लाइन खींचने से पहले नीचे और पीछे की ओर कूदने की जरूरत होगी।
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_f: आपको केवल एक `आगे की ओर जाएं` ब्लॉक की जरूरत
          है, लेकिन आपको कुछ `आगे की ओर कूदें` और/या `पीछे की ओर कूदें` ब्लॉक्स की
          जरूरत होगी!
        courseD_artist_functions8_a: |-
          वर्ग के लिए फंक्शन बनाकर शुरुआत करें, फिर वर्गों की लाइनों के लिए फंक्शन बनाने का प्रयास करें।
          यह चित्र बनाने के लिए आप `वर्गों की लाइन खींचें` फंक्शन का उपयोग कैसे करेंगे?
        courseD_artist_functions8_d: "वर्गों की लाइन बनाने के लिए,\n\n-   3 बार दोहराएं
          \   \n-   **50 पिक्सल** भुजा की लंबाई वाला वर्ग खींचें    \n-   **100 पिक्सल**
          आगे की ओर कूदें"
        courseD_artist_functions8_b: |-
          इस तस्वीर में प्रत्येक पंक्ति की कल्पना 3 वर्गों की लाइन के तौर पर करें। वहां वर्गों की कितनी लाइनें है और आप उनमें से प्रत्येक को कहां खींचना शुरू करेंगे?

          ![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png>)
        courseD_artist_functions8_c: At the end of each set of staggered squares,
          the artist will need to jump down and backward before he draws the next
          set of staggered squares.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_f: आपको केवल एक `आगे की ओर जाएं` ब्लॉक की जरूरत
          है, लेकिन आपको कुछ `आगे की ओर कूदें` और/या `पीछे की ओर कूदें` ब्लॉक्स की
          जरूरत होगी!
        courseD_artist_functions8_a: |-
          वर्ग के लिए फंक्शन बनाकर शुरुआत करें, फिर वर्गों की लाइनों के लिए फंक्शन बनाने का प्रयास करें।
          यह चित्र बनाने के लिए आप `वर्गों की लाइन खींचें` फंक्शन का उपयोग कैसे करेंगे?
        courseD_artist_functions8_d: "वर्गों की लाइन बनाने के लिए,\n\n-   3 बार दोहराएं
          \   \n-   **50 पिक्सल** भुजा की लंबाई वाला वर्ग खींचें    \n-   **100 पिक्सल**
          आगे की ओर कूदें"
        courseD_artist_functions8_b: |-
          इस तस्वीर में प्रत्येक पंक्ति की कल्पना 3 वर्गों की लाइन के तौर पर करें। वहां वर्गों की कितनी लाइनें है और आप उनमें से प्रत्येक को कहां खींचना शुरू करेंगे?

          ![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png>)
        courseD_artist_functions8_c: At the end of each set of staggered squares,
          the artist will need to jump down and backward before he draws the next
          set of staggered squares.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8b_2018:
        courseD_artist_functions8_f: You only need one `move forward` block if you're
          doing this correctly!
        courseD_artist_functions8_a: Start by making a function for a square, then
          try making a function for a line of squares.
        courseD_artist_functions8_d: |-
          To make a line of squares,

          -   repeat 3 times
              -   draw a square
              -   jump forward **100 pixels**
      courseE_artist_functions8b_2019:
        courseD_artist_functions8_f: You only need one `move forward` block if you're
          doing this correctly!
        courseD_artist_functions8_a: Start by making a function for a square, then
          try making a function for a line of squares.
        courseD_artist_functions8_d: |-
          To make a line of squares,

          -   repeat 3 times
              -   draw a square
              -   jump forward **100 pixels**
      courseE_artist_functions8c_2018:
        courseD_artist_functions8_f: This is easier than it looks!  You shouldn't
          need any `move` or `jump` blocks here!
        courseD_artist_functions8_a: The second line of squares is just a 180 degree
          turn different than the first!
        courseD_artist_functions8_c: At the end of each line of squares, the artist
          only needs to turn 180 degrees before drawing the next line of squares.  Put
          the whole thing in a repeat loop to set you up for the next exercise!
      courseE_artist_functions8c_2019:
        courseD_artist_functions8_f: This is easier than it looks!  You shouldn't
          need any `move` or `jump` blocks here!
        courseD_artist_functions8_a: The second line of squares is just a 180 degree
          turn different than the first!
        courseD_artist_functions8_c: At the end of each line of squares, the artist
          only needs to turn 180 degrees before drawing the next line of squares.  Put
          the whole thing in a repeat loop to set you up for the next exercise!
      courseE_artist_functions9:
        courseD_artist_functions9_e: क्या आप उन सभी चार स्थानों का पता लगा सकते हैं,
          जहां इस ड्राइंग में `त्रिकोणों की लाइन` का उपयोग किया जा सके?![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          इस पहेली को तीन भागों में विभाजित किया जा सकता है:

          -   `त्रिकोण खींचें` फंक्शन बनाएं
          -   `त्रिकोणों की लाइन खींचें` फंक्शन बनाएं
          -   ड्राइंग पूरी करने के लिए अपने `त्रिकोणों की लाइन खींचें` फंक्शन का चार बार उपयोग करें
        courseD_artist_functions9_b: यह ड्राइंग 4 बार त्रिकोणों की लाइन खींचने और
          आपके द्वारा अगली त्रिकोण की लाइन खींचने से पहले 60 या 120 डिग्री मुड़ने
          से बनी है।
        courseD_artist_functions9_c: "त्रिकोणों की लाइन खींचने के लिए:\n\n-   4 बार
          दोहराएं    \n-   त्रिकोण खींचें    \n-   50 पिक्सल आगे की ओर कूदें"
        courseD_artist_functions9_d: "हीरा चित्रित करने के लिए:\n\n-   2 बार दोहराएं
          \   \n-   त्रिकोणों की लाइन खींचें    \n-   60 डिग्री मुड़ें    \n-   त्रिकोणों
          की लाइन खींचें    \n-   120 डिग्री मुड़ें"
      courseE_artist_functions9_2018:
        courseD_artist_functions9_e: क्या आप उन सभी चार स्थानों का पता लगा सकते हैं,
          जहां इस ड्राइंग में `त्रिकोणों की लाइन` का उपयोग किया जा सके?![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          इस पहेली को तीन भागों में विभाजित किया जा सकता है:

          -   `त्रिकोण खींचें` फंक्शन बनाएं
          -   `त्रिकोणों की लाइन खींचें` फंक्शन बनाएं
          -   ड्राइंग पूरी करने के लिए अपने `त्रिकोणों की लाइन खींचें` फंक्शन का चार बार उपयोग करें
        courseD_artist_functions9_b: यह ड्राइंग 4 बार त्रिकोणों की लाइन खींचने और
          आपके द्वारा अगली त्रिकोण की लाइन खींचने से पहले 60 या 120 डिग्री मुड़ने
          से बनी है।
        courseD_artist_functions9_c: "त्रिकोणों की लाइन खींचने के लिए:\n\n-   4 बार
          दोहराएं    \n-   त्रिकोण खींचें    \n-   50 पिक्सल आगे की ओर कूदें"
        courseD_artist_functions9_d: "हीरा चित्रित करने के लिए:\n\n-   2 बार दोहराएं
          \   \n-   त्रिकोणों की लाइन खींचें    \n-   60 डिग्री मुड़ें    \n-   त्रिकोणों
          की लाइन खींचें    \n-   120 डिग्री मुड़ें"
      courseE_artist_functions9_2019:
        courseD_artist_functions9_e: क्या आप उन सभी चार स्थानों का पता लगा सकते हैं,
          जहां इस ड्राइंग में `त्रिकोणों की लाइन` का उपयोग किया जा सके?![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          इस पहेली को तीन भागों में विभाजित किया जा सकता है:

          -   `त्रिकोण खींचें` फंक्शन बनाएं
          -   `त्रिकोणों की लाइन खींचें` फंक्शन बनाएं
          -   ड्राइंग पूरी करने के लिए अपने `त्रिकोणों की लाइन खींचें` फंक्शन का चार बार उपयोग करें
        courseD_artist_functions9_b: यह ड्राइंग 4 बार त्रिकोणों की लाइन खींचने और
          आपके द्वारा अगली त्रिकोण की लाइन खींचने से पहले 60 या 120 डिग्री मुड़ने
          से बनी है।
        courseD_artist_functions9_c: "त्रिकोणों की लाइन खींचने के लिए:\n\n-   4 बार
          दोहराएं    \n-   त्रिकोण खींचें    \n-   50 पिक्सल आगे की ओर कूदें"
        courseD_artist_functions9_d: "हीरा चित्रित करने के लिए:\n\n-   2 बार दोहराएं
          \   \n-   त्रिकोणों की लाइन खींचें    \n-   60 डिग्री मुड़ें    \n-   त्रिकोणों
          की लाइन खींचें    \n-   120 डिग्री मुड़ें"
      courseE_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: यदि आप एक बार और फंक्शन बोलते हैं,
          तो आप अंतिम कोने में वही डिज़ाइन बना सकते हैं।
        courseE_artist_functions_challenge1_b: आप अन्य पोजीशनों पर `कूद` भी सकते हैं
          या अपनी पसंद से पूरा डिज़ाइन बदल भी सकते हैं!
      courseE_artist_functions_challenge1_2018:
        courseE_artist_functions_challenge1_a: यदि आप एक बार और फंक्शन बोलते हैं,
          तो आप अंतिम कोने में वही डिज़ाइन बना सकते हैं।
        courseE_artist_functions_challenge1_b: आप अन्य पोजीशनों पर `कूद` भी सकते हैं
          या अपनी पसंद से पूरा डिज़ाइन बदल भी सकते हैं!
      courseE_artist_functions_challenge1_2019:
        courseE_artist_functions_challenge1_a: यदि आप एक बार और फंक्शन बोलते हैं,
          तो आप अंतिम कोने में वही डिज़ाइन बना सकते हैं।
        courseE_artist_functions_challenge1_b: आप अन्य पोजीशनों पर `कूद` भी सकते हैं
          या अपनी पसंद से पूरा डिज़ाइन बदल भी सकते हैं!
      courseE_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          इस `कूदें` ब्लॉक से आप जब भी चाहें, ज़ोम्बी कलाकार को ग्रिड पर किसी भी पिक्सल की ओर मूव कर सकते हैं। यह उसे कई पिक्सल दाएं और कई पिक्सल बाएं मूव करके काम करता है। इसे हमेशा ऊपर बाएं कोने से गिना जाता है, जिससे इसका अर्थ होता है कि इससे कोई फर्क नहीं पड़ता कि ज़ोम्बी कलाकार कमांड चलाने _से पहले_ कहां था![][0]
      courseE_artist_functions_challenge2_2018:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          इस `कूदें` ब्लॉक से आप जब भी चाहें, ज़ोम्बी कलाकार को ग्रिड पर किसी भी पिक्सल की ओर मूव कर सकते हैं। यह उसे कई पिक्सल दाएं और कई पिक्सल बाएं मूव करके काम करता है। इसे हमेशा ऊपर बाएं कोने से गिना जाता है, जिससे इसका अर्थ होता है कि इससे कोई फर्क नहीं पड़ता कि ज़ोम्बी कलाकार कमांड चलाने _से पहले_ कहां था![][0]
      courseE_artist_functions_challenge2_2019:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          इस `कूदें` ब्लॉक से आप जब भी चाहें, ज़ोम्बी कलाकार को ग्रिड पर किसी भी पिक्सल की ओर मूव कर सकते हैं। यह उसे कई पिक्सल दाएं और कई पिक्सल बाएं मूव करके काम करता है। इसे हमेशा ऊपर बाएं कोने से गिना जाता है, जिससे इसका अर्थ होता है कि इससे कोई फर्क नहीं पड़ता कि ज़ोम्बी कलाकार कमांड चलाने _से पहले_ कहां था![][0]
      courseE_artist_ramp8:
        courseE_artist_ramp8_a: To draw a side, use the `move forward by 100 pixels`
          block, and change the 100 to a 200.
        courseE_artist_ramp8_b: |-
          4 भुजाएं खींचने के लिए, दोहराएं लूप के अंदर `200 पिक्सल तक आगे की ओर मूव करें` ब्लॉक रखें और सुनिश्चित करें कि लूप 4 बार खींचने के लिए सेट है।

          उसके बाद मुड़ना न भूलें!
        courseE_artist_ramp8_c: 'आपकी लूप के अंदर दो ब्लॉक्स होने चाहिएं: `आगे की
          ओर मूव करें` और `90 डिग्री तक दाएं मुड़ें`।'
      courseE_artist_ramp8_2:
        courseE_artist_ramp8_a: To draw a side, use the `move forward by 100 pixels`
          block, and change the 100 to a 200.
        courseE_artist_ramp8_b: |-
          4 भुजाएं खींचने के लिए, दोहराएं लूप के अंदर `200 पिक्सल तक आगे की ओर मूव करें` ब्लॉक रखें और सुनिश्चित करें कि लूप 4 बार खींचने के लिए सेट है।

          उसके बाद मुड़ना न भूलें!
        courseE_artist_ramp8_c: 'आपकी लूप के अंदर दो ब्लॉक्स होने चाहिएं: `आगे की
          ओर मूव करें` और `90 डिग्री तक दाएं मुड़ें`।'
      courseE_artist_ramp9:
        courseD_artist_ramp12_a: यह वर्ग के समान कैसे है?  यह अलग कैसे है?
        courseD_artist_ramp12_b: यह देखने के लिए आपको कौन-से कोण की जरूरत है, आप `मुड़ें`
          ब्लॉक्स पर ड्रॉप डाउन मेन्यु का उपयोग कर सकते हैं!
        courseD_artist_ramp12_c: प्रत्येक भुजा खींचने के लिए, आपको 100 पिक्सल आगे
          की ओर मूव करने, फिर 120 डिग्री दाएं मुड़ने की जरूरत होगी। आपको कितनी भुजाओं
          की जरूरत है?
      courseE_artist_ramp9_2:
        courseD_artist_ramp12_a: यह वर्ग के समान कैसे है?  यह अलग कैसे है?
        courseD_artist_ramp12_b: यह देखने के लिए आपको कौन-से कोण की जरूरत है, आप `मुड़ें`
          ब्लॉक्स पर ड्रॉप डाउन मेन्यु का उपयोग कर सकते हैं!
        courseD_artist_ramp12_c: प्रत्येक भुजा खींचने के लिए, आपको 100 पिक्सल आगे
          की ओर मूव करने, फिर 120 डिग्री दाएं मुड़ने की जरूरत होगी। आपको कितनी भुजाओं
          की जरूरत है?
      courseE_bee_concept1:
        courseE_bee_concept1_b: क्या कोई ऐसे पैटर्न हैं, जो _यहां_ दोहराए जाते हैं?
        courseE_bee_concept1_a: यदि आप यह नहीं समझते कि यहां नेस्टड लूप्स का उपयोग
          कैसे करना है, तो कागज़ पर कदम दर कदम निर्देश लिखने का प्रयास करें।  उन पैटर्नों
          पर गोला लगाएं, जिन्हें आप देखते हैं।
      courseE_bee_concept1_2018:
        courseE_bee_concept1_b: क्या कोई ऐसे पैटर्न हैं, जो _यहां_ दोहराए जाते हैं?
        courseE_bee_concept1_a: यदि आप यह नहीं समझते कि यहां नेस्टड लूप्स का उपयोग
          कैसे करना है, तो कागज़ पर कदम दर कदम निर्देश लिखने का प्रयास करें।  उन पैटर्नों
          पर गोला लगाएं, जिन्हें आप देखते हैं।
      courseE_bee_concept2:
        courseE_bee_concept2_a: क्या `व्हाइल` लूप यहां सहायक होगा?
        courseE_bee_concept2_d: आप यह देखने के लिए कि क्या शहद > 0 है, खाली स्थानों
          को भी देख सकते हैं।
        courseE_bee_concept2_b: आप प्रत्येक रास्ते के अंत तक मूव करने और प्रत्येक
          स्थान से सारा शहद एकत्र करने के लिए `व्हाइल` लूप्स का उपयोग कर सकते हैं।
        courseE_bee_concept2_c: मधुमक्खी को प्रत्येक रास्ते के बाद किस तरफ मुड़ना
          चाहिए?
      courseE_bee_concept2_2018:
        courseE_bee_concept2_a: क्या `व्हाइल` लूप यहां सहायक होगा?
        courseE_bee_concept2_d: 'With this `while` loop you  can check empty spaces
          to see if the amount of honey is > 0. This does the same as the `while there
          is honey` loop. '
        courseE_bee_concept2_b: आप प्रत्येक रास्ते के अंत तक मूव करने और प्रत्येक
          स्थान से सारा शहद एकत्र करने के लिए `व्हाइल` लूप्स का उपयोग कर सकते हैं।
        courseE_bee_concept2_c: मधुमक्खी को प्रत्येक रास्ते के बाद किस तरफ मुड़ना
          चाहिए?
      courseE_bee_concept3:
        courseE_bee_concept3a_a: इस पहेली को हल करने के लिए नेस्टड `दोहराएं` लूप्स
          का उपयोग करने का प्रयास करें।
        courseE_bee_concept3a_b: यदि आप पता नहीं लगा पाते हैं कि लूप्स को कहां रखना
          है, तो कदम-दर-कदम कोड लिखने और पैटर्न खोजने की कोशिश करें।
        courseE_bee_concept3a_c: फूलों के तीन समूह हैं, इसलिए आपकी बाहरी `दोहराएं`
          लूप को तीन बार दोहराया जाना चाहिए।
      courseE_bee_concept3_2018:
        courseE_bee_concept3a_a: Try using nested `repeat` or `while` loops to solve
          this puzzle.
        courseE_bee_concept3a_b: यदि आप पता नहीं लगा पाते हैं कि लूप्स को कहां रखना
          है, तो कदम-दर-कदम कोड लिखने और पैटर्न खोजने की कोशिश करें।
      courseE_bee_concept4:
        courseE_bee_concept4_a: यहां `इफ/एल्स` स्टेटमेंट वाकई आपकी मदद कर सकती है।
        courseE_bee_concept4_b: सीढ़ी स्टेप पैटर्न सभी फूलों और मधु के छत्तों तक जाने
          में आपकी मदद कर सकता है।
        courseE_bee_concept4_c: यदि आप फूल पर हैं, तो आपको कितनी बार मधुरस प्राप्त
          करना पड़ेगा? क्या यह सभी फूलों के लिए समान संख्या है?
      courseE_bee_concept4_2018:
        courseE_bee_concept4_a: यहां `इफ/एल्स` स्टेटमेंट वाकई आपकी मदद कर सकती है।
        courseE_bee_concept4_b: सीढ़ी स्टेप पैटर्न सभी फूलों और मधु के छत्तों तक जाने
          में आपकी मदद कर सकता है।
        courseE_bee_concept4_c: यदि आप फूल पर हैं, तो आपको कितनी बार मधुरस प्राप्त
          करना पड़ेगा? क्या यह सभी फूलों के लिए समान संख्या है?
      courseE_bee_concept5:
        courseE_bee_concept5_a: फूल आयताकार रास्ते का अनुसरण करते हैं।   आप प्रति
          भुजा अलग-अलग संख्या में वर्गों के साथ भी `जब आगे रास्ता हो` का उपयोग करते
          हुए उस आयत का पता लगा सकते हैं।
        courseE_bee_concept5_c: यहां उस आयताकार रास्ते की तस्वीर दी गई है, जो मधुमक्खी
          ले सकती है।![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)
        courseE_bee_concept5_b: आप `इफ` ब्लॉक का उपयोग करते हुए फूल के प्रत्येक वर्ग
          देख सकते हैं, चाहे आपको पहले ही पता हो कि वहां एक भी नहीं है।
      courseE_bee_concept5_2018:
        courseE_bee_concept5_a: फूल आयताकार रास्ते का अनुसरण करते हैं।   आप प्रति
          भुजा अलग-अलग संख्या में वर्गों के साथ भी `जब आगे रास्ता हो` का उपयोग करते
          हुए उस आयत का पता लगा सकते हैं।
        courseE_bee_concept5_c: यहां उस आयताकार रास्ते की तस्वीर दी गई है, जो मधुमक्खी
          ले सकती है।![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)
        courseE_bee_concept5_b: आप `इफ` ब्लॉक का उपयोग करते हुए फूल के प्रत्येक वर्ग
          देख सकते हैं, चाहे आपको पहले ही पता हो कि वहां एक भी नहीं है।
      courseE_bee_functions1:
        courseE_bee_functions1_a: याद रखें कि बाएं और दाएं मोड़ मधुमक्खी के दृष्टिकोण
          से हैं।
        courseE_bee_functions1_b: अपने कोड को और छोटा करने के लिए मधुरस एकत्र करते
          समय `दोहराएं` लूप का उपयोग करें।
        courseE_bee_functions1_c: याद रखें कि बाएं और दाएं मोड़ मधुमक्खी के दृष्टिकोण
          से हैं।
      courseE_bee_functions10:
        courseE_bee_functions10_a: सारा शहद एकत्र करने के लिए आपको `व्हाइल` लूप की
          जरूरत होगी, क्योंकि यह मधु के छत्तों के बीच अलग-अलग होता है।
        courseE_bee_functions10_b: अपने फंक्शन में मोड़ और गतिविधि शामिल करें, ताकि
          जब मधुमक्खी मुख्य रास्ते पर हो तो आप इसे बोल पाएं।
        courseE_bee_functions10_c: मुख्य प्रोग्राम में अपने फंक्शन को बोलना याद रखें!
      courseE_bee_functions2:
        courseE_bee_functions2_a: फंक्शन आपके लिए लिखा गया है, लेकिन आपको प्रत्येक
          फूल पर इसे लिखने की जरूरत होगी।
        courseE_bee_functions2_b: यह <xml><block type="procedures_callnoreturn"><mutation
          name="get 2 nectar"/></block></xml> ब्लॉक आपको दिया गया फंक्शन बोलता है।
        courseE_bee_functions2_c: आप इस पहेली को हल करने के लिए आगे की ओर दो बार मूव
          करके 2 मधुरस प्राप्त करना चाहेंगे।
      courseE_bee_functions3:
        courseE_bee_functions3_a: 'इस पहेली के लिए आपके फंक्शन को केवल मधुरस एकत्र
          करने की जरूरत है, इसमें कोई भी `आगे की ओर मूव करें` या `मुड़ें` ब्लॉक्स
          नहीं होने चाहिएं। '
        courseE_bee_functions3_b: "`जब चलाया जाए` ब्लॉक के अंतर्गत अपना `5 प्राप्त
          करें` फंक्शन बोलें।"
        courseE_bee_functions3_c: आपका मुख्य प्रोग्राम पूरी गतिविधि को नियंत्रित करेगा,
          फंक्शन केवल इसलिए है कि जब मधुमक्खी फूल के पास पहुंचती है तो क्या होता है।
        courseE_bee_functions3_d: इस रास्ते का उपयोग करने का प्रयास करें।
      courseE_bee_functions4:
        courseE_bee_functions4_a: आपका फंक्शन एक तरफ के रास्तों पर नीचे की और जाएगा
          और मुख्य सड़क से वापस मधुमक्खी को लौटाएगा।  आपको उस हिस्से को अपने प्रोग्राम
          में जोड़ने की जरूरत नहीं है।
        courseE_bee_functions4_b: यह फंक्शन बोलने के लिए हरा `मूव करें और मधुरस प्राप्त
          करें` ब्लॉक का उपयोग करें।
        courseE_bee_functions4_c: आपको फंक्शन को बदलने की जरूरत नहीं है, बस इसे अपने
          प्रोग्राम में उपयोग करें।
      courseE_bee_functions5:
        courseE_bee_functions5_a: फंक्शन को संपादित करें ताकि यह मुख्य प्रोग्राम को
          बदले बिना पहेली को हल कर पाए।
        courseE_bee_functions5_c: "`आगे की ओर मूव करें` ब्लॉक को `पीछे की ओर मूव करें`
          ब्लॉक में बदला जा सकता है। रास्तों के अंत में हर तरफ मुड़ने की बजाय इसका
          उपयोग करें!"
        courseE_bee_functions5_b: "आपका फंक्शन मधुमक्खी को निम्नलिखित के लिए सक्रिय
          करेगा: \n\n-   मुड़ें\n-   आगे की ओर मूव करें\n-   सारा मधुरस एकत्र करें\n-
          \  पीछे की ओर मूव करें\n-   उस दिशा में वापस मुड़ें, जहां से मधुमक्खी ने
          शुरू किया था"
      courseE_bee_functions6:
        courseE_bee_functions6_a: यदि पहेली चुनौतीपूर्ण प्रतीत हो, तो थोड़े समय में
          अपना फंक्शन बनाने का प्रयास करें। कुछ ब्लॉक्स जोड़ें, फिर इसे आजमाएं। और
          जोड़ें, फिर दुबारा आजमाएं।  जल्दी ही, आप वहां पहुंच जाएंगे![][0]
        courseE_bee_functions6_b: यह फंक्शन को अंदर मूव करने की स्थिति में सहायक हो
          सकता है, लेकिन आपके सभी `मूव करें` ब्लॉक्स के वहां होने की जरूरत नहीं है।
      courseE_bee_functions7:
        courseE_bee_functions7_a: यदि पहेली चुनौतीपूर्ण प्रतीत हो, तो थोड़े समय में
          अपना फंक्शन बनाने का प्रयास करें। कुछ ब्लॉक्स जोड़ें, फिर इसे आजमाएं। और
          जोड़ें, फिर दुबारा आजमाएं।  जल्दी ही, आप वहां पहुंच जाएंगे![][0]
        courseE_bee_functions7_b: |-
          हरे फंक्शन ब्लॉक के अंदर अपना कोड बनाना याद रखें।
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: यह फंक्शन मधुमक्खी को रास्ते में नीचे मुड़ने, मधुरस
          एकत्र करने, शहद बनाने, फिर मधुमक्खी को चारों ओर मुड़ने के लिए सक्रिय करेगा
          और फिर उसे वापस लाएगा।
      courseE_bee_functions8:
        courseE_bee_functions8_a: आपके फंक्शन की जरूरत केवल मधुरस एकत्र करने के लिए
          होगी। दोहराएं लूप की बजाय व्हाइल लूप का उपयोग करने का प्रयास करें।
        courseE_bee_functions8_b: यह सुनिश्चित करने के लिए आप सारा मधुरस प्राप्त करते
          हैं, `जब मधुरस हो > 0` का उपयोग करें।
        courseE_bee_functions8_c: आपके मुख्य प्रोग्राम को सीढ़ी के स्टेप की गतिविधि
          वाले पैटर्न की जरूरत होगी। याद रखें, मुख्य प्रोग्राम `जब चलाया जाए` ब्लॉक
          के अंतर्गत कोड है।
      courseE_bee_functions9:
        courseE_bee_functions9_a: आप इस पहेली के लिए भी बिल्कुल उसी फंक्शन का उपयोग
          कर सकते हैं, जैसे आपने पिछली पहेली में किया था।  आपको ऐसा फंक्शन बनाने की
          जरूरत है, जो उस समय सारा मधुरस एकत्र करे, जब आप प्रत्येक फूल के पास पहुंचें।
        courseE_bee_functions9_b: हाालंकि आपको पता है कि कुछ फूलों में कितना मधुरस
          होता है, `व्हाइल` लूप उन सभी के लिए एक फंक्शन को क्रियाशील बना सकती है।
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: यदि पहेली चुनौतीपूर्ण प्रतीत हो, तो थोड़े
          समय में अपना फंक्शन बनाने का प्रयास करें। कुछ ब्लॉक्स जोड़ें, फिर इसे आजमाएं।
          और जोड़ें, फिर दुबारा आजमाएं।  जल्दी ही, आप वहां पहुंच जाएंगे![][0]
        courseE_bee_functions_challenge1_b: हरे फंक्शन ब्लॉक के अंदर अपना कोड बनाना
          याद रखें।
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: यदि पहेली चुनौतीपूर्ण प्रतीत हो, तो थोड़े
          समय में अपना फंक्शन बनाने का प्रयास करें। कुछ ब्लॉक्स जोड़ें, फिर इसे आजमाएं।
          और जोड़ें, फिर दुबारा आजमाएं।  जल्दी ही, आप वहां पहुंच जाएंगे![][0]
        courseE_bee_functions_challenge1_b: हरे फंक्शन ब्लॉक के अंदर अपना कोड बनाना
          याद रखें।
      courseE_farmer_concept1:
        courseE_farmer_concept1_a: "`जब वहां सुराख हो` ब्लॉक किसी भी सुराख को तब तक
          भरने में मदद करेगा, जब तक यह समतल न हो जाए।"
        courseE_farmer_concept1_b: आप सुराखों तक जाने के लिए सीढ़ी स्टेप पैटर्न का
          उपयोग कर सकते हैं।
      courseE_farmer_concept1_2018:
        courseE_farmer_concept1_a: "`जब वहां सुराख हो` ब्लॉक किसी भी सुराख को तब तक
          भरने में मदद करेगा, जब तक यह समतल न हो जाए।"
        courseE_farmer_concept1_b: आप सुराखों तक जाने के लिए सीढ़ी स्टेप पैटर्न का
          उपयोग कर सकते हैं।
      courseE_farmer_concept2:
        courseE_farmer_concept2_a: सभी रास्ते समान लंबाई के हैं, लेकिन वे अलग-अलग
          संख्या में अलग वर्ग हैं।  यहां लूप ठीक नहीं रहेगी। फंक्शन आजमाएं।
        courseE_farmer_concept2_b: ऐसा फंक्शन, जो मुड़ता है, नीचे के रास्ते की ओर
          जाता है, कद्दू एकत्र करता है, और मुख्य क्षितिज पर लौटता है, वह यहां सहायक
          हो सकता है।
        courseE_farmer_concept2_c: आपका मुख्य प्रोग्राम इस फंक्शन को हरे `कुछ करें`
          ब्लॉक के साथ बोल सकता है।
      courseE_farmer_concept2_2018:
        courseE_farmer_concept2_a: सभी रास्ते समान लंबाई के हैं, लेकिन वे अलग-अलग
          संख्या में अलग वर्ग हैं।  यहां लूप ठीक नहीं रहेगी। फंक्शन आजमाएं।
        courseE_farmer_concept2_b: ऐसा फंक्शन, जो मुड़ता है, नीचे के रास्ते की ओर
          जाता है, कद्दू एकत्र करता है, और मुख्य क्षितिज पर लौटता है, वह यहां सहायक
          हो सकता है।
        courseE_farmer_concept2_c: आपका मुख्य प्रोग्राम इस फंक्शन को हरे `कुछ करें`
          ब्लॉक के साथ बोल सकता है।
      courseE_farmer_concept3:
        grade3_robotFarmer_ConditionalsIntro_8_a: "`जब आगे रास्ता हो` ब्लॉक से आप
          आगे जाना जारी रख सकते हैं, चाहे आपको पता न हो कि रास्ते में कितने वर्ग हैं।"
        grade3_robotFarmer_ConditionalsIntro_8_b: रास्ते के अंत तक पहुंचने पर आपको
          क्या करना चाहिए?
        grade3_robotFarmer_ConditionalsIntro_8_c: प्रत्येक सीधे रास्ते के लिए कई बार
          अपना कोड चलाने के लिए `दोहराएं` लूप का उपयोग करें।
      courseE_farmer_concept3_2018:
        grade3_robotFarmer_ConditionalsIntro_8_a: "`जब आगे रास्ता हो` ब्लॉक से आप
          आगे जाना जारी रख सकते हैं, चाहे आपको पता न हो कि रास्ते में कितने वर्ग हैं।"
        grade3_robotFarmer_ConditionalsIntro_8_b: रास्ते के अंत तक पहुंचने पर आपको
          क्या करना चाहिए?
        grade3_robotFarmer_ConditionalsIntro_8_c: प्रत्येक सीधे रास्ते के लिए कई बार
          अपना कोड चलाने के लिए `दोहराएं` लूप का उपयोग करें।
      courseE_farmer_functions1:
        courseE_farmer_functions1_a: इस समय टूलबॉक्स थोड़ा अलग तरह से व्यवस्थित किया
          गया है! यह देखने के लिए विभिन्न श्रेणियों पर क्लिक करें कि आपके पास कौन-से
          ब्लॉक्स हैं।
        courseE_farmer_functions1_b: आपको केवल एक कद्दू लेने की जरूरत है, लेकिन क्या
          आप इस तक जाने के लिए लूप का उपयोग कर सकते हैं?
      courseE_farmer_functions10b:
        courseE_farmer_functions10b_a: आपको पहले अपना फंक्शन पुनः बनाना होगा।
        courseE_farmer_functions10b_b: आपको पहले कद्दू के बाद किस तरफ मुड़ने की जरूरत
          है?
        courseE_farmer_functions10b_c: यदि आपको फंक्शन बनाने में मदद की जरूरत है तो
          पिछली पहेली को वापस देखें।
      courseE_farmer_functions1_2018:
        courseE_farmer_functions1_a: इस समय टूलबॉक्स थोड़ा अलग तरह से व्यवस्थित किया
          गया है! यह देखने के लिए विभिन्न श्रेणियों पर क्लिक करें कि आपके पास कौन-से
          ब्लॉक्स हैं।
        courseE_farmer_functions1_b: आपको केवल एक कद्दू लेने की जरूरत है, लेकिन क्या
          आप इस तक जाने के लिए लूप का उपयोग कर सकते हैं?
      courseE_farmer_functions1_2019:
        courseE_farmer_functions1_a: इस समय टूलबॉक्स थोड़ा अलग तरह से व्यवस्थित किया
          गया है! यह देखने के लिए विभिन्न श्रेणियों पर क्लिक करें कि आपके पास कौन-से
          ब्लॉक्स हैं।
        courseE_farmer_functions1_b: आपको केवल एक कद्दू लेने की जरूरत है, लेकिन क्या
          आप इस तक जाने के लिए लूप का उपयोग कर सकते हैं?
      courseE_farmer_functions1a:
        courseE_farmer_functions1a_a: कदम दर कदम `इफ/एल्स` स्टेटमेंट्स के बारे में
          सोचें। यदि आप कॉर्न के पौधे पर खड़े हैं तो आपको क्या करना चाहिए?
        courseE_farmer_functions1a_b: कद्दू प्राप्त करने के लिए `तक दोहराएं` ब्लॉक
          का उपयोग करें!
      courseE_farmer_functions1a_2018:
        courseE_farmer_functions1a_a: Make sure you read through the function definition.
          Can you tell what it does?
        courseE_farmer_functions1a_b: कद्दू प्राप्त करने के लिए `तक दोहराएं` ब्लॉक
          का उपयोग करें!
      courseE_farmer_functions1a_2019:
        courseE_farmer_functions1a_a: Make sure you read through the function definition.
          Can you tell what it does?
        courseE_farmer_functions1a_b: कद्दू प्राप्त करने के लिए `तक दोहराएं` ब्लॉक
          का उपयोग करें!
      courseE_farmer_functions2b:
        courseE_farmer_functions2b_a: आप दो रास्तों के सिरों तक जाने के लिए `कद्दू
          तक दोहराएं` का उपयोग कर सकते हैं।
        courseE_farmer_functions2b_b: जुड़ने वाले रास्ते पर कोई कॉर्न नहीं है, इसलिए
          आप इसके साथ मूव करके मुड़ सकते हैं।
        courseE_farmer_functions2b_c: सारी फसलें प्राप्त करने के लिए आपको दो अलग-अलग
          `तक दोहराएं` ब्लॉक्स की जरूरत होगी।
      courseE_farmer_functions2b_2018:
        courseE_farmer_functions2b_a: You can `repeat until pumpkin` to get to the
          ends of the two paths.
        courseE_farmer_functions2b_b: जुड़ने वाले रास्ते पर कोई कॉर्न नहीं है, इसलिए
          आप इसके साथ मूव करके मुड़ सकते हैं।
        courseE_farmer_functions2b_c: सारी फसलें प्राप्त करने के लिए आपको दो अलग-अलग
          `तक दोहराएं` ब्लॉक्स की जरूरत होगी।
      courseE_farmer_functions2b_2019:
        courseE_farmer_functions2b_a: You can `repeat until pumpkin` to get to the
          ends of the two paths.
        courseE_farmer_functions2b_b: जुड़ने वाले रास्ते पर कोई कॉर्न नहीं है, इसलिए
          आप इसके साथ मूव करके मुड़ सकते हैं।
        courseE_farmer_functions2b_c: सारी फसलें प्राप्त करने के लिए आपको दो अलग-अलग
          `तक दोहराएं` ब्लॉक्स की जरूरत होगी।
      courseE_farmer_functions2ba:
        courseE_farmer_functions2ba_a: यह फंक्शन बोलने के लिए हरा `कॉर्न और कद्दू`
          ब्लॉक का उपयोग करें।
        courseE_farmer_functions2ba_b: यह देखने के लिए कि यह फंक्शन कैसे काम करता
          है, `जब चलाया जाए` के अंतर्गत सभी ब्लॉक्स को एक साथ वर्कस्पेस में खींचें।
      courseE_farmer_functions2ba_2018:
        courseE_farmer_functions2ba_a: Use the green `get all pumpkins` block to make
          sure you get all of the pumpkins!
      courseE_farmer_functions2ba_2019:
        courseE_farmer_functions2ba_a: Use the green `get all pumpkins` block to make
          sure you get all of the pumpkins!
      courseE_farmer_functions3c:
        courseE_farmer_functions3c_a: इस प्रोग्राम में अकसर कौन-सा क्रम दोहराया जाता
          है? क्या आप इन ब्लॉक्स को फंक्शन में खींच सकते हैं?
        courseE_farmer_functions3c_b: जहां भी आपने ब्लॉक्स हटाए हों, वहां मुख्य प्रोग्राम
          में अपना फंक्शन बोलना न भूलें।
      courseE_farmer_functions3c1_2018:
        coursee_farmer_functions3c1_2018_a: You'll need to use the `pick along path`
          function three times to solve this puzzle.
        coursee_farmer_functions3c1_2018_b: What code do you need to add to get around
          the corners?
      courseE_farmer_functions3c1_2019:
        coursee_farmer_functions3c1_2018_a: You'll need to use the `pick along path`
          function three times to solve this puzzle.
        coursee_farmer_functions3c1_2018_b: What code do you need to add to get around
          the corners?
      courseE_farmer_functions4b:
        courseE_farmer_functions4b_a: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा,ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली
          को हल नहीं किया है।
        courseE_farmer_functions4b_b: प्रत्येक रास्ते के बाद मुड़ना याद रखें।
        courseE_farmer_functions4b_c: हरे `कॉर्न और कद्दू` ब्लॉक्स, टूलबॉक्स के फंक्शन्स
          टैब में हैं।
      courseE_farmer_functions5c:
        courseE_farmer_functions5c_a: क्या कोई और पैटर्न हैं, इन्हें आप इस पहेली में
          लूप कर सकते हैं?
        courseE_farmer_functions5c_b: गलती होने से न डरें! यह देखने के लिए कि क्या
          होगा,ब्लॉक्स जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली
          को हल नहीं किया है।
      courseE_farmer_functions6c:
        courseE_farmer_functions6c_a: लेट्स को देखने के लिए भी अपना फंक्शन संपादित
          करें।
        courseE_farmer_functions6c_b: क्या `इफ/एल्स` ब्लॉक यह देखने में सहायक होगा
          कि किसी स्थान पर लेट्स है या नहीं?
        courseE_farmer_functions6c_c: कॉर्न देखते रहना न भूलें!
      courseE_farmer_functions7a1_2018:
        courseE_farmer_functions7a1_2018_a: Create your function under the `functions`
          section in the toolbox.
        courseE_farmer_functions7a1_2018_b: Don't forget to use your function when
          you're done making it!
      courseE_farmer_functions7a1_2019:
        courseE_farmer_functions7a1_2018_a: Create your function under the `functions`
          section in the toolbox.
        courseE_farmer_functions7a1_2018_b: Don't forget to use your function when
          you're done making it!
      courseE_farmer_functions7b:
        courseE_farmer_functions7b_a: आपको यहां फंक्शन की जरूरत नहीं है, लेकिन यदि
          यह आपके लिए उपयोगी है तो आप एक बना सकते हैं!
        courseE_farmer_functions7b_b: फसलों को देखने के लिए `इफ/एल्स` स्टेटमेंट का
          उपयोग करें, फिर इस आधार पर मुड़ें कि आप कौन-सी फसल ढूंढते हैं।
        courseE_farmer_functions7b_c: "`कद्दू तक दोहराएं` लूप पूरी पहेली में आपकी
          मदद कर सकती है।"
      courseE_farmer_functions8a1_2018:
        courseE_farmer_functions8a1_2018a: Start this puzzle off by coding the same
          function you made in the last puzzle.
        courseE_farmer_functions8a1_2018b: After the function runs the first time,
          you'll need to make one extra turn before you can run it again.
      courseE_farmer_functions8a1_2019:
        courseE_farmer_functions8a1_2018a: Start this puzzle off by coding the same
          function you made in the last puzzle.
        courseE_farmer_functions8a1_2018b: After the function runs the first time,
          you'll need to make one extra turn before you can run it again.
      courseE_farmer_functions8b:
        courseE_farmer_functions8b_a: यह देखने के लिए दिए गए कोड को चलाने का प्रयास
          करें कि यह क्या करता है। इसके बाद आपको क्या करने की जरूरत है?
        courseE_farmer_functions8b_b: फंक्शन में सभी शुरुआती ब्लॉक्स खींचें ताकि आप
          एक से अधिक बार उनका उपयोग कर सकें।
        courseE_farmer_functions8b_c: आपको कितनी बार फंक्शन बोलने की जरूरत है?
      courseE_farmer_functions9a1_2018:
        courseE_farmer_functions9a1_2018a: You'll use the same function that you made
          in the last couple of puzzles.
        courseE_farmer_functions9a1_2018b: Use the same steps from the previous puzzle
          to solve the first half of this puzzle.
        courseE_farmer_functions9a1_2018c: You'll need to `turn` a few times and `move
          forward` to get to the last crop of lettuce before you can call your function
          again.
      courseE_farmer_functions9a1_2019:
        courseE_farmer_functions9a1_2018a: You'll use the same function that you made
          in the last couple of puzzles.
        courseE_farmer_functions9a1_2018b: Use the same steps from the previous puzzle
          to solve the first half of this puzzle.
        courseE_farmer_functions9a1_2018c: You'll need to `turn` a few times and `move
          forward` to get to the last crop of lettuce before you can call your function
          again.
      courseE_farmer_functions9b:
        courseE_farmer_functions9b_a: क्या आप रास्ते पर मूव करने के लिए नेस्टड `इफ`
          और `इफ/एल्स` स्टेटमेंट्स का उपयोग कर सकते हैं?
        courseE_farmer_functions9b_b: सभी रास्तों से मूव करने के लिए `कद्दू तक दोहराएं`
          का उपयोग करें।
        courseE_farmer_functions9b_c: आप रास्तों से इस तरह मूव करना चाहेंगे, मानो
          वे प्रत्येक लूप के बाद बड़े होते वर्ग हों।
      courseE_farmer_ramp11a:
        courseE_farmer_ramp12_a: 'किसान को यह बताने के लिए कि कितनी बार बेलचे से मिट्टी
          हटानी है, `दोहराएं` लूप का उपयोग करने की बजाय, अब आप `जब वहां ढेर हो` ब्लॉक
          का उपयोग कर सकते हैं।  '
        courseE_farmer_ramp12_b: आपको मिट्टी के पास जाने के लिए केवल एक बार आगे की
          ओर मूव करने की जरूरत है।
      courseE_farmer_ramp11a_2018:
        courseE_farmer_ramp12_a: 'किसान को यह बताने के लिए कि कितनी बार बेलचे से मिट्टी
          हटानी है, `दोहराएं` लूप का उपयोग करने की बजाय, अब आप `जब वहां ढेर हो` ब्लॉक
          का उपयोग कर सकते हैं।  '
        courseE_farmer_ramp12_b: आपको मिट्टी के पास जाने के लिए केवल एक बार आगे की
          ओर मूव करने की जरूरत है।
      courseE_farmer_ramp11a_2019:
        courseE_farmer_ramp12_a: 'किसान को यह बताने के लिए कि कितनी बार बेलचे से मिट्टी
          हटानी है, `दोहराएं` लूप का उपयोग करने की बजाय, अब आप `जब वहां ढेर हो` ब्लॉक
          का उपयोग कर सकते हैं।  '
        courseE_farmer_ramp12_b: आपको मिट्टी के पास जाने के लिए केवल एक बार आगे की
          ओर मूव करने की जरूरत है।
      courseE_farmer_ramp11b:
        courseE_farmer_ramp11b_a: You can nest your `while` loop inside of a `repeat`
          loop to make your code shorter.
      courseE_farmer_ramp11b_2018:
        courseE_farmer_ramp11b_a: You can nest your `while` loop inside of a `repeat`
          loop to make your code shorter.
      courseE_farmer_ramp11b_2019:
        courseE_farmer_ramp11b_a: You can nest your `while` loop inside of a `repeat`
          loop to make your code shorter.
      courseE_farmer_ramp12_forswap:
        courseE_farmer_ramp12_b: You will still need to use a `repeat` loop on the
          outside of it all to tell the farmer how many times to walk forward and
          get lettuce.
      courseE_farmer_ramp12_forswap_2018:
        courseE_farmer_ramp12_b: You will still need to use a `repeat` loop on the
          outside of it all to tell the farmer how many times to walk forward and
          get lettuce.
      courseE_farmer_ramp12_forswap_2019:
        courseE_farmer_ramp12_b: You will still need to use a `repeat` loop on the
          outside of it all to tell the farmer how many times to walk forward and
          get lettuce.
      courseE_farmer_ramp12c:
        courseE_farmer_ramp12b_b: You will still need to use an `until` loop first,
          then use a `while` loop once you get to the lettuce.
      courseE_farmer_ramp12c_2018:
        courseE_farmer_ramp12b_b: You will still need to use an `until` loop first,
          then use a `while` loop once you get to the lettuce.
      courseE_farmer_ramp12c_2019:
        courseE_farmer_ramp12b_b: You will still need to use an `until` loop first,
          then use a `while` loop once you get to the lettuce.
      courseE_farmer_ramp12d:
        courseE_farmer_ramp12d_b: You will still need to put your `until` and `while`
          loops inside of a `repeat` loop to solve this puzzle!
      courseE_farmer_ramp12d_2018:
        courseE_farmer_ramp12d_b: You will still need to put your `until` and `while`
          loops inside of a `repeat` loop to solve this puzzle!
      courseE_farmer_ramp12d_2019:
        courseE_farmer_ramp12d_b: You will still need to put your `until` and `while`
          loops inside of a `repeat` loop to solve this puzzle!
      courseE_farmer_ramp12e:
        courseE_farmer_ramp12e_b: The solution to this puzzle will look a lot like
          the solution to the last puzzle, but turning in the other direction.
      courseE_farmer_ramp12e_2018:
        courseE_farmer_ramp12e_b: The solution to this puzzle will look a lot like
          the solution to the last puzzle, but turning in the other direction.
      courseE_farmer_ramp12e_2019:
        courseE_farmer_ramp12e_b: The solution to this puzzle will look a lot like
          the solution to the last puzzle, but turning in the other direction.
      courseE_farmer_ramp12f:
        courseE_farmer_ramp12f_b: किसान को निर्णय करने में मदद के लिए `इफ/एल्स` ब्लॉक
          का उपयोग करें कि उसे दाएं मुड़ना चाहिए या बाएं।
      courseE_farmer_ramp12f_2018:
        courseE_farmer_ramp12f_b: किसान को निर्णय करने में मदद के लिए `इफ/एल्स` ब्लॉक
          का उपयोग करें कि उसे दाएं मुड़ना चाहिए या बाएं।
      courseE_farmer_ramp12f_2019:
        courseE_farmer_ramp12f_b: किसान को निर्णय करने में मदद के लिए `इफ/एल्स` ब्लॉक
          का उपयोग करें कि उसे दाएं मुड़ना चाहिए या बाएं।
      courseE_farmer_ramp12g:
        courseE_farmer_ramp12G_b: किसान को निर्णय करने में मदद के लिए `इफ/एल्स` ब्लॉक
          का उपयोग करें कि उसे दाएं मुड़ना चाहिए या बाएं।
      courseE_farmer_ramp12g_2018:
        courseE_farmer_ramp12G_b: किसान को निर्णय करने में मदद के लिए `इफ/एल्स` ब्लॉक
          का उपयोग करें कि उसे दाएं मुड़ना चाहिए या बाएं।
      courseE_farmer_ramp12g_2019:
        courseE_farmer_ramp12G_b: किसान को निर्णय करने में मदद के लिए `इफ/एल्स` ब्लॉक
          का उपयोग करें कि उसे दाएं मुड़ना चाहिए या बाएं।
      courseE_playLab_challenge1:
        courseE_playLab_challenge1_a: यहां कुछ कार्य दिए गए हैं, जो आप तब कर सकते
          हैं, जब खिलाड़ी गेम जीतता है:-   डायनासोर को गायब करें।-   गिलहरियों को
          रोकें।-   गिलहरियों और नाइट को खुश करें।-   नई पृष्ठभूमि सेट करें।-   मदद
          करने के लिए खिलाड़ी का धन्यवाद करने हेतु नाइट को सक्रिय करें।-   सभी अभिनेताओं
          को गायब करें और "आप जीते!" संदेश दिखाएं।
        courseE_playLab_challenge1_b: यहां कुछ कार्य दिए गए हैं, जो आप तब कर सकते
          हैं, जब खिलाड़ी गेम हारता है:-   नाइट को गायब करें।-   गिलहरियों को उदास
          करें।-   डायनासोर को कुछ कहने के लिए सक्रिय करें।-   नई पृष्ठभूमि सेट करें।-   मदद
          करने के लिए खिलाड़ी का धन्यवाद करने हेतु नाइट को सक्रिय करें।-   सभी अभिनेताओं
          को गायब करें और "गेम समाप्त!" संदेश दिखाएं।
      courseE_playLab_scaffold1:
        courseE_playLab_scaffold1_a: "`अभिनेता 1 को ??? चित्र पर सेट करें` ब्लॉक का
          उपयोग स्टेज पर अभिनेता जोड़ने के लिए किया जा सकता है।"
        courseE_playLab_scaffold1_b: प्रोग्राम के शुरू में अपने अभिनेता को प्रकट करने
          के लिए `जब चलाया जाए` के अंतर्गत `अभिनेता सेट करें` ब्लॉक रखें।
        courseE_playLab_scaffold1_c: अपने दृश्य में पृष्ठभूमि चुनने के लिए `??? पृष्ठभूमि
          सेट करें` का उपयोग करें।
      courseE_playLab_scaffold2:
        courseE_playLab_scaffold1_a: ब्लॉक नियंत्रणों की दिशा को बदलने के लिए `जब
          ____ तीर` इवेंट के ड्रॉपडाउन मेन्यु चलाएं।
        courseE_playLab_scaffold1_b: प्रत्येक को नीचे मूव करने की दिशा के साथ, आपके
          पास चार `जब तीर` इवेंट ब्लॉक्स होने चाहिएं।
        courseE_playLab_scaffold1_c: जब आप पूरा कर लें, तो आप तीर वाली कुंजियों के
          साथ अपने हीरो को इधर-उधर मूव करने में सक्षम होंगे!
      courseE_playLab_scaffold4:
        courseE_playLab_scaffold4_a: अंक जोड़ने के लिए `अंक स्कोर करें` और एक घटाने
          के लिए `अंक हटाएं` का उपयोग करें।
      courseE_playLab_scaffold5:
        courseE_playLab_scaffold5_a: इस स्तर को समाप्त करने के लिए, आपको जीतना या
          हारना होगा। समाप्त करने के लिए `जीतने के तौर पर गेम समाप्त करें` या `हारने
          के तौर पर गेम समाप्त करें` ब्लॉक का उपयोग करें।
      courseF_artist_for1:
        courseF_artist_for1_a: |-
          क्या आप कुछ ऐसा चित्रित कर सकते हैं:

          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for10:
        courseF_artist_for10_a: ड्राइंग में चित्र `अल्फा सेट करें` और ब्रुश के आकार
          के तौर पर `काउंटर` / 10 का उपयोग करते हुए बना है।
        courseF_artist_for10_b: ड्राइंग में चित्र 61 डिग्री के मोड़ का उपयोग करता
          है।
        courseF_artist_for10_c: |-
          Want to know how the sample image was done?

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for10_2018:
        courseF_artist_for10_a: ड्राइंग में चित्र `अल्फा सेट करें` और ब्रुश के आकार
          के तौर पर `काउंटर` / 10 का उपयोग करते हुए बना है।
        courseF_artist_for10_b: ड्राइंग में चित्र 61 डिग्री के मोड़ का उपयोग करता
          है।
        courseF_artist_for10_c: |-
          Want to know how the sample image was done?

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for10_2019:
        courseF_artist_for10_a: ड्राइंग में चित्र `अल्फा सेट करें` और ब्रुश के आकार
          के तौर पर `काउंटर` / 10 का उपयोग करते हुए बना है।
        courseF_artist_for10_b: ड्राइंग में चित्र 61 डिग्री के मोड़ का उपयोग करता
          है।
        courseF_artist_for10_c: |-
          Want to know how the sample image was done?

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for1_2018:
        courseF_artist_for1_a: |-
          क्या आप कुछ ऐसा चित्रित कर सकते हैं:

          ![](https://images.code.org/efee6df2a8840c89fa535bef72e9e45f-image-1530131926453.png)
      courseF_artist_for1_2019:
        courseF_artist_for1_a: |-
          क्या आप कुछ ऐसा चित्रित कर सकते हैं:

          ![](https://images.code.org/efee6df2a8840c89fa535bef72e9e45f-image-1530131926453.png)
      courseF_artist_for2:
        courseF_artist_for2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: अपनी फॉर लूप के अंदर 10 तक गिनना याद रखें।
        courseF_artist_for2_c: |-
          यह वह पैटर्न है, जिसका अनुसरण आर्टिस्ट करेगा:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2018:
        courseF_artist_for2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: अपनी फॉर लूप के अंदर 10 तक गिनना याद रखें।
        courseF_artist_for2_c: |-
          यह वह पैटर्न है, जिसका अनुसरण आर्टिस्ट करेगा:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2019:
        courseF_artist_for2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: अपनी फॉर लूप के अंदर 10 तक गिनना याद रखें।
        courseF_artist_for2_c: |-
          यह वह पैटर्न है, जिसका अनुसरण आर्टिस्ट करेगा:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for3:
        courseF_artist_for3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
      courseF_artist_for3_2018:
        courseF_artist_for3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
      courseF_artist_for3_2019:
        courseF_artist_for3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
      courseF_artist_for4:
        courseF_artist_for4_a: |-
          **आपको कौन-सी सबसे छोटी संख्या की जरूरत होगी?\
          सबसे बड़ी संख्या कौन-सी है?\
          हर बार वृद्धि कितनी बड़ी है?**

          वो वही सवाल हैं, जिन्हें आपको `फॉर` लूप के खाली स्थानों को भरने के लिए पूछने की जरूरत है।
        courseF_artist_for4_b: आपका कोड उससे काफी मिलता-जुलता होगा, जो आपने पिछली
          पहेली में लिखा था, लेकिन इस बार वर्ग खींचना याद रखें!
        courseF_artist_for4_c: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
      courseF_artist_for4_2018:
        courseF_artist_for4_a: |-
          **आपको कौन-सी सबसे छोटी संख्या की जरूरत होगी?\
          सबसे बड़ी संख्या कौन-सी है?\
          हर बार वृद्धि कितनी बड़ी है?**

          वो वही सवाल हैं, जिन्हें आपको `फॉर` लूप के खाली स्थानों को भरने के लिए पूछने की जरूरत है।
        courseF_artist_for4_b: आपका कोड उससे काफी मिलता-जुलता होगा, जो आपने पिछली
          पहेली में लिखा था, लेकिन इस बार वर्ग खींचना याद रखें!
        courseF_artist_for4_c: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
      courseF_artist_for4_2019:
        courseF_artist_for4_a: |-
          **आपको कौन-सी सबसे छोटी संख्या की जरूरत होगी?\
          सबसे बड़ी संख्या कौन-सी है?\
          हर बार वृद्धि कितनी बड़ी है?**

          वो वही सवाल हैं, जिन्हें आपको `फॉर` लूप के खाली स्थानों को भरने के लिए पूछने की जरूरत है।
        courseF_artist_for4_b: आपका कोड उससे काफी मिलता-जुलता होगा, जो आपने पिछली
          पहेली में लिखा था, लेकिन इस बार वर्ग खींचना याद रखें!
        courseF_artist_for4_c: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
      courseF_artist_for5:
        courseF_artist_for5_a: यह सर्पिल रेखा बनाते समय आपको अंदर `दोहराएं` लूप की
          जरूरत नहीं है!
        courseF_artist_for5_b: अपनी `फॉर` लूप के लिए, मूव करें और मुड़ें ब्लॉक्स पूरी
          तरह से वैसे ही रह सकते हैं।
      courseF_artist_for5_2018:
        courseF_artist_for5_a: यह सर्पिल रेखा बनाते समय आपको अंदर `दोहराएं` लूप की
          जरूरत नहीं है!
        courseF_artist_for5_b: अपनी `फॉर` लूप के लिए, मूव करें और मुड़ें ब्लॉक्स पूरी
          तरह से वैसे ही रह सकते हैं।
      courseF_artist_for5_2019:
        courseF_artist_for5_a: यह सर्पिल रेखा बनाते समय आपको अंदर `दोहराएं` लूप की
          जरूरत नहीं है!
        courseF_artist_for5_b: अपनी `फॉर` लूप के लिए, मूव करें और मुड़ें ब्लॉक्स पूरी
          तरह से वैसे ही रह सकते हैं।
      courseF_artist_for6:
        courseF_artist_for6_a: आपकी `फॉर` लूप 15 से 300 गुणा 15 तक गिनेगी।
        courseF_artist_for6_b: इस `फॉर` लूप के अंदर `आगे की ओर मूव करें` और `मुड़ें`
          ब्लॉक रखें।
        courseF_artist_for6_c: आपको `मुड़ें` ब्लॉक में डिग्रियों की संख्या को बदलना
          होगा।
      courseF_artist_for6_2018:
        courseF_artist_for6_a: आपकी `फॉर` लूप 15 से 300 गुणा 15 तक गिनेगी।
        courseF_artist_for6_b: इस `फॉर` लूप के अंदर `आगे की ओर मूव करें` और `मुड़ें`
          ब्लॉक रखें।
        courseF_artist_for6_c: आपको `मुड़ें` ब्लॉक में डिग्रियों की संख्या को बदलना
          होगा।
      courseF_artist_for6_2019:
        courseF_artist_for6_a: आपकी `फॉर` लूप 15 से 300 गुणा 15 तक गिनेगी।
        courseF_artist_for6_b: इस `फॉर` लूप के अंदर `आगे की ओर मूव करें` और `मुड़ें`
          ब्लॉक रखें।
        courseF_artist_for6_c: आपको `मुड़ें` ब्लॉक में डिग्रियों की संख्या को बदलना
          होगा।
      courseF_artist_for7:
        courseF_artist_for7_a: इस पहेली में पेन पतला है। आपको शुरुआत करने से पहले
          इसे `1` पर सेट करने की जरूरत होगी।
        courseF_artist_for7_b: ध्यान दें कि यह सर्पिल रेखा बाएं की बजाए दाएं मुड़ती
          है!
        courseF_artist_for7_c: इस पहेली में `फॉर` लूप 15 से 300 गुणा 2 तक जाती है।
        courseF_artist_for7_d: यह चित्र केवल 89 डिग्रियां मुड़ने से बना है।
      courseF_artist_for7_2018:
        courseF_artist_for7_a: इस पहेली में पेन पतला है। आपको शुरुआत करने से पहले
          इसे `1` पर सेट करने की जरूरत होगी।
        courseF_artist_for7_b: ध्यान दें कि यह सर्पिल रेखा बाएं की बजाए दाएं मुड़ती
          है!
        courseF_artist_for7_c: इस पहेली में `फॉर` लूप 15 से 300 गुणा 2 तक जाती है।
        courseF_artist_for7_d: यह चित्र केवल 89 डिग्रियां मुड़ने से बना है।
      courseF_artist_for7_2019:
        courseF_artist_for7_a: इस पहेली में पेन पतला है। आपको शुरुआत करने से पहले
          इसे `1` पर सेट करने की जरूरत होगी।
        courseF_artist_for7_b: ध्यान दें कि यह सर्पिल रेखा बाएं की बजाए दाएं मुड़ती
          है!
        courseF_artist_for7_c: इस पहेली में `फॉर` लूप 15 से 300 गुणा 2 तक जाती है।
        courseF_artist_for7_d: यह चित्र केवल 89 डिग्रियां मुड़ने से बना है।
      courseF_artist_for8:
        courseF_artist_for8_a: अपने कोड में बाकी सब वैसा ही रखें, केवल मोड़ कोण को
          बदलने की जरूरत है।
        courseF_artist_for8_b: यदि आप चाहें, तो आप अपनी सर्पिल रेखा के लिए अलग रंग
          चुन सकते हैं!
      courseF_artist_for8_2018:
        courseF_artist_for8_a: अपने कोड में बाकी सब वैसा ही रखें, केवल मोड़ कोण को
          बदलने की जरूरत है।
        courseF_artist_for8_b: यदि आप चाहें, तो आप अपनी सर्पिल रेखा के लिए अलग रंग
          चुन सकते हैं!
      courseF_artist_for8_2019:
        courseF_artist_for8_a: अपने कोड में बाकी सब वैसा ही रखें, केवल मोड़ कोण को
          बदलने की जरूरत है।
        courseF_artist_for8_b: यदि आप चाहें, तो आप अपनी सर्पिल रेखा के लिए अलग रंग
          चुन सकते हैं!
      courseF_artist_for9:
        courseF_artist_for9_a: यदि आप अपनी `फॉर` लूप के अंदर `अल्फा सेट करें` ब्लॉक
          रखते हैं, और इसे बदलने के लिए `काउंटर` वेरिएबल का उपयोग करते हैं, तो आप
          इस जैसा डिज़ाइन बना सकते हैं।
        courseF_artist_for9_b: "`अल्फा सेट करें` ब्लॉक रंग की अपारदर्शिता को बदल देता
          है। जितना छोटा मूल्य होगा, रंग उतना ही पारदर्शी होगा।"
      courseF_artist_for9_2018:
        courseF_artist_for9_a: यदि आप अपनी `फॉर` लूप के अंदर `अल्फा सेट करें` ब्लॉक
          रखते हैं, और इसे बदलने के लिए `काउंटर` वेरिएबल का उपयोग करते हैं, तो आप
          इस जैसा डिज़ाइन बना सकते हैं।
        courseF_artist_for9_b: "`अल्फा सेट करें` ब्लॉक रंग की अपारदर्शिता को बदल देता
          है। जितना छोटा मूल्य होगा, रंग उतना ही पारदर्शी होगा।"
      courseF_artist_for9_2019:
        courseF_artist_for9_a: यदि आप अपनी `फॉर` लूप के अंदर `अल्फा सेट करें` ब्लॉक
          रखते हैं, और इसे बदलने के लिए `काउंटर` वेरिएबल का उपयोग करते हैं, तो आप
          इस जैसा डिज़ाइन बना सकते हैं।
        courseF_artist_for9_b: "`अल्फा सेट करें` ब्लॉक रंग की अपारदर्शिता को बदल देता
          है। जितना छोटा मूल्य होगा, रंग उतना ही पारदर्शी होगा।"
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_a: "`पेन चौड़ाई` 1 है। पहले वर्ग की 50 पिक्सल
          की भुजाएं हैं, और प्रत्येक वर्ग पिछले के मुकाबले 50 पिक्सल अधिक चौड़ा है।"
        courseF_artist_for_challenge1_b: ब्रुश पर अपारदर्शिता हमेशा `काउंटर`/2 होती
          है।
        courseF_artist_for_challenge1_c: जब आप प्रत्येक वर्ग बना लें, तो पीछे की ओर
          कूदना, मुड़ना, दुबारा कूदना, फिर वापस मुड़ना न भूलें!
        courseF_artist_for_challenge1_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_a: "`पेन चौड़ाई` 1 है। पहले वर्ग की 50 पिक्सल
          की भुजाएं हैं, और प्रत्येक वर्ग पिछले के मुकाबले 50 पिक्सल अधिक चौड़ा है।"
        courseF_artist_for_challenge1_b: ब्रुश पर अपारदर्शिता हमेशा `काउंटर`/2 होती
          है।
        courseF_artist_for_challenge1_c: जब आप प्रत्येक वर्ग बना लें, तो पीछे की ओर
          कूदना, मुड़ना, दुबारा कूदना, फिर वापस मुड़ना न भूलें!
        courseF_artist_for_challenge1_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_a: "`पेन चौड़ाई` 1 है। पहले वर्ग की 50 पिक्सल
          की भुजाएं हैं, और प्रत्येक वर्ग पिछले के मुकाबले 50 पिक्सल अधिक चौड़ा है।"
        courseF_artist_for_challenge1_b: ब्रुश पर अपारदर्शिता हमेशा `काउंटर`/2 होती
          है।
        courseF_artist_for_challenge1_c: जब आप प्रत्येक वर्ग बना लें, तो पीछे की ओर
          कूदना, मुड़ना, दुबारा कूदना, फिर वापस मुड़ना न भूलें!
        courseF_artist_for_challenge1_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: "`फॉर` लूप 5 से 250 गुणा 2 तक जाती है।"
        courseF_artist_for_challenge2_a: रंग बदलाव `लाल, हरे, नीले के साथ रंग सेट
          करें` ब्लॉक से होता है।  लाल को निरंतर 255 पर सेट है, हरे का मूल्य हमेशा
          `काउंटर` होता है और नीला हमेशा `255 - काउंटर` होता है।
        courseF_artist_for_challenge2_b: इसके लिए आपकी कल्पना से भी अधिक सरल है।  बस
          फॉर लूप के अंदर रंग सेट करें, आगे की ओर मूव करें, फिर मुड़ें।
        courseF_artist_for_challenge2_d: "**समाधान:**\n\n<xml>\n  <block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\"
          inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">1</title>\n          </block>\n        </value>\n
          \       <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n
          \         <mutation counter=\"counter\"></mutation>\n            <value
          name=\"FROM\">\n              <block type=\"math_number\">\n                <title
          name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value
          name=\"TO\">\n              <block type=\"math_number\">\n                <title
          name=\"NUM\">250</title>\n              </block>\n            </value>\n
          \           <value name=\"BY\">\n              <block type=\"math_number\">\n
          \               <title name=\"NUM\">2</title>\n              </block>\n
          \           </value>\n            <statement name=\"DO\">\n              <block
          type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                <value
          name=\"COLOUR\">\n                  <block type=\"colour_rgb\" inline=\"false\">\n
          \                   <value name=\"RED\">\n                      <block type=\"math_number\">\n
          \                       <title name=\"NUM\">255</title>\n                      </block>\n
          \                   </value>\n                    <value name=\"GREEN\">\n
          \                     <block type=\"variables_get\">\n                        <title
          name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n
          \                   <value name=\"BLUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">255</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </value>\n
          \               <next>\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"variables_get\">\n
          \                       <title name=\"VAR\">counter</title>\n                      </block>\n
          \                   </value>\n                    <next>\n                      <block
          type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnRight</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_number\">\n                            <title name=\"NUM\">80</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n          </block>\n        </next>\n
          \     </block>\n    </next>\n  </block>\n</xml>        \n\n![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09
          PM.png>)"
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: "`फॉर` लूप 5 से 250 गुणा 2 तक जाती है।"
        courseF_artist_for_challenge2_a: रंग बदलाव `लाल, हरे, नीले के साथ रंग सेट
          करें` ब्लॉक से होता है।  लाल को निरंतर 255 पर सेट है, हरे का मूल्य हमेशा
          `काउंटर` होता है और नीला हमेशा `255 - काउंटर` होता है।
        courseF_artist_for_challenge2_b: इसके लिए आपकी कल्पना से भी अधिक सरल है।  बस
          फॉर लूप के अंदर रंग सेट करें, आगे की ओर मूव करें, फिर मुड़ें।
        courseF_artist_for_challenge2_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: "`फॉर` लूप 5 से 250 गुणा 2 तक जाती है।"
        courseF_artist_for_challenge2_a: रंग बदलाव `लाल, हरे, नीले के साथ रंग सेट
          करें` ब्लॉक से होता है।  लाल को निरंतर 255 पर सेट है, हरे का मूल्य हमेशा
          `काउंटर` होता है और नीला हमेशा `255 - काउंटर` होता है।
        courseF_artist_for_challenge2_b: इसके लिए आपकी कल्पना से भी अधिक सरल है।  बस
          फॉर लूप के अंदर रंग सेट करें, आगे की ओर मूव करें, फिर मुड़ें।
        courseF_artist_for_challenge2_d: "**समाधान:**\n\n<xml>\n  <block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\"
          inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">1</title>\n          </block>\n        </value>\n
          \       <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n
          \         <mutation counter=\"counter\"></mutation>\n            <value
          name=\"FROM\">\n              <block type=\"math_number\">\n                <title
          name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value
          name=\"TO\">\n              <block type=\"math_number\">\n                <title
          name=\"NUM\">250</title>\n              </block>\n            </value>\n
          \           <value name=\"BY\">\n              <block type=\"math_number\">\n
          \               <title name=\"NUM\">2</title>\n              </block>\n
          \           </value>\n            <statement name=\"DO\">\n              <block
          type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                <value
          name=\"COLOUR\">\n                  <block type=\"colour_rgb\" inline=\"false\">\n
          \                   <value name=\"RED\">\n                      <block type=\"math_number\">\n
          \                       <title name=\"NUM\">255</title>\n                      </block>\n
          \                   </value>\n                    <value name=\"GREEN\">\n
          \                     <block type=\"variables_get\">\n                        <title
          name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n
          \                   <value name=\"BLUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">255</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </value>\n
          \               <next>\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"variables_get\">\n
          \                       <title name=\"VAR\">counter</title>\n                      </block>\n
          \                   </value>\n                    <next>\n                      <block
          type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnRight</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_number\">\n                            <title name=\"NUM\">80</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n          </block>\n        </next>\n
          \     </block>\n    </next>\n  </block>\n</xml>        \n\n![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09
          PM.png>)"
      courseF_artist_fwp1:
        courseF_artist_fwp1_c: वर्ग खींचने के लिए फंक्शन संपादक के अंदर सारा कोड रखें।
        courseF_artist_fwp1_a: याद रखें, वर्ग खींचने के लिए आपको 90 डिग्री मुड़ने
          की जरूरत है।
        courseF_artist_fwp1_b: आपको केवल उतनी बार दोहराने की जरूरत है, जितनी वर्ग
          में भुजाओं की संख्या है।
      courseF_artist_fwp2:
        courseF_artist_fwp2_a: फंक्शन पर जाने के लिए आपको "संपादित करें" बटन पर क्लिक
          करने की जरूरत है।  जब आप वहां हों, तो `लंबाई` नामक मापदंड जोड़ें और इसे
          अपने `आगे की ओर मूव करें` ब्लॉक के अंदर उपयोग करें!
        courseF_artist_fwp2_b: अपना फंक्शन बोलते समय, संभवतया बेहतर कोड के लिए `फॉर
          लूप` का उपयोग करें!
      courseF_artist_fwp3:
        courseF_artist_fwp3_a: यदि आप पूरा `फॉर` लूप में रखते हैं तो यह काफी आसान
          हो जाता है।
        courseF_artist_fwp3_b: |-
          प्रत्येक वर्ग के बीच 90 डिग्री मुड़ना सुनिश्चित करें!

          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp4:
        courseF_artist_fwp4_b: मापदंड **जोड़ना** याद रखें।  जो पहले ही वहां है, उसे
          न हटाएं!
        courseF_artist_fwp4_c: आकृतियां बनाने के लिए आपको अपने फंक्शन को तीन बार बोलने
          की जरूरत होगी।
      courseF_artist_fwp5:
        courseF_artist_fwp5_d: वास्तव में `फॉर` लूप यहां आपके लिए उपयोगी होगी!
        courseF_artist_fwp5_c: आपको फंक्शन को थोड़ा संपादित करने की जरूरत होगी, क्योंकि
          आपके पिछले फंक्शन ने कलाकार को प्रत्येक भुजा के बाद दाएं मोड़ दिया और इस
          चित्र को बाएं मुड़ने की जरूरत है।
        courseF_artist_fwp5_a: प्रत्येक आकृति के लिए भुजाओं की लंबाई इसकी भुजाओं की
          संख्या से 7 गुणा है।
        courseF_artist_fwp5_b: आकृतियों के बीच 100 पिक्सल तक कूदना न भूलें।
      courseF_artist_fwp6:
        courseF_artist_fwp6_a: यह पता लगाने के लिए थोड़ी बार प्रोग्राम चलाना सही है
          कि अलग-अलग मापदंडों के साथ आपका फंक्शन कैसे काम करता है।
        courseF_artist_fwp6_b: इस कोड को पूरा करने के लिए आपको कोई `मूव करें` या `मुड़ें`
          ब्लॉक्स जोड़ने की जरूरत नहीं है।
      courseF_artist_fwp7:
        courseF_artist_fwp7_a: क्या कुछ सुझावों को आजमाने के बाद हारे हुए महसूस कर
          रहे हैं? ऊपर दाईं-ओर के कोने में "शुरू करें" बटन पर क्लिक करने का प्रयास
          करें।
        courseF_artist_fwp7_b: आपकी नई `न्यूनतम` वेरिएबल फंक्शन के अंदर, आपकी `फॉर`
          लूप में पहले स्लॉट में जाएगी।
      courseF_artist_fwp8:
        courseF_artist_fwp8_a: यदि आपका फंक्शन सही है, तो आपको इस पहेली के लिए इसे
          बदलना नहीं चाहिए।
        courseF_artist_fwp8_b: फंक्शन कॉल्स के बीच आपको बस लाइन का रंग बदलने की जरूरत
          है।
      courseF_artist_fwp9:
        courseF_artist_fwp9_a: |-
          इन ड्राइंग्स में से एक आजमाएं।
          ![](<https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png>)
      courseF_artist_fwp_challenge1:
        courseF_artist_fwp_challenge1_b: यह ऐसी भुजाओं वाली बहुभुजों की श्रृंखला है,
          जो काउंटर पिक्सल लंबी हैं।
        courseF_artist_fwp_challenge1_c: प्रत्येक बहुभुज को फॉर लूप के अंदर से बोला
          जाता है, जो 3 नीचे से 1 की वृद्धि से 6 तक जाती है। कौन-सी आकृतियां बन रही
          हैं?
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: यह ऐसी भुजाओं वाली अष्टभुजों की श्रृंखला
          है, जो `काउंटर` पिक्सल लंबी हैं।
        courseF_artist_fwp_challenge1_c: प्रत्येक अष्टभुज को `फॉर` लूप के अंदर से
          बोला जाता है, जो 200 नीचे से 2 गुणा 2 तक जाती है।
        courseF_artist_fwp_challenge1_d: प्रत्येक पुनरावृत्ति के अंत में 22.5 डिग्री
          तक मुड़ना न भूलें।
        courseF_artist_fwp_challenge1_e: प्रत्येक अष्टभुज का रंग और पेन की चौड़ाई
          दोनों `काउंटर` वेरिएबल द्वारा नियंत्रित हैं।
        courseF_artist_fwp_challenge1_f: |-
          **समाधान:**

          ![समाधान ब्लॉक्स](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_variables10:
        courseF_artist_variables10_a: इस स्तर के साथ आनंद लें! देखें कि छोटे-मोटे
          बदलाव आपके कोड के लिए क्या कर सकते हैं।
        courseF_artist_variables10_b: आप कई चीज़ें आजमा सकते हैं, और अपने कोड को कई
          बार चला सकते हैं।
      courseF_artist_variables10_2018:
        courseF_artist_variables10_a: इस स्तर के साथ आनंद लें! देखें कि छोटे-मोटे
          बदलाव आपके कोड के लिए क्या कर सकते हैं।
        courseF_artist_variables10_b: आप कई चीज़ें आजमा सकते हैं, और अपने कोड को कई
          बार चला सकते हैं।
      courseF_artist_variables10_2019:
        courseF_artist_variables10_a: इस स्तर के साथ आनंद लें! देखें कि छोटे-मोटे
          बदलाव आपके कोड के लिए क्या कर सकते हैं।
        courseF_artist_variables10_b: आप कई चीज़ें आजमा सकते हैं, और अपने कोड को कई
          बार चला सकते हैं।
      courseF_artist_variables2:
        courseF_artist_variables2_a: प्रत्येक त्रिकोण बनाने के बार आगे की ओर मूव करना
          याद रखें।
        courseF_artist_variables2_b: आपकी नई लूप में आपके त्रिकोण, फिर `आगे की ओर
          मूव करें` कमांड के लिए लूप होगी।
      courseF_artist_variables2_2018:
        courseF_artist_variables2_a: प्रत्येक त्रिकोण बनाने के बार आगे की ओर मूव करना
          याद रखें।
        courseF_artist_variables2_b: आपकी नई लूप में आपके त्रिकोण, फिर `आगे की ओर
          मूव करें` कमांड के लिए लूप होगी।
      courseF_artist_variables2_2019:
        courseF_artist_variables2_a: प्रत्येक त्रिकोण बनाने के बार आगे की ओर मूव करना
          याद रखें।
        courseF_artist_variables2_b: आपकी नई लूप में आपके त्रिकोण, फिर `आगे की ओर
          मूव करें` कमांड के लिए लूप होगी।
      courseF_artist_variables3:
        courseF_artist_variables3_a: 'वेरिएबल `लंबाई` आपके कोड में दो स्थानों पर उपयोग
          की जाएगी: आपके त्रिकोण की भुजा लंबाई में, और उस मात्रा में, जितना आप त्रिकोणों
          के बीच आगे की ओर मूव करते हैं।'
        courseF_artist_variables3_b: '50 के मूल्य वाला नंबर ब्लॉक केवल एक स्थान पर
          होगा: \`वेरिएबल की लंबाई सेट करें ब्लॉक।'
      courseF_artist_variables3_2018:
        courseF_artist_variables3_a: 'वेरिएबल `लंबाई` आपके कोड में दो स्थानों पर उपयोग
          की जाएगी: आपके त्रिकोण की भुजा लंबाई में, और उस मात्रा में, जितना आप त्रिकोणों
          के बीच आगे की ओर मूव करते हैं।'
        courseF_artist_variables3_b: 'A number block with value 50 should only be
          in one place: after the `set length` block.'
      courseF_artist_variables3_2019:
        courseF_artist_variables3_a: 'वेरिएबल `लंबाई` आपके कोड में दो स्थानों पर उपयोग
          की जाएगी: आपके त्रिकोण की भुजा लंबाई में, और उस मात्रा में, जितना आप त्रिकोणों
          के बीच आगे की ओर मूव करते हैं।'
        courseF_artist_variables3_b: 'A number block with value 50 should only be
          in one place: after the `set length` block.'
      courseF_artist_variables4:
        courseF_artist_variables4_a: आपका कोड उससे ज्यादा अलग नहीं होगा, जैसे यह पिछली
          पहेली में था, सिवाय इसके कि आपको नीचे कूदने के लिए कलाकार को मोड़ने, फिर
          उसे दुबारा आगे की ओर कूदने के लिए तैयार करने हेतु वापस मोड़ने की जरूरत होगी।
        courseF_artist_variables4_c: |-
          यह वह पैटर्न है, जिसका अनुसरण आपका कलाकार करेगा:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables4_2018:
        courseF_artist_variables4_a: Get him ready to draw the next triangle.
        courseF_artist_variables4_c: |-
          यह वह पैटर्न है, जिसका अनुसरण आपका कलाकार करेगा:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: |-
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">50</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="controls_repeat_ext">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">120</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="jump">
                              <title name="DIR">jumpForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">90</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="jump">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables4_2019:
        courseF_artist_variables4_a: Your code won't be much different than it was
          in the last puzzle, except that you will need to turn the artist to jump
          down, then turn him back to get ready to draw the next triangle.
        courseF_artist_variables4_c: |-
          यह वह पैटर्न है, जिसका अनुसरण आपका कलाकार करेगा:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: |-
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">50</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="controls_repeat_ext">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">120</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="jump">
                              <title name="DIR">jumpForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">90</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="jump">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables5:
        courseF_artist_variables5_a: आपके कोड का दूसरा आधा हिस्सा लगभग पहले आधे हिस्से
          की तरह दिखाई देगा, सिवाय इसके कि आप मुड़ना_बाएं_, कूदना, फिर मुड़ना _दाएं_
          करेंगे।
        courseF_artist_variables5_b: आपके कोड का पहला आधा हिस्सा तीन त्रिकोण खींचेगा,
          और दूसरा आधा हिस्सा अन्य तीन खींचेगा।
        courseF_artist_variables5_c: अपने प्रोग्राम के पहले आधे हिस्से में कोड की
          प्रतिलिपि तैयार करके शुरुआत करें, फिर इसे दिखाया गया डिज़ाइन बनाने के लिए
          बदलें।
        courseF_artist_variables5_d: |-
          यह वह पैटर्न है, जिसका अनुसरण आपका कलाकार करेगा:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2018:
        courseF_artist_variables5_a: आपके कोड का दूसरा आधा हिस्सा लगभग पहले आधे हिस्से
          की तरह दिखाई देगा, सिवाय इसके कि आप मुड़ना_बाएं_, कूदना, फिर मुड़ना _दाएं_
          करेंगे।
        courseF_artist_variables5_b: आपके कोड का पहला आधा हिस्सा तीन त्रिकोण खींचेगा,
          और दूसरा आधा हिस्सा अन्य तीन खींचेगा।
        courseF_artist_variables5_c: अपने प्रोग्राम के पहले आधे हिस्से में कोड की
          प्रतिलिपि तैयार करके शुरुआत करें, फिर इसे दिखाया गया डिज़ाइन बनाने के लिए
          बदलें।
        courseF_artist_variables5_d: |-
          यह वह पैटर्न है, जिसका अनुसरण आपका कलाकार करेगा:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2019:
        courseF_artist_variables5_a: आपके कोड का दूसरा आधा हिस्सा लगभग पहले आधे हिस्से
          की तरह दिखाई देगा, सिवाय इसके कि आप मुड़ना_बाएं_, कूदना, फिर मुड़ना _दाएं_
          करेंगे।
        courseF_artist_variables5_b: आपके कोड का पहला आधा हिस्सा तीन त्रिकोण खींचेगा,
          और दूसरा आधा हिस्सा अन्य तीन खींचेगा।
        courseF_artist_variables5_c: अपने प्रोग्राम के पहले आधे हिस्से में कोड की
          प्रतिलिपि तैयार करके शुरुआत करें, फिर इसे दिखाया गया डिज़ाइन बनाने के लिए
          बदलें।
        courseF_artist_variables5_d: |-
          यह वह पैटर्न है, जिसका अनुसरण आपका कलाकार करेगा:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables6:
        courseF_artist_variables6_a: वेरिएबल्स की बदौलत, आपको यह कार्य करने के लिए
          ऊपर केवल एक नंबर बदलने की जरूरत है।
        courseF_artist_variables6_b: आपको 50 के मूल्य के साथ नंबर ब्लॉक को संपादित
          करने की जरूरत होगी, लेकिन कोड में कुछ और बदलने की जरूरत नहीं है।
      courseF_artist_variables6_2018:
        courseF_artist_variables6_a: वेरिएबल्स की बदौलत, आपको यह कार्य करने के लिए
          ऊपर केवल एक नंबर बदलने की जरूरत है।
        courseF_artist_variables6_b: आपको 50 के मूल्य के साथ नंबर ब्लॉक को संपादित
          करने की जरूरत होगी, लेकिन कोड में कुछ और बदलने की जरूरत नहीं है।
      courseF_artist_variables6_2019:
        courseF_artist_variables6_a: वेरिएबल्स की बदौलत, आपको यह कार्य करने के लिए
          ऊपर केवल एक नंबर बदलने की जरूरत है।
        courseF_artist_variables6_b: आपको 50 के मूल्य के साथ नंबर ब्लॉक को संपादित
          करने की जरूरत होगी, लेकिन कोड में कुछ और बदलने की जरूरत नहीं है।
      courseF_artist_variables6a:
        courseF_artist_variables6a_a: इस पहेली को हल करने के लिए वास्तविक नंबर की
          बजाय वेरिएबल `लंबाई` का उपयोग करना याद रखें।
        courseF_artist_variables6a_b: यह कोड आपके त्रिकोण कोड से काफी मिलता-जुलता
          होगा, बस अलग आकृति के साथ!
        courseF_artist_variables6a_c: पहले एक वर्ग के लिए कोड लिखें, फिर वर्गों के
          बीच मूव करने के लिए कोड जोड़ें। अंत में, हर चीज़ के इर्दगिर्द लूप जोड़ें!
        courseF_artist_variables6a_d: |-
          यह वह पैटर्न है, जिसका आप अनुसरण करेंगे:

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2018:
        courseF_artist_variables6a_a: इस पहेली को हल करने के लिए वास्तविक नंबर की
          बजाय वेरिएबल `लंबाई` का उपयोग करना याद रखें।
        courseF_artist_variables6a_b: यह कोड आपके त्रिकोण कोड से काफी मिलता-जुलता
          होगा, बस अलग आकृति के साथ!
        courseF_artist_variables6a_c: पहले एक वर्ग के लिए कोड लिखें, फिर वर्गों के
          बीच मूव करने के लिए कोड जोड़ें। अंत में, हर चीज़ के इर्दगिर्द लूप जोड़ें!
        courseF_artist_variables6a_d: |-
          यह वह पैटर्न है, जिसका आप अनुसरण करेंगे:

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2019:
        courseF_artist_variables6a_a: इस पहेली को हल करने के लिए वास्तविक नंबर की
          बजाय वेरिएबल `लंबाई` का उपयोग करना याद रखें।
        courseF_artist_variables6a_b: यह कोड आपके त्रिकोण कोड से काफी मिलता-जुलता
          होगा, बस अलग आकृति के साथ!
        courseF_artist_variables6a_c: पहले एक वर्ग के लिए कोड लिखें, फिर वर्गों के
          बीच मूव करने के लिए कोड जोड़ें। अंत में, हर चीज़ के इर्दगिर्द लूप जोड़ें!
        courseF_artist_variables6a_d: |-
          यह वह पैटर्न है, जिसका आप अनुसरण करेंगे:

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables7:
        courseF_artist_variables7_a: "`लंबाई सेट करें` ब्लॉक का उपयोग करते हुए अपना
          कोड शुरू करें। लंबाई वेरिएबल को 150 पर सेट करें।"
        courseF_artist_variables7_b: आप त्रिकोण के लिए अपने कोड को और सरल बनाने के
          लिए `दोहराएं` लूप का उपयोग कर सकते हैं।
        courseF_artist_variables7_c: आप त्रिकोण के कोने बनाने के लिए 120 डिग्री बाएं
          मुड़ना चाहेंगे।
      courseF_artist_variables7_2018:
        courseF_artist_variables7_a: "`लंबाई सेट करें` ब्लॉक का उपयोग करते हुए अपना
          कोड शुरू करें। लंबाई वेरिएबल को 150 पर सेट करें।"
        courseF_artist_variables7_b: आप त्रिकोण के लिए अपने कोड को और सरल बनाने के
          लिए `दोहराएं` लूप का उपयोग कर सकते हैं।
        courseF_artist_variables7_c: आप त्रिकोण के कोने बनाने के लिए 120 डिग्री बाएं
          मुड़ना चाहेंगे।
      courseF_artist_variables7_2019:
        courseF_artist_variables7_a: "`लंबाई सेट करें` ब्लॉक का उपयोग करते हुए अपना
          कोड शुरू करें। लंबाई वेरिएबल को 150 पर सेट करें।"
        courseF_artist_variables7_b: आप त्रिकोण के लिए अपने कोड को और सरल बनाने के
          लिए `दोहराएं` लूप का उपयोग कर सकते हैं।
        courseF_artist_variables7_c: आप त्रिकोण के कोने बनाने के लिए 120 डिग्री बाएं
          मुड़ना चाहेंगे।
      courseF_artist_variables8:
        courseF_artist_variables8_b: "`लंबाई सेट करें` ब्लॉक  के साथ त्रिकोण के लिए
          अपना कोड शुरू करना याद रखें और इसे 150 पिक्सल पर शुरू करें।"
        courseF_artist_variables8_c: अपना त्रिकोण खींचने के लिए `दोहराएं` लूप का उपयोग
          करना सुनिश्चित करें।
        courseF_artist_variables8_a: "Try putting the set of \n\n<xml>\n<block type=\"variables_set\"
          inline=\"false\">\n                        <title name=\"VAR\">length</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">ADD</title>\n                            <value name=\"A\">\n
          \                             <block type=\"variables_get\">\n                                <title
          name=\"VAR\">length</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks
          inside your loop at the end."
      courseF_artist_variables8_2018:
        courseF_artist_variables8_b: "`लंबाई सेट करें` ब्लॉक  के साथ त्रिकोण के लिए
          अपना कोड शुरू करना याद रखें और इसे 150 पिक्सल पर शुरू करें।"
        courseF_artist_variables8_c: अपना त्रिकोण खींचने के लिए `दोहराएं` लूप का उपयोग
          करना सुनिश्चित करें।
        courseF_artist_variables8_a: "Try putting the set of \n\n<xml>\n<block type=\"variables_set\"
          inline=\"false\">\n                        <title name=\"VAR\">length</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">ADD</title>\n                            <value name=\"A\">\n
          \                             <block type=\"variables_get\">\n                                <title
          name=\"VAR\">length</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks
          inside your loop at the end."
      courseF_artist_variables8_2019:
        courseF_artist_variables8_b: "`लंबाई सेट करें` ब्लॉक  के साथ त्रिकोण के लिए
          अपना कोड शुरू करना याद रखें और इसे 150 पिक्सल पर शुरू करें।"
        courseF_artist_variables8_c: अपना त्रिकोण खींचने के लिए `दोहराएं` लूप का उपयोग
          करना सुनिश्चित करें।
        courseF_artist_variables8_a: "Try putting the set of \n\n<xml>\n<block type=\"variables_set\"
          inline=\"false\">\n                        <title name=\"VAR\">length</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">ADD</title>\n                            <value name=\"A\">\n
          \                             <block type=\"variables_get\">\n                                <title
          name=\"VAR\">length</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks
          inside your loop at the end."
      courseF_artist_variables9:
        courseF_artist_variables9_a: इस पहेली के लिए, आपको बस यह बदलने की जरूरत है
          कि लूप कितनी बार दोहराई जाती है।
        courseF_artist_variables9_b: सुनिश्चित करें कि जो ब्लॉक्स `लंबाई` में वृद्धि
          करते हैं, वे आपकी लूप के अंदर हैं, ताकि लाइनें और लंबी होती रहें।
      courseF_artist_variables9_2018:
        courseF_artist_variables9_a: इस पहेली के लिए, आपको बस यह बदलने की जरूरत है
          कि लूप कितनी बार दोहराई जाती है।
        courseF_artist_variables9_b: सुनिश्चित करें कि जो ब्लॉक्स `लंबाई` में वृद्धि
          करते हैं, वे आपकी लूप के अंदर हैं, ताकि लाइनें और लंबी होती रहें।
      courseF_artist_variables9_2019:
        courseF_artist_variables9_a: इस पहेली के लिए, आपको बस यह बदलने की जरूरत है
          कि लूप कितनी बार दोहराई जाती है।
        courseF_artist_variables9_b: सुनिश्चित करें कि जो ब्लॉक्स `लंबाई` में वृद्धि
          करते हैं, वे आपकी लूप के अंदर हैं, ताकि लाइनें और लंबी होती रहें।
      courseF_artist_variablesFP:
        courseF_artist_variablesFP_a: |-
          इन तीन ड्राइंग्स में से एक आजमाएं।
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2018:
        courseF_artist_variablesFP_a: |-
          इन तीन ड्राइंग्स में से एक आजमाएं।
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2019:
        courseF_artist_variablesFP_a: |-
          इन तीन ड्राइंग्स में से एक आजमाएं।
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variables_challenge1:
        courseF_artist_variables_challenge1_a: प्रत्येक लंबवत लाइन की लंबाई `10` है।
          प्रत्येक क्षैतिज लाईन `लंबाई` लंबी होनी चाहिए।
        courseF_artist_variables_challenge1_b: आप लूप के अंदर **दो बार** `लंबाई` 10
          तक बढ़ाना चाहेंगे।
        courseF_artist_variables_challenge1_c: पैटर्न को पूरा करने के लिए आपको दो
          बार बाएं मुड़ने, दो बार दाएं मुड़ने और कुल चार बार आगे की ओर मूव करने की
          जरूरत होगी।
        courseF_artist_variables_challenge1_d: |-
          यह पहेली केवल एक लूप का उपयोग करती है। किसी भी वेरिएबल के बिना, समान रास्ता केवल भूलभुलैया हो सकता है।

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          यदि आपको समस्या आ रही है, तो यह चित्र बनाकर शुरुआत करें, फिर यह देखने का प्रयास करें कि आप क्षैतिज लाइनों की लंबाई बदलने के लिए वेरिएबल्स का उपयोग कहां पर कर सकते हैं।
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge1_2018:
        courseF_artist_variables_challenge1_a: प्रत्येक लंबवत लाइन की लंबाई `10` है।
          प्रत्येक क्षैतिज लाईन `लंबाई` लंबी होनी चाहिए।
        courseF_artist_variables_challenge1_b: आप लूप के अंदर **दो बार** `लंबाई` 10
          तक बढ़ाना चाहेंगे।
        courseF_artist_variables_challenge1_c: पैटर्न को पूरा करने के लिए आपको दो
          बार बाएं मुड़ने, दो बार दाएं मुड़ने और कुल चार बार आगे की ओर मूव करने की
          जरूरत होगी।
        courseF_artist_variables_challenge1_d: |-
          यह पहेली केवल एक लूप का उपयोग करती है। किसी भी वेरिएबल के बिना, समान रास्ता केवल भूलभुलैया हो सकता है।

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          यदि आपको समस्या आ रही है, तो यह चित्र बनाकर शुरुआत करें, फिर यह देखने का प्रयास करें कि आप क्षैतिज लाइनों की लंबाई बदलने के लिए वेरिएबल्स का उपयोग कहां पर कर सकते हैं।
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge1_2019:
        courseF_artist_variables_challenge1_a: प्रत्येक लंबवत लाइन की लंबाई `10` है।
          प्रत्येक क्षैतिज लाईन `लंबाई` लंबी होनी चाहिए।
        courseF_artist_variables_challenge1_b: आप लूप के अंदर **दो बार** `लंबाई` 10
          तक बढ़ाना चाहेंगे।
        courseF_artist_variables_challenge1_c: पैटर्न को पूरा करने के लिए आपको दो
          बार बाएं मुड़ने, दो बार दाएं मुड़ने और कुल चार बार आगे की ओर मूव करने की
          जरूरत होगी।
        courseF_artist_variables_challenge1_d: |-
          यह पहेली केवल एक लूप का उपयोग करती है। किसी भी वेरिएबल के बिना, समान रास्ता केवल भूलभुलैया हो सकता है।

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          यदि आपको समस्या आ रही है, तो यह चित्र बनाकर शुरुआत करें, फिर यह देखने का प्रयास करें कि आप क्षैतिज लाइनों की लंबाई बदलने के लिए वेरिएबल्स का उपयोग कहां पर कर सकते हैं।
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_a: वेरिएबल्स उपयोगी हैं क्योंकि आप उन्हें
          लूप के माध्यम से हर बार जोड़ सकते हैं।
        courseF_artist_variables_challenge2_c: एक वेरिएबल का उपयोग `भुजाओं` के लिए
          और एक का `लंबाई` उपयोग करने से यह कोड को और स्पष्ट बनाता है क्योंकि आप संख्याओं
          के प्रत्येक सेट की नई प्रति बनाने की बजाय, उसी कोड को कई बार लूप कर सकते
          हैं।
        courseF_artist_variables_challenge2_d: |-
          **समाधान:**

          ![समाधान](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_a: वेरिएबल्स उपयोगी हैं क्योंकि आप उन्हें
          लूप के माध्यम से हर बार जोड़ सकते हैं।
        courseF_artist_variables_challenge2_c: एक वेरिएबल का उपयोग `भुजाओं` के लिए
          और एक का `लंबाई` उपयोग करने से यह कोड को और स्पष्ट बनाता है क्योंकि आप संख्याओं
          के प्रत्येक सेट की नई प्रति बनाने की बजाय, उसी कोड को कई बार लूप कर सकते
          हैं।
        courseF_artist_variables_challenge2_d: |-
          **समाधान:**

          ![समाधान](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_a: वेरिएबल्स उपयोगी हैं क्योंकि आप उन्हें
          लूप के माध्यम से हर बार जोड़ सकते हैं।
        courseF_artist_variables_challenge2_c: एक वेरिएबल का उपयोग `भुजाओं` के लिए
          और एक का `लंबाई` उपयोग करने से यह कोड को और स्पष्ट बनाता है क्योंकि आप संख्याओं
          के प्रत्येक सेट की नई प्रति बनाने की बजाय, उसी कोड को कई बार लूप कर सकते
          हैं।
        courseF_artist_variables_challenge2_d: |-
          **समाधान:**

          ![समाधान](https://images.code.org/1236e605d55d8cc9beafbca5425c8f75-image-1543523947735.png)
      courseF_bee_conditionals10:
        courseF_bee_conditionals10_a: कल्पना करें कि प्रत्येक स्थान पर बादल है। क्या
          यह आपके कोड को सरल बनाने में सहायक है?
        courseF_bee_conditionals10_b: मधुरस या शहद के लिए प्रत्येक स्थान को देखने
          हेतु `इफ/एल्स` ब्लॉक का उपयोग करें।
        courseF_bee_conditionals10_c: क्या `व्हाइल` लूप इस रास्ते के अंत तक पहुंचाने
          में मदद कर सकती है?
      courseF_bee_conditionals2:
        courseF_bee_conditionals2_a: कभी वहां फूल होगा, कभी नहीं।  यदि आप अपने कोड
          को दोनों स्थितियों में चलाना चाहते हैं, तो `इफ` स्टेटमेंट का उपयोग करना
          सुनिश्चित करें।
        courseF_bee_conditionals2_b: आपको सभी स्थानों पर ले जाने के लिए क्रम लिखने
          का प्रयास करें, फिर `इफ` स्टेटमेंट जोड़ें।
      courseF_bee_conditionals3:
        courseF_bee_conditionals3_a: यह देखने के लिए कि इसमें फूल है या कुछ नहीं है,
          प्रत्येक स्थान को देखने के लिए `इफ` स्टेटमेंट का उपयोग करना सुनिश्चित करें।
        courseF_bee_conditionals3_b: "`दोहराएं` लूप उपयोगी होगी ताकि आपको केवल एक
          `इफ` ब्लॉक का ही उपयोग करना पड़े।"
        courseF_bee_conditionals3_c: पहले बादल को देखने के लिए कोड लिखने का प्रयास
          करें। क्या आप उन सभी को देखने के लिए इसे लूप कर सकते हैं?
      courseF_bee_conditionals4:
        courseD_bee_conditionals4_a: आप तब भी प्रत्येक स्थान से इस तरह व्यवहार कर
          सकते हैं कि मानो इस पर बादल हो, चाहे आप पूरा रास्ता देख सकते हों।
        courseF_bee_conditionals4_b: मधुरस के प्रत्येक स्थान को देखने के लिए अपनी
          लूप के अंदर `इफ` स्टेटमेंट का उपयोग करें।
        courseF_bee_conditionals4_c: "`जब आगे रास्ता हो` ब्लॉक का उपयोग करते हुए,
          आपको `आगे की ओर मूव करें` करके फूल को देखना चाहिए। `यदि वहां फूल है`, तो
          मधुमक्खी को क्या करना चाहिए?"
      courseF_bee_conditionals5:
        courseF_bee_conditionals5_a: आयताकार रास्ते की प्रत्येक भुजा को भी एक रास्ता
          मानें। बाहर की तरफ `दोहराएं` ब्लॉक के साथ नेस्टड लूप और अंदर `जब आगे रास्ता
          हो` लूप स्थापित करें। नीचे की ओर जाने के लिए मधुमक्खी को कितने रास्तों की
          जरूरत है, यदि मधुमक्खी को फूल के साथ हर तरफ नीचे की तरफ जाने की जरूरत है?
        courseF_bee_conditionals5_b: "`जब आगे रास्ता हो` ब्लॉक के अंदर आपको आगे की
          ओर मूव करके फूल देखने की जरूरत होगी। आप कैसे देखेंगे कि वहां फूल है या नहीं?
          यदि वहां फूल हो तो आप क्या करेंगे?"
        courseF_bee_conditionals5_c: फूलों वाली आयत की 3 भुजाएं हैं, इसलिए कोड को
          `3 बार दोहराएं` की जरूरत है। प्रत्येक दोहराव में, मधुमक्खी को रास्ते के
          साथ `जब आगे रास्ता हो` आगे बढ़ने की जरूरत होगी।
        courseF_bee_conditionals5_d: नीचे के रास्ते को जारी रखने के लिए, मधुमक्खी
          को `आगे की ओर मूव करें` की जरूरत होगी। रास्ते पर होने के समय, मधुमक्खी को
          फूल देखने की जरूरत है। यदि वहां फूल हो को मधुमक्खी को क्या करना चाहिए?
      courseF_bee_conditionals8:
        courseF_bee_conditionals8_a: "**याद रखें:** यह पहेली हर बार चलाने पर बदल जाती
          है। \n\nआप चुनौती को हल करने के लिए नियमबद्ध ब्लॉक ( `इफ` या `इफ/एल्स`)
          का उपयोग करना चाहेंगे।"
        courseF_bee_conditionals8_b: |-
          यह पहेली पेचीदा है, क्योंकि आप केवल एक एकल सापेक्ष के साथ खाली वर्ग, मधुरस, _और_ शहद नहीं देख सकते।

          अपने रास्ते के अंत में केवल मधुरस और शहद देखें।
        courseF_bee_conditionals8_c: यदि आप पहला फूल छोड़ दें, फिर `जब आगे रास्ता
          हो` ब्लॉक का उपयोग करें तो क्या होता है?
      courseF_bee_for1:
        courseF_bee_for1_a: इसे यह बताने के लिए कि यह कितनी बार दोहराए, `दोहराएं`
          लूप पर खाली स्थान में बैंगनी नंबर ब्लॉक को खींचें।
        courseF_bee_for1_b: सारा मधुरस एकत्र करने के लिए आपको अपनी ‘दोहराएं’ लूप में
          दो ब्लॉक्स की जरूरत होगी।
      courseF_bee_for10:
        courseF_bee_for10_a: क्या आप स्टेप्स की संख्या के बीच पैटर्न ढूंढ सकते हैं,
          जिसे आपको लेने और मधुरस एकत्र करने के लिए जरूरत है?
        courseF_bee_for10_b: फूलों के पहले सेट में **14 फूल** हैं। यह पहला सेट प्राप्त
          करने के लिए, मधुमक्खी को **7 वर्ग** (या 2 से भाग किए 14 वर्ग।) नीचे की तरफ
          जाना होगा। अगले सेट में कितने फूल हैं और मधुमक्खी को वहां तक पहुंचने के
          लिए कितने वर्ग जाना होगा?
        courseF_bee_for10_c: |-
          पहेली में, फूलों के पहले सेट में **14** फूल हैं, दूसरे सेट में **10** फूल हैं, तीसरे सेट में **6** फूल हैं, और चौथे सेट में **2** फूल हैं।

          इस ड्राइंग में, ध्यान दें कि **7** लाल वर्ग हैं, **5** संतरी वर्ग हैं, **3** हरे वर्ग हैं, और **1** नीला ब्लॉक है।

          ![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png>)

          संख्याएं किस प्रकार से संबद्ध हैं?
        courseF_bee_for10_d: आपको 2 दोहराव प्राप्त करने की जरूरत होगी, एक गणित ब्लॉक
          का उपयोग करेगा।
      courseF_bee_for10_2018:
        courseF_bee_for10_a: क्या आप स्टेप्स की संख्या के बीच पैटर्न ढूंढ सकते हैं,
          जिसे आपको लेने और मधुरस एकत्र करने के लिए जरूरत है?
        courseF_bee_for10_b: फूलों के पहले सेट में **14 फूल** हैं। यह पहला सेट प्राप्त
          करने के लिए, मधुमक्खी को **7 वर्ग** (या 2 से भाग किए 14 वर्ग।) नीचे की तरफ
          जाना होगा। अगले सेट में कितने फूल हैं और मधुमक्खी को वहां तक पहुंचने के
          लिए कितने वर्ग जाना होगा?
        courseF_bee_for10_c: |-
          पहेली में, फूलों के पहले सेट में **14** फूल हैं, दूसरे सेट में **10** फूल हैं, तीसरे सेट में **6** फूल हैं, और चौथे सेट में **2** फूल हैं।

          इस ड्राइंग में, ध्यान दें कि **7** लाल वर्ग हैं, **5** संतरी वर्ग हैं, **3** हरे वर्ग हैं, और **1** नीला ब्लॉक है।

          ![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png>)

          संख्याएं किस प्रकार से संबद्ध हैं?
        courseF_bee_for10_d: आपको 2 दोहराव प्राप्त करने की जरूरत होगी, एक गणित ब्लॉक
          का उपयोग करेगा।
      courseF_bee_for10_2019:
        courseF_bee_for10_a: क्या आप स्टेप्स की संख्या के बीच पैटर्न ढूंढ सकते हैं,
          जिसे आपको लेने और मधुरस एकत्र करने के लिए जरूरत है?
        courseF_bee_for10_b: फूलों के पहले सेट में **14 फूल** हैं। यह पहला सेट प्राप्त
          करने के लिए, मधुमक्खी को **7 वर्ग** (या 2 से भाग किए 14 वर्ग।) नीचे की तरफ
          जाना होगा। अगले सेट में कितने फूल हैं और मधुमक्खी को वहां तक पहुंचने के
          लिए कितने वर्ग जाना होगा?
        courseF_bee_for10_c: |-
          पहेली में, फूलों के पहले सेट में **14** फूल हैं, दूसरे सेट में **10** फूल हैं, तीसरे सेट में **6** फूल हैं, और चौथे सेट में **2** फूल हैं।

          इस ड्राइंग में, ध्यान दें कि **7** लाल वर्ग हैं, **5** संतरी वर्ग हैं, **3** हरे वर्ग हैं, और **1** नीला ब्लॉक है।

          ![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png>)

          संख्याएं किस प्रकार से संबद्ध हैं?
        courseF_bee_for10_d: आपको 2 दोहराव प्राप्त करने की जरूरत होगी, एक गणित ब्लॉक
          का उपयोग करेगा।
      courseF_bee_for11:
        courseF_bee_for11_a: |-
          15 के मुकाबले 12 कितना कम है?\
          12 के मुकाबले 9 कितना कम है?

          क्या आपको कोई पैटर्न दिखाई दे रहा है?
      courseF_bee_for11_2018:
        courseF_bee_for11_a: |-
          15 के मुकाबले 12 कितना कम है?\
          12 के मुकाबले 9 कितना कम है?

          क्या आपको कोई पैटर्न दिखाई दे रहा है?
      courseF_bee_for11_2019:
        courseF_bee_for11_a: |-
          15 के मुकाबले 12 कितना कम है?\
          12 के मुकाबले 9 कितना कम है?

          क्या आपको कोई पैटर्न दिखाई दे रहा है?
      courseF_bee_for1_2018:
        courseF_bee_for1_a: इसे यह बताने के लिए कि यह कितनी बार दोहराए, `दोहराएं`
          लूप पर खाली स्थान में बैंगनी नंबर ब्लॉक को खींचें।
        courseF_bee_for1_b: सारा मधुरस एकत्र करने के लिए आपको अपनी ‘दोहराएं’ लूप में
          दो ब्लॉक्स की जरूरत होगी।
      courseF_bee_for1_2019:
        courseF_bee_for1_a: इसे यह बताने के लिए कि यह कितनी बार दोहराए, `दोहराएं`
          लूप पर खाली स्थान में बैंगनी नंबर ब्लॉक को खींचें।
        courseF_bee_for1_b: सारा मधुरस एकत्र करने के लिए आपको अपनी ‘दोहराएं’ लूप में
          दो ब्लॉक्स की जरूरत होगी।
      courseF_bee_for2:
        courseF_bee_for2_a: यदि आप उलझन में हैं, तो एक बार एक फूल पर काम करें और बार-बार
          परीक्षण करें।
        courseF_bee_for2_b: प्रत्येक लूप के बीच में आगे की ओर मूव करना याद रखें, ताकि
          आप प्रत्येक फूल के पास पहुंच सकें।
      courseF_bee_for2_2018:
        courseF_bee_for2_a: यदि आप उलझन में हैं, तो एक बार एक फूल पर काम करें और बार-बार
          परीक्षण करें।
        courseF_bee_for2_b: प्रत्येक लूप के बीच में आगे की ओर मूव करना याद रखें, ताकि
          आप प्रत्येक फूल के पास पहुंच सकें।
      courseF_bee_for2_2019:
        courseF_bee_for2_a: यदि आप उलझन में हैं, तो एक बार एक फूल पर काम करें और बार-बार
          परीक्षण करें।
        courseF_bee_for2_b: प्रत्येक लूप के बीच में आगे की ओर मूव करना याद रखें, ताकि
          आप प्रत्येक फूल के पास पहुंच सकें।
      courseF_bee_for4:
        courseF_bee_for4_a: इस पहेली को हल करने के लिए `फॉर` लूप का उपयोग करें, जो
          1 की वृद्धि के साथ 1 से 7 तक जाती है।
        courseF_bee_for4_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for4_c: पर्याप्त मधुरस प्राप्त करने के लिए अपनी नेस्टड `दोहराएं`
          लूप के अंदर `काउंटर` वेरिएबल का उपयोग करना सुनिश्चित करें!
      courseF_bee_for4_2018:
        courseF_bee_for4_a: इस पहेली को हल करने के लिए `फॉर` लूप का उपयोग करें, जो
          1 की वृद्धि के साथ 1 से 7 तक जाती है।
        courseF_bee_for4_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for4_c: पर्याप्त मधुरस प्राप्त करने के लिए अपनी नेस्टड `दोहराएं`
          लूप के अंदर `काउंटर` वेरिएबल का उपयोग करना सुनिश्चित करें!
      courseF_bee_for4_2019:
        courseF_bee_for4_a: इस पहेली को हल करने के लिए `फॉर` लूप का उपयोग करें, जो
          1 की वृद्धि के साथ 1 से 7 तक जाती है।
        courseF_bee_for4_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for4_c: पर्याप्त मधुरस प्राप्त करने के लिए अपनी नेस्टड `दोहराएं`
          लूप के अंदर `काउंटर` वेरिएबल का उपयोग करना सुनिश्चित करें!
      courseF_bee_for5:
        courseF_bee_for5_a: इस बार, आपके `आगे की ओर मूव करें` ब्लॉक को और आपके `मधुरस
          प्राप्त करें` ब्लॉक को अलग `दोहराएं` लूप्स में होने की जरूरत होगी, दोनों
          एक ही `फॉर` लूप के अंदर।
        courseF_bee_for5_b: प्रत्येक लूप में `काउंटर` वेरिएबल का उपयोग करें ताकि मधुमक्खी
          प्रत्येक फूल के बीच अलग-अलग दूरी पर मूव करे।
        courseF_bee_for5_c: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
      courseF_bee_for5_2018:
        courseF_bee_for5_a: इस बार, आपके `आगे की ओर मूव करें` ब्लॉक को और आपके `मधुरस
          प्राप्त करें` ब्लॉक को अलग `दोहराएं` लूप्स में होने की जरूरत होगी, दोनों
          एक ही `फॉर` लूप के अंदर।
        courseF_bee_for5_b: प्रत्येक लूप में `काउंटर` वेरिएबल का उपयोग करें ताकि मधुमक्खी
          प्रत्येक फूल के बीच अलग-अलग दूरी पर मूव करे।
        courseF_bee_for5_c: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
      courseF_bee_for5_2019:
        courseF_bee_for5_a: इस बार, आपके `आगे की ओर मूव करें` ब्लॉक को और आपके `मधुरस
          प्राप्त करें` ब्लॉक को अलग `दोहराएं` लूप्स में होने की जरूरत होगी, दोनों
          एक ही `फॉर` लूप के अंदर।
        courseF_bee_for5_b: प्रत्येक लूप में `काउंटर` वेरिएबल का उपयोग करें ताकि मधुमक्खी
          प्रत्येक फूल के बीच अलग-अलग दूरी पर मूव करे।
        courseF_bee_for5_c: गलती होने से न डरें! यह देखने के लिए कि क्या होगा,ब्लॉक्स
          जोड़ने और कोड चलाने का प्रयास करें, चाहे आपने अभी तक पहेली को हल नहीं किया
          है।
      courseF_bee_for6:
        courseF_bee_for6_a: अपनी `दोहराएं` लूप के अंदर `काउंटर` वेरिएबल का उपयोग करना
          न भूलें।
        courseF_bee_for6_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for6_c: आपकी लूप **5 से 1 तक** की गिनती करेगी।
      courseF_bee_for6_2018:
        courseF_bee_for6_a: अपनी `दोहराएं` लूप के अंदर `काउंटर` वेरिएबल का उपयोग करना
          न भूलें।
        courseF_bee_for6_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for6_c: आपकी लूप **5 से 1 तक** की गिनती करेगी।
      courseF_bee_for6_2019:
        courseF_bee_for6_a: अपनी `दोहराएं` लूप के अंदर `काउंटर` वेरिएबल का उपयोग करना
          न भूलें।
        courseF_bee_for6_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for6_c: आपकी लूप **5 से 1 तक** की गिनती करेगी।
      courseF_bee_for7:
        courseF_bee_for7_a: आपकी `फॉर` लूप को 1 से 7 गुणा 2 तक गिनने की जरूरत होगी।
        courseF_bee_for7_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for7_c: अपनी `दोहराएं` लूप में `काउंटर` वेरिएबल का उपयोग करना
          याद रखें।
      courseF_bee_for7_2018:
        courseF_bee_for7_a: आपकी `फॉर` लूप को 1 से 7 गुणा 2 तक गिनने की जरूरत होगी।
        courseF_bee_for7_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for7_c: अपनी `दोहराएं` लूप में `काउंटर` वेरिएबल का उपयोग करना
          याद रखें।
      courseF_bee_for7_2019:
        courseF_bee_for7_a: आपकी `फॉर` लूप को 1 से 7 गुणा 2 तक गिनने की जरूरत होगी।
        courseF_bee_for7_b: आपकी `फॉर` लूप के अंदर, आप मधुरस एकत्र करने के लिए `आगे
          की ओर मूव करें` कमांड और एक लूप प्राप्त करना चाहेंगे।
        courseF_bee_for7_c: अपनी `दोहराएं` लूप में `काउंटर` वेरिएबल का उपयोग करना
          याद रखें।
      courseF_bee_for8:
        courseF_bee_for8_a: |-
          यदि आपकी लूप गणना कर रही है, तो हर बार आपकी काउंटर वेरिएबल में वृद्धि जोड़ी जाती है।

          मधुरस की अगली मात्रा प्राप्त करने के लिए आपको प्रत्येक संख्या में क्या जोड़ने की जरूरत है?
        courseF_bee_for8_b: इस पहेली में, आपको फूलों तक जाने के लिए सीढ़ी स्टेप पैटर्न
          में मूव करने की जरूरत होगी।
        courseF_bee_for8_c: आपकी लूप थोड़ी वृद्धि के साथ _3 से 15 तक_ गिनेगी। यह क्या
          है?
      courseF_bee_for8_2018:
        courseF_bee_for8_a: |-
          यदि आपकी लूप गणना कर रही है, तो हर बार आपकी काउंटर वेरिएबल में वृद्धि जोड़ी जाती है।

          मधुरस की अगली मात्रा प्राप्त करने के लिए आपको प्रत्येक संख्या में क्या जोड़ने की जरूरत है?
        courseF_bee_for8_b: इस पहेली में, आपको फूलों तक जाने के लिए सीढ़ी स्टेप पैटर्न
          में मूव करने की जरूरत होगी।
        courseF_bee_for8_c: आपकी लूप थोड़ी वृद्धि के साथ _3 से 15 तक_ गिनेगी। यह क्या
          है?
      courseF_bee_for8_2019:
        courseF_bee_for8_a: |-
          यदि आपकी लूप गणना कर रही है, तो हर बार आपकी काउंटर वेरिएबल में वृद्धि जोड़ी जाती है।

          मधुरस की अगली मात्रा प्राप्त करने के लिए आपको प्रत्येक संख्या में क्या जोड़ने की जरूरत है?
        courseF_bee_for8_b: इस पहेली में, आपको फूलों तक जाने के लिए सीढ़ी स्टेप पैटर्न
          में मूव करने की जरूरत होगी।
        courseF_bee_for8_c: आपकी लूप थोड़ी वृद्धि के साथ _3 से 15 तक_ गिनेगी। यह क्या
          है?
      courseF_bee_for9:
        courseF_bee_for9_a: |-
          काउंटर वेरिएबल के साथ थोड़ा गणित करने का प्रयास करें।

          मधुरस की जितनी मात्रा आपको एकत्र करने की जरूरत है, उसके बराबर प्रत्येक फूल पर काउंटर के लिए आपको क्या करने की जरूरत है?
        courseF_bee_for9_c: ऐसा प्रतीत होता है कि यदि आप पहेली को हल करना चाहते हैं
          तो आपको प्रत्येक लूप की पुनरावृत्ति के शुरू में मधुमक्खी को जोड़ने की जरूरत
          होगी।
        courseF_bee_for9_b: "**याद रखें:** यदि आपकी लूप गणना कर रही है, तो हर बार
          आपकी `काउंटर` वेरिएबल में वृद्धि जोड़ी जाती है।"
      courseF_bee_for9_2018:
        courseF_bee_for9_a: |-
          काउंटर वेरिएबल के साथ थोड़ा गणित करने का प्रयास करें।

          मधुरस की जितनी मात्रा आपको एकत्र करने की जरूरत है, उसके बराबर प्रत्येक फूल पर काउंटर के लिए आपको क्या करने की जरूरत है?
        courseF_bee_for9_c: ऐसा प्रतीत होता है कि यदि आप पहेली को हल करना चाहते हैं
          तो आपको प्रत्येक लूप की पुनरावृत्ति के शुरू में मधुमक्खी को जोड़ने की जरूरत
          होगी।
        courseF_bee_for9_b: "**याद रखें:** यदि आपकी लूप गणना कर रही है, तो हर बार
          आपकी `काउंटर` वेरिएबल में वृद्धि जोड़ी जाती है।"
      courseF_bee_for9_2019:
        courseF_bee_for9_a: |-
          काउंटर वेरिएबल के साथ थोड़ा गणित करने का प्रयास करें।

          मधुरस की जितनी मात्रा आपको एकत्र करने की जरूरत है, उसके बराबर प्रत्येक फूल पर काउंटर के लिए आपको क्या करने की जरूरत है?
        courseF_bee_for9_c: ऐसा प्रतीत होता है कि यदि आप पहेली को हल करना चाहते हैं
          तो आपको प्रत्येक लूप की पुनरावृत्ति के शुरू में मधुमक्खी को जोड़ने की जरूरत
          होगी।
        courseF_bee_for9_b: "**याद रखें:** यदि आपकी लूप गणना कर रही है, तो हर बार
          आपकी `काउंटर` वेरिएबल में वृद्धि जोड़ी जाती है।"
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_a: |-
          गतिविधि के लिए इस विकल्प पर एक नज़र डालें।

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'दो `फॉर` लूप्स का उपयोग करने के प्रयास करें:
          एक ऊपर चढ़ने और मधुरस प्राप्त करने और दूसरी नीचे उतरने और शहद बनाने के लिए।'
        courseF_bee_for_challenge2_c: |-
          ध्यान दें कि एक `फॉर` लूप को अंदर कई नियमित लूप्स की जरूरत हैं, जो वृद्धि वाला सीढ़ी पैटर्न बनाने के लिए `काउंटर` बार दोहराती हों।

          अन्य `फॉर` लूप को `काउंटर` मात्रा में शहद बनाने के लिए केवल एक नियमित लूप की जरूरत है।
        courseF_bee_for_challenge2_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_a: |-
          गतिविधि के लिए इस विकल्प पर एक नज़र डालें।

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'दो `फॉर` लूप्स का उपयोग करने के प्रयास करें:
          एक ऊपर चढ़ने और मधुरस प्राप्त करने और दूसरी नीचे उतरने और शहद बनाने के लिए।'
        courseF_bee_for_challenge2_c: |-
          ध्यान दें कि एक `फॉर` लूप को अंदर कई नियमित लूप्स की जरूरत हैं, जो वृद्धि वाला सीढ़ी पैटर्न बनाने के लिए `काउंटर` बार दोहराती हों।

          अन्य `फॉर` लूप को `काउंटर` मात्रा में शहद बनाने के लिए केवल एक नियमित लूप की जरूरत है।
        courseF_bee_for_challenge2_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_a: |-
          गतिविधि के लिए इस विकल्प पर एक नज़र डालें।

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'दो `फॉर` लूप्स का उपयोग करने के प्रयास करें:
          एक ऊपर चढ़ने और मधुरस प्राप्त करने और दूसरी नीचे उतरने और शहद बनाने के लिए।'
        courseF_bee_for_challenge2_c: |-
          ध्यान दें कि एक `फॉर` लूप को अंदर कई नियमित लूप्स की जरूरत हैं, जो वृद्धि वाला सीढ़ी पैटर्न बनाने के लिए `काउंटर` बार दोहराती हों।

          अन्य `फॉर` लूप को `काउंटर` मात्रा में शहद बनाने के लिए केवल एक नियमित लूप की जरूरत है।
        courseF_bee_for_challenge2_d: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_functions2:
        courseF_bee_functions2_a: फंक्शन आपके लिए लिखा गया है, लेकिन आपको प्रत्येक
          फूल पर इसे लिखने की जरूरत होगी।
        courseF_bee_functions2_b: यह देखने के लिए कि यह क्या करता है, `केवल मधुरस
          प्राप्त करें` फंक्शन पर नीले संपादित करें बटन पर क्लिक करें।
      courseF_bee_functions3:
        courseF_bee_functions3_a: इस पहेली के लिए आपके फंक्शन को केवल शहद बनाने की
          जरूरत है, इसमें कोई भी `आगे की ओर मूव करें` या `मुड़ें` ब्लॉक्स नहीं होने
          चाहिएं।
        courseF_bee_functions3_b: याद रखें कि आपका फंक्शन केवल तभी शहद प्राप्त करेगा
          _यदि_ वहां मधु का छत्ता है।
        courseF_bee_functions3_c: अपना फंक्शन बोलने के लिए `केवल शहद बनाएं` ब्लॉक
          का उपयोग करें।
        courseF_bee_functions3_d: इस रास्ते को देखें।
      courseF_bee_functions3a:
        courseF_bee_functions3a_a: इस पहेली के लिए आपके फंक्शन को केवल मधुरस प्राप्त
          करने या शहद बनाने की जरूरत है, इसमें कोई भी `आगे की ओर मूव करें` या `मुड़ें`
          ब्लॉक्स नहीं होने चाहिएं।
        courseF_bee_functions3a_b: पहले चार बादलों को देखने के लिए सीढ़ीस्टेप पैटर्न
          का उपयोग करें।
      courseF_bee_functions4:
        courseF_bee_functions4_a: आपका फंक्शन एक तरफ के रास्तों पर नीचे की ओर जाएगा
          और मुख्य सड़क से मधुमक्खी को वापस लौटाएगा।  आपको उस हिस्से को अपने मुख्य
          प्रोग्राम में जोड़ने की जरूरत नहीं है।
        courseF_bee_functions4_b: प्रोग्राम बनाने और फंक्शन ब्लॉक्स का उपयोग करने
          का प्रयास करें क्योंकि आप फंक्शन से व्यवहार करने की अपेक्षा करते हैं, फिर
          फंक्शन बनाएं।
      courseF_bee_functions5a:
        courseF_bee_functions5a_a: "आपका फंक्शन देखेगा कि क्या दाईं ओर रास्ता है,
          और अगर है, तो एक तरफ के रास्तों पर नीचे की ओर जाएगा और मुख्य सड़क से मधुमक्खी
          को वापस लौटाएगा।  \n\nआपको उस हिस्से को अपने मुख्य प्रोग्राम में जोड़ने
          की जरूरत नहीं है।"
        courseF_bee_functions5a_b: सभी मुख्य रास्तों पर नीचे जाने के लिए `व्हाइल`
          लूप का उपयोग करें, क्योंकि उनकी लंबाईयां अलग-अलग हैं।
        courseF_bee_functions5a_c: अपनी `व्हाइल` लूप के अंदर, आगे की ओर मूव करना सुनिश्चत
          करें, फिर रास्ता देखने के लिए अपने फंक्शन का उपयोग करें।
      courseF_bee_functions6:
        courseF_bee_functions6_a: "यदि पहेली चुनौतीपूर्ण प्रतीत हो, तो थोड़े समय में
          अपना फंक्शन बनाने का प्रयास करें। \n\nकुछ ब्लॉक्स जोड़ें, फिर इसे आजमाएं।
          और जोड़ें, फिर दुबारा आजमाएं।  जल्दी ही, आप वहां पहुंच जाएंगे!\n\n<xml>\n
          \ <block type=\"procedures_defnoreturn\" editable=\"false\">\n    <mutation/>\n
          \   <title name=\"NAME\">get nectar make honey</title>\n    <statement name=\"STACK\">\n
          \   </statement>\n  </block>\n</xml>"
        courseF_bee_functions6_b: आपका फंक्शन देखेगा कि क्या वह फूल या मधु का छत्ता
          है, मधुरस प्राप्त करें या शहद बनाएं, फिर मुड़ें।
        courseF_bee_functions6_c: चूंकि आप अपने फंक्शन के अंदर मुड़ रहे हैं, आपको
          इस पहेली को पूरा करने के लिए केवल एक `व्हाइल` लूप की जरूरत होगी।
      courseF_bee_functions7:
        courseF_bee_functions7_a: अपने फंक्शन को देखने के लिए आप पिछली पहेली को फिर
          से देख सकते हैं।
        courseF_bee_functions7_b: अपनी उंगली से इस पहेली का रास्ता चित्रित करने का
          प्रयास करें। मधुमक्खी को कहां निर्णय लेना होगा?
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: यदि पहेली चुनौतीपूर्ण प्रतीत हो, तो थोड़े समय में
          अपना फंक्शन बनाने का प्रयास करें। कुछ ब्लॉक्स जोड़ें, फिर इसे आजमाएं। और
          जोड़ें, फिर दुबारा आजमाएं।  जल्दी ही, आप वहां पहुंच जाएंगे![][0]
        courseF_bee_functions8a_b: फंक्शन संपादक के अंदर कोड बनाना याद रखें।
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: यदि पहेली चुनौतीपूर्ण प्रतीत हो, तो थोड़े समय में
          अपना फंक्शन बनाने का प्रयास करें। कुछ ब्लॉक्स जोड़ें, फिर इसे आजमाएं। और
          जोड़ें, फिर दुबारा आजमाएं।  जल्दी ही, आप वहां पहुंच जाएंगे![][0]
        courseF_bee_functions7_b: |-
          हरे फंक्शन ब्लॉक के अंदर कोड बनाना याद रखें।

          <xml>
            <block type="procedures_defnoreturn" editable="false">
              <mutation/>
              <title name="NAME">get nectar make honey</title>
              <statement name="STACK">
              </statement>
            </block>
          </xml>
        courseF_bee_functions7_c: यदि वहां मधु का छत्ता हो तो आपको किस ओर मुड़ना चाहिए?
          फूल के बारे में क्या कहेंगे? तब क्या होगा, यदि वहां कुछ भी न हो?
      courseF_bee_functions_challenge1:
        courseF_bee_functions_challenge1_a: आप मदद के लिए टूल बॉक्स में से फंक्शनों
          का उपयोग कर सकते हैं। आप दूसरे फंक्शन की परिभाषा के अंदर फंक्शन बोल सकते
          हैं!
      courseF_bee_functions_challenge2:
        courseF_bee_functions_challenge2_a: |-
          यदि दाएं रास्ता हो, तो आपको निम्नलिखित करना चाहिए:

          -   कोई भी मधुरस प्राप्त करें या कोई भी शहद बनाएं।
          -   एक तरफ के रास्ते की ओर दाएं मुड़ें।
          -   एक तरफ के रास्ते के अंत की ओर मूव करें।
          -   दाएं मुड़ें।

          यदि आप उपरोक्त क्रियाओं को दो बार दोहराते हैं, तो आप मुख्य रास्ते पर वापस नीचे मूव करने के लिए तैयार होंगे।

          **यदि आप पूरा समाधान देखना चाहते हैं, केवल तभी दूसरे संकेत के लिए क्लिक करें!**
        courseF_bee_functions_challenge2_b: |-
          **समाधान:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_if">
                              <title name="DIR">isPathRight</title>
                              <statement name="DO">
                                <block type="procedures_callnoreturn" id="function">
                                <mutation name="move and check"></mutation>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">move and check</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="check nectar or honey"></mutation>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_untilBlocked">
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
            <mutation></mutation>
              <title name="NAME">check nectar or honey</title>
              <statement name="STACK">
                <block type="bee_whileNectarAmount">
                  <title name="ARG1">nectarRemaining</title>
                  <title name="OP">&gt;</title>
                  <title name="ARG2">0</title>
                  <statement name="DO">
                    <block type="maze_nectar"/>
                  </statement>
                  <next>
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">honeyAvailable</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_honey"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      courseF_bee_fwp1:
        courseF_bee_fwp1_a: यह सुनिश्चित करने के लिए `इफ` स्टेटमेंट्स का उपयोग करें
          कि आप फूल से केवल मधुरस प्राप्त कर रहे हैं।
        courseF_bee_fwp1_b: "`दोहराएं` ब्लॉक उपयोग करते हुए रास्ते पर चलना जारी रखें।
          सुनिश्चित करें कि आप `आगे की ओर मूव करें` ब्लॉक का उपयोग कर रहे हैं और `इफ`
          स्टेटमेंट का उपयोग करते हुए देख रहें कि क्या वहां कोई फूल है।"
      courseF_bee_fwp2:
        courseF_bee_fwp2_a: |-
          इसे फंक्शन में बदलने के लिए, बस कोड को मौजूदा फंक्शन ब्लॉक में खींचें।

          ![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)
        courseF_bee_fwp2_b: आपने जो फंक्शन अभी बनाया है, उसे बोलने के लिए `rowOfNectar`
          ब्लॉक को `जब चलाया जाए` से कनेक्ट करना न भूलें।
      courseF_bee_fwp3:
        courseF_bee_fwp3_a: आपका फंक्शन चलेगा, चाहे आप किसी भी दिशा के सामने हों।
        courseF_bee_fwp3_b: मधुरस की 3 पंक्तियां हैं, प्रत्येक पंक्ति के बीच आपको
          किस प्रकार के मोड़ और गतिविधियां करने की जरूरत है?
        courseF_bee_fwp3_c: इस पहेली को हल करने के लिए, आपको अपने फंक्शन को 3 बार
          बोलने की जरूरत होगी। प्रत्येक कॉल के बीच में, आपको 2 बार `दाएं मुड़ें`,
          `आगे की ओर मूव करें` की जरूरत होगी, फिर दुबारा `दाएं मुड़ें`। या आपको 2
          बार `बाएं मुड़ें`, `आगे की ओर मूव करें`, फिर दुबारा `बाएं मुड़ें` की जरूरत
          होगी।
      courseF_bee_fwp4:
        courseF_bee_fwp4_a: आपको मापदंड जोड़ने और परिणामी वेरिएबल को अपनी लूप में
          उपयोग करने की जरूरत होगी।
        courseF_bee_fwp4_b: अपने फंक्शन के लिए जो मापदंड आप बनाते हैं, उसका उपयोग
          यह निर्धारित करने के लिए दोहराएं लूप में किया जाएगा कि मधुमक्खी कितनी बार
          आगे की ओर मूव करेगी और मधुरस देखेगी।
      courseF_bee_fwp5:
        courseF_bee_fwp5_a: उन स्थानों कि संख्या गिनें, जिनकी जरूरत आपको प्रत्येक
          विस्तार में देखने के लिए है और उन संख्याओं का उपयोग फंक्शन कॉल के लिए अपने
          मापदंडों को तौर पर करें।
        courseF_bee_fwp5_a_b: प्रत्येक फंक्शन कॉल के बीच मुड़ना याद रखें।
      courseF_bee_fwp6:
        courseF_bee_fwp6_a: कौन-सा ब्लॉक अपने आप वेरिएबल की वृद्धि करता है, जिसे आप
          मापदंड के तौर पर उपयोग कर सकते हैं?
        courseF_bee_fwp6_b: इस पहेली को हल करने के लिए `फॉर` लूप का उपयोग करने का
          प्रयास करें।
      courseF_bee_fwp7:
        courseF_bee_fwp7_a: आपको इस फंक्शन के लिए दूसरे मापदंड की नहीं, केवल दूसरी
          `इफ` स्टेटमेंट की जरूरत है।
        courseF_bee_fwp7_b: अपने फंक्शन में `इफ` स्टेटमेंट जोड़ें ताकि मधुमक्खी, मधु
          के छत्तों और फूलों दोनों को देखे।
      courseF_bee_fwp8:
        courseF_bee_fwp8_a: इस पहेली में `फॉर` लूप कैसे उपयोगी हो सकती है?
        courseF_bee_fwp8_b: चूंकि जब आप अंदर जाते हैं तो आपकी सर्पिल रेखा छोटी हो
          जाती है, आपकी `फॉर` लूप उल्टी गिनती करेगी।
      courseF_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_a: |-
          The main program should look something like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="procedures_callnoreturn" inline="false">
                  <mutation name="pick row">
                    <arg name="length"/>
                  </mutation>
                  <value name="ARG0">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <next>
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="pick row">
                                <arg name="length"/>
                              </mutation>
                              <value name="ARG0">
                                <block type="math_number">
                                  <title name="NUM">5</title>
                                </block>
                              </value>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                      <next>
                                        <block type="procedures_callnoreturn" inline="false">
                                          <mutation name="pick row">
                                            <arg name="length"/>
                                          </mutation>
                                          <value name="ARG0">
                                            <block type="math_number">
                                              <title name="NUM">6</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                              <next>
                                                <block type="maze_move">
                                                  <title name="DIR">moveForward</title>
                                                  <next>
                                                    <block type="procedures_callnoreturn" inline="false">
                                                      <mutation name="pick row">
                                                        <arg name="length"/>
                                                      </mutation>
                                                      <value name="ARG0">
                                                        <block type="math_number">
                                                          <title name="NUM">4</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
        courseF_bee_fwp_challenge1_b: देखें कि प्रत्येक स्थान में काटने के लिए कितना
          कॉर्न उपलब्ध है। क्या आपको काउंटर पैटर्न दिखाई दे रहा है?
        courseF_bee_fwp_challenge1_b1: |-
          `फॉर लूप` में अधिकतम मूल्य सेट करने के लिए हमेशा `लंबाई` मापदंड का उपयोग किया जाना चाहिए।

          कटाई के बाद किसान को मुख्य रास्ते पर मूव करने के लिए सक्रिय करना न भूलें!
        courseF_bee_fwp_challenge1_c: |-
          Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.
          Inside this loop, you should move forward and pick all of the corn.

          <xml>
          <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                      </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: "`फॉर लूप` के अंदर, आप `आगे की ओर मूव करें`,
          फिर **काउंटर बार** `कॉर्न लें` चाहेंगे।"
        courseF_bee_fwp_challenge1_d2: "`फॉर लूप` के बाद, आप **लंबाई बार** `पीछे की
          ओर मूव करें` कर सकते हैं।"
        courseF_bee_fwp_challenge1_e: |-
          **Here is the solution:**

          <xml>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_corn"/>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
              </block></xml>
      courseF_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_a: |-
          यह सुनिश्चित करके शुरुआत करें कि आप समझते हैं कि यह फंक्शन किस प्रकार के काम के लिए_बनाया_ गया है। चूंकि किसान प्रत्येक रास्ते पर नीचे मूव करती है, वह केवल कॉर्न एकत्र करने का प्रयास करेगी। इसकी बजाय, आप उसे प्रत्येक 3 सब्जियां देखने और उसे जो मिलती है, वह केवल एक लेने के लिए किस प्रकार सक्रिय कर सकते हैं?

          कॉर्न, कद्दू और लेट्स देखने के लिए फंक्शन में सापेक्ष स्टेटमेंट्स जोड़ें।
        courseF_bee_fwp_challenge2_b: |-
          क्या आपके `आगे की ओर मूव करें` ब्लॉक्स खत्म हो रहे हैं?
          अपने मुख्य प्रोग्राम में _दूसरी_ `फॉर लूप` उपयोग करने का प्रयास करें।
        courseF_bee_fwp_challenge2_c: |-
          **Here is what your function should look like:**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
              <mutation>
                <arg name="length"/>
              </mutation>
              <title name="NAME">pick row</title>
              <statement name="STACK">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="controls_for" inline="true">
                      <title name="VAR">counter</title>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="harvester_ifHasCrop">
                                  <title name="LOC">Corn</title>
                                  <statement name="DO">
                                    <block type="harvester_corn"/>
                                  </statement>
                                  <next>
                                    <block type="harvester_ifHasCrop">
                                      <title name="LOC">Pumpkin</title>
                                      <statement name="DO">
                                        <block type="harvester_pumpkin"/>
                                      </statement>
                                      <next>
                                        <block type="harvester_ifHasCrop">
                                          <title name="LOC">Lettuce</title>
                                          <statement name="DO">
                                            <block type="harvester_lettuce"/>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">length</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |-
          **Here is what your main program should look like:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter2</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">6</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="procedures_callnoreturn" inline="false">
                          <mutation name="pick row">
                            <arg name="length"/>
                          </mutation>
                          <value name="ARG0">
                            <block type="variables_get">
                              <title name="VAR">counter2</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
              </block></xml>
      courseF_bee_variables_3_2018:
        courseF_beevariables_3a: |-
          To subtract one from the variable, you can use this code in your program:
          <xml><block type="variables_set" inline="false">
                              <title name="VAR">gather</title>
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">gather</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">1</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block></xml>
      courseF_bee_variables_3_2019:
        courseF_bee_variables_3_2019_1: |-
          To subtract one from the variable, you can use this code in your program:
          <xml><block type="variables_set" inline="false">
                              <title name="VAR">gather</title>
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">gather</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">1</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block></xml>
      courseF_bee_variables_4_2019:
        courseF_bee_variables_4_2019_1: Instead of subtracting 1 from `gather`, add
          1 each time instead. What should value should the variable have at first?
      courseF_playlab_variables1a:
        courseF_playlab_variables1a_a: आप “मुझे क्या चिल्लाना चाहिए?” शब्दों को हरे
          ब्लॉक में “गोल!” के साथ बदलना चाहेंगे।
      courseF_playlab_variables2b:
        courseF_playlab_variables2b_a: आपके विचार में जब आप `चलाएं` का प्रयोग करें
          तो कीकी क्या बोलेगा?
      courseF_playlab_variables3b_josh:
        courseF_playlab_variables3b_a: 'खाली स्थानों वाले दो ब्लॉक्स हैं: एक `अभिनेता
          बोले` ब्लॉक और `जुड़ें` ब्लॉक। वहां वेरिएबल ब्लॉक जोड़ें!'
      courseF_playlab_variables4b:
        courseF_playlab_variables4b_a: यहां आपको टूलबॉक्स में से किन्हीं औप ब्लॉक्स
          की जरूरत नहीं है।
        courseF_playlab_variables4b_b: दो `आयु` वेरिएबल्स और एक `नाम` वेरिएबल रखें,
          जहां वे वार्तालाप में सबसे अधिक उचित हों।
      courseF_playlab_variables5c:
        courseF_playlab_variables5c_a: टूलबॉक्स में “वेरिएबल्स” के अंतर्गत `जवाब दें`
          वेरिएबल ब्लॉक ढूंढें।
        courseF_playlab_variables5c_b: अपना कोड आजमाएं! यह देखने के लिए क्या होता
          है, “लाल” और दूसरे रंग भी दर्ज करने का प्रयास करें।
      courseF_playlab_variables6c:
        courseF_playlab_variables6c_a: "“इनपुट” अनुभाग में, उपयोगकर्ताओं से इनपुट
          प्राप्त करने के लिए `पूछें` ब्लॉक का उपयोग करें।"
      courseF_playlab_variables7b:
        courseF_playlab_variables7b_a: अपने पसंदीदा खाद्य पदार्थों के बारे मे बिल्ली
          और कुत्ते को बात करने के लिए सक्रिय करें। पसंदीदा भोजन ढूंढने के लिए पूछें
          ब्लॉक का उपयोग करें, फिर टेक्सट को स्क्रीन पर प्रदर्शित करें!
        courseF_playlab_variables7b_b: अपने पसंदीदा पात्र को यह पूछने के लिए सक्रिय
          करें कि क्या आप चुटकुला सुनना चाहते हैं। यदि जवाब हां है, तो स्क्रीन पर
          चुटकुला प्रदर्शित करें।
      courseF_playlab_variables7c:
        courseF_playlab_variables7c_a: अपनी `इफ/एल्स` स्टेटमेंट से पहले नया `पूछें`
          ब्लॉक रखें, ताकि आप अन्य चरणों में इसका उपयोग कर सकें।
      courseF_playlab_variables8c:
        courseF_playlab_variables8c_a: "`जुड़ें` ब्लॉक एक `अभिनेता बोले` ब्लॉक में
          जाता है, और आपको बड़े वाक्यों में अपने वेरिएबल्स का उपयोग करने देता है।"
      courseF_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          You will need additional blocks from the tool box to get the actors to talk.

          <xml><block type="studio_saySpriteParamsTime" inline="true">
                <value name="SPRITE">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                                <value name="TEXT">
                            <block type="text">
                              <title name="TEXT">Knock knock.</title>
                            </block>
                          </value>
                <value name="TIME">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                </block></xml>
      courseF_playlab_variables_challenge2:
        courseF_playlab_variables_challenge2_a: जब स्प्राइट्स टकराएं तो `स्कोर` वेरिएबल
          में अंक जोड़ें और घटाएं।
        courseF_playlab_variables_challenge2_b: आप इसमें बदलाव कर सकते हैं कि हर बार
          जब तीर वाली कुंजियों को दबाया जाता है को आप अपने स्प्राइट को कितनी दूर मूव
          करते हैं।
        courseF_playlab_variables_challenge2_c: |-
          **समाधान:**

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">up</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">1</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">down</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">4</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">left</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">8</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">2</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">1</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </xml>
      coursea_maze_ramp1_2018:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure
          both of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Don't be afraid to make a mistake! Try something,
          and if it doesn't work, try something else!
      coursea_maze_ramp1_2019:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure
          both of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Don't be afraid to make a mistake! Try something,
          and if it doesn't work, try something else!
      grade5_artist_variables_triangles1:
        grade5_artist_variables_triangles1_a: इस त्रिकोण में 60 डिग्री का अंदरूनी
          कोण बनाने के लिए, कलाकार को 120 डिग्री मोड़ना याद रखें।
        grade5_artist_variables_triangles1_b: अपने कोड को और छोटा बनाने के लिए `दोहराएं`
          लूप का उपयोग करें।
        grade5_artist_variables_triangles1_c: अपनी लूप के अंदर, आप 50 पिक्सल आगे मूव
          करना, फिर 120 डिग्री बाएं मुड़ना चाहेंगे।
      grade5_artist_variables_triangles1_2018:
        grade5_artist_variables_triangles1_a: इस त्रिकोण में 60 डिग्री का अंदरूनी
          कोण बनाने के लिए, कलाकार को 120 डिग्री मोड़ना याद रखें।
        grade5_artist_variables_triangles1_b: अपने कोड को और छोटा बनाने के लिए `दोहराएं`
          लूप का उपयोग करें।
        grade5_artist_variables_triangles1_c: अपनी लूप के अंदर, आप 50 पिक्सल आगे मूव
          करना, फिर 120 डिग्री बाएं मुड़ना चाहेंगे।
      grade5_artist_variables_triangles1_2019:
        grade5_artist_variables_triangles1_a: इस त्रिकोण में 60 डिग्री का अंदरूनी
          कोण बनाने के लिए, कलाकार को 120 डिग्री मोड़ना याद रखें।
        grade5_artist_variables_triangles1_b: अपने कोड को और छोटा बनाने के लिए `दोहराएं`
          लूप का उपयोग करें।
        grade5_artist_variables_triangles1_c: अपनी लूप के अंदर, आप 50 पिक्सल आगे मूव
          करना, फिर 120 डिग्री बाएं मुड़ना चाहेंगे।
      iceage_click_hello:
        iceage_click_hello_a: इस पहेली को पूरा करने के लिए एक या अधिक `अभिनेता 1 बोले`
          ब्लॉक्स को `जब क्लिक किया गया हो` इवेंट में जोड़ें।
      iceage_free_play:
        iceage_free_play_a: 'क्या आप सिड और मैनी को बर्फ-क्रिस्टल लड़ाई के लिए सक्रिय
          करते हैं?  '
        iceage_free_play_b: ग्रैनी को डिएगो का पीछा करने के लिए सक्रिय करें।  यदि
          वह उसे पकड़ लेती है तो गेम को जीत के तौर पर खत्म करें।
        iceage_free_play_c: क्या आप सिड को डिएगो पर हिम-पक्षी फेंकने और हर बार जब
          वह टकराए तो डिएगो को बड़ा करने के लिए सक्रिय कर सकते हैं?  यदि डिएगो 5 बार
          टकराता है तो गेम को जीत के तौर पर खत्म करें।
      iceage_hello1:
        iceage_hello1_a: इस पहेली को हल करने के लिए आपको केवल एक ब्लॉक जोड़ने की जरूरत
          है। टूलबार से `बोलें` ब्लॉक खींचें और इसे `जब चलाया जाए` इवेंट ब्लॉक के
          साथ कनेक्ट करें, जो पहले ही वर्कस्पेस में है। इसके बाद अंदर "हेलो!” टाइप
          करें।
      iceage_hello2:
        iceage_hello2_a: 'इस पहेली को हल करने के लिए, आपको `अभिनेता 1 बोले` ब्लॉक
          का उपयोग करते हुए सिड को कुछ बोलने के लिए सक्रिय करने की जरूरत होगी।  आपको
          `अभिनेता 2 बोले` ब्लॉक का उपयोग करते हुए नैनी को कुछ बोलने के लिए सक्रिय
          करने की जरूरत होगी। '
      iceage_move_events:
        iceage_move_events_a: 'इस पहेली को हल करने के लिए प्रत्येक `जब ___ तीर` इवेंट्स
          को इसके साथ अलग `अभिनेता 1 को मूव करें` कमांड कनेक्ट करने की जरूरत होगी। '
      iceage_move_to_actor:
        iceage_move_to_actor_a: इस पहेली के लिए, आप डिएगो को 200 पिक्सल तक नीचे मूव
          कर सकते हैं, या मैनी को 200 पिक्सल तक ऊपर मूव कर सकते हैं।
        iceage_move_to_actor_b: इस चुनौती को पूरा करने के लिए `ध्वनि ___ प्ले करें`
          ब्लॉक को `जब अभिनेता 1 अभिनेता 2 को छूता है` इवेंट से कनेक्ट करें।
      iceage_move_to_flag:
        iceage_hello3_a: इस पहेली को हल करने के लिए `अभिनेता 1 को 200 पिक्सल तक दाएं
          मूव करें` ब्लॉक का उपयोग करें।
      iceage_repeat:
        iceage_repeat_a: इस पहेली को हल करने के लिए `अभिनेता 1 को बाएं मूव करें` और
          `अभिनेता 1 को दाएं मूव करें` ब्लॉक का उपयोग करें।
      iceage_sound_and_points:
        iceage_sound_and_points_a: आपको `जब अभिनेता 1 अभिनेता 2 को छूता है` इवेंट
          के नीचे दो ब्लॉक्स जोड़ने की जरूरत होगी।
        iceage_sound_and_points_b: इस स्तर को पास करने के लिए आपको `अंक प्राप्त करें`
          ब्लॉक और 'ध्वनि \_\_\_\_ प्ले करें\` ब्लॉक दोनों की जरूरत होगी।
      iceage_throw_hearts:
        iceage_throw_hearts_a: आप ग्रैनी पर दिल कब फेंकना चाहते हैं?  जब तीर को दबाया
          जाता है? जब आप सिड पर क्लिक करते हैं?  जब आप ग्रैनी पर क्लिक करते हैं?  आपकी
          मर्जी है!
        iceage_throw_hearts_b: जब ग्रैनी दिल प्राप्त करती है, तो उसे खुश करने के लिए,
          आपको `जब अभिनेता 2 प्रक्षेप्य को छूता है` इवेंट के नीचे `अभिनेता 2 के मूड
          को खुश पर सेट करें` ब्लॉक से कनेक्ट करने की जरूरत होगी।
      iceage_warn_ice_age:
        iceage_warn_ice_age_a: 'इस पहेली को वहां प्राप्त करने के लिए, जहां यह होनी
          चाहिए, आपको केवल दो ब्लॉक्स जोड़ने होंगे। '
        iceage_warn_ice_age_b: प्रोग्राम शुरू होने के बाद तुरंत उन्हें सक्रिय करने
          के लिए `जब चलाया जाए` इवेंट के नीचे दोनों नए ब्लॉक्स जोड़ें।
