---
no-NO:
  data:
    short_instructions:
      2-3 Artist 1 new: Hi, I'm an artist. You can write code to make me draw almost
        anything. Use a few blocks to make me draw over the grey lines in the picture.
        (Each line is 100 pixels long)
      2-3 Artist 11: 'Give the stop sign a border by making an octagon with 100 pixels
        sides. '
      2-3 Artist 12: Sett "Gjenta" blokken slik at den lager en sirkel til å fullføre
        øyet. Hvis hver bevegelse blir dreid men en grad, hvor mange ganger må du
        repetere for å fullføre sirkelen? 180? 360? 500?
      2-3 Artist 2 new: 'Dette huset har en halvferdig vegg. Hver side er 100, men
        den halvferdige veggen er bare 50. Fullfør veggen. '
      2-3 Artist 3.4: The jump block moves the artist without drawing. Draw the dashed
        line using both the `jump forward` and `move forward` blocks. Each line is
        50 pixels long.
      2-3 Artist 3new: "The red hat is 100 pixels tall. Finish drawing a black hat
        that is 70 pixels shorter. \n(Note: The width of each hat is 50 pixels.)"
      2-3 Artist 4: Hjelp meg å fullføre juset til denne katten.
      2-3 Artist 6: 'This house needs a roof! Draw the triangle.  Hint: all three
        sides are the same length.'
      2-3 Artist 7: 'Finish drawing the last set of windows on the school so that
        everyone in class can see outside. The sides of each square window pane are
        25 pixels long. '
      2-3 Artist 8: Complete the rooms for each of the animals by splitting the rectangle
        into 2 equal-sized squares. The rectangle is 200 pixels wide and 100 pixels
        tall. There are many different ways to solve this puzzle, so have some fun!
      2-3 Artist 9 NEW: Fullfør denne dragen
      2-3 Artist Assessment 1: 'Assessment: Finish drawing the last tooth. It is 25
        pixels wide and 25 pixels tall.'
      2-3 Artist Debugging 1: This hat should only be 50 pixels wide.  Can you fix
        it?
      2-3 Artist Debugging 10: "The direction pad on my game controller is too narrow.
        \n\nCan you make it wider by 10 pixels?\n\nTry running the code first to see
        what's wrong."
      2-3 Artist Debugging 11: |-
        My snowflake is falling apart!

        Can you figure out what's going wrong?
      2-3 Artist Debugging 2: "This code for the cat's whiskers is wrong. \n\nFix
        this code to draw whiskers that are all the same length."
      2-3 Artist Debugging 3: "My boat has a hole! \n\nWhat do you need to fix to
        make the ends meet?"
      2-3 Artist Debugging 5: "The code that we have for the leg and foot is wrong.
        \n\nCan you fix it?"
      2-3 Artist Debugging 6: |-
        Looks like I'm sitting on a chair that’s missing a leg!

        Edit the code to draw the last leg.
      2-3 Artist Debugging 7: |-
        Looks like the C in code is drawn backwards!

        Can you make it look like a C again?
      2-3 Artist Debugging 8: |-
        My teacher says that I should finish what I start!

        Help me finish my pinwheel. Can you figure out what's wrong?
      2-3 Artist Debugging 9: |-
        Something is off!

        The code for this stem is wrong. Can you figure out how to get the artist to trace the stem the right way?
      2-3 Artist Debugging Assessment 1: "Oppgave: Hvorfor blir dette kvadratet 75
        piksler for lite på hver side? \n\nHvor i koden går det galt?"
      2-3 Artist Free Play: Åpent brett! Tegn det du vil.
      2-3 Artist Functions 1: "Hallo. Meg zombie kunstner. Meg tegne elsker! \n\nHjelp
        meg med å tegne de kvadratiske brillene. \n\nMellomrommet mellom brilleglassene
        er 25 piksler kortere enn lengden på kvadratene som er 100 piksler."
      2-3 Artist Functions 10: Her er to funksjoner, en til å tegne en stor del og
        en til å tegne en liten del. Bruk den til å tegne innsiden av en maskin!
      2-3 Artist Functions 11: |-
        Vi har omdøpt funksjonen "tegn et kvadrat" til "tegn en sekskant", men den tegner fortsatt bare kvadrat! Kan du endre funksjonen "tegn en sekskant" til å tegne en sekskant med sider som er 50 piksler lange, og tegner bildet ved hjelp av funksjonen?

        Tegn bildet ved å bruke den nye funksjonen!
      2-3 Artist Functions 11.5: "Here's that same `draw a hexagon` function. \n\nWhat
        happens if you loop the main program 6 times, turning 60 degrees each time
        you loop?"
      2-3 Artist Functions 12: "Functions are really great for drawing complex things
        multiple times. \n\nCan you use the `draw a flower` function to fill the rest
        of the planter box?\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 2: "Functions let you define new blocks! \n\nWe've moved
        the blocks needed for drawing a square into a function called `draw a square`.
        This time, use the `draw a square` function to create the glasses. \n\nThe
        squares are 75 pixels apart."
      2-3 Artist Functions 3: "Edit the function to draw a square with a side length
        of 115 to draw the bigger glasses. \n\nThe squares are now 45 pixels apart."
      2-3 Artist Functions 4: Now, put the function inside of a loop to draw these
        three squares.
      2-3 Artist Functions 9: 'Freeplay: Here is a snowflake function. Experiment
        with it to create a winter scene! This is a free play level, so there is no
        puzzle to solve. Have fun!'
      2-3 Artist Loops New 1: Let's draw this robot's head! Can you make a square
        with sides that are 100 pixels?
      2-3 Artist Loops New 10: Now let's connect a bunch of V's together in a loop.
      2-3 Artist Loops New 11: Rebuild the code from the last puzzle, but this time,
        add a left turn of 30 degrees inside the loop. Now, repeat it 24 times instead
        of 8.
      2-3 Artist Loops New 12: 'Draw a diamond with sides of 100 pixels. '
      2-3 Artist Loops New 13: "We are going to start you with some code (in grey)
        to make one diamond. \n\nLoop the grey code to create a fun pattern!"
      2-3 Artist Loops New 14: Lek med koden for diamanten og se hvilke andre mønstre
        du kan lage. Prøv å endre hvor mange grader du kan snu og hvor mange ganger
        du kan la den gå i løkke.
      2-3 Artist Loops New 15: Tegn noe morsomt.
      2-3 Artist Loops New 2: |-
        Here is the same puzzle that we just solved, but this time, we can only use one `move forward` block and one `turn` block this time.

        Can you use a `repeat` to solve this puzzle?
      2-3 Artist Loops New 9: Draw a simple V (where both sides are 50 pixels) to
        complete the arrow.
      2-3 Artist Nested Loops 1: Kjør en gjenta-løkke over hele denne blokken av kode
        for å tegne mønsteret.
      2-3 Artist Nested Loops 10: Repeter dette mønsteret 12 ganger for å fullføre
        mønsteret.
      2-3 Artist Nested Loops 11: Loop this code 4 times to complete the pattern,
        turn 90 degrees after each circle.
      2-3 Artist Nested Loops 12: Repeter denne koden 12 ganger for å fullføre svingene.
      2-3 Artist Nested Loops 2: "Now loop the triangle 6 times. \n\nAfter each triangle,
        you'll need to turn 60 degrees before drawing the next."
      2-3 Artist Nested Loops 3: "For å tegne dette mønsteret må du repetere triangelet
        12 ganger. \n\nDel antall grader i en sirkel (360) på antall figurer du tegner
        (12) for å finne hvor langt du må snu etter hver figur."
      2-3 Artist Nested Loops 4: |-
        Loop this diamond 12 times to draw a flower!

        Note: We'll use the same angle to loop 12 diamonds as we did for 12 triangles.\
        How much do you need to turn after each shape?
      2-3 Artist Nested Loops 5: "Fill in this building's windows using a nested loop.
        \n\nThe windows are 20 pixels long and 20 pixels apart."
      2-3 Artist Nested Loops 6: |-
        This dinosaur has 8 spikes running up its tail.
        Each spike is 30 pixels long. Loop the triangle 8 times, but make sure to jump forward after each one!
      2-3 Artist Nested Loops 7: "Loop this triangle 10 times to draw the sun. \n\nYou'll
        need to move and turn after each triangle. \n\nYou can figure out how much
        to turn by dividing the number of degrees in a circle by the number of triangles
        that make it up."
      2-3 Artist Nested Loops 8: "Now let's add some grass to our picture. \n\nEach
        tuft of grass is 50 pixels apart."
      2-3 Artist Nested Loops 9: "We'll finish this picture by adding our flower.
        \n\nLoop the diamond 12 times to draw the flower."
      2-3 Artist Nested Loops Free Play: Frilek, tegn noe kul med løkker i løkker.
      2-3 Bee Conditionals 11: "I wonder what's out there!\n\nHelp me fly around the
        yard and collect nectar only from the flowers that have some. "
      2-3 Bee Conditionals 12: Hjelp meg med å finne all nektaren ved å bruke så få
        blokker som mulig!
      2-3 Bee Conditionals 13: |-
        There's a lot happening here!

        Use what you've learned to collect all of the nectar and then make the honey.
      2-3 Bee Conditionals 14: |-
        La oss sette alt sammen!

        Bruk det du har lært for å samle nektar kun fra blomster som har det. Bruk så få blokker som mulig. Ikke glem å lage honning til slutt.
      2-3 Bee Conditionals 15: "This stair step pattern should look familiar.  \n\nCan
        you collect nectar only from the flowers that have some, using as few blocks
        as possible?"
      2-3 Bee Conditionals 2: "I'm a hungry bee! \nHelp me collect all of the nectar
        from the flowers using the fewest number of blocks."
      2-3 Bee Conditionals 3: "Look at all of that nectar!\n\nHelp me collect the
        nectar and make the honey using as few blocks as you can.  "
      2-3 Bee Conditionals 5: "Pass på at du ikke prøver å samle inn nektar fra lilla
        blomster som ikke har mer nektar. \nSjekk om nektar er lik 1 ved å bruke en
        \"hvis nektar\"-blokk."
      2-3 Bee Conditionals 6: Check this flower with an "if" block to see if there
        is any nectar available.
      2-3 Bee Conditionals 7: Samle inn nektar fra alle blomstene dersom de har nektar.
      2-3 Bee Conditionals 8: This field has red and purple flowers. Red flowers have
        a known nectar amount, but purple flower nectar is unknown. Collect all the
        nectar.
      2-3 Bee Conditionals 9: Samle inn nektar fra alle blomstene.
      2-3 Bee Conditionals Assessment 1: 'Oppgave: Samle alle nektarene. Vær forsiktig
        så du ikke samler nektar fra en lilla blomst hvis den ikke har noen.'
      2-3 Bee Debugging 1: 'Disse blokkene plager meg. Fiks feilene og samle inn nektaren
        for å lage all honningen. '
      2-3 Bee Debugging 10: 'Disse blokkene plager meg. Fiks feilene og samle inn
        nektaren for å lage all honningen. '
      2-3 Bee Debugging 2: |-
        Kan du finne problemet her?
        Fiks feilen(e) for å samle all nektaren.
      2-3 Bee Debugging 3: |-
        Ooh, this one stings!

        Fix the error(s) to collect all of the nectar.
      2-3 Bee Debugging 4: 'Disse blokkene plager meg. Fiks feilene og samle inn nektaren
        for å lage all honningen. '
      2-3 Bee Debugging 5: "Den blomsten ser god ut! \n\nFiks feilen(e) i koden for
        å samle all nektaren.\nDu kan bruke både knappene kjør og trinn."
      2-3 Bee Debugging 6: |-
        What a sweet challenge!

        Fix the error(s) to collect all of the nectar.
      2-3 Bee Debugging 7: Fiks feilene og samle inn nektaren for å lage all honningen.
      2-3 Bee Debugging 8: |-
        Så mange vakre blomster!

        Fiks feilene og samle inn all nektaren.
      2-3 Bee Debugging 9: |-
        "Bee" patient with this one!

        You will need to fix a couple of things in this program to collect all of the nectar and make all of the honey.
      2-3 Bee Debugging Assessment 1: |-
        Lekse: Nå er det på tide å vise hva du kan!

        Fiks feilen(e) for å samle all nektaren og lage all honningen.
      2-3 Bee Functions 1: Functions are blocks of code that perform a task. Use the
        "get 2 nectar" function to collect the nectar from each flower.
      2-3 Bee Functions 10: "Purple flowers change between either 1 or 0 nectar each
        time you run the puzzle.   \n\nCreate a function that collects nectar only
        from purple flowers that have nectar."
      2-3 Bee Functions 2: "Functions are blocks of code that perform a task.  \n\nUse
        the `get 5` function to get 5 nectars at a time."
      2-3 Bee Functions 3: Samle inn nektar fra alle blomstene.
      2-3 Bee Functions 4: "The `move and get nectar` function turns the bee, collects
        nectar, and then returns the bee to where it started.  \n\nUse the function
        to collect all of the nectar."
      2-3 Bee Functions 5: There is now more nectar at the flowers. Edit the given
        function so that it collects 4 nectars and use it to collect all of the nectar
        from the flowers.
      2-3 Bee Functions 6: Bruk nå samme funksjonen til å samle nektar fra tre blomster.
      2-3 Bee Functions 8: Create your own function that gets 7 nectar, moves forward,
        and makes 7 honey. Use the function to collect nectar at each flower and make
        honey at each honeycomb.
      2-3 Bee Functions 9: Create your own function that goes down a path, gets nectar,
        makes honey, and then returns the bee to the top of the path.
      2-3 Bee Functions Assessment 1: 'Lekse: bruk funksjonen til å samle inn nektar
        fra alle blomstene.'
      2-3 Bee Functions Assessment 2: 'Lekse: Lag en funksjon som snur, flytter fram
        og lager 3 honning om gangen, deretter fly bien tilbake til der den startet
        og tilbake igjen.'
      2-3 Bee Loops 1: |-
        Those flowers look tasty!

        Collect nectar from each of the flowers using the fewest blocks possible.
      2-3 Bee Loops 10: Can you use a while loop inside of two other loops to collect
        all of the nectar?
      2-3 Bee Loops 13: 'Lekse: Samle all nektaren ved å bruke så få blokker som mulig.'
      2-3 Bee Loops 1A: 'Hi, I''m a bee. Can you help me collect the nectar from these
        flowers? '
      2-3 Bee Loops 2: Samle all nektaren og lag all honning ved å bruke så få blokker
        som mulig.
      2-3 Bee Loops 2A: Klarer du å løse oppgaven lettere ved å bruke en løkke?
      2-3 Bee Loops 3: Samle inn nektar fra alle blomstene og lag honning i hver av
        bikubene ved å bruke så få blokker som mulig.
      2-3 Bee Loops 3A: Kan du bruke en løkke til å samle inn all nektaren?
      2-3 Bee Loops 3B: Now use the `repeat` block to collect all of the nectar and
        make all of the honey.
      2-3 Bee Loops 4: |-
        For en travel bie!

        Hjelp bien med å samle all nektaren og lage all honningen ved å bruke så få blokker som mulig.
      2-3 Bee Loops 4A: "How many times can loops help you in this puzzle?  \n\nLoops
        are your friend! Use a few of them to complete this puzzle with the fewest
        blocks possible."
      2-3 Bee Loops 5: |-
        Mønsteret på denne stien er litt annerledes enn de andre.

        Kan du samle all nektaren ved å bruke så få blokker som mulig?
      2-3 Bee Loops 6: Kan du finne den raskeste måten som får bien til å samle all
        nektaren og lage all honning?
      2-3 Bee Loops 7: For en vakker blomstereng! Hjelp bien med å besøke alle blomstene.
        Kan du få det til ved å bruke færre enn 7 blokker?
      2-3 Bee Loops 8: "These purple flowers have different amount of nectar each
        time you run the puzzle. \n\nUse the `while nectar` loop to collect all of
        the nectar. \n\nThis loop will run as long as the condition is true, in this
        case `nectar > 0`."
      2-3 Bee Loops Assessment 1: 'Lekse: Bruk en mens-løkke til å samle inn all nektaren
        fra denne blomsten.'
      2-3 Maze 1: 'Can you help me catch the naughty pig? Stack a couple of `move
        forward` blocks below the `when run` block and press "Run". '
      2-3 Maze 10: Før meg til den grønne ondskapen! (Se opp for dynamitt)
      2-3 Maze 12: Klarer du å å komme til grisen ved å lage ei løkke som bare bruker
        'flytter fram'-blokk inni en 'gjenta'?
      2-3 Maze 13: Få meg bort til grisen! Du kan kun bruke én `gå framover`-blokk
        denne gangen
      2-3 Maze 15: In this puzzle, two `repeat` loops will help you get to the pig
        with the fewest number of blocks!
      2-3 Maze 16: Løkker fungerer til og med med mer enn en blokk inni! Kan du lage
        en løkke til denne sekvensen for å få zombien til solsikken?
      2-3 Maze 16 before: Kan du finne raskeste måte å få meg til grisen?
      2-3 Maze 2: Denne grisen har røsket i fjærene mine. Hjelp meg å få tak i han!
      2-3 Maze 3: Trace the path and lead me to the silly pig. Avoid TNT or feathers
        will fly!
      2-3 Maze 4: Før meg til den grønne ondskapen! (Se opp for dynamitt)
      2-3 Maze 6: Hold deg i ro og hjelp meg med å finne den slemme grisen. Ellers
        blir jeg kanskje sinna!
      2-3 Maze 7: Før meg til den grønne ondskapen! (Se opp for dynamitt)
      2-3 Maze 8: Få meg til grisen!
      2-3 Maze 9: Før meg til den grønne ondskapen! (Se opp for dynamitt)
      2-3 Maze Loops 1: Can you get me to the pig using 5 of the same kind of blocks?
      2-3 Maze Loops 17: Bruk det du har lært til å få meg til solsikken!
      2-3 Maze Loops 18: "Get me to the sunflower using the fewest blocks possible!
        \ \n\nTry using one `repeat` loop inside of another to cut down on the amount
        of code you need."
      2-3 Maze Loops 19: |-
        La oss ta dette til et nytt nivå!
        Bruk løkker for å få meg bort til solsikken, men bruk så få løkker som mulig.
      2-3 Maze Loops 20: Klarer du å løse denne oppgaven ved å bruke så få oppgaver
        som mulig?
      2-3 Maze Loops 21: Få meg til solsikken ved å bruke så få blokker som mulig!
      2-3 Maze Loops Assessment 1: 'Lekse: Få meg til solsikken med bare 5 blokker!'
      4-5 Artist 1: 'Help me finish drawing my box. (Each line is 300 pixels long) '
      4-5 Artist 11: Complete the green lines. The lines are 300 pixels long and 15
        pixels apart.
      4-5 Artist 2: Loop this code using the `repeat` block to complete the square.
      4-5 Artist 3: Dette rektangulære blomsterbedet har en omkrets på 600. Langsiden
        har en lengde på 200. Tegn rektangelet ved å bruke så få blokker som mulig.
      4-5 Artist 3.5: Prøv å finne ut hva som skjer hvis du kjører denne koden (eller
        bare trykker "Kjør" for å prøve den). Etter det, gjenta koden mange nok ganger
        til å fullføre tegningen!
      4-5 Artist 4: Hvor mange grader er det i en sirkel? Gjenta blokkene for å lage
        en sirkel av farger.
      4-5 Artist 5: What can we replace "???" with to make sure that the zombie completes
        this drawing using the loop provided?
      4-5 Artist 6: This equilateral triangle has angles of 60, 60, and 60 degrees.
        Each side is 200 pixels. Complete the drawing.
      4-5 Artist 7: Denne rettvinklede trekanten har vinkler på 30, 60 og 90 grader.
        Den skrå linjen er dobbel så lang som høyden som er 100 pixler. Fullfør tegningen.
      4-5 Artist 8: "The halfway line on a soccer field is perpendicular to the sidelines.\\\nThis
        rectangle has a perimeter of 800 pixels total, and it is 240 pixels long.
        How tall is it?   \n\nDraw the bounds and the halfway line."
      4-5 Artist 9: Tegn den andre halvparten slik at designet blir symmetrisk. Trekantene
        er likesidede og hver side er 50 pixler lange.
      4-5 Artist Assessment 1: 'Lekse: Bruk en løkke for å tegne en likesidig trekant.
        Hver side er 300 pixler.'
      4-5 Artist Free Draw 1: Fritegning. Tegn det du føler deg inspirert til.
      4-5 Artist Patterns 1: |-
        Draw this square using a loop.

        Each side is 20 pixels long.
      4-5 Artist Patterns 10: "This code draws two rows of hexagons - loop the whole
        thing 4 times to draw the whole honeycomb. \n\nYou'll need to jump back 120
        pixels in your outermost loop to make sure the artist doesn't draw off the
        screen."
      4-5 Artist Patterns 11: 'Hvor mange ganger må du repetere denne koden for å
        tegne en halvsirkel? '
      4-5 Artist Patterns 12: "If you create another loop like this one, but turn
        left instead of right, what happens? \n\nCan you repeat all of that to draw
        this wave?"
      4-5 Artist Patterns 13: "Now let's loop that whole thing four times to create
        this picture frame. Watch out for the corners - you can't just turn 90 degrees!
        \n\nIf looping a 3 degree turn 60 times makes a half circle, which of these
        blocks of code will make an additional quarter circle for the corners?"
      4-5 Artist Patterns 2: Dersom du legger kvadrat-løkka inni en annen løkke kaller
        vi det en nestet løkke. Hva må du legge til i den ytre løkken for at alle
        15 kvadratene skal være på en linje ved siden av hver andre?
      4-5 Artist Patterns 3: Now let's go one level deeper! We've nested that whole
        block of code into another loop, but you need to get the artist back in place
        to draw the next line. Which of these code blocks can you place at the end
        of the outermost loop to draw the whole grid?
      4-5 Artist Patterns 4: This diamond has 50 pixel sides and angles of 120 and
        60 degrees. Use a loop to draw it.
      4-5 Artist Patterns 5: "Repeat this code to make a row of 6 diamonds. \n\nNotice
        that we changed our diamond code to repeat 3 times instead of 2 - why do you
        think that is?"
      4-5 Artist Patterns 6: How many times do you need to repeat this block to draw
        the full grid of diamonds?
      4-5 Artist Patterns 7: Nå skal vi endre koden fra forrige oppgave for å gjøre
        mønsteret litt mer komplisert. Legg merke til hvordan diamantene nå overlapper
        hverandre. Forsøk å endre den første "hopp tilbake" fra 100 til 50 (halvparten
        så langt) – Hvor langt skal artisten nå gå i det andre "hopp tilbake"
      4-5 Artist Patterns 8: Use a loop to draw this hexagon with 40 pixel sides and
        60 degree angles.
      4-5 Artist Patterns 9: "Now repeat this code 3 times and draw the whole row.
        \n\nEach hexagon is 80 pixels wide from the furthest points left to right."
      4-5 Artist Patterns 9.5: Let's loop this code to draw two rows of hexagons.
        Notice how our second row is shifted to the right.
      4-5 Artist Patterns Free Play: Free play - try your hand at making a pattern
        of your own!
      4-5 Bee Conditionals 1: Denne skyen blokkerer synet mitt! Se om det er en blomst
        under skyen, og hent nektar kun hvis det er en blomst der. Vær forsiktig,
        det kan endre seg!
      4-5 Bee Conditionals 2: "More clouds! \n\nCheck underneath every cloud to see
        if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds
        hide the same thing!"
      4-5 Bee Conditionals 3: Now I just want to make honey. Some of these clouds
        might have honeycombs under them. Be sure to check each cloud!
      4-5 Bee Conditionals 4: Av og til skjuler denne skya en blomst og av og til
        skjuler den en bikube! Bruk "hvis/ellers"-blokk til å samle inn nektar dersom
        det er en blomst, hvis ikke så lager du honning (fordi det er en bikube).
      4-5 Bee Conditionals 5: |-
        There will be either a flower or a honeycomb under each of those clouds!

        Use the `if/else` block to collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      4-5 Bee Conditionals 6: "I am not sure how much nectar this flower has, but
        I know it has either 1, 2, or 3 nectar. \n\nCombine the conditional blocks
        (`if` and/or `if/else`) to only get as much nectar as the flower has. \n\nRemember,
        the amount of nectar can change each time you run the puzzle!"
      4-5 Bee Conditionals 7: "These flowers can have 3, 2, or 1 nectar. \n\nComplete
        the `check purple flower` function and use it to collect all of the nectar
        at the flowers."
      4-5 Bee Conditionals 8: "Write the function for `check flower make honey`. \n\nYour
        function should check if the purple flower has 3, 2, or 1 nectar and get all
        of the nectar. \nThen, move forward and make honey."
      4-5 Bee Conditionals Assessment 1: "**Assessment:** This cloud is either hiding
        a flower with one nectar or a honeycomb that needs one honey.  \n\nComplete
        the `get nectar or make honey` function, then call it to collect the nectar
        or honey. "
      4-5 Bee Debugging 1: "These blocks are really bugging me. \n\nCan you fix them?"
      4-5 Bee Debugging 10: Finn feilene og fiks dem.
      4-5 Bee Debugging 11: Teller denne riktig?
      4-5 Bee Debugging 2: Hjelp bien å finne nektar for å lage honning.
      4-5 Bee Debugging 3: Finn feilene og fiks dem.
      4-5 Bee Debugging 4: Disse blokkene fungerer ikke. Hva er mønsteret?
      4-5 Bee Debugging 5: Noe er ikke rett her...
      4-5 Bee Debugging 6: "The purple flower has a different amount of nectar each
        time you run the puzzle. \n\nFix the blocks to get all of the nectar from
        the flower each time."
      4-5 Bee Debugging 7: Denne funksjonen mangler noe...
      4-5 Bee Debugging 8: This function is fine, but it isn't used properly.
      4-5 Bee Debugging 9: Hvorfor lager ikke bien nok honning?
      4-5 Bee Debugging Assessment 1: 'Lekse: Fiks koden.'
      4-5 Bee Nested Loops 1: Bruk en løkke til å samle inn all nektaren.
      4-5 Bee Nested Loops 2: 'Collect all of the nectar from each flower. Use a nested
        loop. '
      4-5 Bee Nested Loops 3: Putt koden som er lagt til i en løkke i løkke til å
        samle inn alt nektaren.
      4-5 Bee Nested Loops 4: "Collect all of the nectar from each flower and make
        honey at the honeycomb. \n\nUse a nested loop. "
      4-5 Bee Nested Loops 5: Samle inn all nektaren ved å bruke en løkke i løkke.
      4-5 Bee Nested Loops 7: Put this loop inside another loop to create a nested
        loop and collect all of the nectar from the flowers.
      4-5 Bee Nested Loops 9: Collect all of the nectar from these flowers by nesting
        a while loop inside a repeat.
      4-5 Bee Nested Loops Assessment 1: "**Assessment:** Collect all of the nectar
        and make all of the honey using loops."
      4-5 Bee Nested Loops Rows: Gather nectar from the rows of flowers! Use a nested
        loop.
      4-5 Maze 1: Kjære person. Meg zombie. Må... komme... til solsikke.
      4-5 Maze 10: Klarer du å komme deg til solsikken med bare fire blokker?
      4-5 Maze 11: Kan du komme deg til solsikken med bare seks blokker.
      4-5 Maze 12: OK, denne er litt anderledes. Klarer du å få det til med bare seks
        blokker?
      4-5 Maze 2: Få zombien til solsikken men unngå den kjøttetende planten!
      4-5 Maze 3: Må... komme... meg til solsikke.
      4-5 Maze 4: Use the "repeat" block to solve the puzzle quickly...
      4-5 Maze 5: Klarer du å løse denne oppgaven ved å bruke så få oppgaver som mulig?
      4-5 Maze 6: Klarer du å løse denne oppgaven ved å bruke så få oppgaver som mulig?
      4-5 Maze 7: Get the zombie to the sunflower quickly!  Can you solve the puzzle
        in fewer than 11 blocks?
      4-5 Maze 8: |-
        Få zombien til solsikka ved å bruke så få blokker som du kan.
        (Unngå de kjøttetende plantene!)
      4-5 Maze 9: "Now we have a new block called `repeat until`.\\\nThis will let
        us keep looping commands until the zombie gets the sunflower.  \n\nUse the
        new `repeat until` block to solve this puzzle in as few commands as possible."
      4-5 Maze Assessment 1: 'Lekse: Få meg til solsikken ved å bruke så få blokker
        som mulig.'
      4-5 Maze Conditionals 1: Use the `repeat until` block to get the zombie to the
        sunflower.
      4-5 Maze Conditionals 10: "Can you add just 3 blocks to help the zombie solve
        a more complex maze? \n\nIf you do it right, he can walk any curvy path no
        matter the length!"
      4-5 Maze Conditionals 2: Use the `repeat until` block to get the zombie to the
        sunflower.
      4-5 Maze Conditionals 3: 'Use the `if` block to help me decide when to turn. '
      4-5 Maze Conditionals 4: Ok, solve this one just like the last puzzle, but you
        need to remember how you used the `if` and `repeat until` blocks together.
      4-5 Maze Conditionals 5: "\"Me want sunflower!\"  \n\nUse an `if` statement
        to get the zombie to the sunflower with the fewest number of blocks."
      4-5 Maze Conditionals 6: |-
        "Eat sunflower!"

        Use an `if` statement to get the zombie to the sunflower with the fewest number of blocks.
      4-5 Maze Conditionals 7: The solution to this puzzle isn't very different, but
        watch out for the chompers!
      4-5 Maze Conditionals 8: "The `if/else` block checks a condition, and then does
        one thing OR another. \n\nUse this new block to get me to the sunflower."
      4-5 Maze Conditionals 9: |-
        One more practice puzzle with the `if/else` block!

        Trace it with your finger to see if you can figure it out on your first try.
      4-5 Maze Conditionals Assessment 1: "**Assessment:** Use a `repeat until` and
        an `if/else` block to get me to the sunflower in as few blocks as possible."
      4-5 Nested Loops 1: 'Complete the code to draw these triangles.  The first one
        is done for you.  Hint:  3 triangles in a 360 degree rotation.'
      4-5 Nested Loops 11: Can you draw these 10 squares of this sidewalk using a
        nested loop? Each square is 30 pixels.
      4-5 Nested Loops 12: Can you draw these 36 triangles using a nested loop?
      4-5 Nested Loops 2: 'Nå skal du putte denne løkken inni en annen løkke for å
        tegne 10 triangler. Dette kalles en løkke i løkke.  '
      4-5 Nested Loops 3: |-
        Create a sun by nesting the starter code in another loop.

        To get this cool design with a hollow center, you'll need to jump forward by the length of the triangle before turning.
      4-5 Nested Loops 5: Bruk en løkke rundt denne koden for å lage en vindmølle.
      4-5 Nested Loops 6: Can you draw a hexagon by looping the triangle code?
      4-5 Nested Loops 7: "Loop this design 10 times. \n\nHow much do you have to
        turn each time you loop?"
      4-5 Nested Loops 8: "Loop this shape 6 times. \n\nHow much do you have to turn
        each time you loop? "
      4-5 Nested Loops 9: Tegn tennene i munnen til alligatoren!
      4-5 Nested Loops Assessment 1: 'Lekse: Bruk en løkke i løkke for å fullføre
        designet.'
      4-5 While Loops 1: Move me to the hole and fill it with two shovelfuls of dirt,
        using the `fill` block.
      4-5 While Loops 2: Move me to the pile of dirt and remove it with 5 shovel scoops,
        using the `remove 1` block.
      4-5 While Loops 3: "Use as few blocks as possible to complete this puzzle!  \n\nMove
        me to the pile and remove all the dirt, then move to the hole and fill it
        completely."
      4-5 While Loops 4: "Wow, look at that! \n\nI don't know how many shovelfuls
        of dirt this hole needs.\\\nCan you write a program that keeps using the `fill`
        block until the ground is even?  "
      4-5 While Loops 5: Wow, now there are two deep holes! Can you write a program
        that fills them both until the ground is even?
      4-5 While Loops 6: Wow, now there is a large pile of dirt! Can you write a program
        that removes all of it so the ground is even?
      4-5 While Loops 7: Wow, now there are three piles of dirt! Can you write a program
        that removes each of them until the ground is even?
      4-5 While Loops 8: " Det er et virkelig dypt hull og en virkelig stor haug med
        jord. Hvor mange spadetak må tas for å gjøre bakken helt flat?"
      4-5 While Loops Assessment 1: There are a lot of holes and piles.  Help me to
        fill and remove them to make the ground flat.
      AB_Debug_PlayLab3: Flytt ridderen til hver av flaggene. Om noe går galt, se
        etter feil!
      Alien Defender: 'Idé: Lag et forsvarsspill i Spill-lab!'
      CDEF_debugging_flappy2: Hvorfor funker ikke dette spillet?
      CSD U3 Boolean Modify: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Modify_2018: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Modify_2019: Modify the code so that all of the console.log commands
        print true
      CSD U3 Boolean Predict: What do you think this code will do when it is run?
        Predict what each console.log() command will print, then run the program to
        check your predictions.
      CSD U3 Boolean Predict_2018: What do you think this code will do when it is
        run? Predict what each console.log() command will print, then run the program
        to check your predictions.
      CSD U3 Boolean Predict_2019: What do you think this code will do when it is
        run? Predict what each console.log() command will print, then run the program
        to check your predictions.
      CSD U3 Keypress Boolean: Modify the code so that all of the console.log commands
        print true
      CSD U3 Keypress Boolean_2018: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Boolean_2018_2019: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers: Modify the code so that all of the console.log commands
        print true
      CSD U3 Keypress Watchers_2018: Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers_2019: Modify the code so that all of the console.log
        commands print true
      CSD U3 L5 Freeplay: Change the value of petalSize multiple times. How does it
        change your drawing?
      CSD U3 L5 Freeplay_2018: Change the value of petalSize multiple times. How does
        it change your drawing?
      CSD U3 L5 Freeplay_2019: Change the value of petalSize multiple times. How does
        it change your drawing?
      CSD U3 Mouse Input Bee 2: Do this
      CSD U3 Mouse Input Bee 2_2018: Do this
      CSD U3 Mouse Input Bee 2_2019: Do this
      CSD U3 Sprites intro sprites: Do This
      CSD U3 Sprites intro sprites_2018: Do This
      CSD U3 Sprites intro sprites_2019: Do This
      CSD U3 Variables change circle size: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables change circle size_2018: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables change circle size_2019: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables naming rules v2: Change the value of petalSize multiple times.
        How does it change your drawing?
      CSD U3 Variables naming rules v2_2018: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables naming rules v2_2018_2019: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random with assignment: Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random with assignment_2018: Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables random with assignment_2019: Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U5 black white images pixelation: Fullfør X-formen ved å bruke 0 og 1-tall
      CSD U5 black white images pixelation 2: Tegn et smilefjes (trykk her for å se
        bilde)
      CSD U5 black white images pixelation 2_2018: Tegn et smilefjes (trykk her for
        å se bilde)
      CSD U5 black white images pixelation 2_2019: Tegn et smilefjes (trykk her for
        å se bilde)
      CSD U5 black white images pixelation 3: Juster bredde- og høydebryterne for
        å finne bildet (klikk her for å se mer)
      CSD U5 black white images pixelation 3_2018: Juster bredde- og høydebryterne
        for å finne bildet (klikk her for å se mer)
      CSD U5 black white images pixelation 3_2019: Juster bredde- og høydebryterne
        for å finne bildet (klikk her for å se mer)
      CSD U5 black white images pixelation 4: Tegn øyenbryn på smilefjeset (klikk
        her for å se bilde)
      CSD U5 black white images pixelation 4_2018: Tegn øyenbryn på smilefjeset (klikk
        her for å se bilde)
      CSD U5 black white images pixelation 4_2019: Tegn øyenbryn på smilefjeset (klikk
        her for å se bilde)
      CSD U5 black white images pixelation 5: Tegn hva du vil
      CSD U5 black white images pixelation 5_2018: Tegn hva du vil
      CSD U5 black white images pixelation 5_2019: Tegn hva du vil
      CSD U5 black white images pixelation_2018: Fullfør X-formen ved å bruke 0 og
        1-tall
      CSD U5 black white images pixelation_2019: Fullfør X-formen ved å bruke 0 og
        1-tall
      CSD U6 params modify clouds: |-
        # Clouds

        This program makes the clouds move when you blow on the sound sensor, but it's not finished.

        # Do This

        -   Create a new function `moveCloud(name)` that will move any cloud.
            -   (Hint: you will use almost all the same code as the `moveCloud0` function)
        -   Call your new `moveCloud(name)` function inside the event block, once for each cloud name.
            -   (Hint: this is similar to how the `loopCloud(name)` function is called many times.
      CSD U6 params modify clouds_2018: |-
        # Clouds

        This program makes the clouds move when you blow on the sound sensor, but it's not finished.

        # Do This

        -   Create a new function `moveCloud(name)` that will move any cloud.
            -   (Hint: you will use almost all the same code as the `moveCloud0` function)
        -   Call your new `moveCloud(name)` function inside the event block, once for each cloud name.
            -   (Hint: this is similar to how the `loopCloud(name)` function is called many times.
      CSD U6 params modify planes: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSD U6 params modify planes_2018: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSD U6 params modify planes_2019: |-
        # Multi-plane Controller

        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.

        # Do This

        -   Create a new `movePlane(name)` function that can move any plane.
        -   Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.

        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSDU4 - Design Mode - 16: Add an event handler for the button using the "Insert
        and show" link in the Design Mode Events tab. (Click to see full instructions).
      CSDU4 - Design Mode - 17: Update the ID names and `console.log` messages to
        match the correct button. (Click to see full instructions.)
      CSDU4 - Design Mode - 18: Fix the layout of the bullseye game. (Click to see
        full instructions)
      CSDU4 - Design Mode - 4: Improve the button by choosing a descriptive and meaningful
        ID. (Click to see full instructions)
      CSDU6 arrays select rainbow: Skriv innholdet i matrisen på skjermen i numerisk
        rekkefølge. (Klikk her for detaljerte instruksjoner)
      CSDU6 arrays select rainbow_2018: Skriv innholdet i matrisen på skjermen i numerisk
        rekkefølge. (Klikk her for detaljerte instruksjoner)
      CSDU6 arrays select rainbow_2019: Skriv innholdet i matrisen på skjermen i numerisk
        rekkefølge. (Klikk her for detaljerte instruksjoner)
      CSDU6 arrays select random: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select random_2018: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select random_2019: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select variable: Write a program that displays a randomly chosen
        color from the array. (Click to see full instructions)
      CSDU6 arrays select variable_2018: Write a program that displays a randomly
        chosen color from the array. (Click to see full instructions)
      CSDU6 arrays select variable_2019: Write a program that displays a randomly
        chosen color from the array. (Click to see full instructions)
      Choose Your Own Adventure: You can do whatever you want in play lab! Here's
        an example of choose your own adventure story in play lab.
      Course 4 Artist 1: 'Help me draw a box. (Each line is 200 pixels long) '
      Course 4 Artist 10: |-
        Klikk her for å se hele instruksjonen på nytt!

        Her er en kode for en interessant form. Hva skjer nå du gjentar det mange ganger, mens du snur for hver kjøring? Legg merke til at snuingen i denne formen kan legges sammen til 420 grader, noe som betyr at når kunstneren din er ferdig med å tegne, vil den se i en annen retning enn når du startet. Denne nye retningen er akkurat 60 grader til høyre fra der du begynte.
      Course 4 Artist 11: Nå til en utfordring! Her kan du prøve og feile. Vi forventer
        ikke at du får det perfekt første gangen. Vil du ha flere hint? Klikk her!
      Course 4 Artist 12: |-
        Want a second peek at the inspiration design or the hints?  Click here!

        Otherwise, make a design all your own!
      Course 4 Artist 13: Still playing?  Here is a blank canvas where you can design
        anything you want!
      Course 4 Artist 2: Kan du repetere denne koden slik at den tegner det nedtonede
        kvadratet?
      Course 4 Artist 20: Still playing?  Here is a blank canvas where you can create
        whatever you want!
      Course 4 Artist 3: Try to figure out what happens if you run this code (or press
        "Run" to test it). Then, repeat it enough times to complete the drawing.
      Course 4 Artist 4: How many degrees are in a circle?  Fill in the repeat block
        with that number to create a circle of colors.
      Course 4 Artist 5: 'Draw the other half of this design so it''s symmetrical.
        The triangles are equilateral and are 50 pixels long. Hint: You may have to
        run the code several times to figure out all of the blocks that need to be
        added.'
      Course 4 Artist 6: Complete the code to draw these three, equilateral triangles.
      Course 4 Artist 7: 'Now nest this loop inside another loop to draw 10 triangles.
        This is called a nested loop. Hint: All 10 triangles complete a 360 degree
        rotation.  '
      Course 4 Artist 8: Draw this sun by looping this whole block of code multiple
        times.
      Course 4 Artist 8a: Remember this shape?  Now we're going to let you build it
        without giving you any blocks to start!
      Course 4 Artist 9: 'Loop this design 10 times and make sure to turn between
        each shape that''s drawn. '
      Course 4 Artist Binary 1: "Here's a function that takes a binary string of 1's
        and 0's and instructs the artist to follow them from left to right, top to
        bottom.  The artist will fill-in the squares when it sees a 1 and ignore the
        square when it sees a 0. \n\nRun this code to see how the artist uses binary
        to draw this pattern."
      Course 4 Artist Binary 2: Which of these binary strings could you loop 8 times
        to draw this image?
      Course 4 Artist Binary 3: Kan du tegne dette mønsteret ved å kjøre en løkke
        over en tresifret binærstreng (0-er og 1-erer)?
      Course 4 Artist Binary 4: Hver binærstreng representerer en rad i dette bildet.
        Kan du ordne strengene slik at de tegner et smile-ansikt i stedet for et trist
        ansikt?
      Course 4 Artist Binary 5: Hvilken 6-siftret binærstreng, repetert 11 ganger,
        vil tegne dette bildet?
      Course 4 Artist Binary 6: Hva er den korteste binærstrengen du kan repetere
        for å tegne dette bildet?
      Course 4 Artist Binary 7: Fullfør tegningen.
      Course 4 Artist Binary Free Play 2: 'Fritt splitt: Her er et lerret med høyere
        oppløsning du kan tegne på - 16 biter ganger 16 biter!'
      Course 4 Artist Binary Free Play 2a: "Her er et lerret å tegne på med høyere
        oppløsning - 16 ganger 16 piskler!\\\r\n\\\r\nSe hva som skjer når vi blir
        kreative med bitene!"
      Course 4 Artist Binary Free Play 2b: Klikk her for å se hint.
      Course 4 Artist Binary pre1: Bruk blokkene under til å la kunstneren tegne "01010101"
        binært i første rad.
      Course 4 Artist For Loops 1: Bruk en gjenta-blokk til å tegne denne trekanten
        som er 50 piksler bred i størrelse.
      Course 4 Artist For Loops 11: 'Husker da vi brukte en variabel til å styre antallet
        sider i en figur? Vi skal gjøre det samme med ''teller''-variabelen nå. Dette
        mønsteret starter med en trekant og legger til en side av gangen inntil det
        tegner et dekagon (10 sider). Hver side skal være 100 piksler lang. '
      Course 4 Artist For Loops 11a: |-
        La oss sette alt sammen! Bruk din kunnskap om "for-løkker" og "teller"-variabler og opprett tegningen hvor hver side har to sider mer enn den forrige. Kontroller at hver side er 10 ganger så lang som antallet sider i polygonet.

        Svært lite av koden har blitt gitt til deg her.
      Course 4 Artist For Loops 14: If you turn a little bit more or less than you
        normally would for a shape, it creates a neat effect. Try using some of the
        code from the last level, but turning 89 degrees to create this twisted square
        spiral.
      Course 4 Artist For Loops 15: 'Free Play: Try making some drawings of your own
        using "for loops". We''ve added a few useful variables for you as well.'
      Course 4 Artist For Loops 2: 'I''ve put the code for drawing a triangle inside
        a for loop that counts from 50 to 100 by 10.  NOTE: Make sure you look at
        the code before you hit "Run".'
      Course 4 Artist For Loops 3: 'Use the last puzzle as a reference to complete
        this one.  The smallest triangle has 20 pixel sides, the largest has 200 pixel
        sides, and each triangle is 20 pixels larger than the last. '
      Course 4 Artist For Loops 4: 'How would you modify what you''ve learned to draw
        these squares? They start at 15 pixels long, the largest is 300 pixels long,
        and each square is 15 pixels larger than the last. '
      Course 4 Artist For Loops 6a: Gjør tre små endringer i koden fra forrige nivå
        for å få til dette!
      Course 4 Artist For Loops 8: |-
        Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?

        Hint:  You need to remove something!
      Course 4 Artist For Loops Challenge: "**Challenge:** Can you figure out how
        to use all of the things you've learned to create this image of polygons,
        all with 40 pixel sides?"
      Course 4 Artist For Loops inspire: |-
        Free-Play Inspiration: You've now learned everything you need to know to make a pattern like this! If this picture inspires you, try to make something similar. Otherwise, create something all your own.

        Need a hint? Click here.
      Course 4 Artist Functions Inspiration: Click here to see the hints again.
      Course 4 Artist Functions challenge: Click here to see the hints again.
      Course 4 Artist Inspire: |-
        Want a second peek at the inspiration design or the hints?  Click here!

        Otherwise, make a design all your own!
      Course 4 Artist Vars 1: "Kan du hjelpe meg å tegne et triangel? \n\nDet er 100
        piksler langt på hver side."
      Course 4 Artist Vars 11: Here’s more complicated code using the same concepts
        from the last puzzle - what should you set the "sides" variable to in order
        to draw this picture made of squares?
      Course 4 Artist Vars 12: Let's set the "sides" variable to 5. The more sides
        we add to this algorithm, the bigger this whole pattern gets! Notice that
        there is another variable called "length". We can now use that wherever we
        have a "move forward." Set the "length" variable to 75 for this shape.
      Course 4 Artist Vars 13: "Når en figur har mange sider må alle sidene være kortere
        hvis du vil at mønsteret skal passe inn på skjermen.\n\nLa oss lage algoritmen
        for dette stilige mønsteret, men bruk en matte-brikke med \"sider\"-variabelen
        inni, i stedet for å manuelt sette \"lengde\"-variabelen. Omkretsen av hvert
        mangekant er 300 piksler. \nTrenger du noen hint? Klikk her."
      Course 4 Artist Vars 14: |-
        Free Play: Check it out! Now your algorithm is nested within one more loop. Experiment with changing the values of your two variables to draw cool patterns.

        For even more effect, try playing with color!  Use random colors inside loops to see how it changes your design.
      Course 4 Artist Vars 2: Instead of using "move forward by 150," the "move" block
        is now referencing a variable called "length." Can you set "length" to 150
        to draw this new triangle?
      Course 4 Artist Vars 4: Now I want to make a rectangle that is twice as tall
        as it is wide. We've got a variable called "width" that needs to be set to
        100. Can you use the math blocks to complete the code?
      Course 4 Artist Vars 6: |-
        Here’s some code that can draw any regular polygon. There’s a new variable called sides that is set to 4. Can you use the sides variable (along with the math block) to turn the right amount regardless of how many sides there are in the polygon?

        Click here to go back to the hint!
      Course 4 Artist Vars 7: |-
        Use what you learned in the last puzzle to create this hexagon using the "sides" variable.

        See how you could change just one value to draw a triangle,  square, pentagon, or octagon?
      Course 4 Artist Vars 8: 'Free Play: Experiment with the number of sides this
        shape has. Can you change the algorithm so that the overall size of the shape
        stays the same, no matter how many sides it has? Hint: If you divide your
        starting length by the number of sides, the length of each side will get shorter
        as the number of sides gets higher.'
      Course 4 Bee 1: "Bien kan ikke se hva som er under skyen! \n\nBruk \"hvis\"-blokken
        for å sjekke om det er en blomst under skyen. \n\nFå nektar en gang,, men
        BARE hvis det er en blomst."
      Course 4 Bee 2: Use the "if/else" block to check each object to see if it's
        a flower or a honeycomb . If it's a flower, collect one nectar...otherwise,
        make one honey!
      Course 4 Bee 3: Det ukjente objektet er enten en blomst eller en bikube. Bruk
        "hvis/ellers"-blokk til å samle inn nekter dersom det er en blomst, hvis ikke
        så lager du honning (fordi det er en bikube).
      Course 4 Bee Loops 5 NEW: Here are three flowers. Can you find the pattern of
        instructions that you need to repeat 3 times to collect the nectar with the
        fewest number of blocks?
      Course 4 Bee Loops 5a NEW: Bruk løkker for å hjelpe bien med å samle all nektaren
        på dens vei til bikuben, med så få blokker som mulig. Ikke glem å lage honning
        når du kommer dit!
      Course 4 Bee Params 1: Write a sequence to collect all of the nectar using `get
        3 nectar` which turns, moves to collect the nectar, and then returns to the
        original location.
      Course 4 Bee Params 2: Modify the "get 3 nectar" function so it makes me turn
        right instead of left to the flowers.
      Course 4 Bee Params 3: 'Now there are flowers on both sides! We''ve added variables
        called "left" and "right" for you to use, and added a parameter called "direction"
        to "get 3 nectar". Edit "get 3 nectar" so that the bee turns the correct direction
        when the variables "left" or "right" are passed into the function.  '
      Course 4 Bee Params 4: Try using your new function to collect nectar from all
        of the flowers. Remember to use the left and right variables.
      Course 4 Bee Params 5: La oss starte fra bunnen av - kan du lage en ny funksjon
        kalt "hent 5 nektar" med et parameter for retning?
      Course 4 Bee Params 6: Ville det ikke vært fint om vi kunne samlet all denne
        nektaren med en enkelt funksjon? Prøv å legge til et nytt parameter til funksjonen
        din, kalt "nektar-mengde" til å kontrollere antall nektar som skal samles
        inn. Du vil antakelig ønske å endre navnet på funksjonen også!
      Course 4 Bee Params 7: Try using your new function to collect all of this nectar.
      Course 4 Bee Params 8: 'Challenge: Now there''s honey to deal with too! Rewrite
        your function to use both the number of honey units and the number of nectar
        units.  How would you use those numbers to decide what you should do?'
      Course 4 EC 1a: Ingen regler. Ingen hint. Bare utfordringen!
      Course 4 EC 1b: Ingen regler. Ingen hint. Bare utfordringen!
      Course 4 EC 2a: Ingen regler. Ingen hint. Bare utfordringen!
      Course 4 EC 2b: Ingen regler. Ingen hint. Bare utfordringen!
      Course 4 EC 2c: Ingen regler. Ingen hint. Bare utfordringen!
      Course 4 Maze 2: Hold deg unna dynamitten!
      Course 4 Maze 3: 'Programmer den sinte fuglen til å komme seg bort til grisen. '
      Course 4 Maze 4: Try the "repeat" block to use fewer blocks when solving this
        puzzle...
      Course 4 Maze 5: Klarer du å løse denne oppgaven ved å bruke så få oppgaver
        som mulig?
      Course 4 Play Lab Params 1: Her er en funksjon kalt "hopp" som får hovedpersonen
        din til å hoppe 100 piksler. Kjør programmet og bruk hopp-funksjonen til å
        samle alle flaggene ved å flytte hunden med piltastene.
      Course 4 Play Lab Params 10: "We've added one last function for you. \n\nUse
        an \"if\" statement to program your game to call the \"level\\_up\" function
        only when \"player\\_score\" becomes greater than a certain number.\n\nFor
        example: \"player\\_score\" > 6\n\nPlay the game, and make it to level 3 to
        move to the next puzzle. "
      Course 4 Play Lab Params 2: "Nå har vi flagg som er alt for høye for vårt nåværende
        hopp! La oss bruke pilene \"opp\" og \"ned\" så vi ha flere hopp-høyder. \n\nVi
        trenger å legge til et parameter kalt \"høyde\" til vår hopp-funksjon. Opp-pila
        skal få hunden til å hoppe 200 piksler og ned-pila skal få den til å kun hoppe
        100 piksler. "
      Course 4 Play Lab Params 3: 'We have added another parameter to the jump function
        so that we can use it with other actors. Each actor is represented by a number,
        starting from one. Edit the "jump" function so that it uses the "actor" parameter
        to make the correct character jump. '
      Course 4 Play Lab Params 4: "Here's a function called `patrol`. \n\nEdit `patrol`
        to move Cat up 400 pixels and then down 400 pixels."
      Course 4 Play Lab Params 5: Edit the the "patrol" function to add an "actor"
        parameter, so that we can call it for each of the actors on the screen. Remember,
        the actors correspond to numbers 1, 2, and 3.
      Course 4 Play Lab Params 6: Add another parameter called "speed" to the "patrol"
        function. Try using a "set speed" block with the new "speed" parameter to
        help Penguin get both flags before the other sprites even get one.
      Course 4 Play Lab Params 7: |-
        La oss ha det gøy! Se på denne koden og se om du kan finne ut hva hver blokk gjør.
        Når du er ferdig, bruk piltastene til å styre Hund og samle alle flaggene.
        MERK: Du trenger ikke gjøre noen endringer i programmet
      Course 4 Play Lab Params 8: Use the `when actor touches` block to send Dog back
        to the top-left ONLY if Dog touches any of the other actors.
      Course 4 Play Lab Params 9: "Her er spillet vårt fra tidligere, men nå er mesteparten
        av koden gjemt. Det finnes en ny funksjon, \"score\\_poeng\".\n\nEndre funksjonen
        slik at \"poeng\"-parameteret blir lagt til \"spiller\\_score\"-variabelen.
        \n\nVariabelen \"spiller\\_score\" skal øke hver gang Hund kommer borti Katt
        med hjerter og minske hver gang Katt tar borti Hund med hjerter.\n\nMerk:
        Når du er ferdig, trykk på \"Kjør\" for å spille. Når Hund scorer 6 poeng
        kan du gå videre til neste oppgave. "
      Course 4 Play Lab Vars 1: This time you don't have to write any code, just hit
        "Run" to play the game! In this game, you're the dog who is trying to collect
        more flags than the cat. Use the down arrow to control the dog. Press "Finish"
        when you're done playing.
      Course 4 Play Lab Vars 2: The race in that last puzzle wasn't very fair! Change
        the `dog_speed` variable to make sure you can collect more flags than Cat.
        The first to collect 10 flags wins!
      Course 4 Play Lab Vars 3: Her er et nytt type spill! Bruk venstre- og høyre-pilene
        til å bevege deg og opp-pila til å hoppe. Se om du kan samle alle flaggene.
      Course 4 Play Lab Vars 4: Now we're using a variable called "height" to control
        how high the dog can jump. Update the "height" variable so that the dog can
        jump high enough to reach all the flags.
      Course 4 Play Lab Vars 5: 'Let''s build a game! First we''ll need a score. Rebuild
        the code that you saw in the last level to set the score to 10. '
      Course 4 Play Lab Vars 6: |-
        Bruk høyre piltast til å kaste pai.

        I vårt spill, hvordan skal vi score poeng? Legg til 1 til din "poeng"-variabel hver gang Hund treffer Katt med en pai. Bruk "når figur 2 berører noe"-hendelsen til å utølse en oppdatering av poeng-scoren din. Du kan øke variabelen ved å sette "poeng = poeng + 1". Få din poeng-score opp til 10 (ved å gå opp 1 poeng av gangen!) for å bestå nivå.
      Course 4 Play Lab Vars 7: Flott! La oss gjøre spillet litt vanskeligere å spille.
        Hver gang Hund (figur 1) blir truffet av en sandwich fra Katt (spiller 2)
        skal du miste ett poeng. Start med 10 poeng slik at det ikke er for vanskelig.
        For å fullføre nivået må poeng-scoren falle fra 10 til 0.
      Course 4 Play Lab Vars 9: "Free Play time! Here are all of the variables we've
        played with so far in this stage, as well as a few more in case you want them.
        \n\nNotice that there are now so many blocks in our toolbox that they need
        to be organized!  Here, we've put each piece into an appropriate category.
        \ Take some time to explore everything that is available. When you're done
        browsing, make a game or story using repeats, variables, and events.  \n\nHint:
        scroll down to see all the commands in the workspace."
      Course 4 Play Labs For Loops 1: Let's make the dog speak every number from 1
        to 100. Use a `for` loop and the counter block to speak the counter variable
        each time the loop is run.
      Course 4 Play Labs For Loops 2: Denne gangen skal du hjelpe katten Olive telle
        oddetallene mellom 1 og 101.
      Course 4 Play Labs For Loops 3: Hvis vi teller med enda større tall, teller
        vi enda høyere på samme tid. Prøv å få hunden til å telle fra 10 til 1000,
        med 10 av gangen.
      Course 4 Playlab For Loop Freeplay: 'Frilek: Bruk alt du har lært så langt til
        å lage et spill som inkludere en "for"-løkke!'
      Course 4 Playlab For Loops 4b: Kan du endre **økningen** i en av løkkene, sånn
        at løpet blir uavgjort?
      Course 4 Playlab For Loops 5b: Adjust the interval on these `for` loops so that
        the two characters end in the exact same place.
      Course 4 Playlab For Loops 6b: "Endre denne \"for\"-løkka for å lage et spill
        som er morsomt å spille!\nKlikk \"Kjør\" og klikk Madame Unicorn så mange
        ganger du kan. Kan du slå scoren vår på 24? "
      Course 4 SCF 1: Use the suggested functions to draw four rows of hexagons. Notice
        how our even numbered rows are shifted to the right?
      Course 4 SCF 1a: Can you figure out how to collect all of this nectar with the
        fewest blocks possible?
      Course 4 SCF 1b: Can you figure out how to collect all of this honey with the
        fewest blocks possible?
      Course 4 SCF 2: 'Use what you learned in the previous level to draw an image
        like this. Note: The code becomes more simple if you incorporate parameters. '
      Course 4 SCF 3: 'Use what you learned in the previous level to draw an image
        like this. Note: The code becomes more simple if you incorporate parameters. '
      Course 4 SCFL 1: Løs denne oppgaven med færrest mulig brikker.
      Course 4 SCFL 1a: Kan du få Scrat bort til eikenøtta si ved å bruke så få blokker
        som mulig?
      Course 4 SCFL 1b: Kan du få Scrat bort til eikenøtta si ved å bruke så få blokker
        som mulig?
      Course 4 SCFL 2: Løs denne oppgaven med færrest mulig brikker.
      Course 4 SCFL 3: Finner du ut hvordan du kan gjenskape denne tegningen?
      Course 4 SCFL 4: Finner du ut hvordan du kan gjenskape denne tegningen?
      Course 4 SCFL 6: Kan du finne ut hvordan du kan lage denne tegningen med en
        enkelt løkke?
      Course 4 SCFL 7: The artist wants to catch some waves! Can you figure out how
        to re-create this drawing?
      Course 4 SCV 1: Klikk her for å se instruksjonene en gang til.
      Course 4 SCV 2: Klikk her for å se instruksjonene en gang til.
      Course 4 SCV 3: |-
        Nå skal vi spille spillet "har'n" (også kjent som Sisten)! Tar du på Katt får du 2 poeng. Tar du på Pingvin får du 3 poeng. For å vinne må du få 10 poeng tilsammen!
        Men vær forsiktig, når Katt og Pingvin er nær hverandre tar de poeng fra deg.

        Legg til blokkene som er nødvendig for å få dette spillet til å fungere slik som forklart. Hvordan kan du få Hund til å kunne flytte seg i alle retninger ved bruk av piltastene? Hvordan skal du legge til poeng når Hund er nær Katt eller Pingvin? Hvordan skal du trekke fra poeng når Katt og Pingvin er nær hverandre?
      Course 4 SCV 4: Løs denne oppgaven med færrest mulig brikker.
      Course 4 SCV 5: Løs denne oppgaven med færrest mulig brikker.
      Course 4 SCV 6: Klikk her for å se instruksjonene en gang til.
      CourseD_Dance_Party_01: Drag the `make a new` block into the workspace, and
        connect it inside the `setup` block.
      CourseD_Dance_Party_02: Make the moose start a new move after 4 measures!
      CourseD_Dance_Party_03: Now make the dancer start a new move after 6 measures!
      CourseD_Dance_Party_04: Add a background effect to your program.
      CourseD_Dance_Party_05: Bruk en annen ny blokk for å få danseren til å bytte
        bevegelse hver 2. takt.
      CourseD_Dance_Party_06: Create a backup dancer called `backup_dancer1` to dance
        with the cat.
      CourseD_Dance_Party_08: Can you make both backup dancers the same size?
      CourseD_Dance_Party_09: Use the `set tint` block to change the color of a dancer.
      CourseD_Dance_Party_10: Make the other dancer respond to the music using the
        `begins following` block, too.
      CourseD_Dance_Party_11: The `when up pressed` block lets you run code when the
        up arrow is pressed. Try to make the dancer do a quick move when you press
        up.
      CourseD_Dance_Party_11_5: Use the "all ducks" blocks to make the ducks dance
        together.
      CourseD_Dance_Party_11b: Make the Robot "drop" once when you press the right
        arrow key, and "clap" once when you press the up arrow key. Do the drop-clap
        as fast as you can!
      CourseD_Dance_Party_12: Ta på deg danseskoene! Lag din egen dans og del den
        med vennene dine.
      CourseE_HOC 2018 Level_1: Collect a boat from the chest.
      CourseE_HOC 2018 Level_10: Get to the entrance of this Ocean Monument.
      CourseE_HOC 2018 Level_11: Build a conduit with Prismarine inside the Ocean
        Monument.
      CourseE_HOC 2018 Level_2: Head to the end of the dock.
      CourseE_HOC 2018 Level_3: Head across the open seas to the cod.
      CourseE_HOC 2018 Level_4: Use a loop to get to the dolphin.
      CourseE_HOC 2018 Level_5: Explore the shipwreck to reach the chest.
      CourseE_HOC 2018 Level_6: Navigate through the ice to reach the salmon.
      CourseE_HOC 2018 Level_7a: Search these underwater ruins for a chest.
      CourseE_HOC 2018 Level_9b: Use the coral as waypoints to reach the treasure.
      Crack Random Substitution: Instruksjoner
      Crack a Caesar Cipher: Instruksjoner
      Dance Party 1-validated: 'What do you think will happen when you click on the
        alien?  '
      Dance Party 2: Change the behavior inside the `___ begins ___` block to make
        the alien start spinning around.
      Dance Party 2_2019: Replace the behavior block in the `sprite begins` block
        to a different one that will make the alien start spinning!
      Dance Party 3: 'Create a new sprite called `alien2`, then make it do a different
        dance move when it''s clicked.  '
      Dance Party 3_2019: 'Create a new sprite that looks like a pink alien, then
        make it do a any move when it''s clicked.  '
      Dance Party 4: 'Create a third sprite called `alien3` and get all of your aliens
        to stand in a line. '
      Dance Party 4_2019: Create a third sprite that looks like a yellow alien, make
        it do a dance when clicked, and set all of your aliens to stand in a horizontal
        line.
      Dance Party 5: Add code to change the color of each alien when it gets clicked.
      Dance Party 5_2019: Create a single keypress event using the keypress event
        block. For this event, make it so that when a key is pressed, each of your
        aliens changes color!
      Dance Party 6: Use the `stops everything` block to make each alien stop moving
        when it is clicked.
      Dance Party 6_2019: Add a sprite that looks like a bell, then add an event that
        makes each alien stop dancing when it is clicked.
      Dance Party 7: Add a new bell sprite called `myBell` that makes all the aliens
        start doing the same dance move when it's clicked.
      Dance Party 7_2019: Make the blue alien begin a new dance when the pink alien
        touches it. Use the `when touches` event.
      Dance Party Freeplay: Now create your own alien disco!
      Dance Party Freeplay_2019: Now create your own alien disco!
      Dance Party Predict: 'What do you think will happen when you click on the alien?  '
      Dance Party Predict_2019: 'What do you think will happen when you click on the
        alien?  '
      Dance_2019_01: 'Dra <xml><block type="Dancelab_makeAnonymousDanceSprite" block-text="make
        a new dancer"><title name="COSTUME" config="&quot;CAT&quot;, &quot;PINEAPPLE&quot;">"CAT"</title><title
        name="LOCATION">{x: 200, y: 200}</title></block></xml>-blokken inn på arbeidsområdet,
        og koble den inni <xml><block type="Dancelab_whenSetup2" next_connection_disabled="true"
        block-text="setup"></block></xml>-blokken.'
      Dance_2019_02: Få katten til å bevege seg når du trykker på en tast.
      Dance_2019_03: 'Det er klart for dansekonkurranse! Programmer hver danser til
        å bevege seg når du bruker ulike taster. Velg din favorittbevegelse for hver
        danser og sett den til "(Tilfeldig)" for noe helt uforutsett! '
      Dance_2019_04: Få danseren din til å starte en ny bevegekse etter den fjerde
        takten.
      Dance_2019_05: Now make the dancer start a new move after 6 measures!
      Dance_2019_06: Sett sammen en gruppe med bakgrunnsdansere rundt danseren i midten.
      Dance_2019_07: Endre størrelsen på gruppen med bakgrunnsdansere.
      Dance_2019_08: Prøv å endre fargetone på minst en av danserne dine (eller hele
        gruppen)!
      Dance_2019_09: Vær kreativ med de nye blokkene!
      Dance_2019_10: Ta på deg danseskoene! Lag din egen dans og del den med vennene
        dine.
      Dance_Party_01: Drag the `make a new` block into the workspace, and connect
        it inside the `setup` block.
      Dance_Party_02: Make the moose start a new move after 4 measures!
      Dance_Party_03: Now make the dancer start a new move after 6 measures!
      Dance_Party_04: Add a background effect to your program.
      Dance_Party_05: Bruk en annen ny blokk for å få danseren til å bytte bevegelse
        hver 2. takt.
      Dance_Party_06: Create a backup dancer called `backup_dancer1` to dance with
        the cat.
      Dance_Party_08: Can you make both backup dancers the same size?
      Dance_Party_09: Use the `set tint` block to change the color of a dancer.
      Dance_Party_10: Make the other dancer respond to the music using the `begins
        following` block, too.
      Dance_Party_11: The `when up pressed` block lets you run code when the up arrow
        is pressed. Try to make the dancer do a quick move when you press up.
      Dance_Party_11_5: Use the "all ducks" blocks to make the ducks dance together.
      Dance_Party_11b: Make the Robot "drop" once when you press the right arrow key,
        and "clap" once when you press the up arrow key. Do the drop-clap as fast
        as you can!
      Dance_Party_12: Ta på deg danseskoene! Lag din egen dans og del den med vennene
        dine.
      Dance_Party_extras_alternate_2019: Frem og Tilbake (Klikk "Mer" for detaljer)
      Dance_Party_extras_battle: Dansegruppe (Klikk «Mer» for informasjon)
      Dance_Party_extras_battle_2019: Dansegruppe (Klikk «Mer» for informasjon)
      Dance_Party_extras_every_beat: Fjerdedelsnoter (Klikk «Mer» for informasojo)
      Dance_Party_extras_every_beat_2019: Fjerdedelsnoter (Klikk «Mer» for informasojo)
      Dance_Party_extras_layout: La oss komme i formasjon! (Klikk «Mer» for detaljer)
      Dance_Party_extras_layout_2019: La oss komme i formasjon! (Klikk «Mer» for detaljer)
      Dance_Party_extras_mixed_2019: Flere Knapper (Klikk "Mer" for detaljer)
      Dance_Party_extras_on_beat: Bass, Mellomtone og Diskant (Klikk «Mer» informasjon)
      Dance_Party_extras_on_beat_2019: Bass, Mellomtone og Diskant (Klikk «Mer» informasjon)
      Dance_Party_extras_speed: Raskere, saktere (Klikk «Mer» for informasjon)
      Dance_Party_extras_speed_2019: Raskere, saktere (Klikk «Mer» for informasjon)
      Dance_Party_extras_visible: Hvor ble det av dem? (Klikk «Mer» for informasjon)
      Dance_Party_extras_visible_2019: Hvor ble det av dem? (Klikk «Mer» for informasjon)
      Find the Wizard: Bygg hva enn du vil. Dette er et eksempel på et siffergjettingsspill!
      Fish Tank 2-validated: Change Dusty (the tumbleweed) to a fish.
      Fish Tank 2-validated_2019: Change the tumbleweed into any kind of fish!
      Fish Tank 3-validated: Change the fish's behavior so that it swims around the
        tank.
      Fish Tank 3-validated_2019: Change the fish's behavior so that it swims left
        and right.
      Fish Tank 4-validated: Use the `set background color` block to make the background
        blue.
      Fish Tank 4-validated_2019: Use the `set background color` block to make the
        background any color.
      Fish Tank 5-validated: Our fish is getting a little lonely. Add another sprite
        to the fish tank.
      Fish Tank 5-validated_2019: The fish is adventurous and wants to meet new creatures
        in the sea. Add another sprite to the fish tank. This sprite can have any
        costume other than the one you use for your fish!
      Fish Tank 6-validated: Add a behavior to the fish's new friend.
      Fish Tank 6-validated_2019: Add a behavior to the fish's new friend.
      Fish Tank 7-validated: Use some new blocks from the toolbox to make your fish
        tank special!
      Fish Tank 7-validated_2019: Use some new blocks from the toolbox to make your
        fish tank special!
      FoodFight: Dette er et eksempel på hva du kan lage i laben.
      Frequency Analysis: Test
      Function intro Ryan: Bruk funksjonen `build bridge` to ganger for å lage en
        vei til redstonefakkelen.
      Function intro Ryan_2019: Bruk funksjonen `build bridge` to ganger for å lage
        en vei til redstonefakkelen.
      Geometric Sun: 'Project Idea: Create a pattern using geometric ideas like shapes.
        This requires persistence and planning!'
      Geometric Sun_2018: 'Project Idea: Create a pattern using geometric ideas like
        shapes. This requires persistence and planning!'
      Guess The Number: Bygg hva enn du vil. Dette er et eksempel på et siffergjettingsspill!
      HOC 2018 Level_1: Collect a boat from the chest.
      HOC 2018 Level_10: Get to the entrance of this Ocean Monument.
      HOC 2018 Level_11: Build a conduit with Prismarine inside the Ocean Monument.
      HOC 2018 Level_12: Design ditt eget undervannsmiljø, det er opp til deg!
      HOC 2018 Level_2: Head to the end of the dock.
      HOC 2018 Level_3: Head across the open seas to the cod.
      HOC 2018 Level_4: Use a loop to get to the dolphin.
      HOC 2018 Level_5: Explore the shipwreck to reach the chest.
      HOC 2018 Level_6: Navigate through the ice to reach the salmon.
      HOC 2018 Level_7a: Search these underwater ruins for a chest.
      HOC 2018 Level_9b: Use the coral as waypoints to reach the treasure.
      Infinity_catch: Kan du få Elsa ("skuespiller 2") til å ta igjen med Anna ved
        å bruke piltastene?
      Infinity_finale: Lag det du har lyst til og del det med andre!
      Infinity_move_collide: Hiro er "figur 1". Flytt han direkte til Baymax og spill
        en lyd når de berører hverandre.
      Infinity_move_directions: Baymax er "figur 2". Bruk flytt-blokker for å styre
        Baymax med pilene. Få han til å berøre de to andre figurene.
      Infinity_move_right: Hiro er "figur 1". Bruk "Flytt"-blokken til å flytte Hiro
        mot høyre for å berøre Baymax.
      Infinity_repeat: Bruk "Gjenta alltid"-blokken til å få Anna til å bevege seg
        opp og ned 400 pixler.
      Infinity_say: Få Anna til å si "Hei der." ved å bruke Si-brikken.
      Infinity_shoot: Baymax er "figur 2". Få Baymax til å skyte en rakett mot Hiro.
      Infinity_shoot_directions: Hiro er "skuespiller 3". Få Hiro til å kaste et prosjektil
        mot hver av de fire andre figurene. Vent et sekund mellom hvert kast.
      Infinity_touch_score: Få anna til å score poeng når hun tar på snøfnugg. Deretter
        trykk på "Kjør" og styr henne for å ta på hvert snøfnugg en gang.
      InspirationalArtwork: Hvis dette bildet inspirerer deg kan du prøve å lage noe
        lignende. Ellers kan du prøve å lage noe helt selv.
      InspirationalArtwork_2018: Hvis dette bildet inspirerer deg kan du prøve å lage
        noe lignende. Ellers kan du prøve å lage noe helt selv.
      K-1 Artist Loops 1: Tegn denne linja ved å flytte øst fire ganger.
      K-1 Artist Loops 2: Kan du tegne samme linje ved å bruke en løkke?
      K-1 Artist Loops 3: Kan du bruke en løkke for å gå igjennom disse brikkene for
        å tegne 6 linjer?
      K-1 Artist Loops 4: Kan en løkke hjelpe oss med å tegne toppen av dette slottet?
      K-1 Artist Loops 5: Hva kan du gjenta 4 ganger for å tegne disse trappene?
      K-1 Artist Loops 6: 'This one needs two loops: one to go up the stairs and one
        to go down.'
      K-1 Artist Loops 7: Løkker kan hjelpe deg med å gjøre ferdig dette mønsteret.
      K-1 Artist Loops 8: Denne trappen har lengre trinn.
      K-1 Artist Loops 9: Hva er enkleste måten å tegne disse trappene?
      K-1 Artist Loops Free Play: Fritt spill! Tegn noe gøy!
      K-1 Artist1 1: Tegn foten på mannen med en linje
      K-1 Artist1 10: Draw and Jump to make the dashed path to the treasure X
      K-1 Artist1 2: Tegn værhår på katten med to linjer!
      K-1 Artist1 3: Draw two lines east and two lines north to finish the house!
      K-1 Artist1 4: Tegn linjer oppover, over og ned for å fullføre slottet!
      K-1 Artist1 5: Tegn stilken på denne blomsten med to linjer!
      K-1 Artist1 6: Fullfør bildet ved å bruke en hopp-brikke!
      K-1 Artist1 9: Tegn og Hopp for å lage den stiplede linjen
      K-1 Artist2 1: Tegn en firkant under trekanten.
      K-1 Artist2 2: Hopp og tegn en firkant ved siden av huset.
      K-1 Artist2 3: Tegn en firkant over den andre firkanten
      K-1 Artist2 4: Tegn et rektangel for å fullføre broen.
      K-1 Artist2 5: Tegn en firkant for å fullføre bro-støttene
      K-1 Artist2 6: Tegn to firkanter for å lage et rektangel!
      K-1 Artist2 Assessment1: 'Oppgave: Tegn en firkant ved siden av den andre firkanten.'
      K-1 Artist2 Free Draw: Tegn hva som helst!
      K-1 Artist2_7: Tegn en firkant for å gi kommoden en skuff øverst!
      K-1 Bee 1: Move me to the flower, get the nectar, then move me to the honeycomb,
        and make honey
      K-1 Bee 11: Hent tre nektar og lage en honning
      K-1 Bee 13: Hent tre nektar og lag en honning!
      K-1 Bee 14: Flytt meg til nektaren, plukk den opp, flytt meg til honningen og
        lag honning
      K-1 Bee 15: Hent to nektar for å lage to honning!
      K-1 Bee 2: Move me to the flower, get the nectar, then move me to the honeycomb,
        and make honey
      K-1 Bee 3: Move me to the flower, get the nectar, then move me to the honeycomb,
        and make honey
      K-1 Bee 4: Hent to nektar og lag to honning!
      K-1 Bee 5: Hent tre nektar og lag tre honning!
      K-1 Bee 6: Hent to nektar og lag to honning!
      K-1 Bee 7: Hent tre nektar og lag to honning!
      K-1 Bee 9: Hent to nektar og lag to honning!
      K-1 Bee Loops 1: Hent nektaren for å lage honning!
      K-1 Bee Loops 10: Få tak i all nektaren og lag all honningen.
      K-1 Bee Loops 11: Få tak i all nektaren og honning!
      K-1 Bee Loops 12: Få tak i all nektar og all honning.
      K-1 Bee Loops 2: Use a `repeat` loop to move and then get the nectar and make
        honey!
      K-1 Bee Loops 3: Use three `repeat` loops to get the nectar and make honey!
      K-1 Bee Loops 4: Use `repeat` loops to get the nectar, make honey, and to move!
      K-1 Bee Loops 5: Bruk løkker til å hente nektar og honning!
      K-1 Bee Loops 6: Use a `repeat` loop to get the nectar, get honey, and to move!
      K-1 Bee Loops 7: Hent nektar og lag honning!
      K-1 Bee Loops 8: Hent nektar og lag honning!
      K-1 Bee Loops 9: Få tak i all nektaren og lag all honningen.
      K-1 Bee Puzzle 12: Hent tre nektar og lag to honning
      K-1 Building a Foundation Assessment: Build a three level pyramid, there are
        no other directions, so just play with the pieces until you get it!
      K-1 Maze 10: 'Gå rundt boksene med TNT for å få meg bort til grisen! '
      K-1 Maze 11: 'Trace the path and lead me to the silly pig. Avoid TNT or the
        feathers will fly! Hint: He''s South of me.'
      K-1 Maze 2: Flytt meg østover for å få meg til grisen!
      K-1 Maze 3: Flytt meg sørover for å få meg til grisen!
      K-1 Maze 4: Flytt meg nordover for å få meg til grisen!
      K-1 Maze 5: Flytt meg østover for å få meg til grisen!
      K-1 Maze 6: Flytt meg først en vei og så en annen vei for å få meg bort til
        grisen!
      K-1 Maze 7: Flytt meg først en vei og så en annen vei for å få meg bort til
        grisen!
      K-1 Maze 8: Flytt meg først en vei og så en annen vei for å få meg bort til
        grisen!
      K-1 Maze 9: Flytt meg først en vei og så en annen vei for å få meg bort til
        grisen!
      K-1 Maze Loops 1: Få meg til grisen!
      K-1 Maze Loops 10: Få meg bort til grisen! Bruker du gjenta-løkken, blir det
        lettere.
      K-1 Maze Loops 11: |-
        Get me to the pig!\
        The `repeat` loop will make this easier.
      K-1 Maze Loops 12: Få meg bort til grisen! Bruker du gjenta-løkken, blir det
        lettere.
      K-1 Maze Loops 2: Bruk Gjenta-brikken for å få meg bort til grisen!
      K-1 Maze Loops 3: Få meg bort til grisen! Bruk gjenta-løkken.
      K-1 Maze Loops 5: Få meg bort til grisen! Bruk gjenta-løkken.
      K-1 Maze Loops 6: Få meg bort til grisen! Bruk gjenta-løkken.
      K-1 Maze Loops 7: Få meg bort til grisen! Bruk gjenta-løkken.
      K-1 Maze Loops 8: Use `repeat` loops to get me to the pig.
      K-1 Maze Loops Assessment 1: Se alt vi har lært! Bruk 'gjenta'-løkke til å få
        meg bort til grisen!
      K-1 Maze Loops Assessment 2: Bruk 'gjenta'-løkker for å få meg bort til grisen!
      K-1 Maze Sequence Assessment 1: "Få se hva du har lært! \nFlytt meg først en
        vei og så en annen vei for å få meg bort til grisen."
      K-1 Maze Sequence Assessment 2: Flytt meg først en vei og så en annen vei for
        å få meg bort til grisen.
      K-1 artist 1 level 10: Draw the dashed line by using both the jump and draw
        blocks
      K-1 artist 1 level 9: Tegn dette ved å bruke tre linjer
      K-1 maze debug 1: Endre denne koden for å få meg bort til grisen!
      K-1 maze debug 10: Feilsøk dette nivået ved å flytte rundt på brikkene og å
        få meg til grisen!
      K-1 maze debug 11: |-
        Dette er en test!
        Rett opp feil i dette nivåret ved å endre rekkefølgen og blokker, slik at jeg kommer meg bort til grisen
      K-1 maze debug 2: Figure out what is missing and then add blocks to get me to
        the pig!
      K-1 maze debug 3: Something is not quite right. REMOVE blocks to get me to the
        pig!
      K-1 maze debug 4: Run through these blocks and fix them! I think I might be
        going in the wrong direction.
      K-1 maze debug 5: Feilsøk dette nivået ved å flytte rundt på brikkene og å få
        meg til grisen!
      K-1 maze debug 6: Feilsøk dette nivået ved å flytte rundt på brikkene og å få
        meg til grisen!
      K-1 maze debug 7: Feilsøk dette nivået ved å flytte rundt på brikkene og å få
        meg til grisen!
      K-1 maze debug 8: Feilsøk denne nivået ved å flytte rundt på brikkene og å legge
        til blokker, slik at jeg kommer meg bort til grisen!
      K-1 maze debug 9: Feilsøk dette nivået ved å flytte rundt på brikkene og å få
        meg til grisen!
      MC HOC 2016 Level 10: Det er på tide å lage ditt eget Minecraft! Sett ut vesener
        og få dem til å gjøre hva du enn vil! Ha det gøy!
      MC HOC 2016 Level 2-2: Kyllingen er frosset. Plasser "gå" og "snu" blokker i
        "når satt ut"-sporet for å få den til å bevege seg.
      MC HOC 2016 Level 3: "Flott, kyllingen flyttet! Men så stoppet hun.\nI spill
        kan kyllinger gå for alltid. Bruk en \"for alltid gjør\"-løkke for å få disse
        kyllingene til å fortsette å gå. \\\r"
      MC HOC 2016 Level 4: Nå ser kyllingene rare ut siden de flytter seg på samme
        måte. Spill bruker tilfeldige trekk for å gjøre at ting ser ekte ut. Få kyllingene
        til å "snu tilfeldig".
      MC HOC 2016 Level 5: Disse kuene har gått seg vill! Led dem til gresset ved
        å bruke "gå et skritt mot" blokken i en "for alltid gjør"- løkke.
      MC HOC 2016 Level 6: Nå lager du zombiene. Bruk "sett ut"-blokken for å lage
        3 zombier når det blir natt. Få dem til å flytte seg mot deg. Overlev til
        i morgenen.
      MC HOC 2016 Level 8: Veien til sauen din er blokkert av en steinvegg. Heldigvis
        er det en creeper her. Creepere eksploderer etter at du tar på dem. Få creeperen
        til å sprenge veggen så du kan komme deg bort til sauen din!
      MC HOC 2016 New Drop: I Minecraft slipper sauen ull. Plasser "slipp" blokken
        i "når brukt', gå deretter bort til og bruk sauene for å slippe et element.
      MC HOC 2016 New Spawn: Du kan nå fylle verden med hva du vil! Plasser 'sett
        ut' blokker under 'når kjører' for å opprette ting når spillet starter.
      MC HOC 2016 New Walk: La oss utforske vår verden! Flytt med pilene, og trykk
        på mellomromstasten eller trykk på spillebrettet for å bruke elementer. Bruk
        døren for å gå inn i huset.
      MC HOC 2016 SCORE LEVEL: I noen spill har du en poengsum. Spill "sisten" med
        disse jerngolemene og bruk 'legg til 1 til poengsum'-blokka for å gi deg selv
        et poeng når du tar dem. Få fem poeng for å vinne!
      MC HOC 2016 Village Test: "Å nei! Zombier har fanget deg inne! \nKode Jern Golem
        til å jage og angripe zombier!"
      MC_HOC_2017_01_RETRY: 'Få agenten til trykkplaten, deretter klikk "kjør" og
        bruk piltastene for å bevege spilleren ut av huset for å komme til kisten. '
      MC_HOC_2017_01_RETRY_2019: 'Få agenten til trykkplaten, deretter klikk "kjør"
        og bruk piltastene for å bevege spilleren ut av huset for å komme til kisten. '
      MC_HOC_2017_02_Cole: 'Beveg agenten til trykkplaten slik at {currentPlayerName}
        kan komme til kartet. '
      MC_HOC_2017_02_Cole_2019: 'Beveg agenten til trykkplaten slik at {currentPlayerName}
        kan komme til kartet. '
      MC_HOC_2017_03_Cole: 'Programmer agenten til å åpne porten. '
      MC_HOC_2017_03_Cole_2019: 'Programmer agenten til å åpne porten. '
      MC_HOC_2017_04POINT5_RYAN: Få agenten til trykkplaten.
      MC_HOC_2017_04POINT5_RYAN_2019: Få agenten til trykkplaten.
      MC_HOC_2017_04_Cole: Få agenten til trykkplaten.
      MC_HOC_2017_04_Cole_2019: Få agenten til trykkplaten.
      MC_HOC_2017_05_Cole: Få spilleren bort til spaden.
      MC_HOC_2017_05_Cole_2019: Få spilleren bort til spaden.
      MC_HOC_2017_06_Cole: Fiks denne koden slik at agenten bygger en bro over elva.
      MC_HOC_2017_06_Cole_2019: Fiks denne koden slik at agenten bygger en bro over
        elva.
      MC_HOC_2017_07_Cole: Ødelegg isen og få {currentPlayerName} til Minecarten.
      MC_HOC_2017_07_Cole_2019: Ødelegg isen og få {currentPlayerName} til Minecarten.
      MC_HOC_2017_10_RETRY: Bruk funksjoner til å fullføre sporet til denne minecarten.
      MC_HOC_2017_10_RETRY_2019: Bruk funksjoner til å fullføre sporet til denne minecarten.
      MC_HOC_2017_Ali: Bruk funksjoner til å komme deg over lavaen.
      MC_HOC_2017_Ali_2019: Bruk funksjoner til å komme deg over lavaen.
      MC_HOC_2017_FP20x20: "**Fritt spill:** Utforsk på egenhånd!"
      MC_HOC_2017_FP20x20_2019: "**Fritt spill:** Utforsk på egenhånd!"
      NEW Course 4 Artist Functions 1: Can you draw a square that is 100 pixels in
        length, using a repeat loop?
      NEW Course 4 Artist Functions 11: Nå vil vi lage en ny funksjon, kalt "tegn
        en linje av kvadrat" som tegner seks firkanter som alle sammen er på samme
        rad. Kan du bygge denne funksjonen ved å bruke "tegn et kvadrat 20"-funksjonen
        som vi har laget?
      NEW Course 4 Artist Functions 12: Use the `draw a line of squares` function
        from the last puzzle to draw this pattern.
      NEW Course 4 Artist Functions 13: 'Kan du tegne en stjerne ved å bruke "tegn
        en linje av kvadrat"-funksjonen?  '
      NEW Course 4 Artist Functions 14: 'Tid for fritt spill! '
      NEW Course 4 Artist Functions 2: Can you draw 3 squares 20 pixels apart from
        one another? Each square is 100 pixels in size.
      NEW Course 4 Artist Functions 3: "Here is a new type of Block. It is called
        a `function` block. Click \"edit\" then fill it with the code for drawing
        a square with 100 pixel sides. \n\nWhen you're done editing the function,
        click \"Close\" to go back to your program."
      NEW Course 4 Artist Functions 4: Bruk "tegn et kvadrat"-funksjonen for å tegne
        dette mønsteret.
      NEW Course 4 Artist Functions 7: 'Begynner du å få taket på hvordan du bruker
        funksjonsblokker? La oss endre dette kvadratet slik at den er 200 piksler
        i størrelse. Klikk på "rediger" for å endre "tegn et kvadrat"-funksjonen.
        Husk å klikke på "Lukk" for å komme deg ut av vinduet. '
      NEW Course 4 Artist Functions 8: We have created a new function for you called
        "draw a triangle".  Can you edit the function definition to draw a triangle
        with 100 pixel sides?
      NEW Course 4 Artist Functions 9: Can you solve this by adding only one block?
      NEW Course 4 Artist Params 1: Let's define this function to draw a square with
        50 pixel sides. Click "edit" to get started.
      NEW Course 4 Artist Params 10: 'Lag en "tegn en sekskant"-funksjon blokk med
        en lengde-parameter. Denne sekskanten har sider som er 100 piksler lange. '
      NEW Course 4 Artist Params 11: Can you figure out how to draw this shape? Edit
        the function to use the "sides" parameter.
      NEW Course 4 Artist Params 12: Can you complete this drawing? The sides of all
        the shapes are 100 pixels long.
      NEW Course 4 Artist Params 12a: Dette bildet er likt det forrige. Kan du bruke
        en "for-løkke" med din funksjon til å lage dette designet?
      NEW Course 4 Artist Params 13: La oss redigere funksjonen "tegne et polygon".
        Den har allerede en "lengde"-parameter. La oss legge til en "sider"-parameter.
        Omkretsen av hver figur er 200 piksler lang. Husker du ligningen for å lage
        figurer av samme størrelse når de har et annet ulikt antall sider?
      NEW Course 4 Artist Params 14: Edit "draw a spiral edge" to use "length" and
        "sides" parameters, then recreate these shapes.
      NEW Course 4 Artist Params 15: 'Freeplay: Here are the functions you''ve written,
        and some more for you to play with. Draw something awesome! Play with the
        pen width to see how different your drawings look!'
      NEW Course 4 Artist Params 2: Create a `draw triangle` function from scratch
        that makes a triangle with  50 pixel sides.
      NEW Course 4 Artist Params 3: Now let's use the function to draw 5 triangles
        in a row. Each triangle is 30 pixels apart.
      NEW Course 4 Artist Params 4: Do you notice anything different about these function
        blocks? Click “Run” to see what happens.
      NEW Course 4 Artist Params 5: 'Replace the `???` in the `length` parameter input
        block. The pentagon has 100 pixel sides. '
      NEW Course 4 Artist Params 6: Fill in the "length" parameter to draw these shapes
        by replacing the "???" with the right numbers. The square and triangle have
        100 pixels sides while each side of the hexagon is 75 pixels long.
      NEW Course 4 Artist Params 7: Kan du fullføre denne tegningen? Sidene av hver
        trekant er 25 piksler lengre enn den forrige. Den første trekanten har sider
        som er 25 piksler lange.
      NEW Course 4 Artist Params 8: The code for this triangle function is broken.
        Can you edit the function to fix it, and then make triangles of length 25,
        50, and 75?
      NEW Course 4 Artist Params 9: Klikk "Rediger" for å fylle ut funksjonen til
        "tegn en firkant" og legg til en parameter. Det vil kreve en lengdeparameter,
        akkurat som i trekanten. Tegn nå 3 kvadrat med 25, 50 og 75 piksler i lengde,
        alle 100 piksler fra hverandre.
      NEW Course 4 Artist Params inspire: "Free Play Inspiration: You've now learned
        everything you need to know to make a pattern like this! If this picture inspires
        you, try to make something similar. Otherwise, create something all your own.\n\nWant
        to know how our inspiration pattern was made? "
      NEW Course 4 Artist Vars 12: Now, recreate the algorithm from the last level
        and create a pentagon with sides of length 150.
      NEW Course 4 Artist Vars 2: 'Drag a number block to both the `set length` block
        and the `repeat _ times` block to draw a set of 50 pixel triangles. '
      NEW Course 4 Artist Vars 4: "Let's try it again! \n\nCan you set the `length`
        variable to 60 to make this cool design with hexagons?"
      NEW Course 4 Artist Vars 6: "Draw this pattern of pentagons with 100 pixel sides
        by setting the right value for `length` and dropping the `length` variable
        into all of the the correct places. \n\nSee how you only have to set the value
        for `length` once, and the code uses the right value everywhere?"
      NEW Course 4 Bee For Loops 1: Bruk en løkke til å samle all nektaren fra hver
        blomst.
      NEW Course 4 Bee For Loops 10a: 'Klar for en utfordring? Bruk det du har lært
        om løkker til å løse dette problemet. Husk: Du må kanskje kjøre løsningen
        din flere ganger før du skjønner alle stegene.'
      NEW Course 4 Bee For Loops 2: Add the code necessary to make sure the bee collects
        all the nectar. Look at how much code you need for this puzzle! (We'll learn
        a simpler way in the next puzzle.)
      NEW Course 4 Bee For Loops 3: 'Ah, the "for loop" makes this much easier! All
        the code you need is here, take a look at how it is put together then click
        "Run" to see how it works. '
      NEW Course 4 Bee For Loops 4: 'Replace the ??? in the "for loop" with the largest
        amount of nectar the bee has to collect. '
      NEW Course 4 Bee For Loops 4 4: Now we need to move forward "counter" times,
        then get nectar "counter" times.  Can you use two "repeat" loops to solve
        this challenge?
      NEW Course 4 Bee For Loops 5: You can also use a "for loop" to count down. Try
        gathering this nectar by counting down from 5 to 1 by 1.
      NEW Course 4 Bee For Loops 6: The last number in your for loop is called the
        "increment". Each time the loop is run, the counter variable changes by the
        value of the increment. Try collecting these flowers using an increment of
        2.
      NEW Course 4 Bee For Loops 7: |-
        Now, let's combine the "counter" variable with a math block! How can you use the "counter" variable to navigate this garden with the fewest number of blocks possible? What do you need to do to collect 3, 6, 9, 12, 15 nectar this time? The secret is in the "counter" variable!

        Remember: If your loop is counting up, the increment is added to your "counter" variable each time through.
      NEW Course 4 Bee For Loops 8: Du har forstått dette! Hva må økningen være for
        å samle 3, 6, 9, 12 og 15 nektar?
      NEW Course 4 Bee For Loops 9: If your loop is counting down, the increment is
        subtracted from your counter variable each loop. What should your increment
        be to collect 15, then 12, then 9, 6, 3 nectar?
      NEW Course 4 Play Lab Params 11: 'It''s free play time! Have fun with all the
        blocks in your tool box. '
      NetSim Standalone Automatic DNS: In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast: In this version of the Internet Simulator, you
        can connect to up to 5 other people in a room. When you send messages in the
        room, everyone receives them. What are some of the challenges of this system,
        and how might you solve them?
      NetSim Standalone Classroom Routers: In this version of the Internet Simulator,
        everyone connects to a router and has a specific address. To send messages,
        you have to address your message to the specific address of the recipient,
        and the router will take care of delivering it to the right computer. If there
        are other routers created in your class, ask for the address of one of your
        classmates and send them a message! View the Log Router to see the path the
        messages have taken through the network.
      NetSim Standalone Freeplay: In this configuration, most of the options are turned
        on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS: In this version of the simulator you can't see
        the other students' addresses.  Instead, one of you must act as a name service,
        to help share addresses with each other.
      NetSim Standalone Packets TCP: 'Messages on the Internet can take many paths
        to get to their destination, and sometimes along the way the message gets
        dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters. '
      NetSim Standalone SendAB: You and your partner share a single wire that can
        only be in state A or state B. You can set the wire to either state at any
        time, and you can read the state of the wire at any time. Can you figure out
        a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers: 'You and your partner can now reliably send
        messages back and forth without extra coordination! While you''re always sending
        bits back and forth, you can also represent those bits as decimal numbers.
        What kinds of information can you represent with this system? '
      NetSim Standalone Sending Numbers Ascii: 'Now that you''ve transmitted information
        represented as decimal numbers, you can map those numbers to text characters
        to send text-based information back and forth. With a text-based protocol,
        you can easily represent and communicate all kinds of information. '
      New Artist Project: Draw something awesome! Your code is saved as a project
        that you can return to at any time.
      New Basketball Project: Create your own Basketball game. You can change all
        the rules. When you're done, click Share to let friends try your game on their
        phones.
      New Bounce Project: Create your own Bounce game. You can change all the visuals
        and the rules. When you're done, click Share to let friends try your game
        on their phones.
      New Gumball Project: Lag det du har lyst til og del det med andre!
      New Ice Age Project: Lag det du har lyst til og del det med andre!
      New Infinity Project: Lag det du har lyst til og del det med andre!
      New Minecraft Hero Project: "**Fritt spill:** Utforsk på egenhånd!"
      New Sports Project: 'Lag ditt eget spill! Du bestemmer: Du kan endre på alle
        regler, blande og sette sammen ulike sporter. Vær kreativ! Når du er ferdig,
        trykk "Fullført" for å dele spillet med vennene dine, så de kan prøve det
        på sine telefoner!'
      OPD-K5 whats your plan: Take a moment now to consider how and when you will
        complete this online course to ensure you get the most benefit from the experience.
        When you've got a good plan sketched out, continue on to dive more deeply
        into Computer Science Fundamentals.
      OPD-K5-events-2: Attach the `flap normal amount` block to the `when click` event,
        then press "Run".    Click or tap on the play space to move Flappy to the
        target.
      OPD-K5-events-3: Try adding a block that sets the level speed when the "Run"
        button is pressed.  Play the game and flap to the target to continue.
      OPD-K5-events-4: Attach the `end game` block to the `when hit the ground` event.   Play
        the game and crash the bird into the ground to continue.
      OPD-K5-events-5: Attach a block to the `when hit an obstacle` event so that
        the game ends when Flappy crashes into the first set of pipes.
      OPD-K5-events-6: Add a block to the `when pass an obstacle` event, then press
        "Run" to score a point by flying Flappy through the first set of pipes.
      OPD-K5-forloops-1: Collect the nectar from each flower using the fewest blocks
        possible.
      OPD-K5-forloops-2: Write the code to help the bee collect all of the nectar.
      OPD-K5-forloops-5: Help the bee collect all of the nectar.
      OPD-K5-forloops-6: Try gathering this nectar by counting down from 5 to 1 by
        1.
      OPD-K5-forloops-7: Try collecting these flowers using an increment of 2.
      OPD-K5-projects-2: Choose a background and map, and pick an actor to be your
        game's hero.
      OPD-K5-projects-3: Use events and actions to make your hero move. Get to the
        targets.
      OPD-K5-projects-4: Add two or more additional actors to your game and make them
        move.
      OPD-K5-projects-5: Find some interesting ways to change the score in your game.
        Get the score to show something other than 0 to continue.
      OPD-K5-projects-6: Great job! You have all the basic components of a working
        game. Now spend some time making sure the game works the way you want.
      OPD-K5-projects-7: You've finished! Now you can play your game or share it with
        your friends and classmates!
      OPD-K5-spritelab-2: Change the tumbleweed into any kind of fish!
      OPD-K5-spritelab-3: Change the fish's behavior so that it swims left and right.
      OPD-K5-spritelab-4: Use the `set background color` block to make the background
        any color.
      OPD-K5-spritelab-6: The fish is adventurous and wants to meet new creatures
        in the sea. Add another sprite to the fish tank. This sprite can have any
        costume other than the one you use for your fish!
      OPD-K5-spritelab-7: Add a behavior to the fish's new friend.
      OPD-K5-variables-2: 'Now draw three of those triangles right next to each other.   '
      OPD-K5-variables-5: Move the length of 50 into a variable so we can use it in
        the next few puzzles.
      OPD-K5-variables-6: Now, use the `length` variable to have the artist jump forward
        and down by `length` pixels between triangles.
      OPD-K5-variables-7: Add another set of loops at the end of your code to add
        three more triangles. This time, move forward and up!
      Overworld Avoid Monsters: Det er ikke bra å møte på en creeper. Beveg deg forsiktig
        forbi creeperene og kom deg trygt hjem.
      Overworld Avoid Monsters_2019: Det er ikke bra å møte på en creeper. Beveg deg
        forsiktig forbi creeperene og kom deg trygt hjem.
      Overworld Chop Tree: Tre er en veldig viktig ressurs. Det er mange ting som
        lages av det. Gå til treet og bruk kommandoen "ødelegg blokk" for å hugge
        det ned.
      Overworld Chop Tree_2019: Tre er en veldig viktig ressurs. Det er mange ting
        som lages av det. Gå til treet og bruk kommandoen "ødelegg blokk" for å hugge
        det ned.
      Overworld Chop Trees: Vi må bygge et hus før sola går ned. Du trenger masse
        tre for å bygge et hus. Hogg ned de tre trærne.
      Overworld Chop Trees_2019: Vi må bygge et hus før sola går ned. Du trenger masse
        tre for å bygge et hus. Hogg ned de tre trærne.
      Overworld Free Play 20x20: Gratulerer! Du har fullført alle oppgavene våre!
        Nå kan du utvinne, bygge og lage noe unikt ved å bruke alt du har lært.
      Overworld Free Play 20x20_2019: Gratulerer! Du har fullført alle oppgavene våre!
        Nå kan du utvinne, bygge og lage noe unikt ved å bruke alt du har lært.
      Overworld House Frame Chosen: Bygg resten av huset med det materiale du vil.
        Kommandoen "gjenta" vil være nyttig her.
      Overworld House Frame Chosen_2019: Bygg resten av huset med det materiale du
        vil. Kommandoen "gjenta" vil være nyttig her.
      Overworld Move to Sheep: Legg til enda en "gå fremover"-kommando for å nå fram
        til sauen.
      Overworld Move to Sheep_2019: Legg til enda en "gå fremover"-kommando for å
        nå fram til sauen.
      Overworld Place Wall: Alle hus begynner med en vegg. Bygg den første delen av
        huset ved å putte kommandoene "plasser" og "flytt fremover" inne i gjenta-løkken.
      Overworld Place Wall_2019: Alle hus begynner med en vegg. Bygg den første delen
        av huset ved å putte kommandoene "plasser" og "flytt fremover" inne i gjenta-løkken.
      Overworld Plant Crops: Det er lurt å planlegge fremover. Plant avlinger på begge
        sidene av vannet så du ikke blir sulten senere.
      Overworld Plant Crops_2019: Det er lurt å planlegge fremover. Plant avlinger
        på begge sidene av vannet så du ikke blir sulten senere.
      Overworld Powered Minecart: Bra jobbet! Du har samlet mange ressurser og bygd
        et enkelt hus. Nå kan du legge skinner fra kanten av kartet til husdøren.
      Overworld Powered Minecart_2019: Bra jobbet! Du har samlet mange ressurser og
        bygd et enkelt hus. Nå kan du legge skinner fra kanten av kartet til husdøren.
      Overworld Shear Sheep: Tid for å klippe sauer! Bruk "klipp"-kommandoen for å
        samle ull fra begge sauene.
      Overworld Shear Sheep_2019: Tid for å klippe sauer! Bruk "klipp"-kommandoen
        for å samle ull fra begge sauene.
      Pixelation - Lesson 15 - Color Shades: We start you out with the row of shades
        of red that Maddie created in the video. Experiment with 6-bit color by filling
        in the bottom row of the image with shades of a different color. Here is an
        example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Color Shades 4x4: 'We start you out with the 4x4 image
        Maddie created in the video. Your task is to fill a 4x4 grid with colors using
        12-bits per pixel. Here are the requirements: Row 1 - fill with shades of
        red. Row 2 - shades of green. Row 3 - shades of blue. Row 4 - shades of gray.'
      Pixelation - Lesson 15 - Complete 3-bit color: We start you with the 4x2 image
        Maddie was creating, but we've left out the last two squares. Finish off the
        image by figuring out which two colors are missing and encode them.
      Pixelation 4x4 Empty: The width and height are now encoded in the pixel data.
        Can you figure out how to adjust the dimensions?
      Pixelation Bee: 'This larger image of a bee encodes color with 12 bits per pixel,
        but viewing in hex makes it easier to see the color of each pixel. If you
        switch to binary mode - hold on to your hat - it''s a lot of bits. Here''s
        another mind-blowing thing to try: slide the bits per pixel up to 24 bits
        per pixel. What happens? Can you explain this behavior?'
      Pixelation Flappy: Here is a bigger image at 9 bits per pixel. With 9 bits per
        pixel you can express 512 different colors. Click through to see the next
        image which is even more sophisticated, but easier to understand.
      Robot Doodle: 'Project Idea: Create a picture of something familiar from the
        real world. This requires persistence and planning!'
      Robot Doodle_2018: 'Project Idea: Create a picture of something familiar from
        the real world. This requires persistence and planning!'
      Standalone_Artist_1: Velkommen til Kunstner! Først, la oss prøve å lage en enkelt
        firkant ved å bruke brikkene for å snu til høyre og flytte framover. Hver
        side burde være 100 piksler lange.
      Standalone_Artist_2: Tegn denne diamanten med 120 og 60 graders vinkler og 150
        piksler lange sider.
      Standalone_Artist_3: Kan du tegne denne sekskanten med lange sider på 100 piksler
        og vinkler på 60 grader?
      Standalone_Artist_4: Nå har du fått en ny brikke som du kan bruke; gjenta-løkken.
        Den vil repetere et sett med kommandoer. Hva skjer hvis du gjentar disse kommandoene
        6 ganger?
      Standalone_Artist_5: Hvor mange ganger må du å repetere denne diamanten for
        å tegne blomsten?
      Standalone_Artist_5.5: 'Legg merke til hvordan vi har forenklet diamantkoden
        ved å legge inn en løkke. Du kan kjøre en sekvens i en løkke 12 ganger for
        å tegne blomsten. Hint: Du vil trenge å snu 30 grader etter at diamanten har
        kjørt i en løkke for å ikke fortsette å tegne over den samme diamanten.'
      Standalone_Artist_6: 'Kjør denne sekskant-koden 6 ganger i en løkke for å lage
        designet. Hvor mange grader må du snu hver gang? Hint: del antall grader i
        en sirkel på antall ganger du skal kjøre løkka.'
      Standalone_Artist_7: 'En funksjon er en annet programmeringsverktøy for å hjelpe
        deg med å unngå å gjenta deg selv. Denne funksjonen tegner en blomst så du
        kan bruke den hver gang du vil tegne en blomst. Bruk denne og den nye hoppe-blokken
        til å tegne disse blomstene. Hint: Blomstene er 150 piksler fra hverandre'
      Standalone_Artist_8: Her er en funksjon kalt "Tegn en figur" som vi har programmert
        til å tegne sekskanter. Kjør koden for å se hva den gjør og så kan du eksperimentere
        med den og se hva som skjer hvis du endrer på den. Kan du få den til å tegne
        et mønster av firkanter, trekanter og åttekanter?
      Standalone_Artist_9: Gå videre og lag det bildet du ønsker! Du har til og med
        en tom funksjon som kan du få til å gjøre hva du vil!
      U4 Model Design 1: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      U4 Model Design 1_2018: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      U4 Model Design 1_2019: Add a large red button to your screen using Design Mode.
        (Click for full instructions.)
      Underground Avoiding Lava: Under noen av blokkene skjuler det seg lava, som
        du må dekke til før du går videre. Her hjelper det med en "hvis"-kommando.
        Legg til en "flytt fremover"-kommando på riktig sted for å utvinne disse blokkene.
      Underground Avoiding Lava_2019: Under noen av blokkene skjuler det seg lava,
        som du må dekke til før du går videre. Her hjelper det med en "hvis"-kommando.
        Legg til en "flytt fremover"-kommando på riktig sted for å utvinne disse blokkene.
      Underground If Statements: Det er nå det blir vanskelig. Utvinn tre rødsteiner,
        men ikke fall ned i lavaen. Bruk en "hvis"-kommando for å plassere brostein
        over lavaen du finner.
      Underground If Statements_2019: Det er nå det blir vanskelig. Utvinn tre rødsteiner,
        men ikke fall ned i lavaen. Bruk en "hvis"-kommando for å plassere brostein
        over lavaen du finner.
      Underground Iron: Det er ikke lurt å gå rett inn i smeltet lava. Bruk brostein
        til å lage en bro, og så utvinner du minst to av jernblokkene.
      Underground Iron_2019: Det er ikke lurt å gå rett inn i smeltet lava. Bruk brostein
        til å lage en bro, og så utvinner du minst to av jernblokkene.
      Underground Mining Coal: De mest verdifulle ressursene finner du under bakken,
        men det kan være mørkt der. Plasser minst to fakler og utvinn minst to kull.
      Underground Mining Coal_2019: De mest verdifulle ressursene finner du under
        bakken, men det kan være mørkt der. Plasser minst to fakler og utvinn minst
        to kull.
      Vigenere: Test
      Virtual Pet 1: What do you think will happen if you press "Run" and then click
        on her?
      Virtual Pet 1 Predict: 'What do you think will happen when you click on the
        alien?  '
      Virtual Pet 2: Create an **event** so that when Geraldine touches the puddle,
        her color changes to brown.
      Virtual Pet 3: Add a new soap sprite to the screen.  Can you make it so that
        when the giraffe and the soap touch, the giraffe goes back to its normal color?
      Virtual Pet 4: Add a behavior to your soap to make it draggable, then drag it
        over to clean the giraffe!
      Virtual Pet 5: Add actions to each event so that when the giraffe collides with
        each sprite, it shrinks by 5.
      Virtual Pet 6: Add an apple that returns the giraffe back to regular size when
        they touch.
      Virtual Pet 8_2019: "**Free Play:** What more can you make your pet do? Try
        anything you like!"
      Virtual Pet Freeplay: 'Freeplay: What more can you make your giraffe do? '
      'Widget: Text Compression': Se etter mønster (repeterende ord eller fraser)
        i teksten. Legg inn mønstrene du finner i ordlisten til høyre. Når du legger
        inn et mønster i ordlisten, vil symbolet for mønsteret legges inn i teksten
        istedenfor mønsteret.
      behaviors 1: Make a prediction!
      behaviors 2: Fly the rocket to the stars!
      behaviors 3: Help the rover outrun the robot!
      behaviors 3a: 'Debug: Make all of the stars spin the same way!'
      behaviors 4: Make a prediction!
      behaviors 5: Move the astronaut diagonally.
      behaviors 6: Make the ball roll.
      behaviors 7: Drive off into the horizon!
      behaviors free play: 'Free play: Create your own outer space scene!'
      bounce_1: Fest en blokk til «Når pil venstre» blokken og trykk «Kjør». Flytt
        åren ved å bruke venstre pil for å nå målet.
      bounce_10: Det er nå et mål på toppen. Fest «skår et poeng» og «skår motstanderen
        et poeng» blokkene til «når en ball i mål» og «når en ball bommer på åren»
        blokkene for å lage et spill. Se hvor mange poeng du greier å skåre før motstanderen
        din skårer to ganger.
      bounce_10_basketball: Nå er målet på toppen! Fest "skår poeng"- og "motstanderen
        skårer poeng"-blokker til "når ballen er i mål" og "når ballen bommer på hånden"-blokkene
        for å lage et spill. Se hvor mange poeng du kan få før motstanderen får to
        poeng.
      bounce_10_sports: Nå er det et mål på toppen! Fest blokkene "øk poeng" og "øk
        motstanderens poeng" til blokkene "når ballen er i mål" og "når ballen bommer
        på rekkerten" for å lage et spill. Se hvor mange poeng du greier å få før
        motstanderen din får to poeng!
      bounce_11: Du kan nå feste blokker til «når den kjører»-blokken. Du må feste
        den nye «kast ny ball»-blokken på mer enn en plass. Også, prøv å skifte scenen
        eller farten på kontrolleren og ballen og se hvor mange poeng du kan skåre
        før motstanderen din har skåret to ganger.
      bounce_11_basketball: Nå kan du feste blokker til "når kjør"-blokken. Du må
        feste en ny "kast ny ball"-blokk på mer enn ett sted. Du kan også endre scenen
        eller hastigheten på hånden og ballen for å se hvor mange poeng du kan få
        før motstanderen skårer to poeng!
      bounce_11_sports: Nå kan du feste blokker til "når kjør"-blokken. Du må feste
        en ny "kast ny ball"-blokk på mer enn ett sted. Du kan også endre scenen eller
        hastigheten på hånden og ballen for å se hvor mange poeng du kan få før motstanderen
        skårer to poeng!
      bounce_12: Opprett ditt eget Sprettespill. Du kan endre alle bilder og reglene.
        Når du er ferdig, klikk Fullfør for å la venner prøve spillet på sine telefoner.
      bounce_12_basketball: Lag ditt eget basketballspill. Du kan endre alle reglene.
        Klikk "Ferdig" når du er fornøyd og la vennene dine prøve spillet på telefonene
        sine.
      bounce_12_sports: 'Lag ditt eget spill! Du bestemmer: Du kan endre på alle regler,
        blande og sette sammen ulike sporter. Vær kreativ! Når du er ferdig, trykk
        "Fullført" for å dele spillet med vennene dine, så de kan prøve det på sine
        telefoner!'
      bounce_1_basketball: Fest en blokk til "når venstre pil"-blokken og klikk "Kjør".
        Bruk venstre pil til å flytten hånden til målet.
      bounce_1_sports: Kom deg til flagget! Koble en blokk til "når venstre pil"-blokken
        og trykk "Kjør" for å flytte spilleren til flagget.
      bounce_2: Fest en blokk til «når pil høyre» og «når pil venstre» blokkene. Flytt
        åren for å nå begge målene.
      bounce_2_basketball: Fest en blokk til "når høyre pil"- og "når venstre pil"-blokkene.
        Flytt hånden for å nå begge målene.
      bounce_2_sports: Nå er det to flagg! Koble en blokk til "når venstre pil"- og
        "når høyre pil"-blokkene for å kunne flytte spillfiguren i to retninger.
      bounce_3: Prøv noe lignende med «når opp pil» blokken. Flytt åren til målet
        på toppen.
      bounce_4: Denne gangen trenger du å legge til fire blokker. Flytt åren til alle
        fire mål for å fullføre denne oppgaven.
      bounce_5: Vi skal sende en ball flygende ned mot åren. Fest en blokk til «når
        en ball treffer åren» blokken for å være sikker på at ballen når mål.
      bounce_5_basketball: Vi skal sende en ball mot hånden. Fest en blokk til "når
        ballen treffer hånden"-blokken, for å være sikker på at ballen når flagget.
      bounce_5_sports: Hockey-pucken kommer til å fly ned mot spillfiguren! Koble
        en blokk til "når ball treffer spilleren"-blokken for å treffe flagget.
      bounce_6: Nå er sluttmålet på toppen. Du trenger å feste blokker til begge «når
        en ball treffer» blokkene for å løse denne oppgaven.
      bounce_6_basketball: Nå er flagget på toppen. Du må feste blokker til begge
        "når ballen treffer"-blokkene for å løse denne oppgaven.
      bounce_6_sports: Nå er flagget på toppen. Du må feste blokker til begge "når
        ballen treffer"-blokkene for å løse denne oppgaven.
      bounce_7: Fest blokker til alle «når» blokkene. Sprett ballen helt til den treffer
        sluttmålet.
      bounce_7_basketball: Fest blokker til begge "når"-blokkene. Sprett ballen til
        den treffer flagget.
      bounce_7_sports: Fest blokker til begge "når"-blokkene. Sprett ballen til den
        treffer flagget.
      comment_intro_maze_2018: Use the new `comment` block to leave yourself quick
        reminders.
      course1_artist_loops_challenge1: |-
        You can use a loop to draw many lines in a row.

        Can you draw a house? Make it look just the way you like it!  Try looking for patterns that repeat!
      course1_artist_loops_challenge2: Let's play a game! Draw as many X's as you
        can! Can you get 3 in a row?
      course1_artist_loops_challenge3: '"Can you help me make two bird houses?"'
      course1_artist_loops_challenge4: '"It''s time to toss the dice! Can you help
        me draw these?"'
      course1_collector_loops_challenge1: '"Can you help me spot some bugs? I know
        which way I want to go, but I''m not sure how many steps to take."'
      course1_collector_loops_challenge2: 'This time you can only use one of each
        arrow block. Get all of the treasure! '
      course1_collector_loops_challenge3: 'This time you can only use one of each
        arrow block. Get all of the treasure! '
      course1_collector_loops_challenge4: Let's get the treasure! Help me across each
        row then come back to start the next row. Can you find a pattern?
      course1_maze_debugging_challenge1: Debug this level. Remove the extra blocks
        and add the missing blocks. Get the bird to the pig!
      course1_maze_debugging_challenge2: Debug this level. These are the right blocks,
        but they're in the wrong order!
      course1_maze_seq_challenge1: '"Trace the path and lead me to the silly pig.
        Avoid TNT or the feathers will fly!"'
      course1_maze_seq_challenge2: You can only move up to four times in each direction.
        Can you find a path before you run out of blocks?
      course1_playlab_events_challenge1: '"Where are my friends hiding? Can you write
        code to show the rest of my friends?"'
      course1_playlab_events_challenge2: '"Let''s have a party! Give my friends something
        to do when you click or tap them."'
      course2_artist_nestedLoops_challenge1: Can you figure out how to make a picture
        like this?
      course2_artist_nestedLoops_challenge2: Can you figure out how to make a picture
        like this?
      course2_artist_prog_challenge1: Draw rooms for each of the animals. There are
        many different ways to solve this puzzle, so have some fun. The shortest possible
        solution is 6 blocks, but use as many as you like!
      course2_artist_prog_challenge2: _Help me paint the yellow lines on this road!_
      course2_bee_conditionals_challenge1: Collect all of the nectar or make all the
        honey.
      course2_bee_conditionals_challenge2: Collect all of the nectar or make all the
        honey.
      course2_collector_loops_challenge2: Get all of the treasure!
      course2_collector_prog_challenge1: Look carefully! Can you collect all _10_
        pieces of treasure?
      course2_collector_prog_challenge2: There are 20 pieces of treasure to be found.
        Collect at least half to finish this challenge!
      course2_harvester_loops_challenge1: Collect all of the corn.
      course2_harvester_loops_challenge2: Collect all of the lettuce. Avoid the trees
        and fields!
      course2_maze_loops_challenge1: 'Now Scrat wants to try using loops to find his
        acorn! '
      course2_maze_programming_challenge1: _"The pig is hiding! Can you help me find
        a way around?"_
      course2_maze_programming_challenge2: Sometimes there is more than one way to
        solve the same problem. Sometimes it's faster to go backwards than it is to
        go forwards!
      course3_artist_functions_challenge1: Once you define a function, you can call
        it over and over again - whenever and wherever you want! Try this code to
        see how it works, then change it to make your own impressive design!
      course3_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      course3_bee_debugging_challenge1: Watch how the bee gets the nectar. Can you
        use the same kind of pattern to help the bee make all of the honey?
      course3_bee_functions_challenge1: You are on your own for this challenge. This
        could "bee" harder than it looks!
      course3_bee_functions_challenge2: You are on your own for this challenge!
      course3_bee_functions_challenge3: Create a new function to collect all the nectar
        and honey while there is a path ahead. Use it to complete the puzzle!
      course3_bee_functions_challenge4: Use everything you have learned to complete
        this puzzle!
      course3_collector_debugging_challenge2: Are you an expert of nested loops? Use
        what you have learned so far to collect all of the treasure!
      course3_farmer_condLoops_challenge1: Turn right at the pumpkins. Collect everything
        to complete the level. Each hidden crop has only one corn or lettuce.
      course3_farmer_condLoops_challenge2: Collect everything to complete the level.
      course3_farmer_until_challenge2: Bruk blokken hvis/ellers til å følge den svingete
        banen. På hvert hjørne, bruk kommandoen `fjern 1` i en løkke for å fjerne
        haugene.
      course3_maze_debugging_challenge1: _"Am I just going around in circles?"_
      course3_maze_debugging_challenge2: _"If I turn too often, I might get dizzy!
        Help me reach the acorn with only four `turn` commands."_
      course3_maze_until_challenge1: No hints, just challenge. Get the zombie to the
        sunflower.
      course3_playLab_challenge1: "Something should happen when you get enough points
        or when you run out of points. Add some code to the `win game` and `lose game`
        functions to make the game work the way it should. \nClick the hints for ideas!"
      course4_artist_binary_challenge1: You can only use each binary value (0 or 1)
        once each in this puzzle. Try using nested loops to complete this drawing.
      course4_artist_binary_challenge2: Are you persistent enough to restore this
        logo back to normal?
      course4_artist_concept_challenge2: Create five pinwheel designs using the code
        below.
      course4_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      course4_artist_fwp_challenge1: Prøv å kjøre dette programmet, og gjør endringer
        for å se hva som skjer. Kan du finne ut hvordan det fungerer? (Eller fjerne
        det og erstatte det med noe helt annet)
      course4_artist_variables_challenge1: You've now learned everything you need
        to know to make a pattern like this! This puzzle is meant to be difficult.  Can
        you stick with it until you figure out the solution?
      course4_bee_for_challenge1: Use this for loop to collect all of the nectar.
        There are a few actions that you will want to repeat 'counter' times.
      course4_bee_fwp_challenge1: Use one `for loop` in a function to collect all
        of the corn. The same `for loop` can count to different maximum values by
        using the `length` parameter.
      course4_bee_fwp_challenge2: Use one `for loop` in a function to collect all
        of the vegetables in the row. Make the `for loop` can count to different maximum
        values by using the `length` parameter. Make your program as short as possible
        by using a second `for loop` outside the function.
      course4_collector_nested_loops_challenge2: Help the collector reach at least
        two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      course4_harvester_nested_loops_challenge1: '"I need some help on the farm! Help
        me harvest this corn using only the blocks in your toolbox."'
      course4_playlab_variables_challenge1: Use these blocks to make the actors share
        a knock-knock joke. Change the setup and punchline to tell your own joke!
      courseA_artist_loops1: This is a new type of puzzle called "Artist". Play with
        the level and draw something fun.
      courseA_artist_loops10: Help me put down stones so I don't fall in!
      courseA_artist_loops10_2018: Help me put down stones so I don't fall in!
      courseA_artist_loops10_2019: Help me put down stones so I don't fall in!
      courseA_artist_loops11: Help me build steps to watch the ship sail away.
      courseA_artist_loops11_2018: Help me build steps to watch the ship sail away.
      courseA_artist_loops11_2019: Help me build steps to watch the ship sail away.
      courseA_artist_loops12: The artist saw something funny in the distance.  Draw
        what you think he saw.
      courseA_artist_loops12_2018: The artist saw something funny in the distance.  Draw
        what you think he saw.
      courseA_artist_loops12_2019: The artist saw something funny in the distance.  Draw
        what you think he saw.
      courseA_artist_loops1_2018: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseA_artist_loops1_2019: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseA_artist_loops2: Help the artist draw this line two times forward.
      courseA_artist_loops2_2018: Help the artist draw this line two times forward.
      courseA_artist_loops2_2019: Help the artist draw this line two times forward.
      courseA_artist_loops3: Draw a line forward five times.
      courseA_artist_loops3_2018: Draw a line forward five times.
      courseA_artist_loops3_2019: Draw a line forward five times.
      courseA_artist_loops4: Now, use a `repeat` loop to draw this line five times!
      courseA_artist_loops4_2018: Now, use a `repeat` loop to draw this line five
        times!
      courseA_artist_loops4_2019: Now, use a `repeat` loop to draw this line five
        times!
      courseA_artist_loops5: Draw a line seven steps long. This will become our horizon.
      courseA_artist_loops5_2018: Draw a line seven steps long. This will become our
        horizon.
      courseA_artist_loops5_2019: Draw a line seven steps long. This will become our
        horizon.
      courseA_artist_loops6: Let's put a nice hill in the back.
      courseA_artist_loops6_2018: Let's put a nice hill in the back.
      courseA_artist_loops6_2019: Let's put a nice hill in the back.
      courseA_artist_loops7: Use the `repeat` loop to add waves to the water.
      courseA_artist_loops7_2018: Use the `repeat` loop to add waves to the water.
      courseA_artist_loops7_2019: Use the `repeat` loop to add waves to the water.
      courseA_artist_loops8: We need a ladder up to the boat.
      courseA_artist_loops8_2018: We need a ladder up to the boat.
      courseA_artist_loops8_2019: We need a ladder up to the boat.
      courseA_artist_loops9: 'Challenge: Fix the stairs.'
      courseA_artist_loops9_2018: 'Challenge: Fix the stairs.'
      courseA_artist_loops9_2019: 'Challenge: Fix the stairs.'
      courseA_artist_loops_challenge1: Can you draw a house? Make it look just the
        way you like it!
      courseA_artist_loops_challenge1_2018: Can you draw a house? Make it look just
        the way you like it!
      courseA_artist_loops_challenge1_2019: Can you draw a house? Make it look just
        the way you like it!
      courseA_artist_loops_challenge2a: _"Help me get these three tents set up!"_
      courseA_artist_loops_challenge2a_2018: _"Help me get these three tents set up!"_
      courseA_artist_loops_challenge2a_2019: _"Help me get these three tents set up!"_
      courseA_collector_loops1: Move Laurel around and get as much treasure as you
        can!
      courseA_collector_loops10: Help Laurel get all of the treasure along this path.
      courseA_collector_loops10_2018: Help Laurel get all of the treasure along this
        path.
      courseA_collector_loops10_2019: Help Laurel get all of the treasure along this
        path.
      courseA_collector_loops11: Help Laurel get all of the treasure from this cave.
      courseA_collector_loops11_2018: Help Laurel get all of the treasure from this
        cave.
      courseA_collector_loops11_2019: Help Laurel get all of the treasure from this
        cave.
      courseA_collector_loops12: _"Eureka!  Get as much treasure as you can!"_
      courseA_collector_loops12_2018: _"Eureka!  Get as much treasure as you can!"_
      courseA_collector_loops12_2019: _"Eureka!  Get as much treasure as you can!"_
      courseA_collector_loops1_2018: Move Laurel around and get as much treasure as
        you can!
      courseA_collector_loops1_2019: Move Laurel around and get as much treasure as
        you can!
      courseA_collector_loops2: Get all three piles to pass this level.
      courseA_collector_loops2_2018: Get all three piles to pass this level.
      courseA_collector_loops2_2019: Get all three piles! Move Laurel to each piece
        of treasure, then use the collect block.
      courseA_collector_loops4: Fix Laurel's path to get all of this treasure.
      courseA_collector_loops4_2018: Fix Laurel's path to get all of this treasure.
      courseA_collector_loops4_2019: Fix Laurel's path to get all of this treasure.
      courseA_collector_loops5: Use what you learned to get all of the treasure.
      courseA_collector_loops5_2018: Use what you learned to get all of the treasure.
      courseA_collector_loops5_2019: Use what you learned to get all of the treasure.
      courseA_collector_loops6: Add blocks to this code to get all of the treasure.
      courseA_collector_loops6_2018: Add blocks to this code to get all of the treasure.
      courseA_collector_loops6_2019: Add blocks to this code to get all of the treasure.
      courseA_collector_loops7: What should you add to this code to get all of the
        treasure?
      courseA_collector_loops7_2018: What should you add to this code to get all of
        the treasure?
      courseA_collector_loops7_2019: What should you add to this code to get all of
        the treasure?
      courseA_collector_loops8: Write code to get all of this treasure.
      courseA_collector_loops8_2018: Write code to get all of this treasure.
      courseA_collector_loops8_2019: Write code to get all of this treasure.
      courseA_collector_loops9: "**Challenge:** The treasure goes all the way up these
        stairs!  Write the code to help Laurel get it all."
      courseA_collector_loops9_2018: "**Challenge:** The treasure goes all the way
        up these stairs!  Write the code to help Laurel get it all."
      courseA_collector_loops9_2019: "**Challenge:** The treasure goes all the way
        up these stairs!  Write the code to help Laurel get it all."
      courseA_collector_loops_challenge1: _"Can you help me spot some bugs?"_
      courseA_collector_loops_challenge1_2018: _"Can you help me spot some bugs?"_
      courseA_collector_loops_challenge1_2019: _"Can you help me spot some bugs?"_
      courseA_collector_loops_challenge2: 'Get all of the treasure! '
      courseA_collector_loops_challenge2kp: Collect at least **3** pieces of treasure
        to pass this level.
      courseA_collector_loops_challenge2kp_2018: Collect at least **3** pieces of
        treasure to pass this level.
      courseA_collector_loops_challenge2kp_2019: Collect at least **3** pieces of
        treasure to pass this level.
      courseA_collector_preLoops1: "This is Laurel the Adventurer! \n\nPress \"Run\"
        to see her walk up to the treasure and grab it."
      courseA_collector_preLoops2: "Great!  Now you get to add code yourself!  \n\nSnap
        a `get treasure` block to the bottom of the program and click \"Run\"."
      courseA_collector_preLoops3: Snap two `E -->` blocks and one `get treasure`
        block to the bottom of the program, then click "Run".
      courseA_collector_preLoops4: Can you figure out how to solve this puzzle?
      courseA_collector_preLoops5: Get 1 of these 2 gems to solve this puzzle.
      courseA_collector_preLoops6: Get both pieces of treasure to solve this puzzle.
      courseA_collector_preLoops7: Get all three piles to pass this level.
      courseA_harvester_loops1: Help the harvester pick all the corn!
      courseA_harvester_loops10: Help the harvester pick all five ears of corn!
      courseA_harvester_loops10_2019: Help the harvester pick all five ears of corn!
      courseA_harvester_loops11: 'Try one more on your own! '
      courseA_harvester_loops11_2019: 'Try one more on your own! '
      courseA_harvester_loops1_2019: Help the harvester pick all the corn!
      courseA_harvester_loops2: Make sure to pick all the corn!
      courseA_harvester_loops2_2019: Make sure to pick all the corn!
      courseA_harvester_loops3: Can you pick all the corn using only **one** move
        block?
      courseA_harvester_loops3_2019: Can you pick all the corn using only **one**
        move block?
      courseA_harvester_loops4: Can you help the harvester find the bug in her code?
      courseA_harvester_loops4_2019: Can you help the harvester find the bug in her
        code?
      courseA_harvester_loops5: Try it yourself! Can you pick the corn at the end
        too?
      courseA_harvester_loops5_2019: Try it yourself! Can you pick the corn at the
        end too?
      courseA_harvester_loops5a: Look at all this corn! Can you pick it all by yourself?
      courseA_harvester_loops5a_2019: Look at all this corn! Can you pick it all by
        yourself?
      courseA_harvester_loops5b: Can you change your code to make the harvester pick
        all the corn?
      courseA_harvester_loops5b_2019: Can you change your code to make the harvester
        pick all the corn?
      courseA_harvester_loops6: You will need **one** `Move West` block and **one**
        `Move North` block.
      courseA_harvester_loops6_2019: You will need **one** `Move South` block and
        **one** `Move West` block.
      courseA_harvester_loops7: 'Try it on your own! '
      courseA_harvester_loops7_2019: 'Try it on your own! '
      courseA_harvester_loops9: Can you figure out how to pick all the corn?
      courseA_harvester_loops9_2019: Can you figure out how to pick all the corn?
      courseA_harvester_seq1: Play with these blocks to help the harvester pick the
        piece of corn.
      courseA_harvester_seq10: Make sure to pick all the corn!
      courseA_harvester_seq10_2019: Make sure to pick all the corn!
      courseA_harvester_seq11: Try it by yourself! Pick all the corn.
      courseA_harvester_seq11_2019: Try it by yourself! Pick all the corn.
      courseA_harvester_seq12: Pick all the corn.
      courseA_harvester_seq12_2019: Pick all the corn.
      courseA_harvester_seq13: Play with these blocks to help the harvester pick corn.
      courseA_harvester_seq13_2019: Play with these blocks to help the harvester pick
        corn.
      courseA_harvester_seq1_2019: Play with these blocks to help the harvester pick
        the piece of corn.
      courseA_harvester_seq2: Use three `move west` blocks and one `pick corn` block
        to solve this puzzle.
      courseA_harvester_seq2_2019: Use three `move west` blocks and one `pick corn`
        block to solve this puzzle.
      courseA_harvester_seq3: Use three `Move North` blocks and one `Pick Corn` block.
      courseA_harvester_seq3_2019: Use three `Move North` blocks and one `Pick Corn`
        block.
      courseA_harvester_seq4: Add one block to help the harvester pick the corn.
      courseA_harvester_seq4_2019: Add one block to help the harvester pick the corn.
      courseA_harvester_seq5: Find the bug and fix it!
      courseA_harvester_seq5_2019: Find the bug and fix it!
      courseA_harvester_seq6: Try it yourself!
      courseA_harvester_seq6_2019: Try it yourself!
      courseA_harvester_seq7: Try it yourself!
      courseA_harvester_seq7_2019: Try it yourself!
      courseA_harvester_seq8: Now the harvester needs to pick corn two times!
      courseA_harvester_seq8_2019: Now the harvester needs to pick corn two times!
      courseA_harvester_seq9: Add two blocks to finish this puzzle!
      courseA_harvester_seq9_2019: Add two blocks to finish this puzzle!
      courseA_maze_ramp2_2018: Snap all blocks together to finish your code, then
        click "Run".
      courseA_maze_ramp2_2019: Snap all blocks together to finish your code, then
        click "Run".
      courseA_maze_ramp3a_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseA_maze_ramp3a_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseA_maze_ramp3b_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "Run".
      courseA_maze_ramp3b_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "Run".
      courseA_maze_ramp4a_2018: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseA_maze_ramp4a_2019: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseA_maze_ramp5a_2018: Get the bird to the pig!
      courseA_maze_ramp5a_2019: Get the bird to the pig!
      courseA_maze_seq1: Få fuglen til den slemme grisen!
      courseA_maze_seq10: 'Challenge: Go around the TNT to get the bird to the pig! '
      courseA_maze_seq10_2018: 'Challenge: Avoid the TNT to get the bird to the pig! '
      courseA_maze_seq10_2019: 'Challenge: Avoid the TNT to get the bird to the pig! '
      courseA_maze_seq10_copy: 'Challenge: Go around the TNT to get the bird to the
        pig! '
      courseA_maze_seq11: Move one way, then another to get the bird to the pig.
      courseA_maze_seq11_2018: Move one way, then another to get the bird to the pig.
      courseA_maze_seq11_2019: Move one way, then another to get the bird to the pig.
      courseA_maze_seq12: 'Get that pig! '
      courseA_maze_seq12_2018: 'Get that pig! '
      courseA_maze_seq12_2019: 'Get that pig! '
      courseA_maze_seq13: Get the pig any way you can!
      courseA_maze_seq13_2018: Get the pig any way you can!
      courseA_maze_seq13_2019: Get the pig any way you can!
      courseA_maze_seq1_2018: Få fuglen til den slemme grisen!
      courseA_maze_seq1_2019: Få fuglen til den slemme grisen!
      courseA_maze_seq2: Endre denne koden for å få meg bort til grisen!
      courseA_maze_seq3: Fiks koden for å få fuglen til grisen!
      courseA_maze_seq4: REMOVE a block to get the bird to the pig!
      courseA_maze_seq5: Try this one yourself from the beginning.
      courseA_maze_seq5_2018: Give this one a try.
      courseA_maze_seq5_2019: Give this one a try.
      courseA_maze_seq5_copy: Try this one yourself from the beginning.
      courseA_maze_seq5a_2018: What can you add to the end of this code to get the
        bird to the pig?
      courseA_maze_seq5a_2019: What can you add to the end of this code to get the
        bird to the pig?
      courseA_maze_seq6: Move one way, then another to get the bird to the pig!
      courseA_maze_seq6_2018: Move one way, then another to get the bird to the pig!
      courseA_maze_seq6_2019: Move one way, then another to get the bird to the pig!
      courseA_maze_seq6_copy: Move one way, then another to get the bird to the pig!
      courseA_maze_seq7: Figure out what is missing and then add blocks to get the
        bird to the pig!
      courseA_maze_seq7_copy: Figure out what is missing and then add blocks to get
        the bird to the pig!
      courseA_maze_seq8: Solve this level and get the bird to the pig!
      courseA_maze_seq8_2018: Solve this level and get the bird to the pig!
      courseA_maze_seq8_2019: Solve this level and get the bird to the pig!
      courseA_maze_seq8_copy: Solve this level and get the bird to the pig!
      courseA_maze_seq9: Debug this level by adding blocks to get the bird to the
        pig!
      courseA_maze_seq_challenge1: Something is wrong here. Help fix the code to get
        the bird to the pig!
      courseA_maze_seq_challenge1_2018: Something is wrong here. Help fix the code
        to get the bird to the pig!
      courseA_maze_seq_challenge1_2019: Something is wrong here. Help fix the code
        to get the bird to the pig!
      courseA_maze_seq_challenge2: Trace the path to lead the bird to the pig. Avoid
        TNT or feathers will fly!
      courseA_maze_seq_challenge2_2018: Trace the path to lead the bird to the pig.
        Avoid TNT or feathers will fly!
      courseA_maze_seq_challenge2_2019: Trace the path to lead the bird to the pig.
        Avoid TNT or feathers will fly!
      courseA_playLab_events1: This is a Play Lab level.  Move blocks to the workspace
        and see what happens!
      courseA_playLab_events1_2018: This is a Play Lab level.  Move blocks to the
        workspace and see what happens!
      courseA_playLab_events1_2019: This is a Play Lab level. Move blocks to the workspace
        and see what happens!
      courseA_playLab_events2: Jorge the Dog wants to say "Hi there."  Can you help
        him?
      courseA_playLab_events2_2018: Jorge the Dog wants to say "Hi there."  Can you
        help him?
      courseA_playLab_events2_2019: Jorge the Dog wants to say "Hi there." Can you
        help him?
      courseA_playLab_events3: Connect the `move left` block to the `when left` event
        block that is already in the workspace.
      courseA_playLab_events3_2018: Connect the `move left` block to the `when left`
        event block that is already in the workspace.
      courseA_playLab_events3_2019: Connect the `move left` block to the `when left`
        event block that is already in the workspace. Use the arrow keys or press
        the arrow buttons to move Jorge to the flag and finish the level!
      courseA_playLab_events4: Add blocks for moving right when the `right` button
        is clicked.
      courseA_playLab_events4_2018: Add another event block to get Jorge to move right
        when the `right` button is clicked.
      courseA_playLab_events4_2019: Now, add another event block to get Jorge to move
        right when the right arrow button is clicked. Use the arrow keys or press
        the arrow buttons to move Jorge to both flags and finish the level!
      courseA_playLab_events5: Add events to have Jorge move up and down when the
        `up` and `down` buttons are pressed.
      courseA_playLab_events5_2018: Add events to have Jorge move up and down when
        the `up` and `down` buttons are pressed.
      courseA_playLab_events5_2019: Add events to have Jorge move up and down when
        the `up` and `down` buttons are pressed. Make Jorge get the flags to finish
        the level!
      courseA_playLab_events6: Make this more interesting by changing the background
        and playing a random sound when Jorge is clicked.
      courseA_playLab_events6_2018: Make this more interesting by changing the background
        and playing a random sound when Jorge is clicked.
      courseA_playLab_events6_2019: Make this more interesting by changing the background
        and playing a random sound when Jorge is clicked. When your code is ready,
        click on Jorge to try it out!
      courseA_playLab_events7: Add anything you want to this game.  Can you make the
        dinosaur disappear when Jorge runs into him?
      courseA_playLab_events7_2018: _Freeplay:_ Add anything you want to this game.
      courseA_playLab_events7_2019: _Freeplay:_ Add anything you want to this game.
      courseA_playlab_events_challenge1: Can you write code to show the rest of my
        friends? The hints will help you do this project step-by-step.
      courseA_playlab_events_challenge1_2018: Can you write code to show the rest
        of my friends? The hints will help you do this project step-by-step.
      courseA_playlab_events_challenge1_2019: Can you write code to show the rest
        of my friends? The hints will help you do this project step-by-step.
      courseA_playlab_events_challenge2: Give everyone something to do when you click
        on them.
      courseA_playlab_events_challenge2_2018: Give everyone something to do when you
        click on them.
      courseA_playlab_events_challenge2_2019: Give everyone something to do when you
        click on them.
      courseA_video_events: Need a better playlab/events combo
      courseA_video_events_2018: Need a better playlab/events combo
      courseA_video_events_2019: Need a better playlab/events combo
      courseB_Scrat_ramp1_2018: For this puzzle, snap the blocks together and press
        "▶ Run"!
      courseB_Scrat_ramp1_2019: For this puzzle, snap the blocks together and press
        "▶ Run"!
      courseB_Scrat_ramp2_2018: Snap all blocks together to finish your code, then
        click "▶ Run".
      courseB_Scrat_ramp2_2019: Snap all blocks together to finish your code, then
        click "▶ Run".
      courseB_Scrat_ramp3a_2018: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseB_Scrat_ramp3a_2019: Add a `North` block to the bottom of the other blocks
        to finish this code, then click "▶ Run".
      courseB_Scrat_ramp3b_2018: Drag the extra block back to the toolbox to throw
        it away.
      courseB_Scrat_ramp3b_2019: Drag the extra block back to the toolbox to throw
        it away.
      courseB_Scrat_ramp4a_2018: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseB_Scrat_ramp4a_2019: Can you figure out which block you need to add to
        the bottom of the other blocks to finish this code?
      courseB_Scrat_ramp5a_2018: Try this one all by yourself!
      courseB_Scrat_ramp5a_2019: Try this one all by yourself!
      courseB_artist_loops1: This is a new type of puzzle called "Artist". Play with
        the level and draw something fun.
      courseB_artist_loops10: Use what you have learned to draw a picture of what
        you think the artist saw when he got home.
      courseB_artist_loops10_2018: Use what you have learned to draw a picture of
        what you think the artist saw when he got home.
      courseB_artist_loops10_2019: Use what you have learned to draw a picture of
        what you think the artist saw when he got home.
      courseB_artist_loops1_2018: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseB_artist_loops1_2019: This is a new type of puzzle called "Artist". Play
        with the level and draw something fun.
      courseB_artist_loops2: The Artist is trying to draw a line **6** times, but
        can't get it right.  Can you help?
      courseB_artist_loops2_2018: The Artist is trying to draw a line **6** times,
        but can't get it right.  Can you help?
      courseB_artist_loops2_2019: The Artist is trying to draw a line **6** times,
        but can't get it right.  Can you help?
      courseB_artist_loops3: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops3_2018: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops3_2019: Help the artist draw a line 7 times to make a garden
        wall.
      courseB_artist_loops4: 'Now we need to get the soil ready to plant. Find the
        bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops4_2018: 'Now we need to get the soil ready to plant. Find
        the bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops4_2019: 'Now we need to get the soil ready to plant. Find
        the bugs in the code and help the artist prepare the ground. '
      courseB_artist_loops5: Time to fix the stairs!  Repeat this pattern **5** times
        so the artist can reach the top of the bushes.
      courseB_artist_loops5_2018: Time to fix the stairs!  Repeat this pattern **5**
        times so the artist can reach the top of the bushes.
      courseB_artist_loops5_2019: Time to fix the stairs!  Repeat this pattern **5**
        times so the artist can reach the top of the bushes.
      courseB_artist_loops6: Climb the vine and see where it goes?
      courseB_artist_loops6_2018: Climb the vine and see where it goes?
      courseB_artist_loops6_2019: Climb the vine and see where it goes?
      courseB_artist_loops7: "**Challenge:**  It's a hidden garden! Let's walk around."
      courseB_artist_loops7_2018: "**Challenge:**  It's a hidden garden! Let's walk
        around."
      courseB_artist_loops7_2019: "**Challenge:**  It's a hidden garden! Let's walk
        around."
      courseB_artist_loops8: Time to head home. Can you fix this ladder using only
        one block to help the artist get down?
      courseB_artist_loops8_2018: Time to head home. Can you fix this ladder using
        only one block to help the artist get down?
      courseB_artist_loops8_2019: Time to head home. Can you fix this ladder using
        only one block to help the artist get down?
      courseB_artist_loops9: Let's take the short way home, over the pond. Can you
        help the artist stay on the stones?
      courseB_artist_loops9_2018: Let's take the short way home, over the pond. Can
        you help the artist stay on the stones?
      courseB_artist_loops9_2019: Let's take the short way home, over the pond. Can
        you help the artist stay on the stones?
      courseB_artist_loops_challenge1: '"It''s time to toss the dice! Can you help
        me draw these?"'
      courseB_artist_loops_challenge1_2018: '"It''s time to toss the dice! Can you
        help me draw these?"'
      courseB_artist_loops_challenge1_2019: '"It''s time to toss the dice! Can you
        help me draw these?"'
      courseB_artist_loops_challenge2: Draw as many X's as you can. Can you get 3
        in a row?
      courseB_artist_loops_challenge2_2018: Draw as many X's as you can. Can you get
        3 in a row?
      courseB_artist_loops_challenge2_2019: Draw as many X's as you can. Can you get
        3 in a row?
      courseB_collector_loops1: This is Laurel the Adventurer!  Can you move her around
        and get treasure?
      courseB_collector_loops10: Help Laurel get all of the treasure from this cave.
      courseB_collector_loops10_2018: Help Laurel get all of the treasure from this
        cave.
      courseB_collector_loops10_2019: Help Laurel get all of the treasure from this
        cave.
      courseB_collector_loops11: Eureka!  Get as much treasure as you can!
      courseB_collector_loops11_2018: Eureka!  Get as much treasure as you can!
      courseB_collector_loops11_2019: Eureka!  Get as much treasure as you can!
      courseB_collector_loops1_2018: Get at least one piece of treasure without mistakes
        to pass!
      courseB_collector_loops1_2019: Get at least one piece of treasure without mistakes
        to pass!
      courseB_collector_loops2: Get all four piles to pass this level.
      courseB_collector_loops2_2018: Get all four piles to pass this level.
      courseB_collector_loops2_2019: Get all four piles to pass this level.
      courseB_collector_loops3: How can Laurel get all five piles of treasure using
        only one `E -->` block?
      courseB_collector_loops3_2018: How can Laurel get all five piles of treasure
        using only one `E -->` block?
      courseB_collector_loops3_2019: How can Laurel get all five piles of treasure
        using only one `E -->` block?
      courseB_collector_loops4: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops4_2018: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops4_2019: Fix Laurel's path to get all of this treasure!
      courseB_collector_loops5: 'Add to the code from the last puzzle to get all of
        the treasure. '
      courseB_collector_loops5_2018: 'Add to the code from the last puzzle to get
        all of the treasure. '
      courseB_collector_loops5_2019: 'Add to the code from the last puzzle to get
        all of the treasure. '
      courseB_collector_loops6: Figure out the code to help Laurel get all of the
        treasure!
      courseB_collector_loops6_2018: Figure out the code to help Laurel get all of
        the treasure!
      courseB_collector_loops6_2019: Figure out the code to help Laurel get all of
        the treasure!
      courseB_collector_loops7: Write the code to get all of this treasure.
      courseB_collector_loops7_2018: Write the code to get all of this treasure.
      courseB_collector_loops7_2019: Write the code to get all of this treasure.
      courseB_collector_loops8: "**Challenge:** The treasure goes all the way down
        these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops8_2018: "**Challenge:** The treasure goes all the way
        down these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops8_2019: "**Challenge:** The treasure goes all the way
        down these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops9: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops9_2018: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops9_2019: _"Help me get the treasure from this deep valley."_
      courseB_collector_loops_challenge1: 'This time you have limited blocks. Get
        all of the treasure! '
      courseB_collector_loops_challenge1_2018: 'This time you have limited blocks.
        Get all of the treasure! '
      courseB_collector_loops_challenge1_2019: 'This time you have limited blocks.
        Get all of the treasure! '
      courseB_collector_loops_challenge2: Let's get the treasure! Help me across each
        row then come back to start the next row. Can you find a pattern?
      courseB_collector_loops_challenge2a: Help Laurel get at least **5** pieces of
        treasure to finish this puzzle.
      courseB_collector_loops_challenge2a_2018: Help Laurel get at least **5** pieces
        of treasure to finish this puzzle.
      courseB_collector_loops_challenge2a_2019: Help Laurel get at least **5** pieces
        of treasure to finish this puzzle.
      courseB_iceage_loops1: Help Scrat across the ice to get to the acorn!
      courseB_iceage_loops10: Help Scrat get all the way over to the acorn!
      courseB_iceage_loops10_2019: Help Scrat get all the way over to the acorn!
      courseB_iceage_loops11: Help Scrat get to the acorn!
      courseB_iceage_loops11_2019: Help Scrat get to the acorn!
      courseB_iceage_loops12: Get to the acorn any way you can!
      courseB_iceage_loops12_2019: Get to the acorn any way you can!
      courseB_iceage_loops1_2019: Help Scrat across the ice to get to the acorn!
      courseB_iceage_loops2: Use two different move blocks to get to the acorn!
      courseB_iceage_loops2_2019: Use two different move blocks to get to the acorn!
      courseB_iceage_loops3: Can you get to the acorn with just one `W` block?
      courseB_iceage_loops3_2019: Can you get to the acorn with just one `W` block?
      courseB_iceage_loops4: Add one more block to get Scrat all the way to the acorn!
      courseB_iceage_loops4_2019: Add one more block to get Scrat all the way to the
        acorn!
      courseB_iceage_loops6: Can you add a loop to get to the acorn?
      courseB_iceage_loops6_2019: Can you add a loop to get to the acorn?
      courseB_iceage_loops7: 'Scrat really wants that acorn! '
      courseB_iceage_loops7_2019: 'Scrat really wants that acorn! '
      courseB_iceage_loops8: 'Can you fix this code? '
      courseB_iceage_loops8_2019: 'Can you fix this code? '
      courseB_iceage_loops9: The acorn is so far away! Can you use loops to help Scrat
        get there?
      courseB_iceage_loops9_2019: The acorn is so far away! Can you use loops to help
        Scrat get there?
      courseB_maze_seq1: "Play with these blocks to see what they make the bird do!
        \n\nGet the bird to the pig to complete the level."
      courseB_maze_seq10: Fix the bugs to get the bird to the pig.
      courseB_maze_seq10_2018: Fix the bugs to get Scrat to the acorn.
      courseB_maze_seq10_2019: Fix the bugs to get Scrat to the acorn.
      courseB_maze_seq11: It's all you!  Get the bird to the pig.
      courseB_maze_seq11_2018: It's all you!  Get Scrat to the acorn.
      courseB_maze_seq11_2019: It's all you!  Get Scrat to the acorn.
      courseB_maze_seq12: Now get that pig any way you can!
      courseB_maze_seq12_2018: Now get that acorn any way you can!
      courseB_maze_seq12_2019: Now get that acorn any way you can!
      courseB_maze_seq1_2018: "Play with these blocks to see what they make Scrat
        do! \n\nGet Scrat to the acorn to complete the level."
      courseB_maze_seq1_2019: "Play with these blocks to see what they make Scrat
        do! \n\nGet Scrat to the acorn to complete the level."
      courseB_maze_seq2: _"A bug! Fix the code to get me to the pig."_
      courseB_maze_seq3: '"Fix the code to get me to the pig!"'
      courseB_maze_seq4: Add 2 blocks to get the bird to the pig.
      courseB_maze_seq4_2018: Use **2** movement blocks to get the Scrat to the acorn.
      courseB_maze_seq4_2019: Use **2** movement blocks to get the Scrat to the acorn.
      courseB_maze_seq5: Now try this puzzle from the start!
      courseB_maze_seq5_2018: This puzzle is a little tricky!
      courseB_maze_seq5_2019: This puzzle is a little tricky!
      courseB_maze_seq6: Move one way, then another to get the bird to the pig!
      courseB_maze_seq6_2018: Move one way, then another to get Scrat to the acorn!
      courseB_maze_seq6_2019: Move one way, then another to get Scrat to the acorn!
      courseB_maze_seq7: Figure out what is missing and then add blocks to get the
        bird to the pig!
      courseB_maze_seq7_2018: Figure out what is missing and then add blocks to get
        Scrat to the acorn!
      courseB_maze_seq7_2019: Figure out what is missing and then add blocks to get
        Scrat to the acorn!
      courseB_maze_seq8: Your turn!  What do you need to do to get the bird to the
        pig?
      courseB_maze_seq8_2018: Your turn!  What do you need to do to get Scrat to the
        acorn?
      courseB_maze_seq8_2019: Your turn!  What do you need to do to get Scrat to the
        acorn?
      courseB_maze_seq9: 'Challenge: Move around the TNT to get the bird to the pig.'
      courseB_maze_seq9_2018: 'Challenge: Move around the broken ice to get Scrat
        to the acorn.'
      courseB_maze_seq9_2019: 'Challenge: Move around the broken ice to get Scrat
        to the acorn.'
      courseB_maze_seq_challenge1: Can you find a path before you run out of blocks?
      courseB_maze_seq_challenge1_2018: Can you find a path before you run out of
        blocks?
      courseB_maze_seq_challenge1_2019: Can you find a path before you run out of
        blocks?
      courseB_maze_seq_challenge2: Debug this level. These are the right blocks, but
        they're in the wrong order!
      courseB_maze_seq_challenge2_2018: Debug this level. These are the right blocks,
        but they're in the wrong order!
      courseB_maze_seq_challenge2_2019: Debug this level. These are the right blocks,
        but they're in the wrong order!
      courseB_playLab_events1: See if you can figure out what each block does.
      courseB_playLab_events1_2018: See if you can figure out what each block does.
      courseB_playLab_events1_2019: See if you can figure out what each block does.
      courseB_playlab_events2: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events2_2018: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events2_2019: Have Daisy the Dragon say something when you click
        "Run".
      courseB_playlab_events3: Use an event to make Daisy the Dragon switch to a random
        mood when you click on her.
      courseB_playlab_events3_2018: Use an event to make Daisy the Dragon switch to
        a random mood when you click on her.
      courseB_playlab_events3_2019: Use an event to make Daisy the Dragon switch to
        a random mood when you click on her.
      courseB_playlab_events4: Knight time!  Add an event so that the knight moves
        toward the dragon when the left arrow is clicked.
      courseB_playlab_events4_2018: Get the dragon to finish this level!
      courseB_playlab_events4_2019: Get the dragon to finish this level!
      courseB_playlab_events5: Now add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events5_2018: Add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events5_2019: Add an event so that the knight runs away from
        the dragon when you press the right arrow.
      courseB_playlab_events6: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events6_2018: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events6_2019: |-
        Help your knight get all of the flags!

        To do this, you'll need to add events to help the knight move up, down, left, and right.
      courseB_playlab_events7: Make this game fun by setting the knight to vanish
        when he runs into the dragon on his way to get the flags!  Play a sound when
        they collide to make it feel more real.
      courseB_playlab_events7_2018: "1.  Set the knight to vanish when he runs into
        the dragon.    \n2.  Play a sound when they collide to make it feel more real.
        \ "
      courseB_playlab_events7_2019: "1.  Set the knight to vanish when he runs into
        the dragon.    \n2.  Play a sound when they collide to make it feel more real.
        \ "
      courseB_playlab_eventsFP: Use your imagination. What can you do to make this
        game more fun?
      courseB_playlab_eventsFP_2018: "**Free play:** Use your imagination. What can
        you do to make this game more fun?"
      courseB_playlab_eventsFP_2019: "**Free play:** Use your imagination. What can
        you do to make this game more fun?"
      courseB_playlab_events_challenge1: 'Make the animals move down when you press
        ▼. '
      courseB_playlab_events_challenge1_2018: 'Make the animals move down when you
        press ▼. '
      courseB_playlab_events_challenge1_2019: 'Make the animals move down when you
        press ▼. '
      courseB_playlab_events_challenge2: "La oss gjøre slik at dyr forsvinner når
        du trykker på dem! Prøv å spille med hunden nå og etterpå la de andre dyrene
        få være med på moroa!\\\r\nDu kan også legge til lyder og poengsummer for
        å lage et sisten-spill!"
      courseB_playlab_events_challenge2_2018: "La oss gjøre slik at dyr forsvinner
        når du trykker på dem! Prøv å spille med hunden nå og etterpå la de andre
        dyrene få være med på moroa!\\\r\nDu kan også legge til lyder og poengsummer
        for å lage et sisten-spill!"
      courseB_playlab_events_challenge2_2019: "La oss gjøre slik at dyr forsvinner
        når du trykker på dem! Prøv å spille med hunden nå og etterpå la de andre
        dyrene få være med på moroa!\\\r\nDu kan også legge til lyder og poengsummer
        for å lage et sisten-spill!"
      courseB_starWars_prog1: '"Go get the scrap metal, BB-8!"'
      courseB_starWars_prog10: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog10_2018: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog10_2019: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog11: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog11_2018: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog11_2019: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog1_2018: '"Go get the scrap metal, BB-8!"'
      courseB_starWars_prog1_2019: '"Go get the scrap metal, BB-8!"'
      courseB_starWars_prog2: Get all the metal.
      courseB_starWars_prog2_2018: Get all the metal.
      courseB_starWars_prog2_2019: Get all the metal.
      courseB_starWars_prog3: Get all the scrap metal
      courseB_starWars_prog3_2018: Get all the scrap metal
      courseB_starWars_prog3_2019: Get all the scrap metal
      courseB_starWars_prog4: Get all the scrap metal
      courseB_starWars_prog4_2018: Get all the scrap metal
      courseB_starWars_prog4_2019: Get all the scrap metal
      courseB_starWars_prog5: Get the scrap metal
      courseB_starWars_prog5_2018: Get the scrap metal
      courseB_starWars_prog5_2019: Get the scrap metal
      courseB_starWars_prog6: Get all the scrap metal
      courseB_starWars_prog6_2018: Get all the scrap metal
      courseB_starWars_prog6_2019: Get all the scrap metal
      courseB_starWars_prog7: Go get it!
      courseB_starWars_prog7_2018: Go get it!
      courseB_starWars_prog7_2019: Go get it!
      courseB_starWars_prog8: "**Challenge:** Help BB-8 gather the glowing scrap metal"
      courseB_starWars_prog8_2018: "**Challenge:** Help BB-8 gather the glowing scrap
        metal"
      courseB_starWars_prog8_2019: "**Challenge:** Help BB-8 gather the glowing scrap
        metal"
      courseB_starWars_prog9: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog9_2018: Help BB-8 gather the glowing scrap metal
      courseB_starWars_prog9_2019: Help BB-8 gather the glowing scrap metal
      courseC19_playLab_EOC1: Choose a background and map, and pick an actor to be
        your game's hero.
      courseC19_playLab_EOC2: Use events and actions to make your hero move. Get to
        the targets.
      courseC19_playLab_EOC3: Add two or more additional actors to your game and make
        them move.
      courseC19_playLab_EOC4: Find some interesting ways to change the score in your
        game. Get the score to show something other than 0 to continue.
      courseC19_playLab_EOC5: Great job! You have all the basic components of a working
        game. Now spend some time making sure the game works the way you want.
      courseC19_playLab_EOC6: You've finished! Now you can play your game or share
        it with your friends and classmates!
      courseC_PlayLab_events1: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events1_2018: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events1_2019: Make Jorge the Dog (actor 1) say "Hi there."
      courseC_PlayLab_events2: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events2_2018: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events2_2019: Can you make Jorge the Dog (actor 1) say something,
        then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events3: Kan du skrive et program som får Jorge (skuespiller
        1) til å flytte mot katten Olive?
      courseC_PlayLab_events3_2018: Kan du skrive et program som får Jorge (skuespiller
        1) til å flytte mot katten Olive?
      courseC_PlayLab_events3_2019: Kan du skrive et program som får Jorge (skuespiller
        1) til å flytte mot katten Olive?
      courseC_PlayLab_events4: Can you write a program that makes Jorge (actor 1)
        move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches her?
      courseC_PlayLab_events4_2018: Can you write a program that makes Jorge (actor
        1) move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches
        her?
      courseC_PlayLab_events4_2019: Can you write a program that makes Jorge (actor
        1) move to Olive the Cat, and have Olive say "Hi there." when Jorge reaches
        her?
      courseC_PlayLab_events5: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events5_2018: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events5_2019: Can you write a program to make Octavia the Octopus
        say "What's new?" when she is clicked?
      courseC_PlayLab_events6: Now, write a program to make Waddles the Penguin move
        around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events6_2018: Now, write a program to make Waddles the Penguin
        move around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events6_2019: Now, write a program to make Waddles the Penguin
        move around using the up / down / left / right keys to hit all of the targets!
      courseC_PlayLab_events7: The `repeat forever` block allows you to run code over
        and over forever.  Use this block to move Chomp the Dino (actor 2) up and
        down by 400 pixels forever.
      courseC_PlayLab_events7_2018: The `repeat forever` block allows you to run code
        over and over forever.  Use this block to move Chomp the Dino (actor 2) up
        and down by 400 pixels forever.
      courseC_PlayLab_events7_2019: The `repeat forever` block allows you to run code
        over and over forever.  Use this block to move Chomp the Dino (actor 2) up
        and down by 400 pixels forever.
      courseC_PlayLab_events8: "Can you have Waddles (actor 1) play a \"hit\" sound
        and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the game
        to make that happen."
      courseC_PlayLab_events8_2018: "Can you have Waddles (actor 1) play a \"hit\"
        sound and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the
        game to make that happen."
      courseC_PlayLab_events8_2019: "Can you have Waddles (actor 1) play a \"hit\"
        sound and say \"Ouch!\" if he runs into Chomp? \nWhen you're done, play the
        game to make that happen."
      courseC_PlayLab_events9: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_events9_2018: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_events9_2019: "Can you add a block to score a point when Waddles
        the Penguin (actor1) runs into Octavia the Octopus (actor 3)? \nPlay the game
        and move Waddles with the arrows until you score!"
      courseC_PlayLab_eventsA: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_2018: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_2019: |-
        Add blocks to the `when run` event to change the background scene and the speed of Waddles the Penguin.

        Play the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_embed_2019: Let's play a game. Score 5 points by moving
        the Penguin to the Octopus!
      courseC_PlayLab_eventsFP: Create your own story. When you're done, click "Finish"
        to share with friends. See story ideas in the hints.
      courseC_PlayLab_eventsFP_2018: Create your own story. When you're done, click
        "Finish" to share with friends. See story ideas in the hints.
      courseC_PlayLab_eventsFP_2019: Create your own story. When you're done, click
        "Finish" to share with friends. See story ideas in the hints.
      courseC_PlayLab_events_challenge1: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_PlayLab_events_challenge1_2018: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_PlayLab_events_challenge1_2019: "Use a new block to make Waddles automatically
        move back to the start when he runs into the Dinosaur and when he scores a
        point. \nPlay the game and move Waddles with the arrows until you score enough
        points."
      courseC_artist_loop1: Let's add some pizazz!
      courseC_artist_loop1_2018: Let's add some pizazz with a `set pattern` block.
      courseC_artist_loop1_2019: Let's add some pizazz with a `set pattern` block.
      courseC_artist_loops1a: 'Get the artist to the center of the play area, then
        draw a bird using a sticker. '
      courseC_artist_loops1a_2018: 'Get the artist to the center of the play area,
        then draw a bird using a sticker. '
      courseC_artist_loops1a_2019: 'Get the artist to the center of the play area,
        then draw a sticker. '
      courseC_artist_loops1b_2019: 'Change the direction your sticker is facing by
        adding a `turn` command to your code. '
      courseC_artist_loops2a: Now, use a loop to spin your bird around 12 times with
        a 30 degree turn.
      courseC_artist_loops2a_2018: Now, use a loop to spin your bird around 12 times
        with a 30 degree turn.
      courseC_artist_loops2a_2019: Now, use a loop to make more copies of your sticker.
        Try changing the numbers in the turn and repeat blocks to make different patterns.
      courseC_artist_loops3a: Now add a bat!
      courseC_artist_loops3a_2018: Now add a bat!
      courseC_artist_loops3a_2019: Now add a second sticker!
      courseC_artist_loops4a: Try jumping forward by 75 pixels.
      courseC_artist_loops4a_2018: Try jumping forward by 75 pixels.
      courseC_artist_loops4a_2019: Edit your code so that you jump forward between
        drawing the two stickers.
      courseC_artist_loops5a: Try new stickers!
      courseC_artist_loops5a_2018: Try new stickers!
      courseC_artist_loops5a_2019: Try new stickers!
      courseC_artist_loops5b: Try adding lines!
      courseC_artist_loops5b_2018: Try adding lines!
      courseC_artist_loops5b_2019: Try adding lines!
      courseC_artist_loops6a: Add another sticker!
      courseC_artist_loops6a_2018: Add another sticker!
      courseC_artist_loops6a_2019: Add another sticker!
      courseC_artist_loops7a: Play with the loops and angles.
      courseC_artist_loops7a_2018: Play with the loops and angles.
      courseC_artist_loops7a_2019: Play with the loops and angles.
      courseC_artist_loops8a: Now try something on your own!
      courseC_artist_loops8a_2018: Now try something on your own!
      courseC_artist_loops8a_2019: Now try something on your own!
      courseC_artist_loopsPre1a: Time to spin that line around!
      courseC_artist_loopsPre1a_2018: Time to spin that line around!
      courseC_artist_loopsPre1a_2019: Time to spin that line around!
      courseC_artist_loopsPrePre1a: 'Get the artist to the center of the play area,
        then draw a line. '
      courseC_artist_loopsPrePre1a_2018: 'Get the artist to the center of the play
        area, then draw a line. '
      courseC_artist_loopsPrePre1a_2019: 'Get the artist to the center of the play
        area, then draw a line. '
      courseC_artist_prog1: Play with the blocks in the toolbox to see what they do!
      courseC_artist_prog1_2018: Play with the blocks in the toolbox to see what they
        do!
      courseC_artist_prog1_2019: Play with the blocks in the toolbox to see what they
        do!
      courseC_artist_prog2: Drag blocks onto the screen to have the artist draw over
        the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog2_2018: Drag blocks onto the screen to have the artist draw
        over the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog2_2019: Drag blocks onto the screen to have the artist draw
        over the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog3: Each side of the inner square is 100 pixels and all of
        the angles are 90 degrees.
      courseC_artist_prog3_2018: Each side of the inner square is 100 pixels and all
        of the angles are 90 degrees.
      courseC_artist_prog3_2019: Each side of the inner square is 100 pixels and all
        of the angles are 90 degrees.
      courseC_artist_prog4: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog4_2018: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog4_2019: Finish Starla's rocket so she can chase her pet.
      courseC_artist_prog5: 'Dette huset trenger ett tak. Tegn trekanten. Hint: alle
        de tre sidene skal være like lange.'
      courseC_artist_prog5_2018: 'Dette huset trenger ett tak. Tegn trekanten. Hint:
        alle de tre sidene skal være like lange.'
      courseC_artist_prog5_2019: 'Dette huset trenger ett tak. Tegn trekanten. Hint:
        alle de tre sidene skal være like lange.'
      courseC_artist_prog6: Draw this diamond with 200 pixel sides.
      courseC_artist_prog6_2018: Draw this diamond with 200 pixel sides.
      courseC_artist_prog6_2019: Draw this diamond with 200 pixel sides.
      courseC_artist_prog7: "**Challenge:** This tag is a special one!  Can you figure
        out how to draw the outline?"
      courseC_artist_prog7_2018: "**Challenge:** This tag is a special one!  Can you
        figure out how to draw the outline?"
      courseC_artist_prog7_2019: "**Challenge:** This tag is a special one!  Can you
        figure out how to draw the outline?"
      courseC_artist_prog8: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog8_2018: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog8_2019: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog_challenge1: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge1_2018: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge1_2019: 'Draw rooms for each of the animals. '
      courseC_artist_prog_challenge2a: _"Help me paint the yellow lines on this road!"_
      courseC_artist_prog_challenge2a_2018: _"Help me paint the yellow lines on this
        road!"_
      courseC_artist_prog_challenge2a_2019: _"Help me paint the yellow lines on this
        road!"_
      courseC_collector_loops_challenge2: Get at least **5** pieces of treasure!
      courseC_collector_loops_challenge2_2018: Get at least **5** pieces of treasure!
      courseC_collector_loops_challenge2_2019: Get at least **5** pieces of treasure!
      courseC_collector_prog1: Play around with the blocks to see if you can help
        Laurel collect some treasure.
      courseC_collector_prog1_2018: Play around with the blocks to see if you can
        help Laurel collect some treasure.
      courseC_collector_prog1_2019: Play around with the blocks to see if you can
        help Laurel collect some treasure.
      courseC_collector_prog2: Move Laurel to the treasure, then use `collect` to
        pick it up.
      courseC_collector_prog2_2018: Move Laurel to the treasure, then use `collect`
        to pick it up.
      courseC_collector_prog2_2019: Move Laurel to the treasure, then use `collect`
        to pick it up.
      courseC_collector_prog3: Order these blocks to collect the treasure and solve
        the puzzle.
      courseC_collector_prog3_2018: Order these blocks to collect the treasure and
        solve the puzzle.
      courseC_collector_prog3_2019: Order these blocks to collect the treasure and
        solve the puzzle.
      courseC_collector_prog4: Put these blocks in order to collect all of the treasure
        and solve the puzzle.
      courseC_collector_prog4_2018: Put these blocks in order to collect all of the
        treasure and solve the puzzle.
      courseC_collector_prog4_2019: Put these blocks in order to collect all of the
        treasure and solve the puzzle.
      courseC_collector_prog5: These blocks are in the wrong order. Can you fix them?
      courseC_collector_prog5_2018: These blocks are in the wrong order. Can you fix
        them?
      courseC_collector_prog5_2019: These blocks are in the wrong order. Can you fix
        them?
      courseC_collector_prog6: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog6_2018: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog6_2019: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog7: Use blocks from the toolbox to collect all of the treasure.
      courseC_collector_prog7_2018: Use blocks from the toolbox to collect all of
        the treasure.
      courseC_collector_prog7_2019: Use blocks from the toolbox to collect all of
        the treasure.
      courseC_collector_prog8: _"Keep up the good work! Help me collect all of the
        treasure."_
      courseC_collector_prog8_2018: _"Keep up the good work! Help me collect all of
        the treasure."_
      courseC_collector_prog8_2019: _"Keep up the good work! Help me collect all of
        the treasure."_
      courseC_collector_prog9: _"Let's get all of the treasure!"_
      courseC_collector_prog9_2018: _"Let's get all of the treasure!"_
      courseC_collector_prog9_2019: _"Let's get all of the treasure!"_
      courseC_collector_prog_challenge1: Look carefully! Can you collect all **10**
        pieces of treasure?
      courseC_collector_prog_challenge1_2018: Look carefully! Can you collect all
        **10** pieces of treasure?
      courseC_collector_prog_challenge1_2019: Look carefully! Can you collect all
        **10** pieces of treasure?
      courseC_collector_prog_challenge2: Collect at least **10** pieces of treasure
        to finish this challenge!
      courseC_collector_prog_challenge2_2018: Collect at least **10** pieces of treasure
        to finish this challenge!
      courseC_collector_prog_challenge2_2019: Collect at least **10** pieces of treasure
        to finish this challenge!
      courseC_data wizard: "Press Run. \nThe wizard will make animals appear. \n\nCount
        them. \nWhat do you notice?"
      courseC_flappy_events1: Attach the `flap normal amount` block to the `when click`
        event, then press "Run".    Click or tap on the play space to move Flappy
        to the target.
      courseC_flappy_events10: 'Create your own Flappy game! '
      courseC_flappy_events10_2018: 'Create your own Flappy game! '
      courseC_flappy_events10_2019: 'Create your own Flappy game! '
      courseC_flappy_events1_2018: Attach the `flap normal amount` block to the `when
        click` event, then press "Run".    Click or tap on the play space to move
        Flappy to the target.
      courseC_flappy_events1_2019: Attach the `flap normal amount` block to the `when
        click` event, then press "Run".    Click or tap on the play space to move
        Flappy to the target.
      courseC_flappy_events2: Try adding a block that sets the level speed when the
        "Run" button is pressed.  Play the game and flap to the target to continue.
      courseC_flappy_events2_2018: Try adding a block that sets the level speed when
        the "Run" button is pressed.  Play the game and flap to the target to continue.
      courseC_flappy_events2_2019: Try adding a block that sets the level speed when
        the "Run" button is pressed.  Play the game and flap to the target to continue.
      courseC_flappy_events3: Attach the `end game` block to the `when hit the ground`
        event.   Play the game and crash the bird into the ground to continue.
      courseC_flappy_events3_2018: Attach the `end game` block to the `when hit the
        ground` event.   Play the game and crash the bird into the ground to continue.
      courseC_flappy_events3_2019: Attach the `end game` block to the `when hit the
        ground` event.   Play the game and crash the bird into the ground to continue.
      courseC_flappy_events4: Attach a block to the `when hit an obstacle` event so
        that the game ends when Flappy crashes into the first set of pipes.
      courseC_flappy_events4_2018: Attach a block to the `when hit an obstacle` event
        so that the game ends when Flappy crashes into the first set of pipes.
      courseC_flappy_events4_2019: Attach a block to the `when hit an obstacle` event
        so that the game ends when Flappy crashes into the first set of pipes.
      courseC_flappy_events5: Add a block to the `when pass an obstacle` event, then
        press "Run" to score a point by flying Flappy through the first set of pipes.
      courseC_flappy_events5_2018: Add a block to the `when pass an obstacle` event,
        then press "Run" to score a point by flying Flappy through the first set of
        pipes.
      courseC_flappy_events5_2019: Add a block to the `when pass an obstacle` event,
        then press "Run" to score a point by flying Flappy through the first set of
        pipes.
      courseC_flappy_events6: See if you can still score a point after making Flappy
        flap either a smaller or larger amount each time you click.
      courseC_flappy_events6_2018: See if you can still score a point after making
        Flappy flap either a smaller or larger amount each time you click.
      courseC_flappy_events6_2019: See if you can still score a point after making
        Flappy flap either a smaller or larger amount each time you click.
      courseC_flappy_events7: Next, try changing the scene by attaching a block to
        the `when run` event.
      courseC_flappy_events7_2018: Next, try changing the scene by attaching a block
        to the `when run` event.
      courseC_flappy_events7_2019: Next, try changing the scene by attaching a block
        to the `when run` event.
      courseC_flappy_events8: Try setting a **random** scene when other events happen...for
        example, when passing an obstacle.
      courseC_flappy_events8_2018: Try setting a **random** scene when other events
        happen...for example, when passing an obstacle.
      courseC_flappy_events8_2019: Try setting a **random** scene when other events
        happen...for example, when passing an obstacle.
      courseC_flappy_events9: To mix things up, instead of ending the game when Flappy
        hits an obstacle, try setting the score back to 0.
      courseC_flappy_events9_2018: To mix things up, instead of ending the game when
        Flappy hits an obstacle, try setting the score back to 0.
      courseC_flappy_events9_2019: To mix things up, instead of ending the game when
        Flappy hits an obstacle, try setting the score back to 0.
      courseC_harvester_loops1: Use loops to pick all of the pumpkins.
      courseC_harvester_loops10: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops10_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops10_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops11: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops11_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops11_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops1_2018: Use loops to pick all of the pumpkins.
      courseC_harvester_loops1_2019: Use loops to pick all of the pumpkins.
      courseC_harvester_loops2: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops2_2018: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops2_2019: Can you combine two different loops to move toward
        the pumpkins, then collect them all?
      courseC_harvester_loops3: Collect all of the pumpkins.
      courseC_harvester_loops3_2018: Collect all of the pumpkins.
      courseC_harvester_loops3_2019: Collect all of the pumpkins.
      courseC_harvester_loops4: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops4_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops4_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops5: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops5_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops5_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops6: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops6_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops6_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops7: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops7_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops7_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops8: "**Challenge:** Collect all of the corn and all of
        the pumpkins."
      courseC_harvester_loops8_2018: "**Challenge:** Collect all of the corn and all
        of the pumpkins."
      courseC_harvester_loops8_2019: "**Challenge:** Collect all of the corn and all
        of the pumpkins."
      courseC_harvester_loops9: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops9_2018: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops9_2019: Collect all of the corn and all of the pumpkins.
      courseC_harvester_loops_challenge1a: Collect all of the corn.
      courseC_harvester_loops_challenge1a_2018: Collect all of the corn.
      courseC_harvester_loops_challenge1a_2019: Collect all of the corn.
      courseC_harvester_loops_challenge2: Collect all of the lettuce. Avoid the trees
        and fields!
      courseC_harvester_loops_challenge2_2018: Collect all of the lettuce. Avoid the
        trees and fields!
      courseC_harvester_loops_challenge2_2019: Collect all of the lettuce. Avoid the
        trees and fields!
      courseC_maze_debugging1: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging1_2018: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging1_2019: Fix the code to help get Scrat get to the acorn.
      courseC_maze_debugging2: Use your debugging skills to get Scrat to the acorn.
      courseC_maze_debugging2_2018: Use your debugging skills to get Scrat to the
        acorn.
      courseC_maze_debugging2_2019: Use your debugging skills to get Scrat to the
        acorn.
      courseC_maze_debugging3: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging3_2018: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging3_2019: Remove blocks to get Scrat to the acorn!
      courseC_maze_debugging4: Someone has their directions mixed up! Can you help?
      courseC_maze_debugging4_2018: Someone has their directions mixed up! Can you
        help?
      courseC_maze_debugging4_2019: Someone has their directions mixed up! Can you
        help?
      courseC_maze_debugging5: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging5_2018: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging5_2019: Debug this level by rearranging and changing blocks.
      courseC_maze_debugging6: Figure out what is wrong and get Scrat to the acorn.
      courseC_maze_debugging6_2018: Figure out what is wrong and get Scrat to the
        acorn.
      courseC_maze_debugging6_2019: Figure out what is wrong and get Scrat to the
        acorn.
      courseC_maze_debugging7: "**Challenge:** Debug this level by rearranging, adding,
        and deleting blocks."
      courseC_maze_debugging7_2018: "**Challenge:** Debug this level by rearranging,
        adding, and deleting blocks."
      courseC_maze_debugging7_2019: "**Challenge:** Debug this level by rearranging,
        adding, and deleting blocks."
      courseC_maze_debugging9: Debug this level to get Scrat to the acorn.
      courseC_maze_debugging9_2018: Debug this level to get Scrat to the acorn.
      courseC_maze_debugging9_2019: Use the blocks in the toolbox to build your program.
        Get the bird to the pig.
      courseC_maze_debugging_challenge1: Help Scrat decide which way to turn to get
        to the acorn.
      courseC_maze_debugging_challenge1_2018: Help Scrat decide which way to turn
        to get to the acorn.
      courseC_maze_debugging_challenge1_2019: Help Scrat decide which way to turn
        to get to the acorn.
      courseC_maze_debugging_challenge2: Help Scrat reach the acorn with only four
        `turn` commands.
      courseC_maze_debugging_challenge2_2018: Help Scrat reach the acorn with only
        four `turn` commands.
      courseC_maze_debugging_challenge2_2019: Help Scrat reach the acorn with only
        four `turn` commands.
      courseC_maze_loops_challenge1a: 'Now Scrat wants to try using loops to find
        his acorn! '
      courseC_maze_loops_challenge1a_2018: 'Now Scrat wants to try using loops to
        find his acorn! '
      courseC_maze_loops_challenge1a_2019: 'Now Scrat wants to try using loops to
        find his acorn! '
      courseC_maze_programming1: For this puzzle, drag all of the blocks together
        and click "Run" to watch it go!
      courseC_maze_programming1_2018: For this puzzle, drag all of the blocks together
        and click "Run" to watch it go!
      courseC_maze_programming1_2019: For this puzzle, drag all of the blocks together
        and click "Run" to watch it go!
      courseC_maze_programming2: Drag an extra `move forward` block out of the toolbox
        to finish your code.
      courseC_maze_programming2_2018: Drag an extra `move forward` block out of the
        toolbox to finish your code.
      courseC_maze_programming2_2019: Drag an extra `move forward` block out of the
        toolbox to finish your code.
      courseC_maze_programming3: There is one extra block that is going to cause the
        bird to crash. Throw it away by dragging it back to the toolbox.
      courseC_maze_programming3_2018: There is one extra block that is going to cause
        the bird to crash. Throw it away by dragging it back to the toolbox.
      courseC_maze_programming3_2019: There is one extra block that is going to cause
        the bird to crash. Throw it away by dragging it back to the toolbox.
      courseC_maze_programming4: Avoid TNT or feathers will fly!
      courseC_maze_programming4_2018: Avoid TNT or feathers will fly!
      courseC_maze_programming4_2019: Avoid TNT or feathers will fly!
      courseC_maze_programming5: Avoid the TNT.
      courseC_maze_programming5_2018: Avoid the TNT.
      courseC_maze_programming5_2019: Avoid the TNT.
      courseC_maze_programming6: '"Keep calm and help me find the bad pig. Otherwise
        I might get angry!"'
      courseC_maze_programming6_2018: '"Keep calm and help me find the bad pig. Otherwise
        I might get angry!"'
      courseC_maze_programming6_2019: '"Keep calm and help me find the bad pig. Otherwise
        I might get angry!"'
      courseC_maze_programming7: "**Challenge:** This code has a lot of bugs. You'll
        need to remove some blocks and add others."
      courseC_maze_programming7_2018: "**Challenge:** This code has a lot of bugs.
        You'll need to remove some blocks and add others."
      courseC_maze_programming7_2019: "**Challenge:** This code has a lot of bugs.
        You'll need to remove some blocks and add others."
      courseC_maze_programming8: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_2018: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_2019: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_predict1: _"Keep calm and help me find the bad pig."_
      courseC_maze_programming8_predict1_2018: _"Keep calm and help me find the bad
        pig."_
      courseC_maze_programming8_predict1_2019: _"Keep calm and help me find the bad
        pig."_
      courseC_maze_programming9: _"Now, help me sneak up on the pig any way you want
        to!"_
      courseC_maze_programming9_2018: _"Now, help me sneak up on the pig any way you
        want to!"_
      courseC_maze_programming9_2019: _"Now, help me sneak up on the pig any way you
        want to!"_
      courseC_maze_programming_challenge1: 'The pig is hiding, and the goal is to
        find it. '
      courseC_maze_programming_challenge1_2018: 'The pig is hiding, and the goal is
        to find it. '
      courseC_maze_programming_challenge1_2019: 'The pig is hiding, and the goal is
        to find it. '
      courseC_maze_programming_challenge2: Sometimes there is more than one way to
        solve the same problem. Sometimes it's faster to go backwards than it is to
        go forwards!
      courseC_maze_programming_challenge2_2018: Sometimes there is more than one way
        to solve the same problem. Sometimes it's faster to go backwards than it is
        to go forwards!
      courseC_maze_programming_challenge2_2019: Sometimes there is more than one way
        to solve the same problem. Sometimes it's faster to go backwards than it is
        to go forwards!
      courseC_starWars_loops1: BB-8 will pick up any metal scraps along the path where
        he moves. Use 5 of the same block to get BB-8 to pick up all of the scrap
        metal in the play area.
      courseC_starWars_loops10: You are doing great! Keep it up!
      courseC_starWars_loops10_2018: You are doing great! Keep it up!
      courseC_starWars_loops10_2019: You are doing great! Keep it up!
      courseC_starWars_loops10_predict2: You are doing great! Keep it up!
      courseC_starWars_loops10_predict2_2018: You are doing great! Keep it up!
      courseC_starWars_loops10_predict2_2019: You are doing great! Keep it up!
      courseC_starWars_loops11: You are almost there! This time, choose any path you
        like!
      courseC_starWars_loops11_2018: You are almost there! This time, choose any path
        you like!
      courseC_starWars_loops11_2019: You are almost there! This time, choose any path
        you like!
      courseC_starWars_loops1_2018: BB-8 will pick up any metal scraps along the path
        where he moves. Use 5 of the same block to get BB-8 to pick up all of the
        scrap metal in the play area.
      courseC_starWars_loops1_2019: BB-8 will pick up any metal scraps along the path
        where he moves. Use 5 of the same block to get BB-8 to pick up all of the
        scrap metal in the play area.
      courseC_starWars_loops1_predict1: BB-8 will pick up any metal scraps along the
        path where he moves. Use 5 of the same block to get BB-8 to pick up all of
        the scrap metal in the play area.
      courseC_starWars_loops1_predict1_2018: BB-8 will pick up any metal scraps along
        the path where he moves. Use 5 of the same block to get BB-8 to pick up all
        of the scrap metal in the play area.
      courseC_starWars_loops1_predict1_2019: BB-8 will pick up any metal scraps along
        the path where he moves. Use 5 of the same block to get BB-8 to pick up all
        of the scrap metal in the play area.
      courseC_starWars_loops2: To get all the scrap metal, try creating a loop that
        uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_2018: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_2019: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops2_copy: To get all the scrap metal, try creating a loop
        that uses only one block inside of a `repeat` block.
      courseC_starWars_loops4: In this puzzle, two `repeat` loops will help you get
        BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops4_2018: In this puzzle, two `repeat` loops will help you
        get BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops4_2019: In this puzzle, two `repeat` loops will help you
        get BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops4_copy: In this puzzle, two `repeat` loops will help you
        get BB-8 to all of the scrap metal with the fewest number of blocks!
      courseC_starWars_loops5: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops5_2018: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops5_2019: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops5_copy: Get BB-8 to pick up all the scrap metal as quickly
        as possible!
      courseC_starWars_loops6: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_2018: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_2019: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops6_copy: Loops even work with more than one block inside!  Can
        you loop this sequence?
      courseC_starWars_loops7: Can you try to get all the scrap metal using just one
        loop? Try programming it all out then finding the repeating code to put in
        a loop.
      courseC_starWars_loops7_2018: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops7_2019: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops7_copy: Can you try to get all the scrap metal using just
        one loop? Try programming it all out then finding the repeating code to put
        in a loop.
      courseC_starWars_loops9: Use what you have learned to pick up all of the scrap
        metal!
      courseC_starWars_loops9_2018: Use what you have learned to pick up all of the
        scrap metal!
      courseC_starWars_loops9_2019: Use what you have learned to pick up all of the
        scrap metal!
      courseD_artist_1_2018: 'Draw a hexagon with **50** pixel long sides.  '
      courseD_artist_1_2018_2019: 'Draw a hexagon with **50** pixel long sides.  '
      courseD_artist_2_2018: Now, turn right by **60** degrees, then draw a straight
        line **150** pixels long and jump back to the center of the play area.
      courseD_artist_2_2018_2019: Now, turn right by **60** degrees, then draw a straight
        line **150** pixels long and jump back to the center of the play area.
      courseD_artist_3_2018: 'Nest all of the code inside of another `repeat` loop
        and run it a total of **6** times. '
      courseD_artist_3_2018_2019: 'Nest all of the code inside of another `repeat`
        loop and run it a total of **6** times. '
      courseD_artist_4_2018: Add a tiny shape to the end of your line!
      courseD_artist_4_2018_2019: Add a tiny shape to the end of your line!
      courseD_artist_5_2018: Play with the snowflakes!
      courseD_artist_5_2018_2019: Play with the snowflakes!
      courseD_artist_6_2018: Try changing your long 150 pixel line into 6 short lines
        of **25** pixels, with little turns at the end.
      courseD_artist_6_2018_2019: Try changing your long 150 pixel line into 6 short
        lines of **25** pixels, with little turns at the end.
      courseD_artist_binary1: Bruk blokkene under til å la kunstneren tegne "01010101"
        binært i første rad.
      courseD_artist_binary1_2018: Bruk blokkene under til å la kunstneren tegne "01010101"
        binært i første rad.
      courseD_artist_binary1_2019: Bruk blokkene under til å la kunstneren tegne "01010101"
        binært i første rad.
      courseD_artist_binary2: Run this code to see how the artist uses binary to draw
        this pattern.
      courseD_artist_binary2_2018: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_artist_binary2_2019: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_artist_binary3: Which of the binary strings below could you loop 8 times
        to draw this image?
      courseD_artist_binary3_2018: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_artist_binary3_2019: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_artist_binary4: Kan du tegne dette mønsteret ved å kjøre en løkke over
        en tresifret binærstreng (0-er og 1-erer)?
      courseD_artist_binary4_2018: Kan du tegne dette mønsteret ved å kjøre en løkke
        over en tresifret binærstreng (0-er og 1-erer)?
      courseD_artist_binary4_2019: Kan du tegne dette mønsteret ved å kjøre en løkke
        over en tresifret binærstreng (0-er og 1-erer)?
      courseD_artist_binary5: "Each binary string below represents one row of this
        picture. \n\nCan you rearrange them so it draws a smiley face instead of a
        frown?"
      courseD_artist_binary5_2018: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_artist_binary5_2019: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_artist_binary6: Hvilken 6-siftret binærstreng, repetert 11 ganger, vil
        tegne dette bildet?
      courseD_artist_binary6_2018: Hvilken 6-siftret binærstreng, repetert 11 ganger,
        vil tegne dette bildet?
      courseD_artist_binary6_2019: Hvilken 6-siftret binærstreng, repetert 11 ganger,
        vil tegne dette bildet?
      courseD_artist_binary7: Hva er den korteste binærstrengen du kan repetere for
        å tegne dette bildet?
      courseD_artist_binary7_2018: Hva er den korteste binærstrengen du kan repetere
        for å tegne dette bildet?
      courseD_artist_binary7_2019: Hva er den korteste binærstrengen du kan repetere
        for å tegne dette bildet?
      courseD_artist_binary8: Finish the code to create this drawing.
      courseD_artist_binary8_2018: Finish the code to create this drawing.
      courseD_artist_binary8_2019: Finish the code to create this drawing.
      courseD_artist_binary8_predict1: Finish the code to create this drawing.
      courseD_artist_binary8_predict1_2018: Finish the code to create this drawing.
      courseD_artist_binary8_predict1_2019: Finish the code to create this drawing.
      courseD_artist_binaryFP: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binaryFP8: "**Free Play:**  Draw whatever you want in binary! "
      courseD_artist_binaryFP_2018: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binaryFP_2019: |-
        Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!

        See what happens when we start to get creative with the bits!
      courseD_artist_binary_challenge1_2018: You can only use each binary value (0
        or 1) once each in this puzzle. Try using nested loops to complete this drawing.
      courseD_artist_binary_challenge1_2019: You can only use each binary value (0
        or 1) once each in this puzzle. Try using nested loops to complete this drawing.
      courseD_artist_binary_challenge2_2018: Are you persistent enough to restore
        this logo back to normal?
      courseD_artist_binary_challenge2_2019: Are you persistent enough to restore
        this logo back to normal?
      courseD_artist_nestedLoops1: |-
        Draw a triangle to kickstart this stage.\
        (Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)
      courseD_artist_nestedLoops10: Take the squares from before, but this time only
        make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops10_2018: Take the squares from before, but this time
        only make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops10_2019: Take the squares from before, but this time
        only make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops1_2018: |-
        Draw a triangle to kickstart this stage.\
        (Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)
      courseD_artist_nestedLoops1_2019: |-
        Draw a triangle to kickstart this stage.\
        (Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)
      courseD_artist_nestedLoops1a: 'Now loop the triangle 6 times. '
      courseD_artist_nestedLoops1a_2018: 'Now loop the triangle 6 times. '
      courseD_artist_nestedLoops1a_2019: 'Now loop the triangle 6 times. '
      courseD_artist_nestedLoops2: This time, complete the puzzle with the fewest
        number of blocks possible.
      courseD_artist_nestedLoops2_2018: This time, complete the puzzle with the fewest
        number of blocks possible.
      courseD_artist_nestedLoops2_2019: This time, complete the puzzle with the fewest
        number of blocks possible.
      courseD_artist_nestedLoops3: |-
        Use your new skills to quickly draw the last row of windows for this building.

        The windows are 20 pixel squares, each 20 pixels apart.
      courseD_artist_nestedLoops3_2018: |-
        Use your new skills to quickly draw the last row of windows for this building.

        The windows are 20 pixel squares, each 20 pixels apart.
      courseD_artist_nestedLoops3_2019: |-
        Use your new skills to quickly draw the last row of windows for this building.

        The windows are 20 pixel squares, each 20 pixels apart.
      courseD_artist_nestedLoops4: Great!  Do the same thing with these circles.
      courseD_artist_nestedLoops4_2018: Great!  Do the same thing with these circles.
      courseD_artist_nestedLoops4_2019: Great!  Do the same thing with these circles.
      courseD_artist_nestedLoops5: What happens if you also turn 90 degrees between
        circles?
      courseD_artist_nestedLoops5_2018: What happens if you also turn 90 degrees between
        circles?
      courseD_artist_nestedLoops5_2019: What happens if you also turn 90 degrees between
        circles?
      courseD_artist_nestedLoops7: Use what you've learned to make this drawing.
      courseD_artist_nestedLoops7_2018: Use what you've learned to make this drawing.
      courseD_artist_nestedLoops7_2019: Use what you've learned to make this drawing.
      courseD_artist_nestedLoops8: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops8_2018: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops8_2019: Using what you have learned in the last couple
        of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops9: "**Challenge:** Can you figure out how to make
        a picture like this?"
      courseD_artist_nestedLoops9_2018: "**Challenge:** Can you figure out how to
        make a picture like this?"
      courseD_artist_nestedLoops9_2019: "**Challenge:** Can you figure out how to
        make a picture like this?"
      courseD_artist_nestedLoops9_predict1: "**Challenge:** Can you figure out how
        to make a picture like this?"
      courseD_artist_nestedLoops9_predict1_2018: "**Challenge:** Can you figure out
        how to make a picture like this?"
      courseD_artist_nestedLoops9_predict1_2019: "**Challenge:** Can you figure out
        how to make a picture like this?"
      courseD_artist_nestedLoopsFP: Now it's your turn.  Take the skills you have
        learned and make something that you love!
      courseD_artist_nestedLoopsFP_2018: Now it's your turn.  Take the skills you
        have learned and make something that you love!
      courseD_artist_nestedLoopsFP_2019: Now it's your turn.  Take the skills you
        have learned and make something that you love!
      courseD_artist_nestedLoops_challenge1: Can you figure out how to make a picture
        like this?
      courseD_artist_nestedLoops_challenge1_2018: Can you figure out how to make a
        picture like this?
      courseD_artist_nestedLoops_challenge1_2019: Can you figure out how to make a
        picture like this?
      courseD_artist_nestedLoops_challenge2: Fix the code to make this picture!
      courseD_artist_nestedLoops_challenge2_2018: Fix the code to make this picture!
      courseD_artist_nestedLoops_challenge2_2019: Fix the code to make this picture!
      courseD_artist_project1: 'Draw a small shape, between **20 and 50** pixels wide.  It
        can be any shape that you like.  '
      courseD_artist_project1_2018: 'Draw a small shape, between **20 and 50** pixels
        wide.  It can be any shape that you like.  '
      courseD_artist_project1_2019: 'Draw a small shape, between **20 and 50** pixels
        wide.  It can be any shape that you like.  '
      courseD_artist_project1a: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project1a_2018: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project1a_2019: Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      courseD_artist_project2: Now take your shape and draw two or three in a row!
      courseD_artist_project2_2018: Now take your shape and draw two or three in a
        row!
      courseD_artist_project2_2019: Now take your shape and draw two or three in a
        row!
      courseD_artist_project2a: Now, turn around 180 degrees and draw the stair pattern
        again!
      courseD_artist_project2a_2018: Now, turn around 180 degrees and draw the stair
        pattern again!
      courseD_artist_project2a_2019: Now, turn around 180 degrees and draw the stair
        pattern again!
      courseD_artist_project3: Let's spin that line of shapes around!
      courseD_artist_project3_2018: Let's spin that line of shapes around!
      courseD_artist_project3_2019: Let's spin that line of shapes around!
      courseD_artist_project3a: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project3a_2018: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project3a_2019: Spin that shape around 5 or 6 times in a circle.
      courseD_artist_project4: Time to layer those shapes!
      courseD_artist_project4_2018: Time to layer those shapes!
      courseD_artist_project4_2019: Time to layer those shapes!
      courseD_artist_project4a: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project4a_2018: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project4a_2019: |-
        Try playing around with what you've created. Draw whatever you like!

        -   What happens if you use two different angles in your stair step pattern?
        -   What happens if you make your diamond pattern longer or shorter?
        -   What does it look like to draw two snowflakes on top of one another?
      courseD_artist_project5: Play with the snowflakes!
      courseD_artist_project5_2018: Play with the snowflakes!
      courseD_artist_project5_2019: Play with the snowflakes!
      courseD_artist_ramp11: Now make a square using Artist!
      courseD_artist_ramp12: Use what you've learned to draw this triangle inside
        of a square.
      courseD_autorun_binary2_2019: Run this code to see how the artist uses binary
        to draw this pattern.
      courseD_autorun_binary3_2019: Which of the binary strings below could you loop
        8 times to draw this image?
      courseD_autorun_binary4_2019: Kan du tegne dette mønsteret ved å kjøre en løkke
        over en tresifret binærstreng (0-er og 1-erer)?
      courseD_autorun_binary5_2019: "Each binary string below represents one row of
        this picture. \n\nCan you rearrange them so it draws a smiley face instead
        of a frown?"
      courseD_autorun_binary6_2019: Hvilken 6-siftret binærstreng, repetert 11 ganger,
        vil tegne dette bildet?
      courseD_autorun_binary7_2019: Hva er den korteste binærstrengen du kan repetere
        for å tegne dette bildet?
      courseD_autorun_binary8_2019: Finish the code to create this drawing.
      courseD_autorun_binary8_predict1_2019: Finish the code to create this drawing.
      courseD_bee_conditionals10: Collect all of the nectar and make all of the honey.
      courseD_bee_conditionals10_2018: Collect all of the nectar and make all of the
        honey.
      courseD_bee_conditionals10_2019: Collect all of the nectar and make all of the
        honey.
      courseD_bee_conditionals1_predict1: Check to see if there's a flower under the
        cloud. If there's a flower, get nectar.
      courseD_bee_conditionals1_predict1_2018: Check to see if there's a flower under
        the cloud. If there's a flower, get nectar.
      courseD_bee_conditionals1_predict1_2019: Check to see if there's a flower under
        the cloud. If there's a flower, get nectar.
      courseD_bee_conditionals1_predict1_copy: Check to see if there's a flower under
        the cloud. If there's a flower, get nectar.
      courseD_bee_conditionals2: 'Check underneath every cloud to see if it is hiding
        a flower before you get nectar.  '
      courseD_bee_conditionals2_2018: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals2_2019: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals2_copy: 'Check underneath every cloud to see if it is
        hiding a flower before you get nectar.  '
      courseD_bee_conditionals3: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_2018: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_2019: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals3_copy: "Help the bee collect all of the nectar. \n\nYou
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower."
      courseD_bee_conditionals4: Get all of the nectar using as few blocks as possible.
      courseD_bee_conditionals4_2018: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals4_2019: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals4_copy: Get all of the nectar using as few blocks as
        possible.
      courseD_bee_conditionals5: Collect all of the nectar using as few blocks as
        possible
      courseD_bee_conditionals5_2018: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals5_2019: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals5_copy: Collect all of the nectar using as few blocks
        as possible
      courseD_bee_conditionals6: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals6_2018: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals6_2019: Some of these clouds might have honeycombs under
        them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals7: Use the `if/else` block to collect nectar at flowers
        and make honey at honeycomb.
      courseD_bee_conditionals7_2018: Use the `if/else` block to collect nectar at
        flowers and make honey at honeycomb.
      courseD_bee_conditionals7_2019: Use the `if/else` block to collect nectar at
        flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2: Use the `if/else` block to collect nectar
        at flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2_2018: Use the `if/else` block to collect
        nectar at flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2_2019: Use the `if/else` block to collect
        nectar at flowers and make honey at honeycomb.
      courseD_bee_conditionals8: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseD_bee_conditionals8_2018: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseD_bee_conditionals8_2019: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseD_bee_conditionals9: Collect all of the nectar or make all the honey.
      courseD_bee_conditionals9_2018: Collect all of the nectar or make all the honey.
      courseD_bee_conditionals9_2019: Collect all of the nectar or make all the honey.
      courseD_bee_conditionals_challenge1: Collect all the nectar and make all the
        honey.
      courseD_bee_conditionals_challenge1_2018: Collect all the nectar and make all
        the honey.
      courseD_bee_conditionals_challenge1_2019: Collect all the nectar and make all
        the honey.
      courseD_bee_conditionals_challenge2: Collect all of the nectar and make all
        the honey.
      courseD_bee_conditionals_challenge2_2018: Collect all of the nectar and make
        all the honey.
      courseD_bee_conditionals_challenge2_2019: Collect all of the nectar and make
        all the honey.
      courseD_bee_debugging_challenge1: Watch how the bees gets the nectar. Can you
        use the same kind of pattern to help the bee make all of the honey?
      courseD_bee_debugging_challenge1a: Watch how the bee gets the nectar. Use the
        same pattern to help the bee make all the honey.
      courseD_bee_nestedLoops1: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1_2018: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1_2019: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1a: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1a_2018: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1a_2019: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops2: This time, help the bee collect all of the nectar
        using as few blocks as possible.
      courseD_bee_nestedLoops2_2018: This time, help the bee collect all of the nectar
        using as few blocks as possible.
      courseD_bee_nestedLoops2_2019: This time, help the bee collect all of the nectar
        using as few blocks as possible.
      courseD_bee_nestedLoops2_predict1: This time, help the bee collect all of the
        nectar using as few blocks as possible.
      courseD_bee_nestedLoops2_predict1_2018: This time, help the bee collect all
        of the nectar using as few blocks as possible.
      courseD_bee_nestedLoops2_predict1_2019: This time, help the bee collect all
        of the nectar using as few blocks as possible.
      courseD_bee_nestedLoops7: 'Challenge: Figure out how to get all of the nectar
        using only the blocks available.'
      courseD_bee_nestedLoops7_2018: 'Challenge: Figure out how to get all of the
        nectar using only the blocks available.'
      courseD_bee_nestedLoops7_2019: 'Challenge: Figure out how to get all of the
        nectar using only the blocks available.'
      courseD_bee_nestedLoops8: Samle inn all nektaren fra hver blomst og lag honning
        i alle bikubene. Bruk løkke i løkke.
      courseD_bee_nestedLoops8_2018: Samle inn all nektaren fra hver blomst og lag
        honning i alle bikubene. Bruk løkke i løkke.
      courseD_bee_nestedLoops8_2019: Samle inn all nektaren fra hver blomst og lag
        honning i alle bikubene. Bruk løkke i løkke.
      courseD_bee_nestedLoops9: Make all of the honey.
      courseD_bee_nestedLoops9_2018: Make all of the honey.
      courseD_bee_nestedLoops9_2019: Make all of the honey.
      courseD_bee_nestedLoops9_predict2: Make all of the honey.
      courseD_bee_nestedLoops9_predict2_2018: Make all of the honey.
      courseD_bee_nestedLoops9_predict2_2019: Make all of the honey.
      courseD_bounce_events10s_2018: 'Attach the `score point` block to the `when
        ball in goal` event and the `score opponent point` block to the `when ball
        misses hand` event to make a game. '
      courseD_bounce_events10s_2019: 'Attach the `score point` block to the `when
        ball in goal` event and the `score opponent point` block to the `when ball
        misses hand` event to make a game. '
      courseD_bounce_events11s_2018: 'Attach the `throw new ball` block in all of
        the places where the game needs a new ball. '
      courseD_bounce_events11s_2019: 'Attach the `throw new ball` block in all of
        the places where the game needs a new ball. '
      courseD_bounce_events12s_2018: Make this game your own. You can change all the
        visuals and the rules. When you're done, click "Finish" to let friends try
        your game on their phones.
      courseD_bounce_events12s_2019: Make this game your own. You can change all the
        visuals and the rules. When you're done, click "Finish" to let friends try
        your game on their phones.
      courseD_bounce_events1s_2018: Attach a block to the "when left arrow" block
        and press "Run" to move the player to the net.
      courseD_bounce_events1s_2019: Attach a block to the "when left arrow" block
        and press "Run" to move the player to the net.
      courseD_bounce_events2s_2018: Now, attach a block to the `when right event`
        so that the hand can get to both baskets.
      courseD_bounce_events2s_2019: Now, attach a block to the `when right event`
        so that the hand can get to both baskets.
      courseD_bounce_events5s_2018: Attach a block to the `when ball hits hand` event
        to ensure the ball reaches the basket.
      courseD_bounce_events5s_2019: Attach a block to the `when ball hits hand` event
        to ensure the ball reaches the basket.
      courseD_bounce_events6s_2018: Attach code to make the ball bounce when it hits
        the wall so you can solve this puzzle.
      courseD_bounce_events6s_2019: Attach code to make the ball bounce when it hits
        the wall so you can solve this puzzle.
      courseD_bounce_events7s_2018: Attach sound blocks to make the net swish when
        you hit the basket and have the whistle blow when the ball misses your hand.
        Bounce the ball until it hits the finish target.
      courseD_bounce_events7s_2019: Attach sound blocks to make the net swish when
        you hit the basket and have the whistle blow when the ball misses your hand.
        Bounce the ball until it hits the finish target.
      courseD_collector_debugging1: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging1a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging1a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging2: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging2a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging2a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging3: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging3a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging3a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging4: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging4a_2018: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging4a_2019: Fix the error(s) to collect all of the treasure.
      courseD_collector_debugging5: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging5a_2018: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging5a_2019: All of the commands that you need are already
        here...now use your debugging skills to figure out how to solve this puzzle.
      courseD_collector_debugging6: 'Challenge: Use your debugging skills to fix the
        errors and collect all of the treasure.'
      courseD_collector_debugging6a_2018: 'Challenge: Use the code in the work area
        to get at least **6** pieces of treasure!'
      courseD_collector_debugging6a_2019: 'Challenge: Use the code in the work area
        to get at least **6** pieces of treasure!'
      courseD_collector_debugging_challenge2: Are you an expert at nested loops? Use
        what you have learned so far to collect all the treasure!
      courseD_collector_nested_loops_challenge2: Help the collector reach at least
        two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2_2018: Help the collector reach at
        least two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2_2019: Help the collector reach at
        least two piles of treasure using only the blocks in your toolbox. It is possible
        to collect all 4.
      courseD_collector_nested_loops_challenge2a: Help Laurel collect at least two
        piles of treasure.
      courseD_collector_ramp10: Help Laurel collect all of the treasure.
      courseD_collector_ramp8: Help Laurel collect all of the treasure.
      courseD_collector_ramp9: Help Laurel collect all of the treasure.
      courseD_farmer_condLoops1: Use conditionals to make sure that you pick corn
        only when it's there.
      courseD_farmer_condLoops1_2018: Use conditionals to make sure that you pick
        corn only when it's there.
      courseD_farmer_condLoops1_2019: Use conditionals to make sure that you pick
        corn only when it's there.
      courseD_farmer_condLoops2: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops2_2018: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops2_2019: Help the harvester collect both corn and lettuce
        from the field.
      courseD_farmer_condLoops3: _"Corn, lettuce, AND pumpkins! Help me harvest them
        all."_
      courseD_farmer_condLoops3_2018: _"Corn, lettuce, AND pumpkins! Help me harvest
        them all."_
      courseD_farmer_condLoops3_2019: _"Corn, lettuce, AND pumpkins! Help me harvest
        them all."_
      courseD_farmer_condLoops4: Help the harvester pick all of the lettuce in each
        cluster before moving on to the next bunch.
      courseD_farmer_condLoops4_2018: Help the harvester pick all of the lettuce in
        each cluster before moving on to the next bunch.
      courseD_farmer_condLoops4_2019: Help the harvester pick all of the lettuce in
        each cluster before moving on to the next bunch.
      courseD_farmer_condLoops5: Collect all of the corn and lettuce, then grab the
        pumpkin at the end.
      courseD_farmer_condLoops5_2018: Collect all of the corn and lettuce, then grab
        the pumpkin at the end.
      courseD_farmer_condLoops5_2019: Collect all of the corn and lettuce, then grab
        the pumpkin at the end.
      courseD_farmer_condLoops6: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops6_2018: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops6_2019: Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      courseD_farmer_condLoops7: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops7_2018: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops7_2019: 'Challenge: Collect all of the corn and lettuce,
        then pick the pumpkin.'
      courseD_farmer_condLoops8: Collect all of the corn and lettuce, then pick the
        pumpkin.
      courseD_farmer_condLoops8_2018: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops8_2019: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9: Collect all of the corn and lettuce, then pick the
        pumpkin.
      courseD_farmer_condLoops9_2018: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9_2019: Collect all of the corn and lettuce, then pick
        the pumpkin.
      courseD_farmer_condLoops9_predict1: Collect all of the corn and lettuce, then
        pick the pumpkin.
      courseD_farmer_condLoops9_predict1_2018: Collect all of the corn and lettuce,
        then pick the pumpkin.
      courseD_farmer_condLoops9_predict1_2019: Collect all of the corn and lettuce,
        then pick the pumpkin.
      courseD_farmer_condLoops_challenge1: Collect everything to complete the level.
        Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge1_2018: Collect everything to complete the
        level. Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge1_2019: Collect everything to complete the
        level. Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge2: Collect everything to complete the level.
      courseD_farmer_condLoops_challenge2_2018: Collect everything to complete the
        level.
      courseD_farmer_condLoops_challenge2_2019: Collect everything to complete the
        level.
      courseD_farmer_until_challenge2: Bruk blokken hvis/ellers til å følge den svingete
        banen. På hvert hjørne, bruk kommandoen `fjern 1` i en løkke for å fjerne
        haugene.
      courseD_farmer_while1: Move to the pile of dirt and use the `remove` block to
        remove it.
      courseD_farmer_while10: 'Flatten all of these piles using as few blocks as possible. '
      courseD_farmer_while10_2018: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_2019: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_predict2: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while10_predict2_2018: 'Flatten all of these piles using as few
        blocks as possible. '
      courseD_farmer_while10_predict2_2019: 'Flatten all of these piles using as few
        blocks as possible. '
      courseD_farmer_while1_2018: Move to the pile of dirt and use the `remove` block
        to remove it.
      courseD_farmer_while1_2019: Move to the pile of dirt and use the `remove` block
        to remove it.
      courseD_farmer_while2: Move to the hole and fill it with six shovelfuls of dirt,
        using the `fill` block.
      courseD_farmer_while2_2018: Move to the hole and fill it with six shovelfuls
        of dirt, using the `fill` block.
      courseD_farmer_while2_2019: Move to the hole and fill it with six shovelfuls
        of dirt, using the `fill` block.
      courseD_farmer_while3: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while3_2018: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while3_2019: Use as few blocks as possible to solve this puzzle.
      courseD_farmer_while4: Help the farmer remove this entire pile using a `while`
        loop.
      courseD_farmer_while4_2018: Help the farmer remove this entire pile using a
        `while` loop.
      courseD_farmer_while4_2019: Help the farmer remove this entire pile using a
        `while` loop.
      courseD_farmer_while4_predict1: Help the farmer remove this entire pile using
        a `while` loop.
      courseD_farmer_while4_predict1_2018: Help the farmer remove this entire pile
        using a `while` loop.
      courseD_farmer_while4_predict1_2019: Help the farmer remove this entire pile
        using a `while` loop.
      courseD_farmer_while5: 'Help me remove all of this dirt. '
      courseD_farmer_while5_2018: 'Help me remove all of this dirt. '
      courseD_farmer_while5_2019: 'Help me remove all of this dirt. '
      courseD_farmer_while6: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while6_2018: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while6_2019: Use the `while` loop to easily fill all of the holes.
      courseD_farmer_while7: Fill in the hole at the end of each of these paths.
      courseD_farmer_while7_2018: Fill in the hole at the end of each of these paths.
      courseD_farmer_while7_2019: Fill in the hole at the end of each of these paths.
      courseD_farmer_while8: 'Challenge: Fill all of these holes using as few blocks
        as possible. '
      courseD_farmer_while8_2018: 'Challenge: Fill all of these holes using as few
        blocks as possible. '
      courseD_farmer_while8_2019: 'Challenge: Fill all of these holes using as few
        blocks as possible. '
      courseD_farmer_while9: 'Flatten all of these piles using as few blocks as possible. '
      courseD_farmer_while9_2018: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while9_2019: 'Flatten all of these piles using as few blocks
        as possible. '
      courseD_farmer_while_challenge1: Fyll inn alle hullene og fjern alle haugene.
      courseD_farmer_while_challenge1_2018: Fyll inn alle hullene og fjern alle haugene.
      courseD_farmer_while_challenge1_2019: Fyll inn alle hullene og fjern alle haugene.
      courseD_farmer_while_challenge2: Fyll inn alle hullene og fjern alle haugene.
      courseD_harvester_nested_loops_challenge1: '"I need some help on the farm! Help
        me harvest this corn using only the blocks in your toolbox."'
      courseD_harvester_nested_loops_challenge1_2018: '"I need some help on the farm!
        Help me harvest this corn using only the blocks in your toolbox."'
      courseD_harvester_nested_loops_challenge1_2019: '"I need some help on the farm!
        Help me harvest this corn using only the blocks in your toolbox."'
      courseD_iceage_loops1: Help Scrat across the ice to get to the acorn!
      courseD_iceage_loops10: Help Scrat get all the way over to the acorn!
      courseD_iceage_loops10_2019: Help Scrat get all the way over to the acorn!
      courseD_iceage_loops11: Help Scrat get to the acorn!
      courseD_iceage_loops11_2019: Help Scrat get to the acorn!
      courseD_iceage_loops12: Get to the acorn any way you can!
      courseD_iceage_loops12_2019: Get to the acorn any way you can!
      courseD_iceage_loops1_2019: Help Scrat across the ice to get to the acorn!
      courseD_iceage_loops2: Use a `turn left` block to get to the acorn!
      courseD_iceage_loops2_2019: Use a `turn left` block to get to the acorn!
      courseD_iceage_loops3: Can you get to the acorn with just one `move forward`
        block?
      courseD_iceage_loops3_2019: Can you get to the acorn with just one `move forward`
        block?
      courseD_iceage_loops4: Add one more block to get Scrat all the way to the acorn!
      courseD_iceage_loops4_2019: Add one more block to get Scrat all the way to the
        acorn!
      courseD_iceage_loops6: Can you add a loop to get to the acorn?
      courseD_iceage_loops6_2019: Can you add a loop to get to the acorn?
      courseD_iceage_loops7: 'Scrat really wants that acorn! '
      courseD_iceage_loops7_2019: 'Scrat really wants that acorn! '
      courseD_iceage_loops8: 'Can you fix this code? '
      courseD_iceage_loops8_2019: 'Can you fix this code? '
      courseD_iceage_loops9: The acorn is so far away! Can you use loops to help Scrat
        get there?
      courseD_iceage_loops9_2019: The acorn is so far away! Can you use loops to help
        Scrat get there?
      courseD_maze_intro4_2019: Help Red reach the pig.
      courseD_maze_intro5a_2019: Count the spaces on the grid carefully!
      courseD_maze_intro5c_2019: Watch out for TNT! Help Red get to the pig.
      courseD_maze_nestedLoops3: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops3_2018: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops3_2019: Get the zombie to the sunflower using the fewest
        number of blocks possible.
      courseD_maze_nestedLoops4: Få meg til solsikken!
      courseD_maze_nestedLoops4_2018: Få meg til solsikken!
      courseD_maze_nestedLoops4_2019: Få meg til solsikken!
      courseD_maze_nestedLoops5: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops5_2018: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops5_2019: Get the zombie to the sunflower using the fewest
        number of blocks possible!
      courseD_maze_nestedLoops6: Få meg til solsikken!
      courseD_maze_nestedLoops6_2018: Få meg til solsikken!
      courseD_maze_nestedLoops6_2019: Få meg til solsikken!
      courseD_maze_ramp1: For this puzzle, snap all of the blocks together and click
        "Run" to watch it go!
      courseD_maze_ramp1_2018: For this puzzle, snap all of the blocks together and
        click "Run" to watch it go!
      courseD_maze_ramp1_2019: For this puzzle, snap all of the blocks together and
        click "Run" to watch it go!
      courseD_maze_ramp2: Drag an extra `move forward` block out of the toolbox, then
        attach all blocks to `when run` to finish your code.
      courseD_maze_ramp2_2018: Drag an extra `move forward` block out of the toolbox,
        then attach all blocks to `when run` to finish your code.
      courseD_maze_ramp2_2019: Drag an extra `move forward` block out of the toolbox,
        then attach all blocks to `when run` to finish your code.
      courseD_maze_ramp3: There is one extra block that is going to cause the bird
        to crash. Throw it away by dragging it back to the toolbox.
      courseD_maze_ramp3_2018: There is one extra block that is going to cause the
        bird to crash. Throw it away by dragging it back to the toolbox.
      courseD_maze_ramp3_2019: Throw away the extra "move forward" block.
      courseD_maze_ramp4: Avoid TNT or feathers will fly!
      courseD_maze_ramp4_2018: Avoid TNT or feathers will fly!
      courseD_maze_ramp4_2019: Help Scrat reach the acorn.
      courseD_maze_ramp5: Avoid the TNT.
      courseD_maze_ramp5_2018: Avoid the TNT.
      courseD_maze_ramp5_2019: Avoid the TNT.
      courseD_maze_ramp5a: Pay attention to the sequence and see if you can figure
        out how to get to that pig!
      courseD_maze_ramp5a_2018: Pay attention to the sequence and see if you can figure
        out how to get to that pig!
      courseD_maze_ramp5a_2019: Count the spaces on the grid carefully!
      courseD_maze_ramp5b: Navigate this maze to help the bird find the pig!
      courseD_maze_ramp5b_2018: Navigate this maze to help the bird find the pig!
      courseD_maze_ramp5b_2019: Navigate this maze to help the bird find the pig!
      courseD_maze_ramp5c: Help the bird get to the pig.
      courseD_maze_ramp5c_2018: Help the bird get to the pig.
      courseD_maze_ramp5c_2019: Watch out for cracking ice! Help Scrat get to the
        acorn.
      courseD_maze_ramp5d: Get the bird to the pig.
      courseD_maze_ramp5d_2018: Get the bird to the pig.
      courseD_maze_ramp5d_2019: Get the bird to the pig.
      courseD_maze_ramp6: '"Keep calm and help me find the bad pig. Otherwise I might
        get angry!"'
      courseD_maze_ramp7: Get the bird to the pig!
      courseD_maze_until1: Get the angry bird to the pig.
      courseD_maze_until10: Help the zombie get to the sunflower.
      courseD_maze_until10_2018: Help the zombie get to the sunflower.
      courseD_maze_until10_2019: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2_2018: Help the zombie get to the sunflower.
      courseD_maze_until10_predict2_2019: Help the zombie get to the sunflower.
      courseD_maze_until1_2018: Get the angry bird to the pig.
      courseD_maze_until1_2019: Get the angry bird to the pig.
      courseD_maze_until3: Get the bird to the pig.
      courseD_maze_until3_2018: Get the bird to the pig.
      courseD_maze_until3_2019: Get the bird to the pig.
      courseD_maze_until4: Can you get the zombie to the sunflower using only the
        blocks that are available?
      courseD_maze_until4_2018: Can you get the zombie to the sunflower using only
        the blocks that are available?
      courseD_maze_until4_2019: Can you get the zombie to the sunflower using only
        the blocks that are available?
      courseD_maze_until5: Use the `if` block to help the zombie decide when to turn,
        then get the zombie to the sunflower.
      courseD_maze_until5_2018: Use the `if` block to help the zombie decide when
        to turn, then get the zombie to the sunflower.
      courseD_maze_until5_2019: Use the `if` block to help the zombie decide when
        to turn, then get the zombie to the sunflower.
      courseD_maze_until6: Help the zombie get to the sunflower.
      courseD_maze_until6_2018: Help the zombie get to the sunflower.
      courseD_maze_until6_2019: Help the zombie get to the sunflower.
      courseD_maze_until7: Help the zombie get to the sunflower.
      courseD_maze_until7_2018: Help the zombie get to the sunflower.
      courseD_maze_until7_2019: Help the zombie get to the sunflower.
      courseD_maze_until8: Help the zombie get to the sunflower.
      courseD_maze_until9: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until9_2018: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until9_2019: "**Challenge:** Avoid the chompers and help the zombie
        get to the sunflower."
      courseD_maze_until_challenge1: No hints, just challenge. Get the zombie to the
        sunflower.
      courseD_playLab_cond1: Get Pegleg to the flags to solve this puzzle.
      courseD_playLab_cond1_2018: Get Pegleg to the flags to solve this puzzle.
      courseD_playLab_cond2: 'Give Pegleg a point every time he makes it to the dragon. '
      courseD_playLab_cond2_2018: 'Give Pegleg a point every time he makes it to the
        dragon. '
      courseD_playLab_cond3: 'Make the dragon change between random emotions every
        second.  '
      courseD_playLab_cond3_2018: 'Make the dragon change between random emotions
        every second.  '
      courseD_playLab_cond3a: Make it so when Pegleg gets to the dragon, he gets 2
        points if the dragon is happy and 1 otherwise.
      courseD_playLab_cond3a_2018: Make it so when Pegleg gets to the dragon, he gets
        2 points if the dragon is happy and 1 otherwise.
      courseD_playLab_cond4: Add some code so that the ninja (actor 3) starts chasing
        Pegleg as soon as the game begins.  End the game as a loss if the ninja catches
        him.
      courseD_playLab_cond4_2018: Add some code so that the ninja (actor 3) starts
        chasing Pegleg as soon as the game begins.  End the game as a loss if the
        ninja catches him.
      courseD_playLab_cond5: Add a `repeat forever` loop that continuously checks
        if the score is greater than 5, then ends the game as a win when it is.
      courseD_playLab_cond5_2018: Add a `repeat forever` loop that continuously checks
        if the score is greater than 5, then ends the game as a win when it is.
      courseD_playLab_cond6: "1.  Slow the ninja (actor 3) down before you set him
        to chase the pirate.  \n2.  If the pirate is greater than 225 pixels down,
        set the ninja to **flee** the pirate.  Otherwise, set the ninja to **chase**
        the pirate.  "
      courseD_playLab_cond6_2018: "1.  Slow the ninja (actor 3) down before you set
        him to chase the pirate.  \n2.  If the pirate is greater than 225 pixels down,
        set the ninja to **flee** the pirate.  Otherwise, set the ninja to **chase**
        the pirate.  "
      courseD_playLab_cond6a: If the pirate (actor 1) is in the safe zone, wait one
        second, then deduct a point as long as he stays beneath the octopus line.
      courseD_playLab_cond6a_2018: If the pirate (actor 1) is in the safe zone, wait
        one second, then deduct a point as long as he stays beneath the octopus line.
      courseD_playLab_condFP: Now, build your own game to show off to your friends!
      courseD_playLab_condFP_2018: Now, build your own game to show off to your friends!
      courseD_scrat_ramp1: For this puzzle, snap all of the blocks together and click
        "Run" to watch it go!
      courseD_scrat_ramp2: Drag an extra `move forward` block out of the toolbox,
        then attach all blocks to `when run` to finish your code.
      courseD_scrat_ramp3: There is one extra block that is going to cause Scrat to
        crash. Throw it away by dragging it back to the toolbox.
      courseD_scrat_ramp4: Avoid the cracked ice to keep Scrat safe!
      courseD_scrat_ramp5: Avoid the cracked ice.
      courseD_scrat_ramp6: Help Scrat get to the acorn using a loop!
      courseD_scrat_ramp7: Help Scrat get to the acorn!
      courseD_scrat_ramp8: Use what you've learned to get Scrat to the acorn!
      courseE_aboutme_6: 'Keep going! Try adding more features to your poster to make
        it even better. '
      courseE_artist_concept1: 'Recreate this image. '
      courseE_artist_concept1_2018: 'Recreate this image. '
      courseE_artist_concept4: Recreate this drawing.
      courseE_artist_concept4_2018: Recreate this drawing.
      courseE_artist_concept_challenge1: 'Help the artist draw this unique shape. '
      courseE_artist_concept_challenge1_2018: 'Help the artist draw this unique shape. '
      courseE_artist_concept_challenge2: Create five pinwheel designs using the code
        below.
      courseE_artist_concept_challenge2_2018: Create five pinwheel designs using the
        code below.
      courseE_artist_functions1: 'Hallo. Meg zombie artist. Meg tegne elsker! Hjelp
        meg med å tegne de firkantete brillene. Hint: mellomrommet mellom brilleglassene
        er 25 piksler kortere enn lengden på firkantene.'
      courseE_artist_functions10: This time, use lines of 8 hexagons with 25 pixel
        sides.
      courseE_artist_functions10_2018: This time, use lines of 8 hexagons with 25
        pixel sides.
      courseE_artist_functions10_2019: This time, use lines of 8 hexagons with 25
        pixel sides.
      courseE_artist_functions1_copy: 'Hallo. Meg zombie artist. Meg tegne elsker!
        Hjelp meg med å tegne de firkantete brillene. Hint: mellomrommet mellom brilleglassene
        er 25 piksler kortere enn lengden på firkantene.'
      courseE_artist_functions2: 'This time, use the `draw a square` function to create
        the glasses. '
      courseE_artist_functions2_2018: 'Use the `draw a square` function to create
        the glasses. '
      courseE_artist_functions2_2019: 'Use the `draw a square` function to create
        the glasses. '
      courseE_artist_functions2_copy: 'This time, use the `draw a square` function
        to create the glasses. '
      courseE_artist_functions3: You can make this drawing by adding a repeat block.
      courseE_artist_functions3_2018: Build a function that will create this star.
      courseE_artist_functions3_2019: Build a function that will create this star.
      courseE_artist_functions3_copy: You can make this drawing by adding a repeat
        block.
      courseE_artist_functions4: Now that you can draw a star, try drawing four stars!
      courseE_artist_functions4_copy: Now that you can draw a star, try drawing four
        stars!
      courseE_artist_functions5: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_2018: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_2019: Draw only those three stars to finish this puzzle.
      courseE_artist_functions5_copy: Draw only those three stars to finish this puzzle.
      courseE_artist_functions6: Make this window by drawing a square, then turning
        90 degrees before drawing another, and so on.
      courseE_artist_functions7: Try solving this puzzle by creating `draw a window`
        and calling it five times. Watch out for the door!
      courseE_artist_functions7_2018: Try solving this puzzle by creating `draw a
        window` and calling it five times. Watch out for the door!
      courseE_artist_functions7_2019: Try solving this puzzle by creating `draw a
        window` and calling it five times. Watch out for the door!
      courseE_artist_functions8: 'Challenge: Create as many functions as you think
        you need to make this drawing of 50 pixel squares.'
      courseE_artist_functions8_2018: Use everything you've learned so far to recreate
        this design.
      courseE_artist_functions8_2019: Use everything you've learned so far to recreate
        this design.
      courseE_artist_functions8a_2018: Create a function for a single square.
      courseE_artist_functions8a_2019: Create a function for a single square.
      courseE_artist_functions8b_2018: Call the `draw a square` function from inside
        your `draw a line of squares` function to make this even easier!
      courseE_artist_functions8b_2019: Call the `draw a square` function from inside
        your `draw a line of squares` function to make this even easier!
      courseE_artist_functions8c_2018: Add one more function that creates this stack
        of staggered squares.
      courseE_artist_functions8c_2019: Add one more function that creates this stack
        of staggered squares.
      courseE_artist_functions9: Create this image using only the blocks provided.
      courseE_artist_functions9_2018: "**Challenge:** Create this image using only
        the blocks provided."
      courseE_artist_functions9_2019: "**Challenge:** Create this image using only
        the blocks provided."
      courseE_artist_functionsProj_2018: "**Inspiration:** Use what you've learned
        to make whatever you want!"
      courseE_artist_functionsProj_2019: "**Inspiration:** Use what you've learned
        to make whatever you want!"
      courseE_artist_functions_challenge1: Once you define a function, you can call
        it over and over again - whenever and wherever you want! Try this code to
        see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge1_2018: Once you define a function, you can
        call it over and over again - whenever and wherever you want! Try this code
        to see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge1_2019: Once you define a function, you can
        call it over and over again - whenever and wherever you want! Try this code
        to see how it works, then change it to make your own impressive design!
      courseE_artist_functions_challenge2: Try this code to see how it works, then
        make the program your own!
      courseE_artist_functions_challenge2_2018: Try this code to see how it works,
        then make the program your own!
      courseE_artist_functions_challenge2_2019: Try this code to see how it works,
        then make the program your own!
      courseE_artist_ramp8: Now make a square using Artist!
      courseE_artist_ramp8_2: Now make a square using Artist!
      courseE_artist_ramp9: Use what you've learned to draw this triangle.
      courseE_artist_ramp9_2: Use what you've learned to draw this triangle.
      courseE_bee_concept1: Samle inn all nektaren fra alle blomstene. Bruk løkke
        i løkke.
      courseE_bee_concept1_2018: Samle inn all nektaren fra alle blomstene. Bruk løkke
        i løkke.
      courseE_bee_concept2: 'Help the bee make all of the honey. '
      courseE_bee_concept2_2018: 'Help the bee make all of the honey. '
      courseE_bee_concept3: Collect all of the nectar using  as few blocks as possible.
      courseE_bee_concept3_2018: Collect all of the nectar using  as few blocks as
        possible.
      courseE_bee_concept4: Uh oh! The bee is not sure if he should collect nectar
        or make honey. Can you help him out?
      courseE_bee_concept4_2018: Uh oh! The bee is not sure if he should collect nectar
        or make honey. Can you help him out?
      courseE_bee_concept5: Help the bee collect the nectar from the flowers?
      courseE_bee_concept5_2018: Help the bee collect the nectar from the flowers?
      courseE_bee_functions1: Samle inn nektar fra alle blomstene.
      courseE_bee_functions10: Solve this puzzle by creating a function that helps
        the bee go get all of the honey before returning back to the main path.
      courseE_bee_functions2: Use the `get 2 nectar` function to collect the nectar
        from each flower.
      courseE_bee_functions3: Funksjoner er kodeblokker som utfører en bestemt oppgave.
        Bruk blokken "hent 5" til å samle inn 5 nektar om gangen. Pass på å bruk en
        løkke for å bruke ideelt antall blokker.
      courseE_bee_functions4: Funksjonen "flytt og hent nektar" snur bien, samleren
        inn nektar og returnerer til der den startet. Bruk denne funksjonen til å
        samle inn all nektaren.
      courseE_bee_functions5: Now write the function to collect nectar from the flowers.
      courseE_bee_functions6: Create a function and call it to collect nectar at each
        flower and make honey at each honeycomb.
      courseE_bee_functions7: Create your own function that goes down a path, gets
        nectar, makes honey, and then returns the bee to the top of the path. Collect
        all the nectar and make all the honey!
      courseE_bee_functions8: Create a function that collects all of the nectar from
        each flower.
      courseE_bee_functions9: Create a function to collect all of the nectar from
        each flower.
      courseE_bee_functions_challenge1: You are on your own for this challenge. This
        could "bee" harder than it looks!
      courseE_bee_functions_challenge2: You are on your own for this challenge. Sweet!
      courseE_farmer_concept1: Can you write a program that fills these holes until
        the ground is even?
      courseE_farmer_concept1_2018: Can you write a program that fills these holes
        until the ground is even?
      courseE_farmer_concept2: Collect all of the pumpkins.
      courseE_farmer_concept2_2018: Collect all of the pumpkins.
      courseE_farmer_concept3: Fill in the hole at the end of each of these paths.
      courseE_farmer_concept3_2018: Fill in the hole at the end of each of these paths.
      courseE_farmer_functions1: Help the harvester get to the pumpkin and pick it.
      courseE_farmer_functions10a1_2018: Use everything that you've learned so far
        to solve this puzzle!
      courseE_farmer_functions10a1_2019: Use everything that you've learned so far
        to solve this puzzle!
      courseE_farmer_functions10b: Use your new function twice to solve this puzzle.
      courseE_farmer_functions13_2018: Solve this puzzle in 23 blocks or less.
      courseE_farmer_functions13_2019: Solve this puzzle in 23 blocks or less.
      courseE_farmer_functions1_2018: Help the harvester get to the pumpkin and pick
        it.
      courseE_farmer_functions1_2019: Help the harvester get to the pumpkin and pick
        it.
      courseE_farmer_functions1a: Now help the harvester pick the corn, lettuce, **and**
        pumpkin.
      courseE_farmer_functions1a_2018: Help the harvester pick all of the corn, then
        the pumpkin.
      courseE_farmer_functions1a_2019: Help the harvester pick all of the corn, then
        the pumpkin.
      courseE_farmer_functions2b: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2b_2018: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2b_2019: Help the harvester pick the corn and pumpkins.
      courseE_farmer_functions2ba: Help the farmer pick the corn and pumpkins using
        the `corn and pumpkin` function.
      courseE_farmer_functions2ba_2018: Use the functions below to help the farmer
        pick the corn and pumpkins.
      courseE_farmer_functions2ba_2019: Help the farmer pick the corn and pumpkins
        using the `corn and pumpkin` function.
      courseE_farmer_functions3c: Now, fill-in the function yourself by pulling the
        blocks from the code and dropping them into the **function definition**.
      courseE_farmer_functions3c1_2018: This function calls other functions!
      courseE_farmer_functions3c1_2019: This function calls other functions!
      courseE_farmer_functions3c_2018: Try on a longer path.
      courseE_farmer_functions3c_2019: Try on a longer path.
      courseE_farmer_functions4b: Use your new function to solve this puzzle.
      courseE_farmer_functions5c: Your function will come in handy here.
      courseE_farmer_functions6c: What do you need to add this program to check whether
        a sprout is corn or lettuce?
      courseE_farmer_functions7a1_2018: Create a function that sends the harvester
        down a square path to pick a single head of lettuce from the middle of each
        row.
      courseE_farmer_functions7a1_2019: Create a function that sends the harvester
        down a square path to pick a single head of lettuce from the middle of each
        row.
      courseE_farmer_functions7b: Help the harvester find her way down this confusing
        path and to the pumpkin by turning left at the corn and right at the lettuce.
      courseE_farmer_functions8a1_2018: Is your function still helpful?
      courseE_farmer_functions8a1_2019: Is your function still helpful?
      courseE_farmer_functions8b: "**Challenge:** Collect all of the pumpkins using
        the method from the last puzzle. "
      courseE_farmer_functions9a1_2018: Is your function still helpful?
      courseE_farmer_functions9a1_2019: Is your function still helpful?
      courseE_farmer_functions9b: Can you figure out the pattern that you need to
        solve this puzzle?
      courseE_farmer_ramp11a: Så lenge det er en haug, fjern jord.
      courseE_farmer_ramp11a_2018: Så lenge det er en haug, fjern jord.
      courseE_farmer_ramp11a_2019: Så lenge det er en haug, fjern jord.
      courseE_farmer_ramp11b: Så lenge det er en haug, fjern jord.
      courseE_farmer_ramp11b_2018: Så lenge det er en haug, fjern jord.
      courseE_farmer_ramp11b_2019: Så lenge det er en haug, fjern jord.
      courseE_farmer_ramp12_forswap: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12_forswap_2018: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12_forswap_2019: Now use nested loops to solve this puzzle.
      courseE_farmer_ramp12b: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12b_2018: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12b_2019: While there is lettuce, pick lettuce!
      courseE_farmer_ramp12c: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12c_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12c_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12d: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12d_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12d_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12e: Move forward until you reach the lettuce, then pick
        it all using a `while` loop.
      courseE_farmer_ramp12e_2018: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12e_2019: Move forward until you reach the lettuce, then
        pick it all using a `while` loop.
      courseE_farmer_ramp12f: Move forward until you reach the lettuce, then turn
        left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12f_2018: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12f_2019: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g: Move forward until you reach the lettuce, then turn
        left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g_2018: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_farmer_ramp12g_2019: Move forward until you reach the lettuce, then
        turn left **if** there is a path to the left.  Otherwise, turn right.
      courseE_playLab_challenge1: "Something should happen when you get enough points
        or when you run out of points. Add some code to the `win game` and `lose game`
        functions to make the game work the way it should. \nClick the hints for ideas!"
      courseE_playLab_scaffold1: Choose a background and map, and pick an actor to
        be your game's hero.
      courseE_playLab_scaffold2: Use event handlers and actions to make your hero
        move.
      courseE_playLab_scaffold3: Add two or more additional actors to your game and
        make them move.
      courseE_playLab_scaffold4: Find some interesting ways to change the score in
        your game. Get the score to show something other than 0 to continue.
      courseE_playLab_scaffold5: Now spend some time making sure the game works the
        way you want. Include a way to win or lose your game, then play until you
        meet one of those conditions.
      courseE_playLab_scaffold6: You've finished! Now you can play your game or share
        it with your friends and classmates!
      courseE_video_createFunctions: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2_2018: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseE_video_createFunctions2_2019: We don't have a video for creating functions,
        yet. This is a placeholder.
      courseF_artist_for1: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for10: 'Free Play: Try using the `counter` variable with other
        drawing elements to make magical images like this one.'
      courseF_artist_for10_2018: 'Free Play: Try using the `counter` variable with
        other drawing elements to make magical images like this one.'
      courseF_artist_for10_2019: 'Free Play: Try using the `counter` variable with
        other drawing elements to make magical images like this one.'
      courseF_artist_for1_2018: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for1_2019: Experiment with the `for` loop and play with the `counter`
        variable.
      courseF_artist_for2: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for2_2018: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for2_2019: Create this stack of triangles that goes from 50 pixel
        to 100 pixel sides.
      courseF_artist_for3: 'These triangles go from 20 pixel sides to 200 pixel sides,
        and each triangle is 20 pixels larger than the last. '
      courseF_artist_for3_2018: 'These triangles go from 20 pixel sides to 200 pixel
        sides, and each triangle is 20 pixels larger than the last. '
      courseF_artist_for3_2019: 'These triangles go from 20 pixel sides to 200 pixel
        sides, and each triangle is 20 pixels larger than the last. '
      courseF_artist_for4: 'These squares start at 15 pixels long. The largest is
        300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for4_2018: 'These squares start at 15 pixels long. The largest
        is 300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for4_2019: 'These squares start at 15 pixels long. The largest
        is 300 pixels long, and each square is 15 pixels larger than the last. '
      courseF_artist_for5: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for5_2018: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for5_2019: Just one little change to the code from the last image
        can create this drawing. Can you figure out what that change is?
      courseF_artist_for6: Recreate your code from the last level, but turn 89 degrees
        to create this twisted square spiral.
      courseF_artist_for6_2018: Recreate your code from the last level, but turn 89
        degrees to create this twisted square spiral.
      courseF_artist_for6_2019: Recreate your code from the last level, but turn 89
        degrees to create this twisted square spiral.
      courseF_artist_for7: Gjør tre små endringer i koden fra forrige nivå for å få
        til dette!
      courseF_artist_for7_2018: Gjør tre små endringer i koden fra forrige nivå for
        å få til dette!
      courseF_artist_for7_2019: Gjør tre små endringer i koden fra forrige nivå for
        å få til dette!
      courseF_artist_for8: Take the angle down to 72 degrees to get a spiraled pentagon.
      courseF_artist_for8_2018: Take the angle down to 72 degrees to get a spiraled
        pentagon.
      courseF_artist_for8_2019: Take the angle down to 72 degrees to get a spiraled
        pentagon.
      courseF_artist_for9: "**Inspiration:**  Use the counter inside the `set alpha`
        block to get this faded center."
      courseF_artist_for9_2018: "**Inspiration:**  Use the counter inside the `set
        alpha` block to get this faded center."
      courseF_artist_for9_2019: "**Inspiration:**  Use the counter inside the `set
        alpha` block to get this faded center."
      courseF_artist_for_challenge1: Finner du ut hvordan du kan gjenskape denne tegningen?
      courseF_artist_for_challenge1_2018: Finner du ut hvordan du kan gjenskape denne
        tegningen?
      courseF_artist_for_challenge1_2019: Finner du ut hvordan du kan gjenskape denne
        tegningen?
      courseF_artist_for_challenge2: Kan du finne ut hvordan du kan lage denne tegningen
        med en enkelt løkke?
      courseF_artist_for_challenge2_2018: Kan du finne ut hvordan du kan lage denne
        tegningen med en enkelt løkke?
      courseF_artist_for_challenge2_2019: Kan du finne ut hvordan du kan lage denne
        tegningen med en enkelt løkke?
      courseF_artist_fwp1: Edit the function 'draw a square' to find bugs.
      courseF_artist_fwp2: Edit the function to accept a parameter called `length`.
      courseF_artist_fwp2_predict1: Edit the function to accept a parameter called
        `length`.
      courseF_artist_fwp3: Create a function called 'draw a square' and use it to
        outline these four boxes using parameters.
      courseF_artist_fwp4: Edit this function to add a parameter for the number of
        sides in your polygon.
      courseF_artist_fwp5: 'Use the function from the last puzzle to draw this series
        of shapes.  '
      courseF_artist_fwp6: 'Challenge: Edit `draw a spiral edge` to use `length` and
        `sides` parameters, then recreate these shapes.'
      courseF_artist_fwp7: Finish off the `draw a spiral edge` function to also ask
        for a minimum length for the center of the spiral.
      courseF_artist_fwp8: Can you figure out how to make this drawing using the function
        that you just created?
      courseF_artist_fwp9: 'Freeplay: Draw something awesome! Play with the pen width
        to see how different your drawings look!'
      courseF_artist_fwp_challenge1: Can you figure out how this program works?
      courseF_artist_fwp_challenge2: Use what you learned in the previous level to
        draw an image like this.
      courseF_artist_variables10: 'Here''s your code from the last puzzle.  Try editing
        the variable in other ways.  '
      courseF_artist_variables10_2018: 'Here''s your code from the last puzzle.  Try
        editing the variable in other ways.  '
      courseF_artist_variables10_2019: 'Here''s your code from the last puzzle.  Try
        editing the variable in other ways.  '
      courseF_artist_variables2: 'Now draw three of those triangles right next to
        each other.   '
      courseF_artist_variables2_2018: 'Now draw three of those triangles right next
        to each other.   '
      courseF_artist_variables2_2019: 'Now draw three of those triangles right next
        to each other.   '
      courseF_artist_variables3: Move the length of 50 into a variable so we can use
        it in the next few puzzles.
      courseF_artist_variables3_2018: Move the length of 50 into a variable so we
        can use it in the next few puzzles.
      courseF_artist_variables3_2019: Move the length of 50 into a variable so we
        can use it in the next few puzzles.
      courseF_artist_variables4: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables4_2018: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables4_2019: Now, use the `length` variable to have the artist
        jump forward and down by `length` pixels between triangles.
      courseF_artist_variables5: Add another set of loops at the end of your code
        to add three more triangles. This time, move forward and up!
      courseF_artist_variables5_2018: Add another set of loops at the end of your
        code to add three more triangles. This time, move forward and up!
      courseF_artist_variables5_2019: Add another set of loops at the end of your
        code to add three more triangles. This time, move forward and up!
      courseF_artist_variables6: 'Now make the triangles to be 60 pixels wide, with
        60 pixel jumps.  '
      courseF_artist_variables6_2018: 'Now make the triangles to be 60 pixels wide,
        with 60 pixel jumps.  '
      courseF_artist_variables6_2019: 'Now make the triangles to be 60 pixels wide,
        with 60 pixel jumps.  '
      courseF_artist_variables6a: Build this design where the squares have 80 pixel
        sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables6a_2018: Build this design where the squares have 80
        pixel sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables6a_2019: Build this design where the squares have 80
        pixel sides and the artist jumps 80 pixels over and down between each one.
      courseF_artist_variables7: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables7_2018: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables7_2019: 'Draw a triangle with 150 pixels sides. '
      courseF_artist_variables8: Rebuild the triangle code from the last puzzle, but
        this time use the `set length to` block to reset the `length` variable to
        `length`+10 at the end of each loop iteration.
      courseF_artist_variables8_2018: Rebuild the triangle code from the last puzzle,
        but this time use the `set length to` block to reset the `length` variable
        to `length`+10 at the end of each loop iteration.
      courseF_artist_variables8_2019: Rebuild the triangle code from the last puzzle,
        but this time use the `set length to` block to reset the `length` variable
        to `length`+10 at the end of each loop iteration.
      courseF_artist_variables9: See what happens when you repeat the code from the
        last puzzle 30 times instead of only 3!  Feel free to make your lines any
        color or pattern for some extra zest.
      courseF_artist_variables9_2018: See what happens when you repeat the code from
        the last puzzle 30 times instead of only 3!  Feel free to make your lines
        any color or pattern for some extra zest.
      courseF_artist_variables9_2019: See what happens when you repeat the code from
        the last puzzle 30 times instead of only 3!  Feel free to make your lines
        any color or pattern for some extra zest.
      courseF_artist_variablesFP: "**Freeplay:** Take what you've learned and make
        your own drawing. "
      courseF_artist_variablesFP_2018: "**Freeplay:** Take what you've learned and
        make your own drawing. "
      courseF_artist_variablesFP_2019: "**Freeplay:** Take what you've learned and
        make your own drawing. "
      courseF_artist_variables_challenge1: Can you create a `length` variable and
        use it to create this pattern?
      courseF_artist_variables_challenge1_2018: Can you create a `length` variable
        and use it to create this pattern?
      courseF_artist_variables_challenge1_2019: Can you create a `length` variable
        and use it to create this pattern?
      courseF_artist_variables_challenge2: You've now learned everything you need
        to know to make a pattern like this!
      courseF_artist_variables_challenge2_2018: You've now learned everything you
        need to know to make a pattern like this!
      courseF_artist_variables_challenge2_2019: You've now learned everything you
        need to know to make a pattern like this!
      courseF_bee_conditionals10: Collect all of the nectar and make all of the honey.
      courseF_bee_conditionals1_predict1: Check to see if there's a flower under the
        cloud. If there's a flower, get nectar.
      courseF_bee_conditionals2: 'Check underneath each cloud to see if it is hiding
        a flower before you get nectar.  '
      courseF_bee_conditionals3: 'Help the bee collect all of the nectar. '
      courseF_bee_conditionals4: Get all of the nectar using as few blocks as possible.
      courseF_bee_conditionals5: Collect all of the nectar using as few blocks as
        possible
      courseF_bee_conditionals7_predict2: Use the `if/else` block to collect nectar
        at flowers and make honey at honeycomb.
      courseF_bee_conditionals8: |-
        Collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      courseF_bee_for1: Collect the nectar from each flower using the fewest blocks
        possible.
      courseF_bee_for10: "**Challenge:** Take what you've learned about `for` loops
        and try to solve this problem. "
      courseF_bee_for10_2018: "**Challenge:** Take what you've learned about `for`
        loops and try to solve this problem. "
      courseF_bee_for10_2019: "**Challenge:** Take what you've learned about `for`
        loops and try to solve this problem. "
      courseF_bee_for11: What should your increment be to collect 15, then 12, then
        9, 6, 3 nectar?
      courseF_bee_for11_2018: What should your increment be to collect 15, then 12,
        then 9, 6, 3 nectar?
      courseF_bee_for11_2019: What should your increment be to collect 15, then 12,
        then 9, 6, 3 nectar?
      courseF_bee_for1_2018: Collect the nectar from each flower using the fewest
        blocks possible.
      courseF_bee_for1_2019: Collect the nectar from each flower using the fewest
        blocks possible.
      courseF_bee_for2: Write the code to help the bee collect all of the nectar.
      courseF_bee_for2_2018: Write the code to help the bee collect all of the nectar.
      courseF_bee_for2_2019: Write the code to help the bee collect all of the nectar.
      courseF_bee_for4: Help the bee collect all of the nectar.
      courseF_bee_for4_2018: Help the bee collect all of the nectar.
      courseF_bee_for4_2019: Help the bee collect all of the nectar.
      courseF_bee_for5: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for5_2018: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for5_2019: Use the `counter` variable twice to solve this puzzle.
      courseF_bee_for6: Try gathering this nectar by counting down from 5 to 1 by
        1.
      courseF_bee_for6_2018: Try gathering this nectar by counting down from 5 to
        1 by 1.
      courseF_bee_for6_2019: Try gathering this nectar by counting down from 5 to
        1 by 1.
      courseF_bee_for7: Try collecting these flowers using an increment of 2.
      courseF_bee_for7_2018: Try collecting these flowers using an increment of 2.
      courseF_bee_for7_2019: Try collecting these flowers using an increment of 2.
      courseF_bee_for8: Du har forstått dette! Hva må økningen være for å samle 3,
        6, 9, 12 og 15 nektar?
      courseF_bee_for8_2018: Du har forstått dette! Hva må økningen være for å samle
        3, 6, 9, 12 og 15 nektar?
      courseF_bee_for8_2019: Du har forstått dette! Hva må økningen være for å samle
        3, 6, 9, 12 og 15 nektar?
      courseF_bee_for9: Use the `counter` variable to navigate this garden with the
        fewest number of blocks possible.
      courseF_bee_for9_2018: Use the `counter` variable to navigate this garden with
        the fewest number of blocks possible.
      courseF_bee_for9_2019: Use the `counter` variable to navigate this garden with
        the fewest number of blocks possible.
      courseF_bee_for_challenge1: 'Use this `for loop` to collect all of the nectar. '
      courseF_bee_for_challenge1_2018: 'Use this `for loop` to collect all of the
        nectar. '
      courseF_bee_for_challenge1_2019: 'Use this `for loop` to collect all of the
        nectar. '
      courseF_bee_for_challenge2: Løs denne oppgaven med færrest mulig brikker.
      courseF_bee_for_challenge2_2018: Løs denne oppgaven med færrest mulig brikker.
      courseF_bee_for_challenge2_2019: Løs denne oppgaven med færrest mulig brikker.
      courseF_bee_functions2: Use the `get only nectar` function to collect the nectar
        from each flower.
      courseF_bee_functions3: Click "edit" to put code inside the `only make honey`
        function, then use it to solve this puzzle.
      courseF_bee_functions3a: Write a function that gets nectar if the bee is at
        a flower, otherwise it gets honey.  Use your function to solve the puzzle!
      courseF_bee_functions4: Funksjonen "flytt og hent nektar" snur bien, samleren
        inn nektar og returnerer til der den startet. Bruk denne funksjonen til å
        samle inn all nektaren.
      courseF_bee_functions5a: Use the `move and check` function to collect all of
        the nectar.
      courseF_bee_functions6: Help the bee through the maze by turning left at flowers
        and right at honeycomb.
      courseF_bee_functions7: Rebuild your function from the last puzzle to solve
        this maze.
      courseF_bee_functions8a: Collect all the nectar or make all of the honey!
      courseF_bee_functionsPre7: Now try building a function to solve this maze.  How
        is it different from last time?
      courseF_bee_functions_challenge1: Create a new function to collect all the nectar
        and honey while there is a path ahead.
      courseF_bee_functions_challenge2: Use everything you have learned to complete
        this puzzle!
      courseF_bee_fwp2: Pull this code into a function, then call the function to
        check this row for nectar.
      courseF_bee_fwp3: Let's see if the function makes collecting these three rows
        of nectar any easier.
      courseF_bee_fwp4: Add a `length` parameter to the function so that it will still
        work when the row is a different length.
      courseF_bee_fwp5: Use this function to collect the nectar.
      courseF_bee_fwp6: Build a short and sweet solution to this puzzle.
      courseF_bee_fwp7: "**Challenge:** Modify your function to make honey as well."
      courseF_bee_fwp8: Use your new function to solve this spiral.
      courseF_bee_fwp9_predict1: Use your new function to solve this puzzle.
      courseF_bee_fwp_challenge1: Use one `for loop` in a function with a `length`
        parameter to collect all of the corn.
      courseF_bee_fwp_challenge2: 'Use one `for loop` in a function with a `length`
        parameter to collect all of the vegetables in each row. '
      courseF_bee_variables_1_2018: Finish this code so that the bee can collect all
        of the honey and nectar.
      courseF_bee_variables_1_2019: Finish this code so that the bee can collect all
        of the honey and nectar.
      courseF_bee_variables_2_2018: Edit your solution in one place so that the bee
        can collect all of the honey and nectar.
      courseF_bee_variables_2_2019: Edit your solution in one place so that the bee
        can collect all of the honey and nectar.
      courseF_bee_variables_3_2018: Subtract one from the variable each time through
        the loop if you want to use the same function to solve this level.
      courseF_bee_variables_3_2019: Subtract one from the variable each time through
        the loop if you want to use the same function to solve this level.
      courseF_bee_variables_4_2018: Edit the code to work for this puzzle.
      courseF_bee_variables_4_2019: Edit the code to work for this puzzle.
      courseF_bee_variables_5_2018: Create your own code to solve this puzzle
      courseF_bee_variables_5_2019: Create your own code to solve this puzzle
      courseF_bee_variables_6_2018: "**Challenge** Now give this puzzle a try!"
      courseF_bee_variables_6_2019: "**Challenge** Now give this puzzle a try!"
      courseF_bee_variables_7_2018: This puzzle is a little different.  What do you
        need to do to solve it?
      courseF_bee_variables_7_2019: This puzzle is a little different.  What do you
        need to do to solve it?
      courseF_bee_variables_8_2018: How many nectar will the bee collect from this
        flower?
      courseF_bee_variables_8_2019: How many nectar will the bee collect from this
        flower?
      courseF_playlab_variables1a: Variables can be used to store text that you want
        to use later.  Have Kiki, the soccer player,  scream "Goal!" by assigning
        that text to the `shout` variable.
      courseF_playlab_variables2b: Insert the variable `color` into the middle of
        a sentence by putting it into the empty slot in the `join` block.
      courseF_playlab_variables3b_josh: 'Help Kiki have a conversation with Brian
        by using the variable `age` in all of the places where age `12` should be
        used. '
      courseF_playlab_variables4b: Put the variables in the correct places to create
        this conversation.
      courseF_playlab_variables5c: Let's combine the `ask` block with an `if/else`
        statement to have some fun!
      courseF_playlab_variables6c: In the rest of this stage, we're going to build
        a game that you control!
      courseF_playlab_variables7b: Create some questions and weave the answers together
        into your very own story.
      courseF_playlab_variables7c: Make the game do something by asking the user to
        guess a color.
      courseF_playlab_variables8c: Use the variables to make the game more personal.
      courseF_playlab_variables_challenge1: 'Use these blocks to make the actors share
        a knock-knock joke. '
      courseF_playlab_variables_challenge2: This game will use variables to keep track
        of points.  Tag Cat to get 2 points. Tag Penguin to get 3 points.  When Cat
        and Penguin touch, take points away. Get exactly 10 points to win!
      courseF_video_createFunctions: We don't have a video for creating functions,
        yet. This is a placeholder.
      coursea_maze_ramp1_2018: For this puzzle, snap the blocks together and click
        "▶ Run"!
      coursea_maze_ramp1_2019: For this puzzle, snap the blocks together and click
        "▶ Run"!
      express_maze_debugging9_2019: Bruk blokkene i verktøykassen til å bygge et program.
        Få ekornet til nøtta.
      flappy_1: Fest en blokk til "når klikk"-blokken og trykk "Start". Klikk eller
        trykk på skjermen for å fly Flakse til målet.
      flappy_11: Lag ditt eget Flappy-spill! Du kan endre alle bilder og alle regler,
        selv tyngdekraften. Når du er ferdig, klikk Fullfør og du kan la vennene dine
        prøve spillet på sine telefoner.
      flappy_2: Vi har nå lagt til en bakke.  Fest en blokk til "når traff bakken"-blokken.
        Koden må "Avslutte spillet" når Flappy krasjer.
      flappy_3: Med "Når kjørt"-blokken kan du kjøre kode når spillet starter.  Prøv
        å sette farten og flaks til målet.
      flappy_4: Flappy vil fly gjennom hindringer med mindre du skriver kode for å
        få ham til å krasje. Fest en blokk til "når treffer en hindring"-blokken.
        Koden må "Avslutte spillet" når Flappy krasjer inn i det første rørsettet.
      flappy_5: La oss legge til en resultattavle og telle poeng når Flappy kommer
        seg forbi hindringer. Utvid blokken "når passert hindring" og se at du får
        poeng når du flyr Flappy forbi de første rørene.
      flappy_6: Se om du fortsatt kan få poeng hvis Flappy flakser mer eller mindre.
      flappy_7: Prøv å endre scenen ved å feste en annen blokk til "når den kjører"-blokken.
      flappy_8: Du kan angi visuelle effekter når som helst, ikke bare når spillet
        starter. Prøv å sette en tilfeldig scene når andre hendelser skjer, for eksempel
        når du passerer en hindring.
      flappy_9: For å blande ting, når du treffer et hinder, i stedet for å avslutte
        spillet Prøv innstillingen score tilbake til 0.
      frozen circle: En sirkel er en spesiell form. Klarer du finne ut hvilket tall
        som skal erstatte spørsmålstegnene for å tegne en sirkel?
      frozen circle function: Bruk "Lag ny sirkel"-blokken for å lage 10 overlappende
        sirkler. Ikke glem å gå fremover mellom sirklene.
      frozen circle function in circle: Nå skal vi lage 20 overlappende sirkler ved
        å snu 18 grader mellom hver sirkel.
      frozen circle function with parameter: Her er en "Lag sirkel"-blokk som kan
        lage sirkler av ulike størrelser. Klarer du å bruke den til å lage en liten
        sirkel med størrelse 5 og en større sirkel med størrelse 10?
      frozen cross: Putt en "gjenta"-blokk rundt disse kommandoene for å lage et plusstegn.
        La du merke til at Elsa kan bevege seg både framover og bakover?
      frozen cross rotate: Prøv å gjenta det 10 ganger. Hvor mange grader må du snu
        mellom hver linje?
      frozen cross rotate dense: 'La oss gjenta det 90 ganger! Hvor mange ganger går
        90 opp i 360? Hint: Det er et ganske lite tall.'
      frozen diamond: Bruk en gjenta-brikke rundt disse brikkene for å lage et parallelogram.
        Det er som et rektangel hvor hjørnene har forskjellige vinkler. Denne har
        vinkler på 60 grader og 120 grader i stedet for bare 90 graders vinkler.
      frozen diamond mini snowflake: Visste du at alle snøfnugg har forskjellige former?
        La oss lage et nytt snøfnugg ved å bruke enda en "Gjenta"-brikke for å repetere
        et parallellogram 4 ganger. Snu 90 grader mellom hvert parallellogram.
      frozen diamond snowflake: Nå skal vi lage et snøfnugg ved å bruke "Gjenta"-blokken
        til å lage et parallelogram 10 ganger ved å snu mot høyre 36 grader etter
        hvert parallelogram.
      frozen freeplay: "Du er nå offisielt blitt en mesterkunstner! \nLag et vinterparadis!"
      frozen line: Hei! Jeg heter Elsa av Arendelle. Hjelp meg å lage en enkelt linje.
      frozen perpendicular: Nå skal vi prøve å lage to linjer som står 90 grader i
        forhold til hverandre. Du må bruke "Snu"-brikken i tillegg til "Flytt"-brikken.
      frozen snowflake branch: Prøv å bruke "lag en snøflakgren"-blokken for å lage
        tre grener som begynner å se ut som et snefnugg.
      frozen snowflake full: Nå skal vi repetere det 8 ganger for å lage et nydelig
        snefnugg!
      frozen snowflower: Det er mulig å lage intrikate snømønstre ved  å sette sammen
        enkle former. Kan du lage et mønster ved å repetere 5 sirkler med størrelse
        5 og 5 sirkler med størrelse 10?
      frozen square iterative: Det ser ut til vi har laget et halvt kvadrat. La oss
        sette sammen fire linjer for å lage et kvadrat.
      frozen square loop: Hei, jeg heter Anna av Arendelle! La oss lage et kvadrat
        ved hjelp av "Gjenta" blokken som bruker færre blokker. Hvor mange ganger
        trenger "Gjenta" blokken gå gjennom blokkene inni for å lage et kvadrat?
      frozen square loop 3x: La oss lage tre firkanter med spissen mot hverandre.
        Husk å snu 120 grader før hvert nytt firkant.
      frozen square snowflake: Får du til å lage et snøfnugg ved å bruke "repeter"-blokken
        til å lage 10 kvadrater og "Snu"-blokken for å snu deg 36 grader mellom hvert
        kvadrat?
      grade2_collector_10: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_10_2018: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_10_2019: You're almost done! Collect as many pieces of treasure
        as you can to finish the stage!
      grade2_collector_A: Help Laurel collect all of the treasure.
      grade2_collector_A_2018: Help Laurel collect all of the treasure.
      grade2_collector_A_2019: Help Laurel collect all of the treasure.
      grade5_artist_binary11: 'Fritt splitt: Her er et lerret med høyere oppløsning
        du kan tegne på - 16 biter ganger 16 biter!'
      grade5_artist_binary4: Kan du tegne dette mønsteret ved å kjøre en løkke over
        en tresifret binærstreng (0-er og 1-erer)?
      grade5_artist_binary5: Hver binærstreng representerer en rad i dette bildet.
        Kan du ordne strengene slik at de tegner et smile-ansikt i stedet for et trist
        ansikt?
      grade5_artist_binary8: Fullfør tegningen.
      grade5_artist_binary9: "Her er et lerret å tegne på med høyere oppløsning -
        16 ganger 16 piskler!\\\r\n\\\r\nSe hva som skjer når vi blir kreative med
        bitene!"
      grade5_pixelation: Encode an image of anything you like using binary. The binary
        language will be represented with '0' and '1' only.
      iceage_click_hello: 'Can you help Sid call for his friends when you click on
        him? '
      iceage_free_play: 'Time to create your own game or story! '
      iceage_hello1: Help Sid say "Hello!" by dragging the `say` block out and connecting
        it to the bottom of the `when run` event.
      iceage_hello2: Help Manny and Sid greet each other by using the the `actor ___
        say` block twice.
      iceage_move_events: Write the code to help Scrat get all of the acorns!
      iceage_move_to_actor: Connect a block to the `when actor touches` event to play
        a sound when Diego finds Manny.
      iceage_move_to_flag: Scrat is looking for his acorn! Can you help him move the
        last 200 pixels?
      iceage_repeat: Help Granny get some exercise by moving left and right repeatedly.
      iceage_sound_and_points: 'Can you finish this program to make it so that you
        both **play a sound** and **score a point** when Sid and Granny collide? '
      iceage_throw_hearts: Use the `actor __ throw` command to have Sid (actor 1)
        throw hearts at Granny (actor 2) and set Granny's mood to happy when she gets
        hit with them.
      iceage_warn_ice_age: Change the scene to an icy background and set Sid’s (actor
        1) speed to fast.
      k-1 maze 1: Kan du bevege meg til vest for å komme til grisen?
      mike3bit: We start you with the 4x2 image Maddie was creating, but we've left
        out the last few pixels. Finish off the image by figuring out which colors
        are missing and encoding them.
      mike3bitbird: Here's an example of an image made with 3-bit color. Try changing
        it to understand how it works. If you want to reset the image, press "Start
        Over".
      mike3bitfreeplay: Make something awesome and share it with your classmates!
        You can copy and paste the value of a pixel to use it repeatedly.
      mike3bitmario: "A careless binary coder typed in ONE extra 0 or 1 somewhere
        within this image's data. The extra bit that is causing Mario to glitch out!
        \n\nDelete the extra bit to restore Mario back to normal!"
      ramp_artist_loops1: Move forward by 60 pixels to complete this puzzle.
      ramp_artist_loops1_2018: Move forward by 60 pixels to complete this puzzle.
      ramp_artist_loops1_2019: Move forward by 60 pixels to complete this puzzle.
      ramp_artist_loops2: Move forward five times and make this colored line.
      ramp_artist_loops2_2018: Move forward five times and make this colored line.
      ramp_artist_loops2_2019: Move forward five times and make this colored line.
      ramp_artist_loops3: Use a `repeat` loop to draw five colored dashes.
      ramp_artist_loops3_2018: Use a `repeat` loop to draw five colored dashes.
      ramp_artist_loops3_2019: Use a `repeat` loop to draw five colored dashes.
      ramp_artist_loops4: What happens when you add a 72 degree right turn after everything
        else inside your loop?
      ramp_artist_loops4_2018: What happens when you add a 72 degree right turn after
        everything else inside your loop?
      ramp_artist_loops4_2019: Create this star pattern by looping a sequence of "move
        forward" and "turn right by 144 degrees" blocks.
      ramp_artist_loops5: Use loops to draw this staircase.
      ramp_artist_loops5_2018: Use loops to draw this staircase.
      ramp_artist_loops5_2019: Use loops to draw this staircase.
      ramp_artist_loops6: Edit your loop to draw this staircase.
      ramp_artist_loops6_2018: Edit your loop to draw this staircase.
      ramp_artist_loops6_2019: Edit your loop to draw this staircase.
      ramp_artist_loops7: Look for a pattern and make this code shorter using loops!
      ramp_artist_loops7_2018: Look for a pattern and make this code shorter using
        loops!
      ramp_artist_loops7_2019: Look for a pattern and make this code shorter using
        loops!
      ramp_artist_loops8: Look for a pattern and make this code shorter using loops.
      ramp_artist_loops8_2018: Look for a pattern and make this code shorter using
        loops.
      ramp_artist_loops8_2019: Look for a pattern and make this code shorter using
        loops.
      ramp_artist_loops9: Solve this puzzle by drawing a square.
      ramp_artist_loops9_2018: Solve this puzzle by drawing a square.
      ramp_artist_loops9_2019: Solve this puzzle by drawing a square.
